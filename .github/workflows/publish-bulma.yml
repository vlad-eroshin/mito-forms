name: Publish Bulma Package

on:
  push:
    tags:
      - 'bulma-v*'

permissions:
  contents: write

env:
  NPM_TOKEN: ${{ secrets.NPMJS_TOKEN }}

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
        package:
          - bulma

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10.8.1
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        working-directory: libs/bulma
        run: pnpm install

      - name: Bump version for bulma package
        if: matrix.package == 'bulma'
        working-directory: libs/bulma
        run: |
          VERSION=${GITHUB_REF#refs/tags/bulma-v}
          jq --arg version "$VERSION" '.version = $version' package.json > package.json.tmp && mv package.json.tmp package.json

      - name: Update core dependency to latest version
        if: matrix.package == 'bulma'
        working-directory: libs/bulma
        run: |
          CORE_VERSION=$(node -p "require('../../libs/core/package.json').version")
          echo "Updating @mito-forms/core to version $CORE_VERSION"
          jq --arg version "$CORE_VERSION" '.dependencies["@mito-forms/core"] = "^" + $version' package.json > package.json.tmp && mv package.json.tmp package.json

      - name: Get branch name
        if: matrix.package == 'bulma'
        run: |
          BRANCH_NAME=$(git for-each-ref --format='%(refname:short)' refs/remotes/origin/HEAD)
          echo "BRANCH_NAME=${BRANCH_NAME#origin/}" >> $GITHUB_ENV

      - name: Commit version bump
        if: matrix.package == 'bulma'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git fetch origin main
          git checkout main
          git add libs/bulma/package.json
          git commit -m "chore: bump bulma version to ${GITHUB_REF#refs/tags/bulma-v}"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: pnpm --filter @mito-forms/${{ matrix.package }} build

      - name: Configure npm
        working-directory: libs/${{ matrix.package }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc

      - name: Publish Bulma to npm
        working-directory: libs/${{ matrix.package }}
        run: pnpm publish:bulma --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }} 