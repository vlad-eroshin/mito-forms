"use strict";(self.webpackChunk_mito_forms_bulma=self.webpackChunk_mito_forms_bulma||[]).push([[131],{"./src/Editor.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Basic: () => (/* binding */ Basic),\n  CollapsibleFieldsets: () => (/* binding */ CollapsibleFieldsets),\n  ConditionalAttributes: () => (/* binding */ ConditionalAttributes),\n  DataSourceUsage: () => (/* binding */ DataSourceUsage),\n  OnePageLayout: () => (/* binding */ OnePageLayout),\n  SwitchComponent: () => (/* binding */ SwitchComponent),\n  TabbedLayout: () => (/* binding */ TabbedLayout),\n  ThrottleChange: () => (/* binding */ ThrottleChange),\n  UnsupportedComponent: () => (/* binding */ UnsupportedComponent),\n  ValuesFromJsonPath: () => (/* binding */ ValuesFromJsonPath),\n  WithListEditor: () => (/* binding */ WithListEditor),\n  WithReducer: () => (/* binding */ WithReducer),\n  __namedExportsOrder: () => (/* binding */ __namedExportsOrder),\n  \"default\": () => (/* binding */ Editor_stories)\n});\n\n// EXTERNAL MODULE: ../../node_modules/.pnpm/@mito-forms+core@0.2.21-beta_typescript@5.8.3/node_modules/@mito-forms/core/dist/index.js + 38 modules\nvar dist = __webpack_require__(\"../../node_modules/.pnpm/@mito-forms+core@0.2.21-beta_typescript@5.8.3/node_modules/@mito-forms/core/dist/index.js\");\n;// ./src/__data__/mockInputObject.json\nconst mockInputObject_namespaceObject = /*#__PURE__*/JSON.parse('{\"path\":{\"to\":{\"fieldsetData\":{\"label\":\"Label Text\",\"value\":\"Value Text\"}}},\"other\":{\"numericValue1\":10,\"textValue\":\"textValue123\"},\"otherPath\":{\"to\":{\"values\":{\"numericValue\":12,\"textValue\":\"Text Value\"}}},\"someData\":{\"to\":{\"listOfOptions\":[{\"label\":\"Label Text 1\",\"value\":1},{\"label\":\"Label Text 2\",\"value\":2},{\"label\":\"Label Text 3\",\"value\":3}],\"checkListOfOptions\":[{\"label\":\"Check Option one\",\"value\":1},{\"label\":\"Check Option two\",\"value\":2},{\"label\":\"Check Option three\",\"value\":3}],\"switchListOfOptions\":[{\"label\":\"Switch Option one\",\"value\":1},{\"label\":\"Switch Option two\",\"value\":2},{\"label\":\"Switch Option three\",\"value\":3}]}}}');\n;// ./src/__metadata__/basic.ts\nconst basicEditor = {\n    displayAs: 'tabSet',\n    forms: [\n        {\n            id: 'form1',\n            title: 'Basic Form',\n            fieldSets: [\n                {\n                    name: 'fieldset1',\n                    fields: [\n                        {\n                            type: 'text',\n                            name: 'label',\n                            label: 'Label',\n                            required: true\n                        },\n                        {\n                            type: 'select',\n                            name: 'selector',\n                            label: 'Select Option',\n                            default: 1,\n                            options: [\n                                {\n                                    label: 'Option 1',\n                                    value: 1\n                                },\n                                {\n                                    label: 'Option 2',\n                                    value: 2\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/collapsibleFieldsets.ts\nconst editorWithCollapsibleFieldsets = {\n    displayAs: 'onePage',\n    forms: [\n        {\n            id: 'form',\n            title: 'Collapsible Fieldsets',\n            showTitle: true,\n            fieldSets: [\n                {\n                    name: 'collapsibleFieldSet',\n                    collapsible: true,\n                    collapsed: true,\n                    title: 'Fieldset collapsible',\n                    showTitle: true,\n                    fields: [\n                        {\n                            type: 'text',\n                            name: 'textInput',\n                            label: 'Text input'\n                        },\n                        {\n                            name: 'checkboxInput',\n                            label: 'Select some option',\n                            type: 'checkbox',\n                            options: [\n                                {\n                                    value: 'Check1',\n                                    label: 'Checkbox Option One'\n                                },\n                                {\n                                    value: 'Check2',\n                                    label: 'Checkbox Option Two'\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    name: 'otherFieldSet',\n                    collapsible: true,\n                    collapsed: false,\n                    title: 'Other Fieldset',\n                    showTitle: true,\n                    fields: [\n                        {\n                            type: 'select',\n                            name: 'optionsSelector',\n                            value: 'opt1',\n                            options: [\n                                {\n                                    value: 'opt1',\n                                    label: 'Selector Option One'\n                                },\n                                {\n                                    value: 'opt2',\n                                    label: 'Selector Option Two'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/dataSourceUsage.ts\nconst dataSourceUsage = {\n    displayAs: 'tabSet',\n    forms: [\n        {\n            id: 'form1',\n            title: 'Basic Form',\n            fieldSets: [\n                {\n                    name: 'fieldset1',\n                    fields: [\n                        {\n                            type: 'text',\n                            name: 'label',\n                            label: 'Label',\n                            required: true\n                        },\n                        {\n                            type: 'select',\n                            name: 'selector',\n                            label: 'Loading Options from DataSource',\n                            helpText: 'Delayed by 5 seconds',\n                            default: 1,\n                            options: [\n                                {\n                                    label: 'Option 1',\n                                    value: 1\n                                },\n                                {\n                                    label: 'Option 2',\n                                    value: 2\n                                }\n                            ],\n                            dataBindings: [\n                                {\n                                    datasourceId: 'selectorOptions',\n                                    targetProperty: 'options'\n                                }\n                            ]\n                        },\n                        {\n                            type: 'switchList',\n                            name: 'switchList',\n                            label: 'Loading Switch Options from DataSource',\n                            helpText: 'Delayed by 2 seconds',\n                            default: 1,\n                            options: [],\n                            dataBindings: [\n                                {\n                                    datasourceId: 'switchList',\n                                    targetProperty: 'options'\n                                }\n                            ]\n                        },\n                        {\n                            type: 'radio',\n                            name: 'radioList',\n                            label: 'Loading Radio List from DataSource',\n                            helpText: 'Delayed by 3  seconds',\n                            default: 1,\n                            options: [],\n                            dataBindings: [\n                                {\n                                    datasourceId: 'radioList',\n                                    targetProperty: 'options'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/editorWithConditions.ts\nconst editorWithConditions = {\n    displayAs: 'onePage',\n    activeForm: 'Form1',\n    forms: [\n        {\n            id: 'Form1',\n            fieldSets: [\n                {\n                    name: 'fieldset2',\n                    title: 'Fieldset With Title',\n                    showTitle: true,\n                    fields: [\n                        {\n                            label: \"Select value (Select 'option2' to show text field)\",\n                            name: 'selector',\n                            type: 'select',\n                            default: '1',\n                            options: [\n                                {\n                                    value: '1',\n                                    label: 'option 1'\n                                },\n                                {\n                                    value: '2',\n                                    label: 'option 2'\n                                }\n                            ]\n                        },\n                        {\n                            label: 'Switch value to Disable Field below',\n                            name: 'switchList',\n                            type: 'switchList',\n                            default: '1',\n                            options: [\n                                {\n                                    value: '1',\n                                    label: 'Disable Text Field One'\n                                },\n                                {\n                                    value: '2',\n                                    label: 'Disable Text Field Two'\n                                },\n                                {\n                                    value: '3',\n                                    label: 'Disable Text Field Three'\n                                }\n                            ]\n                        },\n                        {\n                            name: 'textInputD1',\n                            type: 'text',\n                            value: 'initialValue',\n                            label: 'Text Field One',\n                            required: true,\n                            disabled: `!{_STATE.Form1.fieldset2.data.switchList.contains(@, '1')}`\n                        },\n                        {\n                            name: 'textInputD4',\n                            type: 'text',\n                            value: 'initialValue',\n                            label: 'Text Field Two',\n                            required: true,\n                            disabled: `!{_STATE.Form1.fieldset2.data.switchList.contains(@, '2')}`\n                        },\n                        {\n                            name: 'textInputD3',\n                            type: 'text',\n                            value: 'initialValue',\n                            label: 'Text Field Three',\n                            required: true,\n                            disabled: `!{_STATE.Form1.fieldset2.data.switchList.contains(@, '3')}`\n                        }\n                    ]\n                },\n                {\n                    name: 'fieldset1',\n                    title: 'Other fieldset',\n                    showTitle: true,\n                    fields: [\n                        {\n                            name: 'textInput',\n                            type: 'text',\n                            value: 'initialValue',\n                            label: \"Text input (shown only when 'option2' selected)\",\n                            required: true,\n                            render: `!{_STATE.Form1.fieldset2.data.selector=='2'}`\n                        },\n                        {\n                            name: 'switchInput',\n                            type: 'switch',\n                            label: 'Show yes/no',\n                            value: true\n                        },\n                        {\n                            name: 'oneMoreConditional',\n                            type: 'text',\n                            label: 'Test Label',\n                            render: '!{_STATE.Form1.fieldset1.data.switchInput}'\n                        },\n                        {\n                            name: 'showFieldset3',\n                            type: 'switch',\n                            label: 'Show/Hide FieldSet below',\n                            value: false\n                        }\n                    ]\n                },\n                {\n                    name: 'fieldset3',\n                    title: 'Fieldset Displayed when the Switch is on',\n                    showTitle: true,\n                    render: '!{_STATE.Form1.fieldset1.data.showFieldset3}',\n                    fields: [\n                        {\n                            label: 'Option Selector',\n                            name: 'selectorField',\n                            type: 'select',\n                            default: '1',\n                            options: [\n                                {\n                                    value: '1',\n                                    label: 'Choice One'\n                                },\n                                {\n                                    value: '2',\n                                    label: 'Choice Two'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/jsonPathRetrieval.ts\nconst editorWithJsonPath = {\n    displayAs: 'onePage',\n    forms: [\n        {\n            id: 'form',\n            title: 'Form using JSON Path to access values',\n            showTitle: true,\n            fieldSets: [\n                {\n                    title: 'Path to fieldset data ($.path.to.fieldsetData)',\n                    name: 'jsonPathFieldset',\n                    jsonPath: 'path.to.fieldsetData',\n                    showTitle: true,\n                    fields: [\n                        {\n                            type: 'staticText',\n                            label: 'Label',\n                            name: 'label'\n                        },\n                        {\n                            type: 'text',\n                            label: 'Value',\n                            name: 'value'\n                        }\n                    ]\n                },\n                {\n                    title: 'Access data per field',\n                    name: 'jsonPathPerField',\n                    showTitle: true,\n                    fields: [\n                        {\n                            type: 'staticText',\n                            label: 'Access numeric value',\n                            helpText: `other.numericValue1`,\n                            name: 'numericValue',\n                            value: '!{other.numericValue1}'\n                        },\n                        {\n                            type: 'text',\n                            label: 'Text Value',\n                            helpText: 'Json path other.textValue',\n                            name: 'textValue',\n                            value: '!{other.textValue}'\n                        },\n                        {\n                            type: 'select',\n                            name: 'selector',\n                            label: 'Selector ',\n                            helpText: 'Retrieves options from $.someData.to.listOfOptions',\n                            options: '!{someData.to.listOfOptions}',\n                            value: 1\n                        },\n                        {\n                            type: 'checkbox',\n                            name: 'checkboxList',\n                            label: 'Check List',\n                            helpText: 'Options loaded from $.someData.to.listOfOptions',\n                            options: '!{someData.to.listOfOptions}',\n                            value: 1\n                        },\n                        {\n                            type: 'radio',\n                            name: 'radioList',\n                            label: 'Radio buttons',\n                            helpText: 'Retrieves options from ($.someData.to.listOfOptions)',\n                            options: '!{someData.to.listOfOptions}',\n                            value: 1\n                        },\n                        {\n                            type: 'switch',\n                            name: 'switchList',\n                            label: 'Switch List',\n                            helpText: 'Retrieves options from ($.someData.to.switchListOfOptions)',\n                            options: '!{someData.to.switchListOfOptions}',\n                            value: 1\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n// EXTERNAL MODULE: ../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/compose.js + 20 modules\nvar compose = __webpack_require__(\"../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/compose.js\");\n;// ./src/__metadata__/staticText.ts\n\nconst staticTextEditor = {\n    activeForm: 'widgetParams',\n    forms: [\n        {\n            id: 'widgetParams',\n            title: 'Form with Reducer',\n            fieldSets: [\n                {\n                    name: 'widgetParams',\n                    jsonPath: 'widgetParams',\n                    fields: [\n                        {\n                            type: 'text',\n                            name: 'label',\n                            label: 'Label',\n                            value: '!{widgetParams.widgetParams.data.label}'\n                        },\n                        {\n                            type: 'text',\n                            name: 'text',\n                            label: 'Value',\n                            value: '!{widgetParams.widgetParams.data.text}'\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {\n        widgetParams: {\n            widgetParams: (editorData, fieldSetData)=>{\n                const setLabel = (label)=>{\n                    return function(data) {\n                        return {\n                            ...data,\n                            widgetParams: {\n                                ...data.widgetParams,\n                                label\n                            }\n                        };\n                    };\n                };\n                const setText = (text)=>{\n                    return function(data) {\n                        return {\n                            ...data,\n                            widgetParams: {\n                                ...data.widgetParams,\n                                text\n                            }\n                        };\n                    };\n                };\n                return compose/* default */.A(setLabel(fieldSetData.label), setText(fieldSetData.text))(editorData);\n            }\n        }\n    }\n};\n\n;// ./src/__metadata__/tabbedLayout.ts\nconst tabbedLayout = {\n    displayAs: 'tabSet',\n    activeForm: 'Form1',\n    forms: [\n        {\n            id: 'Form1',\n            title: 'First Form',\n            fieldSets: [\n                {\n                    name: 'fieldset1',\n                    fields: [\n                        {\n                            name: 'textInput',\n                            type: 'text',\n                            value: 'initialValue',\n                            label: 'Text input',\n                            required: true\n                        },\n                        {\n                            name: 'switchInput',\n                            type: 'switch',\n                            label: 'Switch on/of',\n                            value: true\n                        }\n                    ]\n                },\n                {\n                    name: 'fieldset2',\n                    title: 'Fieldset With Title',\n                    showTitle: true,\n                    fields: [\n                        {\n                            label: 'Select value',\n                            name: 'selector',\n                            type: 'select',\n                            default: '1',\n                            options: [\n                                {\n                                    value: '1',\n                                    label: 'option 1'\n                                },\n                                {\n                                    value: '2',\n                                    label: 'option 2'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            id: 'Form2',\n            title: 'Second Form',\n            fieldSets: [\n                {\n                    name: 'fieldset3',\n                    fields: [\n                        {\n                            name: 'radio',\n                            type: 'radio',\n                            default: '1',\n                            options: [\n                                {\n                                    value: '1',\n                                    label: 'option 1'\n                                },\n                                {\n                                    value: '2',\n                                    label: 'option 2'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/withListEditor.ts\nconst withListEditor = {\n    activeForm: 'widgetParams',\n    displayAs: 'tabSet',\n    forms: [\n        {\n            id: 'widgetParams',\n            title: 'Static Text',\n            fieldSets: [\n                {\n                    name: 'widgetParams',\n                    fields: [\n                        {\n                            type: 'text',\n                            name: 'label',\n                            label: 'Label'\n                        },\n                        {\n                            type: 'text',\n                            name: 'text',\n                            label: 'Value'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            id: 'listEditor',\n            title: 'List Editor',\n            fieldSets: [\n                {\n                    name: 'fieldset1',\n                    title: 'First Fieldset',\n                    jsonPath: 'fieldset1',\n                    fields: [\n                        {\n                            type: 'text',\n                            name: 'label',\n                            label: 'Label',\n                            required: true\n                        },\n                        {\n                            type: 'select',\n                            name: 'selector',\n                            label: 'Select Option',\n                            default: 1,\n                            options: [\n                                {\n                                    label: 'Option 1',\n                                    value: 1\n                                },\n                                {\n                                    label: 'Option 2',\n                                    value: 2\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    name: 'list',\n                    jsonPath: 'listOfData',\n                    type: 'fieldSetList',\n                    canDeleteRows: true,\n                    showHeader: true,\n                    label: 'Column Types',\n                    rowFieldset: {\n                        name: 'testListEditor',\n                        fields: [\n                            {\n                                type: 'staticText',\n                                name: 'field',\n                                label: 'Field Label'\n                            },\n                            {\n                                type: 'select',\n                                name: 'axisType',\n                                label: 'Axis Types',\n                                options: [\n                                    {\n                                        label: 'Quantitative',\n                                        value: 'quant'\n                                    },\n                                    {\n                                        label: 'Temporal',\n                                        value: 'temp'\n                                    },\n                                    {\n                                        label: 'Ordinal',\n                                        value: 'ordinal'\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ],\n    reducersMap: {\n        widgetParams: {\n            widgetParams: (editorData, fieldSetData)=>{\n                return {\n                    ...editorData,\n                    widgetParams: {\n                        ...fieldSetData\n                    }\n                };\n            }\n        }\n    }\n};\n\n// EXTERNAL MODULE: ./src/index.tsx + 16 modules\nvar src = __webpack_require__(\"./src/index.tsx\");\n;// ./src/Editor.stories.tsx\n\n\n\n\n\n\n\n\n\n\n\nconst meta = {\n  title: 'BULMA/FORM EDITOR',\n  component: dist/* FormEditorStory */.HA,\n  decorators: [],\n  parameters: {},\n  args: {\n    componentRegistry: src/* BULMA_REGISTRY */.S\n  }\n};\n/* harmony default export */ const Editor_stories = (meta);\nconst Basic = {\n  args: {\n    editorMetadata: {\n      ...basicEditor,\n      reducersMap: {}\n    },\n    initialData: {}\n  }\n};\nconst ThrottleChange = {\n  args: {\n    editorMetadata: {\n      ...basicEditor,\n      reducersMap: {}\n    },\n    throttleChange: true,\n    initialData: {}\n  }\n};\nconst TabbedLayout = {\n  args: {\n    editorMetadata: tabbedLayout,\n    initialData: {}\n  }\n};\nconst OnePageLayout = {\n  args: {\n    editorMetadata: {\n      ...tabbedLayout,\n      forms: [{\n        ...tabbedLayout.forms[0],\n        showTitle: true\n      }, {\n        ...tabbedLayout.forms[1],\n        showTitle: true\n      }],\n      displayAs: 'onePage'\n    },\n    initialData: {}\n  }\n};\nconst ConditionalAttributes = {\n  args: {\n    editorMetadata: editorWithConditions,\n    initialData: {}\n  }\n};\nconst WithReducer = {\n  args: {\n    editorMetadata: staticTextEditor,\n    initialData: {}\n  }\n};\nconst CollapsibleFieldsets = {\n  args: {\n    editorMetadata: editorWithCollapsibleFieldsets,\n    initialData: {}\n  }\n};\nconst ValuesFromJsonPath = {\n  args: {\n    editorMetadata: editorWithJsonPath,\n    initialData: {\n      ...mockInputObject_namespaceObject\n    }\n  }\n};\nconst missingFieldRegistry = {\n  ...src/* BULMA_REGISTRY */.S.inputFields,\n  textbox: undefined\n};\nconst UnsupportedComponent = {\n  args: {\n    editorMetadata: {\n      activeForm: 'test',\n      forms: [{\n        id: 'test',\n        title: 'Test Form',\n        fieldSets: [{\n          name: 'fieldset',\n          fields: [{\n            type: 'textbox',\n            name: 'textBox',\n            value: 'test',\n            label: 'Unsupported field Type'\n          }, {\n            type: 'text',\n            name: 'textInput',\n            value: 'Some Value',\n            label: 'Some other field'\n          }]\n        }]\n      }],\n      reducersMap: {}\n    },\n    componentRegistry: {\n      ...src/* BULMA_REGISTRY */.S,\n      inputFields: missingFieldRegistry\n    },\n    initialData: {\n      ...mockInputObject_namespaceObject\n    }\n  }\n};\nconst WithListEditor = {\n  args: {\n    editorMetadata: {\n      ...withListEditor,\n      reducersMap: {\n        widgetParams: {\n          widgetParams: (editorData, newData) => {\n            return {\n              ...editorData,\n              ...newData\n            };\n          }\n        },\n        listEditor: {\n          fieldset1: (editorData, newData) => {\n            return {\n              ...editorData,\n              fieldset1: newData\n            };\n          },\n          list: (editorData, newData) => {\n            return {\n              ...editorData,\n              listOfData: newData\n            };\n          }\n        }\n      }\n    },\n    initialData: {\n      label: 'Label',\n      text: 'Text',\n      listOfData: [{\n        field: 'Speed',\n        axisType: 'quant'\n      }, {\n        field: 'Date',\n        axisType: 'temp'\n      }, {\n        field: 'Color',\n        axisType: 'ordinal'\n      }]\n    }\n  }\n};\nconst SwitchComponent = {\n  args: {\n    editorMetadata: {\n      displayAs: 'tabSet',\n      activeForm: 'form',\n      forms: [{\n        id: 'form',\n        title: 'Form Tab',\n        showTitle: true,\n        fieldSets: [{\n          title: 'Some Fieldset Title',\n          name: 'fieldsetWithSwitchList',\n          showTitle: true,\n          fieldsLayout: 'twoColumn',\n          fields: [{\n            type: 'switch',\n            name: 'switchList',\n            label: 'Switch List',\n            options: [{\n              label: 'Switch One',\n              value: 'one'\n            }, {\n              label: 'Switch Two',\n              value: 'two'\n            }, {\n              label: 'Switch Three',\n              value: 'three'\n            }, {\n              label: 'Switch Four',\n              value: 'four'\n            }],\n            value: '!{objectOfSomeKind.switchValues}'\n          }, {\n            type: 'checkbox',\n            name: 'checkList',\n            label: 'Check List',\n            options: [{\n              label: 'Check One',\n              value: 1\n            }, {\n              label: 'Check Two',\n              value: 2\n            }, {\n              label: 'Check Three',\n              value: 3\n            }, {\n              label: 'Check Four',\n              value: 4\n            }],\n            value: '!{objectOfSomeKind.checkValues}'\n          }]\n        }]\n      }],\n      reducersMap: {\n        form: {\n          fieldsetWithSwitchList: (editorData, newData) => {\n            return {\n              ...editorData,\n              objectOfSomeKind: {\n                ...editorData.objectOfSomeKind,\n                switchValues: newData.switchList,\n                checkValues: newData.checkList\n              }\n            };\n          }\n        }\n      }\n    },\n    initialData: {\n      objectOfSomeKind: {\n        switchValues: ['two', 'three'],\n        checkValues: [2, 4]\n      }\n    }\n  }\n};\nconst DataSourceUsage = {\n  args: {\n    editorMetadata: dataSourceUsage,\n    initialData: {},\n    delayDataSource: {\n      selectorOptions: 5000,\n      switchList: 2000,\n      radioList: 3000\n    },\n    dataSourceStates: {\n      selectorOptions: {\n        resultFormat: dist/* ResultFormat */.fW.RecordsArray,\n        data: [{\n          label: 'Option 1',\n          value: 1\n        }, {\n          label: 'Option 2',\n          value: 2\n        }, {\n          label: 'Option 3',\n          value: 3\n        }, {\n          label: 'Option 4',\n          value: 4\n        }, {\n          label: 'Option 5',\n          value: 5\n        }, {\n          label: 'Option 6',\n          value: 6\n        }, {\n          label: 'Option 7',\n          value: 7\n        }, {\n          label: 'Option 8',\n          value: 8\n        }, {\n          label: 'Option 9',\n          value: 9\n        }, {\n          label: 'Option 10',\n          value: 10\n        }],\n        id: 'selectorOptions',\n        status: dist/* DataStatus */.t3.Loading\n      },\n      switchList: {\n        resultFormat: dist/* ResultFormat */.fW.RecordsArray,\n        data: [{\n          label: 'Switch 1',\n          value: 1\n        }, {\n          label: 'Switch 2',\n          value: 2\n        }, {\n          label: 'Switch 3',\n          value: 3\n        }, {\n          label: 'Switch 4',\n          value: 4\n        }, {\n          label: 'Switch 5',\n          value: 5\n        }, {\n          label: 'Switch 6',\n          value: 6\n        }, {\n          label: 'Switch 7',\n          value: 7\n        }],\n        id: 'switchList',\n        status: dist/* DataStatus */.t3.Loading\n      },\n      radioList: {\n        resultFormat: dist/* ResultFormat */.fW.RecordsArray,\n        data: [{\n          label: 'Radio Option 1',\n          value: 1\n        }, {\n          label: 'Radio Option 2',\n          value: 2\n        }, {\n          label: 'Radio Option 3',\n          value: 3\n        }, {\n          label: 'Radio Option 4',\n          value: 4\n        }, {\n          label: 'Radio Option 5',\n          value: 5\n        }],\n        id: 'radioList',\n        status: dist/* DataStatus */.t3.Loading\n      }\n    }\n  }\n};\n;\nconst __namedExportsOrder = [\"Basic\", \"ThrottleChange\", \"TabbedLayout\", \"OnePageLayout\", \"ConditionalAttributes\", \"WithReducer\", \"CollapsibleFieldsets\", \"ValuesFromJsonPath\", \"UnsupportedComponent\", \"WithListEditor\", \"SwitchComponent\", \"DataSourceUsage\"];\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: {\\n      ...basicEditor,\\n      reducersMap: {}\\n    },\\n    initialData: {}\\n  }\\n}\",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};\nThrottleChange.parameters = {\n  ...ThrottleChange.parameters,\n  docs: {\n    ...ThrottleChange.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: {\\n      ...basicEditor,\\n      reducersMap: {}\\n    },\\n    throttleChange: true,\\n    initialData: {}\\n  }\\n}\",\n      ...ThrottleChange.parameters?.docs?.source\n    }\n  }\n};\nTabbedLayout.parameters = {\n  ...TabbedLayout.parameters,\n  docs: {\n    ...TabbedLayout.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: tabbedLayout,\\n    initialData: {}\\n  }\\n}\",\n      ...TabbedLayout.parameters?.docs?.source\n    }\n  }\n};\nOnePageLayout.parameters = {\n  ...OnePageLayout.parameters,\n  docs: {\n    ...OnePageLayout.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: {\\n      ...tabbedLayout,\\n      forms: [{\\n        ...tabbedLayout.forms[0],\\n        showTitle: true\\n      }, {\\n        ...tabbedLayout.forms[1],\\n        showTitle: true\\n      }],\\n      displayAs: 'onePage'\\n    },\\n    initialData: {}\\n  }\\n}\",\n      ...OnePageLayout.parameters?.docs?.source\n    }\n  }\n};\nConditionalAttributes.parameters = {\n  ...ConditionalAttributes.parameters,\n  docs: {\n    ...ConditionalAttributes.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: editorWithConditions,\\n    initialData: {}\\n  }\\n}\",\n      ...ConditionalAttributes.parameters?.docs?.source\n    }\n  }\n};\nWithReducer.parameters = {\n  ...WithReducer.parameters,\n  docs: {\n    ...WithReducer.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: staticTextEditor,\\n    initialData: {}\\n  }\\n}\",\n      ...WithReducer.parameters?.docs?.source\n    }\n  }\n};\nCollapsibleFieldsets.parameters = {\n  ...CollapsibleFieldsets.parameters,\n  docs: {\n    ...CollapsibleFieldsets.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: editorWithCollapsibleFieldsets,\\n    initialData: {}\\n  }\\n}\",\n      ...CollapsibleFieldsets.parameters?.docs?.source\n    }\n  }\n};\nValuesFromJsonPath.parameters = {\n  ...ValuesFromJsonPath.parameters,\n  docs: {\n    ...ValuesFromJsonPath.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: editorWithJsonPath,\\n    initialData: {\\n      ...INPUT_DATA\\n    }\\n  }\\n}\",\n      ...ValuesFromJsonPath.parameters?.docs?.source\n    }\n  }\n};\nUnsupportedComponent.parameters = {\n  ...UnsupportedComponent.parameters,\n  docs: {\n    ...UnsupportedComponent.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: {\\n      activeForm: 'test',\\n      forms: [{\\n        id: 'test',\\n        title: 'Test Form',\\n        fieldSets: [{\\n          name: 'fieldset',\\n          fields: [{\\n            type: 'textbox',\\n            name: 'textBox',\\n            value: 'test',\\n            label: 'Unsupported field Type'\\n          }, {\\n            type: 'text',\\n            name: 'textInput',\\n            value: 'Some Value',\\n            label: 'Some other field'\\n          }]\\n        }]\\n      }],\\n      reducersMap: {}\\n    },\\n    componentRegistry: {\\n      ...BULMA_REGISTRY,\\n      inputFields: missingFieldRegistry as InputFieldRegistry\\n    },\\n    initialData: {\\n      ...INPUT_DATA\\n    }\\n  }\\n}\",\n      ...UnsupportedComponent.parameters?.docs?.source\n    }\n  }\n};\nWithListEditor.parameters = {\n  ...WithListEditor.parameters,\n  docs: {\n    ...WithListEditor.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: {\\n      ...withListEditor,\\n      reducersMap: {\\n        widgetParams: {\\n          widgetParams: (editorData: object, newData: ParamsMap) => {\\n            return {\\n              ...editorData,\\n              ...newData\\n            };\\n          }\\n        },\\n        listEditor: {\\n          fieldset1: (editorData: object, newData: ParamsMap) => {\\n            return {\\n              ...editorData,\\n              fieldset1: newData\\n            };\\n          },\\n          list: (editorData: object, newData: ParamsMap) => {\\n            return {\\n              ...editorData,\\n              listOfData: newData\\n            };\\n          }\\n        }\\n      }\\n    },\\n    initialData: {\\n      label: 'Label',\\n      text: 'Text',\\n      listOfData: [{\\n        field: 'Speed',\\n        axisType: 'quant'\\n      }, {\\n        field: 'Date',\\n        axisType: 'temp'\\n      }, {\\n        field: 'Color',\\n        axisType: 'ordinal'\\n      }]\\n    }\\n  }\\n}\",\n      ...WithListEditor.parameters?.docs?.source\n    }\n  }\n};\nSwitchComponent.parameters = {\n  ...SwitchComponent.parameters,\n  docs: {\n    ...SwitchComponent.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: {\\n      displayAs: 'tabSet',\\n      activeForm: 'form',\\n      forms: [{\\n        id: 'form',\\n        title: 'Form Tab',\\n        showTitle: true,\\n        fieldSets: [{\\n          title: 'Some Fieldset Title',\\n          name: 'fieldsetWithSwitchList',\\n          showTitle: true,\\n          fieldsLayout: 'twoColumn',\\n          fields: [{\\n            type: 'switch',\\n            name: 'switchList',\\n            label: 'Switch List',\\n            options: [{\\n              label: 'Switch One',\\n              value: 'one'\\n            }, {\\n              label: 'Switch Two',\\n              value: 'two'\\n            }, {\\n              label: 'Switch Three',\\n              value: 'three'\\n            }, {\\n              label: 'Switch Four',\\n              value: 'four'\\n            }],\\n            value: '!{objectOfSomeKind.switchValues}'\\n          }, {\\n            type: 'checkbox',\\n            name: 'checkList',\\n            label: 'Check List',\\n            options: [{\\n              label: 'Check One',\\n              value: 1\\n            }, {\\n              label: 'Check Two',\\n              value: 2\\n            }, {\\n              label: 'Check Three',\\n              value: 3\\n            }, {\\n              label: 'Check Four',\\n              value: 4\\n            }],\\n            value: '!{objectOfSomeKind.checkValues}'\\n          }]\\n        }]\\n      }],\\n      reducersMap: {\\n        form: {\\n          fieldsetWithSwitchList: (editorData: {\\n            objectOfSomeKind: object;\\n          }, newData: {\\n            switchList: string[];\\n            checkList: number[];\\n          }) => {\\n            return {\\n              ...editorData,\\n              objectOfSomeKind: {\\n                ...editorData.objectOfSomeKind,\\n                switchValues: newData.switchList,\\n                checkValues: newData.checkList\\n              }\\n            };\\n          }\\n        }\\n      }\\n    },\\n    initialData: {\\n      objectOfSomeKind: {\\n        switchValues: ['two', 'three'],\\n        checkValues: [2, 4]\\n      }\\n    }\\n  }\\n}\",\n      ...SwitchComponent.parameters?.docs?.source\n    }\n  }\n};\nDataSourceUsage.parameters = {\n  ...DataSourceUsage.parameters,\n  docs: {\n    ...DataSourceUsage.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args: {\\n    editorMetadata: dataSourceUsage,\\n    initialData: {},\\n    delayDataSource: {\\n      selectorOptions: 5000,\\n      switchList: 2000,\\n      radioList: 3000\\n    },\\n    dataSourceStates: {\\n      selectorOptions: {\\n        resultFormat: ResultFormat.RecordsArray,\\n        data: [{\\n          label: 'Option 1',\\n          value: 1\\n        }, {\\n          label: 'Option 2',\\n          value: 2\\n        }, {\\n          label: 'Option 3',\\n          value: 3\\n        }, {\\n          label: 'Option 4',\\n          value: 4\\n        }, {\\n          label: 'Option 5',\\n          value: 5\\n        }, {\\n          label: 'Option 6',\\n          value: 6\\n        }, {\\n          label: 'Option 7',\\n          value: 7\\n        }, {\\n          label: 'Option 8',\\n          value: 8\\n        }, {\\n          label: 'Option 9',\\n          value: 9\\n        }, {\\n          label: 'Option 10',\\n          value: 10\\n        }],\\n        id: 'selectorOptions',\\n        status: DataStatus.Loading\\n      },\\n      switchList: {\\n        resultFormat: ResultFormat.RecordsArray,\\n        data: [{\\n          label: 'Switch 1',\\n          value: 1\\n        }, {\\n          label: 'Switch 2',\\n          value: 2\\n        }, {\\n          label: 'Switch 3',\\n          value: 3\\n        }, {\\n          label: 'Switch 4',\\n          value: 4\\n        }, {\\n          label: 'Switch 5',\\n          value: 5\\n        }, {\\n          label: 'Switch 6',\\n          value: 6\\n        }, {\\n          label: 'Switch 7',\\n          value: 7\\n        }],\\n        id: 'switchList',\\n        status: DataStatus.Loading\\n      },\\n      radioList: {\\n        resultFormat: ResultFormat.RecordsArray,\\n        data: [{\\n          label: 'Radio Option 1',\\n          value: 1\\n        }, {\\n          label: 'Radio Option 2',\\n          value: 2\\n        }, {\\n          label: 'Radio Option 3',\\n          value: 3\\n        }, {\\n          label: 'Radio Option 4',\\n          value: 4\\n        }, {\\n          label: 'Radio Option 5',\\n          value: 5\\n        }],\\n        id: 'radioList',\\n        status: DataStatus.Loading\\n      }\\n    }\\n  }\\n}\",\n      ...DataSourceUsage.parameters?.docs?.source\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Editor.stories.tsx\n")}}]);