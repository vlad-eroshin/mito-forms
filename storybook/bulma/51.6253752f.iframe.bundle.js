"use strict";(self.webpackChunk_mito_forms_bulma=self.webpackChunk_mito_forms_bulma||[]).push([[51],{"../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.99.6/node_modules/css-loader/dist/cjs.js!../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.3_webpack@5.99.6/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[14].use[2]!./src/inputs/BulmaField.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_pnpm_css_loader_7_1_2_webpack_5_99_6_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.99.6/node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_pnpm_css_loader_7_1_2_webpack_5_99_6_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_pnpm_css_loader_7_1_2_webpack_5_99_6_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_pnpm_css_loader_7_1_2_webpack_5_99_6_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.99.6/node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_pnpm_css_loader_7_1_2_webpack_5_99_6_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_pnpm_css_loader_7_1_2_webpack_5_99_6_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".mf-field-horizontal .field-label{padding-top:0}","",{version:3,sources:["webpack://./src/inputs/BulmaField.scss"],names:[],mappings:"AACE,kCACE,aAAA",sourcesContent:[".mf-field-horizontal {\n  .field-label {\n    padding-top: 0;\n  }\n}"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./src/inputs/BulmaField.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>BulmaField_BulmaField});var jsx_runtime=__webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-runtime.js"),dist=__webpack_require__("../../node_modules/.pnpm/@mito-forms+core@0.1.0-beta-2_typescript@5.8.3/node_modules/@mito-forms/core/dist/index.js"),injectStylesIntoStyleTag=(__webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js"),__webpack_require__("../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.99.6/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js")),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.99.6/node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.99.6/node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.99.6/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.99.6/node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("../../node_modules/.pnpm/style-loader@4.0.0_webpack@5.99.6/node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),BulmaField=__webpack_require__("../../node_modules/.pnpm/css-loader@7.1.2_webpack@5.99.6/node_modules/css-loader/dist/cjs.js!../../node_modules/.pnpm/sass-loader@16.0.5_sass@1.86.3_webpack@5.99.6/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[14].use[2]!./src/inputs/BulmaField.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(BulmaField.A,options);BulmaField.A&&BulmaField.A.locals&&BulmaField.A.locals;const BulmaField_BulmaField=({config,label,control,fieldIndex,isValid,validationErrors,fieldLayout,id,renderAsFormElement=!0})=>{const inputId=id||(0,dist.kV)(config,fieldIndex);return renderAsFormElement?"compact"===fieldLayout?(0,jsx_runtime.jsxs)("div",{className:"field"+(config.required?" mf-required-field":""),children:[label&&(0,jsx_runtime.jsx)("label",{className:"label mt-input-label",htmlFor:inputId,children:label}),(0,jsx_runtime.jsx)("div",{className:"control"+(isValid?"":" mf-invalid-field"),children:control}),config.helpText&&(0,jsx_runtime.jsx)("p",{className:"help",children:config.helpText}),validationErrors&&validationErrors.length>0&&(0,jsx_runtime.jsx)("p",{className:"help is-danger",children:validationErrors.map((m=>{const key=(0,dist.sx)(config.name,m);return(0,jsx_runtime.jsx)("span",{children:m},key)}))})]}):(0,jsx_runtime.jsxs)("div",{className:"field is-horizontal mf-field-horizontal"+(config.required?" mf-required-field":""),children:[(0,jsx_runtime.jsx)("div",{className:"field-label is-normal",children:label&&(0,jsx_runtime.jsx)("label",{className:"label mt-input-label",htmlFor:inputId,children:label})}),(0,jsx_runtime.jsxs)("div",{className:"field-body",children:[(0,jsx_runtime.jsx)("div",{className:"control mf-center "+(isValid?"":" mf-invalid-field"),children:control}),config.helpText&&(0,jsx_runtime.jsx)("p",{className:"help",children:config.helpText}),validationErrors?.length>0&&(0,jsx_runtime.jsx)("p",{className:"help is-danger",children:validationErrors.map((m=>{const key=(0,dist.sx)(config.name,m);return(0,jsx_runtime.jsx)("span",{children:m},key)}))})]})]}):(0,jsx_runtime.jsxs)("div",{className:"field",children:[label&&(0,jsx_runtime.jsx)("label",{className:"label mt-input-label",htmlFor:inputId,children:label}),(0,jsx_runtime.jsx)("div",{className:"field"+(config.required?" mf-required-field":""),children:control})]})};BulmaField_BulmaField.__docgenInfo={description:"",methods:[],displayName:"BulmaField",props:{config:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  name: string;\n  label?: string;\n  placeHolderText?: string;\n  helpText?: string;\n  type: InputFieldType | 'divider';\n  valueType?: 'text' | 'email' | 'password' | 'url' | 'search';\n  required?: boolean;\n  options?: InputOption[] | string[] | string;\n  isSelectable?: boolean;\n  default?: ParamValue;\n  disabled?: boolean;\n  value?: ParamValue | InputOption | ValueAccessorFn; // Can also be JSON path expression specified as {$.path.of.some.kind}\n  dataBindings?: DataSourceBinding[];\n  validator?: ValidatorType | ValidationFunctionType<string>;\n  showIf?: ConditionInfo | ConditionInfo[];\n  minValue?: number;\n  maxValue?: number;\n  multiSelect?: boolean;\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"placeHolderText",value:{name:"string",required:!1}},{key:"helpText",value:{name:"string",required:!1}},{key:"type",value:{name:"union",raw:"InputFieldType | 'divider'",elements:[{name:"union",raw:"| 'text'\n| 'fileUpload'\n| 'checkbox'\n| 'checkList'\n| 'select'\n| 'radio'\n| 'switch'\n| 'switchList'\n| 'staticText'\n| 'textbox'\n| 'password'\n| 'progress'\n| 'buttonSelector'",elements:[{name:"literal",value:"'text'"},{name:"literal",value:"'fileUpload'"},{name:"literal",value:"'checkbox'"},{name:"literal",value:"'checkList'"},{name:"literal",value:"'select'"},{name:"literal",value:"'radio'"},{name:"literal",value:"'switch'"},{name:"literal",value:"'switchList'"},{name:"literal",value:"'staticText'"},{name:"literal",value:"'textbox'"},{name:"literal",value:"'password'"},{name:"literal",value:"'progress'"},{name:"literal",value:"'buttonSelector'"}]},{name:"literal",value:"'divider'"}],required:!0}},{key:"valueType",value:{name:"union",raw:"'text' | 'email' | 'password' | 'url' | 'search'",elements:[{name:"literal",value:"'text'"},{name:"literal",value:"'email'"},{name:"literal",value:"'password'"},{name:"literal",value:"'url'"},{name:"literal",value:"'search'"}],required:!1}},{key:"required",value:{name:"boolean",required:!1}},{key:"options",value:{name:"union",raw:"InputOption[] | string[] | string",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  value: ParamValue;\n  checked?: boolean;\n  disabled?: boolean;\n  params?: { [key: string]: ParamValue };\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"value",value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}},{key:"checked",value:{name:"boolean",required:!1}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"params",value:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]},required:!1}}]}}],raw:"InputOption[]"},{name:"Array",elements:[{name:"string"}],raw:"string[]"},{name:"string"}],required:!1}},{key:"isSelectable",value:{name:"boolean",required:!1}},{key:"default",value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"value",value:{name:"union",raw:"ParamValue | InputOption | ValueAccessorFn",elements:[{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0},{name:"signature",type:"object",raw:"{\n  label: string;\n  value: ParamValue;\n  checked?: boolean;\n  disabled?: boolean;\n  params?: { [key: string]: ParamValue };\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"value",value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}},{key:"checked",value:{name:"boolean",required:!1}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"params",value:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]},required:!1}}]}},{name:"signature",type:"function",raw:"(context: ParamsMap) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]}},name:"context"}],return:{name:"void"}}}],required:!1}},{key:"dataBindings",value:{name:"Array",elements:[{name:"intersection",raw:"Omit<DataBinding, 'type'> & {\n  datasourceId: string;\n}",elements:[{name:"Omit",elements:[{name:"signature",type:"object",raw:'{\n  widgetId?: string;\n  datasourceId?: string;\n  type: ComponentTypeEnum;\n  /**\n   * targetProperty specifies where data will be injected if targetProperty is "$data" it means that data\n   * from Data Binding will be passed as the data to the component this is most useful for data visualization\n   * components.\n   */\n  targetProperty?: string;\n  staticValue?: object;\n  changeMode?: DataChangeMode;\n\n  // If specified, uses this property field on reach record as the unique ID for the merge behavior.\n  mergeOnField?: string;\n\n  jsonPath?: string;\n  /**\n   * Accessor Expression. Used to access values inside Object Hierarchies.\n   * Useful when for example DataSource result is in the format where the\n   * data produced by the data source requires child object. In case of\n   * Widget binding accessor can be used to access child hierarchy of\n   * the bound state.\n   *\n   *  Example 1: Data Source result is in format:\n   *\n   *    {\n   *      fullComparison: {...},\n   *      topRegressions: {...},\n   *      topImprovements: {...}\n   *    }\n   *\n   *  if Component requires only \'topRegressions\' object component can specify topRegressions as an accessor path.\n   *\n   *    {\n   *        accessor: {\n   *            type: AccessorType.FetchPropertyPath,\n   *            attributePath: \'topRegressions\'\n   *        }\n   *    }\n   *  Example 2: Data source result is an array of objects and we need to access only one property of the object or\n   *  one or two elements of the object. [{id: "1", title: "Title1"}, {id: "2", title: "Title2"}, {id: "3", title: "Title3"}]\n   *\n   *    {\n   *        type: AccessorType.RemapRecordsArray\n   *        propertyMap: {\n   *          id: "recordId"\n   *          title: "titleString"\n   *        }\n   *    }\n   *    produces result of:\n   *      [\n   *        {recordId: "1", titleString: "Title1"},\n   *        {recordId: "2", titleString: "Title1"},\n   *        {recordId: "3", titleString: "Title1"}\n   *      ]\n   */\n  accessor?: DataAccessor;\n  /**\n   * If specified data is first retrieved and the transformed accordingly (Currently not used)\n   */\n  transformers?: DataTransformer[];\n}',signature:{properties:[{key:"widgetId",value:{name:"string",required:!1}},{key:"datasourceId",value:{name:"string",required:!1}},{key:"type",value:{name:"ComponentTypeEnum",required:!0}},{key:"targetProperty",value:{name:"string",required:!1},description:'targetProperty specifies where data will be injected if targetProperty is "$data" it means that data\nfrom Data Binding will be passed as the data to the component this is most useful for data visualization\ncomponents.'},{key:"staticValue",value:{name:"object",required:!1}},{key:"changeMode",value:{name:"union",raw:"'replace' | 'merge'",elements:[{name:"literal",value:"'replace'"},{name:"literal",value:"'merge'"}],required:!1}},{key:"mergeOnField",value:{name:"string",required:!1}},{key:"jsonPath",value:{name:"string",required:!1}},{key:"accessor",value:{name:"signature",type:"object",raw:"{\n  type: AccessorType;\n  jsonPath?: string;\n  property?: string;\n}",signature:{properties:[{key:"type",value:{name:"AccessorType",required:!0}},{key:"jsonPath",value:{name:"string",required:!1}},{key:"property",value:{name:"string",required:!1}}]},required:!1},description:'Accessor Expression. Used to access values inside Object Hierarchies.\nUseful when for example DataSource result is in the format where the\ndata produced by the data source requires child object. In case of\nWidget binding accessor can be used to access child hierarchy of\nthe bound state.\n\n Example 1: Data Source result is in format:\n\n   {\n     fullComparison: {...},\n     topRegressions: {...},\n     topImprovements: {...}\n   }\n\n if Component requires only \'topRegressions\' object component can specify topRegressions as an accessor path.\n\n   {\n       accessor: {\n           type: AccessorType.FetchPropertyPath,\n           attributePath: \'topRegressions\'\n       }\n   }\n Example 2: Data source result is an array of objects and we need to access only one property of the object or\n one or two elements of the object. [{id: "1", title: "Title1"}, {id: "2", title: "Title2"}, {id: "3", title: "Title3"}]\n\n   {\n       type: AccessorType.RemapRecordsArray\n       propertyMap: {\n         id: "recordId"\n         title: "titleString"\n       }\n   }\n   produces result of:\n     [\n       {recordId: "1", titleString: "Title1"},\n       {recordId: "2", titleString: "Title1"},\n       {recordId: "3", titleString: "Title1"}\n     ]'},{key:"transformers",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  type: TransformType;\n\n  /**\n   * if this property is specified the source object is retrieved from this path first\n   */\n  sourceJsonPath?: string;\n  /**\n   * source->target\n   */\n  propertyMap?: {\n    [key: string]: string;\n  };\n\n  /*\n   * List of properties (keys).\n   */\n  propertyKvList?: [string, string | number][];\n\n  objectTemplate?: object;\n\n  sortBy?: string; // field Name\n\n  groupBy?: string; // group by field name\n\n  sortOrder?: 'asc' | 'desc';\n\n  targetColumn?: string;\n\n  precision?: number; //Number of fraction digits\n\n  delimiter?: string;\n\n  targetJsonPath?: string;\n\n  targetProperty?: string;\n  sourceProperty?: string;\n  caseSensitive?: boolean;\n  datetimeFormat?: string;\n  value?: DefaultDataTypes;\n  valuesMap?: {\n    accessor?: DataAccessor;\n    data?: { [key: string]: DataCellValue };\n  };\n\n  // Used by filtering transformers\n  // If set to true, filter will include by condition\n  // If set to failse, filter will exclude by condition\n  include?: boolean;\n  splitBy?: string;\n}",signature:{properties:[{key:"type",value:{name:"TransformType",required:!0}},{key:"sourceJsonPath",value:{name:"string",required:!1},description:"if this property is specified the source object is retrieved from this path first"},{key:"propertyMap",value:{name:"signature",type:"object",raw:"{\n  [key: string]: string;\n}",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!1},description:"source->target"},{key:"propertyKvList",value:{name:"Array",elements:[{name:"tuple",raw:"[string, string | number]",elements:[{name:"string"},{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]}]}],raw:"[string, string | number][]",required:!1}},{key:"objectTemplate",value:{name:"object",required:!1}},{key:"sortBy",value:{name:"string",required:!1}},{key:"groupBy",value:{name:"string",required:!1}},{key:"sortOrder",value:{name:"union",raw:"'asc' | 'desc'",elements:[{name:"literal",value:"'asc'"},{name:"literal",value:"'desc'"}],required:!1}},{key:"targetColumn",value:{name:"string",required:!1}},{key:"precision",value:{name:"number",required:!1}},{key:"delimiter",value:{name:"string",required:!1}},{key:"targetJsonPath",value:{name:"string",required:!1}},{key:"targetProperty",value:{name:"string",required:!1}},{key:"sourceProperty",value:{name:"string",required:!1}},{key:"caseSensitive",value:{name:"boolean",required:!1}},{key:"datetimeFormat",value:{name:"string",required:!1}},{key:"value",value:{name:"union",raw:"| RecordsArray\n| DataCellValue\n| (string | object)[]\n| { [key: string]: object | RecordsArray }\n| undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ [key: string]: DataCellValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]}}],raw:"DataRecord[]"},{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0},{name:"Array",elements:[{name:"unknown"}],raw:"(string | object)[]"},{name:"signature",type:"object",raw:"{ [key: string]: object | RecordsArray }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"object | RecordsArray",elements:[{name:"object"},{name:"Array",elements:[{name:"signature",type:"object",raw:"{ [key: string]: DataCellValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]}}],raw:"DataRecord[]"}],required:!0}}]}},{name:"undefined"}],required:!1}},{key:"valuesMap",value:{name:"signature",type:"object",raw:"{\n  accessor?: DataAccessor;\n  data?: { [key: string]: DataCellValue };\n}",signature:{properties:[{key:"accessor",value:{name:"signature",type:"object",raw:"{\n  type: AccessorType;\n  jsonPath?: string;\n  property?: string;\n}",signature:{properties:[{key:"type",value:{name:"AccessorType",required:!0}},{key:"jsonPath",value:{name:"string",required:!1}},{key:"property",value:{name:"string",required:!1}}]},required:!1}},{key:"data",value:{name:"signature",type:"object",raw:"{ [key: string]: DataCellValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]},required:!1}}]},required:!1}},{key:"include",value:{name:"boolean",required:!1}},{key:"splitBy",value:{name:"string",required:!1}}]}}],raw:"DataTransformer[]",required:!1},description:"If specified data is first retrieved and the transformed accordingly (Currently not used)"}]}},{name:"literal",value:"'type'"}],raw:"Omit<DataBinding, 'type'>"},{name:"signature",type:"object",raw:"{\n  datasourceId: string;\n}",signature:{properties:[{key:"datasourceId",value:{name:"string",required:!0}}]}}]}],raw:"DataSourceBinding[]",required:!1}},{key:"validator",value:{name:"union",raw:"ValidatorType | ValidationFunctionType<string>",elements:[{name:"union",raw:"'number' | 'string' | 'email' | 'emailMultiline' | 'required'",elements:[{name:"literal",value:"'number'"},{name:"literal",value:"'string'"},{name:"literal",value:"'email'"},{name:"literal",value:"'emailMultiline'"},{name:"literal",value:"'required'"}]},{name:"signature",type:"function",raw:"(value: ParamValue) => boolean | T | T[]",signature:{arguments:[{type:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0},name:"value"}],return:{name:"union",raw:"boolean | T | T[]",elements:[{name:"boolean"},{name:"string"},{name:"Array",elements:[{name:"string"}],raw:"T[]"}]}}}],required:!1}},{key:"showIf",value:{name:"union",raw:"ConditionInfo | ConditionInfo[]",elements:[{name:"signature",type:"object",raw:"{\n  logic?: 'and' | 'or';\n  value: DefinedDataValue;\n  value2?: DefinedDataValue | null;\n  type: ConditionTypeEnum;\n}",signature:{properties:[{key:"logic",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}],required:!0}},{key:"value2",value:{name:"union",raw:"DefinedDataValue | null",elements:[{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}],required:!0},{name:"null"}],required:!1}},{key:"type",value:{name:"ConditionTypeEnum",required:!0}}]}},{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  logic?: 'and' | 'or';\n  value: DefinedDataValue;\n  value2?: DefinedDataValue | null;\n  type: ConditionTypeEnum;\n}",signature:{properties:[{key:"logic",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}],required:!0}},{key:"value2",value:{name:"union",raw:"DefinedDataValue | null",elements:[{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}],required:!0},{name:"null"}],required:!1}},{key:"type",value:{name:"ConditionTypeEnum",required:!0}}]}}],raw:"ConditionInfo[]"}],required:!1}},{key:"minValue",value:{name:"number",required:!1}},{key:"maxValue",value:{name:"number",required:!1}},{key:"multiSelect",value:{name:"boolean",required:!1}}]}},description:""},value:{required:!0,tsType:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(paramsMap: ParamsMap) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]}},name:"paramsMap"}],return:{name:"void"}}},description:""},label:{required:!1,tsType:{name:"string"},description:""},options:{required:!1,tsType:{name:"union",raw:"string[] | InputOption[] | undefined",elements:[{name:"Array",elements:[{name:"string"}],raw:"string[]"},{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  value: ParamValue;\n  checked?: boolean;\n  disabled?: boolean;\n  params?: { [key: string]: ParamValue };\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"value",value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}},{key:"checked",value:{name:"boolean",required:!1}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"params",value:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]},required:!1}}]}}],raw:"InputOption[]"},{name:"undefined"}]},description:""},status:{required:!1,tsType:{name:"union",raw:"DataStatus | undefined",elements:[{name:"DataStatus"},{name:"undefined"}]},description:""},renderAsFormElement:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},fieldIndex:{required:!1,tsType:{name:"number"},description:""},isValid:{required:!1,tsType:{name:"boolean"},description:""},validationErrors:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},fieldLayout:{required:!1,tsType:{name:"union",raw:"'twoColumn' | 'compact' | 'twoColumnJustified'",elements:[{name:"literal",value:"'twoColumn'"},{name:"literal",value:"'compact'"},{name:"literal",value:"'twoColumnJustified'"}]},description:""},id:{required:!0,tsType:{name:"string"},description:""},control:{required:!0,tsType:{name:"ReactElement"},description:""}}}},"./src/inputs/SwitchList.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>SwitchList});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-runtime.js"),_mito_forms_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/.pnpm/@mito-forms+core@0.1.0-beta-2_typescript@5.8.3/node_modules/@mito-forms/core/dist/index.js"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js"),_BulmaField__WEBPACK_IMPORTED_MODULE_4__=(__webpack_require__("./src/inputs/SwitchInput.scss"),__webpack_require__("./src/inputs/BulmaField.tsx")),_SwitchInput__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/inputs/SwitchInput.tsx");const SwitchList=props=>{const{config,onChange,value,options}=props,fieldConfig=config,hasOptions=options&&options.length>0,checkedValues=(0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)((()=>hasOptions?(0,_mito_forms_core__WEBPACK_IMPORTED_MODULE_1__.Cx)(value):value?[config.name]:[]),[value,hasOptions]),convertedOptions=hasOptions?(0,_mito_forms_core__WEBPACK_IMPORTED_MODULE_1__.cM)(options,checkedValues):[{label:config.label,value:config.name,checked:`${value}`}],handleChange=hasOptions?(0,_mito_forms_core__WEBPACK_IMPORTED_MODULE_1__.aS)(fieldConfig,convertedOptions,onChange):(0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((event=>{onChange&&onChange({[config.name]:event.target.checked})}),[onChange,config]),inputId=(0,_mito_forms_core__WEBPACK_IMPORTED_MODULE_1__.kV)(config);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_BulmaField__WEBPACK_IMPORTED_MODULE_4__.s,{...props,id:inputId,config:fieldConfig,control:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"is-flex is-flex-direction-column",id:inputId,children:convertedOptions.map((opt=>{const optId=(0,_mito_forms_core__WEBPACK_IMPORTED_MODULE_1__.sx)(config.name,opt.label),strValue=`${opt.value}`;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("label",{className:"mf-switch",htmlFor:optId,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_SwitchInput__WEBPACK_IMPORTED_MODULE_5__.d,{name:strValue,value:strValue,onChange:handleChange,checked:checkedValues.includes(strValue)})," ",opt.label]},`${config.name}-${strValue}`)}))})})};SwitchList.__docgenInfo={description:"",methods:[],displayName:"SwitchList",props:{config:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  name: string;\n  label?: string;\n  placeHolderText?: string;\n  helpText?: string;\n  type: InputFieldType | 'divider';\n  valueType?: 'text' | 'email' | 'password' | 'url' | 'search';\n  required?: boolean;\n  options?: InputOption[] | string[] | string;\n  isSelectable?: boolean;\n  default?: ParamValue;\n  disabled?: boolean;\n  value?: ParamValue | InputOption | ValueAccessorFn; // Can also be JSON path expression specified as {$.path.of.some.kind}\n  dataBindings?: DataSourceBinding[];\n  validator?: ValidatorType | ValidationFunctionType<string>;\n  showIf?: ConditionInfo | ConditionInfo[];\n  minValue?: number;\n  maxValue?: number;\n  multiSelect?: boolean;\n}",signature:{properties:[{key:"name",value:{name:"string",required:!0}},{key:"label",value:{name:"string",required:!1}},{key:"placeHolderText",value:{name:"string",required:!1}},{key:"helpText",value:{name:"string",required:!1}},{key:"type",value:{name:"union",raw:"InputFieldType | 'divider'",elements:[{name:"union",raw:"| 'text'\n| 'fileUpload'\n| 'checkbox'\n| 'checkList'\n| 'select'\n| 'radio'\n| 'switch'\n| 'switchList'\n| 'staticText'\n| 'textbox'\n| 'password'\n| 'progress'\n| 'buttonSelector'",elements:[{name:"literal",value:"'text'"},{name:"literal",value:"'fileUpload'"},{name:"literal",value:"'checkbox'"},{name:"literal",value:"'checkList'"},{name:"literal",value:"'select'"},{name:"literal",value:"'radio'"},{name:"literal",value:"'switch'"},{name:"literal",value:"'switchList'"},{name:"literal",value:"'staticText'"},{name:"literal",value:"'textbox'"},{name:"literal",value:"'password'"},{name:"literal",value:"'progress'"},{name:"literal",value:"'buttonSelector'"}]},{name:"literal",value:"'divider'"}],required:!0}},{key:"valueType",value:{name:"union",raw:"'text' | 'email' | 'password' | 'url' | 'search'",elements:[{name:"literal",value:"'text'"},{name:"literal",value:"'email'"},{name:"literal",value:"'password'"},{name:"literal",value:"'url'"},{name:"literal",value:"'search'"}],required:!1}},{key:"required",value:{name:"boolean",required:!1}},{key:"options",value:{name:"union",raw:"InputOption[] | string[] | string",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  value: ParamValue;\n  checked?: boolean;\n  disabled?: boolean;\n  params?: { [key: string]: ParamValue };\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"value",value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}},{key:"checked",value:{name:"boolean",required:!1}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"params",value:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]},required:!1}}]}}],raw:"InputOption[]"},{name:"Array",elements:[{name:"string"}],raw:"string[]"},{name:"string"}],required:!1}},{key:"isSelectable",value:{name:"boolean",required:!1}},{key:"default",value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"value",value:{name:"union",raw:"ParamValue | InputOption | ValueAccessorFn",elements:[{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0},{name:"signature",type:"object",raw:"{\n  label: string;\n  value: ParamValue;\n  checked?: boolean;\n  disabled?: boolean;\n  params?: { [key: string]: ParamValue };\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"value",value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}},{key:"checked",value:{name:"boolean",required:!1}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"params",value:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]},required:!1}}]}},{name:"signature",type:"function",raw:"(context: ParamsMap) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]}},name:"context"}],return:{name:"void"}}}],required:!1}},{key:"dataBindings",value:{name:"Array",elements:[{name:"intersection",raw:"Omit<DataBinding, 'type'> & {\n  datasourceId: string;\n}",elements:[{name:"Omit",elements:[{name:"signature",type:"object",raw:'{\n  widgetId?: string;\n  datasourceId?: string;\n  type: ComponentTypeEnum;\n  /**\n   * targetProperty specifies where data will be injected if targetProperty is "$data" it means that data\n   * from Data Binding will be passed as the data to the component this is most useful for data visualization\n   * components.\n   */\n  targetProperty?: string;\n  staticValue?: object;\n  changeMode?: DataChangeMode;\n\n  // If specified, uses this property field on reach record as the unique ID for the merge behavior.\n  mergeOnField?: string;\n\n  jsonPath?: string;\n  /**\n   * Accessor Expression. Used to access values inside Object Hierarchies.\n   * Useful when for example DataSource result is in the format where the\n   * data produced by the data source requires child object. In case of\n   * Widget binding accessor can be used to access child hierarchy of\n   * the bound state.\n   *\n   *  Example 1: Data Source result is in format:\n   *\n   *    {\n   *      fullComparison: {...},\n   *      topRegressions: {...},\n   *      topImprovements: {...}\n   *    }\n   *\n   *  if Component requires only \'topRegressions\' object component can specify topRegressions as an accessor path.\n   *\n   *    {\n   *        accessor: {\n   *            type: AccessorType.FetchPropertyPath,\n   *            attributePath: \'topRegressions\'\n   *        }\n   *    }\n   *  Example 2: Data source result is an array of objects and we need to access only one property of the object or\n   *  one or two elements of the object. [{id: "1", title: "Title1"}, {id: "2", title: "Title2"}, {id: "3", title: "Title3"}]\n   *\n   *    {\n   *        type: AccessorType.RemapRecordsArray\n   *        propertyMap: {\n   *          id: "recordId"\n   *          title: "titleString"\n   *        }\n   *    }\n   *    produces result of:\n   *      [\n   *        {recordId: "1", titleString: "Title1"},\n   *        {recordId: "2", titleString: "Title1"},\n   *        {recordId: "3", titleString: "Title1"}\n   *      ]\n   */\n  accessor?: DataAccessor;\n  /**\n   * If specified data is first retrieved and the transformed accordingly (Currently not used)\n   */\n  transformers?: DataTransformer[];\n}',signature:{properties:[{key:"widgetId",value:{name:"string",required:!1}},{key:"datasourceId",value:{name:"string",required:!1}},{key:"type",value:{name:"ComponentTypeEnum",required:!0}},{key:"targetProperty",value:{name:"string",required:!1},description:'targetProperty specifies where data will be injected if targetProperty is "$data" it means that data\nfrom Data Binding will be passed as the data to the component this is most useful for data visualization\ncomponents.'},{key:"staticValue",value:{name:"object",required:!1}},{key:"changeMode",value:{name:"union",raw:"'replace' | 'merge'",elements:[{name:"literal",value:"'replace'"},{name:"literal",value:"'merge'"}],required:!1}},{key:"mergeOnField",value:{name:"string",required:!1}},{key:"jsonPath",value:{name:"string",required:!1}},{key:"accessor",value:{name:"signature",type:"object",raw:"{\n  type: AccessorType;\n  jsonPath?: string;\n  property?: string;\n}",signature:{properties:[{key:"type",value:{name:"AccessorType",required:!0}},{key:"jsonPath",value:{name:"string",required:!1}},{key:"property",value:{name:"string",required:!1}}]},required:!1},description:'Accessor Expression. Used to access values inside Object Hierarchies.\nUseful when for example DataSource result is in the format where the\ndata produced by the data source requires child object. In case of\nWidget binding accessor can be used to access child hierarchy of\nthe bound state.\n\n Example 1: Data Source result is in format:\n\n   {\n     fullComparison: {...},\n     topRegressions: {...},\n     topImprovements: {...}\n   }\n\n if Component requires only \'topRegressions\' object component can specify topRegressions as an accessor path.\n\n   {\n       accessor: {\n           type: AccessorType.FetchPropertyPath,\n           attributePath: \'topRegressions\'\n       }\n   }\n Example 2: Data source result is an array of objects and we need to access only one property of the object or\n one or two elements of the object. [{id: "1", title: "Title1"}, {id: "2", title: "Title2"}, {id: "3", title: "Title3"}]\n\n   {\n       type: AccessorType.RemapRecordsArray\n       propertyMap: {\n         id: "recordId"\n         title: "titleString"\n       }\n   }\n   produces result of:\n     [\n       {recordId: "1", titleString: "Title1"},\n       {recordId: "2", titleString: "Title1"},\n       {recordId: "3", titleString: "Title1"}\n     ]'},{key:"transformers",value:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  type: TransformType;\n\n  /**\n   * if this property is specified the source object is retrieved from this path first\n   */\n  sourceJsonPath?: string;\n  /**\n   * source->target\n   */\n  propertyMap?: {\n    [key: string]: string;\n  };\n\n  /*\n   * List of properties (keys).\n   */\n  propertyKvList?: [string, string | number][];\n\n  objectTemplate?: object;\n\n  sortBy?: string; // field Name\n\n  groupBy?: string; // group by field name\n\n  sortOrder?: 'asc' | 'desc';\n\n  targetColumn?: string;\n\n  precision?: number; //Number of fraction digits\n\n  delimiter?: string;\n\n  targetJsonPath?: string;\n\n  targetProperty?: string;\n  sourceProperty?: string;\n  caseSensitive?: boolean;\n  datetimeFormat?: string;\n  value?: DefaultDataTypes;\n  valuesMap?: {\n    accessor?: DataAccessor;\n    data?: { [key: string]: DataCellValue };\n  };\n\n  // Used by filtering transformers\n  // If set to true, filter will include by condition\n  // If set to failse, filter will exclude by condition\n  include?: boolean;\n  splitBy?: string;\n}",signature:{properties:[{key:"type",value:{name:"TransformType",required:!0}},{key:"sourceJsonPath",value:{name:"string",required:!1},description:"if this property is specified the source object is retrieved from this path first"},{key:"propertyMap",value:{name:"signature",type:"object",raw:"{\n  [key: string]: string;\n}",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]},required:!1},description:"source->target"},{key:"propertyKvList",value:{name:"Array",elements:[{name:"tuple",raw:"[string, string | number]",elements:[{name:"string"},{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]}]}],raw:"[string, string | number][]",required:!1}},{key:"objectTemplate",value:{name:"object",required:!1}},{key:"sortBy",value:{name:"string",required:!1}},{key:"groupBy",value:{name:"string",required:!1}},{key:"sortOrder",value:{name:"union",raw:"'asc' | 'desc'",elements:[{name:"literal",value:"'asc'"},{name:"literal",value:"'desc'"}],required:!1}},{key:"targetColumn",value:{name:"string",required:!1}},{key:"precision",value:{name:"number",required:!1}},{key:"delimiter",value:{name:"string",required:!1}},{key:"targetJsonPath",value:{name:"string",required:!1}},{key:"targetProperty",value:{name:"string",required:!1}},{key:"sourceProperty",value:{name:"string",required:!1}},{key:"caseSensitive",value:{name:"boolean",required:!1}},{key:"datetimeFormat",value:{name:"string",required:!1}},{key:"value",value:{name:"union",raw:"| RecordsArray\n| DataCellValue\n| (string | object)[]\n| { [key: string]: object | RecordsArray }\n| undefined",elements:[{name:"Array",elements:[{name:"signature",type:"object",raw:"{ [key: string]: DataCellValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]}}],raw:"DataRecord[]"},{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0},{name:"Array",elements:[{name:"unknown"}],raw:"(string | object)[]"},{name:"signature",type:"object",raw:"{ [key: string]: object | RecordsArray }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"object | RecordsArray",elements:[{name:"object"},{name:"Array",elements:[{name:"signature",type:"object",raw:"{ [key: string]: DataCellValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]}}],raw:"DataRecord[]"}],required:!0}}]}},{name:"undefined"}],required:!1}},{key:"valuesMap",value:{name:"signature",type:"object",raw:"{\n  accessor?: DataAccessor;\n  data?: { [key: string]: DataCellValue };\n}",signature:{properties:[{key:"accessor",value:{name:"signature",type:"object",raw:"{\n  type: AccessorType;\n  jsonPath?: string;\n  property?: string;\n}",signature:{properties:[{key:"type",value:{name:"AccessorType",required:!0}},{key:"jsonPath",value:{name:"string",required:!1}},{key:"property",value:{name:"string",required:!1}}]},required:!1}},{key:"data",value:{name:"signature",type:"object",raw:"{ [key: string]: DataCellValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]},required:!1}}]},required:!1}},{key:"include",value:{name:"boolean",required:!1}},{key:"splitBy",value:{name:"string",required:!1}}]}}],raw:"DataTransformer[]",required:!1},description:"If specified data is first retrieved and the transformed accordingly (Currently not used)"}]}},{name:"literal",value:"'type'"}],raw:"Omit<DataBinding, 'type'>"},{name:"signature",type:"object",raw:"{\n  datasourceId: string;\n}",signature:{properties:[{key:"datasourceId",value:{name:"string",required:!0}}]}}]}],raw:"DataSourceBinding[]",required:!1}},{key:"validator",value:{name:"union",raw:"ValidatorType | ValidationFunctionType<string>",elements:[{name:"union",raw:"'number' | 'string' | 'email' | 'emailMultiline' | 'required'",elements:[{name:"literal",value:"'number'"},{name:"literal",value:"'string'"},{name:"literal",value:"'email'"},{name:"literal",value:"'emailMultiline'"},{name:"literal",value:"'required'"}]},{name:"signature",type:"function",raw:"(value: ParamValue) => boolean | T | T[]",signature:{arguments:[{type:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0},name:"value"}],return:{name:"union",raw:"boolean | T | T[]",elements:[{name:"boolean"},{name:"string"},{name:"Array",elements:[{name:"string"}],raw:"T[]"}]}}}],required:!1}},{key:"showIf",value:{name:"union",raw:"ConditionInfo | ConditionInfo[]",elements:[{name:"signature",type:"object",raw:"{\n  logic?: 'and' | 'or';\n  value: DefinedDataValue;\n  value2?: DefinedDataValue | null;\n  type: ConditionTypeEnum;\n}",signature:{properties:[{key:"logic",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}],required:!0}},{key:"value2",value:{name:"union",raw:"DefinedDataValue | null",elements:[{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}],required:!0},{name:"null"}],required:!1}},{key:"type",value:{name:"ConditionTypeEnum",required:!0}}]}},{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  logic?: 'and' | 'or';\n  value: DefinedDataValue;\n  value2?: DefinedDataValue | null;\n  type: ConditionTypeEnum;\n}",signature:{properties:[{key:"logic",value:{name:"union",raw:"'and' | 'or'",elements:[{name:"literal",value:"'and'"},{name:"literal",value:"'or'"}],required:!1}},{key:"value",value:{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}],required:!0}},{key:"value2",value:{name:"union",raw:"DefinedDataValue | null",elements:[{name:"union",raw:"string | number | boolean",elements:[{name:"string"},{name:"number"},{name:"boolean"}],required:!0},{name:"null"}],required:!1}},{key:"type",value:{name:"ConditionTypeEnum",required:!0}}]}}],raw:"ConditionInfo[]"}],required:!1}},{key:"minValue",value:{name:"number",required:!1}},{key:"maxValue",value:{name:"number",required:!1}},{key:"multiSelect",value:{name:"boolean",required:!1}}]}},description:""},value:{required:!0,tsType:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(paramsMap: ParamsMap) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]}},name:"paramsMap"}],return:{name:"void"}}},description:""},label:{required:!1,tsType:{name:"string"},description:""},options:{required:!1,tsType:{name:"union",raw:"string[] | InputOption[] | undefined",elements:[{name:"Array",elements:[{name:"string"}],raw:"string[]"},{name:"Array",elements:[{name:"signature",type:"object",raw:"{\n  label: string;\n  value: ParamValue;\n  checked?: boolean;\n  disabled?: boolean;\n  params?: { [key: string]: ParamValue };\n}",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"value",value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}},{key:"checked",value:{name:"boolean",required:!1}},{key:"disabled",value:{name:"boolean",required:!1}},{key:"params",value:{name:"signature",type:"object",raw:"{ [key: string]: ParamValue }",signature:{properties:[{key:{name:"string"},value:{name:"union",raw:"string | number | boolean | object | object[] | null",elements:[{name:"string"},{name:"number"},{name:"boolean"},{name:"object"},{name:"Array",elements:[{name:"object"}],raw:"object[]"},{name:"null"}],required:!0}}]},required:!1}}]}}],raw:"InputOption[]"},{name:"undefined"}]},description:""},status:{required:!1,tsType:{name:"union",raw:"DataStatus | undefined",elements:[{name:"DataStatus"},{name:"undefined"}]},description:""},renderAsFormElement:{required:!1,tsType:{name:"boolean"},description:""},fieldIndex:{required:!1,tsType:{name:"number"},description:""},isValid:{required:!1,tsType:{name:"boolean"},description:""},validationErrors:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},fieldLayout:{required:!1,tsType:{name:"union",raw:"'twoColumn' | 'compact' | 'twoColumnJustified'",elements:[{name:"literal",value:"'twoColumn'"},{name:"literal",value:"'compact'"},{name:"literal",value:"'twoColumnJustified'"}]},description:""}}}}}]);