"use strict";(self.webpackChunk_mito_forms_bulma=self.webpackChunk_mito_forms_bulma||[]).push([[547],{"./src/Editor.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Basic: () => (/* binding */ Basic),\n  BasicForTestsPage: () => (/* binding */ BasicForTestsPage),\n  BasicForTestsTabs: () => (/* binding */ BasicForTestsTabs),\n  CollapsibleFieldsets: () => (/* binding */ CollapsibleFieldsets),\n  ConditionalAttributes: () => (/* binding */ ConditionalAttributes),\n  CustomFieldsetDecorator: () => (/* binding */ CustomFieldsetDecorator),\n  DataSourceUsage: () => (/* binding */ DataSourceUsage),\n  OnePageLayout: () => (/* binding */ OnePageLayout),\n  SwitchComponent: () => (/* binding */ SwitchComponent),\n  TabbedLayout: () => (/* binding */ TabbedLayout),\n  ThrottleChange: () => (/* binding */ ThrottleChange),\n  UnsupportedComponent: () => (/* binding */ UnsupportedComponent),\n  ValuesFromJsonPath: () => (/* binding */ ValuesFromJsonPath),\n  WithListEditor: () => (/* binding */ WithListEditor),\n  WithReducer: () => (/* binding */ WithReducer),\n  __namedExportsOrder: () => (/* binding */ __namedExportsOrder),\n  "default": () => (/* binding */ Editor_stories)\n});\n\n// EXTERNAL MODULE: ../../node_modules/.pnpm/@mito-forms+core@0.2.23-beta_typescript@5.8.3/node_modules/@mito-forms/core/dist/index.js + 33 modules\nvar dist = __webpack_require__("../../node_modules/.pnpm/@mito-forms+core@0.2.23-beta_typescript@5.8.3/node_modules/@mito-forms/core/dist/index.js");\n;// ./src/__data__/mockInputObject.json\nconst mockInputObject_namespaceObject = /*#__PURE__*/JSON.parse(\'{"path":{"to":{"fieldsetData":{"label":"Label Text","value":"Value Text"}}},"other":{"numericValue1":10,"textValue":"textValue123"},"otherPath":{"to":{"values":{"numericValue":12,"textValue":"Text Value"}}},"someData":{"to":{"listOfOptions":[{"label":"Label Text 1","value":1},{"label":"Label Text 2","value":2},{"label":"Label Text 3","value":3}],"checkListOfOptions":[{"label":"Check Option one","value":1},{"label":"Check Option two","value":2},{"label":"Check Option three","value":3}],"switchListOfOptions":[{"label":"Switch Option one","value":1},{"label":"Switch Option two","value":2},{"label":"Switch Option three","value":3}]}}}\');\n;// ./src/__metadata__/basic.ts\nconst basicEditor = {\n    displayAs: \'tabSet\',\n    forms: [\n        {\n            id: \'form1\',\n            title: \'Basic Form\',\n            fieldSets: [\n                {\n                    name: \'fieldset1\',\n                    fields: [\n                        {\n                            type: \'text\',\n                            name: \'username\',\n                            label: \'User Name\',\n                            required: true,\n                            customProps: {\n                                leftIcon: \'faUser\'\n                            }\n                        },\n                        {\n                            type: \'password\',\n                            name: \'password\',\n                            label: \'Password\',\n                            required: true,\n                            customProps: {\n                                leftIcon: \'faKey\'\n                            }\n                        },\n                        {\n                            type: \'select\',\n                            name: \'selector\',\n                            label: \'Select Option\',\n                            default: 1,\n                            options: [\n                                {\n                                    label: \'Option 1\',\n                                    value: 1\n                                },\n                                {\n                                    label: \'Option 2\',\n                                    value: 2\n                                }\n                            ],\n                            customProps: {\n                                leftIcon: \'faHome\'\n                            }\n                        },\n                        {\n                            type: \'buttonSelector\',\n                            name: \'buttonSelector\',\n                            label: \'Select Button Option\',\n                            default: 1,\n                            options: [\n                                {\n                                    label: \'Option 1\',\n                                    value: 1\n                                },\n                                {\n                                    label: \'Option 2\',\n                                    value: 2\n                                }\n                            ],\n                            customProps: {\n                                leftIcon: \'faHome\'\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/collapsibleFieldsets.ts\nconst editorWithCollapsibleFieldsets = {\n    displayAs: \'onePage\',\n    forms: [\n        {\n            id: \'form\',\n            title: \'Collapsible Fieldsets\',\n            showTitle: true,\n            fieldSets: [\n                {\n                    name: \'collapsibleFieldSet\',\n                    collapsible: true,\n                    collapsed: true,\n                    title: \'Fieldset collapsible\',\n                    showTitle: true,\n                    fields: [\n                        {\n                            type: \'text\',\n                            name: \'textInput\',\n                            label: \'Text input\'\n                        },\n                        {\n                            name: \'checkboxInput\',\n                            label: \'Select some option\',\n                            type: \'checkbox\',\n                            options: [\n                                {\n                                    value: \'Check1\',\n                                    label: \'Checkbox Option One\'\n                                },\n                                {\n                                    value: \'Check2\',\n                                    label: \'Checkbox Option Two\'\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    name: \'otherFieldSet\',\n                    collapsible: true,\n                    collapsed: false,\n                    title: \'Other Fieldset\',\n                    showTitle: true,\n                    fields: [\n                        {\n                            type: \'select\',\n                            name: \'optionsSelector\',\n                            value: \'opt1\',\n                            options: [\n                                {\n                                    value: \'opt1\',\n                                    label: \'Selector Option One\'\n                                },\n                                {\n                                    value: \'opt2\',\n                                    label: \'Selector Option Two\'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/dataSourceUsage.ts\nconst dataSourceUsage = {\n    displayAs: \'tabSet\',\n    forms: [\n        {\n            id: \'form1\',\n            title: \'Basic Form\',\n            fieldSets: [\n                {\n                    name: \'fieldset1\',\n                    fields: [\n                        {\n                            type: \'text\',\n                            name: \'label\',\n                            label: \'Label\',\n                            required: true\n                        },\n                        {\n                            type: \'select\',\n                            name: \'selector\',\n                            label: \'Loading Options from DataSource\',\n                            helpText: \'Delayed by 5 seconds\',\n                            default: 1,\n                            options: [\n                                {\n                                    label: \'Option 1\',\n                                    value: 1\n                                },\n                                {\n                                    label: \'Option 2\',\n                                    value: 2\n                                }\n                            ],\n                            dataBindings: [\n                                {\n                                    datasourceId: \'selectorOptions\',\n                                    targetProperty: \'options\'\n                                }\n                            ]\n                        },\n                        {\n                            type: \'switchList\',\n                            name: \'switchList\',\n                            label: \'Loading Switch Options from DataSource\',\n                            helpText: \'Delayed by 2 seconds\',\n                            default: 1,\n                            options: [],\n                            dataBindings: [\n                                {\n                                    datasourceId: \'switchList\',\n                                    targetProperty: \'options\'\n                                }\n                            ]\n                        },\n                        {\n                            type: \'radio\',\n                            name: \'radioList\',\n                            label: \'Loading Radio List from DataSource\',\n                            helpText: \'Delayed by 3  seconds\',\n                            default: 1,\n                            options: [],\n                            dataBindings: [\n                                {\n                                    datasourceId: \'radioList\',\n                                    targetProperty: \'options\'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/editorWithConditions.ts\nconst editorWithConditions = {\n    displayAs: \'onePage\',\n    activeForm: \'Form1\',\n    forms: [\n        {\n            id: \'Form1\',\n            fieldSets: [\n                {\n                    name: \'fieldset2\',\n                    title: \'Fieldset With Title\',\n                    showTitle: true,\n                    fields: [\n                        {\n                            label: "Select value (Select \'option2\' to show text field)",\n                            name: \'selector\',\n                            type: \'select\',\n                            default: \'1\',\n                            options: [\n                                {\n                                    value: \'1\',\n                                    label: \'option 1\'\n                                },\n                                {\n                                    value: \'2\',\n                                    label: \'option 2\'\n                                }\n                            ]\n                        },\n                        {\n                            label: \'Switch value to Disable Field below\',\n                            name: \'switchList\',\n                            type: \'switchList\',\n                            default: \'1\',\n                            options: [\n                                {\n                                    value: \'1\',\n                                    label: \'Disable Text Field One\'\n                                },\n                                {\n                                    value: \'2\',\n                                    label: \'Disable Text Field Two\'\n                                },\n                                {\n                                    value: \'3\',\n                                    label: \'Disable Text Field Three\'\n                                }\n                            ]\n                        },\n                        {\n                            name: \'textInputD1\',\n                            type: \'text\',\n                            value: \'initialValue\',\n                            label: \'Text Field One\',\n                            required: true,\n                            disabled: `!{_STATE.Form1.fieldset2.data.switchList.contains(@, \'1\')}`\n                        },\n                        {\n                            name: \'textInputD4\',\n                            type: \'text\',\n                            value: \'initialValue\',\n                            label: \'Text Field Two\',\n                            required: true,\n                            disabled: `!{_STATE.Form1.fieldset2.data.switchList.contains(@, \'2\')}`\n                        },\n                        {\n                            name: \'textInputD3\',\n                            type: \'text\',\n                            value: \'initialValue\',\n                            label: \'Text Field Three\',\n                            required: true,\n                            disabled: `!{_STATE.Form1.fieldset2.data.switchList.contains(@, \'3\')}`\n                        }\n                    ]\n                },\n                {\n                    name: \'fieldset1\',\n                    title: \'Other fieldset\',\n                    showTitle: true,\n                    fields: [\n                        {\n                            name: \'textInput\',\n                            type: \'text\',\n                            value: \'initialValue\',\n                            label: "Text input (shown only when \'option2\' selected)",\n                            required: true,\n                            render: `!{_STATE.Form1.fieldset2.data.selector==\'2\'}`\n                        },\n                        {\n                            name: \'switchInput\',\n                            type: \'switch\',\n                            label: \'Show yes/no\',\n                            value: true\n                        },\n                        {\n                            name: \'oneMoreConditional\',\n                            type: \'text\',\n                            label: \'Test Label\',\n                            render: \'!{_STATE.Form1.fieldset1.data.switchInput}\'\n                        },\n                        {\n                            name: \'showFieldset3\',\n                            type: \'switch\',\n                            label: \'Show/Hide FieldSet below\',\n                            value: false\n                        }\n                    ]\n                },\n                {\n                    name: \'fieldset3\',\n                    title: \'Fieldset Displayed when the Switch is on\',\n                    showTitle: true,\n                    render: \'!{_STATE.Form1.fieldset1.data.showFieldset3}\',\n                    fields: [\n                        {\n                            label: \'Option Selector\',\n                            name: \'selectorField\',\n                            type: \'select\',\n                            default: \'1\',\n                            options: [\n                                {\n                                    value: \'1\',\n                                    label: \'Choice One\'\n                                },\n                                {\n                                    value: \'2\',\n                                    label: \'Choice Two\'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/jsonPathRetrieval.ts\nconst editorWithJsonPath = {\n    displayAs: \'onePage\',\n    forms: [\n        {\n            id: \'form\',\n            title: \'Form using JSON Path to access values\',\n            showTitle: true,\n            fieldSets: [\n                {\n                    title: \'Path to fieldset data ($.path.to.fieldsetData)\',\n                    name: \'jsonPathFieldset\',\n                    jsonPath: \'path.to.fieldsetData\',\n                    showTitle: true,\n                    fields: [\n                        {\n                            type: \'staticText\',\n                            label: \'Label\',\n                            name: \'label\'\n                        },\n                        {\n                            type: \'text\',\n                            label: \'Value\',\n                            name: \'value\'\n                        }\n                    ]\n                },\n                {\n                    title: \'Access data per field\',\n                    name: \'jsonPathPerField\',\n                    showTitle: true,\n                    fields: [\n                        {\n                            type: \'staticText\',\n                            label: \'Access numeric value\',\n                            helpText: `other.numericValue1`,\n                            name: \'numericValue\',\n                            value: \'!{other.numericValue1}\'\n                        },\n                        {\n                            type: \'text\',\n                            label: \'Text Value\',\n                            helpText: \'Json path other.textValue\',\n                            name: \'textValue\',\n                            value: \'!{other.textValue}\'\n                        },\n                        {\n                            type: \'select\',\n                            name: \'selector\',\n                            label: \'Selector \',\n                            helpText: \'Retrieves options from $.someData.to.listOfOptions\',\n                            options: \'!{someData.to.listOfOptions}\',\n                            value: 1\n                        },\n                        {\n                            type: \'checkbox\',\n                            name: \'checkboxList\',\n                            label: \'Check List\',\n                            helpText: \'Options loaded from $.someData.to.listOfOptions\',\n                            options: \'!{someData.to.listOfOptions}\',\n                            value: 1\n                        },\n                        {\n                            type: \'radio\',\n                            name: \'radioList\',\n                            label: \'Radio buttons\',\n                            helpText: \'Retrieves options from ($.someData.to.listOfOptions)\',\n                            options: \'!{someData.to.listOfOptions}\',\n                            value: 1\n                        },\n                        {\n                            type: \'switch\',\n                            name: \'switchList\',\n                            label: \'Switch List\',\n                            helpText: \'Retrieves options from ($.someData.to.switchListOfOptions)\',\n                            options: \'!{someData.to.switchListOfOptions}\',\n                            value: 1\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/multiColumnFieldset.ts\nconst multiColumnFieldset = {\n    displayAs: \'onePage\',\n    forms: [\n        {\n            id: \'form\',\n            fieldSets: [\n                {\n                    name: \'collapsibleFieldSet\',\n                    title: \'Column Fieldset Layout\',\n                    fieldSetDecorator: \'multiColumnFieldset\',\n                    customProps: {\n                        columns: 3\n                    },\n                    fields: [\n                        {\n                            type: \'text\',\n                            name: \'textInput\',\n                            label: \'Text Input One\',\n                            customProps: {\n                                leftIcon: \'faEnvelope\'\n                            }\n                        },\n                        {\n                            name: \'checkboxInput1\',\n                            label: \'Select some option\',\n                            type: \'checkList\',\n                            options: [\n                                {\n                                    value: \'Check1\',\n                                    label: \'Checkbox Option One\'\n                                },\n                                {\n                                    value: \'Check2\',\n                                    label: \'Checkbox Option Two\'\n                                },\n                                {\n                                    value: \'Check3\',\n                                    label: \'Checkbox Option Three\'\n                                }\n                            ]\n                        },\n                        {\n                            type: \'select\',\n                            name: \'optionsSelector1\',\n                            value: \'opt1\',\n                            label: \'Options Selector\',\n                            options: [\n                                {\n                                    value: \'opt1\',\n                                    label: \'Selector Option One\'\n                                },\n                                {\n                                    value: \'opt2\',\n                                    label: \'Selector Option Two\'\n                                },\n                                {\n                                    value: \'opt3\',\n                                    label: \'Selector Option Three\'\n                                }\n                            ],\n                            customProps: {\n                                leftIcon: \'faHouse\'\n                            }\n                        },\n                        {\n                            type: \'text\',\n                            name: \'textInput2\',\n                            label: \'Text input Two\'\n                        },\n                        {\n                            name: \'checkboxInput2\',\n                            label: \'Select options\',\n                            type: \'checkList\',\n                            options: [\n                                {\n                                    value: \'Check1\',\n                                    label: \'Checkbox Option One\'\n                                },\n                                {\n                                    value: \'Check2\',\n                                    label: \'Checkbox Option Two\'\n                                }\n                            ]\n                        },\n                        {\n                            type: \'select\',\n                            name: \'optionsSelector2\',\n                            value: \'opt1\',\n                            label: \'Options Selector Two\',\n                            options: [\n                                {\n                                    value: \'opt1\',\n                                    label: \'Selector Option One\'\n                                },\n                                {\n                                    value: \'opt2\',\n                                    label: \'Selector Option Two\'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n// EXTERNAL MODULE: ../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/compose.js + 20 modules\nvar compose = __webpack_require__("../../node_modules/.pnpm/ramda@0.30.1/node_modules/ramda/es/compose.js");\n;// ./src/__metadata__/staticText.ts\n\nconst staticTextEditor = {\n    activeForm: \'widgetParams\',\n    forms: [\n        {\n            id: \'widgetParams\',\n            title: \'Form with Reducer\',\n            fieldSets: [\n                {\n                    name: \'widgetParams\',\n                    jsonPath: \'widgetParams\',\n                    fields: [\n                        {\n                            type: \'text\',\n                            name: \'label\',\n                            label: \'Label\',\n                            value: \'!{widgetParams.widgetParams.data.label}\'\n                        },\n                        {\n                            type: \'text\',\n                            name: \'text\',\n                            label: \'Value\',\n                            value: \'!{widgetParams.widgetParams.data.text}\'\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {\n        widgetParams: {\n            widgetParams: (editorData, fieldSetData)=>{\n                const setLabel = (label)=>{\n                    return function(data) {\n                        return {\n                            ...data,\n                            widgetParams: {\n                                ...data.widgetParams,\n                                label\n                            }\n                        };\n                    };\n                };\n                const setText = (text)=>{\n                    return function(data) {\n                        return {\n                            ...data,\n                            widgetParams: {\n                                ...data.widgetParams,\n                                text\n                            }\n                        };\n                    };\n                };\n                return compose/* default */.A(setLabel(fieldSetData.label), setText(fieldSetData.text))(editorData);\n            }\n        }\n    }\n};\n\n;// ./src/__metadata__/tabbedLayout.ts\nconst tabbedLayout = {\n    displayAs: \'tabSet\',\n    activeForm: \'Form1\',\n    forms: [\n        {\n            id: \'Form1\',\n            title: \'First Form\',\n            fieldSets: [\n                {\n                    name: \'fieldset1\',\n                    fields: [\n                        {\n                            name: \'textInput\',\n                            type: \'text\',\n                            value: \'initialValue\',\n                            label: \'Text input\',\n                            required: true\n                        },\n                        {\n                            name: \'switchInput\',\n                            type: \'switch\',\n                            label: \'Switch on/of\',\n                            value: true\n                        }\n                    ]\n                },\n                {\n                    name: \'fieldset2\',\n                    title: \'Fieldset With Title\',\n                    showTitle: true,\n                    fields: [\n                        {\n                            label: \'Select value\',\n                            name: \'selector\',\n                            type: \'select\',\n                            default: \'1\',\n                            options: [\n                                {\n                                    value: \'1\',\n                                    label: \'option 1\'\n                                },\n                                {\n                                    value: \'2\',\n                                    label: \'option 2\'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            id: \'Form2\',\n            title: \'Second Form\',\n            fieldSets: [\n                {\n                    name: \'fieldset3\',\n                    fields: [\n                        {\n                            name: \'radio\',\n                            type: \'radio\',\n                            default: \'1\',\n                            options: [\n                                {\n                                    value: \'1\',\n                                    label: \'option 1\'\n                                },\n                                {\n                                    value: \'2\',\n                                    label: \'option 2\'\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    reducersMap: {}\n};\n\n;// ./src/__metadata__/withListEditor.ts\nconst withListEditor = {\n    activeForm: \'widgetParams\',\n    displayAs: \'tabSet\',\n    forms: [\n        {\n            id: \'widgetParams\',\n            title: \'Static Text\',\n            fieldSets: [\n                {\n                    name: \'widgetParams\',\n                    fields: [\n                        {\n                            type: \'text\',\n                            name: \'label\',\n                            label: \'Label\'\n                        },\n                        {\n                            type: \'text\',\n                            name: \'text\',\n                            label: \'Value\'\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            id: \'listEditor\',\n            title: \'List Editor\',\n            fieldSets: [\n                {\n                    name: \'fieldset1\',\n                    title: \'First Fieldset\',\n                    jsonPath: \'fieldset1\',\n                    fields: [\n                        {\n                            type: \'text\',\n                            name: \'label\',\n                            label: \'Label\',\n                            required: true\n                        },\n                        {\n                            type: \'select\',\n                            name: \'selector\',\n                            label: \'Select Option\',\n                            default: 1,\n                            options: [\n                                {\n                                    label: \'Option 1\',\n                                    value: 1\n                                },\n                                {\n                                    label: \'Option 2\',\n                                    value: 2\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    name: \'list\',\n                    jsonPath: \'listOfData\',\n                    type: \'fieldSetList\',\n                    canDeleteRows: true,\n                    showHeader: true,\n                    label: \'Column Types\',\n                    rowFieldset: {\n                        name: \'testListEditor\',\n                        fields: [\n                            {\n                                type: \'staticText\',\n                                name: \'field\',\n                                label: \'Field Label\'\n                            },\n                            {\n                                type: \'select\',\n                                name: \'axisType\',\n                                label: \'Axis Types\',\n                                options: [\n                                    {\n                                        label: \'Quantitative\',\n                                        value: \'quant\'\n                                    },\n                                    {\n                                        label: \'Temporal\',\n                                        value: \'temp\'\n                                    },\n                                    {\n                                        label: \'Ordinal\',\n                                        value: \'ordinal\'\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ],\n    reducersMap: {\n        widgetParams: {\n            widgetParams: (editorData, fieldSetData)=>{\n                return {\n                    ...editorData,\n                    widgetParams: {\n                        ...fieldSetData\n                    }\n                };\n            }\n        }\n    }\n};\n\n// EXTERNAL MODULE: ../../node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-runtime.js");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js\nvar react = __webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/react-intl@7.1.6_react@19.1.0_typescript@5.8.3/node_modules/react-intl/lib/src/components/provider.js + 29 modules\nvar provider = __webpack_require__("../../node_modules/.pnpm/react-intl@7.1.6_react@19.1.0_typescript@5.8.3/node_modules/react-intl/lib/src/components/provider.js");\n;// ./src/__stories__/FormEditorStory.tsx\n/* eslint-disable react/no-unused-prop-types */ \n\n\n\nconst STORY_FORM = {\n    reducersMap: {\n        preview: {\n            mainFieldset: (editorData, newData)=>{\n                return {\n                    ...editorData,\n                    fieldsLayout: newData[\'fieldsLayout\'],\n                    resultPreview: newData[\'result\']\n                };\n            }\n        }\n    },\n    forms: [\n        {\n            id: \'preview\',\n            title: \'Result Preview\',\n            showTitle: true,\n            fieldSets: [\n                {\n                    name: \'mainFieldset\',\n                    fields: [\n                        {\n                            type: \'select\',\n                            name: \'fieldsLayout\',\n                            default: \'compact\',\n                            value: \'!{fieldsLayout}\',\n                            label: \'Fields Layout\',\n                            options: [\n                                {\n                                    label: \'Compact\',\n                                    value: \'compact\'\n                                },\n                                {\n                                    label: \'Two Columns\',\n                                    value: \'twoColumn\'\n                                }\n                            ]\n                        },\n                        {\n                            type: \'textbox\',\n                            name: \'resultPreview\',\n                            label: \'Editor result\',\n                            value: \'!{resultPreview}\',\n                            customProps: {\n                                rows: 15\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n};\nconst FormEditorStory = ({ initialData, editorMetadata, dataSourceStates, componentRegistry, throttleChange, changeInterval, delayDataSource = {} })=>{\n    const [editorResult, setEditorResult] = (0,react.useState)(initialData);\n    const [fieldsLayout, setFieldsLayout] = (0,react.useState)(\'compact\');\n    const dsStates = (0,react.useRef)(dataSourceStates);\n    const [dataSources, setDataSources] = (0,react.useState)(dsStates.current);\n    const editorRef = (0,react.useRef)(null);\n    const changeHandler = (0,react.useCallback)((result, _isValid)=>{\n        setEditorResult(result);\n        editorRef.current.setData({\n            fieldsLayout,\n            resultPreview: JSON.stringify(result, null, 2)\n        });\n    }, [\n        fieldsLayout\n    ]);\n    (0,react.useEffect)(()=>{\n        Object.keys(delayDataSource).forEach((k)=>{\n            if (dsStates.current[k].status == dist/* DataStatus */.t3.Loaded) {\n                return;\n            }\n            const dsDelay = delayDataSource[k];\n            setTimeout(()=>{\n                const dsState = dsStates.current[k];\n                dsState.status = dist/* DataStatus */.t3.Loaded;\n                setDataSources({\n                    ...dsStates.current\n                });\n            }, dsDelay);\n        });\n    }, [\n        delayDataSource\n    ]);\n    const handleStoryFormChange = (0,react.useCallback)((result)=>{\n        setFieldsLayout(result.fieldsLayout);\n    }, []);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(provider/* default */.A, {\n        locale: "en",\n        messages: {},\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)("div", {\n            className: "config-editor-story content",\n            children: /*#__PURE__*/ (0,jsx_runtime.jsxs)("div", {\n                className: "grid",\n                children: [\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)("div", {\n                        className: "cell box is-col-span-2",\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(dist/* FormEditor */.kE, {\n                            editorMetadata: {\n                                ...editorMetadata,\n                                fieldsLayout\n                            },\n                            initialData: initialData,\n                            onChange: changeHandler,\n                            throttleChange: throttleChange,\n                            changeInterval: changeInterval,\n                            dataSourceStates: dataSources,\n                            componentRegistry: componentRegistry\n                        }, `formEditor-${fieldsLayout}`)\n                    }),\n                    /*#__PURE__*/ (0,jsx_runtime.jsx)("div", {\n                        className: "cell box is-col-span-1 has-background-primary-light",\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(dist/* FormEditor */.kE, {\n                            editorRef: editorRef,\n                            editorMetadata: STORY_FORM,\n                            initialData: {\n                                fieldsLayout,\n                                resultPreview: JSON.stringify(editorResult, null, 2)\n                            },\n                            onChange: handleStoryFormChange,\n                            componentRegistry: componentRegistry\n                        })\n                    })\n                ]\n            })\n        })\n    });\n};\nFormEditorStory.__docgenInfo = {\n    "description": "",\n    "methods": [],\n    "displayName": "FormEditorStory",\n    "props": {\n        "editorMetadataMap": {\n            "required": false,\n            "tsType": {\n                "name": "signature",\n                "type": "object",\n                "raw": "{ [key: string]: EditorMetadata }",\n                "signature": {\n                    "properties": [\n                        {\n                            "key": {\n                                "name": "string"\n                            },\n                            "value": {\n                                "name": "signature",\n                                "type": "object",\n                                "raw": "{\\n  /**\\n   * List of forms in the editor\\n   */\\n  forms: FormMetadata[];\\n\\n  /**\\n   * Global setting for fields layout - if not specified it uses \'compact\'\\n   */\\n  fieldsLayout?: FieldsLayout;\\n\\n  /**\\n   * Reducer map. Maps field set name to the function that will be modifying when any of the fieldset is changed.\\n   */\\n  reducersMap: ReducersMap<T>;\\n\\n  /**\\n   * Editor Title\\n   */\\n  title?: string;\\n\\n  /**\\n   * Form that will be first active when editor is open.\\n   */\\n  activeForm?: string;\\n\\n  /**\\n   * Data sources that bring Data for the editor.\\n   */\\n  dataSources?: DataSourceConfig[];\\n\\n  /**\\n   * Controls how editor is presented to the user.\\n   * When \'tabSet\' is specified each form will be placed in its own tab otherwise it all forms are listed in one screen.\\n   *\\n   */\\n  displayAs?: \'tabSet\' | \'onePage\';\\n\\n  /**\\n   * Global editor result validator\\n   */\\n  resultValidator?: ResultValidator<T>;\\n}",\n                                "signature": {\n                                    "properties": [\n                                        {\n                                            "key": "forms",\n                                            "value": {\n                                                "name": "Array",\n                                                "elements": [\n                                                    {\n                                                        "name": "signature",\n                                                        "type": "object",\n                                                        "raw": "{\\n  /**\\n   * Unique (within one editor) id\\n   */\\n  id: string;\\n  title?: string;\\n  /**\\n   * List of form fieldsets\\n   */\\n  fieldSets: FieldSetEntry[];\\n\\n  /**\\n   * Data path is the json path to data object in the data that is being edited\\n   */\\n  jsonPath?: string;\\n  showTitle?: boolean;\\n}",\n                                                        "signature": {\n                                                            "properties": [\n                                                                {\n                                                                    "key": "id",\n                                                                    "value": {\n                                                                        "name": "string",\n                                                                        "required": true\n                                                                    },\n                                                                    "description": "Unique (within one editor) id"\n                                                                },\n                                                                {\n                                                                    "key": "title",\n                                                                    "value": {\n                                                                        "name": "string",\n                                                                        "required": false\n                                                                    }\n                                                                },\n                                                                {\n                                                                    "key": "fieldSets",\n                                                                    "value": {\n                                                                        "name": "Array",\n                                                                        "elements": [\n                                                                            {\n                                                                                "name": "intersection",\n                                                                                "raw": "(FieldSetMetadata | ListEditorMetadata) & {\\n  type?: \'fieldSet\' | \'fieldSetList\';\\n}",\n                                                                                "elements": [\n                                                                                    {\n                                                                                        "name": "unknown"\n                                                                                    },\n                                                                                    {\n                                                                                        "name": "signature",\n                                                                                        "type": "object",\n                                                                                        "raw": "{\\n  type?: \'fieldSet\' | \'fieldSetList\';\\n}",\n                                                                                        "signature": {\n                                                                                            "properties": [\n                                                                                                {\n                                                                                                    "key": "type",\n                                                                                                    "value": {\n                                                                                                        "name": "union",\n                                                                                                        "raw": "\'fieldSet\' | \'fieldSetList\'",\n                                                                                                        "elements": [\n                                                                                                            {\n                                                                                                                "name": "literal",\n                                                                                                                "value": "\'fieldSet\'"\n                                                                                                            },\n                                                                                                            {\n                                                                                                                "name": "literal",\n                                                                                                                "value": "\'fieldSetList\'"\n                                                                                                            }\n                                                                                                        ],\n                                                                                                        "required": false\n                                                                                                    }\n                                                                                                }\n                                                                                            ]\n                                                                                        }\n                                                                                    }\n                                                                                ]\n                                                                            }\n                                                                        ],\n                                                                        "raw": "FieldSetEntry[]",\n                                                                        "required": true\n                                                                    },\n                                                                    "description": "List of form fieldsets"\n                                                                },\n                                                                {\n                                                                    "key": "jsonPath",\n                                                                    "value": {\n                                                                        "name": "string",\n                                                                        "required": false\n                                                                    },\n                                                                    "description": "Data path is the json path to data object in the data that is being edited"\n                                                                },\n                                                                {\n                                                                    "key": "showTitle",\n                                                                    "value": {\n                                                                        "name": "boolean",\n                                                                        "required": false\n                                                                    }\n                                                                }\n                                                            ]\n                                                        }\n                                                    }\n                                                ],\n                                                "raw": "FormMetadata[]",\n                                                "required": true\n                                            },\n                                            "description": "List of forms in the editor"\n                                        },\n                                        {\n                                            "key": "fieldsLayout",\n                                            "value": {\n                                                "name": "union",\n                                                "raw": "\'twoColumn\' | \'compact\' | \'twoColumnJustified\'",\n                                                "elements": [\n                                                    {\n                                                        "name": "literal",\n                                                        "value": "\'twoColumn\'"\n                                                    },\n                                                    {\n                                                        "name": "literal",\n                                                        "value": "\'compact\'"\n                                                    },\n                                                    {\n                                                        "name": "literal",\n                                                        "value": "\'twoColumnJustified\'"\n                                                    }\n                                                ],\n                                                "required": false\n                                            },\n                                            "description": "Global setting for fields layout - if not specified it uses \'compact\'"\n                                        },\n                                        {\n                                            "key": "reducersMap",\n                                            "value": {\n                                                "name": "signature",\n                                                "type": "object",\n                                                "raw": "{\\n  [key: string]: { [key: string]: FieldSetReducer<T> | FieldSetRecordsReducer<T> };\\n}",\n                                                "signature": {\n                                                    "properties": [\n                                                        {\n                                                            "key": {\n                                                                "name": "string"\n                                                            },\n                                                            "value": {\n                                                                "name": "signature",\n                                                                "type": "object",\n                                                                "raw": "{ [key: string]: FieldSetReducer<T> | FieldSetRecordsReducer<T> }",\n                                                                "signature": {\n                                                                    "properties": [\n                                                                        {\n                                                                            "key": {\n                                                                                "name": "string"\n                                                                            },\n                                                                            "value": {\n                                                                                "name": "union",\n                                                                                "raw": "FieldSetReducer<T> | FieldSetRecordsReducer<T>",\n                                                                                "elements": [\n                                                                                    {\n                                                                                        "name": "signature",\n                                                                                        "type": "function",\n                                                                                        "raw": "(\\n  editorData: T,\\n  newData: ParamsMap,\\n  contextParams?: { [key: string]: unknown }\\n) => T",\n                                                                                        "signature": {\n                                                                                            "arguments": [\n                                                                                                {\n                                                                                                    "type": {\n                                                                                                        "name": "T"\n                                                                                                    },\n                                                                                                    "name": "editorData"\n                                                                                                },\n                                                                                                {\n                                                                                                    "type": {\n                                                                                                        "name": "signature",\n                                                                                                        "type": "object",\n                                                                                                        "raw": "{ [key: string]: ParamValue }",\n                                                                                                        "signature": {\n                                                                                                            "properties": [\n                                                                                                                {\n                                                                                                                    "key": {\n                                                                                                                        "name": "string"\n                                                                                                                    },\n                                                                                                                    "value": {\n                                                                                                                        "name": "union",\n                                                                                                                        "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                        "elements": [\n                                                                                                                            {\n                                                                                                                                "name": "string"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "number"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "boolean"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "object"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "Array",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "object"\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "raw": "object[]"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "null"\n                                                                                                                            }\n                                                                                                                        ],\n                                                                                                                        "required": true\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            ]\n                                                                                                        }\n                                                                                                    },\n                                                                                                    "name": "newData"\n                                                                                                },\n                                                                                                {\n                                                                                                    "type": {\n                                                                                                        "name": "signature",\n                                                                                                        "type": "object",\n                                                                                                        "raw": "{ [key: string]: unknown }",\n                                                                                                        "signature": {\n                                                                                                            "properties": [\n                                                                                                                {\n                                                                                                                    "key": {\n                                                                                                                        "name": "string"\n                                                                                                                    },\n                                                                                                                    "value": {\n                                                                                                                        "name": "unknown",\n                                                                                                                        "required": true\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            ]\n                                                                                                        }\n                                                                                                    },\n                                                                                                    "name": "contextParams"\n                                                                                                }\n                                                                                            ],\n                                                                                            "return": {\n                                                                                                "name": "T"\n                                                                                            }\n                                                                                        }\n                                                                                    },\n                                                                                    {\n                                                                                        "name": "signature",\n                                                                                        "type": "function",\n                                                                                        "raw": "(\\n  editorData: T,\\n  newData: RecordsArray,\\n  contextParams?: { [key: string]: unknown }\\n) => T",\n                                                                                        "signature": {\n                                                                                            "arguments": [\n                                                                                                {\n                                                                                                    "type": {\n                                                                                                        "name": "T"\n                                                                                                    },\n                                                                                                    "name": "editorData"\n                                                                                                },\n                                                                                                {\n                                                                                                    "type": {\n                                                                                                        "name": "Array",\n                                                                                                        "elements": [\n                                                                                                            {\n                                                                                                                "name": "signature",\n                                                                                                                "type": "object",\n                                                                                                                "raw": "{ [key: string]: DataCellValue }",\n                                                                                                                "signature": {\n                                                                                                                    "properties": [\n                                                                                                                        {\n                                                                                                                            "key": {\n                                                                                                                                "name": "string"\n                                                                                                                            },\n                                                                                                                            "value": {\n                                                                                                                                "name": "union",\n                                                                                                                                "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "string"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "number"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "boolean"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "object"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "Array",\n                                                                                                                                        "elements": [\n                                                                                                                                            {\n                                                                                                                                                "name": "object"\n                                                                                                                                            }\n                                                                                                                                        ],\n                                                                                                                                        "raw": "object[]"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "null"\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "required": true\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    ]\n                                                                                                                }\n                                                                                                            }\n                                                                                                        ],\n                                                                                                        "raw": "DataRecord[]"\n                                                                                                    },\n                                                                                                    "name": "newData"\n                                                                                                },\n                                                                                                {\n                                                                                                    "type": {\n                                                                                                        "name": "signature",\n                                                                                                        "type": "object",\n                                                                                                        "raw": "{ [key: string]: unknown }",\n                                                                                                        "signature": {\n                                                                                                            "properties": [\n                                                                                                                {\n                                                                                                                    "key": {\n                                                                                                                        "name": "string"\n                                                                                                                    },\n                                                                                                                    "value": {\n                                                                                                                        "name": "unknown",\n                                                                                                                        "required": true\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            ]\n                                                                                                        }\n                                                                                                    },\n                                                                                                    "name": "contextParams"\n                                                                                                }\n                                                                                            ],\n                                                                                            "return": {\n                                                                                                "name": "T"\n                                                                                            }\n                                                                                        }\n                                                                                    }\n                                                                                ],\n                                                                                "required": true\n                                                                            }\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                "required": true\n                                                            }\n                                                        }\n                                                    ]\n                                                },\n                                                "required": true\n                                            },\n                                            "description": "Reducer map. Maps field set name to the function that will be modifying when any of the fieldset is changed."\n                                        },\n                                        {\n                                            "key": "title",\n                                            "value": {\n                                                "name": "string",\n                                                "required": false\n                                            },\n                                            "description": "Editor Title"\n                                        },\n                                        {\n                                            "key": "activeForm",\n                                            "value": {\n                                                "name": "string",\n                                                "required": false\n                                            },\n                                            "description": "Form that will be first active when editor is open."\n                                        },\n                                        {\n                                            "key": "dataSources",\n                                            "value": {\n                                                "name": "Array",\n                                                "elements": [\n                                                    {\n                                                        "name": "signature",\n                                                        "type": "object",\n                                                        "raw": "{\\n  id: string;\\n  type: DataSourceType;\\n  action: QueryAction | ApiCallAction | StaticAction | AggregateAction;\\n  resultFormat: ResultFormat;\\n  dataBindings?: DataBinding[];\\n  accessor?: DataAccessor;\\n  transformers?: DataTransformer[];\\n}",\n                                                        "signature": {\n                                                            "properties": [\n                                                                {\n                                                                    "key": "id",\n                                                                    "value": {\n                                                                        "name": "string",\n                                                                        "required": true\n                                                                    }\n                                                                },\n                                                                {\n                                                                    "key": "type",\n                                                                    "value": {\n                                                                        "name": "DataSourceType",\n                                                                        "required": true\n                                                                    }\n                                                                },\n                                                                {\n                                                                    "key": "action",\n                                                                    "value": {\n                                                                        "name": "union",\n                                                                        "raw": "QueryAction | ApiCallAction | StaticAction | AggregateAction",\n                                                                        "elements": [\n                                                                            {\n                                                                                "name": "QueryAction"\n                                                                            },\n                                                                            {\n                                                                                "name": "ApiCallAction"\n                                                                            },\n                                                                            {\n                                                                                "name": "StaticAction"\n                                                                            },\n                                                                            {\n                                                                                "name": "AggregateAction"\n                                                                            }\n                                                                        ],\n                                                                        "required": true\n                                                                    }\n                                                                },\n                                                                {\n                                                                    "key": "resultFormat",\n                                                                    "value": {\n                                                                        "name": "ResultFormat",\n                                                                        "required": true\n                                                                    }\n                                                                },\n                                                                {\n                                                                    "key": "dataBindings",\n                                                                    "value": {\n                                                                        "name": "Array",\n                                                                        "elements": [\n                                                                            {\n                                                                                "name": "signature",\n                                                                                "type": "object",\n                                                                                "raw": "{\\n  widgetId?: string;\\n  datasourceId?: string;\\n  type: ComponentTypeEnum;\\n  /**\\n   * targetProperty specifies where data will be injected if targetProperty is \\"$data\\" it means that data\\n   * from Data Binding will be passed as the data to the component this is most useful for data visualization\\n   * components.\\n   */\\n  targetProperty?: string;\\n  staticValue?: object;\\n  changeMode?: DataChangeMode;\\n\\n  // If specified, uses this property field on reach record as the unique ID for the merge behavior.\\n  mergeOnField?: string;\\n\\n  jsonPath?: string;\\n  /**\\n   * Accessor Expression. Used to access values inside Object Hierarchies.\\n   * Useful when for example DataSource result is in the format where the\\n   * data produced by the data source requires child object. In case of\\n   * Widget binding accessor can be used to access child hierarchy of\\n   * the bound state.\\n   *\\n   *  Example 1: Data Source result is in format:\\n   *\\n   *    {\\n   *      fullComparison: {...},\\n   *      topRegressions: {...},\\n   *      topImprovements: {...}\\n   *    }\\n   *\\n   *  if Component requires only \'topRegressions\' object component can specify topRegressions as an accessor path.\\n   *\\n   *    {\\n   *        accessor: {\\n   *            type: AccessorType.FetchPropertyPath,\\n   *            attributePath: \'topRegressions\'\\n   *        }\\n   *    }\\n   *  Example 2: Data source result is an array of objects and we need to access only one property of the object or\\n   *  one or two elements of the object. [{id: \\"1\\", title: \\"Title1\\"}, {id: \\"2\\", title: \\"Title2\\"}, {id: \\"3\\", title: \\"Title3\\"}]\\n   *\\n   *    {\\n   *        type: AccessorType.RemapRecordsArray\\n   *        propertyMap: {\\n   *          id: \\"recordId\\"\\n   *          title: \\"titleString\\"\\n   *        }\\n   *    }\\n   *    produces result of:\\n   *      [\\n   *        {recordId: \\"1\\", titleString: \\"Title1\\"},\\n   *        {recordId: \\"2\\", titleString: \\"Title1\\"},\\n   *        {recordId: \\"3\\", titleString: \\"Title1\\"}\\n   *      ]\\n   */\\n  accessor?: DataAccessor;\\n  /**\\n   * If specified data is first retrieved and the transformed accordingly (Currently not used)\\n   */\\n  transformers?: DataTransformer[];\\n}",\n                                                                                "signature": {\n                                                                                    "properties": [\n                                                                                        {\n                                                                                            "key": "widgetId",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "datasourceId",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "type",\n                                                                                            "value": {\n                                                                                                "name": "ComponentTypeEnum",\n                                                                                                "required": true\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "targetProperty",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            },\n                                                                                            "description": "targetProperty specifies where data will be injected if targetProperty is \\"$data\\" it means that data\\nfrom Data Binding will be passed as the data to the component this is most useful for data visualization\\ncomponents."\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "staticValue",\n                                                                                            "value": {\n                                                                                                "name": "object",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "changeMode",\n                                                                                            "value": {\n                                                                                                "name": "union",\n                                                                                                "raw": "\'replace\' | \'merge\'",\n                                                                                                "elements": [\n                                                                                                    {\n                                                                                                        "name": "literal",\n                                                                                                        "value": "\'replace\'"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "literal",\n                                                                                                        "value": "\'merge\'"\n                                                                                                    }\n                                                                                                ],\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "mergeOnField",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "jsonPath",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "accessor",\n                                                                                            "value": {\n                                                                                                "name": "signature",\n                                                                                                "type": "object",\n                                                                                                "raw": "{\\n  type: AccessorType;\\n  jsonPath?: string;\\n  property?: string;\\n}",\n                                                                                                "signature": {\n                                                                                                    "properties": [\n                                                                                                        {\n                                                                                                            "key": "type",\n                                                                                                            "value": {\n                                                                                                                "name": "AccessorType",\n                                                                                                                "required": true\n                                                                                                            }\n                                                                                                        },\n                                                                                                        {\n                                                                                                            "key": "jsonPath",\n                                                                                                            "value": {\n                                                                                                                "name": "string",\n                                                                                                                "required": false\n                                                                                                            }\n                                                                                                        },\n                                                                                                        {\n                                                                                                            "key": "property",\n                                                                                                            "value": {\n                                                                                                                "name": "string",\n                                                                                                                "required": false\n                                                                                                            }\n                                                                                                        }\n                                                                                                    ]\n                                                                                                },\n                                                                                                "required": false\n                                                                                            },\n                                                                                            "description": "Accessor Expression. Used to access values inside Object Hierarchies.\\nUseful when for example DataSource result is in the format where the\\ndata produced by the data source requires child object. In case of\\nWidget binding accessor can be used to access child hierarchy of\\nthe bound state.\\n\\n Example 1: Data Source result is in format:\\n\\n   {\\n     fullComparison: {...},\\n     topRegressions: {...},\\n     topImprovements: {...}\\n   }\\n\\n if Component requires only \'topRegressions\' object component can specify topRegressions as an accessor path.\\n\\n   {\\n       accessor: {\\n           type: AccessorType.FetchPropertyPath,\\n           attributePath: \'topRegressions\'\\n       }\\n   }\\n Example 2: Data source result is an array of objects and we need to access only one property of the object or\\n one or two elements of the object. [{id: \\"1\\", title: \\"Title1\\"}, {id: \\"2\\", title: \\"Title2\\"}, {id: \\"3\\", title: \\"Title3\\"}]\\n\\n   {\\n       type: AccessorType.RemapRecordsArray\\n       propertyMap: {\\n         id: \\"recordId\\"\\n         title: \\"titleString\\"\\n       }\\n   }\\n   produces result of:\\n     [\\n       {recordId: \\"1\\", titleString: \\"Title1\\"},\\n       {recordId: \\"2\\", titleString: \\"Title1\\"},\\n       {recordId: \\"3\\", titleString: \\"Title1\\"}\\n     ]"\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "transformers",\n                                                                                            "value": {\n                                                                                                "name": "Array",\n                                                                                                "elements": [\n                                                                                                    {\n                                                                                                        "name": "signature",\n                                                                                                        "type": "object",\n                                                                                                        "raw": "{\\n  type: TransformType;\\n\\n  /**\\n   * if this property is specified the source object is retrieved from this path first\\n   */\\n  sourceJsonPath?: string;\\n  /**\\n   * source->target\\n   */\\n  propertyMap?: {\\n    [key: string]: string;\\n  };\\n\\n  /*\\n   * List of properties (keys).\\n   */\\n  propertyKvList?: [string, string | number][];\\n\\n  objectTemplate?: object;\\n\\n  sortBy?: string; // field Name\\n\\n  groupBy?: string; // group by field name\\n\\n  sortOrder?: \'asc\' | \'desc\';\\n\\n  targetColumn?: string;\\n\\n  precision?: number; //Number of fraction digits\\n\\n  delimiter?: string;\\n\\n  targetJsonPath?: string;\\n\\n  targetProperty?: string;\\n  sourceProperty?: string;\\n  caseSensitive?: boolean;\\n  datetimeFormat?: string;\\n  value?: DefaultDataTypes;\\n  valuesMap?: {\\n    accessor?: DataAccessor;\\n    data?: { [key: string]: DataCellValue };\\n  };\\n\\n  // Used by filtering transformers\\n  // If set to true, filter will include by condition\\n  // If set to failse, filter will exclude by condition\\n  include?: boolean;\\n  splitBy?: string;\\n}",\n                                                                                                        "signature": {\n                                                                                                            "properties": [\n                                                                                                                {\n                                                                                                                    "key": "type",\n                                                                                                                    "value": {\n                                                                                                                        "name": "TransformType",\n                                                                                                                        "required": true\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "sourceJsonPath",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    },\n                                                                                                                    "description": "if this property is specified the source object is retrieved from this path first"\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "propertyMap",\n                                                                                                                    "value": {\n                                                                                                                        "name": "signature",\n                                                                                                                        "type": "object",\n                                                                                                                        "raw": "{\\n  [key: string]: string;\\n}",\n                                                                                                                        "signature": {\n                                                                                                                            "properties": [\n                                                                                                                                {\n                                                                                                                                    "key": {\n                                                                                                                                        "name": "string"\n                                                                                                                                    },\n                                                                                                                                    "value": {\n                                                                                                                                        "name": "string",\n                                                                                                                                        "required": true\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            ]\n                                                                                                                        },\n                                                                                                                        "required": false\n                                                                                                                    },\n                                                                                                                    "description": "source->target"\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "propertyKvList",\n                                                                                                                    "value": {\n                                                                                                                        "name": "Array",\n                                                                                                                        "elements": [\n                                                                                                                            {\n                                                                                                                                "name": "tuple",\n                                                                                                                                "raw": "[string, string | number]",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "string"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "union",\n                                                                                                                                        "raw": "string | number",\n                                                                                                                                        "elements": [\n                                                                                                                                            {\n                                                                                                                                                "name": "string"\n                                                                                                                                            },\n                                                                                                                                            {\n                                                                                                                                                "name": "number"\n                                                                                                                                            }\n                                                                                                                                        ]\n                                                                                                                                    }\n                                                                                                                                ]\n                                                                                                                            }\n                                                                                                                        ],\n                                                                                                                        "raw": "[string, string | number][]",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "objectTemplate",\n                                                                                                                    "value": {\n                                                                                                                        "name": "object",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "sortBy",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "groupBy",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "sortOrder",\n                                                                                                                    "value": {\n                                                                                                                        "name": "union",\n                                                                                                                        "raw": "\'asc\' | \'desc\'",\n                                                                                                                        "elements": [\n                                                                                                                            {\n                                                                                                                                "name": "literal",\n                                                                                                                                "value": "\'asc\'"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "literal",\n                                                                                                                                "value": "\'desc\'"\n                                                                                                                            }\n                                                                                                                        ],\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "targetColumn",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "precision",\n                                                                                                                    "value": {\n                                                                                                                        "name": "number",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "delimiter",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "targetJsonPath",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "targetProperty",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "sourceProperty",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "caseSensitive",\n                                                                                                                    "value": {\n                                                                                                                        "name": "boolean",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "datetimeFormat",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "value",\n                                                                                                                    "value": {\n                                                                                                                        "name": "union",\n                                                                                                                        "raw": "| RecordsArray\\n| DataCellValue\\n| (string | object)[]\\n| { [key: string]: object | RecordsArray }\\n| undefined",\n                                                                                                                        "elements": [\n                                                                                                                            {\n                                                                                                                                "name": "Array",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "signature",\n                                                                                                                                        "type": "object",\n                                                                                                                                        "raw": "{ [key: string]: DataCellValue }",\n                                                                                                                                        "signature": {\n                                                                                                                                            "properties": [\n                                                                                                                                                {\n                                                                                                                                                    "key": {\n                                                                                                                                                        "name": "string"\n                                                                                                                                                    },\n                                                                                                                                                    "value": {\n                                                                                                                                                        "name": "union",\n                                                                                                                                                        "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                                                        "elements": [\n                                                                                                                                                            {\n                                                                                                                                                                "name": "string"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "number"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "boolean"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "object"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "Array",\n                                                                                                                                                                "elements": [\n                                                                                                                                                                    {\n                                                                                                                                                                        "name": "object"\n                                                                                                                                                                    }\n                                                                                                                                                                ],\n                                                                                                                                                                "raw": "object[]"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "null"\n                                                                                                                                                            }\n                                                                                                                                                        ],\n                                                                                                                                                        "required": true\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            ]\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "raw": "DataRecord[]"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "union",\n                                                                                                                                "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "string"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "number"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "boolean"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "object"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "Array",\n                                                                                                                                        "elements": [\n                                                                                                                                            {\n                                                                                                                                                "name": "object"\n                                                                                                                                            }\n                                                                                                                                        ],\n                                                                                                                                        "raw": "object[]"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "null"\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "required": true\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "Array",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "unknown"\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "raw": "(string | object)[]"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "signature",\n                                                                                                                                "type": "object",\n                                                                                                                                "raw": "{ [key: string]: object | RecordsArray }",\n                                                                                                                                "signature": {\n                                                                                                                                    "properties": [\n                                                                                                                                        {\n                                                                                                                                            "key": {\n                                                                                                                                                "name": "string"\n                                                                                                                                            },\n                                                                                                                                            "value": {\n                                                                                                                                                "name": "union",\n                                                                                                                                                "raw": "object | RecordsArray",\n                                                                                                                                                "elements": [\n                                                                                                                                                    {\n                                                                                                                                                        "name": "object"\n                                                                                                                                                    },\n                                                                                                                                                    {\n                                                                                                                                                        "name": "Array",\n                                                                                                                                                        "elements": [\n                                                                                                                                                            {\n                                                                                                                                                                "name": "signature",\n                                                                                                                                                                "type": "object",\n                                                                                                                                                                "raw": "{ [key: string]: DataCellValue }",\n                                                                                                                                                                "signature": {\n                                                                                                                                                                    "properties": [\n                                                                                                                                                                        {\n                                                                                                                                                                            "key": {\n                                                                                                                                                                                "name": "string"\n                                                                                                                                                                            },\n                                                                                                                                                                            "value": {\n                                                                                                                                                                                "name": "union",\n                                                                                                                                                                                "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                                                                                "elements": [\n                                                                                                                                                                                    {\n                                                                                                                                                                                        "name": "string"\n                                                                                                                                                                                    },\n                                                                                                                                                                                    {\n                                                                                                                                                                                        "name": "number"\n                                                                                                                                                                                    },\n                                                                                                                                                                                    {\n                                                                                                                                                                                        "name": "boolean"\n                                                                                                                                                                                    },\n                                                                                                                                                                                    {\n                                                                                                                                                                                        "name": "object"\n                                                                                                                                                                                    },\n                                                                                                                                                                                    {\n                                                                                                                                                                                        "name": "Array",\n                                                                                                                                                                                        "elements": [\n                                                                                                                                                                                            {\n                                                                                                                                                                                                "name": "object"\n                                                                                                                                                                                            }\n                                                                                                                                                                                        ],\n                                                                                                                                                                                        "raw": "object[]"\n                                                                                                                                                                                    },\n                                                                                                                                                                                    {\n                                                                                                                                                                                        "name": "null"\n                                                                                                                                                                                    }\n                                                                                                                                                                                ],\n                                                                                                                                                                                "required": true\n                                                                                                                                                                            }\n                                                                                                                                                                        }\n                                                                                                                                                                    ]\n                                                                                                                                                                }\n                                                                                                                                                            }\n                                                                                                                                                        ],\n                                                                                                                                                        "raw": "DataRecord[]"\n                                                                                                                                                    }\n                                                                                                                                                ],\n                                                                                                                                                "required": true\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    ]\n                                                                                                                                }\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "undefined"\n                                                                                                                            }\n                                                                                                                        ],\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "valuesMap",\n                                                                                                                    "value": {\n                                                                                                                        "name": "signature",\n                                                                                                                        "type": "object",\n                                                                                                                        "raw": "{\\n  accessor?: DataAccessor;\\n  data?: { [key: string]: DataCellValue };\\n}",\n                                                                                                                        "signature": {\n                                                                                                                            "properties": [\n                                                                                                                                {\n                                                                                                                                    "key": "accessor",\n                                                                                                                                    "value": {\n                                                                                                                                        "name": "signature",\n                                                                                                                                        "type": "object",\n                                                                                                                                        "raw": "{\\n  type: AccessorType;\\n  jsonPath?: string;\\n  property?: string;\\n}",\n                                                                                                                                        "signature": {\n                                                                                                                                            "properties": [\n                                                                                                                                                {\n                                                                                                                                                    "key": "type",\n                                                                                                                                                    "value": {\n                                                                                                                                                        "name": "AccessorType",\n                                                                                                                                                        "required": true\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                {\n                                                                                                                                                    "key": "jsonPath",\n                                                                                                                                                    "value": {\n                                                                                                                                                        "name": "string",\n                                                                                                                                                        "required": false\n                                                                                                                                                    }\n                                                                                                                                                },\n                                                                                                                                                {\n                                                                                                                                                    "key": "property",\n                                                                                                                                                    "value": {\n                                                                                                                                                        "name": "string",\n                                                                                                                                                        "required": false\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            ]\n                                                                                                                                        },\n                                                                                                                                        "required": false\n                                                                                                                                    }\n                                                                                                                                },\n                                                                                                                                {\n                                                                                                                                    "key": "data",\n                                                                                                                                    "value": {\n                                                                                                                                        "name": "signature",\n                                                                                                                                        "type": "object",\n                                                                                                                                        "raw": "{ [key: string]: DataCellValue }",\n                                                                                                                                        "signature": {\n                                                                                                                                            "properties": [\n                                                                                                                                                {\n                                                                                                                                                    "key": {\n                                                                                                                                                        "name": "string"\n                                                                                                                                                    },\n                                                                                                                                                    "value": {\n                                                                                                                                                        "name": "union",\n                                                                                                                                                        "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                                                        "elements": [\n                                                                                                                                                            {\n                                                                                                                                                                "name": "string"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "number"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "boolean"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "object"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "Array",\n                                                                                                                                                                "elements": [\n                                                                                                                                                                    {\n                                                                                                                                                                        "name": "object"\n                                                                                                                                                                    }\n                                                                                                                                                                ],\n                                                                                                                                                                "raw": "object[]"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "null"\n                                                                                                                                                            }\n                                                                                                                                                        ],\n                                                                                                                                                        "required": true\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            ]\n                                                                                                                                        },\n                                                                                                                                        "required": false\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            ]\n                                                                                                                        },\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "include",\n                                                                                                                    "value": {\n                                                                                                                        "name": "boolean",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "splitBy",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            ]\n                                                                                                        }\n                                                                                                    }\n                                                                                                ],\n                                                                                                "raw": "DataTransformer[]",\n                                                                                                "required": false\n                                                                                            },\n                                                                                            "description": "If specified data is first retrieved and the transformed accordingly (Currently not used)"\n                                                                                        }\n                                                                                    ]\n                                                                                }\n                                                                            }\n                                                                        ],\n                                                                        "raw": "DataBinding[]",\n                                                                        "required": false\n                                                                    }\n                                                                },\n                                                                {\n                                                                    "key": "accessor",\n                                                                    "value": {\n                                                                        "name": "signature",\n                                                                        "type": "object",\n                                                                        "raw": "{\\n  type: AccessorType;\\n  jsonPath?: string;\\n  property?: string;\\n}",\n                                                                        "signature": {\n                                                                            "properties": [\n                                                                                {\n                                                                                    "key": "type",\n                                                                                    "value": {\n                                                                                        "name": "AccessorType",\n                                                                                        "required": true\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "jsonPath",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "property",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                }\n                                                                            ]\n                                                                        },\n                                                                        "required": false\n                                                                    }\n                                                                },\n                                                                {\n                                                                    "key": "transformers",\n                                                                    "value": {\n                                                                        "name": "Array",\n                                                                        "elements": [\n                                                                            {\n                                                                                "name": "signature",\n                                                                                "type": "object",\n                                                                                "raw": "{\\n  type: TransformType;\\n\\n  /**\\n   * if this property is specified the source object is retrieved from this path first\\n   */\\n  sourceJsonPath?: string;\\n  /**\\n   * source->target\\n   */\\n  propertyMap?: {\\n    [key: string]: string;\\n  };\\n\\n  /*\\n   * List of properties (keys).\\n   */\\n  propertyKvList?: [string, string | number][];\\n\\n  objectTemplate?: object;\\n\\n  sortBy?: string; // field Name\\n\\n  groupBy?: string; // group by field name\\n\\n  sortOrder?: \'asc\' | \'desc\';\\n\\n  targetColumn?: string;\\n\\n  precision?: number; //Number of fraction digits\\n\\n  delimiter?: string;\\n\\n  targetJsonPath?: string;\\n\\n  targetProperty?: string;\\n  sourceProperty?: string;\\n  caseSensitive?: boolean;\\n  datetimeFormat?: string;\\n  value?: DefaultDataTypes;\\n  valuesMap?: {\\n    accessor?: DataAccessor;\\n    data?: { [key: string]: DataCellValue };\\n  };\\n\\n  // Used by filtering transformers\\n  // If set to true, filter will include by condition\\n  // If set to failse, filter will exclude by condition\\n  include?: boolean;\\n  splitBy?: string;\\n}",\n                                                                                "signature": {\n                                                                                    "properties": [\n                                                                                        {\n                                                                                            "key": "type",\n                                                                                            "value": {\n                                                                                                "name": "TransformType",\n                                                                                                "required": true\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "sourceJsonPath",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            },\n                                                                                            "description": "if this property is specified the source object is retrieved from this path first"\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "propertyMap",\n                                                                                            "value": {\n                                                                                                "name": "signature",\n                                                                                                "type": "object",\n                                                                                                "raw": "{\\n  [key: string]: string;\\n}",\n                                                                                                "signature": {\n                                                                                                    "properties": [\n                                                                                                        {\n                                                                                                            "key": {\n                                                                                                                "name": "string"\n                                                                                                            },\n                                                                                                            "value": {\n                                                                                                                "name": "string",\n                                                                                                                "required": true\n                                                                                                            }\n                                                                                                        }\n                                                                                                    ]\n                                                                                                },\n                                                                                                "required": false\n                                                                                            },\n                                                                                            "description": "source->target"\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "propertyKvList",\n                                                                                            "value": {\n                                                                                                "name": "Array",\n                                                                                                "elements": [\n                                                                                                    {\n                                                                                                        "name": "tuple",\n                                                                                                        "raw": "[string, string | number]",\n                                                                                                        "elements": [\n                                                                                                            {\n                                                                                                                "name": "string"\n                                                                                                            },\n                                                                                                            {\n                                                                                                                "name": "union",\n                                                                                                                "raw": "string | number",\n                                                                                                                "elements": [\n                                                                                                                    {\n                                                                                                                        "name": "string"\n                                                                                                                    },\n                                                                                                                    {\n                                                                                                                        "name": "number"\n                                                                                                                    }\n                                                                                                                ]\n                                                                                                            }\n                                                                                                        ]\n                                                                                                    }\n                                                                                                ],\n                                                                                                "raw": "[string, string | number][]",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "objectTemplate",\n                                                                                            "value": {\n                                                                                                "name": "object",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "sortBy",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "groupBy",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "sortOrder",\n                                                                                            "value": {\n                                                                                                "name": "union",\n                                                                                                "raw": "\'asc\' | \'desc\'",\n                                                                                                "elements": [\n                                                                                                    {\n                                                                                                        "name": "literal",\n                                                                                                        "value": "\'asc\'"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "literal",\n                                                                                                        "value": "\'desc\'"\n                                                                                                    }\n                                                                                                ],\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "targetColumn",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "precision",\n                                                                                            "value": {\n                                                                                                "name": "number",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "delimiter",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "targetJsonPath",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "targetProperty",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "sourceProperty",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "caseSensitive",\n                                                                                            "value": {\n                                                                                                "name": "boolean",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "datetimeFormat",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "value",\n                                                                                            "value": {\n                                                                                                "name": "union",\n                                                                                                "raw": "| RecordsArray\\n| DataCellValue\\n| (string | object)[]\\n| { [key: string]: object | RecordsArray }\\n| undefined",\n                                                                                                "elements": [\n                                                                                                    {\n                                                                                                        "name": "Array",\n                                                                                                        "elements": [\n                                                                                                            {\n                                                                                                                "name": "signature",\n                                                                                                                "type": "object",\n                                                                                                                "raw": "{ [key: string]: DataCellValue }",\n                                                                                                                "signature": {\n                                                                                                                    "properties": [\n                                                                                                                        {\n                                                                                                                            "key": {\n                                                                                                                                "name": "string"\n                                                                                                                            },\n                                                                                                                            "value": {\n                                                                                                                                "name": "union",\n                                                                                                                                "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "string"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "number"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "boolean"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "object"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "Array",\n                                                                                                                                        "elements": [\n                                                                                                                                            {\n                                                                                                                                                "name": "object"\n                                                                                                                                            }\n                                                                                                                                        ],\n                                                                                                                                        "raw": "object[]"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "null"\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "required": true\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    ]\n                                                                                                                }\n                                                                                                            }\n                                                                                                        ],\n                                                                                                        "raw": "DataRecord[]"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "union",\n                                                                                                        "raw": "string | number | boolean | object | object[] | null",\n                                                                                                        "elements": [\n                                                                                                            {\n                                                                                                                "name": "string"\n                                                                                                            },\n                                                                                                            {\n                                                                                                                "name": "number"\n                                                                                                            },\n                                                                                                            {\n                                                                                                                "name": "boolean"\n                                                                                                            },\n                                                                                                            {\n                                                                                                                "name": "object"\n                                                                                                            },\n                                                                                                            {\n                                                                                                                "name": "Array",\n                                                                                                                "elements": [\n                                                                                                                    {\n                                                                                                                        "name": "object"\n                                                                                                                    }\n                                                                                                                ],\n                                                                                                                "raw": "object[]"\n                                                                                                            },\n                                                                                                            {\n                                                                                                                "name": "null"\n                                                                                                            }\n                                                                                                        ],\n                                                                                                        "required": true\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "Array",\n                                                                                                        "elements": [\n                                                                                                            {\n                                                                                                                "name": "unknown"\n                                                                                                            }\n                                                                                                        ],\n                                                                                                        "raw": "(string | object)[]"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "signature",\n                                                                                                        "type": "object",\n                                                                                                        "raw": "{ [key: string]: object | RecordsArray }",\n                                                                                                        "signature": {\n                                                                                                            "properties": [\n                                                                                                                {\n                                                                                                                    "key": {\n                                                                                                                        "name": "string"\n                                                                                                                    },\n                                                                                                                    "value": {\n                                                                                                                        "name": "union",\n                                                                                                                        "raw": "object | RecordsArray",\n                                                                                                                        "elements": [\n                                                                                                                            {\n                                                                                                                                "name": "object"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "Array",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "signature",\n                                                                                                                                        "type": "object",\n                                                                                                                                        "raw": "{ [key: string]: DataCellValue }",\n                                                                                                                                        "signature": {\n                                                                                                                                            "properties": [\n                                                                                                                                                {\n                                                                                                                                                    "key": {\n                                                                                                                                                        "name": "string"\n                                                                                                                                                    },\n                                                                                                                                                    "value": {\n                                                                                                                                                        "name": "union",\n                                                                                                                                                        "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                                                        "elements": [\n                                                                                                                                                            {\n                                                                                                                                                                "name": "string"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "number"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "boolean"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "object"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "Array",\n                                                                                                                                                                "elements": [\n                                                                                                                                                                    {\n                                                                                                                                                                        "name": "object"\n                                                                                                                                                                    }\n                                                                                                                                                                ],\n                                                                                                                                                                "raw": "object[]"\n                                                                                                                                                            },\n                                                                                                                                                            {\n                                                                                                                                                                "name": "null"\n                                                                                                                                                            }\n                                                                                                                                                        ],\n                                                                                                                                                        "required": true\n                                                                                                                                                    }\n                                                                                                                                                }\n                                                                                                                                            ]\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "raw": "DataRecord[]"\n                                                                                                                            }\n                                                                                                                        ],\n                                                                                                                        "required": true\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            ]\n                                                                                                        }\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "undefined"\n                                                                                                    }\n                                                                                                ],\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "valuesMap",\n                                                                                            "value": {\n                                                                                                "name": "signature",\n                                                                                                "type": "object",\n                                                                                                "raw": "{\\n  accessor?: DataAccessor;\\n  data?: { [key: string]: DataCellValue };\\n}",\n                                                                                                "signature": {\n                                                                                                    "properties": [\n                                                                                                        {\n                                                                                                            "key": "accessor",\n                                                                                                            "value": {\n                                                                                                                "name": "signature",\n                                                                                                                "type": "object",\n                                                                                                                "raw": "{\\n  type: AccessorType;\\n  jsonPath?: string;\\n  property?: string;\\n}",\n                                                                                                                "signature": {\n                                                                                                                    "properties": [\n                                                                                                                        {\n                                                                                                                            "key": "type",\n                                                                                                                            "value": {\n                                                                                                                                "name": "AccessorType",\n                                                                                                                                "required": true\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        {\n                                                                                                                            "key": "jsonPath",\n                                                                                                                            "value": {\n                                                                                                                                "name": "string",\n                                                                                                                                "required": false\n                                                                                                                            }\n                                                                                                                        },\n                                                                                                                        {\n                                                                                                                            "key": "property",\n                                                                                                                            "value": {\n                                                                                                                                "name": "string",\n                                                                                                                                "required": false\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    ]\n                                                                                                                },\n                                                                                                                "required": false\n                                                                                                            }\n                                                                                                        },\n                                                                                                        {\n                                                                                                            "key": "data",\n                                                                                                            "value": {\n                                                                                                                "name": "signature",\n                                                                                                                "type": "object",\n                                                                                                                "raw": "{ [key: string]: DataCellValue }",\n                                                                                                                "signature": {\n                                                                                                                    "properties": [\n                                                                                                                        {\n                                                                                                                            "key": {\n                                                                                                                                "name": "string"\n                                                                                                                            },\n                                                                                                                            "value": {\n                                                                                                                                "name": "union",\n                                                                                                                                "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "string"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "number"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "boolean"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "object"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "Array",\n                                                                                                                                        "elements": [\n                                                                                                                                            {\n                                                                                                                                                "name": "object"\n                                                                                                                                            }\n                                                                                                                                        ],\n                                                                                                                                        "raw": "object[]"\n                                                                                                                                    },\n                                                                                                                                    {\n                                                                                                                                        "name": "null"\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "required": true\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    ]\n                                                                                                                },\n                                                                                                                "required": false\n                                                                                                            }\n                                                                                                        }\n                                                                                                    ]\n                                                                                                },\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "include",\n                                                                                            "value": {\n                                                                                                "name": "boolean",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        },\n                                                                                        {\n                                                                                            "key": "splitBy",\n                                                                                            "value": {\n                                                                                                "name": "string",\n                                                                                                "required": false\n                                                                                            }\n                                                                                        }\n                                                                                    ]\n                                                                                }\n                                                                            }\n                                                                        ],\n                                                                        "raw": "DataTransformer[]",\n                                                                        "required": false\n                                                                    }\n                                                                }\n                                                            ]\n                                                        }\n                                                    }\n                                                ],\n                                                "raw": "DataSourceConfig[]",\n                                                "required": false\n                                            },\n                                            "description": "Data sources that bring Data for the editor."\n                                        },\n                                        {\n                                            "key": "displayAs",\n                                            "value": {\n                                                "name": "union",\n                                                "raw": "\'tabSet\' | \'onePage\'",\n                                                "elements": [\n                                                    {\n                                                        "name": "literal",\n                                                        "value": "\'tabSet\'"\n                                                    },\n                                                    {\n                                                        "name": "literal",\n                                                        "value": "\'onePage\'"\n                                                    }\n                                                ],\n                                                "required": false\n                                            },\n                                            "description": "Controls how editor is presented to the user.\\nWhen \'tabSet\' is specified each form will be placed in its own tab otherwise it all forms are listed in one screen."\n                                        },\n                                        {\n                                            "key": "resultValidator",\n                                            "value": {\n                                                "name": "signature",\n                                                "type": "function",\n                                                "raw": "(\\n  editorData: T,\\n  contextParams?: { [key: string]: unknown }\\n) => ValidatorResult",\n                                                "signature": {\n                                                    "arguments": [\n                                                        {\n                                                            "type": {\n                                                                "name": "T"\n                                                            },\n                                                            "name": "editorData"\n                                                        },\n                                                        {\n                                                            "type": {\n                                                                "name": "signature",\n                                                                "type": "object",\n                                                                "raw": "{ [key: string]: unknown }",\n                                                                "signature": {\n                                                                    "properties": [\n                                                                        {\n                                                                            "key": {\n                                                                                "name": "string"\n                                                                            },\n                                                                            "value": {\n                                                                                "name": "unknown",\n                                                                                "required": true\n                                                                            }\n                                                                        }\n                                                                    ]\n                                                                }\n                                                            },\n                                                            "name": "contextParams"\n                                                        }\n                                                    ],\n                                                    "return": {\n                                                        "name": "signature",\n                                                        "type": "object",\n                                                        "raw": "{\\n  isValid: boolean;\\n  message?: string;\\n}",\n                                                        "signature": {\n                                                            "properties": [\n                                                                {\n                                                                    "key": "isValid",\n                                                                    "value": {\n                                                                        "name": "boolean",\n                                                                        "required": true\n                                                                    }\n                                                                },\n                                                                {\n                                                                    "key": "message",\n                                                                    "value": {\n                                                                        "name": "string",\n                                                                        "required": false\n                                                                    }\n                                                                }\n                                                            ]\n                                                        }\n                                                    }\n                                                },\n                                                "required": false\n                                            },\n                                            "description": "Global editor result validator"\n                                        }\n                                    ]\n                                },\n                                "required": true\n                            }\n                        }\n                    ]\n                }\n            },\n            "description": ""\n        },\n        "metadataName": {\n            "required": false,\n            "tsType": {\n                "name": "string"\n            },\n            "description": ""\n        },\n        "inputDataMap": {\n            "required": false,\n            "tsType": {\n                "name": "signature",\n                "type": "object",\n                "raw": "{ [key: string]: object }",\n                "signature": {\n                    "properties": [\n                        {\n                            "key": {\n                                "name": "string"\n                            },\n                            "value": {\n                                "name": "object",\n                                "required": true\n                            }\n                        }\n                    ]\n                }\n            },\n            "description": ""\n        },\n        "activeData": {\n            "required": false,\n            "tsType": {\n                "name": "string"\n            },\n            "description": ""\n        },\n        "delayDataSource": {\n            "required": false,\n            "tsType": {\n                "name": "signature",\n                "type": "object",\n                "raw": "{ [key: string]: number }",\n                "signature": {\n                    "properties": [\n                        {\n                            "key": {\n                                "name": "string"\n                            },\n                            "value": {\n                                "name": "number",\n                                "required": true\n                            }\n                        }\n                    ]\n                }\n            },\n            "description": "",\n            "defaultValue": {\n                "value": "{}",\n                "computed": false\n            }\n        }\n    }\n};\n\n// EXTERNAL MODULE: ./src/index.tsx + 24 modules\nvar src = __webpack_require__("./src/index.tsx");\n;// ./src/Editor.stories.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst meta = {\n  title: \'BULMA/FORM EDITOR\',\n  component: FormEditorStory,\n  decorators: [],\n  parameters: {},\n  args: {\n    componentRegistry: src/* BULMA_REGISTRY */.S\n  }\n};\n/* harmony default export */ const Editor_stories = (meta);\nconst Basic = {\n  args: {\n    editorMetadata: {\n      ...basicEditor,\n      reducersMap: {}\n    },\n    initialData: {}\n  }\n};\nconst mockMetadata = {\n  displayAs: \'tabSet\',\n  activeForm: \'form1\',\n  forms: [{\n    id: \'form1\',\n    title: \'Form 1\',\n    fieldSets: [{\n      name: \'fieldset1\',\n      title: \'Fieldset 1\',\n      fields: [{\n        type: \'text\',\n        name: \'field1\',\n        label: \'Field 1\',\n        required: true\n      }]\n    }]\n  }, {\n    id: \'form2\',\n    title: \'Form 2\',\n    fieldSets: [{\n      name: \'fieldset2\',\n      title: \'Fieldset 2\',\n      fields: [{\n        type: \'text\',\n        name: \'field2\',\n        label: \'Field 2\'\n      }, {\n        type: \'divider\',\n        style: \'dashed\'\n      }, {\n        type: \'text\',\n        name: \'field3\',\n        label: \'Field 3\'\n      }]\n    }]\n  }],\n  reducersMap: {}\n};\nconst BasicForTestsTabs = {\n  args: {\n    editorMetadata: mockMetadata,\n    initialData: {}\n  }\n};\nconst BasicForTestsPage = {\n  args: {\n    editorMetadata: {\n      ...mockMetadata,\n      displayAs: \'onePage\'\n    },\n    initialData: {}\n  }\n};\nconst ThrottleChange = {\n  args: {\n    editorMetadata: {\n      ...basicEditor,\n      reducersMap: {}\n    },\n    throttleChange: true,\n    initialData: {}\n  }\n};\nconst TabbedLayout = {\n  args: {\n    editorMetadata: tabbedLayout,\n    initialData: {}\n  }\n};\nconst OnePageLayout = {\n  args: {\n    editorMetadata: {\n      ...tabbedLayout,\n      forms: [{\n        ...tabbedLayout.forms[0],\n        showTitle: true\n      }, {\n        ...tabbedLayout.forms[1],\n        showTitle: true\n      }],\n      displayAs: \'onePage\'\n    },\n    initialData: {}\n  }\n};\nconst ConditionalAttributes = {\n  args: {\n    editorMetadata: editorWithConditions,\n    initialData: {}\n  }\n};\nconst WithReducer = {\n  args: {\n    editorMetadata: staticTextEditor,\n    initialData: {}\n  }\n};\nconst CollapsibleFieldsets = {\n  args: {\n    editorMetadata: editorWithCollapsibleFieldsets,\n    initialData: {}\n  }\n};\nconst ValuesFromJsonPath = {\n  args: {\n    editorMetadata: editorWithJsonPath,\n    initialData: {\n      ...mockInputObject_namespaceObject\n    }\n  }\n};\nconst missingFieldRegistry = {\n  ...src/* BULMA_REGISTRY */.S.inputFields,\n  textbox: undefined\n};\nconst UnsupportedComponent = {\n  args: {\n    editorMetadata: {\n      activeForm: \'test\',\n      forms: [{\n        id: \'test\',\n        title: \'Test Form\',\n        fieldSets: [{\n          name: \'fieldset\',\n          fields: [{\n            type: \'textbox\',\n            name: \'textBox\',\n            value: \'test\',\n            label: \'Unsupported field Type\'\n          }, {\n            type: \'text\',\n            name: \'textInput\',\n            value: \'Some Value\',\n            label: \'Some other field\'\n          }]\n        }]\n      }],\n      reducersMap: {}\n    },\n    componentRegistry: {\n      ...src/* BULMA_REGISTRY */.S,\n      inputFields: missingFieldRegistry\n    },\n    initialData: {\n      ...mockInputObject_namespaceObject\n    }\n  }\n};\nconst WithListEditor = {\n  args: {\n    editorMetadata: {\n      ...withListEditor,\n      reducersMap: {\n        widgetParams: {\n          widgetParams: (editorData, newData) => {\n            return {\n              ...editorData,\n              ...newData\n            };\n          }\n        },\n        listEditor: {\n          fieldset1: (editorData, newData) => {\n            return {\n              ...editorData,\n              fieldset1: newData\n            };\n          },\n          list: (editorData, newData) => {\n            return {\n              ...editorData,\n              listOfData: newData\n            };\n          }\n        }\n      }\n    },\n    initialData: {\n      label: \'Label\',\n      text: \'Text\',\n      listOfData: [{\n        field: \'Speed\',\n        axisType: \'quant\'\n      }, {\n        field: \'Date\',\n        axisType: \'temp\'\n      }, {\n        field: \'Color\',\n        axisType: \'ordinal\'\n      }]\n    }\n  }\n};\nconst SwitchComponent = {\n  args: {\n    editorMetadata: {\n      displayAs: \'tabSet\',\n      activeForm: \'form\',\n      forms: [{\n        id: \'form\',\n        title: \'Form Tab\',\n        showTitle: true,\n        fieldSets: [{\n          title: \'Some Fieldset Title\',\n          name: \'fieldsetWithSwitchList\',\n          showTitle: true,\n          fields: [{\n            type: \'switchList\',\n            name: \'switchList\',\n            label: \'Switch List\',\n            options: [{\n              label: \'Switch One\',\n              value: \'one\'\n            }, {\n              label: \'Switch Two\',\n              value: \'two\'\n            }, {\n              label: \'Switch Three\',\n              value: \'three\'\n            }, {\n              label: \'Switch Four\',\n              value: \'four\'\n            }],\n            value: \'!{objectOfSomeKind.switchValues}\'\n          }, {\n            type: \'checkList\',\n            name: \'checkList\',\n            label: \'Check List\',\n            options: [{\n              label: \'Check One\',\n              value: 1\n            }, {\n              label: \'Check Two\',\n              value: 2\n            }, {\n              label: \'Check Three\',\n              value: 3\n            }, {\n              label: \'Check Four\',\n              value: 4\n            }],\n            value: \'!{objectOfSomeKind.checkValues}\'\n          }]\n        }]\n      }],\n      reducersMap: {\n        form: {\n          fieldsetWithSwitchList: (editorData, newData) => {\n            return {\n              ...editorData,\n              objectOfSomeKind: {\n                ...editorData.objectOfSomeKind,\n                switchValues: newData.switchList,\n                checkValues: newData.checkList\n              }\n            };\n          }\n        }\n      }\n    },\n    initialData: {\n      objectOfSomeKind: {\n        switchValues: [\'two\', \'three\'],\n        checkValues: [2, 4]\n      }\n    }\n  }\n};\nconst DataSourceUsage = {\n  args: {\n    editorMetadata: dataSourceUsage,\n    initialData: {},\n    delayDataSource: {\n      selectorOptions: 5000,\n      switchList: 2000,\n      radioList: 3000\n    },\n    dataSourceStates: {\n      selectorOptions: {\n        resultFormat: dist/* ResultFormat */.fW.RecordsArray,\n        data: [{\n          label: \'Option 1\',\n          value: 1\n        }, {\n          label: \'Option 2\',\n          value: 2\n        }, {\n          label: \'Option 3\',\n          value: 3\n        }, {\n          label: \'Option 4\',\n          value: 4\n        }, {\n          label: \'Option 5\',\n          value: 5\n        }, {\n          label: \'Option 6\',\n          value: 6\n        }, {\n          label: \'Option 7\',\n          value: 7\n        }, {\n          label: \'Option 8\',\n          value: 8\n        }, {\n          label: \'Option 9\',\n          value: 9\n        }, {\n          label: \'Option 10\',\n          value: 10\n        }],\n        id: \'selectorOptions\',\n        status: dist/* DataStatus */.t3.Loading\n      },\n      switchList: {\n        resultFormat: dist/* ResultFormat */.fW.RecordsArray,\n        data: [{\n          label: \'Switch 1\',\n          value: 1\n        }, {\n          label: \'Switch 2\',\n          value: 2\n        }, {\n          label: \'Switch 3\',\n          value: 3\n        }, {\n          label: \'Switch 4\',\n          value: 4\n        }, {\n          label: \'Switch 5\',\n          value: 5\n        }, {\n          label: \'Switch 6\',\n          value: 6\n        }, {\n          label: \'Switch 7\',\n          value: 7\n        }],\n        id: \'switchList\',\n        status: dist/* DataStatus */.t3.Loading\n      },\n      radioList: {\n        resultFormat: dist/* ResultFormat */.fW.RecordsArray,\n        data: [{\n          label: \'Radio Option 1\',\n          value: 1\n        }, {\n          label: \'Radio Option 2\',\n          value: 2\n        }, {\n          label: \'Radio Option 3\',\n          value: 3\n        }, {\n          label: \'Radio Option 4\',\n          value: 4\n        }, {\n          label: \'Radio Option 5\',\n          value: 5\n        }],\n        id: \'radioList\',\n        status: dist/* DataStatus */.t3.Loading\n      }\n    }\n  }\n};\nconst CustomFieldsetDecorator = {\n  args: {\n    editorMetadata: {\n      ...multiColumnFieldset,\n      reducersMap: {}\n    },\n    initialData: {}\n  }\n};\n;\nconst __namedExportsOrder = ["Basic", "BasicForTestsTabs", "BasicForTestsPage", "ThrottleChange", "TabbedLayout", "OnePageLayout", "ConditionalAttributes", "WithReducer", "CollapsibleFieldsets", "ValuesFromJsonPath", "UnsupportedComponent", "WithListEditor", "SwitchComponent", "DataSourceUsage", "CustomFieldsetDecorator"];\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: {\\n      ...basicEditor,\\n      reducersMap: {}\\n    },\\n    initialData: {}\\n  }\\n}",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};\nBasicForTestsTabs.parameters = {\n  ...BasicForTestsTabs.parameters,\n  docs: {\n    ...BasicForTestsTabs.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: mockMetadata,\\n    initialData: {}\\n  }\\n}",\n      ...BasicForTestsTabs.parameters?.docs?.source\n    }\n  }\n};\nBasicForTestsPage.parameters = {\n  ...BasicForTestsPage.parameters,\n  docs: {\n    ...BasicForTestsPage.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: {\\n      ...mockMetadata,\\n      displayAs: \'onePage\'\\n    },\\n    initialData: {}\\n  }\\n}",\n      ...BasicForTestsPage.parameters?.docs?.source\n    }\n  }\n};\nThrottleChange.parameters = {\n  ...ThrottleChange.parameters,\n  docs: {\n    ...ThrottleChange.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: {\\n      ...basicEditor,\\n      reducersMap: {}\\n    },\\n    throttleChange: true,\\n    initialData: {}\\n  }\\n}",\n      ...ThrottleChange.parameters?.docs?.source\n    }\n  }\n};\nTabbedLayout.parameters = {\n  ...TabbedLayout.parameters,\n  docs: {\n    ...TabbedLayout.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: tabbedLayout,\\n    initialData: {}\\n  }\\n}",\n      ...TabbedLayout.parameters?.docs?.source\n    }\n  }\n};\nOnePageLayout.parameters = {\n  ...OnePageLayout.parameters,\n  docs: {\n    ...OnePageLayout.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: {\\n      ...tabbedLayout,\\n      forms: [{\\n        ...tabbedLayout.forms[0],\\n        showTitle: true\\n      }, {\\n        ...tabbedLayout.forms[1],\\n        showTitle: true\\n      }],\\n      displayAs: \'onePage\'\\n    },\\n    initialData: {}\\n  }\\n}",\n      ...OnePageLayout.parameters?.docs?.source\n    }\n  }\n};\nConditionalAttributes.parameters = {\n  ...ConditionalAttributes.parameters,\n  docs: {\n    ...ConditionalAttributes.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: editorWithConditions,\\n    initialData: {}\\n  }\\n}",\n      ...ConditionalAttributes.parameters?.docs?.source\n    }\n  }\n};\nWithReducer.parameters = {\n  ...WithReducer.parameters,\n  docs: {\n    ...WithReducer.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: staticTextEditor,\\n    initialData: {}\\n  }\\n}",\n      ...WithReducer.parameters?.docs?.source\n    }\n  }\n};\nCollapsibleFieldsets.parameters = {\n  ...CollapsibleFieldsets.parameters,\n  docs: {\n    ...CollapsibleFieldsets.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: editorWithCollapsibleFieldsets,\\n    initialData: {}\\n  }\\n}",\n      ...CollapsibleFieldsets.parameters?.docs?.source\n    }\n  }\n};\nValuesFromJsonPath.parameters = {\n  ...ValuesFromJsonPath.parameters,\n  docs: {\n    ...ValuesFromJsonPath.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: editorWithJsonPath,\\n    initialData: {\\n      ...INPUT_DATA\\n    }\\n  }\\n}",\n      ...ValuesFromJsonPath.parameters?.docs?.source\n    }\n  }\n};\nUnsupportedComponent.parameters = {\n  ...UnsupportedComponent.parameters,\n  docs: {\n    ...UnsupportedComponent.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: {\\n      activeForm: \'test\',\\n      forms: [{\\n        id: \'test\',\\n        title: \'Test Form\',\\n        fieldSets: [{\\n          name: \'fieldset\',\\n          fields: [{\\n            type: \'textbox\',\\n            name: \'textBox\',\\n            value: \'test\',\\n            label: \'Unsupported field Type\'\\n          }, {\\n            type: \'text\',\\n            name: \'textInput\',\\n            value: \'Some Value\',\\n            label: \'Some other field\'\\n          }]\\n        }]\\n      }],\\n      reducersMap: {}\\n    },\\n    componentRegistry: {\\n      ...BULMA_REGISTRY,\\n      inputFields: missingFieldRegistry as InputFieldRegistry\\n    },\\n    initialData: {\\n      ...INPUT_DATA\\n    }\\n  }\\n}",\n      ...UnsupportedComponent.parameters?.docs?.source\n    }\n  }\n};\nWithListEditor.parameters = {\n  ...WithListEditor.parameters,\n  docs: {\n    ...WithListEditor.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: {\\n      ...withListEditor,\\n      reducersMap: {\\n        widgetParams: {\\n          widgetParams: (editorData: object, newData: ParamsMap) => {\\n            return {\\n              ...editorData,\\n              ...newData\\n            };\\n          }\\n        },\\n        listEditor: {\\n          fieldset1: (editorData: object, newData: ParamsMap) => {\\n            return {\\n              ...editorData,\\n              fieldset1: newData\\n            };\\n          },\\n          list: (editorData: object, newData: ParamsMap) => {\\n            return {\\n              ...editorData,\\n              listOfData: newData\\n            };\\n          }\\n        }\\n      }\\n    },\\n    initialData: {\\n      label: \'Label\',\\n      text: \'Text\',\\n      listOfData: [{\\n        field: \'Speed\',\\n        axisType: \'quant\'\\n      }, {\\n        field: \'Date\',\\n        axisType: \'temp\'\\n      }, {\\n        field: \'Color\',\\n        axisType: \'ordinal\'\\n      }]\\n    }\\n  }\\n}",\n      ...WithListEditor.parameters?.docs?.source\n    }\n  }\n};\nSwitchComponent.parameters = {\n  ...SwitchComponent.parameters,\n  docs: {\n    ...SwitchComponent.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: {\\n      displayAs: \'tabSet\',\\n      activeForm: \'form\',\\n      forms: [{\\n        id: \'form\',\\n        title: \'Form Tab\',\\n        showTitle: true,\\n        fieldSets: [{\\n          title: \'Some Fieldset Title\',\\n          name: \'fieldsetWithSwitchList\',\\n          showTitle: true,\\n          fields: [{\\n            type: \'switchList\',\\n            name: \'switchList\',\\n            label: \'Switch List\',\\n            options: [{\\n              label: \'Switch One\',\\n              value: \'one\'\\n            }, {\\n              label: \'Switch Two\',\\n              value: \'two\'\\n            }, {\\n              label: \'Switch Three\',\\n              value: \'three\'\\n            }, {\\n              label: \'Switch Four\',\\n              value: \'four\'\\n            }],\\n            value: \'!{objectOfSomeKind.switchValues}\'\\n          }, {\\n            type: \'checkList\',\\n            name: \'checkList\',\\n            label: \'Check List\',\\n            options: [{\\n              label: \'Check One\',\\n              value: 1\\n            }, {\\n              label: \'Check Two\',\\n              value: 2\\n            }, {\\n              label: \'Check Three\',\\n              value: 3\\n            }, {\\n              label: \'Check Four\',\\n              value: 4\\n            }],\\n            value: \'!{objectOfSomeKind.checkValues}\'\\n          }]\\n        }]\\n      }],\\n      reducersMap: {\\n        form: {\\n          fieldsetWithSwitchList: (editorData: {\\n            objectOfSomeKind: object;\\n          }, newData: {\\n            switchList: string[];\\n            checkList: number[];\\n          }) => {\\n            return {\\n              ...editorData,\\n              objectOfSomeKind: {\\n                ...editorData.objectOfSomeKind,\\n                switchValues: newData.switchList,\\n                checkValues: newData.checkList\\n              }\\n            };\\n          }\\n        }\\n      }\\n    },\\n    initialData: {\\n      objectOfSomeKind: {\\n        switchValues: [\'two\', \'three\'],\\n        checkValues: [2, 4]\\n      }\\n    }\\n  }\\n}",\n      ...SwitchComponent.parameters?.docs?.source\n    }\n  }\n};\nDataSourceUsage.parameters = {\n  ...DataSourceUsage.parameters,\n  docs: {\n    ...DataSourceUsage.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: dataSourceUsage,\\n    initialData: {},\\n    delayDataSource: {\\n      selectorOptions: 5000,\\n      switchList: 2000,\\n      radioList: 3000\\n    },\\n    dataSourceStates: {\\n      selectorOptions: {\\n        resultFormat: ResultFormat.RecordsArray,\\n        data: [{\\n          label: \'Option 1\',\\n          value: 1\\n        }, {\\n          label: \'Option 2\',\\n          value: 2\\n        }, {\\n          label: \'Option 3\',\\n          value: 3\\n        }, {\\n          label: \'Option 4\',\\n          value: 4\\n        }, {\\n          label: \'Option 5\',\\n          value: 5\\n        }, {\\n          label: \'Option 6\',\\n          value: 6\\n        }, {\\n          label: \'Option 7\',\\n          value: 7\\n        }, {\\n          label: \'Option 8\',\\n          value: 8\\n        }, {\\n          label: \'Option 9\',\\n          value: 9\\n        }, {\\n          label: \'Option 10\',\\n          value: 10\\n        }],\\n        id: \'selectorOptions\',\\n        status: DataStatus.Loading\\n      },\\n      switchList: {\\n        resultFormat: ResultFormat.RecordsArray,\\n        data: [{\\n          label: \'Switch 1\',\\n          value: 1\\n        }, {\\n          label: \'Switch 2\',\\n          value: 2\\n        }, {\\n          label: \'Switch 3\',\\n          value: 3\\n        }, {\\n          label: \'Switch 4\',\\n          value: 4\\n        }, {\\n          label: \'Switch 5\',\\n          value: 5\\n        }, {\\n          label: \'Switch 6\',\\n          value: 6\\n        }, {\\n          label: \'Switch 7\',\\n          value: 7\\n        }],\\n        id: \'switchList\',\\n        status: DataStatus.Loading\\n      },\\n      radioList: {\\n        resultFormat: ResultFormat.RecordsArray,\\n        data: [{\\n          label: \'Radio Option 1\',\\n          value: 1\\n        }, {\\n          label: \'Radio Option 2\',\\n          value: 2\\n        }, {\\n          label: \'Radio Option 3\',\\n          value: 3\\n        }, {\\n          label: \'Radio Option 4\',\\n          value: 4\\n        }, {\\n          label: \'Radio Option 5\',\\n          value: 5\\n        }],\\n        id: \'radioList\',\\n        status: DataStatus.Loading\\n      }\\n    }\\n  }\\n}",\n      ...DataSourceUsage.parameters?.docs?.source\n    }\n  }\n};\nCustomFieldsetDecorator.parameters = {\n  ...CustomFieldsetDecorator.parameters,\n  docs: {\n    ...CustomFieldsetDecorator.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    editorMetadata: {\\n      ...multiColumnFieldset,\\n      reducersMap: {}\\n    },\\n    initialData: {}\\n  }\\n}",\n      ...CustomFieldsetDecorator.parameters?.docs?.source\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/Editor.stories.tsx\n')}}]);