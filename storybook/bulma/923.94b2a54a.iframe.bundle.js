(self.webpackChunk_mito_forms_bulma=self.webpackChunk_mito_forms_bulma||[]).push([[923],{"../../node_modules/.pnpm/@storybook+addon-docs@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-docs/dist/chunk-H6MOWX77.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VA: () => (/* binding */ __export)\n/* harmony export */ });\n/* unused harmony exports __commonJS, __toESM */\nvar __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __commonJS=(cb,mod)=>function(){return mod||(0, cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0});},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24tZG9jc0A4LjYuMTJfQHR5cGVzK3JlYWN0QDE5LjEuMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1kb2NzL2Rpc3QvY2h1bmstSDZNT1dYNzcubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSwyQkFBMkIsb0NBQW9DLHFEQUFxRCxpREFBaUQsb0ZBQW9GLG9DQUFvQyxvREFBb0QsV0FBVyw0QkFBNEIsNEJBQTRCLDJDQUEyQyw0QkFBNEIsR0FBRyxxQ0FBcUMsMkpBQTJKLGlGQUFpRixFQUFFLFdBQVcscUZBQXFGLDJFQUEyRSx3QkFBd0I7O0FBRTM0QiIsInNvdXJjZXMiOlsid2VicGFjazovL0BtaXRvLWZvcm1zL2J1bG1hLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3Rvcnlib29rK2FkZG9uLWRvY3NAOC42LjEyX0B0eXBlcytyZWFjdEAxOS4xLjJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM18vbm9kZV9tb2R1bGVzL0BzdG9yeWJvb2svYWRkb24tZG9jcy9kaXN0L2NodW5rLUg2TU9XWDc3Lm1qcz8yMjUyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2NyZWF0ZT1PYmplY3QuY3JlYXRlO3ZhciBfX2RlZlByb3A9T2JqZWN0LmRlZmluZVByb3BlcnR5O3ZhciBfX2dldE93blByb3BEZXNjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7dmFyIF9fZ2V0T3duUHJvcE5hbWVzPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO3ZhciBfX2dldFByb3RvT2Y9T2JqZWN0LmdldFByb3RvdHlwZU9mLF9faGFzT3duUHJvcD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3ZhciBfX2NvbW1vbkpTPShjYixtb2QpPT5mdW5jdGlvbigpe3JldHVybiBtb2R8fCgwLCBjYltfX2dldE93blByb3BOYW1lcyhjYilbMF1dKSgobW9kPXtleHBvcnRzOnt9fSkuZXhwb3J0cyxtb2QpLG1vZC5leHBvcnRzfTt2YXIgX19leHBvcnQ9KHRhcmdldCxhbGwpPT57Zm9yKHZhciBuYW1lIGluIGFsbClfX2RlZlByb3AodGFyZ2V0LG5hbWUse2dldDphbGxbbmFtZV0sZW51bWVyYWJsZTohMH0pO30sX19jb3B5UHJvcHM9KHRvLGZyb20sZXhjZXB0LGRlc2MpPT57aWYoZnJvbSYmdHlwZW9mIGZyb209PVwib2JqZWN0XCJ8fHR5cGVvZiBmcm9tPT1cImZ1bmN0aW9uXCIpZm9yKGxldCBrZXkgb2YgX19nZXRPd25Qcm9wTmFtZXMoZnJvbSkpIV9faGFzT3duUHJvcC5jYWxsKHRvLGtleSkmJmtleSE9PWV4Y2VwdCYmX19kZWZQcm9wKHRvLGtleSx7Z2V0OigpPT5mcm9tW2tleV0sZW51bWVyYWJsZTohKGRlc2M9X19nZXRPd25Qcm9wRGVzYyhmcm9tLGtleSkpfHxkZXNjLmVudW1lcmFibGV9KTtyZXR1cm4gdG99O3ZhciBfX3RvRVNNPShtb2QsaXNOb2RlTW9kZSx0YXJnZXQpPT4odGFyZ2V0PW1vZCE9bnVsbD9fX2NyZWF0ZShfX2dldFByb3RvT2YobW9kKSk6e30sX19jb3B5UHJvcHMoaXNOb2RlTW9kZXx8IW1vZHx8IW1vZC5fX2VzTW9kdWxlP19fZGVmUHJvcCh0YXJnZXQsXCJkZWZhdWx0XCIse3ZhbHVlOm1vZCxlbnVtZXJhYmxlOiEwfSk6dGFyZ2V0LG1vZCkpO1xuXG5leHBvcnQgeyBfX2NvbW1vbkpTLCBfX2V4cG9ydCwgX190b0VTTSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-docs@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-docs/dist/chunk-H6MOWX77.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/actions/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  argsEnhancers: () => (/* reexport */ argsEnhancers),\n  loaders: () => (/* reexport */ loaders)\n});\n\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_PREVIEW_API__"\nvar external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__("storybook/internal/preview-api");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__"\nvar external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_ = __webpack_require__("storybook/internal/preview-errors");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_GLOBAL__"\nvar external_STORYBOOK_MODULE_GLOBAL_ = __webpack_require__("@storybook/global");\n;// ../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js\nconst randomUUID = typeof crypto !== \'undefined\' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\n/* harmony default export */ const esm_browser_native = ({\n  randomUUID\n});\n;// ../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation.\n    getRandomValues = typeof crypto !== \'undefined\' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error(\'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n;// ../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It\'s been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \'-\' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \'-\' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \'-\' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \'-\' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it\'s likely due to one\n  // of the following:\n  // - One or more input array values don\'t map to a hex octet (leading to\n  // "undefined" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError(\'Stringified UUID is invalid\');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const esm_browser_stringify = ((/* unused pure expression or super */ null && (stringify)));\n;// ../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js\n\n\n\n\nfunction v4(options, buf, offset) {\n  if (esm_browser_native.randomUUID && !buf && !options) {\n    return esm_browser_native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\n/* harmony default export */ const esm_browser_v4 = (v4);\n;// ../../node_modules/.pnpm/@storybook+addon-actions@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-actions/dist/preview.mjs\n\n\n\n\n\nvar ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`;var config={depth:10,clearOnStoryChange:!0,limit:50};var findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return !proto||callback(proto)?proto:findProto(proto,callback)},isReactSyntheticEvent=e=>!!(typeof e=="object"&&e&&findProto(e,proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name))&&typeof e.persist=="function"),serializeArg=a=>{if(isReactSyntheticEvent(a)){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return typeof view=="object"&&view?.constructor.name==="Window"&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}return a},generateId=()=>typeof crypto=="object"&&typeof crypto.getRandomValues=="function"?esm_browser_v4():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__" in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find(render=>render.phase==="playing"||render.phase==="rendering");if(storyRenderer){let deprecated=!globalThis?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(deprecated)console.warn(error);else throw error}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),minDepth=5,serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:minDepth+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit);};return handler.isAction=!0,handler.implicit=options.implicit,handler}var isInInitialArgs=(name,initialArgs)=>typeof initialArgs[name]>"u"&&!(name in initialArgs),inferActionsFromArgTypesRegex=context=>{let{initialArgs,argTypes,id,parameters:{actions}}=context;if(!actions||actions.disable||!actions.argTypesRegex||!argTypes)return {};let argTypesRegex=new RegExp(actions.argTypesRegex);return Object.entries(argTypes).filter(([name])=>!!argTypesRegex.test(name)).reduce((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action(name,{implicit:!0,id})),acc),{})},addActionsFromArgTypes=context=>{let{initialArgs,argTypes,parameters:{actions}}=context;return actions?.disable||!argTypes?{}:Object.entries(argTypes).filter(([name,argType])=>!!argType.action).reduce((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action(typeof argType.action=="string"?argType.action:name)),acc),{})};var argsEnhancers=[addActionsFromArgTypes,inferActionsFromArgTypesRegex];var subscribed=!1,logActionsWhenMockCalled=context=>{let{parameters:{actions}}=context;if(!actions?.disable&&!subscribed&&"__STORYBOOK_TEST_ON_MOCK_CALL__" in external_STORYBOOK_MODULE_GLOBAL_.global&&typeof external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__=="function"){let onMockCall=external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__;onMockCall((mock,args)=>{let name=mock.getMockName();name!=="spy"&&(!/^next\\/.*::/.test(name)||["next/router::useRouter()","next/navigation::useRouter()","next/navigation::redirect","next/cache::","next/headers::cookies().set","next/headers::cookies().delete","next/headers::headers().set","next/headers::headers().delete"].some(prefix=>name.startsWith(prefix)))&&action(name)(args);}),subscribed=!0;}},loaders=[logActionsWhenMockCalled];\n\n\n\n;// ../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/actions/preview.mjs\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24tZXNzZW50aWFsc0A4LjYuMTJfQHR5cGVzK3JlYWN0QDE5LjEuMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1lc3NlbnRpYWxzL2Rpc3QvYWN0aW9ucy9wcmV2aWV3Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQSx5REFBZTtBQUNmO0FBQ0EsQ0FBQyxFOztBQ0hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsQzs7QUNqQnFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSw0REFBZSx5REFBUyxJOztBQ2hDUztBQUNOO0FBQ3NCOztBQUVqRDtBQUNBLE1BQU0sa0JBQU07QUFDWixXQUFXLGtCQUFNO0FBQ2pCOztBQUVBO0FBQ0EsaURBQWlELEdBQUcsS0FBSzs7QUFFekQ7QUFDQSxtQ0FBbUM7O0FBRW5DO0FBQ0E7O0FBRUEsb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFNBQVMsZUFBZTtBQUN4Qjs7QUFFQSxxREFBZSxFQUFFLEU7O0FDNUJ1QztBQUMyQjtBQUN4QztBQUNqQjs7QUFFMUIsNkNBQTZDLFNBQVMsZUFBZSxZQUFZLHlDQUF5QywrQkFBK0IscUNBQXFDLCtEQUErRCxpTEFBaUwsNkJBQTZCLGlGQUFpRixZQUFZLHdGQUF3RixpR0FBaUcsa0VBQWtFLElBQUksU0FBUyxtRkFBbUYsY0FBRSxtRUFBbUUsK0JBQStCLEVBQUUsbUJBQW1CLHFCQUFxQiwyQkFBMkIscUJBQXFCLG1CQUFtQixtRUFBZ0MsQ0FBQyx3Q0FBTSxnSEFBZ0gsa0JBQWtCLGtGQUFrRixvRkFBOEIsRUFBRSwwQ0FBMEMsRUFBRSxrQ0FBa0Msa0JBQWtCLFlBQVksNkNBQU0sa0tBQWtLLGlCQUFpQix5QkFBeUIsVUFBVSw0R0FBNEcsNkNBQTZDLHFFQUFxRSxxSUFBcUksSUFBSSxvQ0FBb0MsU0FBUyxTQUFTLDBFQUEwRSxvREFBb0Qsc0tBQXNLLGVBQWUsVUFBVSxFQUFFLGtDQUFrQyxJQUFJLGlDQUFpQyxTQUFTLFNBQVMscUNBQXFDLHFOQUFxTixHQUFHLHlFQUF5RSxxREFBcUQsSUFBSSxZQUFZLFNBQVMsU0FBUyxtQ0FBbUMsNkVBQTBDLFNBQVMsd0NBQU0sOENBQThDLGVBQWUsd0NBQU0saUNBQWlDLHlCQUF5Qiw0QkFBNEIsMlVBQTJVLGtCQUFrQjs7QUFFejdHOzs7QUNQZSIsInNvdXJjZXMiOlsid2VicGFjazovL0BtaXRvLWZvcm1zL2J1bG1hLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS91dWlkQDkuMC4xL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvbmF0aXZlLmpzP2YzOGYiLCJ3ZWJwYWNrOi8vQG1pdG8tZm9ybXMvYnVsbWEvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3V1aWRAOS4wLjEvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9ybmcuanM/NGUyNiIsIndlYnBhY2s6Ly9AbWl0by1mb3Jtcy9idWxtYS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vdXVpZEA5LjAuMS9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcz8xOTdjIiwid2VicGFjazovL0BtaXRvLWZvcm1zL2J1bG1hLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS91dWlkQDkuMC4xL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjQuanM/OTFlNSIsIndlYnBhY2s6Ly9AbWl0by1mb3Jtcy9idWxtYS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHN0b3J5Ym9vaythZGRvbi1hY3Rpb25zQDguNi4xMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1hY3Rpb25zL2Rpc3QvcHJldmlldy5tanM/MGQxOSIsIndlYnBhY2s6Ly9AbWl0by1mb3Jtcy9idWxtYS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHN0b3J5Ym9vaythZGRvbi1lc3NlbnRpYWxzQDguNi4xMl9AdHlwZXMrcmVhY3RAMTkuMS4yX3N0b3J5Ym9va0A4LjYuMTJfcHJldHRpZXJAMy41LjNfL25vZGVfbW9kdWxlcy9Ac3Rvcnlib29rL2FkZG9uLWVzc2VudGlhbHMvZGlzdC9hY3Rpb25zL3ByZXZpZXcubWpzPzk4MTkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmFuZG9tVVVJRCA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5yYW5kb21VVUlEICYmIGNyeXB0by5yYW5kb21VVUlELmJpbmQoY3J5cHRvKTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgcmFuZG9tVVVJRFxufTsiLCIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cbmxldCBnZXRSYW5kb21WYWx1ZXM7XG5jb25zdCBybmRzOCA9IG5ldyBVaW50OEFycmF5KDE2KTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJuZygpIHtcbiAgLy8gbGF6eSBsb2FkIHNvIHRoYXQgZW52aXJvbm1lbnRzIHRoYXQgbmVlZCB0byBwb2x5ZmlsbCBoYXZlIGEgY2hhbmNlIHRvIGRvIHNvXG4gIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgLy8gZ2V0UmFuZG9tVmFsdWVzIG5lZWRzIHRvIGJlIGludm9rZWQgaW4gYSBjb250ZXh0IHdoZXJlIFwidGhpc1wiIGlzIGEgQ3J5cHRvIGltcGxlbWVudGF0aW9uLlxuICAgIGdldFJhbmRvbVZhbHVlcyA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0byk7XG5cbiAgICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKCkgbm90IHN1cHBvcnRlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZCNnZXRyYW5kb212YWx1ZXMtbm90LXN1cHBvcnRlZCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBnZXRSYW5kb21WYWx1ZXMocm5kczgpO1xufSIsImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xuXG5jb25zdCBieXRlVG9IZXggPSBbXTtcblxuZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7ICsraSkge1xuICBieXRlVG9IZXgucHVzaCgoaSArIDB4MTAwKS50b1N0cmluZygxNikuc2xpY2UoMSkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5zYWZlU3RyaW5naWZ5KGFyciwgb2Zmc2V0ID0gMCkge1xuICAvLyBOb3RlOiBCZSBjYXJlZnVsIGVkaXRpbmcgdGhpcyBjb2RlISAgSXQncyBiZWVuIHR1bmVkIGZvciBwZXJmb3JtYW5jZVxuICAvLyBhbmQgd29ya3MgaW4gd2F5cyB5b3UgbWF5IG5vdCBleHBlY3QuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQvcHVsbC80MzRcbiAgcmV0dXJuIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dO1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnkoYXJyLCBvZmZzZXQgPSAwKSB7XG4gIGNvbnN0IHV1aWQgPSB1bnNhZmVTdHJpbmdpZnkoYXJyLCBvZmZzZXQpOyAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG5cbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICByZXR1cm4gdXVpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RyaW5naWZ5OyIsImltcG9ydCBuYXRpdmUgZnJvbSAnLi9uYXRpdmUuanMnO1xuaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgeyB1bnNhZmVTdHJpbmdpZnkgfSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5cbmZ1bmN0aW9uIHY0KG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIGlmIChuYXRpdmUucmFuZG9tVVVJRCAmJiAhYnVmICYmICFvcHRpb25zKSB7XG4gICAgcmV0dXJuIG5hdGl2ZS5yYW5kb21VVUlEKCk7XG4gIH1cblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgY29uc3Qgcm5kcyA9IG9wdGlvbnMucmFuZG9tIHx8IChvcHRpb25zLnJuZyB8fCBybmcpKCk7IC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcblxuICBybmRzWzZdID0gcm5kc1s2XSAmIDB4MGYgfCAweDQwO1xuICBybmRzWzhdID0gcm5kc1s4XSAmIDB4M2YgfCAweDgwOyAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcblxuICBpZiAoYnVmKSB7XG4gICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IHJuZHNbaV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1ZjtcbiAgfVxuXG4gIHJldHVybiB1bnNhZmVTdHJpbmdpZnkocm5kcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHY0OyIsImltcG9ydCB7IGFkZG9ucyB9IGZyb20gJ3N0b3J5Ym9vay9pbnRlcm5hbC9wcmV2aWV3LWFwaSc7XG5pbXBvcnQgeyBJbXBsaWNpdEFjdGlvbnNEdXJpbmdSZW5kZXJpbmcgfSBmcm9tICdzdG9yeWJvb2svaW50ZXJuYWwvcHJldmlldy1lcnJvcnMnO1xuaW1wb3J0IHsgZ2xvYmFsIH0gZnJvbSAnQHN0b3J5Ym9vay9nbG9iYWwnO1xuaW1wb3J0IHsgdjQgfSBmcm9tICd1dWlkJztcblxudmFyIEFERE9OX0lEPVwic3Rvcnlib29rL2FjdGlvbnNcIixFVkVOVF9JRD1gJHtBRERPTl9JRH0vYWN0aW9uLWV2ZW50YDt2YXIgY29uZmlnPXtkZXB0aDoxMCxjbGVhck9uU3RvcnlDaGFuZ2U6ITAsbGltaXQ6NTB9O3ZhciBmaW5kUHJvdG89KG9iaixjYWxsYmFjayk9PntsZXQgcHJvdG89T2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7cmV0dXJuICFwcm90b3x8Y2FsbGJhY2socHJvdG8pP3Byb3RvOmZpbmRQcm90byhwcm90byxjYWxsYmFjayl9LGlzUmVhY3RTeW50aGV0aWNFdmVudD1lPT4hISh0eXBlb2YgZT09XCJvYmplY3RcIiYmZSYmZmluZFByb3RvKGUscHJvdG89Pi9eU3ludGhldGljKD86QmFzZSk/RXZlbnQkLy50ZXN0KHByb3RvLmNvbnN0cnVjdG9yLm5hbWUpKSYmdHlwZW9mIGUucGVyc2lzdD09XCJmdW5jdGlvblwiKSxzZXJpYWxpemVBcmc9YT0+e2lmKGlzUmVhY3RTeW50aGV0aWNFdmVudChhKSl7bGV0IGU9T2JqZWN0LmNyZWF0ZShhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhhKSk7ZS5wZXJzaXN0KCk7bGV0IHZpZXdEZXNjcmlwdG9yPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSxcInZpZXdcIiksdmlldz12aWV3RGVzY3JpcHRvcj8udmFsdWU7cmV0dXJuIHR5cGVvZiB2aWV3PT1cIm9iamVjdFwiJiZ2aWV3Py5jb25zdHJ1Y3Rvci5uYW1lPT09XCJXaW5kb3dcIiYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJ2aWV3XCIsey4uLnZpZXdEZXNjcmlwdG9yLHZhbHVlOk9iamVjdC5jcmVhdGUodmlldy5jb25zdHJ1Y3Rvci5wcm90b3R5cGUpfSksZX1yZXR1cm4gYX0sZ2VuZXJhdGVJZD0oKT0+dHlwZW9mIGNyeXB0bz09XCJvYmplY3RcIiYmdHlwZW9mIGNyeXB0by5nZXRSYW5kb21WYWx1ZXM9PVwiZnVuY3Rpb25cIj92NCgpOkRhdGUubm93KCkudG9TdHJpbmcoMzYpK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygyKTtmdW5jdGlvbiBhY3Rpb24obmFtZSxvcHRpb25zPXt9KXtsZXQgYWN0aW9uT3B0aW9ucz17Li4uY29uZmlnLC4uLm9wdGlvbnN9LGhhbmRsZXI9ZnVuY3Rpb24oLi4uYXJncyl7aWYob3B0aW9ucy5pbXBsaWNpdCl7bGV0IHN0b3J5UmVuZGVyZXI9KFwiX19TVE9SWUJPT0tfUFJFVklFV19fXCJpbiBnbG9iYWw/Z2xvYmFsLl9fU1RPUllCT09LX1BSRVZJRVdfXzp2b2lkIDApPy5zdG9yeVJlbmRlcnMuZmluZChyZW5kZXI9PnJlbmRlci5waGFzZT09PVwicGxheWluZ1wifHxyZW5kZXIucGhhc2U9PT1cInJlbmRlcmluZ1wiKTtpZihzdG9yeVJlbmRlcmVyKXtsZXQgZGVwcmVjYXRlZD0hZ2xvYmFsVGhpcz8uRkVBVFVSRVM/LmRpc2FsbG93SW1wbGljaXRBY3Rpb25zSW5SZW5kZXJWOCxlcnJvcj1uZXcgSW1wbGljaXRBY3Rpb25zRHVyaW5nUmVuZGVyaW5nKHtwaGFzZTpzdG9yeVJlbmRlcmVyLnBoYXNlLG5hbWUsZGVwcmVjYXRlZH0pO2lmKGRlcHJlY2F0ZWQpY29uc29sZS53YXJuKGVycm9yKTtlbHNlIHRocm93IGVycm9yfX1sZXQgY2hhbm5lbD1hZGRvbnMuZ2V0Q2hhbm5lbCgpLGlkPWdlbmVyYXRlSWQoKSxtaW5EZXB0aD01LHNlcmlhbGl6ZWRBcmdzPWFyZ3MubWFwKHNlcmlhbGl6ZUFyZyksbm9ybWFsaXplZEFyZ3M9YXJncy5sZW5ndGg+MT9zZXJpYWxpemVkQXJnczpzZXJpYWxpemVkQXJnc1swXSxhY3Rpb25EaXNwbGF5VG9FbWl0PXtpZCxjb3VudDowLGRhdGE6e25hbWUsYXJnczpub3JtYWxpemVkQXJnc30sb3B0aW9uczp7Li4uYWN0aW9uT3B0aW9ucyxtYXhEZXB0aDptaW5EZXB0aCsoYWN0aW9uT3B0aW9ucy5kZXB0aHx8MyksYWxsb3dGdW5jdGlvbjphY3Rpb25PcHRpb25zLmFsbG93RnVuY3Rpb258fCExfX07Y2hhbm5lbC5lbWl0KEVWRU5UX0lELGFjdGlvbkRpc3BsYXlUb0VtaXQpO307cmV0dXJuIGhhbmRsZXIuaXNBY3Rpb249ITAsaGFuZGxlci5pbXBsaWNpdD1vcHRpb25zLmltcGxpY2l0LGhhbmRsZXJ9dmFyIGlzSW5Jbml0aWFsQXJncz0obmFtZSxpbml0aWFsQXJncyk9PnR5cGVvZiBpbml0aWFsQXJnc1tuYW1lXT5cInVcIiYmIShuYW1lIGluIGluaXRpYWxBcmdzKSxpbmZlckFjdGlvbnNGcm9tQXJnVHlwZXNSZWdleD1jb250ZXh0PT57bGV0e2luaXRpYWxBcmdzLGFyZ1R5cGVzLGlkLHBhcmFtZXRlcnM6e2FjdGlvbnN9fT1jb250ZXh0O2lmKCFhY3Rpb25zfHxhY3Rpb25zLmRpc2FibGV8fCFhY3Rpb25zLmFyZ1R5cGVzUmVnZXh8fCFhcmdUeXBlcylyZXR1cm4ge307bGV0IGFyZ1R5cGVzUmVnZXg9bmV3IFJlZ0V4cChhY3Rpb25zLmFyZ1R5cGVzUmVnZXgpO3JldHVybiBPYmplY3QuZW50cmllcyhhcmdUeXBlcykuZmlsdGVyKChbbmFtZV0pPT4hIWFyZ1R5cGVzUmVnZXgudGVzdChuYW1lKSkucmVkdWNlKChhY2MsW25hbWUsYXJnVHlwZV0pPT4oaXNJbkluaXRpYWxBcmdzKG5hbWUsaW5pdGlhbEFyZ3MpJiYoYWNjW25hbWVdPWFjdGlvbihuYW1lLHtpbXBsaWNpdDohMCxpZH0pKSxhY2MpLHt9KX0sYWRkQWN0aW9uc0Zyb21BcmdUeXBlcz1jb250ZXh0PT57bGV0e2luaXRpYWxBcmdzLGFyZ1R5cGVzLHBhcmFtZXRlcnM6e2FjdGlvbnN9fT1jb250ZXh0O3JldHVybiBhY3Rpb25zPy5kaXNhYmxlfHwhYXJnVHlwZXM/e306T2JqZWN0LmVudHJpZXMoYXJnVHlwZXMpLmZpbHRlcigoW25hbWUsYXJnVHlwZV0pPT4hIWFyZ1R5cGUuYWN0aW9uKS5yZWR1Y2UoKGFjYyxbbmFtZSxhcmdUeXBlXSk9Pihpc0luSW5pdGlhbEFyZ3MobmFtZSxpbml0aWFsQXJncykmJihhY2NbbmFtZV09YWN0aW9uKHR5cGVvZiBhcmdUeXBlLmFjdGlvbj09XCJzdHJpbmdcIj9hcmdUeXBlLmFjdGlvbjpuYW1lKSksYWNjKSx7fSl9O3ZhciBhcmdzRW5oYW5jZXJzPVthZGRBY3Rpb25zRnJvbUFyZ1R5cGVzLGluZmVyQWN0aW9uc0Zyb21BcmdUeXBlc1JlZ2V4XTt2YXIgc3Vic2NyaWJlZD0hMSxsb2dBY3Rpb25zV2hlbk1vY2tDYWxsZWQ9Y29udGV4dD0+e2xldHtwYXJhbWV0ZXJzOnthY3Rpb25zfX09Y29udGV4dDtpZighYWN0aW9ucz8uZGlzYWJsZSYmIXN1YnNjcmliZWQmJlwiX19TVE9SWUJPT0tfVEVTVF9PTl9NT0NLX0NBTExfX1wiaW4gZ2xvYmFsJiZ0eXBlb2YgZ2xvYmFsLl9fU1RPUllCT09LX1RFU1RfT05fTU9DS19DQUxMX189PVwiZnVuY3Rpb25cIil7bGV0IG9uTW9ja0NhbGw9Z2xvYmFsLl9fU1RPUllCT09LX1RFU1RfT05fTU9DS19DQUxMX187b25Nb2NrQ2FsbCgobW9jayxhcmdzKT0+e2xldCBuYW1lPW1vY2suZ2V0TW9ja05hbWUoKTtuYW1lIT09XCJzcHlcIiYmKCEvXm5leHRcXC8uKjo6Ly50ZXN0KG5hbWUpfHxbXCJuZXh0L3JvdXRlcjo6dXNlUm91dGVyKClcIixcIm5leHQvbmF2aWdhdGlvbjo6dXNlUm91dGVyKClcIixcIm5leHQvbmF2aWdhdGlvbjo6cmVkaXJlY3RcIixcIm5leHQvY2FjaGU6OlwiLFwibmV4dC9oZWFkZXJzOjpjb29raWVzKCkuc2V0XCIsXCJuZXh0L2hlYWRlcnM6OmNvb2tpZXMoKS5kZWxldGVcIixcIm5leHQvaGVhZGVyczo6aGVhZGVycygpLnNldFwiLFwibmV4dC9oZWFkZXJzOjpoZWFkZXJzKCkuZGVsZXRlXCJdLnNvbWUocHJlZml4PT5uYW1lLnN0YXJ0c1dpdGgocHJlZml4KSkpJiZhY3Rpb24obmFtZSkoYXJncyk7fSksc3Vic2NyaWJlZD0hMDt9fSxsb2FkZXJzPVtsb2dBY3Rpb25zV2hlbk1vY2tDYWxsZWRdO1xuXG5leHBvcnQgeyBhcmdzRW5oYW5jZXJzLCBsb2FkZXJzIH07XG4iLCJleHBvcnQgKiBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWFjdGlvbnMvcHJldmlldyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/actions/preview.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  decorators: () => (/* reexport */ decorators),\n  initialGlobals: () => (/* reexport */ initialGlobals),\n  parameters: () => (/* reexport */ parameters)\n});\n\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_PREVIEW_API__"\nvar external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__("storybook/internal/preview-api");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_GLOBAL__"\nvar external_STORYBOOK_MODULE_GLOBAL_ = __webpack_require__("@storybook/global");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_CLIENT_LOGGER__"\nvar external_STORYBOOK_MODULE_CLIENT_LOGGER_ = __webpack_require__("storybook/internal/client-logger");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/ts-dedent@2.2.0/node_modules/ts-dedent/esm/index.js\nvar esm = __webpack_require__("../../node_modules/.pnpm/ts-dedent@2.2.0/node_modules/ts-dedent/esm/index.js");\n;// ../../node_modules/.pnpm/@storybook+addon-backgrounds@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-backgrounds/dist/preview.mjs\n\n\n\n\n\nvar PARAM_KEY="backgrounds";var DEFAULT_BACKGROUNDS={light:{name:"light",value:"#F8F8F8"},dark:{name:"dark",value:"#333"}};var{document: preview_document,window: preview_window}=external_STORYBOOK_MODULE_GLOBAL_.global,isReduceMotionEnabled=()=>!!preview_window?.matchMedia("(prefers-reduced-motion: reduce)")?.matches,clearStyles=selector=>{(Array.isArray(selector)?selector:[selector]).forEach(clearStyle);},clearStyle=selector=>{let element=preview_document.getElementById(selector);element&&element.parentElement?.removeChild(element);},addGridStyle=(selector,css)=>{let existingStyle=preview_document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else {let style=preview_document.createElement("style");style.setAttribute("id",selector),style.innerHTML=css,preview_document.head.appendChild(style);}},addBackgroundStyle=(selector,css,storyId)=>{let existingStyle=preview_document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else {let style=preview_document.createElement("style");style.setAttribute("id",selector),style.innerHTML=css;let gridStyleSelector=`addon-backgrounds-grid${storyId?`-docs-${storyId}`:""}`,existingGridStyle=preview_document.getElementById(gridStyleSelector);existingGridStyle?existingGridStyle.parentElement?.insertBefore(style,existingGridStyle):preview_document.head.appendChild(style);}};var defaultGrid={cellSize:100,cellAmount:10,opacity:.8},BG_SELECTOR_BASE="addon-backgrounds",GRID_SELECTOR_BASE="addon-backgrounds-grid",transitionStyle=isReduceMotionEnabled()?"":"transition: background-color 0.3s;",withBackgroundAndGrid=(StoryFn,context)=>{let{globals,parameters:parameters2,viewMode,id}=context,{options=DEFAULT_BACKGROUNDS,disable,grid=defaultGrid}=parameters2[PARAM_KEY]||{},data=globals[PARAM_KEY]||{},backgroundName=data.value,item=backgroundName?options[backgroundName]:void 0,value=item?.value||"transparent",showGrid=data.grid||!1,shownBackground=!!item&&!disable,backgroundSelector=viewMode==="docs"?`#anchor--${id} .docs-story`:".sb-show-main",gridSelector=viewMode==="docs"?`#anchor--${id} .docs-story`:".sb-show-main",isLayoutPadded=parameters2.layout===void 0||parameters2.layout==="padded",defaultOffset=viewMode==="docs"?20:isLayoutPadded?16:0,{cellAmount,cellSize,opacity,offsetX=defaultOffset,offsetY=defaultOffset}=grid,backgroundSelectorId=viewMode==="docs"?`${BG_SELECTOR_BASE}-docs-${id}`:`${BG_SELECTOR_BASE}-color`,backgroundTarget=viewMode==="docs"?id:null;(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(()=>{let backgroundStyles=`\n    ${backgroundSelector} {\n      background: ${value} !important;\n      ${transitionStyle}\n      }`;if(!shownBackground){clearStyles(backgroundSelectorId);return}addBackgroundStyle(backgroundSelectorId,backgroundStyles,backgroundTarget);},[backgroundSelector,backgroundSelectorId,backgroundTarget,shownBackground,value]);let gridSelectorId=viewMode==="docs"?`${GRID_SELECTOR_BASE}-docs-${id}`:`${GRID_SELECTOR_BASE}`;return (0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(()=>{if(!showGrid){clearStyles(gridSelectorId);return}let gridSize=[`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize}px ${cellSize}px`,`${cellSize}px ${cellSize}px`].join(", "),gridStyles=`\n        ${gridSelector} {\n          background-size: ${gridSize} !important;\n          background-position: ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px !important;\n          background-blend-mode: difference !important;\n          background-image: linear-gradient(rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n           linear-gradient(90deg, rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n           linear-gradient(rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px),\n           linear-gradient(90deg, rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px) !important;\n        }\n      `;addGridStyle(gridSelectorId,gridStyles);},[cellAmount,cellSize,gridSelector,gridSelectorId,showGrid,offsetX,offsetY,opacity]),StoryFn()};var getBackgroundColorByName=(currentSelectedValue,backgrounds=[],defaultName)=>{if(currentSelectedValue==="transparent")return "transparent";if(backgrounds.find(background=>background.value===currentSelectedValue)||currentSelectedValue)return currentSelectedValue;let defaultBackground=backgrounds.find(background=>background.name===defaultName);if(defaultBackground)return defaultBackground.value;if(defaultName){let availableColors=backgrounds.map(background=>background.name).join(", ");external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn((0,esm/* dedent */.T)`\n        Backgrounds Addon: could not find the default color "${defaultName}".\n        These are the available colors for your story based on your configuration:\n        ${availableColors}.\n      `);}return "transparent"};var withBackground=(StoryFn,context)=>{let{globals,parameters:parameters2}=context,globalsBackgroundColor=globals[PARAM_KEY]?.value,backgroundsConfig=parameters2[PARAM_KEY],selectedBackgroundColor=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(()=>backgroundsConfig.disable?"transparent":getBackgroundColorByName(globalsBackgroundColor,backgroundsConfig.values,backgroundsConfig.default),[backgroundsConfig,globalsBackgroundColor]),isActive=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(()=>selectedBackgroundColor&&selectedBackgroundColor!=="transparent",[selectedBackgroundColor]),selector=context.viewMode==="docs"?`#anchor--${context.id} .docs-story`:".sb-show-main",backgroundStyles=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(()=>`\n      ${selector} {\n        background: ${selectedBackgroundColor} !important;\n        ${isReduceMotionEnabled()?"":"transition: background-color 0.3s;"}\n      }\n    `,[selectedBackgroundColor,selector]);return (0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(()=>{let selectorId=context.viewMode==="docs"?`addon-backgrounds-docs-${context.id}`:"addon-backgrounds-color";if(!isActive){clearStyles(selectorId);return}addBackgroundStyle(selectorId,backgroundStyles,context.viewMode==="docs"?context.id:null);},[isActive,backgroundStyles,context]),StoryFn()};var withGrid=(StoryFn,context)=>{let{globals,parameters:parameters2}=context,gridParameters=parameters2[PARAM_KEY].grid,isActive=globals[PARAM_KEY]?.grid===!0&&gridParameters.disable!==!0,{cellAmount,cellSize,opacity}=gridParameters,isInDocs=context.viewMode==="docs",defaultOffset=parameters2.layout===void 0||parameters2.layout==="padded"?16:0,offsetX=gridParameters.offsetX??(isInDocs?20:defaultOffset),offsetY=gridParameters.offsetY??(isInDocs?20:defaultOffset),gridStyles=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(()=>{let selector=context.viewMode==="docs"?`#anchor--${context.id} .docs-story`:".sb-show-main",backgroundSize=[`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize*cellAmount}px ${cellSize*cellAmount}px`,`${cellSize}px ${cellSize}px`,`${cellSize}px ${cellSize}px`].join(", ");return `\n      ${selector} {\n        background-size: ${backgroundSize} !important;\n        background-position: ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px, ${offsetX}px ${offsetY}px !important;\n        background-blend-mode: difference !important;\n        background-image: linear-gradient(rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${opacity}) 1px, transparent 1px),\n         linear-gradient(rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px),\n         linear-gradient(90deg, rgba(130, 130, 130, ${opacity/2}) 1px, transparent 1px) !important;\n      }\n    `},[cellSize]);return (0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(()=>{let selectorId=context.viewMode==="docs"?`addon-backgrounds-grid-docs-${context.id}`:"addon-backgrounds-grid";if(!isActive){clearStyles(selectorId);return}addGridStyle(selectorId,gridStyles);},[isActive,gridStyles,context]),StoryFn()};var decorators=globalThis.FEATURES?.backgroundsStoryGlobals?[withBackgroundAndGrid]:[withGrid,withBackground],parameters={[PARAM_KEY]:{grid:{cellSize:20,opacity:.5,cellAmount:5},disable:!1,...!globalThis.FEATURES?.backgroundsStoryGlobals&&{values:Object.values(DEFAULT_BACKGROUNDS)}}},modern={[PARAM_KEY]:{value:void 0,grid:!1}},initialGlobals=globalThis.FEATURES?.backgroundsStoryGlobals?modern:{[PARAM_KEY]:null};\n\n\n\n;// ../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/docs/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  parameters: () => (/* reexport */ parameters)\n});\n\n// EXTERNAL MODULE: ../../node_modules/.pnpm/@storybook+addon-docs@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-docs/dist/chunk-H6MOWX77.mjs\nvar chunk_H6MOWX77 = __webpack_require__("../../node_modules/.pnpm/@storybook+addon-docs@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-docs/dist/chunk-H6MOWX77.mjs");\n;// ../../node_modules/.pnpm/@storybook+addon-docs@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-docs/dist/chunk-PRSJUHPQ.mjs\n\n\nvar preview_exports={};(0,chunk_H6MOWX77/* __export */.VA)(preview_exports,{parameters:()=>parameters});var excludeTags=Object.entries(globalThis.TAGS_OPTIONS??{}).reduce((acc,entry)=>{let[tag,option]=entry;return option.excludeFromDocsStories&&(acc[tag]=!0),acc},{}),parameters={docs:{renderer:async()=>{let{DocsRenderer}=await Promise.all(/* import() */[__webpack_require__.e(619), __webpack_require__.e(111), __webpack_require__.e(598)]).then(__webpack_require__.bind(__webpack_require__, "../../node_modules/.pnpm/@storybook+addon-docs@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-docs/dist/DocsRenderer-CFRXHY34.mjs"));return new DocsRenderer},stories:{filter:story=>(story.tags||[]).filter(tag=>excludeTags[tag]).length===0&&!story.parameters.docs?.disable}}};\n\n\n\n;// ../../node_modules/.pnpm/@storybook+addon-docs@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-docs/dist/preview.mjs\n\n\n\n;// ../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/docs/preview.mjs\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24tZXNzZW50aWFsc0A4LjYuMTJfQHR5cGVzK3JlYWN0QDE5LjEuMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1lc3NlbnRpYWxzL2Rpc3QvZG9jcy9wcmV2aWV3Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFnRDs7QUFFaEQsdUJBQXVCLG1DQUFRLGtCQUFrQiwwQkFBMEIsRUFBRSwwREFBMEQsdUJBQXVCLHNCQUFzQix3REFBd0QsR0FBRyxjQUFjLE1BQU0sbUJBQW1CLElBQUksYUFBYSxPQUFPLG1WQUFxQyxDQUFDLHdCQUF3QixVQUFVOztBQUUvVTs7O0FDSlc7QUFDcEI7OztBQ0RxQiIsInNvdXJjZXMiOlsid2VicGFjazovL0BtaXRvLWZvcm1zL2J1bG1hLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3Rvcnlib29rK2FkZG9uLWRvY3NAOC42LjEyX0B0eXBlcytyZWFjdEAxOS4xLjJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM18vbm9kZV9tb2R1bGVzL0BzdG9yeWJvb2svYWRkb24tZG9jcy9kaXN0L2NodW5rLVBSU0pVSFBRLm1qcz81Y2Y4Iiwid2VicGFjazovL0BtaXRvLWZvcm1zL2J1bG1hLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3Rvcnlib29rK2FkZG9uLWRvY3NAOC42LjEyX0B0eXBlcytyZWFjdEAxOS4xLjJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM18vbm9kZV9tb2R1bGVzL0BzdG9yeWJvb2svYWRkb24tZG9jcy9kaXN0L3ByZXZpZXcubWpzPzE2MWQiLCJ3ZWJwYWNrOi8vQG1pdG8tZm9ybXMvYnVsbWEvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24tZXNzZW50aWFsc0A4LjYuMTJfQHR5cGVzK3JlYWN0QDE5LjEuMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1lc3NlbnRpYWxzL2Rpc3QvZG9jcy9wcmV2aWV3Lm1qcz83MDhhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZXhwb3J0IH0gZnJvbSAnLi9jaHVuay1INk1PV1g3Ny5tanMnO1xuXG52YXIgcHJldmlld19leHBvcnRzPXt9O19fZXhwb3J0KHByZXZpZXdfZXhwb3J0cyx7cGFyYW1ldGVyczooKT0+cGFyYW1ldGVyc30pO3ZhciBleGNsdWRlVGFncz1PYmplY3QuZW50cmllcyhnbG9iYWxUaGlzLlRBR1NfT1BUSU9OUz8/e30pLnJlZHVjZSgoYWNjLGVudHJ5KT0+e2xldFt0YWcsb3B0aW9uXT1lbnRyeTtyZXR1cm4gb3B0aW9uLmV4Y2x1ZGVGcm9tRG9jc1N0b3JpZXMmJihhY2NbdGFnXT0hMCksYWNjfSx7fSkscGFyYW1ldGVycz17ZG9jczp7cmVuZGVyZXI6YXN5bmMoKT0+e2xldHtEb2NzUmVuZGVyZXJ9PWF3YWl0IGltcG9ydCgnLi9Eb2NzUmVuZGVyZXItQ0ZSWEhZMzQubWpzJyk7cmV0dXJuIG5ldyBEb2NzUmVuZGVyZXJ9LHN0b3JpZXM6e2ZpbHRlcjpzdG9yeT0+KHN0b3J5LnRhZ3N8fFtdKS5maWx0ZXIodGFnPT5leGNsdWRlVGFnc1t0YWddKS5sZW5ndGg9PT0wJiYhc3RvcnkucGFyYW1ldGVycy5kb2NzPy5kaXNhYmxlfX19O1xuXG5leHBvcnQgeyBwYXJhbWV0ZXJzLCBwcmV2aWV3X2V4cG9ydHMgfTtcbiIsImV4cG9ydCB7IHBhcmFtZXRlcnMgfSBmcm9tICcuL2NodW5rLVBSU0pVSFBRLm1qcyc7XG5pbXBvcnQgJy4vY2h1bmstSDZNT1dYNzcubWpzJztcbiIsImV4cG9ydCAqIGZyb20gJ0BzdG9yeWJvb2svYWRkb24tZG9jcy9kaXN0L3ByZXZpZXcnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/docs/preview.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";eval('\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_CORE_EVENTS__"\nvar external_STORYBOOK_MODULE_CORE_EVENTS_ = __webpack_require__("storybook/internal/core-events");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_PREVIEW_API__"\nvar external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__("storybook/internal/preview-api");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_GLOBAL__"\nvar external_STORYBOOK_MODULE_GLOBAL_ = __webpack_require__("@storybook/global");\n;// ../../node_modules/.pnpm/@storybook+addon-highlight@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-highlight/dist/preview.mjs\n\n\n\n\nvar ADDON_ID="storybook/highlight",HIGHLIGHT_STYLE_ID="storybookHighlight",HIGHLIGHT=`${ADDON_ID}/add`,RESET_HIGHLIGHT=`${ADDON_ID}/reset`;var{document: preview_document}=external_STORYBOOK_MODULE_GLOBAL_.global,highlightStyle=(color="#FF4785",style="dashed")=>`\n  outline: 2px ${style} ${color};\n  outline-offset: 2px;\n  box-shadow: 0 0 0 6px rgba(255,255,255,0.6);\n`,channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),highlight=infos=>{let id=HIGHLIGHT_STYLE_ID;resetHighlight();let elements=Array.from(new Set(infos.elements)),sheet=preview_document.createElement("style");sheet.setAttribute("id",id),sheet.innerHTML=elements.map(target=>`${target}{\n          ${highlightStyle(infos.color,infos.style)}\n         }`).join(" "),preview_document.head.appendChild(sheet);},resetHighlight=()=>{let id=HIGHLIGHT_STYLE_ID,sheetToBeRemoved=preview_document.getElementById(id);sheetToBeRemoved&&sheetToBeRemoved.parentNode?.removeChild(sheetToBeRemoved);};channel.on(external_STORYBOOK_MODULE_CORE_EVENTS_.STORY_CHANGED,resetHighlight);channel.on(RESET_HIGHLIGHT,resetHighlight);channel.on(HIGHLIGHT,highlight);\n\n;// ../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24tZXNzZW50aWFsc0A4LjYuMTJfQHR5cGVzK3JlYWN0QDE5LjEuMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1lc3NlbnRpYWxzL2Rpc3QvaGlnaGxpZ2h0L3ByZXZpZXcubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStEO0FBQ1A7QUFDYjs7QUFFM0Msd0ZBQXdGLFNBQVMseUJBQXlCLFNBQVMsUUFBUSxJQUFJLFFBQVEsbUJBQUMsQ0FBQyx3Q0FBTTtBQUMvSixpQkFBaUIsT0FBTyxFQUFFO0FBQzFCO0FBQ0E7QUFDQSxVQUFVLDZDQUFNLGdDQUFnQywwQkFBMEIsaUJBQWlCLHVEQUF1RCxnQkFBUSx3QkFBd0Isb0VBQW9FO0FBQ3RQLFlBQVk7QUFDWixVQUFVLGFBQWEsZ0JBQVEsMEJBQTBCLHFCQUFxQiwyQ0FBMkMsZ0JBQVEsb0JBQW9CLCtFQUErRSxXQUFXLG9EQUFhLGlCQUFpQiwyQ0FBMkM7OztBQ1ZyUSIsInNvdXJjZXMiOlsid2VicGFjazovL0BtaXRvLWZvcm1zL2J1bG1hLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3Rvcnlib29rK2FkZG9uLWhpZ2hsaWdodEA4LjYuMTJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM18vbm9kZV9tb2R1bGVzL0BzdG9yeWJvb2svYWRkb24taGlnaGxpZ2h0L2Rpc3QvcHJldmlldy5tanM/MjgyZCIsIndlYnBhY2s6Ly9AbWl0by1mb3Jtcy9idWxtYS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHN0b3J5Ym9vaythZGRvbi1lc3NlbnRpYWxzQDguNi4xMl9AdHlwZXMrcmVhY3RAMTkuMS4yX3N0b3J5Ym9va0A4LjYuMTJfcHJldHRpZXJAMy41LjNfL25vZGVfbW9kdWxlcy9Ac3Rvcnlib29rL2FkZG9uLWVzc2VudGlhbHMvZGlzdC9oaWdobGlnaHQvcHJldmlldy5tanM/ZmRhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTVE9SWV9DSEFOR0VEIH0gZnJvbSAnc3Rvcnlib29rL2ludGVybmFsL2NvcmUtZXZlbnRzJztcbmltcG9ydCB7IGFkZG9ucyB9IGZyb20gJ3N0b3J5Ym9vay9pbnRlcm5hbC9wcmV2aWV3LWFwaSc7XG5pbXBvcnQgeyBnbG9iYWwgfSBmcm9tICdAc3Rvcnlib29rL2dsb2JhbCc7XG5cbnZhciBBRERPTl9JRD1cInN0b3J5Ym9vay9oaWdobGlnaHRcIixISUdITElHSFRfU1RZTEVfSUQ9XCJzdG9yeWJvb2tIaWdobGlnaHRcIixISUdITElHSFQ9YCR7QURET05fSUR9L2FkZGAsUkVTRVRfSElHSExJR0hUPWAke0FERE9OX0lEfS9yZXNldGA7dmFye2RvY3VtZW50fT1nbG9iYWwsaGlnaGxpZ2h0U3R5bGU9KGNvbG9yPVwiI0ZGNDc4NVwiLHN0eWxlPVwiZGFzaGVkXCIpPT5gXG4gIG91dGxpbmU6IDJweCAke3N0eWxlfSAke2NvbG9yfTtcbiAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbiAgYm94LXNoYWRvdzogMCAwIDAgNnB4IHJnYmEoMjU1LDI1NSwyNTUsMC42KTtcbmAsY2hhbm5lbD1hZGRvbnMuZ2V0Q2hhbm5lbCgpLGhpZ2hsaWdodD1pbmZvcz0+e2xldCBpZD1ISUdITElHSFRfU1RZTEVfSUQ7cmVzZXRIaWdobGlnaHQoKTtsZXQgZWxlbWVudHM9QXJyYXkuZnJvbShuZXcgU2V0KGluZm9zLmVsZW1lbnRzKSksc2hlZXQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO3NoZWV0LnNldEF0dHJpYnV0ZShcImlkXCIsaWQpLHNoZWV0LmlubmVySFRNTD1lbGVtZW50cy5tYXAodGFyZ2V0PT5gJHt0YXJnZXR9e1xuICAgICAgICAgICR7aGlnaGxpZ2h0U3R5bGUoaW5mb3MuY29sb3IsaW5mb3Muc3R5bGUpfVxuICAgICAgICAgfWApLmpvaW4oXCIgXCIpLGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2hlZXQpO30scmVzZXRIaWdobGlnaHQ9KCk9PntsZXQgaWQ9SElHSExJR0hUX1NUWUxFX0lELHNoZWV0VG9CZVJlbW92ZWQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO3NoZWV0VG9CZVJlbW92ZWQmJnNoZWV0VG9CZVJlbW92ZWQucGFyZW50Tm9kZT8ucmVtb3ZlQ2hpbGQoc2hlZXRUb0JlUmVtb3ZlZCk7fTtjaGFubmVsLm9uKFNUT1JZX0NIQU5HRUQscmVzZXRIaWdobGlnaHQpO2NoYW5uZWwub24oUkVTRVRfSElHSExJR0hULHJlc2V0SGlnaGxpZ2h0KTtjaGFubmVsLm9uKEhJR0hMSUdIVCxoaWdobGlnaHQpO1xuIiwiZXhwb3J0ICogZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1oaWdobGlnaHQvcHJldmlldyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/measure/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  decorators: () => (/* reexport */ decorators),\n  initialGlobals: () => (/* reexport */ initialGlobals)\n});\n\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_PREVIEW_API__"\nvar external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__("storybook/internal/preview-api");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_GLOBAL__"\nvar external_STORYBOOK_MODULE_GLOBAL_ = __webpack_require__("@storybook/global");\n;// ../../node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js\nvar isProduction = "production" === \'production\';\nvar prefix = \'Invariant failed\';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === \'function\' ? message() : message;\n    var value = provided ? "".concat(prefix, ": ").concat(provided) : prefix;\n    throw new Error(value);\n}\n\n\n\n;// ../../node_modules/.pnpm/@storybook+addon-measure@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-measure/dist/preview.mjs\n\n\n\n\nvar PARAM_KEY="measureEnabled";function getDocumentWidthAndHeight(){let container=external_STORYBOOK_MODULE_GLOBAL_.global.document.documentElement,height=Math.max(container.scrollHeight,container.offsetHeight);return {width:Math.max(container.scrollWidth,container.offsetWidth),height}}function createCanvas(){let canvas=external_STORYBOOK_MODULE_GLOBAL_.global.document.createElement("canvas");canvas.id="storybook-addon-measure";let context=canvas.getContext("2d");invariant(context!=null);let{width,height}=getDocumentWidthAndHeight();return setCanvasWidthAndHeight(canvas,context,{width,height}),canvas.style.position="absolute",canvas.style.left="0",canvas.style.top="0",canvas.style.zIndex="2147483647",canvas.style.pointerEvents="none",external_STORYBOOK_MODULE_GLOBAL_.global.document.body.appendChild(canvas),{canvas,context,width,height}}function setCanvasWidthAndHeight(canvas,context,{width,height}){canvas.style.width=`${width}px`,canvas.style.height=`${height}px`;let scale=external_STORYBOOK_MODULE_GLOBAL_.global.window.devicePixelRatio;canvas.width=Math.floor(width*scale),canvas.height=Math.floor(height*scale),context.scale(scale,scale);}var state={};function init(){state.canvas||(state=createCanvas());}function clear(){state.context&&state.context.clearRect(0,0,state.width??0,state.height??0);}function draw(callback){clear(),callback(state.context);}function rescale(){invariant(state.canvas,"Canvas should exist in the state."),invariant(state.context,"Context should exist in the state."),setCanvasWidthAndHeight(state.canvas,state.context,{width:0,height:0});let{width,height}=getDocumentWidthAndHeight();setCanvasWidthAndHeight(state.canvas,state.context,{width,height}),state.width=width,state.height=height;}function destroy(){state.canvas&&(clear(),state.canvas.parentNode?.removeChild(state.canvas),state={});}var colors={margin:"#f6b26b",border:"#ffe599",padding:"#93c47d",content:"#6fa8dc",text:"#232020"},labelPadding=6;function roundedRect(context,{x,y,w,h,r}){x=x-w/2,y=y-h/2,w<2*r&&(r=w/2),h<2*r&&(r=h/2),context.beginPath(),context.moveTo(x+r,y),context.arcTo(x+w,y,x+w,y+h,r),context.arcTo(x+w,y+h,x,y+h,r),context.arcTo(x,y+h,x,y,r),context.arcTo(x,y,x+w,y,r),context.closePath();}function positionCoordinate(position,{padding,border,width,height,top,left}){let contentWidth=width-border.left-border.right-padding.left-padding.right,contentHeight=height-padding.top-padding.bottom-border.top-border.bottom,x=left+border.left+padding.left,y=top+border.top+padding.top;return position==="top"?x+=contentWidth/2:position==="right"?(x+=contentWidth,y+=contentHeight/2):position==="bottom"?(x+=contentWidth/2,y+=contentHeight):position==="left"?y+=contentHeight/2:position==="center"&&(x+=contentWidth/2,y+=contentHeight/2),{x,y}}function offset(type,position,{margin,border,padding},labelPaddingSize,external){let shift=dir=>0,offsetX=0,offsetY=0,locationMultiplier=external?1:.5,labelPaddingShift=external?labelPaddingSize*2:0;return type==="padding"?shift=dir=>padding[dir]*locationMultiplier+labelPaddingShift:type==="border"?shift=dir=>padding[dir]+border[dir]*locationMultiplier+labelPaddingShift:type==="margin"&&(shift=dir=>padding[dir]+border[dir]+margin[dir]*locationMultiplier+labelPaddingShift),position==="top"?offsetY=-shift("top"):position==="right"?offsetX=shift("right"):position==="bottom"?offsetY=shift("bottom"):position==="left"&&(offsetX=-shift("left")),{offsetX,offsetY}}function collide(a,b){return Math.abs(a.x-b.x)<Math.abs(a.w+b.w)/2&&Math.abs(a.y-b.y)<Math.abs(a.h+b.h)/2}function overlapAdjustment(position,currentRect,prevRect){return position==="top"?currentRect.y=prevRect.y-prevRect.h-labelPadding:position==="right"?currentRect.x=prevRect.x+prevRect.w/2+labelPadding+currentRect.w/2:position==="bottom"?currentRect.y=prevRect.y+prevRect.h+labelPadding:position==="left"&&(currentRect.x=prevRect.x-prevRect.w/2-labelPadding-currentRect.w/2),{x:currentRect.x,y:currentRect.y}}function textWithRect(context,type,{x,y,w,h},text){return roundedRect(context,{x,y,w,h,r:3}),context.fillStyle=`${colors[type]}dd`,context.fill(),context.strokeStyle=colors[type],context.stroke(),context.fillStyle=colors.text,context.fillText(text,x,y),roundedRect(context,{x,y,w,h,r:3}),context.fillStyle=`${colors[type]}dd`,context.fill(),context.strokeStyle=colors[type],context.stroke(),context.fillStyle=colors.text,context.fillText(text,x,y),{x,y,w,h}}function configureText(context,text){context.font="600 12px monospace",context.textBaseline="middle",context.textAlign="center";let metrics=context.measureText(text),actualHeight=metrics.actualBoundingBoxAscent+metrics.actualBoundingBoxDescent,w=metrics.width+labelPadding*2,h=actualHeight+labelPadding*2;return {w,h}}function drawLabel(context,measurements,{type,position="center",text},prevRect,external=!1){let{x,y}=positionCoordinate(position,measurements),{offsetX,offsetY}=offset(type,position,measurements,labelPadding+1,external);x+=offsetX,y+=offsetY;let{w,h}=configureText(context,text);if(prevRect&&collide({x,y,w,h},prevRect)){let adjusted=overlapAdjustment(position,{x,y,w,h},prevRect);x=adjusted.x,y=adjusted.y;}return textWithRect(context,type,{x,y,w,h},text)}function floatingOffset(alignment,{w,h}){let deltaW=w*.5+labelPadding,deltaH=h*.5+labelPadding;return {offsetX:(alignment.x==="left"?-1:1)*deltaW,offsetY:(alignment.y==="top"?-1:1)*deltaH}}function drawFloatingLabel(context,measurements,{type,text}){let{floatingAlignment:floatingAlignment2,extremities}=measurements,x=extremities[floatingAlignment2.x],y=extremities[floatingAlignment2.y],{w,h}=configureText(context,text),{offsetX,offsetY}=floatingOffset(floatingAlignment2,{w,h});return x+=offsetX,y+=offsetY,textWithRect(context,type,{x,y,w,h},text)}function drawStack(context,measurements,stack,external){let rects=[];stack.forEach((l,idx)=>{let rect=external&&l.position==="center"?drawFloatingLabel(context,measurements,l):drawLabel(context,measurements,l,rects[idx-1],external);rects[idx]=rect;});}function labelStacks(context,measurements,labels,externalLabels){let stacks=labels.reduce((acc,l)=>(Object.prototype.hasOwnProperty.call(acc,l.position)||(acc[l.position]=[]),acc[l.position]?.push(l),acc),{});stacks.top&&drawStack(context,measurements,stacks.top,externalLabels),stacks.right&&drawStack(context,measurements,stacks.right,externalLabels),stacks.bottom&&drawStack(context,measurements,stacks.bottom,externalLabels),stacks.left&&drawStack(context,measurements,stacks.left,externalLabels),stacks.center&&drawStack(context,measurements,stacks.center,externalLabels);}var colors2={margin:"#f6b26ba8",border:"#ffe599a8",padding:"#93c47d8c",content:"#6fa8dca8"},SMALL_NODE_SIZE=30;function pxToNumber(px){return parseInt(px.replace("px",""),10)}function round(value){return Number.isInteger(value)?value:value.toFixed(2)}function filterZeroValues(labels){return labels.filter(l=>l.text!==0&&l.text!=="0")}function floatingAlignment(extremities){let windowExtremities={top:external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollY,bottom:external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollY+external_STORYBOOK_MODULE_GLOBAL_.global.window.innerHeight,left:external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollX,right:external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollX+external_STORYBOOK_MODULE_GLOBAL_.global.window.innerWidth},distances={top:Math.abs(windowExtremities.top-extremities.top),bottom:Math.abs(windowExtremities.bottom-extremities.bottom),left:Math.abs(windowExtremities.left-extremities.left),right:Math.abs(windowExtremities.right-extremities.right)};return {x:distances.left>distances.right?"left":"right",y:distances.top>distances.bottom?"top":"bottom"}}function measureElement(element){let style=external_STORYBOOK_MODULE_GLOBAL_.global.getComputedStyle(element),{top,left,right,bottom,width,height}=element.getBoundingClientRect(),{marginTop,marginBottom,marginLeft,marginRight,paddingTop,paddingBottom,paddingLeft,paddingRight,borderBottomWidth,borderTopWidth,borderLeftWidth,borderRightWidth}=style;top=top+external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollY,left=left+external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollX,bottom=bottom+external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollY,right=right+external_STORYBOOK_MODULE_GLOBAL_.global.window.scrollX;let margin={top:pxToNumber(marginTop),bottom:pxToNumber(marginBottom),left:pxToNumber(marginLeft),right:pxToNumber(marginRight)},padding={top:pxToNumber(paddingTop),bottom:pxToNumber(paddingBottom),left:pxToNumber(paddingLeft),right:pxToNumber(paddingRight)},border={top:pxToNumber(borderTopWidth),bottom:pxToNumber(borderBottomWidth),left:pxToNumber(borderLeftWidth),right:pxToNumber(borderRightWidth)},extremities={top:top-margin.top,bottom:bottom+margin.bottom,left:left-margin.left,right:right+margin.right};return {margin,padding,border,top,left,bottom,right,width,height,extremities,floatingAlignment:floatingAlignment(extremities)}}function drawMargin(context,{margin,width,height,top,left,bottom,right}){let marginHeight=height+margin.bottom+margin.top;context.fillStyle=colors2.margin,context.fillRect(left,top-margin.top,width,margin.top),context.fillRect(right,top-margin.top,margin.right,marginHeight),context.fillRect(left,bottom,width,margin.bottom),context.fillRect(left-margin.left,top-margin.top,margin.left,marginHeight);let marginLabels=[{type:"margin",text:round(margin.top),position:"top"},{type:"margin",text:round(margin.right),position:"right"},{type:"margin",text:round(margin.bottom),position:"bottom"},{type:"margin",text:round(margin.left),position:"left"}];return filterZeroValues(marginLabels)}function drawPadding(context,{padding,border,width,height,top,left,bottom,right}){let paddingWidth=width-border.left-border.right,paddingHeight=height-padding.top-padding.bottom-border.top-border.bottom;context.fillStyle=colors2.padding,context.fillRect(left+border.left,top+border.top,paddingWidth,padding.top),context.fillRect(right-padding.right-border.right,top+padding.top+border.top,padding.right,paddingHeight),context.fillRect(left+border.left,bottom-padding.bottom-border.bottom,paddingWidth,padding.bottom),context.fillRect(left+border.left,top+padding.top+border.top,padding.left,paddingHeight);let paddingLabels=[{type:"padding",text:padding.top,position:"top"},{type:"padding",text:padding.right,position:"right"},{type:"padding",text:padding.bottom,position:"bottom"},{type:"padding",text:padding.left,position:"left"}];return filterZeroValues(paddingLabels)}function drawBorder(context,{border,width,height,top,left,bottom,right}){let borderHeight=height-border.top-border.bottom;context.fillStyle=colors2.border,context.fillRect(left,top,width,border.top),context.fillRect(left,bottom-border.bottom,width,border.bottom),context.fillRect(left,top+border.top,border.left,borderHeight),context.fillRect(right-border.right,top+border.top,border.right,borderHeight);let borderLabels=[{type:"border",text:border.top,position:"top"},{type:"border",text:border.right,position:"right"},{type:"border",text:border.bottom,position:"bottom"},{type:"border",text:border.left,position:"left"}];return filterZeroValues(borderLabels)}function drawContent(context,{padding,border,width,height,top,left}){let contentWidth=width-border.left-border.right-padding.left-padding.right,contentHeight=height-padding.top-padding.bottom-border.top-border.bottom;return context.fillStyle=colors2.content,context.fillRect(left+border.left+padding.left,top+border.top+padding.top,contentWidth,contentHeight),[{type:"content",position:"center",text:`${round(contentWidth)} x ${round(contentHeight)}`}]}function drawBoxModel(element){return context=>{if(element&&context){let measurements=measureElement(element),marginLabels=drawMargin(context,measurements),paddingLabels=drawPadding(context,measurements),borderLabels=drawBorder(context,measurements),contentLabels=drawContent(context,measurements),externalLabels=measurements.width<=SMALL_NODE_SIZE*3||measurements.height<=SMALL_NODE_SIZE;labelStacks(context,measurements,[...contentLabels,...paddingLabels,...borderLabels,...marginLabels],externalLabels);}}}function drawSelectedElement(element){draw(drawBoxModel(element));}var deepElementFromPoint=(x,y)=>{let element=external_STORYBOOK_MODULE_GLOBAL_.global.document.elementFromPoint(x,y),crawlShadows=node=>{if(node&&node.shadowRoot){let nestedElement=node.shadowRoot.elementFromPoint(x,y);return node.isEqualNode(nestedElement)?node:nestedElement.shadowRoot?crawlShadows(nestedElement):nestedElement}return node};return crawlShadows(element)||element};var nodeAtPointerRef,pointer={x:0,y:0};function findAndDrawElement(x,y){nodeAtPointerRef=deepElementFromPoint(x,y),drawSelectedElement(nodeAtPointerRef);}var withMeasure=(StoryFn,context)=>{let{measureEnabled}=context.globals;return (0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(()=>{let onPointerMove=event=>{window.requestAnimationFrame(()=>{event.stopPropagation(),pointer.x=event.clientX,pointer.y=event.clientY;});};return document.addEventListener("pointermove",onPointerMove),()=>{document.removeEventListener("pointermove",onPointerMove);}},[]),(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(()=>{let onPointerOver=event=>{window.requestAnimationFrame(()=>{event.stopPropagation(),findAndDrawElement(event.clientX,event.clientY);});},onResize=()=>{window.requestAnimationFrame(()=>{rescale();});};return context.viewMode==="story"&&measureEnabled&&(document.addEventListener("pointerover",onPointerOver),init(),window.addEventListener("resize",onResize),findAndDrawElement(pointer.x,pointer.y)),()=>{window.removeEventListener("resize",onResize),destroy();}},[measureEnabled,context.viewMode]),StoryFn()};var decorators=[withMeasure],initialGlobals={[PARAM_KEY]:!1};\n\n\n\n;// ../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/measure/preview.mjs\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/measure/preview.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/outline/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  decorators: () => (/* reexport */ decorators),\n  initialGlobals: () => (/* reexport */ initialGlobals)\n});\n\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_PREVIEW_API__"\nvar external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__("storybook/internal/preview-api");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_GLOBAL__"\nvar external_STORYBOOK_MODULE_GLOBAL_ = __webpack_require__("@storybook/global");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/ts-dedent@2.2.0/node_modules/ts-dedent/esm/index.js\nvar esm = __webpack_require__("../../node_modules/.pnpm/ts-dedent@2.2.0/node_modules/ts-dedent/esm/index.js");\n;// ../../node_modules/.pnpm/@storybook+addon-outline@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-outline/dist/preview.mjs\n\n\n\n\nvar PARAM_KEY="outline";var clearStyles=selector=>{(Array.isArray(selector)?selector:[selector]).forEach(clearStyle);},clearStyle=input=>{let selector=typeof input=="string"?input:input.join(""),element=external_STORYBOOK_MODULE_GLOBAL_.global.document.getElementById(selector);element&&element.parentElement&&element.parentElement.removeChild(element);},addOutlineStyles=(selector,css)=>{let existingStyle=external_STORYBOOK_MODULE_GLOBAL_.global.document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else {let style=external_STORYBOOK_MODULE_GLOBAL_.global.document.createElement("style");style.setAttribute("id",selector),style.innerHTML=css,external_STORYBOOK_MODULE_GLOBAL_.global.document.head.appendChild(style);}};function outlineCSS(selector){return (0,esm/* dedent */.T)`\n    ${selector} body {\n      outline: 1px solid #2980b9 !important;\n    }\n\n    ${selector} article {\n      outline: 1px solid #3498db !important;\n    }\n\n    ${selector} nav {\n      outline: 1px solid #0088c3 !important;\n    }\n\n    ${selector} aside {\n      outline: 1px solid #33a0ce !important;\n    }\n\n    ${selector} section {\n      outline: 1px solid #66b8da !important;\n    }\n\n    ${selector} header {\n      outline: 1px solid #99cfe7 !important;\n    }\n\n    ${selector} footer {\n      outline: 1px solid #cce7f3 !important;\n    }\n\n    ${selector} h1 {\n      outline: 1px solid #162544 !important;\n    }\n\n    ${selector} h2 {\n      outline: 1px solid #314e6e !important;\n    }\n\n    ${selector} h3 {\n      outline: 1px solid #3e5e85 !important;\n    }\n\n    ${selector} h4 {\n      outline: 1px solid #449baf !important;\n    }\n\n    ${selector} h5 {\n      outline: 1px solid #c7d1cb !important;\n    }\n\n    ${selector} h6 {\n      outline: 1px solid #4371d0 !important;\n    }\n\n    ${selector} main {\n      outline: 1px solid #2f4f90 !important;\n    }\n\n    ${selector} address {\n      outline: 1px solid #1a2c51 !important;\n    }\n\n    ${selector} div {\n      outline: 1px solid #036cdb !important;\n    }\n\n    ${selector} p {\n      outline: 1px solid #ac050b !important;\n    }\n\n    ${selector} hr {\n      outline: 1px solid #ff063f !important;\n    }\n\n    ${selector} pre {\n      outline: 1px solid #850440 !important;\n    }\n\n    ${selector} blockquote {\n      outline: 1px solid #f1b8e7 !important;\n    }\n\n    ${selector} ol {\n      outline: 1px solid #ff050c !important;\n    }\n\n    ${selector} ul {\n      outline: 1px solid #d90416 !important;\n    }\n\n    ${selector} li {\n      outline: 1px solid #d90416 !important;\n    }\n\n    ${selector} dl {\n      outline: 1px solid #fd3427 !important;\n    }\n\n    ${selector} dt {\n      outline: 1px solid #ff0043 !important;\n    }\n\n    ${selector} dd {\n      outline: 1px solid #e80174 !important;\n    }\n\n    ${selector} figure {\n      outline: 1px solid #ff00bb !important;\n    }\n\n    ${selector} figcaption {\n      outline: 1px solid #bf0032 !important;\n    }\n\n    ${selector} table {\n      outline: 1px solid #00cc99 !important;\n    }\n\n    ${selector} caption {\n      outline: 1px solid #37ffc4 !important;\n    }\n\n    ${selector} thead {\n      outline: 1px solid #98daca !important;\n    }\n\n    ${selector} tbody {\n      outline: 1px solid #64a7a0 !important;\n    }\n\n    ${selector} tfoot {\n      outline: 1px solid #22746b !important;\n    }\n\n    ${selector} tr {\n      outline: 1px solid #86c0b2 !important;\n    }\n\n    ${selector} th {\n      outline: 1px solid #a1e7d6 !important;\n    }\n\n    ${selector} td {\n      outline: 1px solid #3f5a54 !important;\n    }\n\n    ${selector} col {\n      outline: 1px solid #6c9a8f !important;\n    }\n\n    ${selector} colgroup {\n      outline: 1px solid #6c9a9d !important;\n    }\n\n    ${selector} button {\n      outline: 1px solid #da8301 !important;\n    }\n\n    ${selector} datalist {\n      outline: 1px solid #c06000 !important;\n    }\n\n    ${selector} fieldset {\n      outline: 1px solid #d95100 !important;\n    }\n\n    ${selector} form {\n      outline: 1px solid #d23600 !important;\n    }\n\n    ${selector} input {\n      outline: 1px solid #fca600 !important;\n    }\n\n    ${selector} keygen {\n      outline: 1px solid #b31e00 !important;\n    }\n\n    ${selector} label {\n      outline: 1px solid #ee8900 !important;\n    }\n\n    ${selector} legend {\n      outline: 1px solid #de6d00 !important;\n    }\n\n    ${selector} meter {\n      outline: 1px solid #e8630c !important;\n    }\n\n    ${selector} optgroup {\n      outline: 1px solid #b33600 !important;\n    }\n\n    ${selector} option {\n      outline: 1px solid #ff8a00 !important;\n    }\n\n    ${selector} output {\n      outline: 1px solid #ff9619 !important;\n    }\n\n    ${selector} progress {\n      outline: 1px solid #e57c00 !important;\n    }\n\n    ${selector} select {\n      outline: 1px solid #e26e0f !important;\n    }\n\n    ${selector} textarea {\n      outline: 1px solid #cc5400 !important;\n    }\n\n    ${selector} details {\n      outline: 1px solid #33848f !important;\n    }\n\n    ${selector} summary {\n      outline: 1px solid #60a1a6 !important;\n    }\n\n    ${selector} command {\n      outline: 1px solid #438da1 !important;\n    }\n\n    ${selector} menu {\n      outline: 1px solid #449da6 !important;\n    }\n\n    ${selector} del {\n      outline: 1px solid #bf0000 !important;\n    }\n\n    ${selector} ins {\n      outline: 1px solid #400000 !important;\n    }\n\n    ${selector} img {\n      outline: 1px solid #22746b !important;\n    }\n\n    ${selector} iframe {\n      outline: 1px solid #64a7a0 !important;\n    }\n\n    ${selector} embed {\n      outline: 1px solid #98daca !important;\n    }\n\n    ${selector} object {\n      outline: 1px solid #00cc99 !important;\n    }\n\n    ${selector} param {\n      outline: 1px solid #37ffc4 !important;\n    }\n\n    ${selector} video {\n      outline: 1px solid #6ee866 !important;\n    }\n\n    ${selector} audio {\n      outline: 1px solid #027353 !important;\n    }\n\n    ${selector} source {\n      outline: 1px solid #012426 !important;\n    }\n\n    ${selector} canvas {\n      outline: 1px solid #a2f570 !important;\n    }\n\n    ${selector} track {\n      outline: 1px solid #59a600 !important;\n    }\n\n    ${selector} map {\n      outline: 1px solid #7be500 !important;\n    }\n\n    ${selector} area {\n      outline: 1px solid #305900 !important;\n    }\n\n    ${selector} a {\n      outline: 1px solid #ff62ab !important;\n    }\n\n    ${selector} em {\n      outline: 1px solid #800b41 !important;\n    }\n\n    ${selector} strong {\n      outline: 1px solid #ff1583 !important;\n    }\n\n    ${selector} i {\n      outline: 1px solid #803156 !important;\n    }\n\n    ${selector} b {\n      outline: 1px solid #cc1169 !important;\n    }\n\n    ${selector} u {\n      outline: 1px solid #ff0430 !important;\n    }\n\n    ${selector} s {\n      outline: 1px solid #f805e3 !important;\n    }\n\n    ${selector} small {\n      outline: 1px solid #d107b2 !important;\n    }\n\n    ${selector} abbr {\n      outline: 1px solid #4a0263 !important;\n    }\n\n    ${selector} q {\n      outline: 1px solid #240018 !important;\n    }\n\n    ${selector} cite {\n      outline: 1px solid #64003c !important;\n    }\n\n    ${selector} dfn {\n      outline: 1px solid #b4005a !important;\n    }\n\n    ${selector} sub {\n      outline: 1px solid #dba0c8 !important;\n    }\n\n    ${selector} sup {\n      outline: 1px solid #cc0256 !important;\n    }\n\n    ${selector} time {\n      outline: 1px solid #d6606d !important;\n    }\n\n    ${selector} code {\n      outline: 1px solid #e04251 !important;\n    }\n\n    ${selector} kbd {\n      outline: 1px solid #5e001f !important;\n    }\n\n    ${selector} samp {\n      outline: 1px solid #9c0033 !important;\n    }\n\n    ${selector} var {\n      outline: 1px solid #d90047 !important;\n    }\n\n    ${selector} mark {\n      outline: 1px solid #ff0053 !important;\n    }\n\n    ${selector} bdi {\n      outline: 1px solid #bf3668 !important;\n    }\n\n    ${selector} bdo {\n      outline: 1px solid #6f1400 !important;\n    }\n\n    ${selector} ruby {\n      outline: 1px solid #ff7b93 !important;\n    }\n\n    ${selector} rt {\n      outline: 1px solid #ff2f54 !important;\n    }\n\n    ${selector} rp {\n      outline: 1px solid #803e49 !important;\n    }\n\n    ${selector} span {\n      outline: 1px solid #cc2643 !important;\n    }\n\n    ${selector} br {\n      outline: 1px solid #db687d !important;\n    }\n\n    ${selector} wbr {\n      outline: 1px solid #db175b !important;\n    }`}var withOutline=(StoryFn,context)=>{let{globals}=context,isActive=[!0,"true"].includes(globals[PARAM_KEY]),isInDocs=context.viewMode==="docs",outlineStyles=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useMemo)(()=>outlineCSS(isInDocs?\'[data-story-block="true"]\':".sb-show-main"),[context]);return (0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(()=>{let selectorId=isInDocs?`addon-outline-docs-${context.id}`:"addon-outline";return isActive?addOutlineStyles(selectorId,outlineStyles):clearStyles(selectorId),()=>{clearStyles(selectorId);}},[isActive,outlineStyles,context]),StoryFn()};var decorators=[withOutline],initialGlobals={[PARAM_KEY]:!1};\n\n\n\n;// ../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/outline/preview.mjs\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/outline/preview.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  initialGlobals: () => (/* reexport */ initialGlobals)\n});\n\n;// ../../node_modules/.pnpm/@storybook+addon-viewport@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-viewport/dist/preview.mjs\nvar PARAM_KEY="viewport";var modern={[PARAM_KEY]:{value:void 0,isRotated:!1}},legacy={viewport:"reset",viewportRotated:!1},initialGlobals=globalThis.FEATURES?.viewportStoryGlobals?modern:legacy;\n\n\n\n;// ../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24tZXNzZW50aWFsc0A4LjYuMTJfQHR5cGVzK3JlYWN0QDE5LjEuMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1lc3NlbnRpYWxzL2Rpc3Qvdmlld3BvcnQvcHJldmlldy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEseUJBQXlCLFlBQVksYUFBYSwyQkFBMkIsU0FBUyxvQ0FBb0M7O0FBRWhHOzs7QUNGd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbWl0by1mb3Jtcy9idWxtYS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHN0b3J5Ym9vaythZGRvbi12aWV3cG9ydEA4LjYuMTJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM18vbm9kZV9tb2R1bGVzL0BzdG9yeWJvb2svYWRkb24tdmlld3BvcnQvZGlzdC9wcmV2aWV3Lm1qcz83NmFjIiwid2VicGFjazovL0BtaXRvLWZvcm1zL2J1bG1hLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3Rvcnlib29rK2FkZG9uLWVzc2VudGlhbHNAOC42LjEyX0B0eXBlcytyZWFjdEAxOS4xLjJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM18vbm9kZV9tb2R1bGVzL0BzdG9yeWJvb2svYWRkb24tZXNzZW50aWFscy9kaXN0L3ZpZXdwb3J0L3ByZXZpZXcubWpzPzQ0NGQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFBBUkFNX0tFWT1cInZpZXdwb3J0XCI7dmFyIG1vZGVybj17W1BBUkFNX0tFWV06e3ZhbHVlOnZvaWQgMCxpc1JvdGF0ZWQ6ITF9fSxsZWdhY3k9e3ZpZXdwb3J0OlwicmVzZXRcIix2aWV3cG9ydFJvdGF0ZWQ6ITF9LGluaXRpYWxHbG9iYWxzPWdsb2JhbFRoaXMuRkVBVFVSRVM/LnZpZXdwb3J0U3RvcnlHbG9iYWxzP21vZGVybjpsZWdhY3k7XG5cbmV4cG9ydCB7IGluaXRpYWxHbG9iYWxzIH07XG4iLCJleHBvcnQgKiBmcm9tICdAc3Rvcnlib29rL2FkZG9uLXZpZXdwb3J0L3ByZXZpZXcnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-essentials@8.6.12_@types+react@19.1.2_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-interactions@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-interactions/dist/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parameters: () => (/* binding */ parameters),\n/* harmony export */   runStep: () => (/* binding */ runStep)\n/* harmony export */ });\n/* harmony import */ var _storybook_instrumenter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../../node_modules/.pnpm/@storybook+instrumenter@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/instrumenter/dist/index.mjs");\n/* harmony import */ var _storybook_test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../../node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/test/dist/index.mjs");\n\n\n\nvar runStep=(0,_storybook_instrumenter__WEBPACK_IMPORTED_MODULE_1__/* .instrument */ .wV)({step:(label,play,context)=>play(context)},{intercept:!0}).step,parameters={throwPlayFunctionExceptions:!1};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24taW50ZXJhY3Rpb25zQDguNi4xMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1pbnRlcmFjdGlvbnMvZGlzdC9wcmV2aWV3Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFEO0FBQzVCOztBQUV6QixZQUFZLDZFQUFVLEVBQUUseUNBQXlDLEVBQUUsYUFBYSxtQkFBbUI7O0FBRXBFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1pdG8tZm9ybXMvYnVsbWEvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24taW50ZXJhY3Rpb25zQDguNi4xMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi1pbnRlcmFjdGlvbnMvZGlzdC9wcmV2aWV3Lm1qcz9iNWViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluc3RydW1lbnQgfSBmcm9tICdAc3Rvcnlib29rL2luc3RydW1lbnRlcic7XG5pbXBvcnQgJ0BzdG9yeWJvb2svdGVzdCc7XG5cbnZhciBydW5TdGVwPWluc3RydW1lbnQoe3N0ZXA6KGxhYmVsLHBsYXksY29udGV4dCk9PnBsYXkoY29udGV4dCl9LHtpbnRlcmNlcHQ6ITB9KS5zdGVwLHBhcmFtZXRlcnM9e3Rocm93UGxheUZ1bmN0aW9uRXhjZXB0aW9uczohMX07XG5cbmV4cG9ydCB7IHBhcmFtZXRlcnMsIHJ1blN0ZXAgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-interactions@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-interactions/dist/preview.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-themes@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-themes/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hv: () => (/* binding */ withThemeByDataAttribute)\n/* harmony export */ });\n/* unused harmony exports DecoratorHelpers, default, withThemeByClassName, withThemeFromJSXProvider */\n/* harmony import */ var storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("storybook/internal/preview-api");\n/* harmony import */ var storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("storybook/internal/client-logger");\n/* harmony import */ var storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ts_dedent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../../node_modules/.pnpm/ts-dedent@2.2.0/node_modules/ts-dedent/esm/index.js");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js");\n\n\n\n\n\nvar __defProp=Object.defineProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0});};var preview_exports={};__export(preview_exports,{initialGlobals:()=>initialGlobals});var PARAM_KEY="themes",ADDON_ID=`storybook/${PARAM_KEY}`,GLOBAL_KEY="theme";var DEFAULT_THEME_PARAMETERS={},THEMING_EVENTS={REGISTER_THEMES:`${ADDON_ID}/REGISTER_THEMES`};var initialGlobals={[GLOBAL_KEY]:""};var helpers_exports={};__export(helpers_exports,{initializeThemeState:()=>initializeThemeState,pluckThemeFromContext:()=>pluckThemeFromContext,useThemeParameters:()=>useThemeParameters});function pluckThemeFromContext({globals}){return globals[GLOBAL_KEY]||""}function useThemeParameters(context){return (0,storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_1__.deprecate)((0,ts_dedent__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .A)`The useThemeParameters function is deprecated. Please access parameters via the context directly instead e.g.\n    - const { themeOverride } = context.parameters.themes ?? {};\n    `),context?context.parameters[PARAM_KEY]??DEFAULT_THEME_PARAMETERS:(0,storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_0__.useParameter)(PARAM_KEY,DEFAULT_THEME_PARAMETERS)}function initializeThemeState(themeNames,defaultTheme){storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_0__.addons.getChannel().emit(THEMING_EVENTS.REGISTER_THEMES,{defaultTheme,themes:themeNames});}var DEFAULT_ELEMENT_SELECTOR="html",classStringToArray=classString=>classString.split(" ").filter(Boolean),withThemeByClassName=({themes,defaultTheme,parentSelector=DEFAULT_ELEMENT_SELECTOR})=>(initializeThemeState(Object.keys(themes),defaultTheme),(storyFn,context)=>{let{themeOverride}=context.parameters[PARAM_KEY]??{},selected=pluckThemeFromContext(context);return useEffect(()=>{let selectedThemeName=themeOverride||selected||defaultTheme,parentElement=document.querySelector(parentSelector);if(!parentElement)return;Object.entries(themes).filter(([themeName])=>themeName!==selectedThemeName).forEach(([themeName,className])=>{let classes=classStringToArray(className);classes.length>0&&parentElement.classList.remove(...classes);});let newThemeClasses=classStringToArray(themes[selectedThemeName]);newThemeClasses.length>0&&parentElement.classList.add(...newThemeClasses);},[themeOverride,selected]),storyFn()});var DEFAULT_ELEMENT_SELECTOR2="html",DEFAULT_DATA_ATTRIBUTE="data-theme",withThemeByDataAttribute=({themes,defaultTheme,parentSelector=DEFAULT_ELEMENT_SELECTOR2,attributeName=DEFAULT_DATA_ATTRIBUTE})=>(initializeThemeState(Object.keys(themes),defaultTheme),(storyFn,context)=>{let{themeOverride}=context.parameters[PARAM_KEY]??{},selected=pluckThemeFromContext(context);return (0,storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let parentElement=document.querySelector(parentSelector),themeKey=themeOverride||selected||defaultTheme;parentElement&&parentElement.setAttribute(attributeName,themes[themeKey]);},[themeOverride,selected]),storyFn()});var pluckThemeFromKeyPairTuple=([_,themeConfig])=>themeConfig,withThemeFromJSXProvider=({Provider,GlobalStyles,defaultTheme,themes={}})=>{let themeNames=Object.keys(themes),initialTheme=defaultTheme||themeNames[0];return initializeThemeState(themeNames,initialTheme),(storyFn,context)=>{let{themeOverride}=context.parameters[PARAM_KEY]??{},selected=pluckThemeFromContext(context),theme=useMemo(()=>{let selectedThemeName=themeOverride||selected||initialTheme,pairs=Object.entries(themes);return pairs.length===1?pluckThemeFromKeyPairTuple(pairs[0]):themes[selectedThemeName]},[selected,themeOverride]);return Provider?React.createElement(Provider,{theme},GlobalStyles&&React.createElement(GlobalStyles,null),storyFn()):React.createElement(React.Fragment,null,GlobalStyles&&React.createElement(GlobalStyles,null),storyFn())}};var index_default=()=>definePreview(preview_exports);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24tdGhlbWVzQDguNi4xMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi10aGVtZXMvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF5RztBQUM1QztBQUM5QjtBQUNMOztBQUUxQixvQ0FBb0MsNEJBQTRCLDJDQUEyQyw0QkFBNEIsSUFBSSx1QkFBdUIsMEJBQTBCLGtDQUFrQyxFQUFFLDZDQUE2QyxVQUFVLHFCQUFxQiwrQkFBK0IsaUJBQWlCLG1CQUFtQixTQUFTLG1CQUFtQixvQkFBb0IsaUJBQWlCLHVCQUF1QiwwQkFBMEIsd0lBQXdJLEVBQUUsZ0NBQWdDLFFBQVEsRUFBRSwrQkFBK0IscUNBQXFDLE9BQU8sMkVBQVMsQ0FBQyw4REFBTTtBQUNodkIsY0FBYyxnQkFBZ0I7QUFDOUIsdUVBQXVFLDRFQUFZLHFDQUFxQyx1REFBdUQsa0VBQU0sbURBQW1ELCtCQUErQixHQUFHLGtJQUFrSSw0REFBNEQsK0VBQStFLElBQUksY0FBYyxrQ0FBa0MseUNBQXlDLHNCQUFzQixpSEFBaUgseUJBQXlCLDhHQUE4RywwQ0FBMEMsOERBQThELEVBQUUsa0VBQWtFLDJFQUEyRSxxQ0FBcUMsRUFBRSxvR0FBb0csa0dBQWtHLCtFQUErRSxJQUFJLGNBQWMsa0NBQWtDLHlDQUF5QyxPQUFPLHlFQUFTLE1BQU0sd0dBQXdHLDJFQUEyRSxxQ0FBcUMsRUFBRSx5RkFBeUYsNkNBQTZDLElBQUksNEVBQTRFLHlFQUF5RSxJQUFJLGNBQWMsa0NBQWtDLDREQUE0RCx5RkFBeUYsdUZBQXVGLDJCQUEyQiw4Q0FBOEMsTUFBTSwyS0FBMks7O0FBRXg2RSIsInNvdXJjZXMiOlsid2VicGFjazovL0BtaXRvLWZvcm1zL2J1bG1hLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ac3Rvcnlib29rK2FkZG9uLXRoZW1lc0A4LjYuMTJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM18vbm9kZV9tb2R1bGVzL0BzdG9yeWJvb2svYWRkb24tdGhlbWVzL2Rpc3QvaW5kZXgubWpzPzE1YmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUGFyYW1ldGVyLCBhZGRvbnMsIHVzZUVmZmVjdCwgdXNlTWVtbywgZGVmaW5lUHJldmlldyB9IGZyb20gJ3N0b3J5Ym9vay9pbnRlcm5hbC9wcmV2aWV3LWFwaSc7XG5pbXBvcnQgeyBkZXByZWNhdGUgfSBmcm9tICdzdG9yeWJvb2svaW50ZXJuYWwvY2xpZW50LWxvZ2dlcic7XG5pbXBvcnQgZGVkZW50IGZyb20gJ3RzLWRlZGVudCc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG52YXIgX19kZWZQcm9wPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt2YXIgX19leHBvcnQ9KHRhcmdldCxhbGwpPT57Zm9yKHZhciBuYW1lIGluIGFsbClfX2RlZlByb3AodGFyZ2V0LG5hbWUse2dldDphbGxbbmFtZV0sZW51bWVyYWJsZTohMH0pO307dmFyIHByZXZpZXdfZXhwb3J0cz17fTtfX2V4cG9ydChwcmV2aWV3X2V4cG9ydHMse2luaXRpYWxHbG9iYWxzOigpPT5pbml0aWFsR2xvYmFsc30pO3ZhciBQQVJBTV9LRVk9XCJ0aGVtZXNcIixBRERPTl9JRD1gc3Rvcnlib29rLyR7UEFSQU1fS0VZfWAsR0xPQkFMX0tFWT1cInRoZW1lXCI7dmFyIERFRkFVTFRfVEhFTUVfUEFSQU1FVEVSUz17fSxUSEVNSU5HX0VWRU5UUz17UkVHSVNURVJfVEhFTUVTOmAke0FERE9OX0lEfS9SRUdJU1RFUl9USEVNRVNgfTt2YXIgaW5pdGlhbEdsb2JhbHM9e1tHTE9CQUxfS0VZXTpcIlwifTt2YXIgaGVscGVyc19leHBvcnRzPXt9O19fZXhwb3J0KGhlbHBlcnNfZXhwb3J0cyx7aW5pdGlhbGl6ZVRoZW1lU3RhdGU6KCk9PmluaXRpYWxpemVUaGVtZVN0YXRlLHBsdWNrVGhlbWVGcm9tQ29udGV4dDooKT0+cGx1Y2tUaGVtZUZyb21Db250ZXh0LHVzZVRoZW1lUGFyYW1ldGVyczooKT0+dXNlVGhlbWVQYXJhbWV0ZXJzfSk7ZnVuY3Rpb24gcGx1Y2tUaGVtZUZyb21Db250ZXh0KHtnbG9iYWxzfSl7cmV0dXJuIGdsb2JhbHNbR0xPQkFMX0tFWV18fFwiXCJ9ZnVuY3Rpb24gdXNlVGhlbWVQYXJhbWV0ZXJzKGNvbnRleHQpe3JldHVybiBkZXByZWNhdGUoZGVkZW50YFRoZSB1c2VUaGVtZVBhcmFtZXRlcnMgZnVuY3Rpb24gaXMgZGVwcmVjYXRlZC4gUGxlYXNlIGFjY2VzcyBwYXJhbWV0ZXJzIHZpYSB0aGUgY29udGV4dCBkaXJlY3RseSBpbnN0ZWFkIGUuZy5cbiAgICAtIGNvbnN0IHsgdGhlbWVPdmVycmlkZSB9ID0gY29udGV4dC5wYXJhbWV0ZXJzLnRoZW1lcyA/PyB7fTtcbiAgICBgKSxjb250ZXh0P2NvbnRleHQucGFyYW1ldGVyc1tQQVJBTV9LRVldPz9ERUZBVUxUX1RIRU1FX1BBUkFNRVRFUlM6dXNlUGFyYW1ldGVyKFBBUkFNX0tFWSxERUZBVUxUX1RIRU1FX1BBUkFNRVRFUlMpfWZ1bmN0aW9uIGluaXRpYWxpemVUaGVtZVN0YXRlKHRoZW1lTmFtZXMsZGVmYXVsdFRoZW1lKXthZGRvbnMuZ2V0Q2hhbm5lbCgpLmVtaXQoVEhFTUlOR19FVkVOVFMuUkVHSVNURVJfVEhFTUVTLHtkZWZhdWx0VGhlbWUsdGhlbWVzOnRoZW1lTmFtZXN9KTt9dmFyIERFRkFVTFRfRUxFTUVOVF9TRUxFQ1RPUj1cImh0bWxcIixjbGFzc1N0cmluZ1RvQXJyYXk9Y2xhc3NTdHJpbmc9PmNsYXNzU3RyaW5nLnNwbGl0KFwiIFwiKS5maWx0ZXIoQm9vbGVhbiksd2l0aFRoZW1lQnlDbGFzc05hbWU9KHt0aGVtZXMsZGVmYXVsdFRoZW1lLHBhcmVudFNlbGVjdG9yPURFRkFVTFRfRUxFTUVOVF9TRUxFQ1RPUn0pPT4oaW5pdGlhbGl6ZVRoZW1lU3RhdGUoT2JqZWN0LmtleXModGhlbWVzKSxkZWZhdWx0VGhlbWUpLChzdG9yeUZuLGNvbnRleHQpPT57bGV0e3RoZW1lT3ZlcnJpZGV9PWNvbnRleHQucGFyYW1ldGVyc1tQQVJBTV9LRVldPz97fSxzZWxlY3RlZD1wbHVja1RoZW1lRnJvbUNvbnRleHQoY29udGV4dCk7cmV0dXJuIHVzZUVmZmVjdCgoKT0+e2xldCBzZWxlY3RlZFRoZW1lTmFtZT10aGVtZU92ZXJyaWRlfHxzZWxlY3RlZHx8ZGVmYXVsdFRoZW1lLHBhcmVudEVsZW1lbnQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihwYXJlbnRTZWxlY3Rvcik7aWYoIXBhcmVudEVsZW1lbnQpcmV0dXJuO09iamVjdC5lbnRyaWVzKHRoZW1lcykuZmlsdGVyKChbdGhlbWVOYW1lXSk9PnRoZW1lTmFtZSE9PXNlbGVjdGVkVGhlbWVOYW1lKS5mb3JFYWNoKChbdGhlbWVOYW1lLGNsYXNzTmFtZV0pPT57bGV0IGNsYXNzZXM9Y2xhc3NTdHJpbmdUb0FycmF5KGNsYXNzTmFtZSk7Y2xhc3Nlcy5sZW5ndGg+MCYmcGFyZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKC4uLmNsYXNzZXMpO30pO2xldCBuZXdUaGVtZUNsYXNzZXM9Y2xhc3NTdHJpbmdUb0FycmF5KHRoZW1lc1tzZWxlY3RlZFRoZW1lTmFtZV0pO25ld1RoZW1lQ2xhc3Nlcy5sZW5ndGg+MCYmcGFyZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKC4uLm5ld1RoZW1lQ2xhc3Nlcyk7fSxbdGhlbWVPdmVycmlkZSxzZWxlY3RlZF0pLHN0b3J5Rm4oKX0pO3ZhciBERUZBVUxUX0VMRU1FTlRfU0VMRUNUT1IyPVwiaHRtbFwiLERFRkFVTFRfREFUQV9BVFRSSUJVVEU9XCJkYXRhLXRoZW1lXCIsd2l0aFRoZW1lQnlEYXRhQXR0cmlidXRlPSh7dGhlbWVzLGRlZmF1bHRUaGVtZSxwYXJlbnRTZWxlY3Rvcj1ERUZBVUxUX0VMRU1FTlRfU0VMRUNUT1IyLGF0dHJpYnV0ZU5hbWU9REVGQVVMVF9EQVRBX0FUVFJJQlVURX0pPT4oaW5pdGlhbGl6ZVRoZW1lU3RhdGUoT2JqZWN0LmtleXModGhlbWVzKSxkZWZhdWx0VGhlbWUpLChzdG9yeUZuLGNvbnRleHQpPT57bGV0e3RoZW1lT3ZlcnJpZGV9PWNvbnRleHQucGFyYW1ldGVyc1tQQVJBTV9LRVldPz97fSxzZWxlY3RlZD1wbHVja1RoZW1lRnJvbUNvbnRleHQoY29udGV4dCk7cmV0dXJuIHVzZUVmZmVjdCgoKT0+e2xldCBwYXJlbnRFbGVtZW50PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocGFyZW50U2VsZWN0b3IpLHRoZW1lS2V5PXRoZW1lT3ZlcnJpZGV8fHNlbGVjdGVkfHxkZWZhdWx0VGhlbWU7cGFyZW50RWxlbWVudCYmcGFyZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSx0aGVtZXNbdGhlbWVLZXldKTt9LFt0aGVtZU92ZXJyaWRlLHNlbGVjdGVkXSksc3RvcnlGbigpfSk7dmFyIHBsdWNrVGhlbWVGcm9tS2V5UGFpclR1cGxlPShbXyx0aGVtZUNvbmZpZ10pPT50aGVtZUNvbmZpZyx3aXRoVGhlbWVGcm9tSlNYUHJvdmlkZXI9KHtQcm92aWRlcixHbG9iYWxTdHlsZXMsZGVmYXVsdFRoZW1lLHRoZW1lcz17fX0pPT57bGV0IHRoZW1lTmFtZXM9T2JqZWN0LmtleXModGhlbWVzKSxpbml0aWFsVGhlbWU9ZGVmYXVsdFRoZW1lfHx0aGVtZU5hbWVzWzBdO3JldHVybiBpbml0aWFsaXplVGhlbWVTdGF0ZSh0aGVtZU5hbWVzLGluaXRpYWxUaGVtZSksKHN0b3J5Rm4sY29udGV4dCk9PntsZXR7dGhlbWVPdmVycmlkZX09Y29udGV4dC5wYXJhbWV0ZXJzW1BBUkFNX0tFWV0/P3t9LHNlbGVjdGVkPXBsdWNrVGhlbWVGcm9tQ29udGV4dChjb250ZXh0KSx0aGVtZT11c2VNZW1vKCgpPT57bGV0IHNlbGVjdGVkVGhlbWVOYW1lPXRoZW1lT3ZlcnJpZGV8fHNlbGVjdGVkfHxpbml0aWFsVGhlbWUscGFpcnM9T2JqZWN0LmVudHJpZXModGhlbWVzKTtyZXR1cm4gcGFpcnMubGVuZ3RoPT09MT9wbHVja1RoZW1lRnJvbUtleVBhaXJUdXBsZShwYWlyc1swXSk6dGhlbWVzW3NlbGVjdGVkVGhlbWVOYW1lXX0sW3NlbGVjdGVkLHRoZW1lT3ZlcnJpZGVdKTtyZXR1cm4gUHJvdmlkZXI/UmVhY3QuY3JlYXRlRWxlbWVudChQcm92aWRlcix7dGhlbWV9LEdsb2JhbFN0eWxlcyYmUmVhY3QuY3JlYXRlRWxlbWVudChHbG9iYWxTdHlsZXMsbnVsbCksc3RvcnlGbigpKTpSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LG51bGwsR2xvYmFsU3R5bGVzJiZSZWFjdC5jcmVhdGVFbGVtZW50KEdsb2JhbFN0eWxlcyxudWxsKSxzdG9yeUZuKCkpfX07dmFyIGluZGV4X2RlZmF1bHQ9KCk9PmRlZmluZVByZXZpZXcocHJldmlld19leHBvcnRzKTtcblxuZXhwb3J0IHsgaGVscGVyc19leHBvcnRzIGFzIERlY29yYXRvckhlbHBlcnMsIGluZGV4X2RlZmF1bHQgYXMgZGVmYXVsdCwgd2l0aFRoZW1lQnlDbGFzc05hbWUsIHdpdGhUaGVtZUJ5RGF0YUF0dHJpYnV0ZSwgd2l0aFRoZW1lRnJvbUpTWFByb3ZpZGVyIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-themes@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-themes/dist/index.mjs\n')},"../../node_modules/.pnpm/@storybook+addon-themes@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-themes/dist/preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initialGlobals: () => (/* binding */ initialGlobals)\n/* harmony export */ });\nvar GLOBAL_KEY="theme";var initialGlobals={[GLOBAL_KEY]:""};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srYWRkb24tdGhlbWVzQDguNi4xMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zXy9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9hZGRvbi10aGVtZXMvZGlzdC9wcmV2aWV3Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsdUJBQXVCLG9CQUFvQjs7QUFFakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbWl0by1mb3Jtcy9idWxtYS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHN0b3J5Ym9vaythZGRvbi10aGVtZXNAOC42LjEyX3N0b3J5Ym9va0A4LjYuMTJfcHJldHRpZXJAMy41LjNfL25vZGVfbW9kdWxlcy9Ac3Rvcnlib29rL2FkZG9uLXRoZW1lcy9kaXN0L3ByZXZpZXcubWpzPzIwMjUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEdMT0JBTF9LRVk9XCJ0aGVtZVwiO3ZhciBpbml0aWFsR2xvYmFscz17W0dMT0JBTF9LRVldOlwiXCJ9O1xuXG5leHBvcnQgeyBpbml0aWFsR2xvYmFscyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+addon-themes@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/addon-themes/dist/preview.mjs\n')},"../../node_modules/.pnpm/@storybook+core@8.6.12_prettier@3.5.3_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/core/dist/csf/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   aj: () => (/* binding */ D),\n/* harmony export */   bU: () => (/* binding */ W),\n/* harmony export */   hX: () => (/* binding */ z)\n/* harmony export */ });\n/* unused harmony exports __definePreview, combineTags, isExportStory, isMeta, isStory, parseKind, storyNameFromExport, toId */\n/* harmony import */ var _storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("storybook/internal/preview-api");\n/* harmony import */ var _storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_0__);\nvar b = Object.create;\nvar f = Object.defineProperty;\nvar v = Object.getOwnPropertyDescriptor;\nvar P = Object.getOwnPropertyNames;\nvar O = Object.getPrototypeOf, _ = Object.prototype.hasOwnProperty;\nvar s = (e, r) => f(e, "name", { value: r, configurable: !0 });\nvar $ = (e, r) => () => (r || e((r = { exports: {} }).exports, r), r.exports);\nvar j = (e, r, t, n) => {\n  if (r && typeof r == "object" || typeof r == "function")\n    for (let a of P(r))\n      !_.call(e, a) && a !== t && f(e, a, { get: () => r[a], enumerable: !(n = v(r, a)) || n.enumerable });\n  return e;\n};\nvar C = (e, r, t) => (t = e != null ? b(O(e)) : {}, j(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. "__esModule" has not been set), then set\n  // "default" to the CommonJS "module.exports" for node compatibility.\n  r || !e || !e.__esModule ? f(t, "default", { value: e, enumerable: !0 }) : t,\n  e\n));\n\n// ../node_modules/@ngard/tiny-isequal/index.js\nvar T = $((g) => {\n  Object.defineProperty(g, "__esModule", { value: !0 }), g.isEqual = /* @__PURE__ */ function() {\n    var e = Object.prototype.toString, r = Object.getPrototypeOf, t = Object.getOwnPropertySymbols ? function(n) {\n      return Object.keys(n).concat(Object.getOwnPropertySymbols(n));\n    } : Object.keys;\n    return function(n, a) {\n      return (/* @__PURE__ */ s(function d(o, i, p) {\n        var c, u, l, m = e.call(o), h = e.call(i);\n        if (o === i) return !0;\n        if (o == null || i == null) return !1;\n        if (p.indexOf(o) > -1 && p.indexOf(i) > -1) return !0;\n        if (p.push(o, i), m != h || (c = t(o), u = t(i), c.length != u.length || c.some(function(A) {\n          return !d(o[A], i[A], p);\n        }))) return !1;\n        switch (m.slice(8, -1)) {\n          case "Symbol":\n            return o.valueOf() == i.valueOf();\n          case "Date":\n          case "Number":\n            return +o == +i || +o != +o && +i != +i;\n          case "RegExp":\n          case "Function":\n          case "String":\n          case "Boolean":\n            return "" + o == "" + i;\n          case "Set":\n          case "Map":\n            c = o.entries(), u = i.entries();\n            do\n              if (!d((l = c.next()).value, u.next().value, p)) return !1;\n            while (!l.done);\n            return !0;\n          case "ArrayBuffer":\n            o = new Uint8Array(o), i = new Uint8Array(i);\n          case "DataView":\n            o = new Uint8Array(o.buffer), i = new Uint8Array(i.buffer);\n          case "Float32Array":\n          case "Float64Array":\n          case "Int8Array":\n          case "Int16Array":\n          case "Int32Array":\n          case "Uint8Array":\n          case "Uint16Array":\n          case "Uint32Array":\n          case "Uint8ClampedArray":\n          case "Arguments":\n          case "Array":\n            if (o.length != i.length) return !1;\n            for (l = 0; l < o.length; l++) if ((l in o || l in i) && (l in o != l in i || !d(o[l], i[l], p))) return !1;\n            return !0;\n          case "Object":\n            return d(r(o), r(i), p);\n          default:\n            return !1;\n        }\n      }, "n"))(n, a, []);\n    };\n  }();\n});\n\n// src/csf/toStartCaseStr.ts\nfunction R(e) {\n  return e.replace(/_/g, " ").replace(/-/g, " ").replace(/\\./g, " ").replace(/([^\\n])([A-Z])([a-z])/g, (r, t, n, a) => `${t} ${n}${a}`).replace(\n  /([a-z])([A-Z])/g, (r, t, n) => `${t} ${n}`).replace(/([a-z])([0-9])/gi, (r, t, n) => `${t} ${n}`).replace(/([0-9])([a-z])/gi, (r, t, n) => `${t}\\\n ${n}`).replace(/(\\s|^)(\\w)/g, (r, t, n) => `${t}${n.toUpperCase()}`).replace(/ +/g, " ").trim();\n}\ns(R, "toStartCaseStr");\n\n// src/csf/includeConditionalArg.ts\nvar y = C(T(), 1);\nvar x = /* @__PURE__ */ s((e) => e.map((r) => typeof r < "u").filter(Boolean).length, "count"), E = /* @__PURE__ */ s((e, r) => {\n  let { exists: t, eq: n, neq: a, truthy: d } = e;\n  if (x([t, n, a, d]) > 1)\n    throw new Error(`Invalid conditional test ${JSON.stringify({ exists: t, eq: n, neq: a })}`);\n  if (typeof n < "u")\n    return (0, y.isEqual)(r, n);\n  if (typeof a < "u")\n    return !(0, y.isEqual)(r, a);\n  if (typeof t < "u") {\n    let i = typeof r < "u";\n    return t ? i : !i;\n  }\n  return (typeof d > "u" ? !0 : d) ? !!r : !r;\n}, "testValue"), z = /* @__PURE__ */ s((e, r, t) => {\n  if (!e.if)\n    return !0;\n  let { arg: n, global: a } = e.if;\n  if (x([n, a]) !== 1)\n    throw new Error(`Invalid conditional value ${JSON.stringify({ arg: n, global: a })}`);\n  let d = n ? r[n] : t[a];\n  return E(e.if, d);\n}, "includeConditionalArg");\n\n// src/csf/csf-factories.ts\n\nfunction L(e) {\n  let r, t = {\n    _tag: "Preview",\n    input: e,\n    get composed() {\n      if (r)\n        return r;\n      let { addons: n, ...a } = e;\n      return r = (0,_storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_0__.normalizeProjectAnnotations)((0,_storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_0__.composeConfigs)([...n ?? [], a])), r;\n    },\n    meta(n) {\n      return I(n, this);\n    }\n  };\n  return globalThis.globalProjectAnnotations = t.composed, t;\n}\ns(L, "__definePreview");\nfunction W(e) {\n  return e != null && typeof e == "object" && "_tag" in e && e?._tag === "Preview";\n}\ns(W, "isPreview");\nfunction H(e) {\n  return e != null && typeof e == "object" && "_tag" in e && e?._tag === "Meta";\n}\ns(H, "isMeta");\nfunction I(e, r) {\n  return {\n    _tag: "Meta",\n    input: e,\n    preview: r,\n    get composed() {\n      throw new Error("Not implemented");\n    },\n    story(t) {\n      return U(t, this);\n    }\n  };\n}\ns(I, "defineMeta");\nfunction U(e, r) {\n  return {\n    _tag: "Story",\n    input: e,\n    meta: r,\n    get composed() {\n      throw new Error("Not implemented");\n    }\n  };\n}\ns(U, "defineStory");\nfunction K(e) {\n  return e != null && typeof e == "object" && "_tag" in e && e?._tag === "Story";\n}\ns(K, "isStory");\n\n// src/csf/index.ts\nvar D = /* @__PURE__ */ s((e) => e.toLowerCase().replace(/[ ’–—―′¿\'`~!@#$%^&*()_|+\\-=?;:\'",.<>\\{\\}\\[\\]\\\\\\/]/gi, "-").replace(/-+/g,\n"-").replace(/^-+/, "").replace(/-+$/, ""), "sanitize"), w = /* @__PURE__ */ (/* unused pure expression or super */ null && (s((e, r) => {\n  let t = D(e);\n  if (t === "")\n    throw new Error(`Invalid ${r} \'${e}\', must include alphanumeric characters`);\n  return t;\n}, "sanitizeSafe"))), ee = /* @__PURE__ */ (/* unused pure expression or super */ null && (s((e, r) => `${w(e, "kind")}${r ? `--${w(r, "name")}` : ""}`, "toId"))), re = /* @__PURE__ */ (/* unused pure expression or super */ null && (s((e) => R(\ne), "storyNameFromExport")));\nfunction S(e, r) {\n  return Array.isArray(r) ? r.includes(e) : e.match(r);\n}\ns(S, "matches");\nfunction te(e, { includeStories: r, excludeStories: t }) {\n  return (\n    // https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs\n    e !== "__esModule" && (!r || S(e, r)) && (!t || !S(e, t))\n  );\n}\ns(te, "isExportStory");\nvar ne = /* @__PURE__ */ (/* unused pure expression or super */ null && (s((e, { rootSeparator: r, groupSeparator: t }) => {\n  let [n, a] = e.split(r, 2), d = (a || e).split(t).filter((o) => !!o);\n  return {\n    root: a ? n : null,\n    groups: d\n  };\n}, "parseKind"))), oe = /* @__PURE__ */ (/* unused pure expression or super */ null && (s((...e) => {\n  let r = e.reduce((t, n) => (n.startsWith("!") ? t.delete(n.slice(1)) : t.add(n), t), /* @__PURE__ */ new Set());\n  return Array.from(r);\n}, "combineTags")));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+core@8.6.12_prettier@3.5.3_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/core/dist/csf/index.js\n')},"../../node_modules/.pnpm/@storybook+core@8.6.12_prettier@3.5.3_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/core/dist/docs-tools/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   C2: () => (/* binding */ cn),\n/* harmony export */   Op: () => (/* binding */ yn),\n/* harmony export */   Sy: () => (/* binding */ oe),\n/* harmony export */   TQ: () => (/* binding */ z),\n/* harmony export */   UO: () => (/* binding */ Y),\n/* harmony export */   Ux: () => (/* binding */ l),\n/* harmony export */   Y1: () => (/* binding */ gt),\n/* harmony export */   YF: () => (/* binding */ je),\n/* harmony export */   i3: () => (/* binding */ B),\n/* harmony export */   p6: () => (/* binding */ on),\n/* harmony export */   rl: () => (/* binding */ nn)\n/* harmony export */ });\n/* unused harmony exports ADDON_ID, MAX_DEFAULT_VALUE_SUMMARY_LENGTH, MAX_TYPE_SUMMARY_LENGTH, PANEL_ID, PARAM_KEY, convert, extractComponentSectionArray, extractComponentSectionObject, getDocgenDescription, hasDocsOrControls, isDefaultValueBlacklisted, isValidDocgenSection, normalizeNewlines, parseJsDoc, str */\n/* harmony import */ var _storybook_core_preview_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("storybook/internal/preview-errors");\n/* harmony import */ var _storybook_core_preview_errors__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_storybook_core_preview_errors__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../../node_modules/.pnpm/jsdoc-type-pratt-parser@4.1.0/node_modules/jsdoc-type-pratt-parser/dist/index.js");\n/* harmony import */ var jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("storybook/internal/preview-api");\n/* harmony import */ var _storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_2__);\nvar De = Object.defineProperty;\nvar o = (e, t) => De(e, "name", { value: t, configurable: !0 });\n\n// src/docs-tools/argTypes/convert/flow/convert.ts\n\nvar he = /* @__PURE__ */ o((e) => e.name === "literal", "isLiteral"), be = /* @__PURE__ */ o((e) => e.value.replace(/[\'|"]/g, ""), "toEnumOp\\\ntion"), Pe = /* @__PURE__ */ o((e) => {\n  switch (e.type) {\n    case "function":\n      return { name: "function" };\n    case "object":\n      let t = {};\n      return e.signature.properties.forEach((r) => {\n        t[r.key] = d(r.value);\n      }), {\n        name: "object",\n        value: t\n      };\n    default:\n      throw new _storybook_core_preview_errors__WEBPACK_IMPORTED_MODULE_0__.UnknownArgTypesError({ type: e, language: "Flow" });\n  }\n}, "convertSig"), d = /* @__PURE__ */ o((e) => {\n  let { name: t, raw: r } = e, n = {};\n  switch (typeof r < "u" && (n.raw = r), e.name) {\n    case "literal":\n      return { ...n, name: "other", value: e.value };\n    case "string":\n    case "number":\n    case "symbol":\n    case "boolean":\n      return { ...n, name: t };\n    case "Array":\n      return { ...n, name: "array", value: e.elements.map(d) };\n    case "signature":\n      return { ...n, ...Pe(e) };\n    case "union":\n      return e.elements?.every(he) ? { ...n, name: "enum", value: e.elements?.map(be) } : { ...n, name: t, value: e.elements?.map(d) };\n    case "intersection":\n      return { ...n, name: t, value: e.elements?.map(d) };\n    default:\n      return { ...n, name: "other", value: t };\n  }\n}, "convert");\n\n// ../node_modules/es-toolkit/dist/object/mapValues.mjs\nfunction j(e, t) {\n  let r = {}, n = Object.keys(e);\n  for (let s = 0; s < n.length; s++) {\n    let i = n[s], p = e[i];\n    r[i] = t(p, i, e);\n  }\n  return r;\n}\no(j, "mapValues");\n\n// src/docs-tools/argTypes/convert/utils.ts\nvar W = /^[\'"]|[\'"]$/g, Se = /* @__PURE__ */ o((e) => e.replace(W, ""), "trimQuotes"), Oe = /* @__PURE__ */ o((e) => W.test(e), "includesQuo\\\ntes"), h = /* @__PURE__ */ o((e) => {\n  let t = Se(e);\n  return Oe(e) || Number.isNaN(Number(t)) ? t : Number(t);\n}, "parseLiteral");\n\n// src/docs-tools/argTypes/convert/proptypes/convert.ts\nvar ve = /^\\(.*\\) => /, x = /* @__PURE__ */ o((e) => {\n  let { name: t, raw: r, computed: n, value: s } = e, i = {};\n  switch (typeof r < "u" && (i.raw = r), t) {\n    case "enum": {\n      let a = n ? s : s.map((c) => h(c.value));\n      return { ...i, name: t, value: a };\n    }\n    case "string":\n    case "number":\n    case "symbol":\n      return { ...i, name: t };\n    case "func":\n      return { ...i, name: "function" };\n    case "bool":\n    case "boolean":\n      return { ...i, name: "boolean" };\n    case "arrayOf":\n    case "array":\n      return { ...i, name: "array", value: s && x(s) };\n    case "object":\n      return { ...i, name: t };\n    case "objectOf":\n      return { ...i, name: t, value: x(s) };\n    case "shape":\n    case "exact":\n      let p = j(s, (a) => x(a));\n      return { ...i, name: "object", value: p };\n    case "union":\n      return { ...i, name: "union", value: s.map((a) => x(a)) };\n    case "instanceOf":\n    case "element":\n    case "elementType":\n    default: {\n      if (t?.indexOf("|") > 0)\n        try {\n          let u = t.split("|").map((m) => JSON.parse(m));\n          return { ...i, name: "enum", value: u };\n        } catch {\n        }\n      let a = s ? `${t}(${s})` : t, c = ve.test(t) ? "function" : "other";\n      return { ...i, name: c, value: a };\n    }\n  }\n}, "convert");\n\n// src/docs-tools/argTypes/convert/typescript/convert.ts\n\nvar Ee = /* @__PURE__ */ o((e) => {\n  switch (e.type) {\n    case "function":\n      return { name: "function" };\n    case "object":\n      let t = {};\n      return e.signature.properties.forEach((r) => {\n        t[r.key] = D(r.value);\n      }), {\n        name: "object",\n        value: t\n      };\n    default:\n      throw new _storybook_core_preview_errors__WEBPACK_IMPORTED_MODULE_0__.UnknownArgTypesError({ type: e, language: "Typescript" });\n  }\n}, "convertSig"), D = /* @__PURE__ */ o((e) => {\n  let { name: t, raw: r } = e, n = {};\n  switch (typeof r < "u" && (n.raw = r), e.name) {\n    case "string":\n    case "number":\n    case "symbol":\n    case "boolean":\n      return { ...n, name: t };\n    case "Array":\n      return { ...n, name: "array", value: e.elements.map(D) };\n    case "signature":\n      return { ...n, ...Ee(e) };\n    case "union":\n      let s;\n      return e.elements?.every((i) => i.name === "literal") ? s = {\n        ...n,\n        name: "enum",\n        // @ts-expect-error fix types\n        value: e.elements?.map((i) => h(i.value))\n      } : s = { ...n, name: t, value: e.elements?.map(D) }, s;\n    case "intersection":\n      return { ...n, name: t, value: e.elements?.map(D) };\n    default:\n      return { ...n, name: "other", value: t };\n  }\n}, "convert");\n\n// src/docs-tools/argTypes/convert/index.ts\nvar b = /* @__PURE__ */ o((e) => {\n  let { type: t, tsType: r, flowType: n } = e;\n  try {\n    if (t != null)\n      return x(t);\n    if (r != null)\n      return D(r);\n    if (n != null)\n      return d(n);\n  } catch (s) {\n    console.error(s);\n  }\n  return null;\n}, "convert");\n\n// src/docs-tools/argTypes/docgen/types.ts\nvar je = /* @__PURE__ */ ((s) => (s.JAVASCRIPT = "JavaScript", s.FLOW = "Flow", s.TYPESCRIPT = "TypeScript", s.UNKNOWN = "Unknown", s))(je ||\n{});\n\n// src/docs-tools/argTypes/docgen/utils/defaultValue.ts\nvar ke = ["null", "undefined"];\nfunction T(e) {\n  return ke.some((t) => t === e);\n}\no(T, "isDefaultValueBlacklisted");\n\n// src/docs-tools/argTypes/docgen/utils/string.ts\nvar M = /* @__PURE__ */ o((e) => {\n  if (!e)\n    return "";\n  if (typeof e == "string")\n    return e;\n  throw new Error(`Description: expected string, got: ${JSON.stringify(e)}`);\n}, "str");\n\n// src/docs-tools/argTypes/docgen/utils/docgenInfo.ts\nfunction z(e) {\n  return !!e.__docgenInfo;\n}\no(z, "hasDocgen");\nfunction $(e) {\n  return e != null && Object.keys(e).length > 0;\n}\no($, "isValidDocgenSection");\nfunction Y(e, t) {\n  return z(e) ? e.__docgenInfo[t] : null;\n}\no(Y, "getDocgenSection");\nfunction q(e) {\n  return z(e) ? M(e.__docgenInfo.description) : "";\n}\no(q, "getDocgenDescription");\n\n// ../node_modules/comment-parser/es6/primitives.js\nvar f;\n(function(e) {\n  e.start = "/**", e.nostart = "/***", e.delim = "*", e.end = "*/";\n})(f = f || (f = {}));\n\n// ../node_modules/comment-parser/es6/util.js\nfunction k(e) {\n  return /^\\s+$/.test(e);\n}\no(k, "isSpace");\nfunction G(e) {\n  let t = e.match(/\\r+$/);\n  return t == null ? ["", e] : [e.slice(-t[0].length), e.slice(0, -t[0].length)];\n}\no(G, "splitCR");\nfunction y(e) {\n  let t = e.match(/^\\s+/);\n  return t == null ? ["", e] : [e.slice(0, t[0].length), e.slice(t[0].length)];\n}\no(y, "splitSpace");\nfunction K(e) {\n  return e.split(/\\n/);\n}\no(K, "splitLines");\nfunction X(e = {}) {\n  return Object.assign({ tag: "", name: "", type: "", optional: !1, description: "", problems: [], source: [] }, e);\n}\no(X, "seedSpec");\nfunction F(e = {}) {\n  return Object.assign({ start: "", delimiter: "", postDelimiter: "", tag: "", postTag: "", name: "", postName: "", type: "", postType: "", description: "",\n  end: "", lineEnd: "" }, e);\n}\no(F, "seedTokens");\n\n// ../node_modules/comment-parser/es6/parser/block-parser.js\nvar Fe = /^@\\S+/;\nfunction J({ fence: e = "```" } = {}) {\n  let t = Je(e), r = /* @__PURE__ */ o((n, s) => t(n) ? !s : s, "toggleFence");\n  return /* @__PURE__ */ o(function(s) {\n    let i = [[]], p = !1;\n    for (let a of s)\n      Fe.test(a.tokens.description) && !p ? i.push([a]) : i[i.length - 1].push(a), p = r(a.tokens.description, p);\n    return i;\n  }, "parseBlock");\n}\no(J, "getParser");\nfunction Je(e) {\n  return typeof e == "string" ? (t) => t.split(e).length % 2 === 0 : e;\n}\no(Je, "getFencer");\n\n// ../node_modules/comment-parser/es6/parser/source-parser.js\nfunction N({ startLine: e = 0, markers: t = f } = {}) {\n  let r = null, n = e;\n  return /* @__PURE__ */ o(function(i) {\n    let p = i, a = F();\n    if ([a.lineEnd, p] = G(p), [a.start, p] = y(p), r === null && p.startsWith(t.start) && !p.startsWith(t.nostart) && (r = [], a.delimiter =\n    p.slice(0, t.start.length), p = p.slice(t.start.length), [a.postDelimiter, p] = y(p)), r === null)\n      return n++, null;\n    let c = p.trimRight().endsWith(t.end);\n    if (a.delimiter === "" && p.startsWith(t.delim) && !p.startsWith(t.end) && (a.delimiter = t.delim, p = p.slice(t.delim.length), [a.postDelimiter,\n    p] = y(p)), c) {\n      let u = p.trimRight();\n      a.end = p.slice(u.length - t.end.length), p = u.slice(0, -t.end.length);\n    }\n    if (a.description = p, r.push({ number: n, source: i, tokens: a }), n++, c) {\n      let u = r.slice();\n      return r = null, u;\n    }\n    return null;\n  }, "parseSource");\n}\no(N, "getParser");\n\n// ../node_modules/comment-parser/es6/parser/spec-parser.js\nfunction R({ tokenizers: e }) {\n  return /* @__PURE__ */ o(function(r) {\n    var n;\n    let s = X({ source: r });\n    for (let i of e)\n      if (s = i(s), !((n = s.problems[s.problems.length - 1]) === null || n === void 0) && n.critical)\n        break;\n    return s;\n  }, "parseSpec");\n}\no(R, "getParser");\n\n// ../node_modules/comment-parser/es6/parser/tokenizers/tag.js\nfunction P() {\n  return (e) => {\n    let { tokens: t } = e.source[0], r = t.description.match(/\\s*(@(\\S+))(\\s*)/);\n    return r === null ? (e.problems.push({\n      code: "spec:tag:prefix",\n      message: \'tag should start with "@" symbol\',\n      line: e.source[0].number,\n      critical: !0\n    }), e) : (t.tag = r[1], t.postTag = r[3], t.description = t.description.slice(r[0].length), e.tag = r[2], e);\n  };\n}\no(P, "tagTokenizer");\n\n// ../node_modules/comment-parser/es6/parser/tokenizers/type.js\nfunction S(e = "compact") {\n  let t = Re(e);\n  return (r) => {\n    let n = 0, s = [];\n    for (let [a, { tokens: c }] of r.source.entries()) {\n      let u = "";\n      if (a === 0 && c.description[0] !== "{")\n        return r;\n      for (let m of c.description)\n        if (m === "{" && n++, m === "}" && n--, u += m, n === 0)\n          break;\n      if (s.push([c, u]), n === 0)\n        break;\n    }\n    if (n !== 0)\n      return r.problems.push({\n        code: "spec:type:unpaired-curlies",\n        message: "unpaired curlies",\n        line: r.source[0].number,\n        critical: !0\n      }), r;\n    let i = [], p = s[0][0].postDelimiter.length;\n    for (let [a, [c, u]] of s.entries())\n      c.type = u, a > 0 && (c.type = c.postDelimiter.slice(p) + u, c.postDelimiter = c.postDelimiter.slice(0, p)), [c.postType, c.description] =\n      y(c.description.slice(u.length)), i.push(c.type);\n    return i[0] = i[0].slice(1), i[i.length - 1] = i[i.length - 1].slice(0, -1), r.type = t(i), r;\n  };\n}\no(S, "typeTokenizer");\nvar Ne = /* @__PURE__ */ o((e) => e.trim(), "trim");\nfunction Re(e) {\n  return e === "compact" ? (t) => t.map(Ne).join("") : e === "preserve" ? (t) => t.join(`\n`) : e;\n}\no(Re, "getJoiner");\n\n// ../node_modules/comment-parser/es6/parser/tokenizers/name.js\nvar Ae = /* @__PURE__ */ o((e) => e && e.startsWith(\'"\') && e.endsWith(\'"\'), "isQuoted");\nfunction O() {\n  let e = /* @__PURE__ */ o((t, { tokens: r }, n) => r.type === "" ? t : n, "typeEnd");\n  return (t) => {\n    let { tokens: r } = t.source[t.source.reduce(e, 0)], n = r.description.trimLeft(), s = n.split(\'"\');\n    if (s.length > 1 && s[0] === "" && s.length % 2 === 1)\n      return t.name = s[1], r.name = `"${s[1]}"`, [r.postName, r.description] = y(n.slice(r.name.length)), t;\n    let i = 0, p = "", a = !1, c;\n    for (let m of n) {\n      if (i === 0 && k(m))\n        break;\n      m === "[" && i++, m === "]" && i--, p += m;\n    }\n    if (i !== 0)\n      return t.problems.push({\n        code: "spec:name:unpaired-brackets",\n        message: "unpaired brackets",\n        line: t.source[0].number,\n        critical: !0\n      }), t;\n    let u = p;\n    if (p[0] === "[" && p[p.length - 1] === "]") {\n      a = !0, p = p.slice(1, -1);\n      let m = p.split("=");\n      if (p = m[0].trim(), m[1] !== void 0 && (c = m.slice(1).join("=").trim()), p === "")\n        return t.problems.push({\n          code: "spec:name:empty-name",\n          message: "empty name",\n          line: t.source[0].number,\n          critical: !0\n        }), t;\n      if (c === "")\n        return t.problems.push({\n          code: "spec:name:empty-default",\n          message: "empty default value",\n          line: t.source[0].number,\n          critical: !0\n        }), t;\n      if (!Ae(c) && /=(?!>)/.test(c))\n        return t.problems.push({\n          code: "spec:name:invalid-default",\n          message: "invalid default value syntax",\n          line: t.source[0].number,\n          critical: !0\n        }), t;\n    }\n    return t.optional = a, t.name = p, r.name = u, c !== void 0 && (t.default = c), [r.postName, r.description] = y(n.slice(r.name.length)),\n    t;\n  };\n}\no(O, "nameTokenizer");\n\n// ../node_modules/comment-parser/es6/parser/tokenizers/description.js\nfunction v(e = "compact", t = f) {\n  let r = A(e);\n  return (n) => (n.description = r(n.source, t), n);\n}\no(v, "descriptionTokenizer");\nfunction A(e) {\n  return e === "compact" ? Ve : e === "preserve" ? Be : e;\n}\no(A, "getJoiner");\nfunction Ve(e, t = f) {\n  return e.map(({ tokens: { description: r } }) => r.trim()).filter((r) => r !== "").join(" ");\n}\no(Ve, "compactJoiner");\nvar Ce = /* @__PURE__ */ o((e, { tokens: t }, r) => t.type === "" ? e : r, "lineNo"), _e = /* @__PURE__ */ o(({ tokens: e }) => (e.delimiter ===\n"" ? e.start : e.postDelimiter.slice(1)) + e.description, "getDescription");\nfunction Be(e, t = f) {\n  if (e.length === 0)\n    return "";\n  e[0].tokens.description === "" && e[0].tokens.delimiter === t.start && (e = e.slice(1));\n  let r = e[e.length - 1];\n  return r !== void 0 && r.tokens.description === "" && r.tokens.end.endsWith(t.end) && (e = e.slice(0, -1)), e = e.slice(e.reduce(Ce, 0)), e.\n  map(_e).join(`\n`);\n}\no(Be, "preserveJoiner");\n\n// ../node_modules/comment-parser/es6/parser/index.js\nfunction V({ startLine: e = 0, fence: t = "```", spacing: r = "compact", markers: n = f, tokenizers: s = [\n  P(),\n  S(r),\n  O(),\n  v(r)\n] } = {}) {\n  if (e < 0 || e % 1 > 0)\n    throw new Error("Invalid startLine");\n  let i = N({ startLine: e, markers: n }), p = J({ fence: t }), a = R({ tokenizers: s }), c = A(r);\n  return function(u) {\n    let m = [];\n    for (let ge of K(u)) {\n      let E = i(ge);\n      if (E === null)\n        continue;\n      let L = p(E), U = L.slice(1).map(a);\n      m.push({\n        description: c(L[0], n),\n        tags: U,\n        source: E,\n        problems: U.reduce((de, xe) => de.concat(xe.problems), [])\n      });\n    }\n    return m;\n  };\n}\no(V, "getParser");\n\n// ../node_modules/comment-parser/es6/stringifier/index.js\nfunction Ie(e) {\n  return e.start + e.delimiter + e.postDelimiter + e.tag + e.postTag + e.type + e.postType + e.name + e.postName + e.description + e.end + e.\n  lineEnd;\n}\no(Ie, "join");\nfunction C() {\n  return (e) => e.source.map(({ tokens: t }) => Ie(t)).join(`\n`);\n}\no(C, "getStringifier");\n\n// ../node_modules/comment-parser/es6/stringifier/inspect.js\nvar Le = {\n  line: 0,\n  start: 0,\n  delimiter: 0,\n  postDelimiter: 0,\n  tag: 0,\n  postTag: 0,\n  name: 0,\n  postName: 0,\n  type: 0,\n  postType: 0,\n  description: 0,\n  end: 0,\n  lineEnd: 0\n};\nvar Mr = Object.keys(Le);\n\n// ../node_modules/comment-parser/es6/index.js\nfunction H(e, t = {}) {\n  return V(t)(e);\n}\no(H, "parse");\nvar lo = C();\n\n// src/docs-tools/argTypes/jsdocParser.ts\n\nfunction ze(e) {\n  return e != null && e.includes("@");\n}\no(ze, "containsJsDoc");\nfunction $e(e) {\n  let n = `/**\n` + (e ?? "").split(`\n`).map((i) => ` * ${i}`).join(`\n`) + `\n*/`, s = H(n, {\n    spacing: "preserve"\n  });\n  if (!s || s.length === 0)\n    throw new Error("Cannot parse JSDoc tags.");\n  return s[0];\n}\no($e, "parse");\nvar Ye = {\n  tags: ["param", "arg", "argument", "returns", "ignore", "deprecated"]\n}, Q = /* @__PURE__ */ o((e, t = Ye) => {\n  if (!ze(e))\n    return {\n      includesJsDoc: !1,\n      ignore: !1\n    };\n  let r = $e(e), n = qe(r, t.tags);\n  return n.ignore ? {\n    includesJsDoc: !0,\n    ignore: !0\n  } : {\n    includesJsDoc: !0,\n    ignore: !1,\n    // Always use the parsed description to ensure JSDoc is removed from the description.\n    description: r.description.trim(),\n    extractedTags: n\n  };\n}, "parseJsDoc");\nfunction qe(e, t) {\n  let r = {\n    params: null,\n    deprecated: null,\n    returns: null,\n    ignore: !1\n  };\n  for (let n of e.tags)\n    if (!(t !== void 0 && !t.includes(n.tag)))\n      if (n.tag === "ignore") {\n        r.ignore = !0;\n        break;\n      } else\n        switch (n.tag) {\n          // arg & argument are aliases for param.\n          case "param":\n          case "arg":\n          case "argument": {\n            let s = Ke(n);\n            s != null && (r.params == null && (r.params = []), r.params.push(s));\n            break;\n          }\n          case "deprecated": {\n            let s = Xe(n);\n            s != null && (r.deprecated = s);\n            break;\n          }\n          case "returns": {\n            let s = He(n);\n            s != null && (r.returns = s);\n            break;\n          }\n          default:\n            break;\n        }\n  return r;\n}\no(qe, "extractJsDocTags");\nfunction Ge(e) {\n  return e.replace(/[\\.-]$/, "");\n}\no(Ge, "normaliseParamName");\nfunction Ke(e) {\n  if (!e.name || e.name === "-")\n    return null;\n  let t = te(e.type);\n  return {\n    name: e.name,\n    type: t,\n    description: ee(e.description),\n    getPrettyName: /* @__PURE__ */ o(() => Ge(e.name), "getPrettyName"),\n    getTypeName: /* @__PURE__ */ o(() => t ? re(t) : null, "getTypeName")\n  };\n}\no(Ke, "extractParam");\nfunction Xe(e) {\n  return e.name ? Z(e.name, e.description) : null;\n}\no(Xe, "extractDeprecated");\nfunction Z(e, t) {\n  let r = e === "" ? t : `${e} ${t}`;\n  return ee(r);\n}\no(Z, "joinNameAndDescription");\nfunction ee(e) {\n  let t = e.replace(/^- /g, "").trim();\n  return t === "" ? null : t;\n}\no(ee, "normaliseDescription");\nfunction He(e) {\n  let t = te(e.type);\n  return t ? {\n    type: t,\n    description: Z(e.name, e.description),\n    getTypeName: /* @__PURE__ */ o(() => re(t), "getTypeName")\n  } : null;\n}\no(He, "extractReturns");\nvar g = (0,jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1__.stringifyRules)(), Qe = g.JsdocTypeObject;\ng.JsdocTypeAny = () => "any";\ng.JsdocTypeObject = (e, t) => `(${Qe(e, t)})`;\ng.JsdocTypeOptional = (e, t) => t(e.element);\ng.JsdocTypeNullable = (e, t) => t(e.element);\ng.JsdocTypeNotNullable = (e, t) => t(e.element);\ng.JsdocTypeUnion = (e, t) => e.elements.map(t).join("|");\nfunction te(e) {\n  try {\n    return (0,jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1__.parse)(e, "typescript");\n  } catch {\n    return null;\n  }\n}\no(te, "extractType");\nfunction re(e) {\n  return (0,jsdoc_type_pratt_parser__WEBPACK_IMPORTED_MODULE_1__.transform)(g, e);\n}\no(re, "extractTypeName");\n\n// src/docs-tools/argTypes/utils.ts\nvar ho = 90, bo = 50;\nfunction B(e) {\n  return e.length > 90;\n}\no(B, "isTooLongForTypeSummary");\nfunction oe(e) {\n  return e.length > 50;\n}\no(oe, "isTooLongForDefaultValueSummary");\nfunction l(e, t) {\n  return e === t ? { summary: e } : { summary: e, detail: t };\n}\no(l, "createSummaryValue");\nvar Po = /* @__PURE__ */ (/* unused pure expression or super */ null && (o((e) => e.replace(/\\\\r\\\\n/g, "\\\\n"), "normalizeNewlines")));\n\n// src/docs-tools/argTypes/docgen/flow/createDefaultValue.ts\nfunction ne(e, t) {\n  if (e != null) {\n    let { value: r } = e;\n    if (!T(r))\n      return oe(r) ? l(t?.name, r) : l(r);\n  }\n  return null;\n}\no(ne, "createDefaultValue");\n\n// src/docs-tools/argTypes/docgen/flow/createType.ts\nfunction se({ name: e, value: t, elements: r, raw: n }) {\n  return t ?? (r != null ? r.map(se).join(" | ") : n ?? e);\n}\no(se, "generateUnionElement");\nfunction Ze({ name: e, raw: t, elements: r }) {\n  return r != null ? l(r.map(se).join(" | ")) : t != null ? l(t.replace(/^\\|\\s*/, "")) : l(e);\n}\no(Ze, "generateUnion");\nfunction et({ type: e, raw: t }) {\n  return t != null ? l(t) : l(e);\n}\no(et, "generateFuncSignature");\nfunction tt({ type: e, raw: t }) {\n  return t != null ? B(t) ? l(e, t) : l(t) : l(e);\n}\no(tt, "generateObjectSignature");\nfunction rt(e) {\n  let { type: t } = e;\n  return t === "object" ? tt(e) : et(e);\n}\no(rt, "generateSignature");\nfunction ot({ name: e, raw: t }) {\n  return t != null ? B(t) ? l(e, t) : l(t) : l(e);\n}\no(ot, "generateDefault");\nfunction ie(e) {\n  if (e == null)\n    return null;\n  switch (e.name) {\n    case "union":\n      return Ze(e);\n    case "signature":\n      return rt(e);\n    default:\n      return ot(e);\n  }\n}\no(ie, "createType");\n\n// src/docs-tools/argTypes/docgen/flow/createPropDef.ts\nvar pe = /* @__PURE__ */ o((e, t) => {\n  let { flowType: r, description: n, required: s, defaultValue: i } = t;\n  return {\n    name: e,\n    type: ie(r),\n    required: s,\n    description: n,\n    defaultValue: ne(i ?? null, r ?? null)\n  };\n}, "createFlowPropDef");\n\n// src/docs-tools/argTypes/docgen/typeScript/createDefaultValue.ts\nfunction ae({ defaultValue: e }) {\n  if (e != null) {\n    let { value: t } = e;\n    if (!T(t))\n      return l(t);\n  }\n  return null;\n}\no(ae, "createDefaultValue");\n\n// src/docs-tools/argTypes/docgen/typeScript/createType.ts\nfunction ce({ tsType: e, required: t }) {\n  if (e == null)\n    return null;\n  let r = e.name;\n  return t || (r = r.replace(" | undefined", "")), l(\n    ["Array", "Record", "signature"].includes(e.name) ? e.raw : r\n  );\n}\no(ce, "createType");\n\n// src/docs-tools/argTypes/docgen/typeScript/createPropDef.ts\nvar le = /* @__PURE__ */ o((e, t) => {\n  let { description: r, required: n } = t;\n  return {\n    name: e,\n    type: ce(t),\n    required: n,\n    description: r,\n    defaultValue: ae(t)\n  };\n}, "createTsPropDef");\n\n// src/docs-tools/argTypes/docgen/createPropDef.ts\nfunction nt(e) {\n  return e != null ? l(e.name) : null;\n}\no(nt, "createType");\nfunction st(e) {\n  let { computed: t, func: r } = e;\n  return typeof t > "u" && typeof r > "u";\n}\no(st, "isReactDocgenTypescript");\nfunction it(e) {\n  return e ? e.name === "string" ? !0 : e.name === "enum" ? Array.isArray(e.value) && e.value.every(\n    ({ value: t }) => typeof t == "string" && t[0] === \'"\' && t[t.length - 1] === \'"\'\n  ) : !1 : !1;\n}\no(it, "isStringValued");\nfunction pt(e, t) {\n  if (e != null) {\n    let { value: r } = e;\n    if (!T(r))\n      return st(e) && it(t) ? l(JSON.stringify(r)) : l(r);\n  }\n  return null;\n}\no(pt, "createDefaultValue");\nfunction ue(e, t, r) {\n  let { description: n, required: s, defaultValue: i } = r;\n  return {\n    name: e,\n    type: nt(t),\n    required: s,\n    description: n,\n    defaultValue: pt(i, t)\n  };\n}\no(ue, "createBasicPropDef");\nfunction w(e, t) {\n  if (t?.includesJsDoc) {\n    let { description: r, extractedTags: n } = t;\n    r != null && (e.description = t.description);\n    let s = {\n      ...n,\n      params: n?.params?.map(\n        (i) => ({\n          name: i.getPrettyName(),\n          description: i.description\n        })\n      )\n    };\n    Object.values(s).filter(Boolean).length > 0 && (e.jsDocTags = s);\n  }\n  return e;\n}\no(w, "applyJsDocResult");\nvar at = /* @__PURE__ */ o((e, t, r) => {\n  let n = ue(e, t.type, t);\n  return n.sbType = b(t), w(n, r);\n}, "javaScriptFactory"), ct = /* @__PURE__ */ o((e, t, r) => {\n  let n = le(e, t);\n  return n.sbType = b(t), w(n, r);\n}, "tsFactory"), lt = /* @__PURE__ */ o((e, t, r) => {\n  let n = pe(e, t);\n  return n.sbType = b(t), w(n, r);\n}, "flowFactory"), ut = /* @__PURE__ */ o((e, t, r) => {\n  let n = ue(e, { name: "unknown" }, t);\n  return w(n, r);\n}, "unknownFactory"), I = /* @__PURE__ */ o((e) => {\n  switch (e) {\n    case "JavaScript":\n      return at;\n    case "TypeScript":\n      return ct;\n    case "Flow":\n      return lt;\n    default:\n      return ut;\n  }\n}, "getPropDefFactory");\n\n// src/docs-tools/argTypes/docgen/extractDocgenProps.ts\nvar me = /* @__PURE__ */ o((e) => e.type != null ? "JavaScript" : e.flowType != null ? "Flow" : e.tsType != null ? "TypeScript" : "Unknown",\n"getTypeSystem"), mt = /* @__PURE__ */ o((e) => {\n  let t = me(e[0]), r = I(t);\n  return e.map((n) => {\n    let s = n;\n    return n.type?.elements && (s = {\n      ...n,\n      type: {\n        ...n.type,\n        value: n.type.elements\n      }\n    }), fe(s.name, s, t, r);\n  });\n}, "extractComponentSectionArray"), ft = /* @__PURE__ */ o((e) => {\n  let t = Object.keys(e), r = me(e[t[0]]), n = I(r);\n  return t.map((s) => {\n    let i = e[s];\n    return i != null ? fe(s, i, r, n) : null;\n  }).filter(Boolean);\n}, "extractComponentSectionObject"), on = /* @__PURE__ */ o((e, t) => {\n  let r = Y(e, t);\n  return $(r) ? Array.isArray(r) ? mt(r) : ft(r) : [];\n}, "extractComponentProps");\nfunction fe(e, t, r, n) {\n  let s = Q(t.description);\n  return s.includesJsDoc && s.ignore ? null : {\n    propDef: n(e, t, s),\n    jsDocTags: s.extractedTags,\n    docgenInfo: t,\n    typeSystem: r\n  };\n}\no(fe, "extractProp");\nfunction nn(e) {\n  return e != null ? q(e) : "";\n}\no(nn, "extractComponentDescription");\n\n// src/docs-tools/argTypes/enhanceArgTypes.ts\n\nvar cn = /* @__PURE__ */ o((e) => {\n  let {\n    component: t,\n    argTypes: r,\n    parameters: { docs: n = {} }\n  } = e, { extractArgTypes: s } = n, i = s && t ? s(t) : {};\n  return i ? (0,_storybook_core_preview_api__WEBPACK_IMPORTED_MODULE_2__.combineParameters)(i, r) : r;\n}, "enhanceArgTypes");\n\n// src/docs-tools/shared.ts\nvar ye = "storybook/docs", mn = (/* unused pure expression or super */ null && (`${ye}/panel`)), fn = "docs", yn = `${ye}/snippet-rendered`, gt = /* @__PURE__ */ ((n) => (n.AUTO = "auto", n.\nCODE = "code", n.DYNAMIC = "dynamic", n))(gt || {});\n\n// src/docs-tools/hasDocsOrControls.ts\nvar dt = /(addons\\/|addon-|addon-essentials\\/)(docs|controls)/, dn = /* @__PURE__ */ (/* unused pure expression or super */ null && (o((e) => e.presetsList?.some((t) => dt.test(t.name)), "\\\nhasDocsOrControls")));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+core@8.6.12_prettier@3.5.3_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/core/dist/docs-tools/index.js\n')},"../../node_modules/.pnpm/@storybook+instrumenter@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/instrumenter/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wV: () => (/* binding */ instrument)\n/* harmony export */ });\n/* unused harmony exports CallStates, EVENTS */\n/* harmony import */ var storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("storybook/internal/client-logger");\n/* harmony import */ var storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("storybook/internal/core-events");\n/* harmony import */ var storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("storybook/internal/preview-api");\n/* harmony import */ var storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _storybook_global__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("@storybook/global");\n/* harmony import */ var _storybook_global__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_storybook_global__WEBPACK_IMPORTED_MODULE_3__);\n/* provided dependency */ var process = __webpack_require__("../../node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");\n\n\n\n\n\nvar __require=(x=> true?__webpack_require__("../../node_modules/.pnpm/@storybook+instrumenter@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/instrumenter/dist sync recursive"):0)(function(x){if(true)return __webpack_require__("../../node_modules/.pnpm/@storybook+instrumenter@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/instrumenter/dist sync recursive").apply(this,arguments);throw Error(\'Dynamic require of "\'+x+\'" is not supported\')});var f={reset:[0,0],bold:[1,22,"\\x1B[22m\\x1B[1m"],dim:[2,22,"\\x1B[22m\\x1B[2m"],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]},h=Object.entries(f);function a(n){return String(n)}a.open="";a.close="";function C(n=!1){let e=typeof process<"u"?process:void 0,i=e?.env||{},g=e?.argv||[];return !("NO_COLOR"in i||g.includes("--no-color"))&&("FORCE_COLOR"in i||g.includes("--color")||e?.platform==="win32"||n&&i.TERM!=="dumb"||"CI"in i)||typeof window<"u"&&!!window.chrome}function p(n=!1){let e=C(n),i=(r,t,c,o)=>{let l="",s=0;do l+=r.substring(s,o)+c,s=o+t.length,o=r.indexOf(t,s);while(~o);return l+r.substring(s)},g=(r,t,c=r)=>{let o=l=>{let s=String(l),b=s.indexOf(t,r.length);return ~b?r+i(s,t,c,b)+t:r+s+t};return o.open=r,o.close=t,o},u={isColorSupported:e},d=r=>`\\x1B[${r}m`;for(let[r,t]of h)u[r]=e?g(d(t[0]),d(t[1]),t[2]):a;return u}var f2=p(!1);function getKeysOfEnumerableProperties(object,compareKeys){let rawKeys=Object.keys(object),keys=compareKeys===null?rawKeys:rawKeys.sort(compareKeys);if(Object.getOwnPropertySymbols)for(let symbol of Object.getOwnPropertySymbols(object))Object.getOwnPropertyDescriptor(object,symbol).enumerable&&keys.push(symbol);return keys}function printIteratorEntries(iterator,config,indentation,depth,refs,printer2,separator=": "){let result="",width=0,current=iterator.next();if(!current.done){result+=config.spacingOuter;let indentationNext=indentation+config.indent;for(;!current.done;){if(result+=indentationNext,width++===config.maxWidth){result+="\\u2026";break}let name=printer2(current.value[0],config,indentationNext,depth,refs),value=printer2(current.value[1],config,indentationNext,depth,refs);result+=name+separator+value,current=iterator.next(),current.done?config.min||(result+=","):result+=`,${config.spacingInner}`;}result+=config.spacingOuter+indentation;}return result}function printIteratorValues(iterator,config,indentation,depth,refs,printer2){let result="",width=0,current=iterator.next();if(!current.done){result+=config.spacingOuter;let indentationNext=indentation+config.indent;for(;!current.done;){if(result+=indentationNext,width++===config.maxWidth){result+="\\u2026";break}result+=printer2(current.value,config,indentationNext,depth,refs),current=iterator.next(),current.done?config.min||(result+=","):result+=`,${config.spacingInner}`;}result+=config.spacingOuter+indentation;}return result}function printListItems(list,config,indentation,depth,refs,printer2){let result="";list=list instanceof ArrayBuffer?new DataView(list):list;let isDataView=l=>l instanceof DataView,length=isDataView(list)?list.byteLength:list.length;if(length>0){result+=config.spacingOuter;let indentationNext=indentation+config.indent;for(let i=0;i<length;i++){if(result+=indentationNext,i===config.maxWidth){result+="\\u2026";break}(isDataView(list)||i in list)&&(result+=printer2(isDataView(list)?list.getInt8(i):list[i],config,indentationNext,depth,refs)),i<length-1?result+=`,${config.spacingInner}`:config.min||(result+=",");}result+=config.spacingOuter+indentation;}return result}function printObjectProperties(val,config,indentation,depth,refs,printer2){let result="",keys=getKeysOfEnumerableProperties(val,config.compareKeys);if(keys.length>0){result+=config.spacingOuter;let indentationNext=indentation+config.indent;for(let i=0;i<keys.length;i++){let key=keys[i],name=printer2(key,config,indentationNext,depth,refs),value=printer2(val[key],config,indentationNext,depth,refs);result+=`${indentationNext+name}: ${value}`,i<keys.length-1?result+=`,${config.spacingInner}`:config.min||(result+=",");}result+=config.spacingOuter+indentation;}return result}var asymmetricMatcher=typeof Symbol=="function"&&Symbol.for?Symbol.for("jest.asymmetricMatcher"):1267621,SPACE$2=" ",serialize$5=(val,config,indentation,depth,refs,printer2)=>{let stringedValue=val.toString();if(stringedValue==="ArrayContaining"||stringedValue==="ArrayNotContaining")return ++depth>config.maxDepth?`[${stringedValue}]`:`${stringedValue+SPACE$2}[${printListItems(val.sample,config,indentation,depth,refs,printer2)}]`;if(stringedValue==="ObjectContaining"||stringedValue==="ObjectNotContaining")return ++depth>config.maxDepth?`[${stringedValue}]`:`${stringedValue+SPACE$2}{${printObjectProperties(val.sample,config,indentation,depth,refs,printer2)}}`;if(stringedValue==="StringMatching"||stringedValue==="StringNotMatching"||stringedValue==="StringContaining"||stringedValue==="StringNotContaining")return stringedValue+SPACE$2+printer2(val.sample,config,indentation,depth,refs);if(typeof val.toAsymmetricMatcher!="function")throw new TypeError(`Asymmetric matcher ${val.constructor.name} does not implement toAsymmetricMatcher()`);return val.toAsymmetricMatcher()},test$5=val=>val&&val.$$typeof===asymmetricMatcher,plugin$5={serialize:serialize$5,test:test$5},SPACE$1=" ",OBJECT_NAMES=new Set(["DOMStringMap","NamedNodeMap"]),ARRAY_REGEXP=/^(?:HTML\\w*Collection|NodeList)$/;function testName(name){return OBJECT_NAMES.has(name)||ARRAY_REGEXP.test(name)}var test$4=val=>val&&val.constructor&&!!val.constructor.name&&testName(val.constructor.name);function isNamedNodeMap(collection){return collection.constructor.name==="NamedNodeMap"}var serialize$4=(collection,config,indentation,depth,refs,printer2)=>{let name=collection.constructor.name;return ++depth>config.maxDepth?`[${name}]`:(config.min?"":name+SPACE$1)+(OBJECT_NAMES.has(name)?`{${printObjectProperties(isNamedNodeMap(collection)?[...collection].reduce((props,attribute)=>(props[attribute.name]=attribute.value,props),{}):{...collection},config,indentation,depth,refs,printer2)}}`:`[${printListItems([...collection],config,indentation,depth,refs,printer2)}]`)},plugin$4={serialize:serialize$4,test:test$4};function escapeHTML(str){return str.replaceAll("<","&lt;").replaceAll(">","&gt;")}function printProps(keys,props,config,indentation,depth,refs,printer2){let indentationNext=indentation+config.indent,colors=config.colors;return keys.map(key=>{let value=props[key],printed=printer2(value,config,indentationNext,depth,refs);return typeof value!="string"&&(printed.includes(`\n`)&&(printed=config.spacingOuter+indentationNext+printed+config.spacingOuter+indentation),printed=`{${printed}}`),`${config.spacingInner+indentation+colors.prop.open+key+colors.prop.close}=${colors.value.open}${printed}${colors.value.close}`}).join("")}function printChildren(children,config,indentation,depth,refs,printer2){return children.map(child=>config.spacingOuter+indentation+(typeof child=="string"?printText(child,config):printer2(child,config,indentation,depth,refs))).join("")}function printText(text,config){let contentColor=config.colors.content;return contentColor.open+escapeHTML(text)+contentColor.close}function printComment(comment,config){let commentColor=config.colors.comment;return `${commentColor.open}\x3c!--${escapeHTML(comment)}--\x3e${commentColor.close}`}function printElement(type,printedProps,printedChildren,config,indentation){let tagColor=config.colors.tag;return `${tagColor.open}<${type}${printedProps&&tagColor.close+printedProps+config.spacingOuter+indentation+tagColor.open}${printedChildren?`>${tagColor.close}${printedChildren}${config.spacingOuter}${indentation}${tagColor.open}</${type}`:`${printedProps&&!config.min?"":" "}/`}>${tagColor.close}`}function printElementAsLeaf(type,config){let tagColor=config.colors.tag;return `${tagColor.open}<${type}${tagColor.close} \\u2026${tagColor.open} />${tagColor.close}`}var ELEMENT_NODE=1,TEXT_NODE=3,COMMENT_NODE=8,FRAGMENT_NODE=11,ELEMENT_REGEXP=/^(?:(?:HTML|SVG)\\w*)?Element$/;function testHasAttribute(val){try{return typeof val.hasAttribute=="function"&&val.hasAttribute("is")}catch{return !1}}function testNode(val){let constructorName=val.constructor.name,{nodeType,tagName}=val,isCustomElement=typeof tagName=="string"&&tagName.includes("-")||testHasAttribute(val);return nodeType===ELEMENT_NODE&&(ELEMENT_REGEXP.test(constructorName)||isCustomElement)||nodeType===TEXT_NODE&&constructorName==="Text"||nodeType===COMMENT_NODE&&constructorName==="Comment"||nodeType===FRAGMENT_NODE&&constructorName==="DocumentFragment"}var test$3=val=>{var _a;return ((_a=val?.constructor)==null?void 0:_a.name)&&testNode(val)};function nodeIsText(node){return node.nodeType===TEXT_NODE}function nodeIsComment(node){return node.nodeType===COMMENT_NODE}function nodeIsFragment(node){return node.nodeType===FRAGMENT_NODE}var serialize$3=(node,config,indentation,depth,refs,printer2)=>{if(nodeIsText(node))return printText(node.data,config);if(nodeIsComment(node))return printComment(node.data,config);let type=nodeIsFragment(node)?"DocumentFragment":node.tagName.toLowerCase();return ++depth>config.maxDepth?printElementAsLeaf(type,config):printElement(type,printProps(nodeIsFragment(node)?[]:Array.from(node.attributes,attr=>attr.name).sort(),nodeIsFragment(node)?{}:[...node.attributes].reduce((props,attribute)=>(props[attribute.name]=attribute.value,props),{}),config,indentation+config.indent,depth,refs,printer2),printChildren(Array.prototype.slice.call(node.childNodes||node.children),config,indentation+config.indent,depth,refs,printer2),config,indentation)},plugin$3={serialize:serialize$3,test:test$3},IS_ITERABLE_SENTINEL="@@__IMMUTABLE_ITERABLE__@@",IS_LIST_SENTINEL="@@__IMMUTABLE_LIST__@@",IS_KEYED_SENTINEL="@@__IMMUTABLE_KEYED__@@",IS_MAP_SENTINEL="@@__IMMUTABLE_MAP__@@",IS_ORDERED_SENTINEL="@@__IMMUTABLE_ORDERED__@@",IS_RECORD_SENTINEL="@@__IMMUTABLE_RECORD__@@",IS_SEQ_SENTINEL="@@__IMMUTABLE_SEQ__@@",IS_SET_SENTINEL="@@__IMMUTABLE_SET__@@",IS_STACK_SENTINEL="@@__IMMUTABLE_STACK__@@",getImmutableName=name=>`Immutable.${name}`,printAsLeaf=name=>`[${name}]`,SPACE=" ",LAZY="\\u2026";function printImmutableEntries(val,config,indentation,depth,refs,printer2,type){return ++depth>config.maxDepth?printAsLeaf(getImmutableName(type)):`${getImmutableName(type)+SPACE}{${printIteratorEntries(val.entries(),config,indentation,depth,refs,printer2)}}`}function getRecordEntries(val){let i=0;return {next(){if(i<val._keys.length){let key=val._keys[i++];return {done:!1,value:[key,val.get(key)]}}return {done:!0,value:void 0}}}}function printImmutableRecord(val,config,indentation,depth,refs,printer2){let name=getImmutableName(val._name||"Record");return ++depth>config.maxDepth?printAsLeaf(name):`${name+SPACE}{${printIteratorEntries(getRecordEntries(val),config,indentation,depth,refs,printer2)}}`}function printImmutableSeq(val,config,indentation,depth,refs,printer2){let name=getImmutableName("Seq");return ++depth>config.maxDepth?printAsLeaf(name):val[IS_KEYED_SENTINEL]?`${name+SPACE}{${val._iter||val._object?printIteratorEntries(val.entries(),config,indentation,depth,refs,printer2):LAZY}}`:`${name+SPACE}[${val._iter||val._array||val._collection||val._iterable?printIteratorValues(val.values(),config,indentation,depth,refs,printer2):LAZY}]`}function printImmutableValues(val,config,indentation,depth,refs,printer2,type){return ++depth>config.maxDepth?printAsLeaf(getImmutableName(type)):`${getImmutableName(type)+SPACE}[${printIteratorValues(val.values(),config,indentation,depth,refs,printer2)}]`}var serialize$2=(val,config,indentation,depth,refs,printer2)=>val[IS_MAP_SENTINEL]?printImmutableEntries(val,config,indentation,depth,refs,printer2,val[IS_ORDERED_SENTINEL]?"OrderedMap":"Map"):val[IS_LIST_SENTINEL]?printImmutableValues(val,config,indentation,depth,refs,printer2,"List"):val[IS_SET_SENTINEL]?printImmutableValues(val,config,indentation,depth,refs,printer2,val[IS_ORDERED_SENTINEL]?"OrderedSet":"Set"):val[IS_STACK_SENTINEL]?printImmutableValues(val,config,indentation,depth,refs,printer2,"Stack"):val[IS_SEQ_SENTINEL]?printImmutableSeq(val,config,indentation,depth,refs,printer2):printImmutableRecord(val,config,indentation,depth,refs,printer2),test$2=val=>val&&(val[IS_ITERABLE_SENTINEL]===!0||val[IS_RECORD_SENTINEL]===!0),plugin$2={serialize:serialize$2,test:test$2},reactIs={exports:{}},reactIs_production_min={};var hasRequiredReactIs_production_min;function requireReactIs_production_min(){if(hasRequiredReactIs_production_min)return reactIs_production_min;hasRequiredReactIs_production_min=1;var b=Symbol.for("react.element"),c=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),e=Symbol.for("react.strict_mode"),f3=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),h2=Symbol.for("react.context"),k=Symbol.for("react.server_context"),l=Symbol.for("react.forward_ref"),m2=Symbol.for("react.suspense"),n=Symbol.for("react.suspense_list"),p2=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),t=Symbol.for("react.offscreen"),u;u=Symbol.for("react.module.reference");function v(a2){if(typeof a2=="object"&&a2!==null){var r=a2.$$typeof;switch(r){case b:switch(a2=a2.type,a2){case d:case f3:case e:case m2:case n:return a2;default:switch(a2=a2&&a2.$$typeof,a2){case k:case h2:case l:case q:case p2:case g:return a2;default:return r}}case c:return r}}}return reactIs_production_min.ContextConsumer=h2,reactIs_production_min.ContextProvider=g,reactIs_production_min.Element=b,reactIs_production_min.ForwardRef=l,reactIs_production_min.Fragment=d,reactIs_production_min.Lazy=q,reactIs_production_min.Memo=p2,reactIs_production_min.Portal=c,reactIs_production_min.Profiler=f3,reactIs_production_min.StrictMode=e,reactIs_production_min.Suspense=m2,reactIs_production_min.SuspenseList=n,reactIs_production_min.isAsyncMode=function(){return !1},reactIs_production_min.isConcurrentMode=function(){return !1},reactIs_production_min.isContextConsumer=function(a2){return v(a2)===h2},reactIs_production_min.isContextProvider=function(a2){return v(a2)===g},reactIs_production_min.isElement=function(a2){return typeof a2=="object"&&a2!==null&&a2.$$typeof===b},reactIs_production_min.isForwardRef=function(a2){return v(a2)===l},reactIs_production_min.isFragment=function(a2){return v(a2)===d},reactIs_production_min.isLazy=function(a2){return v(a2)===q},reactIs_production_min.isMemo=function(a2){return v(a2)===p2},reactIs_production_min.isPortal=function(a2){return v(a2)===c},reactIs_production_min.isProfiler=function(a2){return v(a2)===f3},reactIs_production_min.isStrictMode=function(a2){return v(a2)===e},reactIs_production_min.isSuspense=function(a2){return v(a2)===m2},reactIs_production_min.isSuspenseList=function(a2){return v(a2)===n},reactIs_production_min.isValidElementType=function(a2){return typeof a2=="string"||typeof a2=="function"||a2===d||a2===f3||a2===e||a2===m2||a2===n||a2===t||typeof a2=="object"&&a2!==null&&(a2.$$typeof===q||a2.$$typeof===p2||a2.$$typeof===g||a2.$$typeof===h2||a2.$$typeof===l||a2.$$typeof===u||a2.getModuleId!==void 0)},reactIs_production_min.typeOf=v,reactIs_production_min}var reactIs_development={};var hasRequiredReactIs_development;function requireReactIs_development(){return hasRequiredReactIs_development||(hasRequiredReactIs_development=1, false&&0),reactIs_development}var hasRequiredReactIs;function requireReactIs(){return hasRequiredReactIs||(hasRequiredReactIs=1, true?reactIs.exports=requireReactIs_production_min():0),reactIs.exports}var reactIsExports=requireReactIs();function getChildren(arg,children=[]){if(Array.isArray(arg))for(let item of arg)getChildren(item,children);else arg!=null&&arg!==!1&&arg!==""&&children.push(arg);return children}function getType(element){let type=element.type;if(typeof type=="string")return type;if(typeof type=="function")return type.displayName||type.name||"Unknown";if(reactIsExports.isFragment(element))return "React.Fragment";if(reactIsExports.isSuspense(element))return "React.Suspense";if(typeof type=="object"&&type!==null){if(reactIsExports.isContextProvider(element))return "Context.Provider";if(reactIsExports.isContextConsumer(element))return "Context.Consumer";if(reactIsExports.isForwardRef(element)){if(type.displayName)return type.displayName;let functionName=type.render.displayName||type.render.name||"";return functionName===""?"ForwardRef":`ForwardRef(${functionName})`}if(reactIsExports.isMemo(element)){let functionName=type.displayName||type.type.displayName||type.type.name||"";return functionName===""?"Memo":`Memo(${functionName})`}}return "UNDEFINED"}function getPropKeys$1(element){let{props}=element;return Object.keys(props).filter(key=>key!=="children"&&props[key]!==void 0).sort()}var serialize$1=(element,config,indentation,depth,refs,printer2)=>++depth>config.maxDepth?printElementAsLeaf(getType(element),config):printElement(getType(element),printProps(getPropKeys$1(element),element.props,config,indentation+config.indent,depth,refs,printer2),printChildren(getChildren(element.props.children),config,indentation+config.indent,depth,refs,printer2),config,indentation),test$1=val=>val!=null&&reactIsExports.isElement(val),plugin$1={serialize:serialize$1,test:test$1},testSymbol=typeof Symbol=="function"&&Symbol.for?Symbol.for("react.test.json"):245830487;function getPropKeys(object){let{props}=object;return props?Object.keys(props).filter(key=>props[key]!==void 0).sort():[]}var serialize=(object,config,indentation,depth,refs,printer2)=>++depth>config.maxDepth?printElementAsLeaf(object.type,config):printElement(object.type,object.props?printProps(getPropKeys(object),object.props,config,indentation+config.indent,depth,refs,printer2):"",object.children?printChildren(object.children,config,indentation+config.indent,depth,refs,printer2):"",config,indentation),test=val=>val&&val.$$typeof===testSymbol,plugin={serialize,test},toString=Object.prototype.toString,toISOString=Date.prototype.toISOString,errorToString=Error.prototype.toString,regExpToString=RegExp.prototype.toString;function getConstructorName(val){return typeof val.constructor=="function"&&val.constructor.name||"Object"}function isWindow(val){return typeof window<"u"&&val===window}var SYMBOL_REGEXP=/^Symbol\\((.*)\\)(.*)$/,NEWLINE_REGEXP=/\\n/g,PrettyFormatPluginError=class extends Error{constructor(message,stack){super(message),this.stack=stack,this.name=this.constructor.name;}};function isToStringedArrayType(toStringed){return toStringed==="[object Array]"||toStringed==="[object ArrayBuffer]"||toStringed==="[object DataView]"||toStringed==="[object Float32Array]"||toStringed==="[object Float64Array]"||toStringed==="[object Int8Array]"||toStringed==="[object Int16Array]"||toStringed==="[object Int32Array]"||toStringed==="[object Uint8Array]"||toStringed==="[object Uint8ClampedArray]"||toStringed==="[object Uint16Array]"||toStringed==="[object Uint32Array]"}function printNumber(val){return Object.is(val,-0)?"-0":String(val)}function printBigInt(val){return `${val}n`}function printFunction(val,printFunctionName){return printFunctionName?`[Function ${val.name||"anonymous"}]`:"[Function]"}function printSymbol(val){return String(val).replace(SYMBOL_REGEXP,"Symbol($1)")}function printError(val){return `[${errorToString.call(val)}]`}function printBasicValue(val,printFunctionName,escapeRegex,escapeString){if(val===!0||val===!1)return `${val}`;if(val===void 0)return "undefined";if(val===null)return "null";let typeOf=typeof val;if(typeOf==="number")return printNumber(val);if(typeOf==="bigint")return printBigInt(val);if(typeOf==="string")return escapeString?`"${val.replaceAll(/"|\\\\/g,"\\\\$&")}"`:`"${val}"`;if(typeOf==="function")return printFunction(val,printFunctionName);if(typeOf==="symbol")return printSymbol(val);let toStringed=toString.call(val);return toStringed==="[object WeakMap]"?"WeakMap {}":toStringed==="[object WeakSet]"?"WeakSet {}":toStringed==="[object Function]"||toStringed==="[object GeneratorFunction]"?printFunction(val,printFunctionName):toStringed==="[object Symbol]"?printSymbol(val):toStringed==="[object Date]"?Number.isNaN(+val)?"Date { NaN }":toISOString.call(val):toStringed==="[object Error]"?printError(val):toStringed==="[object RegExp]"?escapeRegex?regExpToString.call(val).replaceAll(/[$()*+.?[\\\\\\]^{|}]/g,"\\\\$&"):regExpToString.call(val):val instanceof Error?printError(val):null}function printComplexValue(val,config,indentation,depth,refs,hasCalledToJSON){if(refs.includes(val))return "[Circular]";refs=[...refs],refs.push(val);let hitMaxDepth=++depth>config.maxDepth,min=config.min;if(config.callToJSON&&!hitMaxDepth&&val.toJSON&&typeof val.toJSON=="function"&&!hasCalledToJSON)return printer(val.toJSON(),config,indentation,depth,refs,!0);let toStringed=toString.call(val);return toStringed==="[object Arguments]"?hitMaxDepth?"[Arguments]":`${min?"":"Arguments "}[${printListItems(val,config,indentation,depth,refs,printer)}]`:isToStringedArrayType(toStringed)?hitMaxDepth?`[${val.constructor.name}]`:`${min||!config.printBasicPrototype&&val.constructor.name==="Array"?"":`${val.constructor.name} `}[${printListItems(val,config,indentation,depth,refs,printer)}]`:toStringed==="[object Map]"?hitMaxDepth?"[Map]":`Map {${printIteratorEntries(val.entries(),config,indentation,depth,refs,printer," => ")}}`:toStringed==="[object Set]"?hitMaxDepth?"[Set]":`Set {${printIteratorValues(val.values(),config,indentation,depth,refs,printer)}}`:hitMaxDepth||isWindow(val)?`[${getConstructorName(val)}]`:`${min||!config.printBasicPrototype&&getConstructorName(val)==="Object"?"":`${getConstructorName(val)} `}{${printObjectProperties(val,config,indentation,depth,refs,printer)}}`}function isNewPlugin(plugin2){return plugin2.serialize!=null}function printPlugin(plugin2,val,config,indentation,depth,refs){let printed;try{printed=isNewPlugin(plugin2)?plugin2.serialize(val,config,indentation,depth,refs,printer):plugin2.print(val,valChild=>printer(valChild,config,indentation,depth,refs),str=>{let indentationNext=indentation+config.indent;return indentationNext+str.replaceAll(NEWLINE_REGEXP,`\n${indentationNext}`)},{edgeSpacing:config.spacingOuter,min:config.min,spacing:config.spacingInner},config.colors);}catch(error){throw new PrettyFormatPluginError(error.message,error.stack)}if(typeof printed!="string")throw new TypeError(`pretty-format: Plugin must return type "string" but instead returned "${typeof printed}".`);return printed}function findPlugin(plugins2,val){for(let plugin2 of plugins2)try{if(plugin2.test(val))return plugin2}catch(error){throw new PrettyFormatPluginError(error.message,error.stack)}return null}function printer(val,config,indentation,depth,refs,hasCalledToJSON){let plugin2=findPlugin(config.plugins,val);if(plugin2!==null)return printPlugin(plugin2,val,config,indentation,depth,refs);let basicResult=printBasicValue(val,config.printFunctionName,config.escapeRegex,config.escapeString);return basicResult!==null?basicResult:printComplexValue(val,config,indentation,depth,refs,hasCalledToJSON)}var DEFAULT_THEME={comment:"gray",content:"reset",prop:"yellow",tag:"cyan",value:"green"},DEFAULT_THEME_KEYS=Object.keys(DEFAULT_THEME),DEFAULT_OPTIONS={callToJSON:!0,compareKeys:void 0,escapeRegex:!1,escapeString:!0,highlight:!1,indent:2,maxDepth:Number.POSITIVE_INFINITY,maxWidth:Number.POSITIVE_INFINITY,min:!1,plugins:[],printBasicPrototype:!0,printFunctionName:!0,theme:DEFAULT_THEME};function validateOptions(options){for(let key of Object.keys(options))if(!Object.prototype.hasOwnProperty.call(DEFAULT_OPTIONS,key))throw new Error(`pretty-format: Unknown option "${key}".`);if(options.min&&options.indent!==void 0&&options.indent!==0)throw new Error(\'pretty-format: Options "min" and "indent" cannot be used together.\')}function getColorsHighlight(){return DEFAULT_THEME_KEYS.reduce((colors,key)=>{let value=DEFAULT_THEME[key],color=value&&f2[value];if(color&&typeof color.close=="string"&&typeof color.open=="string")colors[key]=color;else throw new Error(`pretty-format: Option "theme" has a key "${key}" whose value "${value}" is undefined in ansi-styles.`);return colors},Object.create(null))}function getColorsEmpty(){return DEFAULT_THEME_KEYS.reduce((colors,key)=>(colors[key]={close:"",open:""},colors),Object.create(null))}function getPrintFunctionName(options){return options?.printFunctionName??DEFAULT_OPTIONS.printFunctionName}function getEscapeRegex(options){return options?.escapeRegex??DEFAULT_OPTIONS.escapeRegex}function getEscapeString(options){return options?.escapeString??DEFAULT_OPTIONS.escapeString}function getConfig(options){return {callToJSON:options?.callToJSON??DEFAULT_OPTIONS.callToJSON,colors:options?.highlight?getColorsHighlight():getColorsEmpty(),compareKeys:typeof options?.compareKeys=="function"||options?.compareKeys===null?options.compareKeys:DEFAULT_OPTIONS.compareKeys,escapeRegex:getEscapeRegex(options),escapeString:getEscapeString(options),indent:options?.min?"":createIndent(options?.indent??DEFAULT_OPTIONS.indent),maxDepth:options?.maxDepth??DEFAULT_OPTIONS.maxDepth,maxWidth:options?.maxWidth??DEFAULT_OPTIONS.maxWidth,min:options?.min??DEFAULT_OPTIONS.min,plugins:options?.plugins??DEFAULT_OPTIONS.plugins,printBasicPrototype:options?.printBasicPrototype??!0,printFunctionName:getPrintFunctionName(options),spacingInner:options?.min?" ":`\n`,spacingOuter:options?.min?"":`\n`}}function createIndent(indent){return Array.from({length:indent+1}).join(" ")}function format(val,options){if(options&&(validateOptions(options),options.plugins)){let plugin2=findPlugin(options.plugins,val);if(plugin2!==null)return printPlugin(plugin2,val,getConfig(options),"",0,[])}let basicResult=printBasicValue(val,getPrintFunctionName(options),getEscapeRegex(options),getEscapeString(options));return basicResult!==null?basicResult:printComplexValue(val,getConfig(options),"",0,[])}var plugins={AsymmetricMatcher:plugin$5,DOMCollection:plugin$4,DOMElement:plugin$3,Immutable:plugin$2,ReactElement:plugin$1,ReactTestComponent:plugin};var ansiColors={bold:["1","22"],dim:["2","22"],italic:["3","23"],underline:["4","24"],inverse:["7","27"],hidden:["8","28"],strike:["9","29"],black:["30","39"],red:["31","39"],green:["32","39"],yellow:["33","39"],blue:["34","39"],magenta:["35","39"],cyan:["36","39"],white:["37","39"],brightblack:["30;1","39"],brightred:["31;1","39"],brightgreen:["32;1","39"],brightyellow:["33;1","39"],brightblue:["34;1","39"],brightmagenta:["35;1","39"],brightcyan:["36;1","39"],brightwhite:["37;1","39"],grey:["90","39"]},styles={special:"cyan",number:"yellow",bigint:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",symbol:"green",date:"magenta",regexp:"red"},truncator="\\u2026";function colorise(value,styleType){let color=ansiColors[styles[styleType]]||ansiColors[styleType]||"";return color?`\\x1B[${color[0]}m${String(value)}\\x1B[${color[1]}m`:String(value)}function normaliseOptions({showHidden=!1,depth=2,colors=!1,customInspect=!0,showProxy=!1,maxArrayLength=1/0,breakLength=1/0,seen=[],truncate:truncate2=1/0,stylize=String}={},inspect3){let options={showHidden:!!showHidden,depth:Number(depth),colors:!!colors,customInspect:!!customInspect,showProxy:!!showProxy,maxArrayLength:Number(maxArrayLength),breakLength:Number(breakLength),truncate:Number(truncate2),seen,inspect:inspect3,stylize};return options.colors&&(options.stylize=colorise),options}function isHighSurrogate(char){return char>="\\uD800"&&char<="\\uDBFF"}function truncate(string,length,tail=truncator){string=String(string);let tailLength=tail.length,stringLength=string.length;if(tailLength>length&&stringLength>tailLength)return tail;if(stringLength>length&&stringLength>tailLength){let end=length-tailLength;return end>0&&isHighSurrogate(string[end-1])&&(end=end-1),`${string.slice(0,end)}${tail}`}return string}function inspectList(list,options,inspectItem,separator=", "){inspectItem=inspectItem||options.inspect;let size=list.length;if(size===0)return "";let originalLength=options.truncate,output="",peek="",truncated="";for(let i=0;i<size;i+=1){let last=i+1===list.length,secondToLast=i+2===list.length;truncated=`${truncator}(${list.length-i})`;let value=list[i];options.truncate=originalLength-output.length-(last?0:separator.length);let string=peek||inspectItem(value,options)+(last?"":separator),nextLength=output.length+string.length,truncatedLength=nextLength+truncated.length;if(last&&nextLength>originalLength&&output.length+truncated.length<=originalLength||!last&&!secondToLast&&truncatedLength>originalLength||(peek=last?"":inspectItem(list[i+1],options)+(secondToLast?"":separator),!last&&secondToLast&&truncatedLength>originalLength&&nextLength+peek.length>originalLength))break;if(output+=string,!last&&!secondToLast&&nextLength+peek.length>=originalLength){truncated=`${truncator}(${list.length-i-1})`;break}truncated="";}return `${output}${truncated}`}function quoteComplexKey(key){return key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)?key:JSON.stringify(key).replace(/\'/g,"\\\\\'").replace(/\\\\"/g,\'"\').replace(/(^"|"$)/g,"\'")}function inspectProperty([key,value],options){return options.truncate-=2,typeof key=="string"?key=quoteComplexKey(key):typeof key!="number"&&(key=`[${options.inspect(key,options)}]`),options.truncate-=key.length,value=options.inspect(value,options),`${key}: ${value}`}function inspectArray(array,options){let nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return "[]";options.truncate-=4;let listContents=inspectList(array,options);options.truncate-=listContents.length;let propertyContents="";return nonIndexProperties.length&&(propertyContents=inspectList(nonIndexProperties.map(key=>[key,array[key]]),options,inspectProperty)),`[ ${listContents}${propertyContents?`, ${propertyContents}`:""} ]`}var getArrayName=array=>typeof Buffer=="function"&&array instanceof Buffer?"Buffer":array[Symbol.toStringTag]?array[Symbol.toStringTag]:array.constructor.name;function inspectTypedArray(array,options){let name=getArrayName(array);options.truncate-=name.length+4;let nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return `${name}[]`;let output="";for(let i=0;i<array.length;i++){let string=`${options.stylize(truncate(array[i],options.truncate),"number")}${i===array.length-1?"":", "}`;if(options.truncate-=string.length,array[i]!==array.length&&options.truncate<=3){output+=`${truncator}(${array.length-array[i]+1})`;break}output+=string;}let propertyContents="";return nonIndexProperties.length&&(propertyContents=inspectList(nonIndexProperties.map(key=>[key,array[key]]),options,inspectProperty)),`${name}[ ${output}${propertyContents?`, ${propertyContents}`:""} ]`}function inspectDate(dateObject,options){let stringRepresentation=dateObject.toJSON();if(stringRepresentation===null)return "Invalid Date";let split=stringRepresentation.split("T"),date=split[0];return options.stylize(`${date}T${truncate(split[1],options.truncate-date.length-1)}`,"date")}function inspectFunction(func,options){let functionType=func[Symbol.toStringTag]||"Function",name=func.name;return name?options.stylize(`[${functionType} ${truncate(name,options.truncate-11)}]`,"special"):options.stylize(`[${functionType}]`,"special")}function inspectMapEntry([key,value],options){return options.truncate-=4,key=options.inspect(key,options),options.truncate-=key.length,value=options.inspect(value,options),`${key} => ${value}`}function mapToEntries(map){let entries=[];return map.forEach((value,key)=>{entries.push([key,value]);}),entries}function inspectMap(map,options){return map.size-1<=0?"Map{}":(options.truncate-=7,`Map{ ${inspectList(mapToEntries(map),options,inspectMapEntry)} }`)}var isNaN=Number.isNaN||(i=>i!==i);function inspectNumber(number,options){return isNaN(number)?options.stylize("NaN","number"):number===1/0?options.stylize("Infinity","number"):number===-1/0?options.stylize("-Infinity","number"):number===0?options.stylize(1/number===1/0?"+0":"-0","number"):options.stylize(truncate(String(number),options.truncate),"number")}function inspectBigInt(number,options){let nums=truncate(number.toString(),options.truncate-1);return nums!==truncator&&(nums+="n"),options.stylize(nums,"bigint")}function inspectRegExp(value,options){let flags=value.toString().split("/")[2],sourceLength=options.truncate-(2+flags.length),source=value.source;return options.stylize(`/${truncate(source,sourceLength)}/${flags}`,"regexp")}function arrayFromSet(set){let values=[];return set.forEach(value=>{values.push(value);}),values}function inspectSet(set,options){return set.size===0?"Set{}":(options.truncate-=7,`Set{ ${inspectList(arrayFromSet(set),options)} }`)}var stringEscapeChars=new RegExp("[\'\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]","g"),escapeCharacters={"\\b":"\\\\b","\t":"\\\\t","\\n":"\\\\n","\\f":"\\\\f","\\r":"\\\\r","\'":"\\\\\'","\\\\":"\\\\\\\\"},hex=16,unicodeLength=4;function escape(char){return escapeCharacters[char]||`\\\\u${`0000${char.charCodeAt(0).toString(hex)}`.slice(-unicodeLength)}`}function inspectString(string,options){return stringEscapeChars.test(string)&&(string=string.replace(stringEscapeChars,escape)),options.stylize(`\'${truncate(string,options.truncate-2)}\'`,"string")}function inspectSymbol(value){return "description"in Symbol.prototype?value.description?`Symbol(${value.description})`:"Symbol()":value.toString()}var getPromiseValue=()=>"Promise{\\u2026}";try{let{getPromiseDetails,kPending,kRejected}=process.binding("util");Array.isArray(getPromiseDetails(Promise.resolve()))&&(getPromiseValue=(value,options)=>{let[state,innerValue]=getPromiseDetails(value);return state===kPending?"Promise{<pending>}":`Promise${state===kRejected?"!":""}{${options.inspect(innerValue,options)}}`});}catch{}var promise_default=getPromiseValue;function inspectObject(object,options){let properties=Object.getOwnPropertyNames(object),symbols=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(object):[];if(properties.length===0&&symbols.length===0)return "{}";if(options.truncate-=4,options.seen=options.seen||[],options.seen.includes(object))return "[Circular]";options.seen.push(object);let propertyContents=inspectList(properties.map(key=>[key,object[key]]),options,inspectProperty),symbolContents=inspectList(symbols.map(key=>[key,object[key]]),options,inspectProperty);options.seen.pop();let sep="";return propertyContents&&symbolContents&&(sep=", "),`{ ${propertyContents}${sep}${symbolContents} }`}var toStringTag=typeof Symbol<"u"&&Symbol.toStringTag?Symbol.toStringTag:!1;function inspectClass(value,options){let name="";return toStringTag&&toStringTag in value&&(name=value[toStringTag]),name=name||value.constructor.name,(!name||name==="_class")&&(name="<Anonymous Class>"),options.truncate-=name.length,`${name}${inspectObject(value,options)}`}function inspectArguments(args,options){return args.length===0?"Arguments[]":(options.truncate-=13,`Arguments[ ${inspectList(args,options)} ]`)}var errorKeys=["stack","line","column","name","message","fileName","lineNumber","columnNumber","number","description","cause"];function inspectObject2(error,options){let properties=Object.getOwnPropertyNames(error).filter(key=>errorKeys.indexOf(key)===-1),name=error.name;options.truncate-=name.length;let message="";if(typeof error.message=="string"?message=truncate(error.message,options.truncate):properties.unshift("message"),message=message?`: ${message}`:"",options.truncate-=message.length+5,options.seen=options.seen||[],options.seen.includes(error))return "[Circular]";options.seen.push(error);let propertyContents=inspectList(properties.map(key=>[key,error[key]]),options,inspectProperty);return `${name}${message}${propertyContents?` { ${propertyContents} }`:""}`}function inspectAttribute([key,value],options){return options.truncate-=3,value?`${options.stylize(String(key),"yellow")}=${options.stylize(`"${value}"`,"string")}`:`${options.stylize(String(key),"yellow")}`}function inspectHTMLCollection(collection,options){return inspectList(collection,options,inspectHTML,`\n`)}function inspectHTML(element,options){let properties=element.getAttributeNames(),name=element.tagName.toLowerCase(),head=options.stylize(`<${name}`,"special"),headClose=options.stylize(">","special"),tail=options.stylize(`</${name}>`,"special");options.truncate-=name.length*2+5;let propertyContents="";properties.length>0&&(propertyContents+=" ",propertyContents+=inspectList(properties.map(key=>[key,element.getAttribute(key)]),options,inspectAttribute," ")),options.truncate-=propertyContents.length;let truncate2=options.truncate,children=inspectHTMLCollection(element.children,options);return children&&children.length>truncate2&&(children=`${truncator}(${element.children.length})`),`${head}${propertyContents}${headClose}${children}${tail}`}var symbolsSupported=typeof Symbol=="function"&&typeof Symbol.for=="function",chaiInspect=symbolsSupported?Symbol.for("chai/inspect"):"@@chai/inspect",nodeInspect=!1;try{let nodeUtil=__require("util");nodeInspect=nodeUtil.inspect?nodeUtil.inspect.custom:!1;}catch{nodeInspect=!1;}var constructorMap=new WeakMap,stringTagMap={},baseTypesMap={undefined:(value,options)=>options.stylize("undefined","undefined"),null:(value,options)=>options.stylize("null","null"),boolean:(value,options)=>options.stylize(String(value),"boolean"),Boolean:(value,options)=>options.stylize(String(value),"boolean"),number:inspectNumber,Number:inspectNumber,bigint:inspectBigInt,BigInt:inspectBigInt,string:inspectString,String:inspectString,function:inspectFunction,Function:inspectFunction,symbol:inspectSymbol,Symbol:inspectSymbol,Array:inspectArray,Date:inspectDate,Map:inspectMap,Set:inspectSet,RegExp:inspectRegExp,Promise:promise_default,WeakSet:(value,options)=>options.stylize("WeakSet{\\u2026}","special"),WeakMap:(value,options)=>options.stylize("WeakMap{\\u2026}","special"),Arguments:inspectArguments,Int8Array:inspectTypedArray,Uint8Array:inspectTypedArray,Uint8ClampedArray:inspectTypedArray,Int16Array:inspectTypedArray,Uint16Array:inspectTypedArray,Int32Array:inspectTypedArray,Uint32Array:inspectTypedArray,Float32Array:inspectTypedArray,Float64Array:inspectTypedArray,Generator:()=>"",DataView:()=>"",ArrayBuffer:()=>"",Error:inspectObject2,HTMLCollection:inspectHTMLCollection,NodeList:inspectHTMLCollection},inspectCustom=(value,options,type)=>chaiInspect in value&&typeof value[chaiInspect]=="function"?value[chaiInspect](options):nodeInspect&&nodeInspect in value&&typeof value[nodeInspect]=="function"?value[nodeInspect](options.depth,options):"inspect"in value&&typeof value.inspect=="function"?value.inspect(options.depth,options):"constructor"in value&&constructorMap.has(value.constructor)?constructorMap.get(value.constructor)(value,options):stringTagMap[type]?stringTagMap[type](value,options):"",toString2=Object.prototype.toString;function inspect(value,opts={}){let options=normaliseOptions(opts,inspect),{customInspect}=options,type=value===null?"null":typeof value;if(type==="object"&&(type=toString2.call(value).slice(8,-1)),type in baseTypesMap)return baseTypesMap[type](value,options);if(customInspect&&value){let output=inspectCustom(value,options,type);if(output)return typeof output=="string"?output:inspect(output,options)}let proto=value?Object.getPrototypeOf(value):!1;return proto===Object.prototype||proto===null?inspectObject(value,options):value&&typeof HTMLElement=="function"&&value instanceof HTMLElement?inspectHTML(value,options):"constructor"in value?value.constructor!==Object?inspectClass(value,options):inspectObject(value,options):value===Object(value)?inspectObject(value,options):options.stylize(String(value),type)}var{AsymmetricMatcher,DOMCollection,DOMElement,Immutable,ReactElement,ReactTestComponent}=plugins,PLUGINS=[ReactTestComponent,ReactElement,DOMElement,DOMCollection,Immutable,AsymmetricMatcher];function stringify(object,maxDepth=10,{maxLength,...options}={}){let MAX_LENGTH=maxLength??1e4,result;try{result=format(object,{maxDepth,escapeString:!1,plugins:PLUGINS,...options});}catch{result=format(object,{callToJSON:!1,maxDepth,escapeString:!1,plugins:PLUGINS,...options});}return result.length>=MAX_LENGTH&&maxDepth>1?stringify(object,Math.floor(maxDepth/2)):result}var formatRegExp=/%[sdjifoOc%]/g;function format2(...args){if(typeof args[0]!="string"){let objects=[];for(let i2=0;i2<args.length;i2++)objects.push(inspect2(args[i2],{depth:0,colors:!1}));return objects.join(" ")}let len=args.length,i=1,template=args[0],str=String(template).replace(formatRegExp,x=>{if(x==="%%")return "%";if(i>=len)return x;switch(x){case"%s":{let value=args[i++];return typeof value=="bigint"?`${value.toString()}n`:typeof value=="number"&&value===0&&1/value<0?"-0":typeof value=="object"&&value!==null?inspect2(value,{depth:0,colors:!1}):String(value)}case"%d":{let value=args[i++];return typeof value=="bigint"?`${value.toString()}n`:Number(value).toString()}case"%i":{let value=args[i++];return typeof value=="bigint"?`${value.toString()}n`:Number.parseInt(String(value)).toString()}case"%f":return Number.parseFloat(String(args[i++])).toString();case"%o":return inspect2(args[i++],{showHidden:!0,showProxy:!0});case"%O":return inspect2(args[i++]);case"%c":return i++,"";case"%j":try{return JSON.stringify(args[i++])}catch(err){let m2=err.message;if(m2.includes("circular structure")||m2.includes("cyclic structures")||m2.includes("cyclic object"))return "[Circular]";throw err}default:return x}});for(let x=args[i];i<len;x=args[++i])x===null||typeof x!="object"?str+=` ${x}`:str+=` ${inspect2(x)}`;return str}function inspect2(obj,options={}){return options.truncate===0&&(options.truncate=Number.POSITIVE_INFINITY),inspect(obj,options)}function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}function isFinalObj(obj){return obj===Object.prototype||obj===Function.prototype||obj===RegExp.prototype}function getType2(value){return Object.prototype.toString.apply(value).slice(8,-1)}function collectOwnProperties(obj,collector){let collect=typeof collector=="function"?collector:key=>collector.add(key);Object.getOwnPropertyNames(obj).forEach(collect),Object.getOwnPropertySymbols(obj).forEach(collect);}function getOwnProperties(obj){let ownProps=new Set;return isFinalObj(obj)?[]:(collectOwnProperties(obj,ownProps),Array.from(ownProps))}var defaultCloneOptions={forceWritable:!1};function deepClone(val,options=defaultCloneOptions){return clone(val,new WeakMap,options)}function clone(val,seen,options=defaultCloneOptions){let k,out;if(seen.has(val))return seen.get(val);if(Array.isArray(val)){for(out=Array.from({length:k=val.length}),seen.set(val,out);k--;)out[k]=clone(val[k],seen,options);return out}if(Object.prototype.toString.call(val)==="[object Object]"){out=Object.create(Object.getPrototypeOf(val)),seen.set(val,out);let props=getOwnProperties(val);for(let k2 of props){let descriptor=Object.getOwnPropertyDescriptor(val,k2);if(!descriptor)continue;let cloned=clone(val[k2],seen,options);options.forceWritable?Object.defineProperty(out,k2,{enumerable:descriptor.enumerable,configurable:!0,writable:!0,value:cloned}):"get"in descriptor?Object.defineProperty(out,k2,{...descriptor,get(){return cloned}}):Object.defineProperty(out,k2,{...descriptor,value:cloned});}return out}return val}function getType3(value){if(value===void 0)return "undefined";if(value===null)return "null";if(Array.isArray(value))return "array";if(typeof value=="boolean")return "boolean";if(typeof value=="function")return "function";if(typeof value=="number")return "number";if(typeof value=="string")return "string";if(typeof value=="bigint")return "bigint";if(typeof value=="object"){if(value!=null){if(value.constructor===RegExp)return "regexp";if(value.constructor===Map)return "map";if(value.constructor===Set)return "set";if(value.constructor===Date)return "date"}return "object"}else if(typeof value=="symbol")return "symbol";throw new Error(`value of unknown type: ${value}`)}var DIFF_DELETE=-1,DIFF_INSERT=1,DIFF_EQUAL=0,Diff=class{0;1;constructor(op,text){this[0]=op,this[1]=text;}},diff_commonPrefix=function(text1,text2){if(!text1||!text2||text1.charAt(0)!==text2.charAt(0))return 0;let pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerstart=0;for(;pointermin<pointermid;)text1.substring(pointerstart,pointermid)===text2.substring(pointerstart,pointermid)?(pointermin=pointermid,pointerstart=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},diff_commonSuffix=function(text1,text2){if(!text1||!text2||text1.charAt(text1.length-1)!==text2.charAt(text2.length-1))return 0;let pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerend=0;for(;pointermin<pointermid;)text1.substring(text1.length-pointermid,text1.length-pointerend)===text2.substring(text2.length-pointermid,text2.length-pointerend)?(pointermin=pointermid,pointerend=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},diff_commonOverlap_=function(text1,text2){let text1_length=text1.length,text2_length=text2.length;if(text1_length===0||text2_length===0)return 0;text1_length>text2_length?text1=text1.substring(text1_length-text2_length):text1_length<text2_length&&(text2=text2.substring(0,text1_length));let text_length=Math.min(text1_length,text2_length);if(text1===text2)return text_length;let best=0,length=1;for(;;){let pattern=text1.substring(text_length-length),found=text2.indexOf(pattern);if(found===-1)return best;length+=found,(found===0||text1.substring(text_length-length)===text2.substring(0,length))&&(best=length,length++);}},diff_cleanupSemantic=function(diffs){let changes=!1,equalities=[],equalitiesLength=0,lastEquality=null,pointer=0,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0;for(;pointer<diffs.length;)diffs[pointer][0]===DIFF_EQUAL?(equalities[equalitiesLength++]=pointer,length_insertions1=length_insertions2,length_deletions1=length_deletions2,length_insertions2=0,length_deletions2=0,lastEquality=diffs[pointer][1]):(diffs[pointer][0]===DIFF_INSERT?length_insertions2+=diffs[pointer][1].length:length_deletions2+=diffs[pointer][1].length,lastEquality&&lastEquality.length<=Math.max(length_insertions1,length_deletions1)&&lastEquality.length<=Math.max(length_insertions2,length_deletions2)&&(diffs.splice(equalities[equalitiesLength-1],0,new Diff(DIFF_DELETE,lastEquality)),diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT,equalitiesLength--,equalitiesLength--,pointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0,lastEquality=null,changes=!0)),pointer++;for(changes&&diff_cleanupMerge(diffs),diff_cleanupSemanticLossless(diffs),pointer=1;pointer<diffs.length;){if(diffs[pointer-1][0]===DIFF_DELETE&&diffs[pointer][0]===DIFF_INSERT){let deletion=diffs[pointer-1][1],insertion=diffs[pointer][1],overlap_length1=diff_commonOverlap_(deletion,insertion),overlap_length2=diff_commonOverlap_(insertion,deletion);overlap_length1>=overlap_length2?(overlap_length1>=deletion.length/2||overlap_length1>=insertion.length/2)&&(diffs.splice(pointer,0,new Diff(DIFF_EQUAL,insertion.substring(0,overlap_length1))),diffs[pointer-1][1]=deletion.substring(0,deletion.length-overlap_length1),diffs[pointer+1][1]=insertion.substring(overlap_length1),pointer++):(overlap_length2>=deletion.length/2||overlap_length2>=insertion.length/2)&&(diffs.splice(pointer,0,new Diff(DIFF_EQUAL,deletion.substring(0,overlap_length2))),diffs[pointer-1][0]=DIFF_INSERT,diffs[pointer-1][1]=insertion.substring(0,insertion.length-overlap_length2),diffs[pointer+1][0]=DIFF_DELETE,diffs[pointer+1][1]=deletion.substring(overlap_length2),pointer++),pointer++;}pointer++;}},nonAlphaNumericRegex_=/[^a-z0-9]/i,whitespaceRegex_=/\\s/,linebreakRegex_=/[\\r\\n]/,blanklineEndRegex_=/\\n\\r?\\n$/,blanklineStartRegex_=/^\\r?\\n\\r?\\n/;function diff_cleanupSemanticLossless(diffs){let pointer=1;for(;pointer<diffs.length-1;){if(diffs[pointer-1][0]===DIFF_EQUAL&&diffs[pointer+1][0]===DIFF_EQUAL){let equality1=diffs[pointer-1][1],edit=diffs[pointer][1],equality2=diffs[pointer+1][1],commonOffset=diff_commonSuffix(equality1,edit);if(commonOffset){let commonString=edit.substring(edit.length-commonOffset);equality1=equality1.substring(0,equality1.length-commonOffset),edit=commonString+edit.substring(0,edit.length-commonOffset),equality2=commonString+equality2;}let bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2,bestScore=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);for(;edit.charAt(0)===equality2.charAt(0);){equality1+=edit.charAt(0),edit=edit.substring(1)+equality2.charAt(0),equality2=equality2.substring(1);let score=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);score>=bestScore&&(bestScore=score,bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2);}diffs[pointer-1][1]!==bestEquality1&&(bestEquality1?diffs[pointer-1][1]=bestEquality1:(diffs.splice(pointer-1,1),pointer--),diffs[pointer][1]=bestEdit,bestEquality2?diffs[pointer+1][1]=bestEquality2:(diffs.splice(pointer+1,1),pointer--));}pointer++;}}function diff_cleanupMerge(diffs){diffs.push(new Diff(DIFF_EQUAL,""));let pointer=0,count_delete=0,count_insert=0,text_delete="",text_insert="",commonlength;for(;pointer<diffs.length;)switch(diffs[pointer][0]){case DIFF_INSERT:count_insert++,text_insert+=diffs[pointer][1],pointer++;break;case DIFF_DELETE:count_delete++,text_delete+=diffs[pointer][1],pointer++;break;case DIFF_EQUAL:count_delete+count_insert>1?(count_delete!==0&&count_insert!==0&&(commonlength=diff_commonPrefix(text_insert,text_delete),commonlength!==0&&(pointer-count_delete-count_insert>0&&diffs[pointer-count_delete-count_insert-1][0]===DIFF_EQUAL?diffs[pointer-count_delete-count_insert-1][1]+=text_insert.substring(0,commonlength):(diffs.splice(0,0,new Diff(DIFF_EQUAL,text_insert.substring(0,commonlength))),pointer++),text_insert=text_insert.substring(commonlength),text_delete=text_delete.substring(commonlength)),commonlength=diff_commonSuffix(text_insert,text_delete),commonlength!==0&&(diffs[pointer][1]=text_insert.substring(text_insert.length-commonlength)+diffs[pointer][1],text_insert=text_insert.substring(0,text_insert.length-commonlength),text_delete=text_delete.substring(0,text_delete.length-commonlength))),pointer-=count_delete+count_insert,diffs.splice(pointer,count_delete+count_insert),text_delete.length&&(diffs.splice(pointer,0,new Diff(DIFF_DELETE,text_delete)),pointer++),text_insert.length&&(diffs.splice(pointer,0,new Diff(DIFF_INSERT,text_insert)),pointer++),pointer++):pointer!==0&&diffs[pointer-1][0]===DIFF_EQUAL?(diffs[pointer-1][1]+=diffs[pointer][1],diffs.splice(pointer,1)):pointer++,count_insert=0,count_delete=0,text_delete="",text_insert="";break}diffs[diffs.length-1][1]===""&&diffs.pop();let changes=!1;for(pointer=1;pointer<diffs.length-1;)diffs[pointer-1][0]===DIFF_EQUAL&&diffs[pointer+1][0]===DIFF_EQUAL&&(diffs[pointer][1].substring(diffs[pointer][1].length-diffs[pointer-1][1].length)===diffs[pointer-1][1]?(diffs[pointer][1]=diffs[pointer-1][1]+diffs[pointer][1].substring(0,diffs[pointer][1].length-diffs[pointer-1][1].length),diffs[pointer+1][1]=diffs[pointer-1][1]+diffs[pointer+1][1],diffs.splice(pointer-1,1),changes=!0):diffs[pointer][1].substring(0,diffs[pointer+1][1].length)===diffs[pointer+1][1]&&(diffs[pointer-1][1]+=diffs[pointer+1][1],diffs[pointer][1]=diffs[pointer][1].substring(diffs[pointer+1][1].length)+diffs[pointer+1][1],diffs.splice(pointer+1,1),changes=!0)),pointer++;changes&&diff_cleanupMerge(diffs);}function diff_cleanupSemanticScore_(one,two){if(!one||!two)return 6;let char1=one.charAt(one.length-1),char2=two.charAt(0),nonAlphaNumeric1=char1.match(nonAlphaNumericRegex_),nonAlphaNumeric2=char2.match(nonAlphaNumericRegex_),whitespace1=nonAlphaNumeric1&&char1.match(whitespaceRegex_),whitespace2=nonAlphaNumeric2&&char2.match(whitespaceRegex_),lineBreak1=whitespace1&&char1.match(linebreakRegex_),lineBreak2=whitespace2&&char2.match(linebreakRegex_),blankLine1=lineBreak1&&one.match(blanklineEndRegex_),blankLine2=lineBreak2&&two.match(blanklineStartRegex_);return blankLine1||blankLine2?5:lineBreak1||lineBreak2?4:nonAlphaNumeric1&&!whitespace1&&whitespace2?3:whitespace1||whitespace2?2:nonAlphaNumeric1||nonAlphaNumeric2?1:0}var NO_DIFF_MESSAGE="Compared values have no visual difference.",SIMILAR_MESSAGE="Compared values serialize to the same structure.\\nPrinting internal object structure without calling `toJSON` instead.",build={},hasRequiredBuild;function requireBuild(){if(hasRequiredBuild)return build;hasRequiredBuild=1,Object.defineProperty(build,"__esModule",{value:!0}),build.default=diffSequence;let pkg="diff-sequences",NOT_YET_SET=0,countCommonItemsF=(aIndex,aEnd,bIndex,bEnd,isCommon)=>{let nCommon=0;for(;aIndex<aEnd&&bIndex<bEnd&&isCommon(aIndex,bIndex);)aIndex+=1,bIndex+=1,nCommon+=1;return nCommon},countCommonItemsR=(aStart,aIndex,bStart,bIndex,isCommon)=>{let nCommon=0;for(;aStart<=aIndex&&bStart<=bIndex&&isCommon(aIndex,bIndex);)aIndex-=1,bIndex-=1,nCommon+=1;return nCommon},extendPathsF=(d,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF)=>{let iF=0,kF=-d,aFirst=aIndexesF[iF],aIndexPrev1=aFirst;aIndexesF[iF]+=countCommonItemsF(aFirst+1,aEnd,bF+aFirst-kF+1,bEnd,isCommon);let nF=d<iMaxF?d:iMaxF;for(iF+=1,kF+=2;iF<=nF;iF+=1,kF+=2){if(iF!==d&&aIndexPrev1<aIndexesF[iF])aFirst=aIndexesF[iF];else if(aFirst=aIndexPrev1+1,aEnd<=aFirst)return iF-1;aIndexPrev1=aIndexesF[iF],aIndexesF[iF]=aFirst+countCommonItemsF(aFirst+1,aEnd,bF+aFirst-kF+1,bEnd,isCommon);}return iMaxF},extendPathsR=(d,aStart,bStart,bR,isCommon,aIndexesR,iMaxR)=>{let iR=0,kR=d,aFirst=aIndexesR[iR],aIndexPrev1=aFirst;aIndexesR[iR]-=countCommonItemsR(aStart,aFirst-1,bStart,bR+aFirst-kR-1,isCommon);let nR=d<iMaxR?d:iMaxR;for(iR+=1,kR-=2;iR<=nR;iR+=1,kR-=2){if(iR!==d&&aIndexesR[iR]<aIndexPrev1)aFirst=aIndexesR[iR];else if(aFirst=aIndexPrev1-1,aFirst<aStart)return iR-1;aIndexPrev1=aIndexesR[iR],aIndexesR[iR]=aFirst-countCommonItemsR(aStart,aFirst-1,bStart,bR+aFirst-kR-1,isCommon);}return iMaxR},extendOverlappablePathsF=(d,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division)=>{let bF=bStart-aStart,aLength=aEnd-aStart,baDeltaLength=bEnd-bStart-aLength,kMinOverlapF=-baDeltaLength-(d-1),kMaxOverlapF=-baDeltaLength+(d-1),aIndexPrev1=NOT_YET_SET,nF=d<iMaxF?d:iMaxF;for(let iF=0,kF=-d;iF<=nF;iF+=1,kF+=2){let insert=iF===0||iF!==d&&aIndexPrev1<aIndexesF[iF],aLastPrev=insert?aIndexesF[iF]:aIndexPrev1,aFirst=insert?aLastPrev:aLastPrev+1,bFirst=bF+aFirst-kF,nCommonF=countCommonItemsF(aFirst+1,aEnd,bFirst+1,bEnd,isCommon),aLast=aFirst+nCommonF;if(aIndexPrev1=aIndexesF[iF],aIndexesF[iF]=aLast,kMinOverlapF<=kF&&kF<=kMaxOverlapF){let iR=(d-1-(kF+baDeltaLength))/2;if(iR<=iMaxR&&aIndexesR[iR]-1<=aLast){let bLastPrev=bF+aLastPrev-(insert?kF+1:kF-1),nCommonR=countCommonItemsR(aStart,aLastPrev,bStart,bLastPrev,isCommon),aIndexPrevFirst=aLastPrev-nCommonR,bIndexPrevFirst=bLastPrev-nCommonR,aEndPreceding=aIndexPrevFirst+1,bEndPreceding=bIndexPrevFirst+1;division.nChangePreceding=d-1,d-1===aEndPreceding+bEndPreceding-aStart-bStart?(division.aEndPreceding=aStart,division.bEndPreceding=bStart):(division.aEndPreceding=aEndPreceding,division.bEndPreceding=bEndPreceding),division.nCommonPreceding=nCommonR,nCommonR!==0&&(division.aCommonPreceding=aEndPreceding,division.bCommonPreceding=bEndPreceding),division.nCommonFollowing=nCommonF,nCommonF!==0&&(division.aCommonFollowing=aFirst+1,division.bCommonFollowing=bFirst+1);let aStartFollowing=aLast+1,bStartFollowing=bFirst+nCommonF+1;return division.nChangeFollowing=d-1,d-1===aEnd+bEnd-aStartFollowing-bStartFollowing?(division.aStartFollowing=aEnd,division.bStartFollowing=bEnd):(division.aStartFollowing=aStartFollowing,division.bStartFollowing=bStartFollowing),!0}}}return !1},extendOverlappablePathsR=(d,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division)=>{let bR=bEnd-aEnd,aLength=aEnd-aStart,baDeltaLength=bEnd-bStart-aLength,kMinOverlapR=baDeltaLength-d,kMaxOverlapR=baDeltaLength+d,aIndexPrev1=NOT_YET_SET,nR=d<iMaxR?d:iMaxR;for(let iR=0,kR=d;iR<=nR;iR+=1,kR-=2){let insert=iR===0||iR!==d&&aIndexesR[iR]<aIndexPrev1,aLastPrev=insert?aIndexesR[iR]:aIndexPrev1,aFirst=insert?aLastPrev:aLastPrev-1,bFirst=bR+aFirst-kR,nCommonR=countCommonItemsR(aStart,aFirst-1,bStart,bFirst-1,isCommon),aLast=aFirst-nCommonR;if(aIndexPrev1=aIndexesR[iR],aIndexesR[iR]=aLast,kMinOverlapR<=kR&&kR<=kMaxOverlapR){let iF=(d+(kR-baDeltaLength))/2;if(iF<=iMaxF&&aLast-1<=aIndexesF[iF]){let bLast=bFirst-nCommonR;if(division.nChangePreceding=d,d===aLast+bLast-aStart-bStart?(division.aEndPreceding=aStart,division.bEndPreceding=bStart):(division.aEndPreceding=aLast,division.bEndPreceding=bLast),division.nCommonPreceding=nCommonR,nCommonR!==0&&(division.aCommonPreceding=aLast,division.bCommonPreceding=bLast),division.nChangeFollowing=d-1,d===1)division.nCommonFollowing=0,division.aStartFollowing=aEnd,division.bStartFollowing=bEnd;else {let bLastPrev=bR+aLastPrev-(insert?kR-1:kR+1),nCommonF=countCommonItemsF(aLastPrev,aEnd,bLastPrev,bEnd,isCommon);division.nCommonFollowing=nCommonF,nCommonF!==0&&(division.aCommonFollowing=aLastPrev,division.bCommonFollowing=bLastPrev);let aStartFollowing=aLastPrev+nCommonF,bStartFollowing=bLastPrev+nCommonF;d-1===aEnd+bEnd-aStartFollowing-bStartFollowing?(division.aStartFollowing=aEnd,division.bStartFollowing=bEnd):(division.aStartFollowing=aStartFollowing,division.bStartFollowing=bStartFollowing);}return !0}}}return !1},divide=(nChange,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,aIndexesR,division)=>{let bF=bStart-aStart,bR=bEnd-aEnd,aLength=aEnd-aStart,bLength=bEnd-bStart,baDeltaLength=bLength-aLength,iMaxF=aLength,iMaxR=aLength;if(aIndexesF[0]=aStart-1,aIndexesR[0]=aEnd,baDeltaLength%2===0){let dMin=(nChange||baDeltaLength)/2,dMax=(aLength+bLength)/2;for(let d=1;d<=dMax;d+=1)if(iMaxF=extendPathsF(d,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF),d<dMin)iMaxR=extendPathsR(d,aStart,bStart,bR,isCommon,aIndexesR,iMaxR);else if(extendOverlappablePathsR(d,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division))return}else {let dMin=((nChange||baDeltaLength)+1)/2,dMax=(aLength+bLength+1)/2,d=1;for(iMaxF=extendPathsF(d,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF),d+=1;d<=dMax;d+=1)if(iMaxR=extendPathsR(d-1,aStart,bStart,bR,isCommon,aIndexesR,iMaxR),d<dMin)iMaxF=extendPathsF(d,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF);else if(extendOverlappablePathsF(d,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division))return}throw new Error(`${pkg}: no overlap aStart=${aStart} aEnd=${aEnd} bStart=${bStart} bEnd=${bEnd}`)},findSubsequences=(nChange,aStart,aEnd,bStart,bEnd,transposed,callbacks,aIndexesF,aIndexesR,division)=>{if(bEnd-bStart<aEnd-aStart){if(transposed=!transposed,transposed&&callbacks.length===1){let{foundSubsequence:foundSubsequence2,isCommon:isCommon2}=callbacks[0];callbacks[1]={foundSubsequence:(nCommon,bCommon,aCommon)=>{foundSubsequence2(nCommon,aCommon,bCommon);},isCommon:(bIndex,aIndex)=>isCommon2(aIndex,bIndex)};}let tStart=aStart,tEnd=aEnd;aStart=bStart,aEnd=bEnd,bStart=tStart,bEnd=tEnd;}let{foundSubsequence,isCommon}=callbacks[transposed?1:0];divide(nChange,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,aIndexesR,division);let{nChangePreceding,aEndPreceding,bEndPreceding,nCommonPreceding,aCommonPreceding,bCommonPreceding,nCommonFollowing,aCommonFollowing,bCommonFollowing,nChangeFollowing,aStartFollowing,bStartFollowing}=division;aStart<aEndPreceding&&bStart<bEndPreceding&&findSubsequences(nChangePreceding,aStart,aEndPreceding,bStart,bEndPreceding,transposed,callbacks,aIndexesF,aIndexesR,division),nCommonPreceding!==0&&foundSubsequence(nCommonPreceding,aCommonPreceding,bCommonPreceding),nCommonFollowing!==0&&foundSubsequence(nCommonFollowing,aCommonFollowing,bCommonFollowing),aStartFollowing<aEnd&&bStartFollowing<bEnd&&findSubsequences(nChangeFollowing,aStartFollowing,aEnd,bStartFollowing,bEnd,transposed,callbacks,aIndexesF,aIndexesR,division);},validateLength=(name,arg)=>{if(typeof arg!="number")throw new TypeError(`${pkg}: ${name} typeof ${typeof arg} is not a number`);if(!Number.isSafeInteger(arg))throw new RangeError(`${pkg}: ${name} value ${arg} is not a safe integer`);if(arg<0)throw new RangeError(`${pkg}: ${name} value ${arg} is a negative integer`)},validateCallback=(name,arg)=>{let type=typeof arg;if(type!=="function")throw new TypeError(`${pkg}: ${name} typeof ${type} is not a function`)};function diffSequence(aLength,bLength,isCommon,foundSubsequence){validateLength("aLength",aLength),validateLength("bLength",bLength),validateCallback("isCommon",isCommon),validateCallback("foundSubsequence",foundSubsequence);let nCommonF=countCommonItemsF(0,aLength,0,bLength,isCommon);if(nCommonF!==0&&foundSubsequence(nCommonF,0,0),aLength!==nCommonF||bLength!==nCommonF){let aStart=nCommonF,bStart=nCommonF,nCommonR=countCommonItemsR(aStart,aLength-1,bStart,bLength-1,isCommon),aEnd=aLength-nCommonR,bEnd=bLength-nCommonR,nCommonFR=nCommonF+nCommonR;aLength!==nCommonFR&&bLength!==nCommonFR&&findSubsequences(0,aStart,aEnd,bStart,bEnd,!1,[{foundSubsequence,isCommon}],[NOT_YET_SET],[NOT_YET_SET],{aCommonFollowing:NOT_YET_SET,aCommonPreceding:NOT_YET_SET,aEndPreceding:NOT_YET_SET,aStartFollowing:NOT_YET_SET,bCommonFollowing:NOT_YET_SET,bCommonPreceding:NOT_YET_SET,bEndPreceding:NOT_YET_SET,bStartFollowing:NOT_YET_SET,nChangeFollowing:NOT_YET_SET,nChangePreceding:NOT_YET_SET,nCommonFollowing:NOT_YET_SET,nCommonPreceding:NOT_YET_SET}),nCommonR!==0&&foundSubsequence(nCommonR,aEnd,bEnd);}}return build}var buildExports=requireBuild(),diffSequences=getDefaultExportFromCjs(buildExports);function formatTrailingSpaces(line,trailingSpaceFormatter){return line.replace(/\\s+$/,match=>trailingSpaceFormatter(match))}function printDiffLine(line,isFirstOrLast,color,indicator,trailingSpaceFormatter,emptyFirstOrLastLinePlaceholder){return line.length!==0?color(`${indicator} ${formatTrailingSpaces(line,trailingSpaceFormatter)}`):indicator!==" "?color(indicator):isFirstOrLast&&emptyFirstOrLastLinePlaceholder.length!==0?color(`${indicator} ${emptyFirstOrLastLinePlaceholder}`):""}function printDeleteLine(line,isFirstOrLast,{aColor,aIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder}){return printDiffLine(line,isFirstOrLast,aColor,aIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder)}function printInsertLine(line,isFirstOrLast,{bColor,bIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder}){return printDiffLine(line,isFirstOrLast,bColor,bIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder)}function printCommonLine(line,isFirstOrLast,{commonColor,commonIndicator,commonLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder}){return printDiffLine(line,isFirstOrLast,commonColor,commonIndicator,commonLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder)}function createPatchMark(aStart,aEnd,bStart,bEnd,{patchColor}){return patchColor(`@@ -${aStart+1},${aEnd-aStart} +${bStart+1},${bEnd-bStart} @@`)}function joinAlignedDiffsNoExpand(diffs,options){let iLength=diffs.length,nContextLines=options.contextLines,nContextLines2=nContextLines+nContextLines,jLength=iLength,hasExcessAtStartOrEnd=!1,nExcessesBetweenChanges=0,i=0;for(;i!==iLength;){let iStart=i;for(;i!==iLength&&diffs[i][0]===DIFF_EQUAL;)i+=1;if(iStart!==i)if(iStart===0)i>nContextLines&&(jLength-=i-nContextLines,hasExcessAtStartOrEnd=!0);else if(i===iLength){let n=i-iStart;n>nContextLines&&(jLength-=n-nContextLines,hasExcessAtStartOrEnd=!0);}else {let n=i-iStart;n>nContextLines2&&(jLength-=n-nContextLines2,nExcessesBetweenChanges+=1);}for(;i!==iLength&&diffs[i][0]!==DIFF_EQUAL;)i+=1;}let hasPatch=nExcessesBetweenChanges!==0||hasExcessAtStartOrEnd;nExcessesBetweenChanges!==0?jLength+=nExcessesBetweenChanges+1:hasExcessAtStartOrEnd&&(jLength+=1);let jLast=jLength-1,lines=[],jPatchMark=0;hasPatch&&lines.push("");let aStart=0,bStart=0,aEnd=0,bEnd=0,pushCommonLine=line=>{let j=lines.length;lines.push(printCommonLine(line,j===0||j===jLast,options)),aEnd+=1,bEnd+=1;},pushDeleteLine=line=>{let j=lines.length;lines.push(printDeleteLine(line,j===0||j===jLast,options)),aEnd+=1;},pushInsertLine=line=>{let j=lines.length;lines.push(printInsertLine(line,j===0||j===jLast,options)),bEnd+=1;};for(i=0;i!==iLength;){let iStart=i;for(;i!==iLength&&diffs[i][0]===DIFF_EQUAL;)i+=1;if(iStart!==i)if(iStart===0){i>nContextLines&&(iStart=i-nContextLines,aStart=iStart,bStart=iStart,aEnd=aStart,bEnd=bStart);for(let iCommon=iStart;iCommon!==i;iCommon+=1)pushCommonLine(diffs[iCommon][1]);}else if(i===iLength){let iEnd=i-iStart>nContextLines?iStart+nContextLines:i;for(let iCommon=iStart;iCommon!==iEnd;iCommon+=1)pushCommonLine(diffs[iCommon][1]);}else {let nCommon=i-iStart;if(nCommon>nContextLines2){let iEnd=iStart+nContextLines;for(let iCommon=iStart;iCommon!==iEnd;iCommon+=1)pushCommonLine(diffs[iCommon][1]);lines[jPatchMark]=createPatchMark(aStart,aEnd,bStart,bEnd,options),jPatchMark=lines.length,lines.push("");let nOmit=nCommon-nContextLines2;aStart=aEnd+nOmit,bStart=bEnd+nOmit,aEnd=aStart,bEnd=bStart;for(let iCommon=i-nContextLines;iCommon!==i;iCommon+=1)pushCommonLine(diffs[iCommon][1]);}else for(let iCommon=iStart;iCommon!==i;iCommon+=1)pushCommonLine(diffs[iCommon][1]);}for(;i!==iLength&&diffs[i][0]===DIFF_DELETE;)pushDeleteLine(diffs[i][1]),i+=1;for(;i!==iLength&&diffs[i][0]===DIFF_INSERT;)pushInsertLine(diffs[i][1]),i+=1;}return hasPatch&&(lines[jPatchMark]=createPatchMark(aStart,aEnd,bStart,bEnd,options)),lines.join(`\n`)}function joinAlignedDiffsExpand(diffs,options){return diffs.map((diff2,i,diffs2)=>{let line=diff2[1],isFirstOrLast=i===0||i===diffs2.length-1;switch(diff2[0]){case DIFF_DELETE:return printDeleteLine(line,isFirstOrLast,options);case DIFF_INSERT:return printInsertLine(line,isFirstOrLast,options);default:return printCommonLine(line,isFirstOrLast,options)}}).join(`\n`)}var noColor=string=>string,DIFF_CONTEXT_DEFAULT=5,DIFF_TRUNCATE_THRESHOLD_DEFAULT=0;function getDefaultOptions(){return {aAnnotation:"Expected",aColor:f2.green,aIndicator:"-",bAnnotation:"Received",bColor:f2.red,bIndicator:"+",changeColor:f2.inverse,changeLineTrailingSpaceColor:noColor,commonColor:f2.dim,commonIndicator:" ",commonLineTrailingSpaceColor:noColor,compareKeys:void 0,contextLines:DIFF_CONTEXT_DEFAULT,emptyFirstOrLastLinePlaceholder:"",expand:!0,includeChangeCounts:!1,omitAnnotationLines:!1,patchColor:f2.yellow,truncateThreshold:DIFF_TRUNCATE_THRESHOLD_DEFAULT,truncateAnnotation:"... Diff result is truncated",truncateAnnotationColor:noColor}}function getCompareKeys(compareKeys){return compareKeys&&typeof compareKeys=="function"?compareKeys:void 0}function getContextLines(contextLines){return typeof contextLines=="number"&&Number.isSafeInteger(contextLines)&&contextLines>=0?contextLines:DIFF_CONTEXT_DEFAULT}function normalizeDiffOptions(options={}){return {...getDefaultOptions(),...options,compareKeys:getCompareKeys(options.compareKeys),contextLines:getContextLines(options.contextLines)}}function isEmptyString(lines){return lines.length===1&&lines[0].length===0}function countChanges(diffs){let a2=0,b=0;return diffs.forEach(diff2=>{switch(diff2[0]){case DIFF_DELETE:a2+=1;break;case DIFF_INSERT:b+=1;break}}),{a:a2,b}}function printAnnotation({aAnnotation,aColor,aIndicator,bAnnotation,bColor,bIndicator,includeChangeCounts,omitAnnotationLines},changeCounts){if(omitAnnotationLines)return "";let aRest="",bRest="";if(includeChangeCounts){let aCount=String(changeCounts.a),bCount=String(changeCounts.b),baAnnotationLengthDiff=bAnnotation.length-aAnnotation.length,aAnnotationPadding=" ".repeat(Math.max(0,baAnnotationLengthDiff)),bAnnotationPadding=" ".repeat(Math.max(0,-baAnnotationLengthDiff)),baCountLengthDiff=bCount.length-aCount.length,aCountPadding=" ".repeat(Math.max(0,baCountLengthDiff)),bCountPadding=" ".repeat(Math.max(0,-baCountLengthDiff));aRest=`${aAnnotationPadding}  ${aIndicator} ${aCountPadding}${aCount}`,bRest=`${bAnnotationPadding}  ${bIndicator} ${bCountPadding}${bCount}`;}let a2=`${aIndicator} ${aAnnotation}${aRest}`,b=`${bIndicator} ${bAnnotation}${bRest}`;return `${aColor(a2)}\n${bColor(b)}\n\n`}function printDiffLines(diffs,truncated,options){return printAnnotation(options,countChanges(diffs))+(options.expand?joinAlignedDiffsExpand(diffs,options):joinAlignedDiffsNoExpand(diffs,options))+(truncated?options.truncateAnnotationColor(`\n${options.truncateAnnotation}`):"")}function diffLinesUnified(aLines,bLines,options){let normalizedOptions=normalizeDiffOptions(options),[diffs,truncated]=diffLinesRaw(isEmptyString(aLines)?[]:aLines,isEmptyString(bLines)?[]:bLines,normalizedOptions);return printDiffLines(diffs,truncated,normalizedOptions)}function diffLinesUnified2(aLinesDisplay,bLinesDisplay,aLinesCompare,bLinesCompare,options){if(isEmptyString(aLinesDisplay)&&isEmptyString(aLinesCompare)&&(aLinesDisplay=[],aLinesCompare=[]),isEmptyString(bLinesDisplay)&&isEmptyString(bLinesCompare)&&(bLinesDisplay=[],bLinesCompare=[]),aLinesDisplay.length!==aLinesCompare.length||bLinesDisplay.length!==bLinesCompare.length)return diffLinesUnified(aLinesDisplay,bLinesDisplay,options);let[diffs,truncated]=diffLinesRaw(aLinesCompare,bLinesCompare,options),aIndex=0,bIndex=0;return diffs.forEach(diff2=>{switch(diff2[0]){case DIFF_DELETE:diff2[1]=aLinesDisplay[aIndex],aIndex+=1;break;case DIFF_INSERT:diff2[1]=bLinesDisplay[bIndex],bIndex+=1;break;default:diff2[1]=bLinesDisplay[bIndex],aIndex+=1,bIndex+=1;}}),printDiffLines(diffs,truncated,normalizeDiffOptions(options))}function diffLinesRaw(aLines,bLines,options){let truncate2=options?.truncateThreshold??!1,truncateThreshold=Math.max(Math.floor(options?.truncateThreshold??0),0),aLength=truncate2?Math.min(aLines.length,truncateThreshold):aLines.length,bLength=truncate2?Math.min(bLines.length,truncateThreshold):bLines.length,truncated=aLength!==aLines.length||bLength!==bLines.length,isCommon=(aIndex2,bIndex2)=>aLines[aIndex2]===bLines[bIndex2],diffs=[],aIndex=0,bIndex=0;for(diffSequences(aLength,bLength,isCommon,(nCommon,aCommon,bCommon)=>{for(;aIndex!==aCommon;aIndex+=1)diffs.push(new Diff(DIFF_DELETE,aLines[aIndex]));for(;bIndex!==bCommon;bIndex+=1)diffs.push(new Diff(DIFF_INSERT,bLines[bIndex]));for(;nCommon!==0;nCommon-=1,aIndex+=1,bIndex+=1)diffs.push(new Diff(DIFF_EQUAL,bLines[bIndex]));});aIndex!==aLength;aIndex+=1)diffs.push(new Diff(DIFF_DELETE,aLines[aIndex]));for(;bIndex!==bLength;bIndex+=1)diffs.push(new Diff(DIFF_INSERT,bLines[bIndex]));return [diffs,truncated]}function getNewLineSymbol(string){return string.includes(`\\r\n`)?`\\r\n`:`\n`}function diffStrings(a2,b,options){let truncate2=options?.truncateThreshold??!1,truncateThreshold=Math.max(Math.floor(options?.truncateThreshold??0),0),aLength=a2.length,bLength=b.length;if(truncate2){let aMultipleLines=a2.includes(`\n`),bMultipleLines=b.includes(`\n`),aNewLineSymbol=getNewLineSymbol(a2),bNewLineSymbol=getNewLineSymbol(b),_a=aMultipleLines?`${a2.split(aNewLineSymbol,truncateThreshold).join(aNewLineSymbol)}\n`:a2,_b=bMultipleLines?`${b.split(bNewLineSymbol,truncateThreshold).join(bNewLineSymbol)}\n`:b;aLength=_a.length,bLength=_b.length;}let truncated=aLength!==a2.length||bLength!==b.length,isCommon=(aIndex2,bIndex2)=>a2[aIndex2]===b[bIndex2],aIndex=0,bIndex=0,diffs=[];return diffSequences(aLength,bLength,isCommon,(nCommon,aCommon,bCommon)=>{aIndex!==aCommon&&diffs.push(new Diff(DIFF_DELETE,a2.slice(aIndex,aCommon))),bIndex!==bCommon&&diffs.push(new Diff(DIFF_INSERT,b.slice(bIndex,bCommon))),aIndex=aCommon+nCommon,bIndex=bCommon+nCommon,diffs.push(new Diff(DIFF_EQUAL,b.slice(bCommon,bIndex)));}),aIndex!==aLength&&diffs.push(new Diff(DIFF_DELETE,a2.slice(aIndex))),bIndex!==bLength&&diffs.push(new Diff(DIFF_INSERT,b.slice(bIndex))),[diffs,truncated]}function concatenateRelevantDiffs(op,diffs,changeColor){return diffs.reduce((reduced,diff2)=>reduced+(diff2[0]===DIFF_EQUAL?diff2[1]:diff2[0]===op&&diff2[1].length!==0?changeColor(diff2[1]):""),"")}var ChangeBuffer=class{op;line;lines;changeColor;constructor(op,changeColor){this.op=op,this.line=[],this.lines=[],this.changeColor=changeColor;}pushSubstring(substring){this.pushDiff(new Diff(this.op,substring));}pushLine(){this.lines.push(this.line.length!==1?new Diff(this.op,concatenateRelevantDiffs(this.op,this.line,this.changeColor)):this.line[0][0]===this.op?this.line[0]:new Diff(this.op,this.line[0][1])),this.line.length=0;}isLineEmpty(){return this.line.length===0}pushDiff(diff2){this.line.push(diff2);}align(diff2){let string=diff2[1];if(string.includes(`\n`)){let substrings=string.split(`\n`),iLast=substrings.length-1;substrings.forEach((substring,i)=>{i<iLast?(this.pushSubstring(substring),this.pushLine()):substring.length!==0&&this.pushSubstring(substring);});}else this.pushDiff(diff2);}moveLinesTo(lines){this.isLineEmpty()||this.pushLine(),lines.push(...this.lines),this.lines.length=0;}},CommonBuffer=class{deleteBuffer;insertBuffer;lines;constructor(deleteBuffer,insertBuffer){this.deleteBuffer=deleteBuffer,this.insertBuffer=insertBuffer,this.lines=[];}pushDiffCommonLine(diff2){this.lines.push(diff2);}pushDiffChangeLines(diff2){let isDiffEmpty=diff2[1].length===0;(!isDiffEmpty||this.deleteBuffer.isLineEmpty())&&this.deleteBuffer.pushDiff(diff2),(!isDiffEmpty||this.insertBuffer.isLineEmpty())&&this.insertBuffer.pushDiff(diff2);}flushChangeLines(){this.deleteBuffer.moveLinesTo(this.lines),this.insertBuffer.moveLinesTo(this.lines);}align(diff2){let op=diff2[0],string=diff2[1];if(string.includes(`\n`)){let substrings=string.split(`\n`),iLast=substrings.length-1;substrings.forEach((substring,i)=>{if(i===0){let subdiff=new Diff(op,substring);this.deleteBuffer.isLineEmpty()&&this.insertBuffer.isLineEmpty()?(this.flushChangeLines(),this.pushDiffCommonLine(subdiff)):(this.pushDiffChangeLines(subdiff),this.flushChangeLines());}else i<iLast?this.pushDiffCommonLine(new Diff(op,substring)):substring.length!==0&&this.pushDiffChangeLines(new Diff(op,substring));});}else this.pushDiffChangeLines(diff2);}getLines(){return this.flushChangeLines(),this.lines}};function getAlignedDiffs(diffs,changeColor){let deleteBuffer=new ChangeBuffer(DIFF_DELETE,changeColor),insertBuffer=new ChangeBuffer(DIFF_INSERT,changeColor),commonBuffer=new CommonBuffer(deleteBuffer,insertBuffer);return diffs.forEach(diff2=>{switch(diff2[0]){case DIFF_DELETE:deleteBuffer.align(diff2);break;case DIFF_INSERT:insertBuffer.align(diff2);break;default:commonBuffer.align(diff2);}}),commonBuffer.getLines()}function hasCommonDiff(diffs,isMultiline){if(isMultiline){let iLast=diffs.length-1;return diffs.some((diff2,i)=>diff2[0]===DIFF_EQUAL&&(i!==iLast||diff2[1]!==`\n`))}return diffs.some(diff2=>diff2[0]===DIFF_EQUAL)}function diffStringsUnified(a2,b,options){if(a2!==b&&a2.length!==0&&b.length!==0){let isMultiline=a2.includes(`\n`)||b.includes(`\n`),[diffs,truncated]=diffStringsRaw(isMultiline?`${a2}\n`:a2,isMultiline?`${b}\n`:b,!0,options);if(hasCommonDiff(diffs,isMultiline)){let optionsNormalized=normalizeDiffOptions(options),lines=getAlignedDiffs(diffs,optionsNormalized.changeColor);return printDiffLines(lines,truncated,optionsNormalized)}}return diffLinesUnified(a2.split(`\n`),b.split(`\n`),options)}function diffStringsRaw(a2,b,cleanup,options){let[diffs,truncated]=diffStrings(a2,b,options);return cleanup&&diff_cleanupSemantic(diffs),[diffs,truncated]}function getCommonMessage(message,options){let{commonColor}=normalizeDiffOptions(options);return commonColor(message)}var{AsymmetricMatcher:AsymmetricMatcher2,DOMCollection:DOMCollection2,DOMElement:DOMElement2,Immutable:Immutable2,ReactElement:ReactElement2,ReactTestComponent:ReactTestComponent2}=plugins,PLUGINS2=[ReactTestComponent2,ReactElement2,DOMElement2,DOMCollection2,Immutable2,AsymmetricMatcher2],FORMAT_OPTIONS={plugins:PLUGINS2},FALLBACK_FORMAT_OPTIONS={callToJSON:!1,maxDepth:10,plugins:PLUGINS2};function diff(a2,b,options){if(Object.is(a2,b))return "";let aType=getType3(a2),expectedType=aType,omitDifference=!1;if(aType==="object"&&typeof a2.asymmetricMatch=="function"){if(a2.$$typeof!==Symbol.for("jest.asymmetricMatcher")||typeof a2.getExpectedType!="function")return;expectedType=a2.getExpectedType(),omitDifference=expectedType==="string";}if(expectedType!==getType3(b)){let{aAnnotation,aColor,aIndicator,bAnnotation,bColor,bIndicator}=normalizeDiffOptions(options),formatOptions=getFormatOptions(FALLBACK_FORMAT_OPTIONS,options),aDisplay=format(a2,formatOptions),bDisplay=format(b,formatOptions),aDiff=`${aColor(`${aIndicator} ${aAnnotation}:`)} \n${aDisplay}`,bDiff=`${bColor(`${bIndicator} ${bAnnotation}:`)} \n${bDisplay}`;return `${aDiff}\n\n${bDiff}`}if(!omitDifference)switch(aType){case"string":return diffLinesUnified(a2.split(`\n`),b.split(`\n`),options);case"boolean":case"number":return comparePrimitive(a2,b,options);case"map":return compareObjects(sortMap(a2),sortMap(b),options);case"set":return compareObjects(sortSet(a2),sortSet(b),options);default:return compareObjects(a2,b,options)}}function comparePrimitive(a2,b,options){let aFormat=format(a2,FORMAT_OPTIONS),bFormat=format(b,FORMAT_OPTIONS);return aFormat===bFormat?"":diffLinesUnified(aFormat.split(`\n`),bFormat.split(`\n`),options)}function sortMap(map){return new Map(Array.from(map.entries()).sort())}function sortSet(set){return new Set(Array.from(set.values()).sort())}function compareObjects(a2,b,options){let difference,hasThrown=!1;try{let formatOptions=getFormatOptions(FORMAT_OPTIONS,options);difference=getObjectsDifference(a2,b,formatOptions,options);}catch{hasThrown=!0;}let noDiffMessage=getCommonMessage(NO_DIFF_MESSAGE,options);if(difference===void 0||difference===noDiffMessage){let formatOptions=getFormatOptions(FALLBACK_FORMAT_OPTIONS,options);difference=getObjectsDifference(a2,b,formatOptions,options),difference!==noDiffMessage&&!hasThrown&&(difference=`${getCommonMessage(SIMILAR_MESSAGE,options)}\n\n${difference}`);}return difference}function getFormatOptions(formatOptions,options){let{compareKeys}=normalizeDiffOptions(options);return {...formatOptions,compareKeys}}function getObjectsDifference(a2,b,formatOptions,options){let formatOptionsZeroIndent={...formatOptions,indent:0},aCompare=format(a2,formatOptionsZeroIndent),bCompare=format(b,formatOptionsZeroIndent);if(aCompare===bCompare)return getCommonMessage(NO_DIFF_MESSAGE,options);{let aDisplay=format(a2,formatOptions),bDisplay=format(b,formatOptions);return diffLinesUnified2(aDisplay.split(`\n`),bDisplay.split(`\n`),aCompare.split(`\n`),bCompare.split(`\n`),options)}}var MAX_DIFF_STRING_LENGTH=2e4;function isAsymmetricMatcher(data){return getType2(data)==="Object"&&typeof data.asymmetricMatch=="function"}function isReplaceable(obj1,obj2){let obj1Type=getType2(obj1),obj2Type=getType2(obj2);return obj1Type===obj2Type&&(obj1Type==="Object"||obj1Type==="Array")}function printDiffOrStringify(expected,received,options){let{aAnnotation,bAnnotation}=normalizeDiffOptions(options);if(typeof expected=="string"&&typeof received=="string"&&expected.length>0&&received.length>0&&expected.length<=MAX_DIFF_STRING_LENGTH&&received.length<=MAX_DIFF_STRING_LENGTH&&expected!==received){if(expected.includes(`\n`)||received.includes(`\n`))return diffStringsUnified(received,expected,options);let[diffs]=diffStringsRaw(received,expected,!0),hasCommonDiff2=diffs.some(diff2=>diff2[0]===DIFF_EQUAL),printLabel=getLabelPrinter(aAnnotation,bAnnotation),expectedLine=printLabel(aAnnotation)+printExpected(getCommonAndChangedSubstrings(diffs,DIFF_DELETE,hasCommonDiff2)),receivedLine=printLabel(bAnnotation)+printReceived(getCommonAndChangedSubstrings(diffs,DIFF_INSERT,hasCommonDiff2));return `${expectedLine}\n${receivedLine}`}let clonedExpected=deepClone(expected,{forceWritable:!0}),clonedReceived=deepClone(received,{forceWritable:!0}),{replacedExpected,replacedActual}=replaceAsymmetricMatcher(clonedExpected,clonedReceived);return diff(replacedExpected,replacedActual,options)}function replaceAsymmetricMatcher(actual,expected,actualReplaced=new WeakSet,expectedReplaced=new WeakSet){return isReplaceable(actual,expected)?actualReplaced.has(actual)||expectedReplaced.has(expected)?{replacedActual:actual,replacedExpected:expected}:(actualReplaced.add(actual),expectedReplaced.add(expected),getOwnProperties(expected).forEach(key=>{let expectedValue=expected[key],actualValue=actual[key];if(isAsymmetricMatcher(expectedValue))expectedValue.asymmetricMatch(actualValue)&&(actual[key]=expectedValue);else if(isAsymmetricMatcher(actualValue))actualValue.asymmetricMatch(expectedValue)&&(expected[key]=actualValue);else if(isReplaceable(actualValue,expectedValue)){let replaced=replaceAsymmetricMatcher(actualValue,expectedValue,actualReplaced,expectedReplaced);actual[key]=replaced.replacedActual,expected[key]=replaced.replacedExpected;}}),{replacedActual:actual,replacedExpected:expected}):{replacedActual:actual,replacedExpected:expected}}function getLabelPrinter(...strings){let maxLength=strings.reduce((max,string)=>string.length>max?string.length:max,0);return string=>`${string}: ${" ".repeat(maxLength-string.length)}`}var SPACE_SYMBOL="\\xB7";function replaceTrailingSpaces(text){return text.replace(/\\s+$/gm,spaces=>SPACE_SYMBOL.repeat(spaces.length))}function printReceived(object){return f2.red(replaceTrailingSpaces(stringify(object)))}function printExpected(value){return f2.green(replaceTrailingSpaces(stringify(value)))}function getCommonAndChangedSubstrings(diffs,op,hasCommonDiff2){return diffs.reduce((reduced,diff2)=>reduced+(diff2[0]===DIFF_EQUAL?diff2[1]:diff2[0]===op?hasCommonDiff2?f2.inverse(diff2[1]):diff2[1]:""),"")}var IS_RECORD_SYMBOL="@@__IMMUTABLE_RECORD__@@",IS_COLLECTION_SYMBOL="@@__IMMUTABLE_ITERABLE__@@";function isImmutable(v){return v&&(v[IS_COLLECTION_SYMBOL]||v[IS_RECORD_SYMBOL])}var OBJECT_PROTO=Object.getPrototypeOf({});function getUnserializableMessage(err){return err instanceof Error?`<unserializable>: ${err.message}`:typeof err=="string"?`<unserializable>: ${err}`:"<unserializable>"}function serializeValue(val,seen=new WeakMap){if(!val||typeof val=="string")return val;if(typeof val=="function")return `Function<${val.name||"anonymous"}>`;if(typeof val=="symbol")return val.toString();if(typeof val!="object")return val;if(isImmutable(val))return serializeValue(val.toJSON(),seen);if(val instanceof Promise||val.constructor&&val.constructor.prototype==="AsyncFunction")return "Promise";if(typeof Element<"u"&&val instanceof Element)return val.tagName;if(typeof val.asymmetricMatch=="function")return `${val.toString()} ${format2(val.sample)}`;if(typeof val.toJSON=="function")return serializeValue(val.toJSON(),seen);if(seen.has(val))return seen.get(val);if(Array.isArray(val)){let clone2=new Array(val.length);return seen.set(val,clone2),val.forEach((e,i)=>{try{clone2[i]=serializeValue(e,seen);}catch(err){clone2[i]=getUnserializableMessage(err);}}),clone2}else {let clone2=Object.create(null);seen.set(val,clone2);let obj=val;for(;obj&&obj!==OBJECT_PROTO;)Object.getOwnPropertyNames(obj).forEach(key=>{if(!(key in clone2))try{clone2[key]=serializeValue(val[key],seen);}catch(err){delete clone2[key],clone2[key]=getUnserializableMessage(err);}}),obj=Object.getPrototypeOf(obj);return clone2}}function normalizeErrorMessage(message){return message.replace(/__(vite_ssr_import|vi_import)_\\d+__\\./g,"")}function processError(_err,diffOptions,seen=new WeakSet){if(!_err||typeof _err!="object")return {message:String(_err)};let err=_err;err.stack&&(err.stackStr=String(err.stack)),err.name&&(err.nameStr=String(err.name)),(err.showDiff||err.showDiff===void 0&&err.expected!==void 0&&err.actual!==void 0)&&(err.diff=printDiffOrStringify(err.actual,err.expected,{...diffOptions,...err.diffOptions})),typeof err.expected!="string"&&(err.expected=stringify(err.expected,10)),typeof err.actual!="string"&&(err.actual=stringify(err.actual,10));try{typeof err.message=="string"&&(err.message=normalizeErrorMessage(err.message));}catch{}try{!seen.has(err)&&typeof err.cause=="object"&&(seen.add(err),err.cause=processError(err.cause,diffOptions,seen));}catch{}try{return serializeValue(err)}catch(e){return serializeValue(new Error(`Failed to fully serialize error: ${e?.message}\nInner error message: ${err?.message}`))}}var CallStates=(CallStates2=>(CallStates2.DONE="done",CallStates2.ERROR="error",CallStates2.ACTIVE="active",CallStates2.WAITING="waiting",CallStates2))(CallStates||{});var EVENTS={CALL:"storybook/instrumenter/call",SYNC:"storybook/instrumenter/sync",START:"storybook/instrumenter/start",BACK:"storybook/instrumenter/back",GOTO:"storybook/instrumenter/goto",NEXT:"storybook/instrumenter/next",END:"storybook/instrumenter/end"},controlsDisabled={start:!1,back:!1,goto:!1,next:!1,end:!1},alreadyCompletedException=new Error("This function ran after the play function completed. Did you forget to `await` it?"),isObject=o=>Object.prototype.toString.call(o)==="[object Object]",isModule=o=>Object.prototype.toString.call(o)==="[object Module]",isInstrumentable=o=>{if(!isObject(o)&&!isModule(o))return !1;if(o.constructor===void 0)return !0;let proto=o.constructor.prototype;return !!isObject(proto)},construct=obj=>{try{return new obj.constructor}catch{return {}}},getInitialState=()=>({renderPhase:void 0,isDebugging:!1,isPlaying:!1,isLocked:!1,cursor:0,calls:[],shadowCalls:[],callRefsByResult:new Map,chainedCallIds:new Set,ancestors:[],playUntil:void 0,resolvers:{},syncTimeout:void 0}),getRetainedState=(state,isDebugging=!1)=>{let calls=(isDebugging?state.shadowCalls:state.calls).filter(call=>call.retain);if(!calls.length)return;let callRefsByResult=new Map(Array.from(state.callRefsByResult.entries()).filter(([,ref])=>ref.retain));return {cursor:calls.length,calls,callRefsByResult}},Instrumenter=class{constructor(){this.initialized=!1;this.channel=storybook_internal_preview_api__WEBPACK_IMPORTED_MODULE_2__.addons.getChannel(),this.state=_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window?.parent.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER_STATE__||{};let resetState=({storyId,isPlaying=!0,isDebugging=!1})=>{let state=this.getState(storyId);this.setState(storyId,{...getInitialState(),...getRetainedState(state,isDebugging),shadowCalls:isDebugging?state.shadowCalls:[],chainedCallIds:isDebugging?state.chainedCallIds:new Set,playUntil:isDebugging?state.playUntil:void 0,isPlaying,isDebugging}),this.sync(storyId);};this.channel.on(storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_1__.FORCE_REMOUNT,resetState),this.channel.on(storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_1__.STORY_RENDER_PHASE_CHANGED,({storyId,newPhase})=>{let{isDebugging}=this.getState(storyId);this.setState(storyId,{renderPhase:newPhase}),newPhase==="preparing"&&isDebugging&&resetState({storyId}),newPhase==="playing"&&resetState({storyId,isDebugging}),newPhase==="played"&&this.setState(storyId,{isLocked:!1,isPlaying:!1,isDebugging:!1}),newPhase==="errored"&&this.setState(storyId,{isLocked:!1,isPlaying:!1});}),this.channel.on(storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_1__.SET_CURRENT_STORY,()=>{this.initialized?this.cleanup():this.initialized=!0;});let start=({storyId,playUntil})=>{this.getState(storyId).isDebugging||this.setState(storyId,({calls})=>({calls:[],shadowCalls:calls.map(call=>({...call,status:"waiting"})),isDebugging:!0}));let log=this.getLog(storyId);this.setState(storyId,({shadowCalls})=>{if(playUntil||!log.length)return {playUntil};let firstRowIndex=shadowCalls.findIndex(call=>call.id===log[0].callId);return {playUntil:shadowCalls.slice(0,firstRowIndex).filter(call=>call.interceptable&&!call.ancestors?.length).slice(-1)[0]?.id}}),this.channel.emit(storybook_internal_core_events__WEBPACK_IMPORTED_MODULE_1__.FORCE_REMOUNT,{storyId,isDebugging:!0});},back=({storyId})=>{let log=this.getLog(storyId).filter(call=>!call.ancestors?.length),last=log.reduceRight((res,item,index)=>res>=0||item.status==="waiting"?res:index,-1);start({storyId,playUntil:log[last-1]?.callId});},goto=({storyId,callId})=>{let{calls,shadowCalls,resolvers}=this.getState(storyId),call=calls.find(({id})=>id===callId),shadowCall=shadowCalls.find(({id})=>id===callId);if(!call&&shadowCall&&Object.values(resolvers).length>0){let nextId=this.getLog(storyId).find(c=>c.status==="waiting")?.callId;shadowCall.id!==nextId&&this.setState(storyId,{playUntil:shadowCall.id}),Object.values(resolvers).forEach(resolve=>resolve());}else start({storyId,playUntil:callId});},next=({storyId})=>{let{resolvers}=this.getState(storyId);if(Object.values(resolvers).length>0)Object.values(resolvers).forEach(resolve=>resolve());else {let nextId=this.getLog(storyId).find(c=>c.status==="waiting")?.callId;nextId?start({storyId,playUntil:nextId}):end({storyId});}},end=({storyId})=>{this.setState(storyId,{playUntil:void 0,isDebugging:!1}),Object.values(this.getState(storyId).resolvers).forEach(resolve=>resolve());};this.channel.on(EVENTS.START,start),this.channel.on(EVENTS.BACK,back),this.channel.on(EVENTS.GOTO,goto),this.channel.on(EVENTS.NEXT,next),this.channel.on(EVENTS.END,end);}getState(storyId){return this.state[storyId]||getInitialState()}setState(storyId,update){let state=this.getState(storyId),patch=typeof update=="function"?update(state):update;this.state={...this.state,[storyId]:{...state,...patch}},_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window?.parent&&(_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window.parent.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER_STATE__=this.state);}cleanup(){this.state=Object.entries(this.state).reduce((acc,[storyId,state])=>{let retainedState=getRetainedState(state);return retainedState&&(acc[storyId]=Object.assign(getInitialState(),retainedState)),acc},{});let payload={controlStates:controlsDisabled,logItems:[]};this.channel.emit(EVENTS.SYNC,payload),_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window?.parent&&(_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window.parent.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER_STATE__=this.state);}getLog(storyId){let{calls,shadowCalls}=this.getState(storyId),merged=[...shadowCalls];calls.forEach((call,index)=>{merged[index]=call;});let seen=new Set;return merged.reduceRight((acc,call)=>(call.args.forEach(arg=>{arg?.__callId__&&seen.add(arg.__callId__);}),call.path.forEach(node=>{node.__callId__&&seen.add(node.__callId__);}),(call.interceptable||call.exception)&&!seen.has(call.id)&&(acc.unshift({callId:call.id,status:call.status,ancestors:call.ancestors}),seen.add(call.id)),acc),[])}instrument(obj,options,depth=0){if(!isInstrumentable(obj))return obj;let{mutate=!1,path=[]}=options,keys=options.getKeys?options.getKeys(obj,depth):Object.keys(obj);return depth+=1,keys.reduce((acc,key)=>{let descriptor=getPropertyDescriptor(obj,key);if(typeof descriptor?.get=="function"){let getter=()=>descriptor?.get?.bind(obj)?.();return Object.defineProperty(acc,key,{get:()=>this.instrument(getter(),{...options,path:path.concat(key)},depth)}),acc}let value=obj[key];return typeof value!="function"?(acc[key]=this.instrument(value,{...options,path:path.concat(key)},depth),acc):"__originalFn__"in value&&typeof value.__originalFn__=="function"?(acc[key]=value,acc):(acc[key]=(...args)=>this.track(key,value,obj,args,options),acc[key].__originalFn__=value,Object.defineProperty(acc[key],"name",{value:key,writable:!1}),Object.keys(value).length>0&&Object.assign(acc[key],this.instrument({...value},{...options,path:path.concat(key)},depth)),acc)},mutate?obj:construct(obj))}track(method,fn,object,args,options){let storyId=args?.[0]?.__storyId__||_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.__STORYBOOK_PREVIEW__?.selectionStore?.selection?.storyId,{cursor,ancestors}=this.getState(storyId);this.setState(storyId,{cursor:cursor+1});let id=`${ancestors.slice(-1)[0]||storyId} [${cursor}] ${method}`,{path=[],intercept=!1,retain=!1}=options,interceptable=typeof intercept=="function"?intercept(method,path):intercept,call={id,cursor,storyId,ancestors,path,method,args,interceptable,retain},result=(interceptable&&!ancestors.length?this.intercept:this.invoke).call(this,fn,object,call,options);return this.instrument(result,{...options,mutate:!0,path:[{__callId__:call.id}]})}intercept(fn,object,call,options){let{chainedCallIds,isDebugging,playUntil}=this.getState(call.storyId),isChainedUpon=chainedCallIds.has(call.id);return !isDebugging||isChainedUpon||playUntil?(playUntil===call.id&&this.setState(call.storyId,{playUntil:void 0}),this.invoke(fn,object,call,options)):new Promise(resolve=>{this.setState(call.storyId,({resolvers})=>({isLocked:!1,resolvers:{...resolvers,[call.id]:resolve}}));}).then(()=>(this.setState(call.storyId,state=>{let{[call.id]:_,...resolvers}=state.resolvers;return {isLocked:!0,resolvers}}),this.invoke(fn,object,call,options)))}invoke(fn,object,call,options){let{callRefsByResult,renderPhase}=this.getState(call.storyId),maximumDepth=25,serializeValues=(value,depth,seen)=>{if(seen.includes(value))return "[Circular]";if(seen=[...seen,value],depth>maximumDepth)return "...";if(callRefsByResult.has(value))return callRefsByResult.get(value);if(value instanceof Array)return value.map(it=>serializeValues(it,++depth,seen));if(value instanceof Date)return {__date__:{value:value.toISOString()}};if(value instanceof Error){let{name,message,stack}=value;return {__error__:{name,message,stack}}}if(value instanceof RegExp){let{flags,source}=value;return {__regexp__:{flags,source}}}if(value instanceof _storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window?.HTMLElement){let{prefix,localName,id,classList,innerText}=value,classNames=Array.from(classList);return {__element__:{prefix,localName,id,classNames,innerText}}}return typeof value=="function"?{__function__:{name:"getMockName"in value?value.getMockName():value.name}}:typeof value=="symbol"?{__symbol__:{description:value.description}}:typeof value=="object"&&value?.constructor?.name&&value?.constructor?.name!=="Object"?{__class__:{name:value.constructor.name}}:Object.prototype.toString.call(value)==="[object Object]"?Object.fromEntries(Object.entries(value).map(([key,val])=>[key,serializeValues(val,++depth,seen)])):value},info={...call,args:call.args.map(arg=>serializeValues(arg,0,[]))};call.path.forEach(ref=>{ref?.__callId__&&this.setState(call.storyId,({chainedCallIds})=>({chainedCallIds:new Set(Array.from(chainedCallIds).concat(ref.__callId__))}));});let handleException=e=>{if(e instanceof Error){let{name,message,stack,callId=call.id}=e,{showDiff=void 0,diff:diff2=void 0,actual=void 0,expected=void 0}=e.name==="AssertionError"?processError(e):e,exception={name,message,stack,callId,showDiff,diff:diff2,actual,expected};if(this.update({...info,status:"error",exception}),this.setState(call.storyId,state=>({callRefsByResult:new Map([...Array.from(state.callRefsByResult.entries()),[e,{__callId__:call.id,retain:call.retain}]])})),call.ancestors?.length)throw Object.prototype.hasOwnProperty.call(e,"callId")||Object.defineProperty(e,"callId",{value:call.id}),e}throw e};try{if(renderPhase==="played"&&!call.retain)throw alreadyCompletedException;let finalArgs=(options.getArgs?options.getArgs(call,this.getState(call.storyId)):call.args).map(arg=>typeof arg!="function"||Object.keys(arg).length?arg:(...args)=>{let{cursor,ancestors}=this.getState(call.storyId);this.setState(call.storyId,{cursor:0,ancestors:[...ancestors,call.id]});let restore=()=>this.setState(call.storyId,{cursor,ancestors}),willRestore=!1;try{let res=arg(...args);return res instanceof Promise?(willRestore=!0,res.finally(restore)):res}finally{willRestore||restore();}}),result=fn.apply(object,finalArgs);return result&&["object","function","symbol"].includes(typeof result)&&this.setState(call.storyId,state=>({callRefsByResult:new Map([...Array.from(state.callRefsByResult.entries()),[result,{__callId__:call.id,retain:call.retain}]])})),this.update({...info,status:result instanceof Promise?"active":"done"}),result instanceof Promise?result.then(value=>(this.update({...info,status:"done"}),value),handleException):result}catch(e){return handleException(e)}}update(call){this.channel.emit(EVENTS.CALL,call),this.setState(call.storyId,({calls})=>{let callsById=calls.concat(call).reduce((a2,c)=>Object.assign(a2,{[c.id]:c}),{});return {calls:Object.values(callsById).sort((a2,b)=>a2.id.localeCompare(b.id,void 0,{numeric:!0}))}}),this.sync(call.storyId);}sync(storyId){let synchronize=()=>{let{isLocked,isPlaying}=this.getState(storyId),logItems=this.getLog(storyId),pausedAt=logItems.filter(({ancestors})=>!ancestors.length).find(item=>item.status==="waiting")?.callId,hasActive=logItems.some(item=>item.status==="active");if(isLocked||hasActive||logItems.length===0){let payload2={controlStates:controlsDisabled,logItems};this.channel.emit(EVENTS.SYNC,payload2);return}let hasPrevious=logItems.some(item=>item.status==="done"||item.status==="error"),payload={controlStates:{start:hasPrevious,back:hasPrevious,goto:!0,next:isPlaying,end:isPlaying},logItems,pausedAt};this.channel.emit(EVENTS.SYNC,payload);};this.setState(storyId,({syncTimeout})=>(clearTimeout(syncTimeout),{syncTimeout:setTimeout(synchronize,0)}));}};function instrument(obj,options={}){try{let forceInstrument=!1,skipInstrument=!1;return _storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window?.location?.search?.includes("instrument=true")?forceInstrument=!0:_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window?.location?.search?.includes("instrument=false")&&(skipInstrument=!0),_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window?.parent===_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window&&!forceInstrument||skipInstrument?obj:(_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window&&!_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER__&&(_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER__=new Instrumenter),(_storybook_global__WEBPACK_IMPORTED_MODULE_3__.global.window?.__STORYBOOK_ADDON_INTERACTIONS_INSTRUMENTER__).instrument(obj,options))}catch(e){return storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_0__.once.warn(e),obj}}function getPropertyDescriptor(obj,propName){let target=obj;for(;target!=null;){let descriptor=Object.getOwnPropertyDescriptor(target,propName);if(descriptor)return descriptor;target=Object.getPrototypeOf(target);}}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+instrumenter@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/instrumenter/dist/index.mjs\n')},"../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/chunk-XP5HYGXS.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E: () => (/* binding */ __esm),\n/* harmony export */   P$: () => (/* binding */ __commonJS),\n/* harmony export */   VA: () => (/* binding */ __export),\n/* harmony export */   Yp: () => (/* binding */ __toCommonJS),\n/* harmony export */   f1: () => (/* binding */ __toESM)\n/* harmony export */ });\nvar __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __esm=(fn,res)=>function(){return fn&&(res=(0, fn[__getOwnPropNames(fn)[0]])(fn=0)),res};var __commonJS=(cb,mod)=>function(){return mod||(0, cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0});},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srcmVhY3RAOC42LjEyX0BzdG9yeWJvb2srdGVzdEA4LjYuMTJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM19fX3JlYWN0LV8wZGNlMjk5MGZkOTFhOTU4MmIzOTg1YTY3ODU5OTdjYS9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9yZWFjdC9kaXN0L2NodW5rLVhQNUhZR1hTLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsMkJBQTJCLG9DQUFvQyxxREFBcUQsaURBQWlELG9GQUFvRiwrQkFBK0IsOERBQThELG9DQUFvQyxvREFBb0QsV0FBVyw0QkFBNEIsNEJBQTRCLDJDQUEyQyw0QkFBNEIsR0FBRyxxQ0FBcUMsMkpBQTJKLGlGQUFpRixFQUFFLFdBQVcscUZBQXFGLDJFQUEyRSx3QkFBd0IseURBQXlELGVBQWUsU0FBUzs7QUFFcGlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQG1pdG8tZm9ybXMvYnVsbWEvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srcmVhY3RAOC42LjEyX0BzdG9yeWJvb2srdGVzdEA4LjYuMTJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM19fX3JlYWN0LV8wZGNlMjk5MGZkOTFhOTU4MmIzOTg1YTY3ODU5OTdjYS9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9yZWFjdC9kaXN0L2NodW5rLVhQNUhZR1hTLm1qcz8xYWM4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2NyZWF0ZT1PYmplY3QuY3JlYXRlO3ZhciBfX2RlZlByb3A9T2JqZWN0LmRlZmluZVByb3BlcnR5O3ZhciBfX2dldE93blByb3BEZXNjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7dmFyIF9fZ2V0T3duUHJvcE5hbWVzPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO3ZhciBfX2dldFByb3RvT2Y9T2JqZWN0LmdldFByb3RvdHlwZU9mLF9faGFzT3duUHJvcD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3ZhciBfX2VzbT0oZm4scmVzKT0+ZnVuY3Rpb24oKXtyZXR1cm4gZm4mJihyZXM9KDAsIGZuW19fZ2V0T3duUHJvcE5hbWVzKGZuKVswXV0pKGZuPTApKSxyZXN9O3ZhciBfX2NvbW1vbkpTPShjYixtb2QpPT5mdW5jdGlvbigpe3JldHVybiBtb2R8fCgwLCBjYltfX2dldE93blByb3BOYW1lcyhjYilbMF1dKSgobW9kPXtleHBvcnRzOnt9fSkuZXhwb3J0cyxtb2QpLG1vZC5leHBvcnRzfTt2YXIgX19leHBvcnQ9KHRhcmdldCxhbGwpPT57Zm9yKHZhciBuYW1lIGluIGFsbClfX2RlZlByb3AodGFyZ2V0LG5hbWUse2dldDphbGxbbmFtZV0sZW51bWVyYWJsZTohMH0pO30sX19jb3B5UHJvcHM9KHRvLGZyb20sZXhjZXB0LGRlc2MpPT57aWYoZnJvbSYmdHlwZW9mIGZyb209PVwib2JqZWN0XCJ8fHR5cGVvZiBmcm9tPT1cImZ1bmN0aW9uXCIpZm9yKGxldCBrZXkgb2YgX19nZXRPd25Qcm9wTmFtZXMoZnJvbSkpIV9faGFzT3duUHJvcC5jYWxsKHRvLGtleSkmJmtleSE9PWV4Y2VwdCYmX19kZWZQcm9wKHRvLGtleSx7Z2V0OigpPT5mcm9tW2tleV0sZW51bWVyYWJsZTohKGRlc2M9X19nZXRPd25Qcm9wRGVzYyhmcm9tLGtleSkpfHxkZXNjLmVudW1lcmFibGV9KTtyZXR1cm4gdG99O3ZhciBfX3RvRVNNPShtb2QsaXNOb2RlTW9kZSx0YXJnZXQpPT4odGFyZ2V0PW1vZCE9bnVsbD9fX2NyZWF0ZShfX2dldFByb3RvT2YobW9kKSk6e30sX19jb3B5UHJvcHMoaXNOb2RlTW9kZXx8IW1vZHx8IW1vZC5fX2VzTW9kdWxlP19fZGVmUHJvcCh0YXJnZXQsXCJkZWZhdWx0XCIse3ZhbHVlOm1vZCxlbnVtZXJhYmxlOiEwfSk6dGFyZ2V0LG1vZCkpLF9fdG9Db21tb25KUz1tb2Q9Pl9fY29weVByb3BzKF9fZGVmUHJvcCh7fSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxtb2QpO1xuXG5leHBvcnQgeyBfX2NvbW1vbkpTLCBfX2VzbSwgX19leHBvcnQsIF9fdG9Db21tb25KUywgX190b0VTTSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/chunk-XP5HYGXS.mjs\n')},"../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/entry-preview-docs.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  applyDecorators: () => (/* reexport */ applyDecorators),\n  argTypesEnhancers: () => (/* reexport */ argTypesEnhancers),\n  decorators: () => (/* reexport */ decorators),\n  parameters: () => (/* reexport */ parameters)\n});\n\n// EXTERNAL MODULE: ../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/chunk-XP5HYGXS.mjs\nvar chunk_XP5HYGXS = __webpack_require__("../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/chunk-XP5HYGXS.mjs");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/@storybook+core@8.6.12_prettier@3.5.3_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/core/dist/docs-tools/index.js\nvar docs_tools = __webpack_require__("../../node_modules/.pnpm/@storybook+core@8.6.12_prettier@3.5.3_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/core/dist/docs-tools/index.js");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js\nvar react = __webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_CLIENT_LOGGER__"\nvar external_STORYBOOK_MODULE_CLIENT_LOGGER_ = __webpack_require__("storybook/internal/client-logger");\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_PREVIEW_API__"\nvar external_STORYBOOK_MODULE_PREVIEW_API_ = __webpack_require__("storybook/internal/preview-api");\n;// ../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/chunk-EWIU6LHT.mjs\n\n\n\n\n\n\n\nvar require_react_is_production_min=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/react-is/cjs/react-is.production.min.js"(exports){var b=typeof Symbol=="function"&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;function z(a){if(typeof a=="object"&&a!==null){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return typeof a=="object"&&a!==null&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};exports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};exports.isValidElementType=function(a){return typeof a=="string"||typeof a=="function"||a===e||a===m||a===g||a===f||a===p||a===q||typeof a=="object"&&a!==null&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;}});var require_react_is_development=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/react-is/cjs/react-is.development.js"(exports){ false&&0;}});var require_react_is=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/react-is/index.js"(exports,module){ true?module.exports=require_react_is_production_min():0;}});var require_object_assign=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/object-assign/index.js"(exports,module){var getOwnPropertySymbols=Object.getOwnPropertySymbols,hasOwnProperty2=Object.prototype.hasOwnProperty,propIsEnumerable=Object.prototype.propertyIsEnumerable;function toObject(val){if(val==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(val)}function shouldUseNative(){try{if(!Object.assign)return !1;var test1=new String("abc");if(test1[5]="de",Object.getOwnPropertyNames(test1)[0]==="5")return !1;for(var test2={},i=0;i<10;i++)test2["_"+String.fromCharCode(i)]=i;var order2=Object.getOwnPropertyNames(test2).map(function(n){return test2[n]});if(order2.join("")!=="0123456789")return !1;var test3={};return "abcdefghijklmnopqrst".split("").forEach(function(letter){test3[letter]=letter;}),Object.keys(Object.assign({},test3)).join("")==="abcdefghijklmnopqrst"}catch{return !1}}module.exports=shouldUseNative()?Object.assign:function(target,source){for(var from,to=toObject(target),symbols,s=1;s<arguments.length;s++){from=Object(arguments[s]);for(var key in from)hasOwnProperty2.call(from,key)&&(to[key]=from[key]);if(getOwnPropertySymbols){symbols=getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++)propIsEnumerable.call(from,symbols[i])&&(to[symbols[i]]=from[symbols[i]]);}}return to};}});var require_ReactPropTypesSecret=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports,module){var ReactPropTypesSecret="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";module.exports=ReactPropTypesSecret;}});var require_has=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/prop-types/lib/has.js"(exports,module){module.exports=Function.call.bind(Object.prototype.hasOwnProperty);}});var require_checkPropTypes=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/prop-types/checkPropTypes.js"(exports,module){var printWarning=function(){}; false&&(0);var ReactPropTypesSecret,loggedTypeFailures,has2;function checkPropTypes(typeSpecs,values,location,componentName,getStack){if(false){ var stack, err, error, typeSpecName; }}checkPropTypes.resetWarningCache=function(){ false&&(0);};module.exports=checkPropTypes;}});var require_factoryWithTypeCheckers=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/prop-types/factoryWithTypeCheckers.js"(exports,module){var ReactIs=require_react_is(),assign=require_object_assign(),ReactPropTypesSecret=require_ReactPropTypesSecret(),has2=require_has(),checkPropTypes=require_checkPropTypes(),printWarning=function(){}; false&&(0);function emptyFunctionThatReturnsNull(){return null}module.exports=function(isValidElement4,throwOnDirectAccess){var ITERATOR_SYMBOL=typeof Symbol=="function"&&Symbol.iterator,FAUX_ITERATOR_SYMBOL="@@iterator";function getIteratorFn(maybeIterable){var iteratorFn=maybeIterable&&(ITERATOR_SYMBOL&&maybeIterable[ITERATOR_SYMBOL]||maybeIterable[FAUX_ITERATOR_SYMBOL]);if(typeof iteratorFn=="function")return iteratorFn}var ANONYMOUS="<<anonymous>>",ReactPropTypes={array:createPrimitiveTypeChecker("array"),bigint:createPrimitiveTypeChecker("bigint"),bool:createPrimitiveTypeChecker("boolean"),func:createPrimitiveTypeChecker("function"),number:createPrimitiveTypeChecker("number"),object:createPrimitiveTypeChecker("object"),string:createPrimitiveTypeChecker("string"),symbol:createPrimitiveTypeChecker("symbol"),any:createAnyTypeChecker(),arrayOf:createArrayOfTypeChecker,element:createElementTypeChecker(),elementType:createElementTypeTypeChecker(),instanceOf:createInstanceTypeChecker,node:createNodeChecker(),objectOf:createObjectOfTypeChecker,oneOf:createEnumTypeChecker,oneOfType:createUnionTypeChecker,shape:createShapeTypeChecker,exact:createStrictShapeTypeChecker};function is(x,y){return x===y?x!==0||1/x===1/y:x!==x&&y!==y}function PropTypeError(message,data2){this.message=message,this.data=data2&&typeof data2=="object"?data2:{},this.stack="";}PropTypeError.prototype=Error.prototype;function createChainableTypeChecker(validate){if(false){ var manualPropTypeCallCache, manualPropTypeWarningCount; }function checkType(isRequired,props,propName,componentName,location,propFullName,secret){if(componentName=componentName||ANONYMOUS,propFullName=propFullName||propName,secret!==ReactPropTypesSecret){if(throwOnDirectAccess){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}else if(false){ var cacheKey; }}return props[propName]==null?isRequired?props[propName]===null?new PropTypeError("The "+location+" `"+propFullName+"` is marked as required "+("in `"+componentName+"`, but its value is `null`.")):new PropTypeError("The "+location+" `"+propFullName+"` is marked as required in "+("`"+componentName+"`, but its value is `undefined`.")):null:validate(props,propName,componentName,location,propFullName)}var chainedCheckType=checkType.bind(null,!1);return chainedCheckType.isRequired=checkType.bind(null,!0),chainedCheckType}function createPrimitiveTypeChecker(expectedType){function validate(props,propName,componentName,location,propFullName,secret){var propValue=props[propName],propType=getPropType(propValue);if(propType!==expectedType){var preciseType=getPreciseType(propValue);return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type "+("`"+preciseType+"` supplied to `"+componentName+"`, expected ")+("`"+expectedType+"`."),{expectedType})}return null}return createChainableTypeChecker(validate)}function createAnyTypeChecker(){return createChainableTypeChecker(emptyFunctionThatReturnsNull)}function createArrayOfTypeChecker(typeChecker){function validate(props,propName,componentName,location,propFullName){if(typeof typeChecker!="function")return new PropTypeError("Property `"+propFullName+"` of component `"+componentName+"` has invalid PropType notation inside arrayOf.");var propValue=props[propName];if(!Array.isArray(propValue)){var propType=getPropType(propValue);return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type "+("`"+propType+"` supplied to `"+componentName+"`, expected an array."))}for(var i=0;i<propValue.length;i++){var error=typeChecker(propValue,i,componentName,location,propFullName+"["+i+"]",ReactPropTypesSecret);if(error instanceof Error)return error}return null}return createChainableTypeChecker(validate)}function createElementTypeChecker(){function validate(props,propName,componentName,location,propFullName){var propValue=props[propName];if(!isValidElement4(propValue)){var propType=getPropType(propValue);return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type "+("`"+propType+"` supplied to `"+componentName+"`, expected a single ReactElement."))}return null}return createChainableTypeChecker(validate)}function createElementTypeTypeChecker(){function validate(props,propName,componentName,location,propFullName){var propValue=props[propName];if(!ReactIs.isValidElementType(propValue)){var propType=getPropType(propValue);return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type "+("`"+propType+"` supplied to `"+componentName+"`, expected a single ReactElement type."))}return null}return createChainableTypeChecker(validate)}function createInstanceTypeChecker(expectedClass){function validate(props,propName,componentName,location,propFullName){if(!(props[propName]instanceof expectedClass)){var expectedClassName=expectedClass.name||ANONYMOUS,actualClassName=getClassName(props[propName]);return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type "+("`"+actualClassName+"` supplied to `"+componentName+"`, expected ")+("instance of `"+expectedClassName+"`."))}return null}return createChainableTypeChecker(validate)}function createEnumTypeChecker(expectedValues){if(!Array.isArray(expectedValues))return  false&&(0),emptyFunctionThatReturnsNull;function validate(props,propName,componentName,location,propFullName){for(var propValue=props[propName],i=0;i<expectedValues.length;i++)if(is(propValue,expectedValues[i]))return null;var valuesString=JSON.stringify(expectedValues,function(key,value){var type=getPreciseType(value);return type==="symbol"?String(value):value});return new PropTypeError("Invalid "+location+" `"+propFullName+"` of value `"+String(propValue)+"` "+("supplied to `"+componentName+"`, expected one of "+valuesString+"."))}return createChainableTypeChecker(validate)}function createObjectOfTypeChecker(typeChecker){function validate(props,propName,componentName,location,propFullName){if(typeof typeChecker!="function")return new PropTypeError("Property `"+propFullName+"` of component `"+componentName+"` has invalid PropType notation inside objectOf.");var propValue=props[propName],propType=getPropType(propValue);if(propType!=="object")return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type "+("`"+propType+"` supplied to `"+componentName+"`, expected an object."));for(var key in propValue)if(has2(propValue,key)){var error=typeChecker(propValue,key,componentName,location,propFullName+"."+key,ReactPropTypesSecret);if(error instanceof Error)return error}return null}return createChainableTypeChecker(validate)}function createUnionTypeChecker(arrayOfTypeCheckers){if(!Array.isArray(arrayOfTypeCheckers))return  false&&0,emptyFunctionThatReturnsNull;for(var i=0;i<arrayOfTypeCheckers.length;i++){var checker=arrayOfTypeCheckers[i];if(typeof checker!="function")return printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received "+getPostfixForTypeWarning(checker)+" at index "+i+"."),emptyFunctionThatReturnsNull}function validate(props,propName,componentName,location,propFullName){for(var expectedTypes=[],i2=0;i2<arrayOfTypeCheckers.length;i2++){var checker2=arrayOfTypeCheckers[i2],checkerResult=checker2(props,propName,componentName,location,propFullName,ReactPropTypesSecret);if(checkerResult==null)return null;checkerResult.data&&has2(checkerResult.data,"expectedType")&&expectedTypes.push(checkerResult.data.expectedType);}var expectedTypesMessage=expectedTypes.length>0?", expected one of type ["+expectedTypes.join(", ")+"]":"";return new PropTypeError("Invalid "+location+" `"+propFullName+"` supplied to "+("`"+componentName+"`"+expectedTypesMessage+"."))}return createChainableTypeChecker(validate)}function createNodeChecker(){function validate(props,propName,componentName,location,propFullName){return isNode(props[propName])?null:new PropTypeError("Invalid "+location+" `"+propFullName+"` supplied to "+("`"+componentName+"`, expected a ReactNode."))}return createChainableTypeChecker(validate)}function invalidValidatorError(componentName,location,propFullName,key,type){return new PropTypeError((componentName||"React class")+": "+location+" type `"+propFullName+"."+key+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+type+"`.")}function createShapeTypeChecker(shapeTypes){function validate(props,propName,componentName,location,propFullName){var propValue=props[propName],propType=getPropType(propValue);if(propType!=="object")return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+propType+"` "+("supplied to `"+componentName+"`, expected `object`."));for(var key in shapeTypes){var checker=shapeTypes[key];if(typeof checker!="function")return invalidValidatorError(componentName,location,propFullName,key,getPreciseType(checker));var error=checker(propValue,key,componentName,location,propFullName+"."+key,ReactPropTypesSecret);if(error)return error}return null}return createChainableTypeChecker(validate)}function createStrictShapeTypeChecker(shapeTypes){function validate(props,propName,componentName,location,propFullName){var propValue=props[propName],propType=getPropType(propValue);if(propType!=="object")return new PropTypeError("Invalid "+location+" `"+propFullName+"` of type `"+propType+"` "+("supplied to `"+componentName+"`, expected `object`."));var allKeys=assign({},props[propName],shapeTypes);for(var key in allKeys){var checker=shapeTypes[key];if(has2(shapeTypes,key)&&typeof checker!="function")return invalidValidatorError(componentName,location,propFullName,key,getPreciseType(checker));if(!checker)return new PropTypeError("Invalid "+location+" `"+propFullName+"` key `"+key+"` supplied to `"+componentName+"`.\\nBad object: "+JSON.stringify(props[propName],null,"  ")+`\nValid keys: `+JSON.stringify(Object.keys(shapeTypes),null,"  "));var error=checker(propValue,key,componentName,location,propFullName+"."+key,ReactPropTypesSecret);if(error)return error}return null}return createChainableTypeChecker(validate)}function isNode(propValue){switch(typeof propValue){case"number":case"string":case"undefined":return !0;case"boolean":return !propValue;case"object":if(Array.isArray(propValue))return propValue.every(isNode);if(propValue===null||isValidElement4(propValue))return !0;var iteratorFn=getIteratorFn(propValue);if(iteratorFn){var iterator=iteratorFn.call(propValue),step;if(iteratorFn!==propValue.entries){for(;!(step=iterator.next()).done;)if(!isNode(step.value))return !1}else for(;!(step=iterator.next()).done;){var entry=step.value;if(entry&&!isNode(entry[1]))return !1}}else return !1;return !0;default:return !1}}function isSymbol(propType,propValue){return propType==="symbol"?!0:propValue?propValue["@@toStringTag"]==="Symbol"||typeof Symbol=="function"&&propValue instanceof Symbol:!1}function getPropType(propValue){var propType=typeof propValue;return Array.isArray(propValue)?"array":propValue instanceof RegExp?"object":isSymbol(propType,propValue)?"symbol":propType}function getPreciseType(propValue){if(typeof propValue>"u"||propValue===null)return ""+propValue;var propType=getPropType(propValue);if(propType==="object"){if(propValue instanceof Date)return "date";if(propValue instanceof RegExp)return "regexp"}return propType}function getPostfixForTypeWarning(value){var type=getPreciseType(value);switch(type){case"array":case"object":return "an "+type;case"boolean":case"date":case"regexp":return "a "+type;default:return type}}function getClassName(propValue){return !propValue.constructor||!propValue.constructor.name?ANONYMOUS:propValue.constructor.name}return ReactPropTypes.checkPropTypes=checkPropTypes,ReactPropTypes.resetWarningCache=checkPropTypes.resetWarningCache,ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes};}});var require_factoryWithThrowingShims=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/prop-types/factoryWithThrowingShims.js"(exports,module){var ReactPropTypesSecret=require_ReactPropTypesSecret();function emptyFunction(){}function emptyFunctionWithReset(){}emptyFunctionWithReset.resetWarningCache=emptyFunction;module.exports=function(){function shim(props,propName,componentName,location,propFullName,secret){if(secret!==ReactPropTypesSecret){var err=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw err.name="Invariant Violation",err}}shim.isRequired=shim;function getShim(){return shim}var ReactPropTypes={array:shim,bigint:shim,bool:shim,func:shim,number:shim,object:shim,string:shim,symbol:shim,any:shim,arrayOf:getShim,element:shim,elementType:shim,instanceOf:getShim,node:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,exact:getShim,checkPropTypes:emptyFunctionWithReset,resetWarningCache:emptyFunction};return ReactPropTypes.PropTypes=ReactPropTypes,ReactPropTypes};}});var require_prop_types=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/prop-types/index.js"(exports,module){ false?(0):module.exports=require_factoryWithThrowingShims()();var ReactIs,throwOnDirectAccess;}});var require_html_tags=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/html-tags/html-tags.json"(exports,module){module.exports=["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","label","legend","li","link","main","map","mark","math","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rb","rp","rt","rtc","ruby","s","samp","script","search","section","select","slot","small","source","span","strong","style","sub","summary","sup","svg","table","tbody","td","template","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr"];}});var require_html_tags2=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/html-tags/index.js"(exports,module){module.exports=require_html_tags();}});var require_estraverse=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/estraverse/estraverse.js"(exports){(function clone(exports2){var Syntax,VisitorOption,VisitorKeys,BREAK,SKIP,REMOVE;function deepCopy(obj){var ret={},key,val;for(key in obj)obj.hasOwnProperty(key)&&(val=obj[key],typeof val=="object"&&val!==null?ret[key]=deepCopy(val):ret[key]=val);return ret}function upperBound(array,func){var diff,len,i,current2;for(len=array.length,i=0;len;)diff=len>>>1,current2=i+diff,func(array[current2])?len=diff:(i=current2+1,len-=diff+1);return i}Syntax={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ChainExpression:"ChainExpression",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ComprehensionBlock:"ComprehensionBlock",ComprehensionExpression:"ComprehensionExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DebuggerStatement:"DebuggerStatement",DirectiveStatement:"DirectiveStatement",DoWhileStatement:"DoWhileStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",ForOfStatement:"ForOfStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",GeneratorExpression:"GeneratorExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportExpression:"ImportExpression",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",ModuleSpecifier:"ModuleSpecifier",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",PrivateIdentifier:"PrivateIdentifier",Program:"Program",Property:"Property",PropertyDefinition:"PropertyDefinition",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"},VisitorKeys={AssignmentExpression:["left","right"],AssignmentPattern:["left","right"],ArrayExpression:["elements"],ArrayPattern:["elements"],ArrowFunctionExpression:["params","body"],AwaitExpression:["argument"],BlockStatement:["body"],BinaryExpression:["left","right"],BreakStatement:["label"],CallExpression:["callee","arguments"],CatchClause:["param","body"],ChainExpression:["expression"],ClassBody:["body"],ClassDeclaration:["id","superClass","body"],ClassExpression:["id","superClass","body"],ComprehensionBlock:["left","right"],ComprehensionExpression:["blocks","filter","body"],ConditionalExpression:["test","consequent","alternate"],ContinueStatement:["label"],DebuggerStatement:[],DirectiveStatement:[],DoWhileStatement:["body","test"],EmptyStatement:[],ExportAllDeclaration:["source"],ExportDefaultDeclaration:["declaration"],ExportNamedDeclaration:["declaration","specifiers","source"],ExportSpecifier:["exported","local"],ExpressionStatement:["expression"],ForStatement:["init","test","update","body"],ForInStatement:["left","right","body"],ForOfStatement:["left","right","body"],FunctionDeclaration:["id","params","body"],FunctionExpression:["id","params","body"],GeneratorExpression:["blocks","filter","body"],Identifier:[],IfStatement:["test","consequent","alternate"],ImportExpression:["source"],ImportDeclaration:["specifiers","source"],ImportDefaultSpecifier:["local"],ImportNamespaceSpecifier:["local"],ImportSpecifier:["imported","local"],Literal:[],LabeledStatement:["label","body"],LogicalExpression:["left","right"],MemberExpression:["object","property"],MetaProperty:["meta","property"],MethodDefinition:["key","value"],ModuleSpecifier:[],NewExpression:["callee","arguments"],ObjectExpression:["properties"],ObjectPattern:["properties"],PrivateIdentifier:[],Program:["body"],Property:["key","value"],PropertyDefinition:["key","value"],RestElement:["argument"],ReturnStatement:["argument"],SequenceExpression:["expressions"],SpreadElement:["argument"],Super:[],SwitchStatement:["discriminant","cases"],SwitchCase:["test","consequent"],TaggedTemplateExpression:["tag","quasi"],TemplateElement:[],TemplateLiteral:["quasis","expressions"],ThisExpression:[],ThrowStatement:["argument"],TryStatement:["block","handler","finalizer"],UnaryExpression:["argument"],UpdateExpression:["argument"],VariableDeclaration:["declarations"],VariableDeclarator:["id","init"],WhileStatement:["test","body"],WithStatement:["object","body"],YieldExpression:["argument"]},BREAK={},SKIP={},REMOVE={},VisitorOption={Break:BREAK,Skip:SKIP,Remove:REMOVE};function Reference(parent,key){this.parent=parent,this.key=key;}Reference.prototype.replace=function(node){this.parent[this.key]=node;},Reference.prototype.remove=function(){return Array.isArray(this.parent)?(this.parent.splice(this.key,1),!0):(this.replace(null),!1)};function Element(node,path,wrap,ref2){this.node=node,this.path=path,this.wrap=wrap,this.ref=ref2;}function Controller(){}Controller.prototype.path=function(){var i,iz,j,jz,result,element;function addToPath(result2,path2){if(Array.isArray(path2))for(j=0,jz=path2.length;j<jz;++j)result2.push(path2[j]);else result2.push(path2);}if(!this.__current.path)return null;for(result=[],i=2,iz=this.__leavelist.length;i<iz;++i)element=this.__leavelist[i],addToPath(result,element.path);return addToPath(result,this.__current.path),result},Controller.prototype.type=function(){var node=this.current();return node.type||this.__current.wrap},Controller.prototype.parents=function(){var i,iz,result;for(result=[],i=1,iz=this.__leavelist.length;i<iz;++i)result.push(this.__leavelist[i].node);return result},Controller.prototype.current=function(){return this.__current.node},Controller.prototype.__execute=function(callback,element){var previous,result;return result=void 0,previous=this.__current,this.__current=element,this.__state=null,callback&&(result=callback.call(this,element.node,this.__leavelist[this.__leavelist.length-1].node)),this.__current=previous,result},Controller.prototype.notify=function(flag){this.__state=flag;},Controller.prototype.skip=function(){this.notify(SKIP);},Controller.prototype.break=function(){this.notify(BREAK);},Controller.prototype.remove=function(){this.notify(REMOVE);},Controller.prototype.__initialize=function(root,visitor){this.visitor=visitor,this.root=root,this.__worklist=[],this.__leavelist=[],this.__current=null,this.__state=null,this.__fallback=null,visitor.fallback==="iteration"?this.__fallback=Object.keys:typeof visitor.fallback=="function"&&(this.__fallback=visitor.fallback),this.__keys=VisitorKeys,visitor.keys&&(this.__keys=Object.assign(Object.create(this.__keys),visitor.keys));};function isNode(node){return node==null?!1:typeof node=="object"&&typeof node.type=="string"}function isProperty(nodeType,key){return (nodeType===Syntax.ObjectExpression||nodeType===Syntax.ObjectPattern)&&key==="properties"}function candidateExistsInLeaveList(leavelist,candidate){for(var i=leavelist.length-1;i>=0;--i)if(leavelist[i].node===candidate)return !0;return !1}Controller.prototype.traverse=function(root,visitor){var worklist,leavelist,element,node,nodeType,ret,key,current2,current22,candidates,candidate,sentinel;for(this.__initialize(root,visitor),sentinel={},worklist=this.__worklist,leavelist=this.__leavelist,worklist.push(new Element(root,null,null,null)),leavelist.push(new Element(null,null,null,null));worklist.length;){if(element=worklist.pop(),element===sentinel){if(element=leavelist.pop(),ret=this.__execute(visitor.leave,element),this.__state===BREAK||ret===BREAK)return;continue}if(element.node){if(ret=this.__execute(visitor.enter,element),this.__state===BREAK||ret===BREAK)return;if(worklist.push(sentinel),leavelist.push(element),this.__state===SKIP||ret===SKIP)continue;if(node=element.node,nodeType=node.type||element.wrap,candidates=this.__keys[nodeType],!candidates)if(this.__fallback)candidates=this.__fallback(node);else throw new Error("Unknown node type "+nodeType+".");for(current2=candidates.length;(current2-=1)>=0;)if(key=candidates[current2],candidate=node[key],!!candidate){if(Array.isArray(candidate)){for(current22=candidate.length;(current22-=1)>=0;)if(candidate[current22]&&!candidateExistsInLeaveList(leavelist,candidate[current22])){if(isProperty(nodeType,candidates[current2]))element=new Element(candidate[current22],[key,current22],"Property",null);else if(isNode(candidate[current22]))element=new Element(candidate[current22],[key,current22],null,null);else continue;worklist.push(element);}}else if(isNode(candidate)){if(candidateExistsInLeaveList(leavelist,candidate))continue;worklist.push(new Element(candidate,key,null,null));}}}}},Controller.prototype.replace=function(root,visitor){var worklist,leavelist,node,nodeType,target,element,current2,current22,candidates,candidate,sentinel,outer,key;function removeElem(element2){var i,key2,nextElem,parent;if(element2.ref.remove()){for(key2=element2.ref.key,parent=element2.ref.parent,i=worklist.length;i--;)if(nextElem=worklist[i],nextElem.ref&&nextElem.ref.parent===parent){if(nextElem.ref.key<key2)break;--nextElem.ref.key;}}}for(this.__initialize(root,visitor),sentinel={},worklist=this.__worklist,leavelist=this.__leavelist,outer={root},element=new Element(root,null,null,new Reference(outer,"root")),worklist.push(element),leavelist.push(element);worklist.length;){if(element=worklist.pop(),element===sentinel){if(element=leavelist.pop(),target=this.__execute(visitor.leave,element),target!==void 0&&target!==BREAK&&target!==SKIP&&target!==REMOVE&&element.ref.replace(target),(this.__state===REMOVE||target===REMOVE)&&removeElem(element),this.__state===BREAK||target===BREAK)return outer.root;continue}if(target=this.__execute(visitor.enter,element),target!==void 0&&target!==BREAK&&target!==SKIP&&target!==REMOVE&&(element.ref.replace(target),element.node=target),(this.__state===REMOVE||target===REMOVE)&&(removeElem(element),element.node=null),this.__state===BREAK||target===BREAK)return outer.root;if(node=element.node,!!node&&(worklist.push(sentinel),leavelist.push(element),!(this.__state===SKIP||target===SKIP))){if(nodeType=node.type||element.wrap,candidates=this.__keys[nodeType],!candidates)if(this.__fallback)candidates=this.__fallback(node);else throw new Error("Unknown node type "+nodeType+".");for(current2=candidates.length;(current2-=1)>=0;)if(key=candidates[current2],candidate=node[key],!!candidate)if(Array.isArray(candidate)){for(current22=candidate.length;(current22-=1)>=0;)if(candidate[current22]){if(isProperty(nodeType,candidates[current2]))element=new Element(candidate[current22],[key,current22],"Property",new Reference(candidate,current22));else if(isNode(candidate[current22]))element=new Element(candidate[current22],[key,current22],null,new Reference(candidate,current22));else continue;worklist.push(element);}}else isNode(candidate)&&worklist.push(new Element(candidate,key,null,new Reference(node,key)));}}return outer.root};function traverse(root,visitor){var controller=new Controller;return controller.traverse(root,visitor)}function replace(root,visitor){var controller=new Controller;return controller.replace(root,visitor)}function extendCommentRange(comment,tokens){var target;return target=upperBound(tokens,function(token){return token.range[0]>comment.range[0]}),comment.extendedRange=[comment.range[0],comment.range[1]],target!==tokens.length&&(comment.extendedRange[1]=tokens[target].range[0]),target-=1,target>=0&&(comment.extendedRange[0]=tokens[target].range[1]),comment}function attachComments(tree,providedComments,tokens){var comments=[],comment,len,i,cursor;if(!tree.range)throw new Error("attachComments needs range information");if(!tokens.length){if(providedComments.length){for(i=0,len=providedComments.length;i<len;i+=1)comment=deepCopy(providedComments[i]),comment.extendedRange=[0,tree.range[0]],comments.push(comment);tree.leadingComments=comments;}return tree}for(i=0,len=providedComments.length;i<len;i+=1)comments.push(extendCommentRange(deepCopy(providedComments[i]),tokens));return cursor=0,traverse(tree,{enter:function(node){for(var comment2;cursor<comments.length&&(comment2=comments[cursor],!(comment2.extendedRange[1]>node.range[0]));)comment2.extendedRange[1]===node.range[0]?(node.leadingComments||(node.leadingComments=[]),node.leadingComments.push(comment2),comments.splice(cursor,1)):cursor+=1;if(cursor===comments.length)return VisitorOption.Break;if(comments[cursor].extendedRange[0]>node.range[1])return VisitorOption.Skip}}),cursor=0,traverse(tree,{leave:function(node){for(var comment2;cursor<comments.length&&(comment2=comments[cursor],!(node.range[1]<comment2.extendedRange[0]));)node.range[1]===comment2.extendedRange[0]?(node.trailingComments||(node.trailingComments=[]),node.trailingComments.push(comment2),comments.splice(cursor,1)):cursor+=1;if(cursor===comments.length)return VisitorOption.Break;if(comments[cursor].extendedRange[0]>node.range[1])return VisitorOption.Skip}}),tree}return exports2.Syntax=Syntax,exports2.traverse=traverse,exports2.replace=replace,exports2.attachComments=attachComments,exports2.VisitorKeys=VisitorKeys,exports2.VisitorOption=VisitorOption,exports2.Controller=Controller,exports2.cloneEnvironment=function(){return clone({})},exports2})(exports);}});var require_ast=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/esutils/lib/ast.js"(exports,module){(function(){function isExpression(node){if(node==null)return !1;switch(node.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return !0}return !1}function isIterationStatement(node){if(node==null)return !1;switch(node.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return !0}return !1}function isStatement(node){if(node==null)return !1;switch(node.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return !0}return !1}function isSourceElement(node){return isStatement(node)||node!=null&&node.type==="FunctionDeclaration"}function trailingStatement(node){switch(node.type){case"IfStatement":return node.alternate!=null?node.alternate:node.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return node.body}return null}function isProblematicIfStatement(node){var current2;if(node.type!=="IfStatement"||node.alternate==null)return !1;current2=node.consequent;do{if(current2.type==="IfStatement"&&current2.alternate==null)return !0;current2=trailingStatement(current2);}while(current2);return !1}module.exports={isExpression,isStatement,isIterationStatement,isSourceElement,isProblematicIfStatement,trailingStatement};})();}});var require_code=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/esutils/lib/code.js"(exports,module){(function(){var ES6Regex,ES5Regex,NON_ASCII_WHITESPACES,IDENTIFIER_START,IDENTIFIER_PART,ch;ES5Regex={NonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,NonAsciiIdentifierPart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/},ES6Regex={NonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]/,NonAsciiIdentifierPart:/[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/};function isDecimalDigit2(ch2){return 48<=ch2&&ch2<=57}function isHexDigit2(ch2){return 48<=ch2&&ch2<=57||97<=ch2&&ch2<=102||65<=ch2&&ch2<=70}function isOctalDigit2(ch2){return ch2>=48&&ch2<=55}NON_ASCII_WHITESPACES=[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279];function isWhiteSpace(ch2){return ch2===32||ch2===9||ch2===11||ch2===12||ch2===160||ch2>=5760&&NON_ASCII_WHITESPACES.indexOf(ch2)>=0}function isLineTerminator(ch2){return ch2===10||ch2===13||ch2===8232||ch2===8233}function fromCodePoint(cp){if(cp<=65535)return String.fromCharCode(cp);var cu1=String.fromCharCode(Math.floor((cp-65536)/1024)+55296),cu2=String.fromCharCode((cp-65536)%1024+56320);return cu1+cu2}for(IDENTIFIER_START=new Array(128),ch=0;ch<128;++ch)IDENTIFIER_START[ch]=ch>=97&&ch<=122||ch>=65&&ch<=90||ch===36||ch===95;for(IDENTIFIER_PART=new Array(128),ch=0;ch<128;++ch)IDENTIFIER_PART[ch]=ch>=97&&ch<=122||ch>=65&&ch<=90||ch>=48&&ch<=57||ch===36||ch===95;function isIdentifierStartES5(ch2){return ch2<128?IDENTIFIER_START[ch2]:ES5Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch2))}function isIdentifierPartES5(ch2){return ch2<128?IDENTIFIER_PART[ch2]:ES5Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch2))}function isIdentifierStartES6(ch2){return ch2<128?IDENTIFIER_START[ch2]:ES6Regex.NonAsciiIdentifierStart.test(fromCodePoint(ch2))}function isIdentifierPartES6(ch2){return ch2<128?IDENTIFIER_PART[ch2]:ES6Regex.NonAsciiIdentifierPart.test(fromCodePoint(ch2))}module.exports={isDecimalDigit:isDecimalDigit2,isHexDigit:isHexDigit2,isOctalDigit:isOctalDigit2,isWhiteSpace,isLineTerminator,isIdentifierStartES5,isIdentifierPartES5,isIdentifierStartES6,isIdentifierPartES6};})();}});var require_keyword=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/esutils/lib/keyword.js"(exports,module){(function(){var code=require_code();function isStrictModeReservedWordES6(id){switch(id){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return !0;default:return !1}}function isKeywordES5(id,strict){return !strict&&id==="yield"?!1:isKeywordES6(id,strict)}function isKeywordES6(id,strict){if(strict&&isStrictModeReservedWordES6(id))return !0;switch(id.length){case 2:return id==="if"||id==="in"||id==="do";case 3:return id==="var"||id==="for"||id==="new"||id==="try";case 4:return id==="this"||id==="else"||id==="case"||id==="void"||id==="with"||id==="enum";case 5:return id==="while"||id==="break"||id==="catch"||id==="throw"||id==="const"||id==="yield"||id==="class"||id==="super";case 6:return id==="return"||id==="typeof"||id==="delete"||id==="switch"||id==="export"||id==="import";case 7:return id==="default"||id==="finally"||id==="extends";case 8:return id==="function"||id==="continue"||id==="debugger";case 10:return id==="instanceof";default:return !1}}function isReservedWordES5(id,strict){return id==="null"||id==="true"||id==="false"||isKeywordES5(id,strict)}function isReservedWordES6(id,strict){return id==="null"||id==="true"||id==="false"||isKeywordES6(id,strict)}function isRestrictedWord(id){return id==="eval"||id==="arguments"}function isIdentifierNameES5(id){var i,iz,ch;if(id.length===0||(ch=id.charCodeAt(0),!code.isIdentifierStartES5(ch)))return !1;for(i=1,iz=id.length;i<iz;++i)if(ch=id.charCodeAt(i),!code.isIdentifierPartES5(ch))return !1;return !0}function decodeUtf16(lead,trail){return (lead-55296)*1024+(trail-56320)+65536}function isIdentifierNameES6(id){var i,iz,ch,lowCh,check;if(id.length===0)return !1;for(check=code.isIdentifierStartES6,i=0,iz=id.length;i<iz;++i){if(ch=id.charCodeAt(i),55296<=ch&&ch<=56319){if(++i,i>=iz||(lowCh=id.charCodeAt(i),!(56320<=lowCh&&lowCh<=57343)))return !1;ch=decodeUtf16(ch,lowCh);}if(!check(ch))return !1;check=code.isIdentifierPartES6;}return !0}function isIdentifierES5(id,strict){return isIdentifierNameES5(id)&&!isReservedWordES5(id,strict)}function isIdentifierES6(id,strict){return isIdentifierNameES6(id)&&!isReservedWordES6(id,strict)}module.exports={isKeywordES5,isKeywordES6,isReservedWordES5,isReservedWordES6,isRestrictedWord,isIdentifierNameES5,isIdentifierNameES6,isIdentifierES5,isIdentifierES6};})();}});var require_utils=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/esutils/lib/utils.js"(exports){(function(){exports.ast=require_ast(),exports.code=require_code(),exports.keyword=require_keyword();})();}});var require_base64=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/base64.js"(exports){var intToCharMap="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");exports.encode=function(number){if(0<=number&&number<intToCharMap.length)return intToCharMap[number];throw new TypeError("Must be between 0 and 63: "+number)};exports.decode=function(charCode){var bigA=65,bigZ=90,littleA=97,littleZ=122,zero=48,nine=57,plus=43,slash=47,littleOffset=26,numberOffset=52;return bigA<=charCode&&charCode<=bigZ?charCode-bigA:littleA<=charCode&&charCode<=littleZ?charCode-littleA+littleOffset:zero<=charCode&&charCode<=nine?charCode-zero+numberOffset:charCode==plus?62:charCode==slash?63:-1};}});var require_base64_vlq=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/base64-vlq.js"(exports){var base64=require_base64(),VLQ_BASE_SHIFT=5,VLQ_BASE=1<<VLQ_BASE_SHIFT,VLQ_BASE_MASK=VLQ_BASE-1,VLQ_CONTINUATION_BIT=VLQ_BASE;function toVLQSigned(aValue){return aValue<0?(-aValue<<1)+1:(aValue<<1)+0}function fromVLQSigned(aValue){var isNegative=(aValue&1)===1,shifted=aValue>>1;return isNegative?-shifted:shifted}exports.encode=function(aValue){var encoded="",digit,vlq=toVLQSigned(aValue);do digit=vlq&VLQ_BASE_MASK,vlq>>>=VLQ_BASE_SHIFT,vlq>0&&(digit|=VLQ_CONTINUATION_BIT),encoded+=base64.encode(digit);while(vlq>0);return encoded};exports.decode=function(aStr,aIndex,aOutParam){var strLen=aStr.length,result=0,shift=0,continuation,digit;do{if(aIndex>=strLen)throw new Error("Expected more digits in base 64 VLQ value.");if(digit=base64.decode(aStr.charCodeAt(aIndex++)),digit===-1)throw new Error("Invalid base64 digit: "+aStr.charAt(aIndex-1));continuation=!!(digit&VLQ_CONTINUATION_BIT),digit&=VLQ_BASE_MASK,result=result+(digit<<shift),shift+=VLQ_BASE_SHIFT;}while(continuation);aOutParam.value=fromVLQSigned(result),aOutParam.rest=aIndex;};}});var require_util=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/util.js"(exports){function getArg(aArgs,aName,aDefaultValue){if(aName in aArgs)return aArgs[aName];if(arguments.length===3)return aDefaultValue;throw new Error(\'"\'+aName+\'" is a required argument.\')}exports.getArg=getArg;var urlRegexp=/^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/,dataUrlRegexp=/^data:.+\\,.+$/;function urlParse(aUrl){var match=aUrl.match(urlRegexp);return match?{scheme:match[1],auth:match[2],host:match[3],port:match[4],path:match[5]}:null}exports.urlParse=urlParse;function urlGenerate(aParsedUrl){var url="";return aParsedUrl.scheme&&(url+=aParsedUrl.scheme+":"),url+="//",aParsedUrl.auth&&(url+=aParsedUrl.auth+"@"),aParsedUrl.host&&(url+=aParsedUrl.host),aParsedUrl.port&&(url+=":"+aParsedUrl.port),aParsedUrl.path&&(url+=aParsedUrl.path),url}exports.urlGenerate=urlGenerate;function normalize(aPath){var path=aPath,url=urlParse(aPath);if(url){if(!url.path)return aPath;path=url.path;}for(var isAbsolute=exports.isAbsolute(path),parts=path.split(/\\/+/),part,up=0,i=parts.length-1;i>=0;i--)part=parts[i],part==="."?parts.splice(i,1):part===".."?up++:up>0&&(part===""?(parts.splice(i+1,up),up=0):(parts.splice(i,2),up--));return path=parts.join("/"),path===""&&(path=isAbsolute?"/":"."),url?(url.path=path,urlGenerate(url)):path}exports.normalize=normalize;function join(aRoot,aPath){aRoot===""&&(aRoot="."),aPath===""&&(aPath=".");var aPathUrl=urlParse(aPath),aRootUrl=urlParse(aRoot);if(aRootUrl&&(aRoot=aRootUrl.path||"/"),aPathUrl&&!aPathUrl.scheme)return aRootUrl&&(aPathUrl.scheme=aRootUrl.scheme),urlGenerate(aPathUrl);if(aPathUrl||aPath.match(dataUrlRegexp))return aPath;if(aRootUrl&&!aRootUrl.host&&!aRootUrl.path)return aRootUrl.host=aPath,urlGenerate(aRootUrl);var joined=aPath.charAt(0)==="/"?aPath:normalize(aRoot.replace(/\\/+$/,"")+"/"+aPath);return aRootUrl?(aRootUrl.path=joined,urlGenerate(aRootUrl)):joined}exports.join=join;exports.isAbsolute=function(aPath){return aPath.charAt(0)==="/"||urlRegexp.test(aPath)};function relative(aRoot,aPath){aRoot===""&&(aRoot="."),aRoot=aRoot.replace(/\\/$/,"");for(var level=0;aPath.indexOf(aRoot+"/")!==0;){var index=aRoot.lastIndexOf("/");if(index<0||(aRoot=aRoot.slice(0,index),aRoot.match(/^([^\\/]+:\\/)?\\/*$/)))return aPath;++level;}return Array(level+1).join("../")+aPath.substr(aRoot.length+1)}exports.relative=relative;var supportsNullProto=function(){var obj=Object.create(null);return !("__proto__"in obj)}();function identity(s){return s}function toSetString(aStr){return isProtoString(aStr)?"$"+aStr:aStr}exports.toSetString=supportsNullProto?identity:toSetString;function fromSetString(aStr){return isProtoString(aStr)?aStr.slice(1):aStr}exports.fromSetString=supportsNullProto?identity:fromSetString;function isProtoString(s){if(!s)return !1;var length=s.length;if(length<9||s.charCodeAt(length-1)!==95||s.charCodeAt(length-2)!==95||s.charCodeAt(length-3)!==111||s.charCodeAt(length-4)!==116||s.charCodeAt(length-5)!==111||s.charCodeAt(length-6)!==114||s.charCodeAt(length-7)!==112||s.charCodeAt(length-8)!==95||s.charCodeAt(length-9)!==95)return !1;for(var i=length-10;i>=0;i--)if(s.charCodeAt(i)!==36)return !1;return !0}function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){var cmp=strcmp(mappingA.source,mappingB.source);return cmp!==0||(cmp=mappingA.originalLine-mappingB.originalLine,cmp!==0)||(cmp=mappingA.originalColumn-mappingB.originalColumn,cmp!==0||onlyCompareOriginal)||(cmp=mappingA.generatedColumn-mappingB.generatedColumn,cmp!==0)||(cmp=mappingA.generatedLine-mappingB.generatedLine,cmp!==0)?cmp:strcmp(mappingA.name,mappingB.name)}exports.compareByOriginalPositions=compareByOriginalPositions;function compareByGeneratedPositionsDeflated(mappingA,mappingB,onlyCompareGenerated){var cmp=mappingA.generatedLine-mappingB.generatedLine;return cmp!==0||(cmp=mappingA.generatedColumn-mappingB.generatedColumn,cmp!==0||onlyCompareGenerated)||(cmp=strcmp(mappingA.source,mappingB.source),cmp!==0)||(cmp=mappingA.originalLine-mappingB.originalLine,cmp!==0)||(cmp=mappingA.originalColumn-mappingB.originalColumn,cmp!==0)?cmp:strcmp(mappingA.name,mappingB.name)}exports.compareByGeneratedPositionsDeflated=compareByGeneratedPositionsDeflated;function strcmp(aStr1,aStr2){return aStr1===aStr2?0:aStr1===null?1:aStr2===null?-1:aStr1>aStr2?1:-1}function compareByGeneratedPositionsInflated(mappingA,mappingB){var cmp=mappingA.generatedLine-mappingB.generatedLine;return cmp!==0||(cmp=mappingA.generatedColumn-mappingB.generatedColumn,cmp!==0)||(cmp=strcmp(mappingA.source,mappingB.source),cmp!==0)||(cmp=mappingA.originalLine-mappingB.originalLine,cmp!==0)||(cmp=mappingA.originalColumn-mappingB.originalColumn,cmp!==0)?cmp:strcmp(mappingA.name,mappingB.name)}exports.compareByGeneratedPositionsInflated=compareByGeneratedPositionsInflated;function parseSourceMapInput(str){return JSON.parse(str.replace(/^\\)]}\'[^\\n]*\\n/,""))}exports.parseSourceMapInput=parseSourceMapInput;function computeSourceURL(sourceRoot,sourceURL,sourceMapURL){if(sourceURL=sourceURL||"",sourceRoot&&(sourceRoot[sourceRoot.length-1]!=="/"&&sourceURL[0]!=="/"&&(sourceRoot+="/"),sourceURL=sourceRoot+sourceURL),sourceMapURL){var parsed=urlParse(sourceMapURL);if(!parsed)throw new Error("sourceMapURL could not be parsed");if(parsed.path){var index=parsed.path.lastIndexOf("/");index>=0&&(parsed.path=parsed.path.substring(0,index+1));}sourceURL=join(urlGenerate(parsed),sourceURL);}return normalize(sourceURL)}exports.computeSourceURL=computeSourceURL;}});var require_array_set=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/array-set.js"(exports){var util=require_util(),has2=Object.prototype.hasOwnProperty,hasNativeMap=typeof Map<"u";function ArraySet(){this._array=[],this._set=hasNativeMap?new Map:Object.create(null);}ArraySet.fromArray=function(aArray,aAllowDuplicates){for(var set=new ArraySet,i=0,len=aArray.length;i<len;i++)set.add(aArray[i],aAllowDuplicates);return set};ArraySet.prototype.size=function(){return hasNativeMap?this._set.size:Object.getOwnPropertyNames(this._set).length};ArraySet.prototype.add=function(aStr,aAllowDuplicates){var sStr=hasNativeMap?aStr:util.toSetString(aStr),isDuplicate=hasNativeMap?this.has(aStr):has2.call(this._set,sStr),idx=this._array.length;(!isDuplicate||aAllowDuplicates)&&this._array.push(aStr),isDuplicate||(hasNativeMap?this._set.set(aStr,idx):this._set[sStr]=idx);};ArraySet.prototype.has=function(aStr){if(hasNativeMap)return this._set.has(aStr);var sStr=util.toSetString(aStr);return has2.call(this._set,sStr)};ArraySet.prototype.indexOf=function(aStr){if(hasNativeMap){var idx=this._set.get(aStr);if(idx>=0)return idx}else {var sStr=util.toSetString(aStr);if(has2.call(this._set,sStr))return this._set[sStr]}throw new Error(\'"\'+aStr+\'" is not in the set.\')};ArraySet.prototype.at=function(aIdx){if(aIdx>=0&&aIdx<this._array.length)return this._array[aIdx];throw new Error("No element indexed by "+aIdx)};ArraySet.prototype.toArray=function(){return this._array.slice()};exports.ArraySet=ArraySet;}});var require_mapping_list=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/mapping-list.js"(exports){var util=require_util();function generatedPositionAfter(mappingA,mappingB){var lineA=mappingA.generatedLine,lineB=mappingB.generatedLine,columnA=mappingA.generatedColumn,columnB=mappingB.generatedColumn;return lineB>lineA||lineB==lineA&&columnB>=columnA||util.compareByGeneratedPositionsInflated(mappingA,mappingB)<=0}function MappingList(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0};}MappingList.prototype.unsortedForEach=function(aCallback,aThisArg){this._array.forEach(aCallback,aThisArg);};MappingList.prototype.add=function(aMapping){generatedPositionAfter(this._last,aMapping)?(this._last=aMapping,this._array.push(aMapping)):(this._sorted=!1,this._array.push(aMapping));};MappingList.prototype.toArray=function(){return this._sorted||(this._array.sort(util.compareByGeneratedPositionsInflated),this._sorted=!0),this._array};exports.MappingList=MappingList;}});var require_source_map_generator=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/source-map-generator.js"(exports){var base64VLQ=require_base64_vlq(),util=require_util(),ArraySet=require_array_set().ArraySet,MappingList=require_mapping_list().MappingList;function SourceMapGenerator(aArgs){aArgs||(aArgs={}),this._file=util.getArg(aArgs,"file",null),this._sourceRoot=util.getArg(aArgs,"sourceRoot",null),this._skipValidation=util.getArg(aArgs,"skipValidation",!1),this._sources=new ArraySet,this._names=new ArraySet,this._mappings=new MappingList,this._sourcesContents=null;}SourceMapGenerator.prototype._version=3;SourceMapGenerator.fromSourceMap=function(aSourceMapConsumer){var sourceRoot=aSourceMapConsumer.sourceRoot,generator=new SourceMapGenerator({file:aSourceMapConsumer.file,sourceRoot});return aSourceMapConsumer.eachMapping(function(mapping){var newMapping={generated:{line:mapping.generatedLine,column:mapping.generatedColumn}};mapping.source!=null&&(newMapping.source=mapping.source,sourceRoot!=null&&(newMapping.source=util.relative(sourceRoot,newMapping.source)),newMapping.original={line:mapping.originalLine,column:mapping.originalColumn},mapping.name!=null&&(newMapping.name=mapping.name)),generator.addMapping(newMapping);}),aSourceMapConsumer.sources.forEach(function(sourceFile){var sourceRelative=sourceFile;sourceRoot!==null&&(sourceRelative=util.relative(sourceRoot,sourceFile)),generator._sources.has(sourceRelative)||generator._sources.add(sourceRelative);var content=aSourceMapConsumer.sourceContentFor(sourceFile);content!=null&&generator.setSourceContent(sourceFile,content);}),generator};SourceMapGenerator.prototype.addMapping=function(aArgs){var generated=util.getArg(aArgs,"generated"),original=util.getArg(aArgs,"original",null),source=util.getArg(aArgs,"source",null),name=util.getArg(aArgs,"name",null);this._skipValidation||this._validateMapping(generated,original,source,name),source!=null&&(source=String(source),this._sources.has(source)||this._sources.add(source)),name!=null&&(name=String(name),this._names.has(name)||this._names.add(name)),this._mappings.add({generatedLine:generated.line,generatedColumn:generated.column,originalLine:original!=null&&original.line,originalColumn:original!=null&&original.column,source,name});};SourceMapGenerator.prototype.setSourceContent=function(aSourceFile,aSourceContent){var source=aSourceFile;this._sourceRoot!=null&&(source=util.relative(this._sourceRoot,source)),aSourceContent!=null?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[util.toSetString(source)]=aSourceContent):this._sourcesContents&&(delete this._sourcesContents[util.toSetString(source)],Object.keys(this._sourcesContents).length===0&&(this._sourcesContents=null));};SourceMapGenerator.prototype.applySourceMap=function(aSourceMapConsumer,aSourceFile,aSourceMapPath){var sourceFile=aSourceFile;if(aSourceFile==null){if(aSourceMapConsumer.file==null)throw new Error(`SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.`);sourceFile=aSourceMapConsumer.file;}var sourceRoot=this._sourceRoot;sourceRoot!=null&&(sourceFile=util.relative(sourceRoot,sourceFile));var newSources=new ArraySet,newNames=new ArraySet;this._mappings.unsortedForEach(function(mapping){if(mapping.source===sourceFile&&mapping.originalLine!=null){var original=aSourceMapConsumer.originalPositionFor({line:mapping.originalLine,column:mapping.originalColumn});original.source!=null&&(mapping.source=original.source,aSourceMapPath!=null&&(mapping.source=util.join(aSourceMapPath,mapping.source)),sourceRoot!=null&&(mapping.source=util.relative(sourceRoot,mapping.source)),mapping.originalLine=original.line,mapping.originalColumn=original.column,original.name!=null&&(mapping.name=original.name));}var source=mapping.source;source!=null&&!newSources.has(source)&&newSources.add(source);var name=mapping.name;name!=null&&!newNames.has(name)&&newNames.add(name);},this),this._sources=newSources,this._names=newNames,aSourceMapConsumer.sources.forEach(function(sourceFile2){var content=aSourceMapConsumer.sourceContentFor(sourceFile2);content!=null&&(aSourceMapPath!=null&&(sourceFile2=util.join(aSourceMapPath,sourceFile2)),sourceRoot!=null&&(sourceFile2=util.relative(sourceRoot,sourceFile2)),this.setSourceContent(sourceFile2,content));},this);};SourceMapGenerator.prototype._validateMapping=function(aGenerated,aOriginal,aSource,aName){if(aOriginal&&typeof aOriginal.line!="number"&&typeof aOriginal.column!="number")throw new Error("original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.");if(!(aGenerated&&"line"in aGenerated&&"column"in aGenerated&&aGenerated.line>0&&aGenerated.column>=0&&!aOriginal&&!aSource&&!aName)){if(aGenerated&&"line"in aGenerated&&"column"in aGenerated&&aOriginal&&"line"in aOriginal&&"column"in aOriginal&&aGenerated.line>0&&aGenerated.column>=0&&aOriginal.line>0&&aOriginal.column>=0&&aSource)return;throw new Error("Invalid mapping: "+JSON.stringify({generated:aGenerated,source:aSource,original:aOriginal,name:aName}))}};SourceMapGenerator.prototype._serializeMappings=function(){for(var previousGeneratedColumn=0,previousGeneratedLine=1,previousOriginalColumn=0,previousOriginalLine=0,previousName=0,previousSource=0,result="",next,mapping,nameIdx,sourceIdx,mappings=this._mappings.toArray(),i=0,len=mappings.length;i<len;i++){if(mapping=mappings[i],next="",mapping.generatedLine!==previousGeneratedLine)for(previousGeneratedColumn=0;mapping.generatedLine!==previousGeneratedLine;)next+=";",previousGeneratedLine++;else if(i>0){if(!util.compareByGeneratedPositionsInflated(mapping,mappings[i-1]))continue;next+=",";}next+=base64VLQ.encode(mapping.generatedColumn-previousGeneratedColumn),previousGeneratedColumn=mapping.generatedColumn,mapping.source!=null&&(sourceIdx=this._sources.indexOf(mapping.source),next+=base64VLQ.encode(sourceIdx-previousSource),previousSource=sourceIdx,next+=base64VLQ.encode(mapping.originalLine-1-previousOriginalLine),previousOriginalLine=mapping.originalLine-1,next+=base64VLQ.encode(mapping.originalColumn-previousOriginalColumn),previousOriginalColumn=mapping.originalColumn,mapping.name!=null&&(nameIdx=this._names.indexOf(mapping.name),next+=base64VLQ.encode(nameIdx-previousName),previousName=nameIdx)),result+=next;}return result};SourceMapGenerator.prototype._generateSourcesContent=function(aSources,aSourceRoot){return aSources.map(function(source){if(!this._sourcesContents)return null;aSourceRoot!=null&&(source=util.relative(aSourceRoot,source));var key=util.toSetString(source);return Object.prototype.hasOwnProperty.call(this._sourcesContents,key)?this._sourcesContents[key]:null},this)};SourceMapGenerator.prototype.toJSON=function(){var map={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return this._file!=null&&(map.file=this._file),this._sourceRoot!=null&&(map.sourceRoot=this._sourceRoot),this._sourcesContents&&(map.sourcesContent=this._generateSourcesContent(map.sources,map.sourceRoot)),map};SourceMapGenerator.prototype.toString=function(){return JSON.stringify(this.toJSON())};exports.SourceMapGenerator=SourceMapGenerator;}});var require_binary_search=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/binary-search.js"(exports){exports.GREATEST_LOWER_BOUND=1;exports.LEAST_UPPER_BOUND=2;function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare,aBias){var mid=Math.floor((aHigh-aLow)/2)+aLow,cmp=aCompare(aNeedle,aHaystack[mid],!0);return cmp===0?mid:cmp>0?aHigh-mid>1?recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare,aBias):aBias==exports.LEAST_UPPER_BOUND?aHigh<aHaystack.length?aHigh:-1:mid:mid-aLow>1?recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare,aBias):aBias==exports.LEAST_UPPER_BOUND?mid:aLow<0?-1:aLow}exports.search=function(aNeedle,aHaystack,aCompare,aBias){if(aHaystack.length===0)return -1;var index=recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare,aBias||exports.GREATEST_LOWER_BOUND);if(index<0)return -1;for(;index-1>=0&&aCompare(aHaystack[index],aHaystack[index-1],!0)===0;)--index;return index};}});var require_quick_sort=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/quick-sort.js"(exports){function swap(ary,x,y){var temp=ary[x];ary[x]=ary[y],ary[y]=temp;}function randomIntInRange(low,high){return Math.round(low+Math.random()*(high-low))}function doQuickSort(ary,comparator,p,r){if(p<r){var pivotIndex=randomIntInRange(p,r),i=p-1;swap(ary,pivotIndex,r);for(var pivot=ary[r],j=p;j<r;j++)comparator(ary[j],pivot)<=0&&(i+=1,swap(ary,i,j));swap(ary,i+1,j);var q=i+1;doQuickSort(ary,comparator,p,q-1),doQuickSort(ary,comparator,q+1,r);}}exports.quickSort=function(ary,comparator){doQuickSort(ary,comparator,0,ary.length-1);};}});var require_source_map_consumer=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/source-map-consumer.js"(exports){var util=require_util(),binarySearch=require_binary_search(),ArraySet=require_array_set().ArraySet,base64VLQ=require_base64_vlq(),quickSort=require_quick_sort().quickSort;function SourceMapConsumer(aSourceMap,aSourceMapURL){var sourceMap=aSourceMap;return typeof aSourceMap=="string"&&(sourceMap=util.parseSourceMapInput(aSourceMap)),sourceMap.sections!=null?new IndexedSourceMapConsumer(sourceMap,aSourceMapURL):new BasicSourceMapConsumer(sourceMap,aSourceMapURL)}SourceMapConsumer.fromSourceMap=function(aSourceMap,aSourceMapURL){return BasicSourceMapConsumer.fromSourceMap(aSourceMap,aSourceMapURL)};SourceMapConsumer.prototype._version=3;SourceMapConsumer.prototype.__generatedMappings=null;Object.defineProperty(SourceMapConsumer.prototype,"_generatedMappings",{configurable:!0,enumerable:!0,get:function(){return this.__generatedMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__generatedMappings}});SourceMapConsumer.prototype.__originalMappings=null;Object.defineProperty(SourceMapConsumer.prototype,"_originalMappings",{configurable:!0,enumerable:!0,get:function(){return this.__originalMappings||this._parseMappings(this._mappings,this.sourceRoot),this.__originalMappings}});SourceMapConsumer.prototype._charIsMappingSeparator=function(aStr,index){var c=aStr.charAt(index);return c===";"||c===","};SourceMapConsumer.prototype._parseMappings=function(aStr,aSourceRoot){throw new Error("Subclasses must implement _parseMappings")};SourceMapConsumer.GENERATED_ORDER=1;SourceMapConsumer.ORIGINAL_ORDER=2;SourceMapConsumer.GREATEST_LOWER_BOUND=1;SourceMapConsumer.LEAST_UPPER_BOUND=2;SourceMapConsumer.prototype.eachMapping=function(aCallback,aContext,aOrder){var context=aContext||null,order=aOrder||SourceMapConsumer.GENERATED_ORDER,mappings;switch(order){case SourceMapConsumer.GENERATED_ORDER:mappings=this._generatedMappings;break;case SourceMapConsumer.ORIGINAL_ORDER:mappings=this._originalMappings;break;default:throw new Error("Unknown order of iteration.")}var sourceRoot=this.sourceRoot;mappings.map(function(mapping){var source=mapping.source===null?null:this._sources.at(mapping.source);return source=util.computeSourceURL(sourceRoot,source,this._sourceMapURL),{source,generatedLine:mapping.generatedLine,generatedColumn:mapping.generatedColumn,originalLine:mapping.originalLine,originalColumn:mapping.originalColumn,name:mapping.name===null?null:this._names.at(mapping.name)}},this).forEach(aCallback,context);};SourceMapConsumer.prototype.allGeneratedPositionsFor=function(aArgs){var line=util.getArg(aArgs,"line"),needle={source:util.getArg(aArgs,"source"),originalLine:line,originalColumn:util.getArg(aArgs,"column",0)};if(needle.source=this._findSourceIndex(needle.source),needle.source<0)return [];var mappings=[],index=this._findMapping(needle,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,binarySearch.LEAST_UPPER_BOUND);if(index>=0){var mapping=this._originalMappings[index];if(aArgs.column===void 0)for(var originalLine=mapping.originalLine;mapping&&mapping.originalLine===originalLine;)mappings.push({line:util.getArg(mapping,"generatedLine",null),column:util.getArg(mapping,"generatedColumn",null),lastColumn:util.getArg(mapping,"lastGeneratedColumn",null)}),mapping=this._originalMappings[++index];else for(var originalColumn=mapping.originalColumn;mapping&&mapping.originalLine===line&&mapping.originalColumn==originalColumn;)mappings.push({line:util.getArg(mapping,"generatedLine",null),column:util.getArg(mapping,"generatedColumn",null),lastColumn:util.getArg(mapping,"lastGeneratedColumn",null)}),mapping=this._originalMappings[++index];}return mappings};exports.SourceMapConsumer=SourceMapConsumer;function BasicSourceMapConsumer(aSourceMap,aSourceMapURL){var sourceMap=aSourceMap;typeof aSourceMap=="string"&&(sourceMap=util.parseSourceMapInput(aSourceMap));var version2=util.getArg(sourceMap,"version"),sources=util.getArg(sourceMap,"sources"),names=util.getArg(sourceMap,"names",[]),sourceRoot=util.getArg(sourceMap,"sourceRoot",null),sourcesContent=util.getArg(sourceMap,"sourcesContent",null),mappings=util.getArg(sourceMap,"mappings"),file=util.getArg(sourceMap,"file",null);if(version2!=this._version)throw new Error("Unsupported version: "+version2);sourceRoot&&(sourceRoot=util.normalize(sourceRoot)),sources=sources.map(String).map(util.normalize).map(function(source){return sourceRoot&&util.isAbsolute(sourceRoot)&&util.isAbsolute(source)?util.relative(sourceRoot,source):source}),this._names=ArraySet.fromArray(names.map(String),!0),this._sources=ArraySet.fromArray(sources,!0),this._absoluteSources=this._sources.toArray().map(function(s){return util.computeSourceURL(sourceRoot,s,aSourceMapURL)}),this.sourceRoot=sourceRoot,this.sourcesContent=sourcesContent,this._mappings=mappings,this._sourceMapURL=aSourceMapURL,this.file=file;}BasicSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype);BasicSourceMapConsumer.prototype.consumer=SourceMapConsumer;BasicSourceMapConsumer.prototype._findSourceIndex=function(aSource){var relativeSource=aSource;if(this.sourceRoot!=null&&(relativeSource=util.relative(this.sourceRoot,relativeSource)),this._sources.has(relativeSource))return this._sources.indexOf(relativeSource);var i;for(i=0;i<this._absoluteSources.length;++i)if(this._absoluteSources[i]==aSource)return i;return -1};BasicSourceMapConsumer.fromSourceMap=function(aSourceMap,aSourceMapURL){var smc=Object.create(BasicSourceMapConsumer.prototype),names=smc._names=ArraySet.fromArray(aSourceMap._names.toArray(),!0),sources=smc._sources=ArraySet.fromArray(aSourceMap._sources.toArray(),!0);smc.sourceRoot=aSourceMap._sourceRoot,smc.sourcesContent=aSourceMap._generateSourcesContent(smc._sources.toArray(),smc.sourceRoot),smc.file=aSourceMap._file,smc._sourceMapURL=aSourceMapURL,smc._absoluteSources=smc._sources.toArray().map(function(s){return util.computeSourceURL(smc.sourceRoot,s,aSourceMapURL)});for(var generatedMappings=aSourceMap._mappings.toArray().slice(),destGeneratedMappings=smc.__generatedMappings=[],destOriginalMappings=smc.__originalMappings=[],i=0,length=generatedMappings.length;i<length;i++){var srcMapping=generatedMappings[i],destMapping=new Mapping;destMapping.generatedLine=srcMapping.generatedLine,destMapping.generatedColumn=srcMapping.generatedColumn,srcMapping.source&&(destMapping.source=sources.indexOf(srcMapping.source),destMapping.originalLine=srcMapping.originalLine,destMapping.originalColumn=srcMapping.originalColumn,srcMapping.name&&(destMapping.name=names.indexOf(srcMapping.name)),destOriginalMappings.push(destMapping)),destGeneratedMappings.push(destMapping);}return quickSort(smc.__originalMappings,util.compareByOriginalPositions),smc};BasicSourceMapConsumer.prototype._version=3;Object.defineProperty(BasicSourceMapConsumer.prototype,"sources",{get:function(){return this._absoluteSources.slice()}});function Mapping(){this.generatedLine=0,this.generatedColumn=0,this.source=null,this.originalLine=null,this.originalColumn=null,this.name=null;}BasicSourceMapConsumer.prototype._parseMappings=function(aStr,aSourceRoot){for(var generatedLine=1,previousGeneratedColumn=0,previousOriginalLine=0,previousOriginalColumn=0,previousSource=0,previousName=0,length=aStr.length,index=0,cachedSegments={},temp={},originalMappings=[],generatedMappings=[],mapping,str,segment,end,value;index<length;)if(aStr.charAt(index)===";")generatedLine++,index++,previousGeneratedColumn=0;else if(aStr.charAt(index)===",")index++;else {for(mapping=new Mapping,mapping.generatedLine=generatedLine,end=index;end<length&&!this._charIsMappingSeparator(aStr,end);end++);if(str=aStr.slice(index,end),segment=cachedSegments[str],segment)index+=str.length;else {for(segment=[];index<end;)base64VLQ.decode(aStr,index,temp),value=temp.value,index=temp.rest,segment.push(value);if(segment.length===2)throw new Error("Found a source, but no line and column");if(segment.length===3)throw new Error("Found a source and line, but no column");cachedSegments[str]=segment;}mapping.generatedColumn=previousGeneratedColumn+segment[0],previousGeneratedColumn=mapping.generatedColumn,segment.length>1&&(mapping.source=previousSource+segment[1],previousSource+=segment[1],mapping.originalLine=previousOriginalLine+segment[2],previousOriginalLine=mapping.originalLine,mapping.originalLine+=1,mapping.originalColumn=previousOriginalColumn+segment[3],previousOriginalColumn=mapping.originalColumn,segment.length>4&&(mapping.name=previousName+segment[4],previousName+=segment[4])),generatedMappings.push(mapping),typeof mapping.originalLine=="number"&&originalMappings.push(mapping);}quickSort(generatedMappings,util.compareByGeneratedPositionsDeflated),this.__generatedMappings=generatedMappings,quickSort(originalMappings,util.compareByOriginalPositions),this.__originalMappings=originalMappings;};BasicSourceMapConsumer.prototype._findMapping=function(aNeedle,aMappings,aLineName,aColumnName,aComparator,aBias){if(aNeedle[aLineName]<=0)throw new TypeError("Line must be greater than or equal to 1, got "+aNeedle[aLineName]);if(aNeedle[aColumnName]<0)throw new TypeError("Column must be greater than or equal to 0, got "+aNeedle[aColumnName]);return binarySearch.search(aNeedle,aMappings,aComparator,aBias)};BasicSourceMapConsumer.prototype.computeColumnSpans=function(){for(var index=0;index<this._generatedMappings.length;++index){var mapping=this._generatedMappings[index];if(index+1<this._generatedMappings.length){var nextMapping=this._generatedMappings[index+1];if(mapping.generatedLine===nextMapping.generatedLine){mapping.lastGeneratedColumn=nextMapping.generatedColumn-1;continue}}mapping.lastGeneratedColumn=1/0;}};BasicSourceMapConsumer.prototype.originalPositionFor=function(aArgs){var needle={generatedLine:util.getArg(aArgs,"line"),generatedColumn:util.getArg(aArgs,"column")},index=this._findMapping(needle,this._generatedMappings,"generatedLine","generatedColumn",util.compareByGeneratedPositionsDeflated,util.getArg(aArgs,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(index>=0){var mapping=this._generatedMappings[index];if(mapping.generatedLine===needle.generatedLine){var source=util.getArg(mapping,"source",null);source!==null&&(source=this._sources.at(source),source=util.computeSourceURL(this.sourceRoot,source,this._sourceMapURL));var name=util.getArg(mapping,"name",null);return name!==null&&(name=this._names.at(name)),{source,line:util.getArg(mapping,"originalLine",null),column:util.getArg(mapping,"originalColumn",null),name}}}return {source:null,line:null,column:null,name:null}};BasicSourceMapConsumer.prototype.hasContentsOfAllSources=function(){return this.sourcesContent?this.sourcesContent.length>=this._sources.size()&&!this.sourcesContent.some(function(sc){return sc==null}):!1};BasicSourceMapConsumer.prototype.sourceContentFor=function(aSource,nullOnMissing){if(!this.sourcesContent)return null;var index=this._findSourceIndex(aSource);if(index>=0)return this.sourcesContent[index];var relativeSource=aSource;this.sourceRoot!=null&&(relativeSource=util.relative(this.sourceRoot,relativeSource));var url;if(this.sourceRoot!=null&&(url=util.urlParse(this.sourceRoot))){var fileUriAbsPath=relativeSource.replace(/^file:\\/\\//,"");if(url.scheme=="file"&&this._sources.has(fileUriAbsPath))return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];if((!url.path||url.path=="/")&&this._sources.has("/"+relativeSource))return this.sourcesContent[this._sources.indexOf("/"+relativeSource)]}if(nullOnMissing)return null;throw new Error(\'"\'+relativeSource+\'" is not in the SourceMap.\')};BasicSourceMapConsumer.prototype.generatedPositionFor=function(aArgs){var source=util.getArg(aArgs,"source");if(source=this._findSourceIndex(source),source<0)return {line:null,column:null,lastColumn:null};var needle={source,originalLine:util.getArg(aArgs,"line"),originalColumn:util.getArg(aArgs,"column")},index=this._findMapping(needle,this._originalMappings,"originalLine","originalColumn",util.compareByOriginalPositions,util.getArg(aArgs,"bias",SourceMapConsumer.GREATEST_LOWER_BOUND));if(index>=0){var mapping=this._originalMappings[index];if(mapping.source===needle.source)return {line:util.getArg(mapping,"generatedLine",null),column:util.getArg(mapping,"generatedColumn",null),lastColumn:util.getArg(mapping,"lastGeneratedColumn",null)}}return {line:null,column:null,lastColumn:null}};exports.BasicSourceMapConsumer=BasicSourceMapConsumer;function IndexedSourceMapConsumer(aSourceMap,aSourceMapURL){var sourceMap=aSourceMap;typeof aSourceMap=="string"&&(sourceMap=util.parseSourceMapInput(aSourceMap));var version2=util.getArg(sourceMap,"version"),sections=util.getArg(sourceMap,"sections");if(version2!=this._version)throw new Error("Unsupported version: "+version2);this._sources=new ArraySet,this._names=new ArraySet;var lastOffset={line:-1,column:0};this._sections=sections.map(function(s){if(s.url)throw new Error("Support for url field in sections not implemented.");var offset2=util.getArg(s,"offset"),offsetLine=util.getArg(offset2,"line"),offsetColumn=util.getArg(offset2,"column");if(offsetLine<lastOffset.line||offsetLine===lastOffset.line&&offsetColumn<lastOffset.column)throw new Error("Section offsets must be ordered and non-overlapping.");return lastOffset=offset2,{generatedOffset:{generatedLine:offsetLine+1,generatedColumn:offsetColumn+1},consumer:new SourceMapConsumer(util.getArg(s,"map"),aSourceMapURL)}});}IndexedSourceMapConsumer.prototype=Object.create(SourceMapConsumer.prototype);IndexedSourceMapConsumer.prototype.constructor=SourceMapConsumer;IndexedSourceMapConsumer.prototype._version=3;Object.defineProperty(IndexedSourceMapConsumer.prototype,"sources",{get:function(){for(var sources=[],i=0;i<this._sections.length;i++)for(var j=0;j<this._sections[i].consumer.sources.length;j++)sources.push(this._sections[i].consumer.sources[j]);return sources}});IndexedSourceMapConsumer.prototype.originalPositionFor=function(aArgs){var needle={generatedLine:util.getArg(aArgs,"line"),generatedColumn:util.getArg(aArgs,"column")},sectionIndex=binarySearch.search(needle,this._sections,function(needle2,section2){var cmp=needle2.generatedLine-section2.generatedOffset.generatedLine;return cmp||needle2.generatedColumn-section2.generatedOffset.generatedColumn}),section=this._sections[sectionIndex];return section?section.consumer.originalPositionFor({line:needle.generatedLine-(section.generatedOffset.generatedLine-1),column:needle.generatedColumn-(section.generatedOffset.generatedLine===needle.generatedLine?section.generatedOffset.generatedColumn-1:0),bias:aArgs.bias}):{source:null,line:null,column:null,name:null}};IndexedSourceMapConsumer.prototype.hasContentsOfAllSources=function(){return this._sections.every(function(s){return s.consumer.hasContentsOfAllSources()})};IndexedSourceMapConsumer.prototype.sourceContentFor=function(aSource,nullOnMissing){for(var i=0;i<this._sections.length;i++){var section=this._sections[i],content=section.consumer.sourceContentFor(aSource,!0);if(content)return content}if(nullOnMissing)return null;throw new Error(\'"\'+aSource+\'" is not in the SourceMap.\')};IndexedSourceMapConsumer.prototype.generatedPositionFor=function(aArgs){for(var i=0;i<this._sections.length;i++){var section=this._sections[i];if(section.consumer._findSourceIndex(util.getArg(aArgs,"source"))!==-1){var generatedPosition=section.consumer.generatedPositionFor(aArgs);if(generatedPosition){var ret={line:generatedPosition.line+(section.generatedOffset.generatedLine-1),column:generatedPosition.column+(section.generatedOffset.generatedLine===generatedPosition.line?section.generatedOffset.generatedColumn-1:0)};return ret}}}return {line:null,column:null}};IndexedSourceMapConsumer.prototype._parseMappings=function(aStr,aSourceRoot){this.__generatedMappings=[],this.__originalMappings=[];for(var i=0;i<this._sections.length;i++)for(var section=this._sections[i],sectionMappings=section.consumer._generatedMappings,j=0;j<sectionMappings.length;j++){var mapping=sectionMappings[j],source=section.consumer._sources.at(mapping.source);source=util.computeSourceURL(section.consumer.sourceRoot,source,this._sourceMapURL),this._sources.add(source),source=this._sources.indexOf(source);var name=null;mapping.name&&(name=section.consumer._names.at(mapping.name),this._names.add(name),name=this._names.indexOf(name));var adjustedMapping={source,generatedLine:mapping.generatedLine+(section.generatedOffset.generatedLine-1),generatedColumn:mapping.generatedColumn+(section.generatedOffset.generatedLine===mapping.generatedLine?section.generatedOffset.generatedColumn-1:0),originalLine:mapping.originalLine,originalColumn:mapping.originalColumn,name};this.__generatedMappings.push(adjustedMapping),typeof adjustedMapping.originalLine=="number"&&this.__originalMappings.push(adjustedMapping);}quickSort(this.__generatedMappings,util.compareByGeneratedPositionsDeflated),quickSort(this.__originalMappings,util.compareByOriginalPositions);};exports.IndexedSourceMapConsumer=IndexedSourceMapConsumer;}});var require_source_node=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/lib/source-node.js"(exports){var SourceMapGenerator=require_source_map_generator().SourceMapGenerator,util=require_util(),REGEX_NEWLINE=/(\\r?\\n)/,NEWLINE_CODE=10,isSourceNode="$$$isSourceNode$$$";function SourceNode(aLine,aColumn,aSource,aChunks,aName){this.children=[],this.sourceContents={},this.line=aLine??null,this.column=aColumn??null,this.source=aSource??null,this.name=aName??null,this[isSourceNode]=!0,aChunks!=null&&this.add(aChunks);}SourceNode.fromStringWithSourceMap=function(aGeneratedCode,aSourceMapConsumer,aRelativePath){var node=new SourceNode,remainingLines=aGeneratedCode.split(REGEX_NEWLINE),remainingLinesIndex=0,shiftNextLine=function(){var lineContents=getNextLine(),newLine=getNextLine()||"";return lineContents+newLine;function getNextLine(){return remainingLinesIndex<remainingLines.length?remainingLines[remainingLinesIndex++]:void 0}},lastGeneratedLine=1,lastGeneratedColumn=0,lastMapping=null;return aSourceMapConsumer.eachMapping(function(mapping){if(lastMapping!==null)if(lastGeneratedLine<mapping.generatedLine)addMappingWithCode(lastMapping,shiftNextLine()),lastGeneratedLine++,lastGeneratedColumn=0;else {var nextLine=remainingLines[remainingLinesIndex]||"",code=nextLine.substr(0,mapping.generatedColumn-lastGeneratedColumn);remainingLines[remainingLinesIndex]=nextLine.substr(mapping.generatedColumn-lastGeneratedColumn),lastGeneratedColumn=mapping.generatedColumn,addMappingWithCode(lastMapping,code),lastMapping=mapping;return}for(;lastGeneratedLine<mapping.generatedLine;)node.add(shiftNextLine()),lastGeneratedLine++;if(lastGeneratedColumn<mapping.generatedColumn){var nextLine=remainingLines[remainingLinesIndex]||"";node.add(nextLine.substr(0,mapping.generatedColumn)),remainingLines[remainingLinesIndex]=nextLine.substr(mapping.generatedColumn),lastGeneratedColumn=mapping.generatedColumn;}lastMapping=mapping;},this),remainingLinesIndex<remainingLines.length&&(lastMapping&&addMappingWithCode(lastMapping,shiftNextLine()),node.add(remainingLines.splice(remainingLinesIndex).join(""))),aSourceMapConsumer.sources.forEach(function(sourceFile){var content=aSourceMapConsumer.sourceContentFor(sourceFile);content!=null&&(aRelativePath!=null&&(sourceFile=util.join(aRelativePath,sourceFile)),node.setSourceContent(sourceFile,content));}),node;function addMappingWithCode(mapping,code){if(mapping===null||mapping.source===void 0)node.add(code);else {var source=aRelativePath?util.join(aRelativePath,mapping.source):mapping.source;node.add(new SourceNode(mapping.originalLine,mapping.originalColumn,source,code,mapping.name));}}};SourceNode.prototype.add=function(aChunk){if(Array.isArray(aChunk))aChunk.forEach(function(chunk){this.add(chunk);},this);else if(aChunk[isSourceNode]||typeof aChunk=="string")aChunk&&this.children.push(aChunk);else throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);return this};SourceNode.prototype.prepend=function(aChunk){if(Array.isArray(aChunk))for(var i=aChunk.length-1;i>=0;i--)this.prepend(aChunk[i]);else if(aChunk[isSourceNode]||typeof aChunk=="string")this.children.unshift(aChunk);else throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+aChunk);return this};SourceNode.prototype.walk=function(aFn){for(var chunk,i=0,len=this.children.length;i<len;i++)chunk=this.children[i],chunk[isSourceNode]?chunk.walk(aFn):chunk!==""&&aFn(chunk,{source:this.source,line:this.line,column:this.column,name:this.name});};SourceNode.prototype.join=function(aSep){var newChildren,i,len=this.children.length;if(len>0){for(newChildren=[],i=0;i<len-1;i++)newChildren.push(this.children[i]),newChildren.push(aSep);newChildren.push(this.children[i]),this.children=newChildren;}return this};SourceNode.prototype.replaceRight=function(aPattern,aReplacement){var lastChild=this.children[this.children.length-1];return lastChild[isSourceNode]?lastChild.replaceRight(aPattern,aReplacement):typeof lastChild=="string"?this.children[this.children.length-1]=lastChild.replace(aPattern,aReplacement):this.children.push("".replace(aPattern,aReplacement)),this};SourceNode.prototype.setSourceContent=function(aSourceFile,aSourceContent){this.sourceContents[util.toSetString(aSourceFile)]=aSourceContent;};SourceNode.prototype.walkSourceContents=function(aFn){for(var i=0,len=this.children.length;i<len;i++)this.children[i][isSourceNode]&&this.children[i].walkSourceContents(aFn);for(var sources=Object.keys(this.sourceContents),i=0,len=sources.length;i<len;i++)aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]]);};SourceNode.prototype.toString=function(){var str="";return this.walk(function(chunk){str+=chunk;}),str};SourceNode.prototype.toStringWithSourceMap=function(aArgs){var generated={code:"",line:1,column:0},map=new SourceMapGenerator(aArgs),sourceMappingActive=!1,lastOriginalSource=null,lastOriginalLine=null,lastOriginalColumn=null,lastOriginalName=null;return this.walk(function(chunk,original){generated.code+=chunk,original.source!==null&&original.line!==null&&original.column!==null?((lastOriginalSource!==original.source||lastOriginalLine!==original.line||lastOriginalColumn!==original.column||lastOriginalName!==original.name)&&map.addMapping({source:original.source,original:{line:original.line,column:original.column},generated:{line:generated.line,column:generated.column},name:original.name}),lastOriginalSource=original.source,lastOriginalLine=original.line,lastOriginalColumn=original.column,lastOriginalName=original.name,sourceMappingActive=!0):sourceMappingActive&&(map.addMapping({generated:{line:generated.line,column:generated.column}}),lastOriginalSource=null,sourceMappingActive=!1);for(var idx=0,length=chunk.length;idx<length;idx++)chunk.charCodeAt(idx)===NEWLINE_CODE?(generated.line++,generated.column=0,idx+1===length?(lastOriginalSource=null,sourceMappingActive=!1):sourceMappingActive&&map.addMapping({source:original.source,original:{line:original.line,column:original.column},generated:{line:generated.line,column:generated.column},name:original.name})):generated.column++;}),this.walkSourceContents(function(sourceFile,sourceContent){map.setSourceContent(sourceFile,sourceContent);}),{code:generated.code,map}};exports.SourceNode=SourceNode;}});var require_source_map=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/node_modules/source-map/source-map.js"(exports){exports.SourceMapGenerator=require_source_map_generator().SourceMapGenerator;exports.SourceMapConsumer=require_source_map_consumer().SourceMapConsumer;exports.SourceNode=require_source_node().SourceNode;}});var require_package=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/package.json"(exports,module){module.exports={name:"escodegen",description:"ECMAScript code generator",homepage:"http://github.com/estools/escodegen",main:"escodegen.js",bin:{esgenerate:"./bin/esgenerate.js",escodegen:"./bin/escodegen.js"},files:["LICENSE.BSD","README.md","bin","escodegen.js","package.json"],version:"2.1.0",engines:{node:">=6.0"},maintainers:[{name:"Yusuke Suzuki",email:"utatane.tea@gmail.com",web:"http://github.com/Constellation"}],repository:{type:"git",url:"http://github.com/estools/escodegen.git"},dependencies:{estraverse:"^5.2.0",esutils:"^2.0.2",esprima:"^4.0.1"},optionalDependencies:{"source-map":"~0.6.1"},devDependencies:{acorn:"^8.0.4",bluebird:"^3.4.7","bower-registry-client":"^1.0.0",chai:"^4.2.0","chai-exclude":"^2.0.2","commonjs-everywhere":"^0.9.7",gulp:"^4.0.2","gulp-eslint":"^6.0.0","gulp-mocha":"^7.0.2",minimist:"^1.2.5",optionator:"^0.9.1",semver:"^7.3.4"},license:"BSD-2-Clause",scripts:{test:"gulp travis","unit-test":"gulp test",lint:"gulp lint",release:"node tools/release.js","build-min":"./node_modules/.bin/cjsify -ma path: tools/entry-point.js > escodegen.browser.min.js",build:"./node_modules/.bin/cjsify -a path: tools/entry-point.js > escodegen.browser.js"}};}});var require_escodegen=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/escodegen/escodegen.js"(exports){(function(){var Syntax,Precedence,BinaryPrecedence,SourceNode,estraverse,esutils,base2,indent,json,renumber,hexadecimal,quotes,escapeless,newline,space,parentheses,semicolons,safeConcatenation,directive,extra,parse5,sourceMap,sourceCode,preserveBlankLines,FORMAT_MINIFY,FORMAT_DEFAULTS;estraverse=require_estraverse(),esutils=require_utils(),Syntax=estraverse.Syntax;function isExpression(node){return CodeGenerator.Expression.hasOwnProperty(node.type)}function isStatement(node){return CodeGenerator.Statement.hasOwnProperty(node.type)}Precedence={Sequence:0,Yield:1,Assignment:1,Conditional:2,ArrowFunction:2,Coalesce:3,LogicalOR:4,LogicalAND:5,BitwiseOR:6,BitwiseXOR:7,BitwiseAND:8,Equality:9,Relational:10,BitwiseSHIFT:11,Additive:12,Multiplicative:13,Exponentiation:14,Await:15,Unary:15,Postfix:16,OptionalChaining:17,Call:18,New:19,TaggedTemplate:20,Member:21,Primary:22},BinaryPrecedence={"??":Precedence.Coalesce,"||":Precedence.LogicalOR,"&&":Precedence.LogicalAND,"|":Precedence.BitwiseOR,"^":Precedence.BitwiseXOR,"&":Precedence.BitwiseAND,"==":Precedence.Equality,"!=":Precedence.Equality,"===":Precedence.Equality,"!==":Precedence.Equality,is:Precedence.Equality,isnt:Precedence.Equality,"<":Precedence.Relational,">":Precedence.Relational,"<=":Precedence.Relational,">=":Precedence.Relational,in:Precedence.Relational,instanceof:Precedence.Relational,"<<":Precedence.BitwiseSHIFT,">>":Precedence.BitwiseSHIFT,">>>":Precedence.BitwiseSHIFT,"+":Precedence.Additive,"-":Precedence.Additive,"*":Precedence.Multiplicative,"%":Precedence.Multiplicative,"/":Precedence.Multiplicative,"**":Precedence.Exponentiation};var F_ALLOW_IN=1,F_ALLOW_CALL=2,F_ALLOW_UNPARATH_NEW=4,F_FUNC_BODY=8,F_DIRECTIVE_CTX=16,F_SEMICOLON_OPT=32,F_FOUND_COALESCE=64,E_FTT=F_ALLOW_CALL|F_ALLOW_UNPARATH_NEW,E_TTF=F_ALLOW_IN|F_ALLOW_CALL,E_TTT=F_ALLOW_IN|F_ALLOW_CALL|F_ALLOW_UNPARATH_NEW,E_TFF=F_ALLOW_IN,E_FFT=F_ALLOW_UNPARATH_NEW,E_TFT=F_ALLOW_IN|F_ALLOW_UNPARATH_NEW,S_TFFF=F_ALLOW_IN,S_TFFT=F_ALLOW_IN|F_SEMICOLON_OPT,S_FFFF=0,S_TFTF=F_ALLOW_IN|F_DIRECTIVE_CTX,S_TTFF=F_ALLOW_IN|F_FUNC_BODY;function getDefaultOptions(){return {indent:null,base:null,parse:null,comment:!1,format:{indent:{style:"    ",base:0,adjustMultilineComment:!1},newline:`\n`,space:" ",json:!1,renumber:!1,hexadecimal:!1,quotes:"single",escapeless:!1,compact:!1,parentheses:!0,semicolons:!0,safeConcatenation:!1,preserveBlankLines:!1},moz:{comprehensionExpressionStartsWithAssignment:!1,starlessGenerator:!1},sourceMap:null,sourceMapRoot:null,sourceMapWithCode:!1,directive:!1,raw:!0,verbatim:null,sourceCode:null}}function stringRepeat(str,num){var result="";for(num|=0;num>0;num>>>=1,str+=str)num&1&&(result+=str);return result}function hasLineTerminator(str){return /[\\r\\n]/g.test(str)}function endsWithLineTerminator(str){var len=str.length;return len&&esutils.code.isLineTerminator(str.charCodeAt(len-1))}function merge(target,override){var key;for(key in override)override.hasOwnProperty(key)&&(target[key]=override[key]);return target}function updateDeeply(target,override){var key,val;function isHashObject(target2){return typeof target2=="object"&&target2 instanceof Object&&!(target2 instanceof RegExp)}for(key in override)override.hasOwnProperty(key)&&(val=override[key],isHashObject(val)?isHashObject(target[key])?updateDeeply(target[key],val):target[key]=updateDeeply({},val):target[key]=val);return target}function generateNumber(value){var result,point,temp,exponent,pos;if(value!==value)throw new Error("Numeric literal whose value is NaN");if(value<0||value===0&&1/value<0)throw new Error("Numeric literal whose value is negative");if(value===1/0)return json?"null":renumber?"1e400":"1e+400";if(result=""+value,!renumber||result.length<3)return result;for(point=result.indexOf("."),!json&&result.charCodeAt(0)===48&&point===1&&(point=0,result=result.slice(1)),temp=result,result=result.replace("e+","e"),exponent=0,(pos=temp.indexOf("e"))>0&&(exponent=+temp.slice(pos+1),temp=temp.slice(0,pos)),point>=0&&(exponent-=temp.length-point-1,temp=+(temp.slice(0,point)+temp.slice(point+1))+""),pos=0;temp.charCodeAt(temp.length+pos-1)===48;)--pos;return pos!==0&&(exponent-=pos,temp=temp.slice(0,pos)),exponent!==0&&(temp+="e"+exponent),(temp.length<result.length||hexadecimal&&value>1e12&&Math.floor(value)===value&&(temp="0x"+value.toString(16)).length<result.length)&&+temp===value&&(result=temp),result}function escapeRegExpCharacter(ch,previousIsBackslash){return (ch&-2)===8232?(previousIsBackslash?"u":"\\\\u")+(ch===8232?"2028":"2029"):ch===10||ch===13?(previousIsBackslash?"":"\\\\")+(ch===10?"n":"r"):String.fromCharCode(ch)}function generateRegExp(reg){var match,result,flags,i,iz,ch,characterInBrack,previousIsBackslash;if(result=reg.toString(),reg.source){if(match=result.match(/\\/([^/]*)$/),!match)return result;for(flags=match[1],result="",characterInBrack=!1,previousIsBackslash=!1,i=0,iz=reg.source.length;i<iz;++i)ch=reg.source.charCodeAt(i),previousIsBackslash?(result+=escapeRegExpCharacter(ch,previousIsBackslash),previousIsBackslash=!1):(characterInBrack?ch===93&&(characterInBrack=!1):ch===47?result+="\\\\":ch===91&&(characterInBrack=!0),result+=escapeRegExpCharacter(ch,previousIsBackslash),previousIsBackslash=ch===92);return "/"+result+"/"+flags}return result}function escapeAllowedCharacter(code,next){var hex;return code===8?"\\\\b":code===12?"\\\\f":code===9?"\\\\t":(hex=code.toString(16).toUpperCase(),json||code>255?"\\\\u"+"0000".slice(hex.length)+hex:code===0&&!esutils.code.isDecimalDigit(next)?"\\\\0":code===11?"\\\\x0B":"\\\\x"+"00".slice(hex.length)+hex)}function escapeDisallowedCharacter(code){if(code===92)return "\\\\\\\\";if(code===10)return "\\\\n";if(code===13)return "\\\\r";if(code===8232)return "\\\\u2028";if(code===8233)return "\\\\u2029";throw new Error("Incorrectly classified character")}function escapeDirective(str){var i,iz,code,quote;for(quote=quotes==="double"?\'"\':"\'",i=0,iz=str.length;i<iz;++i)if(code=str.charCodeAt(i),code===39){quote=\'"\';break}else if(code===34){quote="\'";break}else code===92&&++i;return quote+str+quote}function escapeString(str){var result="",i,len,code,singleQuotes=0,doubleQuotes=0,single,quote;for(i=0,len=str.length;i<len;++i){if(code=str.charCodeAt(i),code===39)++singleQuotes;else if(code===34)++doubleQuotes;else if(code===47&&json)result+="\\\\";else if(esutils.code.isLineTerminator(code)||code===92){result+=escapeDisallowedCharacter(code);continue}else if(!esutils.code.isIdentifierPartES5(code)&&(json&&code<32||!json&&!escapeless&&(code<32||code>126))){result+=escapeAllowedCharacter(code,str.charCodeAt(i+1));continue}result+=String.fromCharCode(code);}if(single=!(quotes==="double"||quotes==="auto"&&doubleQuotes<singleQuotes),quote=single?"\'":\'"\',!(single?singleQuotes:doubleQuotes))return quote+result+quote;for(str=result,result=quote,i=0,len=str.length;i<len;++i)code=str.charCodeAt(i),(code===39&&single||code===34&&!single)&&(result+="\\\\"),result+=String.fromCharCode(code);return result+quote}function flattenToString(arr){var i,iz,elem,result="";for(i=0,iz=arr.length;i<iz;++i)elem=arr[i],result+=Array.isArray(elem)?flattenToString(elem):elem;return result}function toSourceNodeWhenNeeded(generated,node){if(!sourceMap)return Array.isArray(generated)?flattenToString(generated):generated;if(node==null){if(generated instanceof SourceNode)return generated;node={};}return node.loc==null?new SourceNode(null,null,sourceMap,generated,node.name||null):new SourceNode(node.loc.start.line,node.loc.start.column,sourceMap===!0?node.loc.source||null:sourceMap,generated,node.name||null)}function noEmptySpace(){return space||" "}function join(left,right){var leftSource,rightSource,leftCharCode,rightCharCode;return leftSource=toSourceNodeWhenNeeded(left).toString(),leftSource.length===0?[right]:(rightSource=toSourceNodeWhenNeeded(right).toString(),rightSource.length===0?[left]:(leftCharCode=leftSource.charCodeAt(leftSource.length-1),rightCharCode=rightSource.charCodeAt(0),(leftCharCode===43||leftCharCode===45)&&leftCharCode===rightCharCode||esutils.code.isIdentifierPartES5(leftCharCode)&&esutils.code.isIdentifierPartES5(rightCharCode)||leftCharCode===47&&rightCharCode===105?[left,noEmptySpace(),right]:esutils.code.isWhiteSpace(leftCharCode)||esutils.code.isLineTerminator(leftCharCode)||esutils.code.isWhiteSpace(rightCharCode)||esutils.code.isLineTerminator(rightCharCode)?[left,right]:[left,space,right]))}function addIndent(stmt){return [base2,stmt]}function withIndent(fn){var previousBase;previousBase=base2,base2+=indent,fn(base2),base2=previousBase;}function calculateSpaces(str){var i;for(i=str.length-1;i>=0&&!esutils.code.isLineTerminator(str.charCodeAt(i));--i);return str.length-1-i}function adjustMultilineComment(value,specialBase){var array,i,len,line,j,spaces,previousBase,sn;for(array=value.split(/\\r\\n|[\\r\\n]/),spaces=Number.MAX_VALUE,i=1,len=array.length;i<len;++i){for(line=array[i],j=0;j<line.length&&esutils.code.isWhiteSpace(line.charCodeAt(j));)++j;spaces>j&&(spaces=j);}for(typeof specialBase<"u"?(previousBase=base2,array[1][spaces]==="*"&&(specialBase+=" "),base2=specialBase):(spaces&1&&--spaces,previousBase=base2),i=1,len=array.length;i<len;++i)sn=toSourceNodeWhenNeeded(addIndent(array[i].slice(spaces))),array[i]=sourceMap?sn.join(""):sn;return base2=previousBase,array.join(`\n`)}function generateComment(comment,specialBase){if(comment.type==="Line"){if(endsWithLineTerminator(comment.value))return "//"+comment.value;var result="//"+comment.value;return preserveBlankLines||(result+=`\n`),result}return extra.format.indent.adjustMultilineComment&&/[\\n\\r]/.test(comment.value)?adjustMultilineComment("/*"+comment.value+"*/",specialBase):"/*"+comment.value+"*/"}function addComments(stmt,result){var i,len,comment,save,tailingToStatement,specialBase,fragment,extRange,range,prevRange,prefix,infix,suffix,count;if(stmt.leadingComments&&stmt.leadingComments.length>0){if(save=result,preserveBlankLines){for(comment=stmt.leadingComments[0],result=[],extRange=comment.extendedRange,range=comment.range,prefix=sourceCode.substring(extRange[0],range[0]),count=(prefix.match(/\\n/g)||[]).length,count>0?(result.push(stringRepeat(`\n`,count)),result.push(addIndent(generateComment(comment)))):(result.push(prefix),result.push(generateComment(comment))),prevRange=range,i=1,len=stmt.leadingComments.length;i<len;i++)comment=stmt.leadingComments[i],range=comment.range,infix=sourceCode.substring(prevRange[1],range[0]),count=(infix.match(/\\n/g)||[]).length,result.push(stringRepeat(`\n`,count)),result.push(addIndent(generateComment(comment))),prevRange=range;suffix=sourceCode.substring(range[1],extRange[1]),count=(suffix.match(/\\n/g)||[]).length,result.push(stringRepeat(`\n`,count));}else for(comment=stmt.leadingComments[0],result=[],safeConcatenation&&stmt.type===Syntax.Program&&stmt.body.length===0&&result.push(`\n`),result.push(generateComment(comment)),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push(`\n`),i=1,len=stmt.leadingComments.length;i<len;++i)comment=stmt.leadingComments[i],fragment=[generateComment(comment)],endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())||fragment.push(`\n`),result.push(addIndent(fragment));result.push(addIndent(save));}if(stmt.trailingComments)if(preserveBlankLines)comment=stmt.trailingComments[0],extRange=comment.extendedRange,range=comment.range,prefix=sourceCode.substring(extRange[0],range[0]),count=(prefix.match(/\\n/g)||[]).length,count>0?(result.push(stringRepeat(`\n`,count)),result.push(addIndent(generateComment(comment)))):(result.push(prefix),result.push(generateComment(comment)));else for(tailingToStatement=!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString()),specialBase=stringRepeat(" ",calculateSpaces(toSourceNodeWhenNeeded([base2,result,indent]).toString())),i=0,len=stmt.trailingComments.length;i<len;++i)comment=stmt.trailingComments[i],tailingToStatement?(i===0?result=[result,indent]:result=[result,specialBase],result.push(generateComment(comment,specialBase))):result=[result,addIndent(generateComment(comment))],i!==len-1&&!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())&&(result=[result,`\n`]);return result}function generateBlankLines(start,end,result){var j,newlineCount=0;for(j=start;j<end;j++)sourceCode[j]===`\n`&&newlineCount++;for(j=1;j<newlineCount;j++)result.push(newline);}function parenthesize(text,current2,should){return current2<should?["(",text,")"]:text}function generateVerbatimString(string){var i,iz,result;for(result=string.split(/\\r\\n|\\n/),i=1,iz=result.length;i<iz;i++)result[i]=newline+base2+result[i];return result}function generateVerbatim(expr,precedence){var verbatim,result,prec;return verbatim=expr[extra.verbatim],typeof verbatim=="string"?result=parenthesize(generateVerbatimString(verbatim),Precedence.Sequence,precedence):(result=generateVerbatimString(verbatim.content),prec=verbatim.precedence!=null?verbatim.precedence:Precedence.Sequence,result=parenthesize(result,prec,precedence)),toSourceNodeWhenNeeded(result,expr)}function CodeGenerator(){}CodeGenerator.prototype.maybeBlock=function(stmt,flags){var result,noLeadingComment,that=this;return noLeadingComment=!extra.comment||!stmt.leadingComments,stmt.type===Syntax.BlockStatement&&noLeadingComment?[space,this.generateStatement(stmt,flags)]:stmt.type===Syntax.EmptyStatement&&noLeadingComment?";":(withIndent(function(){result=[newline,addIndent(that.generateStatement(stmt,flags))];}),result)},CodeGenerator.prototype.maybeBlockSuffix=function(stmt,result){var ends=endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString());return stmt.type===Syntax.BlockStatement&&(!extra.comment||!stmt.leadingComments)&&!ends?[result,space]:ends?[result,base2]:[result,newline,base2]};function generateIdentifier(node){return toSourceNodeWhenNeeded(node.name,node)}function generateAsyncPrefix(node,spaceRequired){return node.async?"async"+(spaceRequired?noEmptySpace():space):""}function generateStarSuffix(node){var isGenerator=node.generator&&!extra.moz.starlessGenerator;return isGenerator?"*"+space:""}function generateMethodPrefix(prop){var func=prop.value,prefix="";return func.async&&(prefix+=generateAsyncPrefix(func,!prop.computed)),func.generator&&(prefix+=generateStarSuffix(func)?"*":""),prefix}CodeGenerator.prototype.generatePattern=function(node,precedence,flags){return node.type===Syntax.Identifier?generateIdentifier(node):this.generateExpression(node,precedence,flags)},CodeGenerator.prototype.generateFunctionParams=function(node){var i,iz,result,hasDefault;if(hasDefault=!1,node.type===Syntax.ArrowFunctionExpression&&!node.rest&&(!node.defaults||node.defaults.length===0)&&node.params.length===1&&node.params[0].type===Syntax.Identifier)result=[generateAsyncPrefix(node,!0),generateIdentifier(node.params[0])];else {for(result=node.type===Syntax.ArrowFunctionExpression?[generateAsyncPrefix(node,!1)]:[],result.push("("),node.defaults&&(hasDefault=!0),i=0,iz=node.params.length;i<iz;++i)hasDefault&&node.defaults[i]?result.push(this.generateAssignment(node.params[i],node.defaults[i],"=",Precedence.Assignment,E_TTT)):result.push(this.generatePattern(node.params[i],Precedence.Assignment,E_TTT)),i+1<iz&&result.push(","+space);node.rest&&(node.params.length&&result.push(","+space),result.push("..."),result.push(generateIdentifier(node.rest))),result.push(")");}return result},CodeGenerator.prototype.generateFunctionBody=function(node){var result,expr;return result=this.generateFunctionParams(node),node.type===Syntax.ArrowFunctionExpression&&(result.push(space),result.push("=>")),node.expression?(result.push(space),expr=this.generateExpression(node.body,Precedence.Assignment,E_TTT),expr.toString().charAt(0)==="{"&&(expr=["(",expr,")"]),result.push(expr)):result.push(this.maybeBlock(node.body,S_TTFF)),result},CodeGenerator.prototype.generateIterationForStatement=function(operator,stmt,flags){var result=["for"+(stmt.await?noEmptySpace()+"await":"")+space+"("],that=this;return withIndent(function(){stmt.left.type===Syntax.VariableDeclaration?withIndent(function(){result.push(stmt.left.kind+noEmptySpace()),result.push(that.generateStatement(stmt.left.declarations[0],S_FFFF));}):result.push(that.generateExpression(stmt.left,Precedence.Call,E_TTT)),result=join(result,operator),result=[join(result,that.generateExpression(stmt.right,Precedence.Assignment,E_TTT)),")"];}),result.push(this.maybeBlock(stmt.body,flags)),result},CodeGenerator.prototype.generatePropertyKey=function(expr,computed){var result=[];return computed&&result.push("["),result.push(this.generateExpression(expr,Precedence.Assignment,E_TTT)),computed&&result.push("]"),result},CodeGenerator.prototype.generateAssignment=function(left,right,operator,precedence,flags){return Precedence.Assignment<precedence&&(flags|=F_ALLOW_IN),parenthesize([this.generateExpression(left,Precedence.Call,flags),space+operator+space,this.generateExpression(right,Precedence.Assignment,flags)],Precedence.Assignment,precedence)},CodeGenerator.prototype.semicolon=function(flags){return !semicolons&&flags&F_SEMICOLON_OPT?"":";"},CodeGenerator.Statement={BlockStatement:function(stmt,flags){var range,content,result=["{",newline],that=this;return withIndent(function(){stmt.body.length===0&&preserveBlankLines&&(range=stmt.range,range[1]-range[0]>2&&(content=sourceCode.substring(range[0]+1,range[1]-1),content[0]===`\n`&&(result=["{"]),result.push(content)));var i,iz,fragment,bodyFlags;for(bodyFlags=S_TFFF,flags&F_FUNC_BODY&&(bodyFlags|=F_DIRECTIVE_CTX),i=0,iz=stmt.body.length;i<iz;++i)preserveBlankLines&&(i===0&&(stmt.body[0].leadingComments&&(range=stmt.body[0].leadingComments[0].extendedRange,content=sourceCode.substring(range[0],range[1]),content[0]===`\n`&&(result=["{"])),stmt.body[0].leadingComments||generateBlankLines(stmt.range[0],stmt.body[0].range[0],result)),i>0&&!stmt.body[i-1].trailingComments&&!stmt.body[i].leadingComments&&generateBlankLines(stmt.body[i-1].range[1],stmt.body[i].range[0],result)),i===iz-1&&(bodyFlags|=F_SEMICOLON_OPT),stmt.body[i].leadingComments&&preserveBlankLines?fragment=that.generateStatement(stmt.body[i],bodyFlags):fragment=addIndent(that.generateStatement(stmt.body[i],bodyFlags)),result.push(fragment),endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())||preserveBlankLines&&i<iz-1&&stmt.body[i+1].leadingComments||result.push(newline),preserveBlankLines&&i===iz-1&&(stmt.body[i].trailingComments||generateBlankLines(stmt.body[i].range[1],stmt.range[1],result));}),result.push(addIndent("}")),result},BreakStatement:function(stmt,flags){return stmt.label?"break "+stmt.label.name+this.semicolon(flags):"break"+this.semicolon(flags)},ContinueStatement:function(stmt,flags){return stmt.label?"continue "+stmt.label.name+this.semicolon(flags):"continue"+this.semicolon(flags)},ClassBody:function(stmt,flags){var result=["{",newline],that=this;return withIndent(function(indent2){var i,iz;for(i=0,iz=stmt.body.length;i<iz;++i)result.push(indent2),result.push(that.generateExpression(stmt.body[i],Precedence.Sequence,E_TTT)),i+1<iz&&result.push(newline);}),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push(newline),result.push(base2),result.push("}"),result},ClassDeclaration:function(stmt,flags){var result,fragment;return result=["class"],stmt.id&&(result=join(result,this.generateExpression(stmt.id,Precedence.Sequence,E_TTT))),stmt.superClass&&(fragment=join("extends",this.generateExpression(stmt.superClass,Precedence.Unary,E_TTT)),result=join(result,fragment)),result.push(space),result.push(this.generateStatement(stmt.body,S_TFFT)),result},DirectiveStatement:function(stmt,flags){return extra.raw&&stmt.raw?stmt.raw+this.semicolon(flags):escapeDirective(stmt.directive)+this.semicolon(flags)},DoWhileStatement:function(stmt,flags){var result=join("do",this.maybeBlock(stmt.body,S_TFFF));return result=this.maybeBlockSuffix(stmt.body,result),join(result,["while"+space+"(",this.generateExpression(stmt.test,Precedence.Sequence,E_TTT),")"+this.semicolon(flags)])},CatchClause:function(stmt,flags){var result,that=this;return withIndent(function(){var guard;stmt.param?(result=["catch"+space+"(",that.generateExpression(stmt.param,Precedence.Sequence,E_TTT),")"],stmt.guard&&(guard=that.generateExpression(stmt.guard,Precedence.Sequence,E_TTT),result.splice(2,0," if ",guard))):result=["catch"];}),result.push(this.maybeBlock(stmt.body,S_TFFF)),result},DebuggerStatement:function(stmt,flags){return "debugger"+this.semicolon(flags)},EmptyStatement:function(stmt,flags){return ";"},ExportDefaultDeclaration:function(stmt,flags){var result=["export"],bodyFlags;return bodyFlags=flags&F_SEMICOLON_OPT?S_TFFT:S_TFFF,result=join(result,"default"),isStatement(stmt.declaration)?result=join(result,this.generateStatement(stmt.declaration,bodyFlags)):result=join(result,this.generateExpression(stmt.declaration,Precedence.Assignment,E_TTT)+this.semicolon(flags)),result},ExportNamedDeclaration:function(stmt,flags){var result=["export"],bodyFlags,that=this;return bodyFlags=flags&F_SEMICOLON_OPT?S_TFFT:S_TFFF,stmt.declaration?join(result,this.generateStatement(stmt.declaration,bodyFlags)):(stmt.specifiers&&(stmt.specifiers.length===0?result=join(result,"{"+space+"}"):stmt.specifiers[0].type===Syntax.ExportBatchSpecifier?result=join(result,this.generateExpression(stmt.specifiers[0],Precedence.Sequence,E_TTT)):(result=join(result,"{"),withIndent(function(indent2){var i,iz;for(result.push(newline),i=0,iz=stmt.specifiers.length;i<iz;++i)result.push(indent2),result.push(that.generateExpression(stmt.specifiers[i],Precedence.Sequence,E_TTT)),i+1<iz&&result.push(","+newline);}),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push(newline),result.push(base2+"}")),stmt.source?result=join(result,["from"+space,this.generateExpression(stmt.source,Precedence.Sequence,E_TTT),this.semicolon(flags)]):result.push(this.semicolon(flags))),result)},ExportAllDeclaration:function(stmt,flags){return ["export"+space,"*"+space,"from"+space,this.generateExpression(stmt.source,Precedence.Sequence,E_TTT),this.semicolon(flags)]},ExpressionStatement:function(stmt,flags){var result,fragment;function isClassPrefixed(fragment2){var code;return fragment2.slice(0,5)!=="class"?!1:(code=fragment2.charCodeAt(5),code===123||esutils.code.isWhiteSpace(code)||esutils.code.isLineTerminator(code))}function isFunctionPrefixed(fragment2){var code;return fragment2.slice(0,8)!=="function"?!1:(code=fragment2.charCodeAt(8),code===40||esutils.code.isWhiteSpace(code)||code===42||esutils.code.isLineTerminator(code))}function isAsyncPrefixed(fragment2){var code,i,iz;if(fragment2.slice(0,5)!=="async"||!esutils.code.isWhiteSpace(fragment2.charCodeAt(5)))return !1;for(i=6,iz=fragment2.length;i<iz&&esutils.code.isWhiteSpace(fragment2.charCodeAt(i));++i);return i===iz||fragment2.slice(i,i+8)!=="function"?!1:(code=fragment2.charCodeAt(i+8),code===40||esutils.code.isWhiteSpace(code)||code===42||esutils.code.isLineTerminator(code))}return result=[this.generateExpression(stmt.expression,Precedence.Sequence,E_TTT)],fragment=toSourceNodeWhenNeeded(result).toString(),fragment.charCodeAt(0)===123||isClassPrefixed(fragment)||isFunctionPrefixed(fragment)||isAsyncPrefixed(fragment)||directive&&flags&F_DIRECTIVE_CTX&&stmt.expression.type===Syntax.Literal&&typeof stmt.expression.value=="string"?result=["(",result,")"+this.semicolon(flags)]:result.push(this.semicolon(flags)),result},ImportDeclaration:function(stmt,flags){var result,cursor,that=this;return stmt.specifiers.length===0?["import",space,this.generateExpression(stmt.source,Precedence.Sequence,E_TTT),this.semicolon(flags)]:(result=["import"],cursor=0,stmt.specifiers[cursor].type===Syntax.ImportDefaultSpecifier&&(result=join(result,[this.generateExpression(stmt.specifiers[cursor],Precedence.Sequence,E_TTT)]),++cursor),stmt.specifiers[cursor]&&(cursor!==0&&result.push(","),stmt.specifiers[cursor].type===Syntax.ImportNamespaceSpecifier?result=join(result,[space,this.generateExpression(stmt.specifiers[cursor],Precedence.Sequence,E_TTT)]):(result.push(space+"{"),stmt.specifiers.length-cursor===1?(result.push(space),result.push(this.generateExpression(stmt.specifiers[cursor],Precedence.Sequence,E_TTT)),result.push(space+"}"+space)):(withIndent(function(indent2){var i,iz;for(result.push(newline),i=cursor,iz=stmt.specifiers.length;i<iz;++i)result.push(indent2),result.push(that.generateExpression(stmt.specifiers[i],Precedence.Sequence,E_TTT)),i+1<iz&&result.push(","+newline);}),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push(newline),result.push(base2+"}"+space)))),result=join(result,["from"+space,this.generateExpression(stmt.source,Precedence.Sequence,E_TTT),this.semicolon(flags)]),result)},VariableDeclarator:function(stmt,flags){var itemFlags=flags&F_ALLOW_IN?E_TTT:E_FTT;return stmt.init?[this.generateExpression(stmt.id,Precedence.Assignment,itemFlags),space,"=",space,this.generateExpression(stmt.init,Precedence.Assignment,itemFlags)]:this.generatePattern(stmt.id,Precedence.Assignment,itemFlags)},VariableDeclaration:function(stmt,flags){var result,i,iz,node,bodyFlags,that=this;result=[stmt.kind],bodyFlags=flags&F_ALLOW_IN?S_TFFF:S_FFFF;function block(){for(node=stmt.declarations[0],extra.comment&&node.leadingComments?(result.push(`\n`),result.push(addIndent(that.generateStatement(node,bodyFlags)))):(result.push(noEmptySpace()),result.push(that.generateStatement(node,bodyFlags))),i=1,iz=stmt.declarations.length;i<iz;++i)node=stmt.declarations[i],extra.comment&&node.leadingComments?(result.push(","+newline),result.push(addIndent(that.generateStatement(node,bodyFlags)))):(result.push(","+space),result.push(that.generateStatement(node,bodyFlags)));}return stmt.declarations.length>1?withIndent(block):block(),result.push(this.semicolon(flags)),result},ThrowStatement:function(stmt,flags){return [join("throw",this.generateExpression(stmt.argument,Precedence.Sequence,E_TTT)),this.semicolon(flags)]},TryStatement:function(stmt,flags){var result,i,iz,guardedHandlers;if(result=["try",this.maybeBlock(stmt.block,S_TFFF)],result=this.maybeBlockSuffix(stmt.block,result),stmt.handlers)for(i=0,iz=stmt.handlers.length;i<iz;++i)result=join(result,this.generateStatement(stmt.handlers[i],S_TFFF)),(stmt.finalizer||i+1!==iz)&&(result=this.maybeBlockSuffix(stmt.handlers[i].body,result));else {for(guardedHandlers=stmt.guardedHandlers||[],i=0,iz=guardedHandlers.length;i<iz;++i)result=join(result,this.generateStatement(guardedHandlers[i],S_TFFF)),(stmt.finalizer||i+1!==iz)&&(result=this.maybeBlockSuffix(guardedHandlers[i].body,result));if(stmt.handler)if(Array.isArray(stmt.handler))for(i=0,iz=stmt.handler.length;i<iz;++i)result=join(result,this.generateStatement(stmt.handler[i],S_TFFF)),(stmt.finalizer||i+1!==iz)&&(result=this.maybeBlockSuffix(stmt.handler[i].body,result));else result=join(result,this.generateStatement(stmt.handler,S_TFFF)),stmt.finalizer&&(result=this.maybeBlockSuffix(stmt.handler.body,result));}return stmt.finalizer&&(result=join(result,["finally",this.maybeBlock(stmt.finalizer,S_TFFF)])),result},SwitchStatement:function(stmt,flags){var result,fragment,i,iz,bodyFlags,that=this;if(withIndent(function(){result=["switch"+space+"(",that.generateExpression(stmt.discriminant,Precedence.Sequence,E_TTT),")"+space+"{"+newline];}),stmt.cases)for(bodyFlags=S_TFFF,i=0,iz=stmt.cases.length;i<iz;++i)i===iz-1&&(bodyFlags|=F_SEMICOLON_OPT),fragment=addIndent(this.generateStatement(stmt.cases[i],bodyFlags)),result.push(fragment),endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())||result.push(newline);return result.push(addIndent("}")),result},SwitchCase:function(stmt,flags){var result,fragment,i,iz,bodyFlags,that=this;return withIndent(function(){for(stmt.test?result=[join("case",that.generateExpression(stmt.test,Precedence.Sequence,E_TTT)),":"]:result=["default:"],i=0,iz=stmt.consequent.length,iz&&stmt.consequent[0].type===Syntax.BlockStatement&&(fragment=that.maybeBlock(stmt.consequent[0],S_TFFF),result.push(fragment),i=1),i!==iz&&!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())&&result.push(newline),bodyFlags=S_TFFF;i<iz;++i)i===iz-1&&flags&F_SEMICOLON_OPT&&(bodyFlags|=F_SEMICOLON_OPT),fragment=addIndent(that.generateStatement(stmt.consequent[i],bodyFlags)),result.push(fragment),i+1!==iz&&!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())&&result.push(newline);}),result},IfStatement:function(stmt,flags){var result,bodyFlags,semicolonOptional,that=this;return withIndent(function(){result=["if"+space+"(",that.generateExpression(stmt.test,Precedence.Sequence,E_TTT),")"];}),semicolonOptional=flags&F_SEMICOLON_OPT,bodyFlags=S_TFFF,semicolonOptional&&(bodyFlags|=F_SEMICOLON_OPT),stmt.alternate?(result.push(this.maybeBlock(stmt.consequent,S_TFFF)),result=this.maybeBlockSuffix(stmt.consequent,result),stmt.alternate.type===Syntax.IfStatement?result=join(result,["else ",this.generateStatement(stmt.alternate,bodyFlags)]):result=join(result,join("else",this.maybeBlock(stmt.alternate,bodyFlags)))):result.push(this.maybeBlock(stmt.consequent,bodyFlags)),result},ForStatement:function(stmt,flags){var result,that=this;return withIndent(function(){result=["for"+space+"("],stmt.init?stmt.init.type===Syntax.VariableDeclaration?result.push(that.generateStatement(stmt.init,S_FFFF)):(result.push(that.generateExpression(stmt.init,Precedence.Sequence,E_FTT)),result.push(";")):result.push(";"),stmt.test&&(result.push(space),result.push(that.generateExpression(stmt.test,Precedence.Sequence,E_TTT))),result.push(";"),stmt.update&&(result.push(space),result.push(that.generateExpression(stmt.update,Precedence.Sequence,E_TTT))),result.push(")");}),result.push(this.maybeBlock(stmt.body,flags&F_SEMICOLON_OPT?S_TFFT:S_TFFF)),result},ForInStatement:function(stmt,flags){return this.generateIterationForStatement("in",stmt,flags&F_SEMICOLON_OPT?S_TFFT:S_TFFF)},ForOfStatement:function(stmt,flags){return this.generateIterationForStatement("of",stmt,flags&F_SEMICOLON_OPT?S_TFFT:S_TFFF)},LabeledStatement:function(stmt,flags){return [stmt.label.name+":",this.maybeBlock(stmt.body,flags&F_SEMICOLON_OPT?S_TFFT:S_TFFF)]},Program:function(stmt,flags){var result,fragment,i,iz,bodyFlags;for(iz=stmt.body.length,result=[safeConcatenation&&iz>0?`\n`:""],bodyFlags=S_TFTF,i=0;i<iz;++i)!safeConcatenation&&i===iz-1&&(bodyFlags|=F_SEMICOLON_OPT),preserveBlankLines&&(i===0&&(stmt.body[0].leadingComments||generateBlankLines(stmt.range[0],stmt.body[i].range[0],result)),i>0&&!stmt.body[i-1].trailingComments&&!stmt.body[i].leadingComments&&generateBlankLines(stmt.body[i-1].range[1],stmt.body[i].range[0],result)),fragment=addIndent(this.generateStatement(stmt.body[i],bodyFlags)),result.push(fragment),i+1<iz&&!endsWithLineTerminator(toSourceNodeWhenNeeded(fragment).toString())&&(preserveBlankLines&&stmt.body[i+1].leadingComments||result.push(newline)),preserveBlankLines&&i===iz-1&&(stmt.body[i].trailingComments||generateBlankLines(stmt.body[i].range[1],stmt.range[1],result));return result},FunctionDeclaration:function(stmt,flags){return [generateAsyncPrefix(stmt,!0),"function",generateStarSuffix(stmt)||noEmptySpace(),stmt.id?generateIdentifier(stmt.id):"",this.generateFunctionBody(stmt)]},ReturnStatement:function(stmt,flags){return stmt.argument?[join("return",this.generateExpression(stmt.argument,Precedence.Sequence,E_TTT)),this.semicolon(flags)]:["return"+this.semicolon(flags)]},WhileStatement:function(stmt,flags){var result,that=this;return withIndent(function(){result=["while"+space+"(",that.generateExpression(stmt.test,Precedence.Sequence,E_TTT),")"];}),result.push(this.maybeBlock(stmt.body,flags&F_SEMICOLON_OPT?S_TFFT:S_TFFF)),result},WithStatement:function(stmt,flags){var result,that=this;return withIndent(function(){result=["with"+space+"(",that.generateExpression(stmt.object,Precedence.Sequence,E_TTT),")"];}),result.push(this.maybeBlock(stmt.body,flags&F_SEMICOLON_OPT?S_TFFT:S_TFFF)),result}},merge(CodeGenerator.prototype,CodeGenerator.Statement),CodeGenerator.Expression={SequenceExpression:function(expr,precedence,flags){var result,i,iz;for(Precedence.Sequence<precedence&&(flags|=F_ALLOW_IN),result=[],i=0,iz=expr.expressions.length;i<iz;++i)result.push(this.generateExpression(expr.expressions[i],Precedence.Assignment,flags)),i+1<iz&&result.push(","+space);return parenthesize(result,Precedence.Sequence,precedence)},AssignmentExpression:function(expr,precedence,flags){return this.generateAssignment(expr.left,expr.right,expr.operator,precedence,flags)},ArrowFunctionExpression:function(expr,precedence,flags){return parenthesize(this.generateFunctionBody(expr),Precedence.ArrowFunction,precedence)},ConditionalExpression:function(expr,precedence,flags){return Precedence.Conditional<precedence&&(flags|=F_ALLOW_IN),parenthesize([this.generateExpression(expr.test,Precedence.Coalesce,flags),space+"?"+space,this.generateExpression(expr.consequent,Precedence.Assignment,flags),space+":"+space,this.generateExpression(expr.alternate,Precedence.Assignment,flags)],Precedence.Conditional,precedence)},LogicalExpression:function(expr,precedence,flags){return expr.operator==="??"&&(flags|=F_FOUND_COALESCE),this.BinaryExpression(expr,precedence,flags)},BinaryExpression:function(expr,precedence,flags){var result,leftPrecedence,rightPrecedence,currentPrecedence,fragment,leftSource;return currentPrecedence=BinaryPrecedence[expr.operator],leftPrecedence=expr.operator==="**"?Precedence.Postfix:currentPrecedence,rightPrecedence=expr.operator==="**"?currentPrecedence:currentPrecedence+1,currentPrecedence<precedence&&(flags|=F_ALLOW_IN),fragment=this.generateExpression(expr.left,leftPrecedence,flags),leftSource=fragment.toString(),leftSource.charCodeAt(leftSource.length-1)===47&&esutils.code.isIdentifierPartES5(expr.operator.charCodeAt(0))?result=[fragment,noEmptySpace(),expr.operator]:result=join(fragment,expr.operator),fragment=this.generateExpression(expr.right,rightPrecedence,flags),expr.operator==="/"&&fragment.toString().charAt(0)==="/"||expr.operator.slice(-1)==="<"&&fragment.toString().slice(0,3)==="!--"?(result.push(noEmptySpace()),result.push(fragment)):result=join(result,fragment),expr.operator==="in"&&!(flags&F_ALLOW_IN)?["(",result,")"]:(expr.operator==="||"||expr.operator==="&&")&&flags&F_FOUND_COALESCE?["(",result,")"]:parenthesize(result,currentPrecedence,precedence)},CallExpression:function(expr,precedence,flags){var result,i,iz;for(result=[this.generateExpression(expr.callee,Precedence.Call,E_TTF)],expr.optional&&result.push("?."),result.push("("),i=0,iz=expr.arguments.length;i<iz;++i)result.push(this.generateExpression(expr.arguments[i],Precedence.Assignment,E_TTT)),i+1<iz&&result.push(","+space);return result.push(")"),flags&F_ALLOW_CALL?parenthesize(result,Precedence.Call,precedence):["(",result,")"]},ChainExpression:function(expr,precedence,flags){Precedence.OptionalChaining<precedence&&(flags|=F_ALLOW_CALL);var result=this.generateExpression(expr.expression,Precedence.OptionalChaining,flags);return parenthesize(result,Precedence.OptionalChaining,precedence)},NewExpression:function(expr,precedence,flags){var result,length,i,iz,itemFlags;if(length=expr.arguments.length,itemFlags=flags&F_ALLOW_UNPARATH_NEW&&!parentheses&&length===0?E_TFT:E_TFF,result=join("new",this.generateExpression(expr.callee,Precedence.New,itemFlags)),!(flags&F_ALLOW_UNPARATH_NEW)||parentheses||length>0){for(result.push("("),i=0,iz=length;i<iz;++i)result.push(this.generateExpression(expr.arguments[i],Precedence.Assignment,E_TTT)),i+1<iz&&result.push(","+space);result.push(")");}return parenthesize(result,Precedence.New,precedence)},MemberExpression:function(expr,precedence,flags){var result,fragment;return result=[this.generateExpression(expr.object,Precedence.Call,flags&F_ALLOW_CALL?E_TTF:E_TFF)],expr.computed?(expr.optional&&result.push("?."),result.push("["),result.push(this.generateExpression(expr.property,Precedence.Sequence,flags&F_ALLOW_CALL?E_TTT:E_TFT)),result.push("]")):(!expr.optional&&expr.object.type===Syntax.Literal&&typeof expr.object.value=="number"&&(fragment=toSourceNodeWhenNeeded(result).toString(),fragment.indexOf(".")<0&&!/[eExX]/.test(fragment)&&esutils.code.isDecimalDigit(fragment.charCodeAt(fragment.length-1))&&!(fragment.length>=2&&fragment.charCodeAt(0)===48)&&result.push(" ")),result.push(expr.optional?"?.":"."),result.push(generateIdentifier(expr.property))),parenthesize(result,Precedence.Member,precedence)},MetaProperty:function(expr,precedence,flags){var result;return result=[],result.push(typeof expr.meta=="string"?expr.meta:generateIdentifier(expr.meta)),result.push("."),result.push(typeof expr.property=="string"?expr.property:generateIdentifier(expr.property)),parenthesize(result,Precedence.Member,precedence)},UnaryExpression:function(expr,precedence,flags){var result,fragment,rightCharCode,leftSource,leftCharCode;return fragment=this.generateExpression(expr.argument,Precedence.Unary,E_TTT),space===""?result=join(expr.operator,fragment):(result=[expr.operator],expr.operator.length>2?result=join(result,fragment):(leftSource=toSourceNodeWhenNeeded(result).toString(),leftCharCode=leftSource.charCodeAt(leftSource.length-1),rightCharCode=fragment.toString().charCodeAt(0),((leftCharCode===43||leftCharCode===45)&&leftCharCode===rightCharCode||esutils.code.isIdentifierPartES5(leftCharCode)&&esutils.code.isIdentifierPartES5(rightCharCode))&&result.push(noEmptySpace()),result.push(fragment))),parenthesize(result,Precedence.Unary,precedence)},YieldExpression:function(expr,precedence,flags){var result;return expr.delegate?result="yield*":result="yield",expr.argument&&(result=join(result,this.generateExpression(expr.argument,Precedence.Yield,E_TTT))),parenthesize(result,Precedence.Yield,precedence)},AwaitExpression:function(expr,precedence,flags){var result=join(expr.all?"await*":"await",this.generateExpression(expr.argument,Precedence.Await,E_TTT));return parenthesize(result,Precedence.Await,precedence)},UpdateExpression:function(expr,precedence,flags){return expr.prefix?parenthesize([expr.operator,this.generateExpression(expr.argument,Precedence.Unary,E_TTT)],Precedence.Unary,precedence):parenthesize([this.generateExpression(expr.argument,Precedence.Postfix,E_TTT),expr.operator],Precedence.Postfix,precedence)},FunctionExpression:function(expr,precedence,flags){var result=[generateAsyncPrefix(expr,!0),"function"];return expr.id?(result.push(generateStarSuffix(expr)||noEmptySpace()),result.push(generateIdentifier(expr.id))):result.push(generateStarSuffix(expr)||space),result.push(this.generateFunctionBody(expr)),result},ArrayPattern:function(expr,precedence,flags){return this.ArrayExpression(expr,precedence,flags,!0)},ArrayExpression:function(expr,precedence,flags,isPattern){var result,multiline,that=this;return expr.elements.length?(multiline=isPattern?!1:expr.elements.length>1,result=["[",multiline?newline:""],withIndent(function(indent2){var i,iz;for(i=0,iz=expr.elements.length;i<iz;++i)expr.elements[i]?(result.push(multiline?indent2:""),result.push(that.generateExpression(expr.elements[i],Precedence.Assignment,E_TTT))):(multiline&&result.push(indent2),i+1===iz&&result.push(",")),i+1<iz&&result.push(","+(multiline?newline:space));}),multiline&&!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())&&result.push(newline),result.push(multiline?base2:""),result.push("]"),result):"[]"},RestElement:function(expr,precedence,flags){return "..."+this.generatePattern(expr.argument)},ClassExpression:function(expr,precedence,flags){var result,fragment;return result=["class"],expr.id&&(result=join(result,this.generateExpression(expr.id,Precedence.Sequence,E_TTT))),expr.superClass&&(fragment=join("extends",this.generateExpression(expr.superClass,Precedence.Unary,E_TTT)),result=join(result,fragment)),result.push(space),result.push(this.generateStatement(expr.body,S_TFFT)),result},MethodDefinition:function(expr,precedence,flags){var result,fragment;return expr.static?result=["static"+space]:result=[],expr.kind==="get"||expr.kind==="set"?fragment=[join(expr.kind,this.generatePropertyKey(expr.key,expr.computed)),this.generateFunctionBody(expr.value)]:fragment=[generateMethodPrefix(expr),this.generatePropertyKey(expr.key,expr.computed),this.generateFunctionBody(expr.value)],join(result,fragment)},Property:function(expr,precedence,flags){return expr.kind==="get"||expr.kind==="set"?[expr.kind,noEmptySpace(),this.generatePropertyKey(expr.key,expr.computed),this.generateFunctionBody(expr.value)]:expr.shorthand?expr.value.type==="AssignmentPattern"?this.AssignmentPattern(expr.value,Precedence.Sequence,E_TTT):this.generatePropertyKey(expr.key,expr.computed):expr.method?[generateMethodPrefix(expr),this.generatePropertyKey(expr.key,expr.computed),this.generateFunctionBody(expr.value)]:[this.generatePropertyKey(expr.key,expr.computed),":"+space,this.generateExpression(expr.value,Precedence.Assignment,E_TTT)]},ObjectExpression:function(expr,precedence,flags){var multiline,result,fragment,that=this;return expr.properties.length?(multiline=expr.properties.length>1,withIndent(function(){fragment=that.generateExpression(expr.properties[0],Precedence.Sequence,E_TTT);}),!multiline&&!hasLineTerminator(toSourceNodeWhenNeeded(fragment).toString())?["{",space,fragment,space,"}"]:(withIndent(function(indent2){var i,iz;if(result=["{",newline,indent2,fragment],multiline)for(result.push(","+newline),i=1,iz=expr.properties.length;i<iz;++i)result.push(indent2),result.push(that.generateExpression(expr.properties[i],Precedence.Sequence,E_TTT)),i+1<iz&&result.push(","+newline);}),endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())||result.push(newline),result.push(base2),result.push("}"),result)):"{}"},AssignmentPattern:function(expr,precedence,flags){return this.generateAssignment(expr.left,expr.right,"=",precedence,flags)},ObjectPattern:function(expr,precedence,flags){var result,i,iz,multiline,property,that=this;if(!expr.properties.length)return "{}";if(multiline=!1,expr.properties.length===1)property=expr.properties[0],property.type===Syntax.Property&&property.value.type!==Syntax.Identifier&&(multiline=!0);else for(i=0,iz=expr.properties.length;i<iz;++i)if(property=expr.properties[i],property.type===Syntax.Property&&!property.shorthand){multiline=!0;break}return result=["{",multiline?newline:""],withIndent(function(indent2){var i2,iz2;for(i2=0,iz2=expr.properties.length;i2<iz2;++i2)result.push(multiline?indent2:""),result.push(that.generateExpression(expr.properties[i2],Precedence.Sequence,E_TTT)),i2+1<iz2&&result.push(","+(multiline?newline:space));}),multiline&&!endsWithLineTerminator(toSourceNodeWhenNeeded(result).toString())&&result.push(newline),result.push(multiline?base2:""),result.push("}"),result},ThisExpression:function(expr,precedence,flags){return "this"},Super:function(expr,precedence,flags){return "super"},Identifier:function(expr,precedence,flags){return generateIdentifier(expr)},ImportDefaultSpecifier:function(expr,precedence,flags){return generateIdentifier(expr.id||expr.local)},ImportNamespaceSpecifier:function(expr,precedence,flags){var result=["*"],id=expr.id||expr.local;return id&&result.push(space+"as"+noEmptySpace()+generateIdentifier(id)),result},ImportSpecifier:function(expr,precedence,flags){var imported=expr.imported,result=[imported.name],local=expr.local;return local&&local.name!==imported.name&&result.push(noEmptySpace()+"as"+noEmptySpace()+generateIdentifier(local)),result},ExportSpecifier:function(expr,precedence,flags){var local=expr.local,result=[local.name],exported=expr.exported;return exported&&exported.name!==local.name&&result.push(noEmptySpace()+"as"+noEmptySpace()+generateIdentifier(exported)),result},Literal:function(expr,precedence,flags){var raw;if(expr.hasOwnProperty("raw")&&parse5&&extra.raw)try{if(raw=parse5(expr.raw).body[0].expression,raw.type===Syntax.Literal&&raw.value===expr.value)return expr.raw}catch{}return expr.regex?"/"+expr.regex.pattern+"/"+expr.regex.flags:typeof expr.value=="bigint"?expr.value.toString()+"n":expr.bigint?expr.bigint+"n":expr.value===null?"null":typeof expr.value=="string"?escapeString(expr.value):typeof expr.value=="number"?generateNumber(expr.value):typeof expr.value=="boolean"?expr.value?"true":"false":generateRegExp(expr.value)},GeneratorExpression:function(expr,precedence,flags){return this.ComprehensionExpression(expr,precedence,flags)},ComprehensionExpression:function(expr,precedence,flags){var result,i,iz,fragment,that=this;return result=expr.type===Syntax.GeneratorExpression?["("]:["["],extra.moz.comprehensionExpressionStartsWithAssignment&&(fragment=this.generateExpression(expr.body,Precedence.Assignment,E_TTT),result.push(fragment)),expr.blocks&&withIndent(function(){for(i=0,iz=expr.blocks.length;i<iz;++i)fragment=that.generateExpression(expr.blocks[i],Precedence.Sequence,E_TTT),i>0||extra.moz.comprehensionExpressionStartsWithAssignment?result=join(result,fragment):result.push(fragment);}),expr.filter&&(result=join(result,"if"+space),fragment=this.generateExpression(expr.filter,Precedence.Sequence,E_TTT),result=join(result,["(",fragment,")"])),extra.moz.comprehensionExpressionStartsWithAssignment||(fragment=this.generateExpression(expr.body,Precedence.Assignment,E_TTT),result=join(result,fragment)),result.push(expr.type===Syntax.GeneratorExpression?")":"]"),result},ComprehensionBlock:function(expr,precedence,flags){var fragment;return expr.left.type===Syntax.VariableDeclaration?fragment=[expr.left.kind,noEmptySpace(),this.generateStatement(expr.left.declarations[0],S_FFFF)]:fragment=this.generateExpression(expr.left,Precedence.Call,E_TTT),fragment=join(fragment,expr.of?"of":"in"),fragment=join(fragment,this.generateExpression(expr.right,Precedence.Sequence,E_TTT)),["for"+space+"(",fragment,")"]},SpreadElement:function(expr,precedence,flags){return ["...",this.generateExpression(expr.argument,Precedence.Assignment,E_TTT)]},TaggedTemplateExpression:function(expr,precedence,flags){var itemFlags=E_TTF;flags&F_ALLOW_CALL||(itemFlags=E_TFF);var result=[this.generateExpression(expr.tag,Precedence.Call,itemFlags),this.generateExpression(expr.quasi,Precedence.Primary,E_FFT)];return parenthesize(result,Precedence.TaggedTemplate,precedence)},TemplateElement:function(expr,precedence,flags){return expr.value.raw},TemplateLiteral:function(expr,precedence,flags){var result,i,iz;for(result=["`"],i=0,iz=expr.quasis.length;i<iz;++i)result.push(this.generateExpression(expr.quasis[i],Precedence.Primary,E_TTT)),i+1<iz&&(result.push("${"+space),result.push(this.generateExpression(expr.expressions[i],Precedence.Sequence,E_TTT)),result.push(space+"}"));return result.push("`"),result},ModuleSpecifier:function(expr,precedence,flags){return this.Literal(expr,precedence,flags)},ImportExpression:function(expr,precedence,flag){return parenthesize(["import(",this.generateExpression(expr.source,Precedence.Assignment,E_TTT),")"],Precedence.Call,precedence)}},merge(CodeGenerator.prototype,CodeGenerator.Expression),CodeGenerator.prototype.generateExpression=function(expr,precedence,flags){var result,type;return type=expr.type||Syntax.Property,extra.verbatim&&expr.hasOwnProperty(extra.verbatim)?generateVerbatim(expr,precedence):(result=this[type](expr,precedence,flags),extra.comment&&(result=addComments(expr,result)),toSourceNodeWhenNeeded(result,expr))},CodeGenerator.prototype.generateStatement=function(stmt,flags){var result,fragment;return result=this[stmt.type](stmt,flags),extra.comment&&(result=addComments(stmt,result)),fragment=toSourceNodeWhenNeeded(result).toString(),stmt.type===Syntax.Program&&!safeConcatenation&&newline===""&&fragment.charAt(fragment.length-1)===`\n`&&(result=sourceMap?toSourceNodeWhenNeeded(result).replaceRight(/\\s+$/,""):fragment.replace(/\\s+$/,"")),toSourceNodeWhenNeeded(result,stmt)};function generateInternal(node){var codegen;if(codegen=new CodeGenerator,isStatement(node))return codegen.generateStatement(node,S_TFFF);if(isExpression(node))return codegen.generateExpression(node,Precedence.Sequence,E_TTT);throw new Error("Unknown node type: "+node.type)}function generate2(node,options){var defaultOptions2=getDefaultOptions(),result,pair;return options!=null?(typeof options.indent=="string"&&(defaultOptions2.format.indent.style=options.indent),typeof options.base=="number"&&(defaultOptions2.format.indent.base=options.base),options=updateDeeply(defaultOptions2,options),indent=options.format.indent.style,typeof options.base=="string"?base2=options.base:base2=stringRepeat(indent,options.format.indent.base)):(options=defaultOptions2,indent=options.format.indent.style,base2=stringRepeat(indent,options.format.indent.base)),json=options.format.json,renumber=options.format.renumber,hexadecimal=json?!1:options.format.hexadecimal,quotes=json?"double":options.format.quotes,escapeless=options.format.escapeless,newline=options.format.newline,space=options.format.space,options.format.compact&&(newline=space=indent=base2=""),parentheses=options.format.parentheses,semicolons=options.format.semicolons,safeConcatenation=options.format.safeConcatenation,directive=options.directive,parse5=json?null:options.parse,sourceMap=options.sourceMap,sourceCode=options.sourceCode,preserveBlankLines=options.format.preserveBlankLines&&sourceCode!==null,extra=options,sourceMap&&(exports.browser?SourceNode=__webpack_require__.g.sourceMap.SourceNode:SourceNode=require_source_map().SourceNode),result=generateInternal(node),sourceMap?(pair=result.toStringWithSourceMap({file:options.file,sourceRoot:options.sourceMapRoot}),options.sourceContent&&pair.map.setSourceContent(options.sourceMap,options.sourceContent),options.sourceMapWithCode?pair:pair.map.toString()):(pair={code:result.toString(),map:null},options.sourceMapWithCode?pair:pair.code)}FORMAT_MINIFY={indent:{style:"",base:0},renumber:!0,hexadecimal:!0,quotes:"auto",escapeless:!0,compact:!0,parentheses:!1,semicolons:!1},FORMAT_DEFAULTS=getDefaultOptions().format,exports.version=require_package().version,exports.generate=generate2,exports.attachComments=estraverse.attachComments,exports.Precedence=updateDeeply({},Precedence),exports.browser=!1,exports.FORMAT_MINIFY=FORMAT_MINIFY,exports.FORMAT_DEFAULTS=FORMAT_DEFAULTS;})();}});var acorn_exports={};(0,chunk_XP5HYGXS/* __export */.VA)(acorn_exports,{Node:()=>Node,Parser:()=>Parser,Position:()=>Position,SourceLocation:()=>SourceLocation,TokContext:()=>TokContext,Token:()=>Token,TokenType:()=>TokenType,defaultOptions:()=>defaultOptions,getLineInfo:()=>getLineInfo,isIdentifierChar:()=>isIdentifierChar,isIdentifierStart:()=>isIdentifierStart,isNewLine:()=>isNewLine,keywordTypes:()=>keywords$1,lineBreak:()=>lineBreak,lineBreakG:()=>lineBreakG,nonASCIIwhitespace:()=>nonASCIIwhitespace,parse:()=>parse3,parseExpressionAt:()=>parseExpressionAt2,tokContexts:()=>types$1,tokTypes:()=>types,tokenizer:()=>tokenizer2,version:()=>version});function isInAstralSet(code,set){for(var pos=65536,i=0;i<set.length;i+=2){if(pos+=set[i],pos>code)return !1;if(pos+=set[i+1],pos>=code)return !0}}function isIdentifierStart(code,astral){return code<65?code===36:code<91?!0:code<97?code===95:code<123?!0:code<=65535?code>=170&&nonASCIIidentifierStart.test(String.fromCharCode(code)):astral===!1?!1:isInAstralSet(code,astralIdentifierStartCodes)}function isIdentifierChar(code,astral){return code<48?code===36:code<58?!0:code<65?!1:code<91?!0:code<97?code===95:code<123?!0:code<=65535?code>=170&&nonASCIIidentifier.test(String.fromCharCode(code)):astral===!1?!1:isInAstralSet(code,astralIdentifierStartCodes)||isInAstralSet(code,astralIdentifierCodes)}function binop(name,prec){return new TokenType(name,{beforeExpr:!0,binop:prec})}function kw(name,options){return options===void 0&&(options={}),options.keyword=name,keywords$1[name]=new TokenType(name,options)}function isNewLine(code,ecma2019String){return code===10||code===13||!ecma2019String&&(code===8232||code===8233)}function has(obj,propName){return chunk_EWIU6LHT_hasOwnProperty.call(obj,propName)}function wordsRegexp(words){return new RegExp("^(?:"+words.replace(/ /g,"|")+")$")}function getLineInfo(input,offset2){for(var line=1,cur=0;;){lineBreakG.lastIndex=cur;var match=lineBreakG.exec(input);if(match&&match.index<offset2)++line,cur=match.index+match[0].length;else return new Position(line,offset2-cur)}}function getOptions(opts){var options={};for(var opt in defaultOptions)options[opt]=opts&&has(opts,opt)?opts[opt]:defaultOptions[opt];if(options.ecmaVersion>=2015&&(options.ecmaVersion-=2009),options.allowReserved==null&&(options.allowReserved=options.ecmaVersion<5),isArray(options.onToken)){var tokens=options.onToken;options.onToken=function(token){return tokens.push(token)};}return isArray(options.onComment)&&(options.onComment=pushComment(options,options.onComment)),options}function pushComment(options,array){return function(block,text,start,end,startLoc,endLoc){var comment={type:block?"Block":"Line",value:text,start,end};options.locations&&(comment.loc=new SourceLocation(this,startLoc,endLoc)),options.ranges&&(comment.range=[start,end]),array.push(comment);}}function functionFlags(async,generator){return SCOPE_FUNCTION|(async?SCOPE_ASYNC:0)|(generator?SCOPE_GENERATOR:0)}function DestructuringErrors(){this.shorthandAssign=this.trailingComma=this.parenthesizedAssign=this.parenthesizedBind=this.doubleProto=-1;}function finishNodeAt(node,type,pos,loc){return node.type=type,node.end=pos,this.options.locations&&(node.loc.end=loc),this.options.ranges&&(node.range[1]=pos),node}function buildUnicodeData(ecmaVersion){var d=data[ecmaVersion]={binary:wordsRegexp(unicodeBinaryProperties[ecmaVersion]+" "+unicodeGeneralCategoryValues),nonBinary:{General_Category:wordsRegexp(unicodeGeneralCategoryValues),Script:wordsRegexp(unicodeScriptValues[ecmaVersion])}};d.nonBinary.Script_Extensions=d.nonBinary.Script,d.nonBinary.gc=d.nonBinary.General_Category,d.nonBinary.sc=d.nonBinary.Script,d.nonBinary.scx=d.nonBinary.Script_Extensions;}function codePointToString(ch){return ch<=65535?String.fromCharCode(ch):(ch-=65536,String.fromCharCode((ch>>10)+55296,(ch&1023)+56320))}function isSyntaxCharacter(ch){return ch===36||ch>=40&&ch<=43||ch===46||ch===63||ch>=91&&ch<=94||ch>=123&&ch<=125}function isRegExpIdentifierStart(ch){return isIdentifierStart(ch,!0)||ch===36||ch===95}function isRegExpIdentifierPart(ch){return isIdentifierChar(ch,!0)||ch===36||ch===95||ch===8204||ch===8205}function isControlLetter(ch){return ch>=65&&ch<=90||ch>=97&&ch<=122}function isValidUnicode(ch){return ch>=0&&ch<=1114111}function isCharacterClassEscape(ch){return ch===100||ch===68||ch===115||ch===83||ch===119||ch===87}function isUnicodePropertyNameCharacter(ch){return isControlLetter(ch)||ch===95}function isUnicodePropertyValueCharacter(ch){return isUnicodePropertyNameCharacter(ch)||isDecimalDigit(ch)}function isDecimalDigit(ch){return ch>=48&&ch<=57}function isHexDigit(ch){return ch>=48&&ch<=57||ch>=65&&ch<=70||ch>=97&&ch<=102}function hexToInt(ch){return ch>=65&&ch<=70?10+(ch-65):ch>=97&&ch<=102?10+(ch-97):ch-48}function isOctalDigit(ch){return ch>=48&&ch<=55}function stringToNumber(str,isLegacyOctalNumericLiteral){return isLegacyOctalNumericLiteral?parseInt(str,8):parseFloat(str.replace(/_/g,""))}function stringToBigInt(str){return typeof BigInt!="function"?null:BigInt(str.replace(/_/g,""))}function codePointToString$1(code){return code<=65535?String.fromCharCode(code):(code-=65536,String.fromCharCode((code>>10)+55296,(code&1023)+56320))}function parse3(input,options){return Parser.parse(input,options)}function parseExpressionAt2(input,pos,options){return Parser.parseExpressionAt(input,pos,options)}function tokenizer2(input,options){return Parser.tokenizer(input,options)}var reservedWords,ecma5AndLessKeywords,keywords,keywordRelationalOperator,nonASCIIidentifierStartChars,nonASCIIidentifierChars,nonASCIIidentifierStart,nonASCIIidentifier,astralIdentifierStartCodes,astralIdentifierCodes,TokenType,beforeExpr,startsExpr,keywords$1,types,lineBreak,lineBreakG,nonASCIIwhitespace,skipWhiteSpace,ref,chunk_EWIU6LHT_hasOwnProperty,chunk_EWIU6LHT_toString,isArray,Position,SourceLocation,defaultOptions,SCOPE_TOP,SCOPE_FUNCTION,SCOPE_VAR,SCOPE_ASYNC,SCOPE_GENERATOR,SCOPE_ARROW,SCOPE_SIMPLE_CATCH,SCOPE_SUPER,SCOPE_DIRECT_SUPER,BIND_NONE,BIND_VAR,BIND_LEXICAL,BIND_FUNCTION,BIND_SIMPLE_CATCH,BIND_OUTSIDE,Parser,prototypeAccessors,pp,literal,pp$1,loopLabel,switchLabel,empty,FUNC_STATEMENT,FUNC_HANGING_STATEMENT,FUNC_NULLABLE_ID,pp$2,pp$3,empty$1,pp$4,pp$5,Scope,Node,pp$6,TokContext,types$1,pp$7,ecma9BinaryProperties,ecma10BinaryProperties,ecma11BinaryProperties,unicodeBinaryProperties,unicodeGeneralCategoryValues,ecma9ScriptValues,ecma10ScriptValues,ecma11ScriptValues,unicodeScriptValues,data,pp$8,RegExpValidationState,Token,pp$9,INVALID_TEMPLATE_ESCAPE_ERROR,version,init_acorn=(0,chunk_XP5HYGXS/* __esm */.E)({"../../node_modules/acorn/dist/acorn.mjs"(){reservedWords={3:"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile",5:"class enum extends super const export import",6:"enum",strict:"implements interface let package private protected public static yield",strictBind:"eval arguments"},ecma5AndLessKeywords="break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this",keywords={5:ecma5AndLessKeywords,"5module":ecma5AndLessKeywords+" export import",6:ecma5AndLessKeywords+" const class extends export import super"},keywordRelationalOperator=/^in(stanceof)?$/,nonASCIIidentifierStartChars="\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC",nonASCIIidentifierChars="\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF\\u1AC0\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F",nonASCIIidentifierStart=new RegExp("["+nonASCIIidentifierStartChars+"]"),nonASCIIidentifier=new RegExp("["+nonASCIIidentifierStartChars+nonASCIIidentifierChars+"]");nonASCIIidentifierStartChars=nonASCIIidentifierChars=null;astralIdentifierStartCodes=[0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938],astralIdentifierCodes=[509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];TokenType=function(label,conf){conf===void 0&&(conf={}),this.label=label,this.keyword=conf.keyword,this.beforeExpr=!!conf.beforeExpr,this.startsExpr=!!conf.startsExpr,this.isLoop=!!conf.isLoop,this.isAssign=!!conf.isAssign,this.prefix=!!conf.prefix,this.postfix=!!conf.postfix,this.binop=conf.binop||null,this.updateContext=null;};beforeExpr={beforeExpr:!0},startsExpr={startsExpr:!0},keywords$1={};types={num:new TokenType("num",startsExpr),regexp:new TokenType("regexp",startsExpr),string:new TokenType("string",startsExpr),name:new TokenType("name",startsExpr),eof:new TokenType("eof"),bracketL:new TokenType("[",{beforeExpr:!0,startsExpr:!0}),bracketR:new TokenType("]"),braceL:new TokenType("{",{beforeExpr:!0,startsExpr:!0}),braceR:new TokenType("}"),parenL:new TokenType("(",{beforeExpr:!0,startsExpr:!0}),parenR:new TokenType(")"),comma:new TokenType(",",beforeExpr),semi:new TokenType(";",beforeExpr),colon:new TokenType(":",beforeExpr),dot:new TokenType("."),question:new TokenType("?",beforeExpr),questionDot:new TokenType("?."),arrow:new TokenType("=>",beforeExpr),template:new TokenType("template"),invalidTemplate:new TokenType("invalidTemplate"),ellipsis:new TokenType("...",beforeExpr),backQuote:new TokenType("`",startsExpr),dollarBraceL:new TokenType("${",{beforeExpr:!0,startsExpr:!0}),eq:new TokenType("=",{beforeExpr:!0,isAssign:!0}),assign:new TokenType("_=",{beforeExpr:!0,isAssign:!0}),incDec:new TokenType("++/--",{prefix:!0,postfix:!0,startsExpr:!0}),prefix:new TokenType("!/~",{beforeExpr:!0,prefix:!0,startsExpr:!0}),logicalOR:binop("||",1),logicalAND:binop("&&",2),bitwiseOR:binop("|",3),bitwiseXOR:binop("^",4),bitwiseAND:binop("&",5),equality:binop("==/!=/===/!==",6),relational:binop("</>/<=/>=",7),bitShift:binop("<</>>/>>>",8),plusMin:new TokenType("+/-",{beforeExpr:!0,binop:9,prefix:!0,startsExpr:!0}),modulo:binop("%",10),star:binop("*",10),slash:binop("/",10),starstar:new TokenType("**",{beforeExpr:!0}),coalesce:binop("??",1),_break:kw("break"),_case:kw("case",beforeExpr),_catch:kw("catch"),_continue:kw("continue"),_debugger:kw("debugger"),_default:kw("default",beforeExpr),_do:kw("do",{isLoop:!0,beforeExpr:!0}),_else:kw("else",beforeExpr),_finally:kw("finally"),_for:kw("for",{isLoop:!0}),_function:kw("function",startsExpr),_if:kw("if"),_return:kw("return",beforeExpr),_switch:kw("switch"),_throw:kw("throw",beforeExpr),_try:kw("try"),_var:kw("var"),_const:kw("const"),_while:kw("while",{isLoop:!0}),_with:kw("with"),_new:kw("new",{beforeExpr:!0,startsExpr:!0}),_this:kw("this",startsExpr),_super:kw("super",startsExpr),_class:kw("class",startsExpr),_extends:kw("extends",beforeExpr),_export:kw("export"),_import:kw("import",startsExpr),_null:kw("null",startsExpr),_true:kw("true",startsExpr),_false:kw("false",startsExpr),_in:kw("in",{beforeExpr:!0,binop:7}),_instanceof:kw("instanceof",{beforeExpr:!0,binop:7}),_typeof:kw("typeof",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_void:kw("void",{beforeExpr:!0,prefix:!0,startsExpr:!0}),_delete:kw("delete",{beforeExpr:!0,prefix:!0,startsExpr:!0})},lineBreak=/\\r\\n?|\\n|\\u2028|\\u2029/,lineBreakG=new RegExp(lineBreak.source,"g");nonASCIIwhitespace=/[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,skipWhiteSpace=/(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g,ref=Object.prototype,chunk_EWIU6LHT_hasOwnProperty=ref.hasOwnProperty,chunk_EWIU6LHT_toString=ref.toString;isArray=Array.isArray||function(obj){return chunk_EWIU6LHT_toString.call(obj)==="[object Array]"};Position=function(line,col){this.line=line,this.column=col;};Position.prototype.offset=function(n){return new Position(this.line,this.column+n)};SourceLocation=function(p,start,end){this.start=start,this.end=end,p.sourceFile!==null&&(this.source=p.sourceFile);};defaultOptions={ecmaVersion:10,sourceType:"script",onInsertedSemicolon:null,onTrailingComma:null,allowReserved:null,allowReturnOutsideFunction:!1,allowImportExportEverywhere:!1,allowAwaitOutsideFunction:!1,allowHashBang:!1,locations:!1,onToken:null,onComment:null,ranges:!1,program:null,sourceFile:null,directSourceFile:null,preserveParens:!1};SCOPE_TOP=1,SCOPE_FUNCTION=2,SCOPE_VAR=SCOPE_TOP|SCOPE_FUNCTION,SCOPE_ASYNC=4,SCOPE_GENERATOR=8,SCOPE_ARROW=16,SCOPE_SIMPLE_CATCH=32,SCOPE_SUPER=64,SCOPE_DIRECT_SUPER=128;BIND_NONE=0,BIND_VAR=1,BIND_LEXICAL=2,BIND_FUNCTION=3,BIND_SIMPLE_CATCH=4,BIND_OUTSIDE=5,Parser=function(options,input,startPos){this.options=options=getOptions(options),this.sourceFile=options.sourceFile,this.keywords=wordsRegexp(keywords[options.ecmaVersion>=6?6:options.sourceType==="module"?"5module":5]);var reserved="";if(options.allowReserved!==!0){for(var v=options.ecmaVersion;!(reserved=reservedWords[v]);v--);options.sourceType==="module"&&(reserved+=" await");}this.reservedWords=wordsRegexp(reserved);var reservedStrict=(reserved?reserved+" ":"")+reservedWords.strict;this.reservedWordsStrict=wordsRegexp(reservedStrict),this.reservedWordsStrictBind=wordsRegexp(reservedStrict+" "+reservedWords.strictBind),this.input=String(input),this.containsEsc=!1,startPos?(this.pos=startPos,this.lineStart=this.input.lastIndexOf(`\n`,startPos-1)+1,this.curLine=this.input.slice(0,this.lineStart).split(lineBreak).length):(this.pos=this.lineStart=0,this.curLine=1),this.type=types.eof,this.value=null,this.start=this.end=this.pos,this.startLoc=this.endLoc=this.curPosition(),this.lastTokEndLoc=this.lastTokStartLoc=null,this.lastTokStart=this.lastTokEnd=this.pos,this.context=this.initialContext(),this.exprAllowed=!0,this.inModule=options.sourceType==="module",this.strict=this.inModule||this.strictDirective(this.pos),this.potentialArrowAt=-1,this.yieldPos=this.awaitPos=this.awaitIdentPos=0,this.labels=[],this.undefinedExports={},this.pos===0&&options.allowHashBang&&this.input.slice(0,2)==="#!"&&this.skipLineComment(2),this.scopeStack=[],this.enterScope(SCOPE_TOP),this.regexpState=null;},prototypeAccessors={inFunction:{configurable:!0},inGenerator:{configurable:!0},inAsync:{configurable:!0},allowSuper:{configurable:!0},allowDirectSuper:{configurable:!0},treatFunctionsAsVar:{configurable:!0}};Parser.prototype.parse=function(){var node=this.options.program||this.startNode();return this.nextToken(),this.parseTopLevel(node)};prototypeAccessors.inFunction.get=function(){return (this.currentVarScope().flags&SCOPE_FUNCTION)>0};prototypeAccessors.inGenerator.get=function(){return (this.currentVarScope().flags&SCOPE_GENERATOR)>0};prototypeAccessors.inAsync.get=function(){return (this.currentVarScope().flags&SCOPE_ASYNC)>0};prototypeAccessors.allowSuper.get=function(){return (this.currentThisScope().flags&SCOPE_SUPER)>0};prototypeAccessors.allowDirectSuper.get=function(){return (this.currentThisScope().flags&SCOPE_DIRECT_SUPER)>0};prototypeAccessors.treatFunctionsAsVar.get=function(){return this.treatFunctionsAsVarInScope(this.currentScope())};Parser.prototype.inNonArrowFunction=function(){return (this.currentThisScope().flags&SCOPE_FUNCTION)>0};Parser.extend=function(){for(var plugins=[],len=arguments.length;len--;)plugins[len]=arguments[len];for(var cls=this,i=0;i<plugins.length;i++)cls=plugins[i](cls);return cls};Parser.parse=function(input,options){return new this(options,input).parse()};Parser.parseExpressionAt=function(input,pos,options){var parser=new this(options,input,pos);return parser.nextToken(),parser.parseExpression()};Parser.tokenizer=function(input,options){return new this(options,input)};Object.defineProperties(Parser.prototype,prototypeAccessors);pp=Parser.prototype,literal=/^(?:\'((?:\\\\.|[^\'\\\\])*?)\'|"((?:\\\\.|[^"\\\\])*?)")/;pp.strictDirective=function(start){for(;;){skipWhiteSpace.lastIndex=start,start+=skipWhiteSpace.exec(this.input)[0].length;var match=literal.exec(this.input.slice(start));if(!match)return !1;if((match[1]||match[2])==="use strict"){skipWhiteSpace.lastIndex=start+match[0].length;var spaceAfter=skipWhiteSpace.exec(this.input),end=spaceAfter.index+spaceAfter[0].length,next=this.input.charAt(end);return next===";"||next==="}"||lineBreak.test(spaceAfter[0])&&!(/[(`.[+\\-/*%<>=,?^&]/.test(next)||next==="!"&&this.input.charAt(end+1)==="=")}start+=match[0].length,skipWhiteSpace.lastIndex=start,start+=skipWhiteSpace.exec(this.input)[0].length,this.input[start]===";"&&start++;}};pp.eat=function(type){return this.type===type?(this.next(),!0):!1};pp.isContextual=function(name){return this.type===types.name&&this.value===name&&!this.containsEsc};pp.eatContextual=function(name){return this.isContextual(name)?(this.next(),!0):!1};pp.expectContextual=function(name){this.eatContextual(name)||this.unexpected();};pp.canInsertSemicolon=function(){return this.type===types.eof||this.type===types.braceR||lineBreak.test(this.input.slice(this.lastTokEnd,this.start))};pp.insertSemicolon=function(){if(this.canInsertSemicolon())return this.options.onInsertedSemicolon&&this.options.onInsertedSemicolon(this.lastTokEnd,this.lastTokEndLoc),!0};pp.semicolon=function(){!this.eat(types.semi)&&!this.insertSemicolon()&&this.unexpected();};pp.afterTrailingComma=function(tokType,notNext){if(this.type===tokType)return this.options.onTrailingComma&&this.options.onTrailingComma(this.lastTokStart,this.lastTokStartLoc),notNext||this.next(),!0};pp.expect=function(type){this.eat(type)||this.unexpected();};pp.unexpected=function(pos){this.raise(pos??this.start,"Unexpected token");};pp.checkPatternErrors=function(refDestructuringErrors,isAssign){if(refDestructuringErrors){refDestructuringErrors.trailingComma>-1&&this.raiseRecoverable(refDestructuringErrors.trailingComma,"Comma is not permitted after the rest element");var parens=isAssign?refDestructuringErrors.parenthesizedAssign:refDestructuringErrors.parenthesizedBind;parens>-1&&this.raiseRecoverable(parens,"Parenthesized pattern");}};pp.checkExpressionErrors=function(refDestructuringErrors,andThrow){if(!refDestructuringErrors)return !1;var shorthandAssign=refDestructuringErrors.shorthandAssign,doubleProto=refDestructuringErrors.doubleProto;if(!andThrow)return shorthandAssign>=0||doubleProto>=0;shorthandAssign>=0&&this.raise(shorthandAssign,"Shorthand property assignments are valid only in destructuring patterns"),doubleProto>=0&&this.raiseRecoverable(doubleProto,"Redefinition of __proto__ property");};pp.checkYieldAwaitInDefaultParams=function(){this.yieldPos&&(!this.awaitPos||this.yieldPos<this.awaitPos)&&this.raise(this.yieldPos,"Yield expression cannot be a default value"),this.awaitPos&&this.raise(this.awaitPos,"Await expression cannot be a default value");};pp.isSimpleAssignTarget=function(expr){return expr.type==="ParenthesizedExpression"?this.isSimpleAssignTarget(expr.expression):expr.type==="Identifier"||expr.type==="MemberExpression"};pp$1=Parser.prototype;pp$1.parseTopLevel=function(node){var exports={};for(node.body||(node.body=[]);this.type!==types.eof;){var stmt=this.parseStatement(null,!0,exports);node.body.push(stmt);}if(this.inModule)for(var i=0,list=Object.keys(this.undefinedExports);i<list.length;i+=1){var name=list[i];this.raiseRecoverable(this.undefinedExports[name].start,"Export \'"+name+"\' is not defined");}return this.adaptDirectivePrologue(node.body),this.next(),node.sourceType=this.options.sourceType,this.finishNode(node,"Program")};loopLabel={kind:"loop"},switchLabel={kind:"switch"};pp$1.isLet=function(context){if(this.options.ecmaVersion<6||!this.isContextual("let"))return !1;skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input),next=this.pos+skip[0].length,nextCh=this.input.charCodeAt(next);if(nextCh===91)return !0;if(context)return !1;if(nextCh===123)return !0;if(isIdentifierStart(nextCh,!0)){for(var pos=next+1;isIdentifierChar(this.input.charCodeAt(pos),!0);)++pos;var ident=this.input.slice(next,pos);if(!keywordRelationalOperator.test(ident))return !0}return !1};pp$1.isAsyncFunction=function(){if(this.options.ecmaVersion<8||!this.isContextual("async"))return !1;skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input),next=this.pos+skip[0].length;return !lineBreak.test(this.input.slice(this.pos,next))&&this.input.slice(next,next+8)==="function"&&(next+8===this.input.length||!isIdentifierChar(this.input.charAt(next+8)))};pp$1.parseStatement=function(context,topLevel,exports){var starttype=this.type,node=this.startNode(),kind;switch(this.isLet(context)&&(starttype=types._var,kind="let"),starttype){case types._break:case types._continue:return this.parseBreakContinueStatement(node,starttype.keyword);case types._debugger:return this.parseDebuggerStatement(node);case types._do:return this.parseDoStatement(node);case types._for:return this.parseForStatement(node);case types._function:return context&&(this.strict||context!=="if"&&context!=="label")&&this.options.ecmaVersion>=6&&this.unexpected(),this.parseFunctionStatement(node,!1,!context);case types._class:return context&&this.unexpected(),this.parseClass(node,!0);case types._if:return this.parseIfStatement(node);case types._return:return this.parseReturnStatement(node);case types._switch:return this.parseSwitchStatement(node);case types._throw:return this.parseThrowStatement(node);case types._try:return this.parseTryStatement(node);case types._const:case types._var:return kind=kind||this.value,context&&kind!=="var"&&this.unexpected(),this.parseVarStatement(node,kind);case types._while:return this.parseWhileStatement(node);case types._with:return this.parseWithStatement(node);case types.braceL:return this.parseBlock(!0,node);case types.semi:return this.parseEmptyStatement(node);case types._export:case types._import:if(this.options.ecmaVersion>10&&starttype===types._import){skipWhiteSpace.lastIndex=this.pos;var skip=skipWhiteSpace.exec(this.input),next=this.pos+skip[0].length,nextCh=this.input.charCodeAt(next);if(nextCh===40||nextCh===46)return this.parseExpressionStatement(node,this.parseExpression())}return this.options.allowImportExportEverywhere||(topLevel||this.raise(this.start,"\'import\' and \'export\' may only appear at the top level"),this.inModule||this.raise(this.start,"\'import\' and \'export\' may appear only with \'sourceType: module\'")),starttype===types._import?this.parseImport(node):this.parseExport(node,exports);default:if(this.isAsyncFunction())return context&&this.unexpected(),this.next(),this.parseFunctionStatement(node,!0,!context);var maybeName=this.value,expr=this.parseExpression();return starttype===types.name&&expr.type==="Identifier"&&this.eat(types.colon)?this.parseLabeledStatement(node,maybeName,expr,context):this.parseExpressionStatement(node,expr)}};pp$1.parseBreakContinueStatement=function(node,keyword){var isBreak=keyword==="break";this.next(),this.eat(types.semi)||this.insertSemicolon()?node.label=null:this.type!==types.name?this.unexpected():(node.label=this.parseIdent(),this.semicolon());for(var i=0;i<this.labels.length;++i){var lab=this.labels[i];if((node.label==null||lab.name===node.label.name)&&(lab.kind!=null&&(isBreak||lab.kind==="loop")||node.label&&isBreak))break}return i===this.labels.length&&this.raise(node.start,"Unsyntactic "+keyword),this.finishNode(node,isBreak?"BreakStatement":"ContinueStatement")};pp$1.parseDebuggerStatement=function(node){return this.next(),this.semicolon(),this.finishNode(node,"DebuggerStatement")};pp$1.parseDoStatement=function(node){return this.next(),this.labels.push(loopLabel),node.body=this.parseStatement("do"),this.labels.pop(),this.expect(types._while),node.test=this.parseParenExpression(),this.options.ecmaVersion>=6?this.eat(types.semi):this.semicolon(),this.finishNode(node,"DoWhileStatement")};pp$1.parseForStatement=function(node){this.next();var awaitAt=this.options.ecmaVersion>=9&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction)&&this.eatContextual("await")?this.lastTokStart:-1;if(this.labels.push(loopLabel),this.enterScope(0),this.expect(types.parenL),this.type===types.semi)return awaitAt>-1&&this.unexpected(awaitAt),this.parseFor(node,null);var isLet=this.isLet();if(this.type===types._var||this.type===types._const||isLet){var init$1=this.startNode(),kind=isLet?"let":this.value;return this.next(),this.parseVar(init$1,!0,kind),this.finishNode(init$1,"VariableDeclaration"),(this.type===types._in||this.options.ecmaVersion>=6&&this.isContextual("of"))&&init$1.declarations.length===1?(this.options.ecmaVersion>=9&&(this.type===types._in?awaitAt>-1&&this.unexpected(awaitAt):node.await=awaitAt>-1),this.parseForIn(node,init$1)):(awaitAt>-1&&this.unexpected(awaitAt),this.parseFor(node,init$1))}var refDestructuringErrors=new DestructuringErrors,init=this.parseExpression(!0,refDestructuringErrors);return this.type===types._in||this.options.ecmaVersion>=6&&this.isContextual("of")?(this.options.ecmaVersion>=9&&(this.type===types._in?awaitAt>-1&&this.unexpected(awaitAt):node.await=awaitAt>-1),this.toAssignable(init,!1,refDestructuringErrors),this.checkLVal(init),this.parseForIn(node,init)):(this.checkExpressionErrors(refDestructuringErrors,!0),awaitAt>-1&&this.unexpected(awaitAt),this.parseFor(node,init))};pp$1.parseFunctionStatement=function(node,isAsync,declarationPosition){return this.next(),this.parseFunction(node,FUNC_STATEMENT|(declarationPosition?0:FUNC_HANGING_STATEMENT),!1,isAsync)};pp$1.parseIfStatement=function(node){return this.next(),node.test=this.parseParenExpression(),node.consequent=this.parseStatement("if"),node.alternate=this.eat(types._else)?this.parseStatement("if"):null,this.finishNode(node,"IfStatement")};pp$1.parseReturnStatement=function(node){return !this.inFunction&&!this.options.allowReturnOutsideFunction&&this.raise(this.start,"\'return\' outside of function"),this.next(),this.eat(types.semi)||this.insertSemicolon()?node.argument=null:(node.argument=this.parseExpression(),this.semicolon()),this.finishNode(node,"ReturnStatement")};pp$1.parseSwitchStatement=function(node){this.next(),node.discriminant=this.parseParenExpression(),node.cases=[],this.expect(types.braceL),this.labels.push(switchLabel),this.enterScope(0);for(var cur,sawDefault=!1;this.type!==types.braceR;)if(this.type===types._case||this.type===types._default){var isCase=this.type===types._case;cur&&this.finishNode(cur,"SwitchCase"),node.cases.push(cur=this.startNode()),cur.consequent=[],this.next(),isCase?cur.test=this.parseExpression():(sawDefault&&this.raiseRecoverable(this.lastTokStart,"Multiple default clauses"),sawDefault=!0,cur.test=null),this.expect(types.colon);}else cur||this.unexpected(),cur.consequent.push(this.parseStatement(null));return this.exitScope(),cur&&this.finishNode(cur,"SwitchCase"),this.next(),this.labels.pop(),this.finishNode(node,"SwitchStatement")};pp$1.parseThrowStatement=function(node){return this.next(),lineBreak.test(this.input.slice(this.lastTokEnd,this.start))&&this.raise(this.lastTokEnd,"Illegal newline after throw"),node.argument=this.parseExpression(),this.semicolon(),this.finishNode(node,"ThrowStatement")};empty=[];pp$1.parseTryStatement=function(node){if(this.next(),node.block=this.parseBlock(),node.handler=null,this.type===types._catch){var clause=this.startNode();if(this.next(),this.eat(types.parenL)){clause.param=this.parseBindingAtom();var simple2=clause.param.type==="Identifier";this.enterScope(simple2?SCOPE_SIMPLE_CATCH:0),this.checkLVal(clause.param,simple2?BIND_SIMPLE_CATCH:BIND_LEXICAL),this.expect(types.parenR);}else this.options.ecmaVersion<10&&this.unexpected(),clause.param=null,this.enterScope(0);clause.body=this.parseBlock(!1),this.exitScope(),node.handler=this.finishNode(clause,"CatchClause");}return node.finalizer=this.eat(types._finally)?this.parseBlock():null,!node.handler&&!node.finalizer&&this.raise(node.start,"Missing catch or finally clause"),this.finishNode(node,"TryStatement")};pp$1.parseVarStatement=function(node,kind){return this.next(),this.parseVar(node,!1,kind),this.semicolon(),this.finishNode(node,"VariableDeclaration")};pp$1.parseWhileStatement=function(node){return this.next(),node.test=this.parseParenExpression(),this.labels.push(loopLabel),node.body=this.parseStatement("while"),this.labels.pop(),this.finishNode(node,"WhileStatement")};pp$1.parseWithStatement=function(node){return this.strict&&this.raise(this.start,"\'with\' in strict mode"),this.next(),node.object=this.parseParenExpression(),node.body=this.parseStatement("with"),this.finishNode(node,"WithStatement")};pp$1.parseEmptyStatement=function(node){return this.next(),this.finishNode(node,"EmptyStatement")};pp$1.parseLabeledStatement=function(node,maybeName,expr,context){for(var i$1=0,list=this.labels;i$1<list.length;i$1+=1){var label=list[i$1];label.name===maybeName&&this.raise(expr.start,"Label \'"+maybeName+"\' is already declared");}for(var kind=this.type.isLoop?"loop":this.type===types._switch?"switch":null,i=this.labels.length-1;i>=0;i--){var label$1=this.labels[i];if(label$1.statementStart===node.start)label$1.statementStart=this.start,label$1.kind=kind;else break}return this.labels.push({name:maybeName,kind,statementStart:this.start}),node.body=this.parseStatement(context?context.indexOf("label")===-1?context+"label":context:"label"),this.labels.pop(),node.label=expr,this.finishNode(node,"LabeledStatement")};pp$1.parseExpressionStatement=function(node,expr){return node.expression=expr,this.semicolon(),this.finishNode(node,"ExpressionStatement")};pp$1.parseBlock=function(createNewLexicalScope,node,exitStrict){for(createNewLexicalScope===void 0&&(createNewLexicalScope=!0),node===void 0&&(node=this.startNode()),node.body=[],this.expect(types.braceL),createNewLexicalScope&&this.enterScope(0);this.type!==types.braceR;){var stmt=this.parseStatement(null);node.body.push(stmt);}return exitStrict&&(this.strict=!1),this.next(),createNewLexicalScope&&this.exitScope(),this.finishNode(node,"BlockStatement")};pp$1.parseFor=function(node,init){return node.init=init,this.expect(types.semi),node.test=this.type===types.semi?null:this.parseExpression(),this.expect(types.semi),node.update=this.type===types.parenR?null:this.parseExpression(),this.expect(types.parenR),node.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(node,"ForStatement")};pp$1.parseForIn=function(node,init){var isForIn=this.type===types._in;return this.next(),init.type==="VariableDeclaration"&&init.declarations[0].init!=null&&(!isForIn||this.options.ecmaVersion<8||this.strict||init.kind!=="var"||init.declarations[0].id.type!=="Identifier")?this.raise(init.start,(isForIn?"for-in":"for-of")+" loop variable declaration may not have an initializer"):init.type==="AssignmentPattern"&&this.raise(init.start,"Invalid left-hand side in for-loop"),node.left=init,node.right=isForIn?this.parseExpression():this.parseMaybeAssign(),this.expect(types.parenR),node.body=this.parseStatement("for"),this.exitScope(),this.labels.pop(),this.finishNode(node,isForIn?"ForInStatement":"ForOfStatement")};pp$1.parseVar=function(node,isFor,kind){for(node.declarations=[],node.kind=kind;;){var decl=this.startNode();if(this.parseVarId(decl,kind),this.eat(types.eq)?decl.init=this.parseMaybeAssign(isFor):kind==="const"&&!(this.type===types._in||this.options.ecmaVersion>=6&&this.isContextual("of"))?this.unexpected():decl.id.type!=="Identifier"&&!(isFor&&(this.type===types._in||this.isContextual("of")))?this.raise(this.lastTokEnd,"Complex binding patterns require an initialization value"):decl.init=null,node.declarations.push(this.finishNode(decl,"VariableDeclarator")),!this.eat(types.comma))break}return node};pp$1.parseVarId=function(decl,kind){decl.id=this.parseBindingAtom(),this.checkLVal(decl.id,kind==="var"?BIND_VAR:BIND_LEXICAL,!1);};FUNC_STATEMENT=1,FUNC_HANGING_STATEMENT=2,FUNC_NULLABLE_ID=4;pp$1.parseFunction=function(node,statement,allowExpressionBody,isAsync){this.initFunction(node),(this.options.ecmaVersion>=9||this.options.ecmaVersion>=6&&!isAsync)&&(this.type===types.star&&statement&FUNC_HANGING_STATEMENT&&this.unexpected(),node.generator=this.eat(types.star)),this.options.ecmaVersion>=8&&(node.async=!!isAsync),statement&FUNC_STATEMENT&&(node.id=statement&FUNC_NULLABLE_ID&&this.type!==types.name?null:this.parseIdent(),node.id&&!(statement&FUNC_HANGING_STATEMENT)&&this.checkLVal(node.id,this.strict||node.generator||node.async?this.treatFunctionsAsVar?BIND_VAR:BIND_LEXICAL:BIND_FUNCTION));var oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;return this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(functionFlags(node.async,node.generator)),statement&FUNC_STATEMENT||(node.id=this.type===types.name?this.parseIdent():null),this.parseFunctionParams(node),this.parseFunctionBody(node,allowExpressionBody,!1),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.finishNode(node,statement&FUNC_STATEMENT?"FunctionDeclaration":"FunctionExpression")};pp$1.parseFunctionParams=function(node){this.expect(types.parenL),node.params=this.parseBindingList(types.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams();};pp$1.parseClass=function(node,isStatement){this.next();var oldStrict=this.strict;this.strict=!0,this.parseClassId(node,isStatement),this.parseClassSuper(node);var classBody=this.startNode(),hadConstructor=!1;for(classBody.body=[],this.expect(types.braceL);this.type!==types.braceR;){var element=this.parseClassElement(node.superClass!==null);element&&(classBody.body.push(element),element.type==="MethodDefinition"&&element.kind==="constructor"&&(hadConstructor&&this.raise(element.start,"Duplicate constructor in the same class"),hadConstructor=!0));}return this.strict=oldStrict,this.next(),node.body=this.finishNode(classBody,"ClassBody"),this.finishNode(node,isStatement?"ClassDeclaration":"ClassExpression")};pp$1.parseClassElement=function(constructorAllowsSuper){var this$1$1=this;if(this.eat(types.semi))return null;var method=this.startNode(),tryContextual=function(k,noLineBreak){noLineBreak===void 0&&(noLineBreak=!1);var start=this$1$1.start,startLoc=this$1$1.startLoc;return this$1$1.eatContextual(k)?this$1$1.type!==types.parenL&&(!noLineBreak||!this$1$1.canInsertSemicolon())?!0:(method.key&&this$1$1.unexpected(),method.computed=!1,method.key=this$1$1.startNodeAt(start,startLoc),method.key.name=k,this$1$1.finishNode(method.key,"Identifier"),!1):!1};method.kind="method",method.static=tryContextual("static");var isGenerator=this.eat(types.star),isAsync=!1;isGenerator||(this.options.ecmaVersion>=8&&tryContextual("async",!0)?(isAsync=!0,isGenerator=this.options.ecmaVersion>=9&&this.eat(types.star)):tryContextual("get")?method.kind="get":tryContextual("set")&&(method.kind="set")),method.key||this.parsePropertyName(method);var key=method.key,allowsDirectSuper=!1;return !method.computed&&!method.static&&(key.type==="Identifier"&&key.name==="constructor"||key.type==="Literal"&&key.value==="constructor")?(method.kind!=="method"&&this.raise(key.start,"Constructor can\'t have get/set modifier"),isGenerator&&this.raise(key.start,"Constructor can\'t be a generator"),isAsync&&this.raise(key.start,"Constructor can\'t be an async method"),method.kind="constructor",allowsDirectSuper=constructorAllowsSuper):method.static&&key.type==="Identifier"&&key.name==="prototype"&&this.raise(key.start,"Classes may not have a static property named prototype"),this.parseClassMethod(method,isGenerator,isAsync,allowsDirectSuper),method.kind==="get"&&method.value.params.length!==0&&this.raiseRecoverable(method.value.start,"getter should have no params"),method.kind==="set"&&method.value.params.length!==1&&this.raiseRecoverable(method.value.start,"setter should have exactly one param"),method.kind==="set"&&method.value.params[0].type==="RestElement"&&this.raiseRecoverable(method.value.params[0].start,"Setter cannot use rest params"),method};pp$1.parseClassMethod=function(method,isGenerator,isAsync,allowsDirectSuper){return method.value=this.parseMethod(isGenerator,isAsync,allowsDirectSuper),this.finishNode(method,"MethodDefinition")};pp$1.parseClassId=function(node,isStatement){this.type===types.name?(node.id=this.parseIdent(),isStatement&&this.checkLVal(node.id,BIND_LEXICAL,!1)):(isStatement===!0&&this.unexpected(),node.id=null);};pp$1.parseClassSuper=function(node){node.superClass=this.eat(types._extends)?this.parseExprSubscripts():null;};pp$1.parseExport=function(node,exports){if(this.next(),this.eat(types.star))return this.options.ecmaVersion>=11&&(this.eatContextual("as")?(node.exported=this.parseIdent(!0),this.checkExport(exports,node.exported.name,this.lastTokStart)):node.exported=null),this.expectContextual("from"),this.type!==types.string&&this.unexpected(),node.source=this.parseExprAtom(),this.semicolon(),this.finishNode(node,"ExportAllDeclaration");if(this.eat(types._default)){this.checkExport(exports,"default",this.lastTokStart);var isAsync;if(this.type===types._function||(isAsync=this.isAsyncFunction())){var fNode=this.startNode();this.next(),isAsync&&this.next(),node.declaration=this.parseFunction(fNode,FUNC_STATEMENT|FUNC_NULLABLE_ID,!1,isAsync);}else if(this.type===types._class){var cNode=this.startNode();node.declaration=this.parseClass(cNode,"nullableID");}else node.declaration=this.parseMaybeAssign(),this.semicolon();return this.finishNode(node,"ExportDefaultDeclaration")}if(this.shouldParseExportStatement())node.declaration=this.parseStatement(null),node.declaration.type==="VariableDeclaration"?this.checkVariableExport(exports,node.declaration.declarations):this.checkExport(exports,node.declaration.id.name,node.declaration.id.start),node.specifiers=[],node.source=null;else {if(node.declaration=null,node.specifiers=this.parseExportSpecifiers(exports),this.eatContextual("from"))this.type!==types.string&&this.unexpected(),node.source=this.parseExprAtom();else {for(var i=0,list=node.specifiers;i<list.length;i+=1){var spec=list[i];this.checkUnreserved(spec.local),this.checkLocalExport(spec.local);}node.source=null;}this.semicolon();}return this.finishNode(node,"ExportNamedDeclaration")};pp$1.checkExport=function(exports,name,pos){exports&&(has(exports,name)&&this.raiseRecoverable(pos,"Duplicate export \'"+name+"\'"),exports[name]=!0);};pp$1.checkPatternExport=function(exports,pat){var type=pat.type;if(type==="Identifier")this.checkExport(exports,pat.name,pat.start);else if(type==="ObjectPattern")for(var i=0,list=pat.properties;i<list.length;i+=1){var prop=list[i];this.checkPatternExport(exports,prop);}else if(type==="ArrayPattern")for(var i$1=0,list$1=pat.elements;i$1<list$1.length;i$1+=1){var elt=list$1[i$1];elt&&this.checkPatternExport(exports,elt);}else type==="Property"?this.checkPatternExport(exports,pat.value):type==="AssignmentPattern"?this.checkPatternExport(exports,pat.left):type==="RestElement"?this.checkPatternExport(exports,pat.argument):type==="ParenthesizedExpression"&&this.checkPatternExport(exports,pat.expression);};pp$1.checkVariableExport=function(exports,decls){if(exports)for(var i=0,list=decls;i<list.length;i+=1){var decl=list[i];this.checkPatternExport(exports,decl.id);}};pp$1.shouldParseExportStatement=function(){return this.type.keyword==="var"||this.type.keyword==="const"||this.type.keyword==="class"||this.type.keyword==="function"||this.isLet()||this.isAsyncFunction()};pp$1.parseExportSpecifiers=function(exports){var nodes=[],first=!0;for(this.expect(types.braceL);!this.eat(types.braceR);){if(first)first=!1;else if(this.expect(types.comma),this.afterTrailingComma(types.braceR))break;var node=this.startNode();node.local=this.parseIdent(!0),node.exported=this.eatContextual("as")?this.parseIdent(!0):node.local,this.checkExport(exports,node.exported.name,node.exported.start),nodes.push(this.finishNode(node,"ExportSpecifier"));}return nodes};pp$1.parseImport=function(node){return this.next(),this.type===types.string?(node.specifiers=empty,node.source=this.parseExprAtom()):(node.specifiers=this.parseImportSpecifiers(),this.expectContextual("from"),node.source=this.type===types.string?this.parseExprAtom():this.unexpected()),this.semicolon(),this.finishNode(node,"ImportDeclaration")};pp$1.parseImportSpecifiers=function(){var nodes=[],first=!0;if(this.type===types.name){var node=this.startNode();if(node.local=this.parseIdent(),this.checkLVal(node.local,BIND_LEXICAL),nodes.push(this.finishNode(node,"ImportDefaultSpecifier")),!this.eat(types.comma))return nodes}if(this.type===types.star){var node$1=this.startNode();return this.next(),this.expectContextual("as"),node$1.local=this.parseIdent(),this.checkLVal(node$1.local,BIND_LEXICAL),nodes.push(this.finishNode(node$1,"ImportNamespaceSpecifier")),nodes}for(this.expect(types.braceL);!this.eat(types.braceR);){if(first)first=!1;else if(this.expect(types.comma),this.afterTrailingComma(types.braceR))break;var node$2=this.startNode();node$2.imported=this.parseIdent(!0),this.eatContextual("as")?node$2.local=this.parseIdent():(this.checkUnreserved(node$2.imported),node$2.local=node$2.imported),this.checkLVal(node$2.local,BIND_LEXICAL),nodes.push(this.finishNode(node$2,"ImportSpecifier"));}return nodes};pp$1.adaptDirectivePrologue=function(statements){for(var i=0;i<statements.length&&this.isDirectiveCandidate(statements[i]);++i)statements[i].directive=statements[i].expression.raw.slice(1,-1);};pp$1.isDirectiveCandidate=function(statement){return statement.type==="ExpressionStatement"&&statement.expression.type==="Literal"&&typeof statement.expression.value=="string"&&(this.input[statement.start]===\'"\'||this.input[statement.start]==="\'")};pp$2=Parser.prototype;pp$2.toAssignable=function(node,isBinding,refDestructuringErrors){if(this.options.ecmaVersion>=6&&node)switch(node.type){case"Identifier":this.inAsync&&node.name==="await"&&this.raise(node.start,"Cannot use \'await\' as identifier inside an async function");break;case"ObjectPattern":case"ArrayPattern":case"RestElement":break;case"ObjectExpression":node.type="ObjectPattern",refDestructuringErrors&&this.checkPatternErrors(refDestructuringErrors,!0);for(var i=0,list=node.properties;i<list.length;i+=1){var prop=list[i];this.toAssignable(prop,isBinding),prop.type==="RestElement"&&(prop.argument.type==="ArrayPattern"||prop.argument.type==="ObjectPattern")&&this.raise(prop.argument.start,"Unexpected token");}break;case"Property":node.kind!=="init"&&this.raise(node.key.start,"Object pattern can\'t contain getter or setter"),this.toAssignable(node.value,isBinding);break;case"ArrayExpression":node.type="ArrayPattern",refDestructuringErrors&&this.checkPatternErrors(refDestructuringErrors,!0),this.toAssignableList(node.elements,isBinding);break;case"SpreadElement":node.type="RestElement",this.toAssignable(node.argument,isBinding),node.argument.type==="AssignmentPattern"&&this.raise(node.argument.start,"Rest elements cannot have a default value");break;case"AssignmentExpression":node.operator!=="="&&this.raise(node.left.end,"Only \'=\' operator can be used for specifying default value."),node.type="AssignmentPattern",delete node.operator,this.toAssignable(node.left,isBinding);case"AssignmentPattern":break;case"ParenthesizedExpression":this.toAssignable(node.expression,isBinding,refDestructuringErrors);break;case"ChainExpression":this.raiseRecoverable(node.start,"Optional chaining cannot appear in left-hand side");break;case"MemberExpression":if(!isBinding)break;default:this.raise(node.start,"Assigning to rvalue");}else refDestructuringErrors&&this.checkPatternErrors(refDestructuringErrors,!0);return node};pp$2.toAssignableList=function(exprList,isBinding){for(var end=exprList.length,i=0;i<end;i++){var elt=exprList[i];elt&&this.toAssignable(elt,isBinding);}if(end){var last=exprList[end-1];this.options.ecmaVersion===6&&isBinding&&last&&last.type==="RestElement"&&last.argument.type!=="Identifier"&&this.unexpected(last.argument.start);}return exprList};pp$2.parseSpread=function(refDestructuringErrors){var node=this.startNode();return this.next(),node.argument=this.parseMaybeAssign(!1,refDestructuringErrors),this.finishNode(node,"SpreadElement")};pp$2.parseRestBinding=function(){var node=this.startNode();return this.next(),this.options.ecmaVersion===6&&this.type!==types.name&&this.unexpected(),node.argument=this.parseBindingAtom(),this.finishNode(node,"RestElement")};pp$2.parseBindingAtom=function(){if(this.options.ecmaVersion>=6)switch(this.type){case types.bracketL:var node=this.startNode();return this.next(),node.elements=this.parseBindingList(types.bracketR,!0,!0),this.finishNode(node,"ArrayPattern");case types.braceL:return this.parseObj(!0)}return this.parseIdent()};pp$2.parseBindingList=function(close,allowEmpty,allowTrailingComma){for(var elts=[],first=!0;!this.eat(close);)if(first?first=!1:this.expect(types.comma),allowEmpty&&this.type===types.comma)elts.push(null);else {if(allowTrailingComma&&this.afterTrailingComma(close))break;if(this.type===types.ellipsis){var rest=this.parseRestBinding();this.parseBindingListItem(rest),elts.push(rest),this.type===types.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.expect(close);break}else {var elem=this.parseMaybeDefault(this.start,this.startLoc);this.parseBindingListItem(elem),elts.push(elem);}}return elts};pp$2.parseBindingListItem=function(param){return param};pp$2.parseMaybeDefault=function(startPos,startLoc,left){if(left=left||this.parseBindingAtom(),this.options.ecmaVersion<6||!this.eat(types.eq))return left;var node=this.startNodeAt(startPos,startLoc);return node.left=left,node.right=this.parseMaybeAssign(),this.finishNode(node,"AssignmentPattern")};pp$2.checkLVal=function(expr,bindingType,checkClashes){switch(bindingType===void 0&&(bindingType=BIND_NONE),expr.type){case"Identifier":bindingType===BIND_LEXICAL&&expr.name==="let"&&this.raiseRecoverable(expr.start,"let is disallowed as a lexically bound name"),this.strict&&this.reservedWordsStrictBind.test(expr.name)&&this.raiseRecoverable(expr.start,(bindingType?"Binding ":"Assigning to ")+expr.name+" in strict mode"),checkClashes&&(has(checkClashes,expr.name)&&this.raiseRecoverable(expr.start,"Argument name clash"),checkClashes[expr.name]=!0),bindingType!==BIND_NONE&&bindingType!==BIND_OUTSIDE&&this.declareName(expr.name,bindingType,expr.start);break;case"ChainExpression":this.raiseRecoverable(expr.start,"Optional chaining cannot appear in left-hand side");break;case"MemberExpression":bindingType&&this.raiseRecoverable(expr.start,"Binding member expression");break;case"ObjectPattern":for(var i=0,list=expr.properties;i<list.length;i+=1){var prop=list[i];this.checkLVal(prop,bindingType,checkClashes);}break;case"Property":this.checkLVal(expr.value,bindingType,checkClashes);break;case"ArrayPattern":for(var i$1=0,list$1=expr.elements;i$1<list$1.length;i$1+=1){var elem=list$1[i$1];elem&&this.checkLVal(elem,bindingType,checkClashes);}break;case"AssignmentPattern":this.checkLVal(expr.left,bindingType,checkClashes);break;case"RestElement":this.checkLVal(expr.argument,bindingType,checkClashes);break;case"ParenthesizedExpression":this.checkLVal(expr.expression,bindingType,checkClashes);break;default:this.raise(expr.start,(bindingType?"Binding":"Assigning to")+" rvalue");}};pp$3=Parser.prototype;pp$3.checkPropClash=function(prop,propHash,refDestructuringErrors){if(!(this.options.ecmaVersion>=9&&prop.type==="SpreadElement")&&!(this.options.ecmaVersion>=6&&(prop.computed||prop.method||prop.shorthand))){var key=prop.key,name;switch(key.type){case"Identifier":name=key.name;break;case"Literal":name=String(key.value);break;default:return}var kind=prop.kind;if(this.options.ecmaVersion>=6){name==="__proto__"&&kind==="init"&&(propHash.proto&&(refDestructuringErrors?refDestructuringErrors.doubleProto<0&&(refDestructuringErrors.doubleProto=key.start):this.raiseRecoverable(key.start,"Redefinition of __proto__ property")),propHash.proto=!0);return}name="$"+name;var other=propHash[name];if(other){var redefinition;kind==="init"?redefinition=this.strict&&other.init||other.get||other.set:redefinition=other.init||other[kind],redefinition&&this.raiseRecoverable(key.start,"Redefinition of property");}else other=propHash[name]={init:!1,get:!1,set:!1};other[kind]=!0;}};pp$3.parseExpression=function(noIn,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseMaybeAssign(noIn,refDestructuringErrors);if(this.type===types.comma){var node=this.startNodeAt(startPos,startLoc);for(node.expressions=[expr];this.eat(types.comma);)node.expressions.push(this.parseMaybeAssign(noIn,refDestructuringErrors));return this.finishNode(node,"SequenceExpression")}return expr};pp$3.parseMaybeAssign=function(noIn,refDestructuringErrors,afterLeftParse){if(this.isContextual("yield")){if(this.inGenerator)return this.parseYield(noIn);this.exprAllowed=!1;}var ownDestructuringErrors=!1,oldParenAssign=-1,oldTrailingComma=-1;refDestructuringErrors?(oldParenAssign=refDestructuringErrors.parenthesizedAssign,oldTrailingComma=refDestructuringErrors.trailingComma,refDestructuringErrors.parenthesizedAssign=refDestructuringErrors.trailingComma=-1):(refDestructuringErrors=new DestructuringErrors,ownDestructuringErrors=!0);var startPos=this.start,startLoc=this.startLoc;(this.type===types.parenL||this.type===types.name)&&(this.potentialArrowAt=this.start);var left=this.parseMaybeConditional(noIn,refDestructuringErrors);if(afterLeftParse&&(left=afterLeftParse.call(this,left,startPos,startLoc)),this.type.isAssign){var node=this.startNodeAt(startPos,startLoc);return node.operator=this.value,node.left=this.type===types.eq?this.toAssignable(left,!1,refDestructuringErrors):left,ownDestructuringErrors||(refDestructuringErrors.parenthesizedAssign=refDestructuringErrors.trailingComma=refDestructuringErrors.doubleProto=-1),refDestructuringErrors.shorthandAssign>=node.left.start&&(refDestructuringErrors.shorthandAssign=-1),this.checkLVal(left),this.next(),node.right=this.parseMaybeAssign(noIn),this.finishNode(node,"AssignmentExpression")}else ownDestructuringErrors&&this.checkExpressionErrors(refDestructuringErrors,!0);return oldParenAssign>-1&&(refDestructuringErrors.parenthesizedAssign=oldParenAssign),oldTrailingComma>-1&&(refDestructuringErrors.trailingComma=oldTrailingComma),left};pp$3.parseMaybeConditional=function(noIn,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseExprOps(noIn,refDestructuringErrors);if(this.checkExpressionErrors(refDestructuringErrors))return expr;if(this.eat(types.question)){var node=this.startNodeAt(startPos,startLoc);return node.test=expr,node.consequent=this.parseMaybeAssign(),this.expect(types.colon),node.alternate=this.parseMaybeAssign(noIn),this.finishNode(node,"ConditionalExpression")}return expr};pp$3.parseExprOps=function(noIn,refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseMaybeUnary(refDestructuringErrors,!1);return this.checkExpressionErrors(refDestructuringErrors)||expr.start===startPos&&expr.type==="ArrowFunctionExpression"?expr:this.parseExprOp(expr,startPos,startLoc,-1,noIn)};pp$3.parseExprOp=function(left,leftStartPos,leftStartLoc,minPrec,noIn){var prec=this.type.binop;if(prec!=null&&(!noIn||this.type!==types._in)&&prec>minPrec){var logical=this.type===types.logicalOR||this.type===types.logicalAND,coalesce=this.type===types.coalesce;coalesce&&(prec=types.logicalAND.binop);var op=this.value;this.next();var startPos=this.start,startLoc=this.startLoc,right=this.parseExprOp(this.parseMaybeUnary(null,!1),startPos,startLoc,prec,noIn),node=this.buildBinary(leftStartPos,leftStartLoc,left,right,op,logical||coalesce);return (logical&&this.type===types.coalesce||coalesce&&(this.type===types.logicalOR||this.type===types.logicalAND))&&this.raiseRecoverable(this.start,"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"),this.parseExprOp(node,leftStartPos,leftStartLoc,minPrec,noIn)}return left};pp$3.buildBinary=function(startPos,startLoc,left,right,op,logical){var node=this.startNodeAt(startPos,startLoc);return node.left=left,node.operator=op,node.right=right,this.finishNode(node,logical?"LogicalExpression":"BinaryExpression")};pp$3.parseMaybeUnary=function(refDestructuringErrors,sawUnary){var startPos=this.start,startLoc=this.startLoc,expr;if(this.isContextual("await")&&(this.inAsync||!this.inFunction&&this.options.allowAwaitOutsideFunction))expr=this.parseAwait(),sawUnary=!0;else if(this.type.prefix){var node=this.startNode(),update=this.type===types.incDec;node.operator=this.value,node.prefix=!0,this.next(),node.argument=this.parseMaybeUnary(null,!0),this.checkExpressionErrors(refDestructuringErrors,!0),update?this.checkLVal(node.argument):this.strict&&node.operator==="delete"&&node.argument.type==="Identifier"?this.raiseRecoverable(node.start,"Deleting local variable in strict mode"):sawUnary=!0,expr=this.finishNode(node,update?"UpdateExpression":"UnaryExpression");}else {if(expr=this.parseExprSubscripts(refDestructuringErrors),this.checkExpressionErrors(refDestructuringErrors))return expr;for(;this.type.postfix&&!this.canInsertSemicolon();){var node$1=this.startNodeAt(startPos,startLoc);node$1.operator=this.value,node$1.prefix=!1,node$1.argument=expr,this.checkLVal(expr),this.next(),expr=this.finishNode(node$1,"UpdateExpression");}}return !sawUnary&&this.eat(types.starstar)?this.buildBinary(startPos,startLoc,expr,this.parseMaybeUnary(null,!1),"**",!1):expr};pp$3.parseExprSubscripts=function(refDestructuringErrors){var startPos=this.start,startLoc=this.startLoc,expr=this.parseExprAtom(refDestructuringErrors);if(expr.type==="ArrowFunctionExpression"&&this.input.slice(this.lastTokStart,this.lastTokEnd)!==")")return expr;var result=this.parseSubscripts(expr,startPos,startLoc);return refDestructuringErrors&&result.type==="MemberExpression"&&(refDestructuringErrors.parenthesizedAssign>=result.start&&(refDestructuringErrors.parenthesizedAssign=-1),refDestructuringErrors.parenthesizedBind>=result.start&&(refDestructuringErrors.parenthesizedBind=-1)),result};pp$3.parseSubscripts=function(base2,startPos,startLoc,noCalls){for(var maybeAsyncArrow=this.options.ecmaVersion>=8&&base2.type==="Identifier"&&base2.name==="async"&&this.lastTokEnd===base2.end&&!this.canInsertSemicolon()&&base2.end-base2.start===5&&this.potentialArrowAt===base2.start,optionalChained=!1;;){var element=this.parseSubscript(base2,startPos,startLoc,noCalls,maybeAsyncArrow,optionalChained);if(element.optional&&(optionalChained=!0),element===base2||element.type==="ArrowFunctionExpression"){if(optionalChained){var chainNode=this.startNodeAt(startPos,startLoc);chainNode.expression=element,element=this.finishNode(chainNode,"ChainExpression");}return element}base2=element;}};pp$3.parseSubscript=function(base2,startPos,startLoc,noCalls,maybeAsyncArrow,optionalChained){var optionalSupported=this.options.ecmaVersion>=11,optional=optionalSupported&&this.eat(types.questionDot);noCalls&&optional&&this.raise(this.lastTokStart,"Optional chaining cannot appear in the callee of new expressions");var computed=this.eat(types.bracketL);if(computed||optional&&this.type!==types.parenL&&this.type!==types.backQuote||this.eat(types.dot)){var node=this.startNodeAt(startPos,startLoc);node.object=base2,node.property=computed?this.parseExpression():this.parseIdent(this.options.allowReserved!=="never"),node.computed=!!computed,computed&&this.expect(types.bracketR),optionalSupported&&(node.optional=optional),base2=this.finishNode(node,"MemberExpression");}else if(!noCalls&&this.eat(types.parenL)){var refDestructuringErrors=new DestructuringErrors,oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0;var exprList=this.parseExprList(types.parenR,this.options.ecmaVersion>=8,!1,refDestructuringErrors);if(maybeAsyncArrow&&!optional&&!this.canInsertSemicolon()&&this.eat(types.arrow))return this.checkPatternErrors(refDestructuringErrors,!1),this.checkYieldAwaitInDefaultParams(),this.awaitIdentPos>0&&this.raise(this.awaitIdentPos,"Cannot use \'await\' as identifier inside an async function"),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.parseArrowExpression(this.startNodeAt(startPos,startLoc),exprList,!0);this.checkExpressionErrors(refDestructuringErrors,!0),this.yieldPos=oldYieldPos||this.yieldPos,this.awaitPos=oldAwaitPos||this.awaitPos,this.awaitIdentPos=oldAwaitIdentPos||this.awaitIdentPos;var node$1=this.startNodeAt(startPos,startLoc);node$1.callee=base2,node$1.arguments=exprList,optionalSupported&&(node$1.optional=optional),base2=this.finishNode(node$1,"CallExpression");}else if(this.type===types.backQuote){(optional||optionalChained)&&this.raise(this.start,"Optional chaining cannot appear in the tag of tagged template expressions");var node$2=this.startNodeAt(startPos,startLoc);node$2.tag=base2,node$2.quasi=this.parseTemplate({isTagged:!0}),base2=this.finishNode(node$2,"TaggedTemplateExpression");}return base2};pp$3.parseExprAtom=function(refDestructuringErrors){this.type===types.slash&&this.readRegexp();var node,canBeArrow=this.potentialArrowAt===this.start;switch(this.type){case types._super:return this.allowSuper||this.raise(this.start,"\'super\' keyword outside a method"),node=this.startNode(),this.next(),this.type===types.parenL&&!this.allowDirectSuper&&this.raise(node.start,"super() call outside constructor of a subclass"),this.type!==types.dot&&this.type!==types.bracketL&&this.type!==types.parenL&&this.unexpected(),this.finishNode(node,"Super");case types._this:return node=this.startNode(),this.next(),this.finishNode(node,"ThisExpression");case types.name:var startPos=this.start,startLoc=this.startLoc,containsEsc=this.containsEsc,id=this.parseIdent(!1);if(this.options.ecmaVersion>=8&&!containsEsc&&id.name==="async"&&!this.canInsertSemicolon()&&this.eat(types._function))return this.parseFunction(this.startNodeAt(startPos,startLoc),0,!1,!0);if(canBeArrow&&!this.canInsertSemicolon()){if(this.eat(types.arrow))return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),[id],!1);if(this.options.ecmaVersion>=8&&id.name==="async"&&this.type===types.name&&!containsEsc)return id=this.parseIdent(!1),(this.canInsertSemicolon()||!this.eat(types.arrow))&&this.unexpected(),this.parseArrowExpression(this.startNodeAt(startPos,startLoc),[id],!0)}return id;case types.regexp:var value=this.value;return node=this.parseLiteral(value.value),node.regex={pattern:value.pattern,flags:value.flags},node;case types.num:case types.string:return this.parseLiteral(this.value);case types._null:case types._true:case types._false:return node=this.startNode(),node.value=this.type===types._null?null:this.type===types._true,node.raw=this.type.keyword,this.next(),this.finishNode(node,"Literal");case types.parenL:var start=this.start,expr=this.parseParenAndDistinguishExpression(canBeArrow);return refDestructuringErrors&&(refDestructuringErrors.parenthesizedAssign<0&&!this.isSimpleAssignTarget(expr)&&(refDestructuringErrors.parenthesizedAssign=start),refDestructuringErrors.parenthesizedBind<0&&(refDestructuringErrors.parenthesizedBind=start)),expr;case types.bracketL:return node=this.startNode(),this.next(),node.elements=this.parseExprList(types.bracketR,!0,!0,refDestructuringErrors),this.finishNode(node,"ArrayExpression");case types.braceL:return this.parseObj(!1,refDestructuringErrors);case types._function:return node=this.startNode(),this.next(),this.parseFunction(node,0);case types._class:return this.parseClass(this.startNode(),!1);case types._new:return this.parseNew();case types.backQuote:return this.parseTemplate();case types._import:return this.options.ecmaVersion>=11?this.parseExprImport():this.unexpected();default:this.unexpected();}};pp$3.parseExprImport=function(){var node=this.startNode();this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword import");var meta=this.parseIdent(!0);switch(this.type){case types.parenL:return this.parseDynamicImport(node);case types.dot:return node.meta=meta,this.parseImportMeta(node);default:this.unexpected();}};pp$3.parseDynamicImport=function(node){if(this.next(),node.source=this.parseMaybeAssign(),!this.eat(types.parenR)){var errorPos=this.start;this.eat(types.comma)&&this.eat(types.parenR)?this.raiseRecoverable(errorPos,"Trailing comma is not allowed in import()"):this.unexpected(errorPos);}return this.finishNode(node,"ImportExpression")};pp$3.parseImportMeta=function(node){this.next();var containsEsc=this.containsEsc;return node.property=this.parseIdent(!0),node.property.name!=="meta"&&this.raiseRecoverable(node.property.start,"The only valid meta property for import is \'import.meta\'"),containsEsc&&this.raiseRecoverable(node.start,"\'import.meta\' must not contain escaped characters"),this.options.sourceType!=="module"&&this.raiseRecoverable(node.start,"Cannot use \'import.meta\' outside a module"),this.finishNode(node,"MetaProperty")};pp$3.parseLiteral=function(value){var node=this.startNode();return node.value=value,node.raw=this.input.slice(this.start,this.end),node.raw.charCodeAt(node.raw.length-1)===110&&(node.bigint=node.raw.slice(0,-1).replace(/_/g,"")),this.next(),this.finishNode(node,"Literal")};pp$3.parseParenExpression=function(){this.expect(types.parenL);var val=this.parseExpression();return this.expect(types.parenR),val};pp$3.parseParenAndDistinguishExpression=function(canBeArrow){var startPos=this.start,startLoc=this.startLoc,val,allowTrailingComma=this.options.ecmaVersion>=8;if(this.options.ecmaVersion>=6){this.next();var innerStartPos=this.start,innerStartLoc=this.startLoc,exprList=[],first=!0,lastIsComma=!1,refDestructuringErrors=new DestructuringErrors,oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,spreadStart;for(this.yieldPos=0,this.awaitPos=0;this.type!==types.parenR;)if(first?first=!1:this.expect(types.comma),allowTrailingComma&&this.afterTrailingComma(types.parenR,!0)){lastIsComma=!0;break}else if(this.type===types.ellipsis){spreadStart=this.start,exprList.push(this.parseParenItem(this.parseRestBinding())),this.type===types.comma&&this.raise(this.start,"Comma is not permitted after the rest element");break}else exprList.push(this.parseMaybeAssign(!1,refDestructuringErrors,this.parseParenItem));var innerEndPos=this.start,innerEndLoc=this.startLoc;if(this.expect(types.parenR),canBeArrow&&!this.canInsertSemicolon()&&this.eat(types.arrow))return this.checkPatternErrors(refDestructuringErrors,!1),this.checkYieldAwaitInDefaultParams(),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.parseParenArrowList(startPos,startLoc,exprList);(!exprList.length||lastIsComma)&&this.unexpected(this.lastTokStart),spreadStart&&this.unexpected(spreadStart),this.checkExpressionErrors(refDestructuringErrors,!0),this.yieldPos=oldYieldPos||this.yieldPos,this.awaitPos=oldAwaitPos||this.awaitPos,exprList.length>1?(val=this.startNodeAt(innerStartPos,innerStartLoc),val.expressions=exprList,this.finishNodeAt(val,"SequenceExpression",innerEndPos,innerEndLoc)):val=exprList[0];}else val=this.parseParenExpression();if(this.options.preserveParens){var par=this.startNodeAt(startPos,startLoc);return par.expression=val,this.finishNode(par,"ParenthesizedExpression")}else return val};pp$3.parseParenItem=function(item){return item};pp$3.parseParenArrowList=function(startPos,startLoc,exprList){return this.parseArrowExpression(this.startNodeAt(startPos,startLoc),exprList)};empty$1=[];pp$3.parseNew=function(){this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword new");var node=this.startNode(),meta=this.parseIdent(!0);if(this.options.ecmaVersion>=6&&this.eat(types.dot)){node.meta=meta;var containsEsc=this.containsEsc;return node.property=this.parseIdent(!0),node.property.name!=="target"&&this.raiseRecoverable(node.property.start,"The only valid meta property for new is \'new.target\'"),containsEsc&&this.raiseRecoverable(node.start,"\'new.target\' must not contain escaped characters"),this.inNonArrowFunction()||this.raiseRecoverable(node.start,"\'new.target\' can only be used in functions"),this.finishNode(node,"MetaProperty")}var startPos=this.start,startLoc=this.startLoc,isImport=this.type===types._import;return node.callee=this.parseSubscripts(this.parseExprAtom(),startPos,startLoc,!0),isImport&&node.callee.type==="ImportExpression"&&this.raise(startPos,"Cannot use new with import()"),this.eat(types.parenL)?node.arguments=this.parseExprList(types.parenR,this.options.ecmaVersion>=8,!1):node.arguments=empty$1,this.finishNode(node,"NewExpression")};pp$3.parseTemplateElement=function(ref2){var isTagged=ref2.isTagged,elem=this.startNode();return this.type===types.invalidTemplate?(isTagged||this.raiseRecoverable(this.start,"Bad escape sequence in untagged template literal"),elem.value={raw:this.value,cooked:null}):elem.value={raw:this.input.slice(this.start,this.end).replace(/\\r\\n?/g,`\n`),cooked:this.value},this.next(),elem.tail=this.type===types.backQuote,this.finishNode(elem,"TemplateElement")};pp$3.parseTemplate=function(ref2){ref2===void 0&&(ref2={});var isTagged=ref2.isTagged;isTagged===void 0&&(isTagged=!1);var node=this.startNode();this.next(),node.expressions=[];var curElt=this.parseTemplateElement({isTagged});for(node.quasis=[curElt];!curElt.tail;)this.type===types.eof&&this.raise(this.pos,"Unterminated template literal"),this.expect(types.dollarBraceL),node.expressions.push(this.parseExpression()),this.expect(types.braceR),node.quasis.push(curElt=this.parseTemplateElement({isTagged}));return this.next(),this.finishNode(node,"TemplateLiteral")};pp$3.isAsyncProp=function(prop){return !prop.computed&&prop.key.type==="Identifier"&&prop.key.name==="async"&&(this.type===types.name||this.type===types.num||this.type===types.string||this.type===types.bracketL||this.type.keyword||this.options.ecmaVersion>=9&&this.type===types.star)&&!lineBreak.test(this.input.slice(this.lastTokEnd,this.start))};pp$3.parseObj=function(isPattern,refDestructuringErrors){var node=this.startNode(),first=!0,propHash={};for(node.properties=[],this.next();!this.eat(types.braceR);){if(first)first=!1;else if(this.expect(types.comma),this.options.ecmaVersion>=5&&this.afterTrailingComma(types.braceR))break;var prop=this.parseProperty(isPattern,refDestructuringErrors);isPattern||this.checkPropClash(prop,propHash,refDestructuringErrors),node.properties.push(prop);}return this.finishNode(node,isPattern?"ObjectPattern":"ObjectExpression")};pp$3.parseProperty=function(isPattern,refDestructuringErrors){var prop=this.startNode(),isGenerator,isAsync,startPos,startLoc;if(this.options.ecmaVersion>=9&&this.eat(types.ellipsis))return isPattern?(prop.argument=this.parseIdent(!1),this.type===types.comma&&this.raise(this.start,"Comma is not permitted after the rest element"),this.finishNode(prop,"RestElement")):(this.type===types.parenL&&refDestructuringErrors&&(refDestructuringErrors.parenthesizedAssign<0&&(refDestructuringErrors.parenthesizedAssign=this.start),refDestructuringErrors.parenthesizedBind<0&&(refDestructuringErrors.parenthesizedBind=this.start)),prop.argument=this.parseMaybeAssign(!1,refDestructuringErrors),this.type===types.comma&&refDestructuringErrors&&refDestructuringErrors.trailingComma<0&&(refDestructuringErrors.trailingComma=this.start),this.finishNode(prop,"SpreadElement"));this.options.ecmaVersion>=6&&(prop.method=!1,prop.shorthand=!1,(isPattern||refDestructuringErrors)&&(startPos=this.start,startLoc=this.startLoc),isPattern||(isGenerator=this.eat(types.star)));var containsEsc=this.containsEsc;return this.parsePropertyName(prop),!isPattern&&!containsEsc&&this.options.ecmaVersion>=8&&!isGenerator&&this.isAsyncProp(prop)?(isAsync=!0,isGenerator=this.options.ecmaVersion>=9&&this.eat(types.star),this.parsePropertyName(prop,refDestructuringErrors)):isAsync=!1,this.parsePropertyValue(prop,isPattern,isGenerator,isAsync,startPos,startLoc,refDestructuringErrors,containsEsc),this.finishNode(prop,"Property")};pp$3.parsePropertyValue=function(prop,isPattern,isGenerator,isAsync,startPos,startLoc,refDestructuringErrors,containsEsc){if((isGenerator||isAsync)&&this.type===types.colon&&this.unexpected(),this.eat(types.colon))prop.value=isPattern?this.parseMaybeDefault(this.start,this.startLoc):this.parseMaybeAssign(!1,refDestructuringErrors),prop.kind="init";else if(this.options.ecmaVersion>=6&&this.type===types.parenL)isPattern&&this.unexpected(),prop.kind="init",prop.method=!0,prop.value=this.parseMethod(isGenerator,isAsync);else if(!isPattern&&!containsEsc&&this.options.ecmaVersion>=5&&!prop.computed&&prop.key.type==="Identifier"&&(prop.key.name==="get"||prop.key.name==="set")&&this.type!==types.comma&&this.type!==types.braceR&&this.type!==types.eq){(isGenerator||isAsync)&&this.unexpected(),prop.kind=prop.key.name,this.parsePropertyName(prop),prop.value=this.parseMethod(!1);var paramCount=prop.kind==="get"?0:1;if(prop.value.params.length!==paramCount){var start=prop.value.start;prop.kind==="get"?this.raiseRecoverable(start,"getter should have no params"):this.raiseRecoverable(start,"setter should have exactly one param");}else prop.kind==="set"&&prop.value.params[0].type==="RestElement"&&this.raiseRecoverable(prop.value.params[0].start,"Setter cannot use rest params");}else this.options.ecmaVersion>=6&&!prop.computed&&prop.key.type==="Identifier"?((isGenerator||isAsync)&&this.unexpected(),this.checkUnreserved(prop.key),prop.key.name==="await"&&!this.awaitIdentPos&&(this.awaitIdentPos=startPos),prop.kind="init",isPattern?prop.value=this.parseMaybeDefault(startPos,startLoc,prop.key):this.type===types.eq&&refDestructuringErrors?(refDestructuringErrors.shorthandAssign<0&&(refDestructuringErrors.shorthandAssign=this.start),prop.value=this.parseMaybeDefault(startPos,startLoc,prop.key)):prop.value=prop.key,prop.shorthand=!0):this.unexpected();};pp$3.parsePropertyName=function(prop){if(this.options.ecmaVersion>=6){if(this.eat(types.bracketL))return prop.computed=!0,prop.key=this.parseMaybeAssign(),this.expect(types.bracketR),prop.key;prop.computed=!1;}return prop.key=this.type===types.num||this.type===types.string?this.parseExprAtom():this.parseIdent(this.options.allowReserved!=="never")};pp$3.initFunction=function(node){node.id=null,this.options.ecmaVersion>=6&&(node.generator=node.expression=!1),this.options.ecmaVersion>=8&&(node.async=!1);};pp$3.parseMethod=function(isGenerator,isAsync,allowDirectSuper){var node=this.startNode(),oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;return this.initFunction(node),this.options.ecmaVersion>=6&&(node.generator=isGenerator),this.options.ecmaVersion>=8&&(node.async=!!isAsync),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,this.enterScope(functionFlags(isAsync,node.generator)|SCOPE_SUPER|(allowDirectSuper?SCOPE_DIRECT_SUPER:0)),this.expect(types.parenL),node.params=this.parseBindingList(types.parenR,!1,this.options.ecmaVersion>=8),this.checkYieldAwaitInDefaultParams(),this.parseFunctionBody(node,!1,!0),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.finishNode(node,"FunctionExpression")};pp$3.parseArrowExpression=function(node,params,isAsync){var oldYieldPos=this.yieldPos,oldAwaitPos=this.awaitPos,oldAwaitIdentPos=this.awaitIdentPos;return this.enterScope(functionFlags(isAsync,!1)|SCOPE_ARROW),this.initFunction(node),this.options.ecmaVersion>=8&&(node.async=!!isAsync),this.yieldPos=0,this.awaitPos=0,this.awaitIdentPos=0,node.params=this.toAssignableList(params,!0),this.parseFunctionBody(node,!0,!1),this.yieldPos=oldYieldPos,this.awaitPos=oldAwaitPos,this.awaitIdentPos=oldAwaitIdentPos,this.finishNode(node,"ArrowFunctionExpression")};pp$3.parseFunctionBody=function(node,isArrowFunction,isMethod){var isExpression=isArrowFunction&&this.type!==types.braceL,oldStrict=this.strict,useStrict=!1;if(isExpression)node.body=this.parseMaybeAssign(),node.expression=!0,this.checkParams(node,!1);else {var nonSimple=this.options.ecmaVersion>=7&&!this.isSimpleParamList(node.params);(!oldStrict||nonSimple)&&(useStrict=this.strictDirective(this.end),useStrict&&nonSimple&&this.raiseRecoverable(node.start,"Illegal \'use strict\' directive in function with non-simple parameter list"));var oldLabels=this.labels;this.labels=[],useStrict&&(this.strict=!0),this.checkParams(node,!oldStrict&&!useStrict&&!isArrowFunction&&!isMethod&&this.isSimpleParamList(node.params)),this.strict&&node.id&&this.checkLVal(node.id,BIND_OUTSIDE),node.body=this.parseBlock(!1,void 0,useStrict&&!oldStrict),node.expression=!1,this.adaptDirectivePrologue(node.body.body),this.labels=oldLabels;}this.exitScope();};pp$3.isSimpleParamList=function(params){for(var i=0,list=params;i<list.length;i+=1){var param=list[i];if(param.type!=="Identifier")return !1}return !0};pp$3.checkParams=function(node,allowDuplicates){for(var nameHash={},i=0,list=node.params;i<list.length;i+=1){var param=list[i];this.checkLVal(param,BIND_VAR,allowDuplicates?null:nameHash);}};pp$3.parseExprList=function(close,allowTrailingComma,allowEmpty,refDestructuringErrors){for(var elts=[],first=!0;!this.eat(close);){if(first)first=!1;else if(this.expect(types.comma),allowTrailingComma&&this.afterTrailingComma(close))break;var elt=void 0;allowEmpty&&this.type===types.comma?elt=null:this.type===types.ellipsis?(elt=this.parseSpread(refDestructuringErrors),refDestructuringErrors&&this.type===types.comma&&refDestructuringErrors.trailingComma<0&&(refDestructuringErrors.trailingComma=this.start)):elt=this.parseMaybeAssign(!1,refDestructuringErrors),elts.push(elt);}return elts};pp$3.checkUnreserved=function(ref2){var start=ref2.start,end=ref2.end,name=ref2.name;if(this.inGenerator&&name==="yield"&&this.raiseRecoverable(start,"Cannot use \'yield\' as identifier inside a generator"),this.inAsync&&name==="await"&&this.raiseRecoverable(start,"Cannot use \'await\' as identifier inside an async function"),this.keywords.test(name)&&this.raise(start,"Unexpected keyword \'"+name+"\'"),!(this.options.ecmaVersion<6&&this.input.slice(start,end).indexOf("\\\\")!==-1)){var re=this.strict?this.reservedWordsStrict:this.reservedWords;re.test(name)&&(!this.inAsync&&name==="await"&&this.raiseRecoverable(start,"Cannot use keyword \'await\' outside an async function"),this.raiseRecoverable(start,"The keyword \'"+name+"\' is reserved"));}};pp$3.parseIdent=function(liberal,isBinding){var node=this.startNode();return this.type===types.name?node.name=this.value:this.type.keyword?(node.name=this.type.keyword,(node.name==="class"||node.name==="function")&&(this.lastTokEnd!==this.lastTokStart+1||this.input.charCodeAt(this.lastTokStart)!==46)&&this.context.pop()):this.unexpected(),this.next(!!liberal),this.finishNode(node,"Identifier"),liberal||(this.checkUnreserved(node),node.name==="await"&&!this.awaitIdentPos&&(this.awaitIdentPos=node.start)),node};pp$3.parseYield=function(noIn){this.yieldPos||(this.yieldPos=this.start);var node=this.startNode();return this.next(),this.type===types.semi||this.canInsertSemicolon()||this.type!==types.star&&!this.type.startsExpr?(node.delegate=!1,node.argument=null):(node.delegate=this.eat(types.star),node.argument=this.parseMaybeAssign(noIn)),this.finishNode(node,"YieldExpression")};pp$3.parseAwait=function(){this.awaitPos||(this.awaitPos=this.start);var node=this.startNode();return this.next(),node.argument=this.parseMaybeUnary(null,!1),this.finishNode(node,"AwaitExpression")};pp$4=Parser.prototype;pp$4.raise=function(pos,message){var loc=getLineInfo(this.input,pos);message+=" ("+loc.line+":"+loc.column+")";var err=new SyntaxError(message);throw err.pos=pos,err.loc=loc,err.raisedAt=this.pos,err};pp$4.raiseRecoverable=pp$4.raise;pp$4.curPosition=function(){if(this.options.locations)return new Position(this.curLine,this.pos-this.lineStart)};pp$5=Parser.prototype,Scope=function(flags){this.flags=flags,this.var=[],this.lexical=[],this.functions=[];};pp$5.enterScope=function(flags){this.scopeStack.push(new Scope(flags));};pp$5.exitScope=function(){this.scopeStack.pop();};pp$5.treatFunctionsAsVarInScope=function(scope){return scope.flags&SCOPE_FUNCTION||!this.inModule&&scope.flags&SCOPE_TOP};pp$5.declareName=function(name,bindingType,pos){var redeclared=!1;if(bindingType===BIND_LEXICAL){var scope=this.currentScope();redeclared=scope.lexical.indexOf(name)>-1||scope.functions.indexOf(name)>-1||scope.var.indexOf(name)>-1,scope.lexical.push(name),this.inModule&&scope.flags&SCOPE_TOP&&delete this.undefinedExports[name];}else if(bindingType===BIND_SIMPLE_CATCH){var scope$1=this.currentScope();scope$1.lexical.push(name);}else if(bindingType===BIND_FUNCTION){var scope$2=this.currentScope();this.treatFunctionsAsVar?redeclared=scope$2.lexical.indexOf(name)>-1:redeclared=scope$2.lexical.indexOf(name)>-1||scope$2.var.indexOf(name)>-1,scope$2.functions.push(name);}else for(var i=this.scopeStack.length-1;i>=0;--i){var scope$3=this.scopeStack[i];if(scope$3.lexical.indexOf(name)>-1&&!(scope$3.flags&SCOPE_SIMPLE_CATCH&&scope$3.lexical[0]===name)||!this.treatFunctionsAsVarInScope(scope$3)&&scope$3.functions.indexOf(name)>-1){redeclared=!0;break}if(scope$3.var.push(name),this.inModule&&scope$3.flags&SCOPE_TOP&&delete this.undefinedExports[name],scope$3.flags&SCOPE_VAR)break}redeclared&&this.raiseRecoverable(pos,"Identifier \'"+name+"\' has already been declared");};pp$5.checkLocalExport=function(id){this.scopeStack[0].lexical.indexOf(id.name)===-1&&this.scopeStack[0].var.indexOf(id.name)===-1&&(this.undefinedExports[id.name]=id);};pp$5.currentScope=function(){return this.scopeStack[this.scopeStack.length-1]};pp$5.currentVarScope=function(){for(var i=this.scopeStack.length-1;;i--){var scope=this.scopeStack[i];if(scope.flags&SCOPE_VAR)return scope}};pp$5.currentThisScope=function(){for(var i=this.scopeStack.length-1;;i--){var scope=this.scopeStack[i];if(scope.flags&SCOPE_VAR&&!(scope.flags&SCOPE_ARROW))return scope}};Node=function(parser,pos,loc){this.type="",this.start=pos,this.end=0,parser.options.locations&&(this.loc=new SourceLocation(parser,loc)),parser.options.directSourceFile&&(this.sourceFile=parser.options.directSourceFile),parser.options.ranges&&(this.range=[pos,0]);},pp$6=Parser.prototype;pp$6.startNode=function(){return new Node(this,this.start,this.startLoc)};pp$6.startNodeAt=function(pos,loc){return new Node(this,pos,loc)};pp$6.finishNode=function(node,type){return finishNodeAt.call(this,node,type,this.lastTokEnd,this.lastTokEndLoc)};pp$6.finishNodeAt=function(node,type,pos,loc){return finishNodeAt.call(this,node,type,pos,loc)};TokContext=function(token,isExpr,preserveSpace,override,generator){this.token=token,this.isExpr=!!isExpr,this.preserveSpace=!!preserveSpace,this.override=override,this.generator=!!generator;},types$1={b_stat:new TokContext("{",!1),b_expr:new TokContext("{",!0),b_tmpl:new TokContext("${",!1),p_stat:new TokContext("(",!1),p_expr:new TokContext("(",!0),q_tmpl:new TokContext("`",!0,!0,function(p){return p.tryReadTemplateToken()}),f_stat:new TokContext("function",!1),f_expr:new TokContext("function",!0),f_expr_gen:new TokContext("function",!0,!1,null,!0),f_gen:new TokContext("function",!1,!1,null,!0)},pp$7=Parser.prototype;pp$7.initialContext=function(){return [types$1.b_stat]};pp$7.braceIsBlock=function(prevType){var parent=this.curContext();return parent===types$1.f_expr||parent===types$1.f_stat?!0:prevType===types.colon&&(parent===types$1.b_stat||parent===types$1.b_expr)?!parent.isExpr:prevType===types._return||prevType===types.name&&this.exprAllowed?lineBreak.test(this.input.slice(this.lastTokEnd,this.start)):prevType===types._else||prevType===types.semi||prevType===types.eof||prevType===types.parenR||prevType===types.arrow?!0:prevType===types.braceL?parent===types$1.b_stat:prevType===types._var||prevType===types._const||prevType===types.name?!1:!this.exprAllowed};pp$7.inGeneratorContext=function(){for(var i=this.context.length-1;i>=1;i--){var context=this.context[i];if(context.token==="function")return context.generator}return !1};pp$7.updateContext=function(prevType){var update,type=this.type;type.keyword&&prevType===types.dot?this.exprAllowed=!1:(update=type.updateContext)?update.call(this,prevType):this.exprAllowed=type.beforeExpr;};types.parenR.updateContext=types.braceR.updateContext=function(){if(this.context.length===1){this.exprAllowed=!0;return}var out=this.context.pop();out===types$1.b_stat&&this.curContext().token==="function"&&(out=this.context.pop()),this.exprAllowed=!out.isExpr;};types.braceL.updateContext=function(prevType){this.context.push(this.braceIsBlock(prevType)?types$1.b_stat:types$1.b_expr),this.exprAllowed=!0;};types.dollarBraceL.updateContext=function(){this.context.push(types$1.b_tmpl),this.exprAllowed=!0;};types.parenL.updateContext=function(prevType){var statementParens=prevType===types._if||prevType===types._for||prevType===types._with||prevType===types._while;this.context.push(statementParens?types$1.p_stat:types$1.p_expr),this.exprAllowed=!0;};types.incDec.updateContext=function(){};types._function.updateContext=types._class.updateContext=function(prevType){prevType.beforeExpr&&prevType!==types.semi&&prevType!==types._else&&!(prevType===types._return&&lineBreak.test(this.input.slice(this.lastTokEnd,this.start)))&&!((prevType===types.colon||prevType===types.braceL)&&this.curContext()===types$1.b_stat)?this.context.push(types$1.f_expr):this.context.push(types$1.f_stat),this.exprAllowed=!1;};types.backQuote.updateContext=function(){this.curContext()===types$1.q_tmpl?this.context.pop():this.context.push(types$1.q_tmpl),this.exprAllowed=!1;};types.star.updateContext=function(prevType){if(prevType===types._function){var index=this.context.length-1;this.context[index]===types$1.f_expr?this.context[index]=types$1.f_expr_gen:this.context[index]=types$1.f_gen;}this.exprAllowed=!0;};types.name.updateContext=function(prevType){var allowed=!1;this.options.ecmaVersion>=6&&prevType!==types.dot&&(this.value==="of"&&!this.exprAllowed||this.value==="yield"&&this.inGeneratorContext())&&(allowed=!0),this.exprAllowed=allowed;};ecma9BinaryProperties="ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS",ecma10BinaryProperties=ecma9BinaryProperties+" Extended_Pictographic",ecma11BinaryProperties=ecma10BinaryProperties,unicodeBinaryProperties={9:ecma9BinaryProperties,10:ecma10BinaryProperties,11:ecma11BinaryProperties},unicodeGeneralCategoryValues="Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu",ecma9ScriptValues="Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb",ecma10ScriptValues=ecma9ScriptValues+" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd",ecma11ScriptValues=ecma10ScriptValues+" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho",unicodeScriptValues={9:ecma9ScriptValues,10:ecma10ScriptValues,11:ecma11ScriptValues},data={};buildUnicodeData(9);buildUnicodeData(10);buildUnicodeData(11);pp$8=Parser.prototype,RegExpValidationState=function(parser){this.parser=parser,this.validFlags="gim"+(parser.options.ecmaVersion>=6?"uy":"")+(parser.options.ecmaVersion>=9?"s":""),this.unicodeProperties=data[parser.options.ecmaVersion>=11?11:parser.options.ecmaVersion],this.source="",this.flags="",this.start=0,this.switchU=!1,this.switchN=!1,this.pos=0,this.lastIntValue=0,this.lastStringValue="",this.lastAssertionIsQuantifiable=!1,this.numCapturingParens=0,this.maxBackReference=0,this.groupNames=[],this.backReferenceNames=[];};RegExpValidationState.prototype.reset=function(start,pattern,flags){var unicode=flags.indexOf("u")!==-1;this.start=start|0,this.source=pattern+"",this.flags=flags,this.switchU=unicode&&this.parser.options.ecmaVersion>=6,this.switchN=unicode&&this.parser.options.ecmaVersion>=9;};RegExpValidationState.prototype.raise=function(message){this.parser.raiseRecoverable(this.start,"Invalid regular expression: /"+this.source+"/: "+message);};RegExpValidationState.prototype.at=function(i,forceU){forceU===void 0&&(forceU=!1);var s=this.source,l=s.length;if(i>=l)return -1;var c=s.charCodeAt(i);if(!(forceU||this.switchU)||c<=55295||c>=57344||i+1>=l)return c;var next=s.charCodeAt(i+1);return next>=56320&&next<=57343?(c<<10)+next-56613888:c};RegExpValidationState.prototype.nextIndex=function(i,forceU){forceU===void 0&&(forceU=!1);var s=this.source,l=s.length;if(i>=l)return l;var c=s.charCodeAt(i),next;return !(forceU||this.switchU)||c<=55295||c>=57344||i+1>=l||(next=s.charCodeAt(i+1))<56320||next>57343?i+1:i+2};RegExpValidationState.prototype.current=function(forceU){return forceU===void 0&&(forceU=!1),this.at(this.pos,forceU)};RegExpValidationState.prototype.lookahead=function(forceU){return forceU===void 0&&(forceU=!1),this.at(this.nextIndex(this.pos,forceU),forceU)};RegExpValidationState.prototype.advance=function(forceU){forceU===void 0&&(forceU=!1),this.pos=this.nextIndex(this.pos,forceU);};RegExpValidationState.prototype.eat=function(ch,forceU){return forceU===void 0&&(forceU=!1),this.current(forceU)===ch?(this.advance(forceU),!0):!1};pp$8.validateRegExpFlags=function(state){for(var validFlags=state.validFlags,flags=state.flags,i=0;i<flags.length;i++){var flag=flags.charAt(i);validFlags.indexOf(flag)===-1&&this.raise(state.start,"Invalid regular expression flag"),flags.indexOf(flag,i+1)>-1&&this.raise(state.start,"Duplicate regular expression flag");}};pp$8.validateRegExpPattern=function(state){this.regexp_pattern(state),!state.switchN&&this.options.ecmaVersion>=9&&state.groupNames.length>0&&(state.switchN=!0,this.regexp_pattern(state));};pp$8.regexp_pattern=function(state){state.pos=0,state.lastIntValue=0,state.lastStringValue="",state.lastAssertionIsQuantifiable=!1,state.numCapturingParens=0,state.maxBackReference=0,state.groupNames.length=0,state.backReferenceNames.length=0,this.regexp_disjunction(state),state.pos!==state.source.length&&(state.eat(41)&&state.raise("Unmatched \')\'"),(state.eat(93)||state.eat(125))&&state.raise("Lone quantifier brackets")),state.maxBackReference>state.numCapturingParens&&state.raise("Invalid escape");for(var i=0,list=state.backReferenceNames;i<list.length;i+=1){var name=list[i];state.groupNames.indexOf(name)===-1&&state.raise("Invalid named capture referenced");}};pp$8.regexp_disjunction=function(state){for(this.regexp_alternative(state);state.eat(124);)this.regexp_alternative(state);this.regexp_eatQuantifier(state,!0)&&state.raise("Nothing to repeat"),state.eat(123)&&state.raise("Lone quantifier brackets");};pp$8.regexp_alternative=function(state){for(;state.pos<state.source.length&&this.regexp_eatTerm(state););};pp$8.regexp_eatTerm=function(state){return this.regexp_eatAssertion(state)?(state.lastAssertionIsQuantifiable&&this.regexp_eatQuantifier(state)&&state.switchU&&state.raise("Invalid quantifier"),!0):(state.switchU?this.regexp_eatAtom(state):this.regexp_eatExtendedAtom(state))?(this.regexp_eatQuantifier(state),!0):!1};pp$8.regexp_eatAssertion=function(state){var start=state.pos;if(state.lastAssertionIsQuantifiable=!1,state.eat(94)||state.eat(36))return !0;if(state.eat(92)){if(state.eat(66)||state.eat(98))return !0;state.pos=start;}if(state.eat(40)&&state.eat(63)){var lookbehind=!1;if(this.options.ecmaVersion>=9&&(lookbehind=state.eat(60)),state.eat(61)||state.eat(33))return this.regexp_disjunction(state),state.eat(41)||state.raise("Unterminated group"),state.lastAssertionIsQuantifiable=!lookbehind,!0}return state.pos=start,!1};pp$8.regexp_eatQuantifier=function(state,noError){return noError===void 0&&(noError=!1),this.regexp_eatQuantifierPrefix(state,noError)?(state.eat(63),!0):!1};pp$8.regexp_eatQuantifierPrefix=function(state,noError){return state.eat(42)||state.eat(43)||state.eat(63)||this.regexp_eatBracedQuantifier(state,noError)};pp$8.regexp_eatBracedQuantifier=function(state,noError){var start=state.pos;if(state.eat(123)){var min=0,max=-1;if(this.regexp_eatDecimalDigits(state)&&(min=state.lastIntValue,state.eat(44)&&this.regexp_eatDecimalDigits(state)&&(max=state.lastIntValue),state.eat(125)))return max!==-1&&max<min&&!noError&&state.raise("numbers out of order in {} quantifier"),!0;state.switchU&&!noError&&state.raise("Incomplete quantifier"),state.pos=start;}return !1};pp$8.regexp_eatAtom=function(state){return this.regexp_eatPatternCharacters(state)||state.eat(46)||this.regexp_eatReverseSolidusAtomEscape(state)||this.regexp_eatCharacterClass(state)||this.regexp_eatUncapturingGroup(state)||this.regexp_eatCapturingGroup(state)};pp$8.regexp_eatReverseSolidusAtomEscape=function(state){var start=state.pos;if(state.eat(92)){if(this.regexp_eatAtomEscape(state))return !0;state.pos=start;}return !1};pp$8.regexp_eatUncapturingGroup=function(state){var start=state.pos;if(state.eat(40)){if(state.eat(63)&&state.eat(58)){if(this.regexp_disjunction(state),state.eat(41))return !0;state.raise("Unterminated group");}state.pos=start;}return !1};pp$8.regexp_eatCapturingGroup=function(state){if(state.eat(40)){if(this.options.ecmaVersion>=9?this.regexp_groupSpecifier(state):state.current()===63&&state.raise("Invalid group"),this.regexp_disjunction(state),state.eat(41))return state.numCapturingParens+=1,!0;state.raise("Unterminated group");}return !1};pp$8.regexp_eatExtendedAtom=function(state){return state.eat(46)||this.regexp_eatReverseSolidusAtomEscape(state)||this.regexp_eatCharacterClass(state)||this.regexp_eatUncapturingGroup(state)||this.regexp_eatCapturingGroup(state)||this.regexp_eatInvalidBracedQuantifier(state)||this.regexp_eatExtendedPatternCharacter(state)};pp$8.regexp_eatInvalidBracedQuantifier=function(state){return this.regexp_eatBracedQuantifier(state,!0)&&state.raise("Nothing to repeat"),!1};pp$8.regexp_eatSyntaxCharacter=function(state){var ch=state.current();return isSyntaxCharacter(ch)?(state.lastIntValue=ch,state.advance(),!0):!1};pp$8.regexp_eatPatternCharacters=function(state){for(var start=state.pos,ch=0;(ch=state.current())!==-1&&!isSyntaxCharacter(ch);)state.advance();return state.pos!==start};pp$8.regexp_eatExtendedPatternCharacter=function(state){var ch=state.current();return ch!==-1&&ch!==36&&!(ch>=40&&ch<=43)&&ch!==46&&ch!==63&&ch!==91&&ch!==94&&ch!==124?(state.advance(),!0):!1};pp$8.regexp_groupSpecifier=function(state){if(state.eat(63)){if(this.regexp_eatGroupName(state)){state.groupNames.indexOf(state.lastStringValue)!==-1&&state.raise("Duplicate capture group name"),state.groupNames.push(state.lastStringValue);return}state.raise("Invalid group");}};pp$8.regexp_eatGroupName=function(state){if(state.lastStringValue="",state.eat(60)){if(this.regexp_eatRegExpIdentifierName(state)&&state.eat(62))return !0;state.raise("Invalid capture group name");}return !1};pp$8.regexp_eatRegExpIdentifierName=function(state){if(state.lastStringValue="",this.regexp_eatRegExpIdentifierStart(state)){for(state.lastStringValue+=codePointToString(state.lastIntValue);this.regexp_eatRegExpIdentifierPart(state);)state.lastStringValue+=codePointToString(state.lastIntValue);return !0}return !1};pp$8.regexp_eatRegExpIdentifierStart=function(state){var start=state.pos,forceU=this.options.ecmaVersion>=11,ch=state.current(forceU);return state.advance(forceU),ch===92&&this.regexp_eatRegExpUnicodeEscapeSequence(state,forceU)&&(ch=state.lastIntValue),isRegExpIdentifierStart(ch)?(state.lastIntValue=ch,!0):(state.pos=start,!1)};pp$8.regexp_eatRegExpIdentifierPart=function(state){var start=state.pos,forceU=this.options.ecmaVersion>=11,ch=state.current(forceU);return state.advance(forceU),ch===92&&this.regexp_eatRegExpUnicodeEscapeSequence(state,forceU)&&(ch=state.lastIntValue),isRegExpIdentifierPart(ch)?(state.lastIntValue=ch,!0):(state.pos=start,!1)};pp$8.regexp_eatAtomEscape=function(state){return this.regexp_eatBackReference(state)||this.regexp_eatCharacterClassEscape(state)||this.regexp_eatCharacterEscape(state)||state.switchN&&this.regexp_eatKGroupName(state)?!0:(state.switchU&&(state.current()===99&&state.raise("Invalid unicode escape"),state.raise("Invalid escape")),!1)};pp$8.regexp_eatBackReference=function(state){var start=state.pos;if(this.regexp_eatDecimalEscape(state)){var n=state.lastIntValue;if(state.switchU)return n>state.maxBackReference&&(state.maxBackReference=n),!0;if(n<=state.numCapturingParens)return !0;state.pos=start;}return !1};pp$8.regexp_eatKGroupName=function(state){if(state.eat(107)){if(this.regexp_eatGroupName(state))return state.backReferenceNames.push(state.lastStringValue),!0;state.raise("Invalid named reference");}return !1};pp$8.regexp_eatCharacterEscape=function(state){return this.regexp_eatControlEscape(state)||this.regexp_eatCControlLetter(state)||this.regexp_eatZero(state)||this.regexp_eatHexEscapeSequence(state)||this.regexp_eatRegExpUnicodeEscapeSequence(state,!1)||!state.switchU&&this.regexp_eatLegacyOctalEscapeSequence(state)||this.regexp_eatIdentityEscape(state)};pp$8.regexp_eatCControlLetter=function(state){var start=state.pos;if(state.eat(99)){if(this.regexp_eatControlLetter(state))return !0;state.pos=start;}return !1};pp$8.regexp_eatZero=function(state){return state.current()===48&&!isDecimalDigit(state.lookahead())?(state.lastIntValue=0,state.advance(),!0):!1};pp$8.regexp_eatControlEscape=function(state){var ch=state.current();return ch===116?(state.lastIntValue=9,state.advance(),!0):ch===110?(state.lastIntValue=10,state.advance(),!0):ch===118?(state.lastIntValue=11,state.advance(),!0):ch===102?(state.lastIntValue=12,state.advance(),!0):ch===114?(state.lastIntValue=13,state.advance(),!0):!1};pp$8.regexp_eatControlLetter=function(state){var ch=state.current();return isControlLetter(ch)?(state.lastIntValue=ch%32,state.advance(),!0):!1};pp$8.regexp_eatRegExpUnicodeEscapeSequence=function(state,forceU){forceU===void 0&&(forceU=!1);var start=state.pos,switchU=forceU||state.switchU;if(state.eat(117)){if(this.regexp_eatFixedHexDigits(state,4)){var lead=state.lastIntValue;if(switchU&&lead>=55296&&lead<=56319){var leadSurrogateEnd=state.pos;if(state.eat(92)&&state.eat(117)&&this.regexp_eatFixedHexDigits(state,4)){var trail=state.lastIntValue;if(trail>=56320&&trail<=57343)return state.lastIntValue=(lead-55296)*1024+(trail-56320)+65536,!0}state.pos=leadSurrogateEnd,state.lastIntValue=lead;}return !0}if(switchU&&state.eat(123)&&this.regexp_eatHexDigits(state)&&state.eat(125)&&isValidUnicode(state.lastIntValue))return !0;switchU&&state.raise("Invalid unicode escape"),state.pos=start;}return !1};pp$8.regexp_eatIdentityEscape=function(state){if(state.switchU)return this.regexp_eatSyntaxCharacter(state)?!0:state.eat(47)?(state.lastIntValue=47,!0):!1;var ch=state.current();return ch!==99&&(!state.switchN||ch!==107)?(state.lastIntValue=ch,state.advance(),!0):!1};pp$8.regexp_eatDecimalEscape=function(state){state.lastIntValue=0;var ch=state.current();if(ch>=49&&ch<=57){do state.lastIntValue=10*state.lastIntValue+(ch-48),state.advance();while((ch=state.current())>=48&&ch<=57);return !0}return !1};pp$8.regexp_eatCharacterClassEscape=function(state){var ch=state.current();if(isCharacterClassEscape(ch))return state.lastIntValue=-1,state.advance(),!0;if(state.switchU&&this.options.ecmaVersion>=9&&(ch===80||ch===112)){if(state.lastIntValue=-1,state.advance(),state.eat(123)&&this.regexp_eatUnicodePropertyValueExpression(state)&&state.eat(125))return !0;state.raise("Invalid property name");}return !1};pp$8.regexp_eatUnicodePropertyValueExpression=function(state){var start=state.pos;if(this.regexp_eatUnicodePropertyName(state)&&state.eat(61)){var name=state.lastStringValue;if(this.regexp_eatUnicodePropertyValue(state)){var value=state.lastStringValue;return this.regexp_validateUnicodePropertyNameAndValue(state,name,value),!0}}if(state.pos=start,this.regexp_eatLoneUnicodePropertyNameOrValue(state)){var nameOrValue=state.lastStringValue;return this.regexp_validateUnicodePropertyNameOrValue(state,nameOrValue),!0}return !1};pp$8.regexp_validateUnicodePropertyNameAndValue=function(state,name,value){has(state.unicodeProperties.nonBinary,name)||state.raise("Invalid property name"),state.unicodeProperties.nonBinary[name].test(value)||state.raise("Invalid property value");};pp$8.regexp_validateUnicodePropertyNameOrValue=function(state,nameOrValue){state.unicodeProperties.binary.test(nameOrValue)||state.raise("Invalid property name");};pp$8.regexp_eatUnicodePropertyName=function(state){var ch=0;for(state.lastStringValue="";isUnicodePropertyNameCharacter(ch=state.current());)state.lastStringValue+=codePointToString(ch),state.advance();return state.lastStringValue!==""};pp$8.regexp_eatUnicodePropertyValue=function(state){var ch=0;for(state.lastStringValue="";isUnicodePropertyValueCharacter(ch=state.current());)state.lastStringValue+=codePointToString(ch),state.advance();return state.lastStringValue!==""};pp$8.regexp_eatLoneUnicodePropertyNameOrValue=function(state){return this.regexp_eatUnicodePropertyValue(state)};pp$8.regexp_eatCharacterClass=function(state){if(state.eat(91)){if(state.eat(94),this.regexp_classRanges(state),state.eat(93))return !0;state.raise("Unterminated character class");}return !1};pp$8.regexp_classRanges=function(state){for(;this.regexp_eatClassAtom(state);){var left=state.lastIntValue;if(state.eat(45)&&this.regexp_eatClassAtom(state)){var right=state.lastIntValue;state.switchU&&(left===-1||right===-1)&&state.raise("Invalid character class"),left!==-1&&right!==-1&&left>right&&state.raise("Range out of order in character class");}}};pp$8.regexp_eatClassAtom=function(state){var start=state.pos;if(state.eat(92)){if(this.regexp_eatClassEscape(state))return !0;if(state.switchU){var ch$1=state.current();(ch$1===99||isOctalDigit(ch$1))&&state.raise("Invalid class escape"),state.raise("Invalid escape");}state.pos=start;}var ch=state.current();return ch!==93?(state.lastIntValue=ch,state.advance(),!0):!1};pp$8.regexp_eatClassEscape=function(state){var start=state.pos;if(state.eat(98))return state.lastIntValue=8,!0;if(state.switchU&&state.eat(45))return state.lastIntValue=45,!0;if(!state.switchU&&state.eat(99)){if(this.regexp_eatClassControlLetter(state))return !0;state.pos=start;}return this.regexp_eatCharacterClassEscape(state)||this.regexp_eatCharacterEscape(state)};pp$8.regexp_eatClassControlLetter=function(state){var ch=state.current();return isDecimalDigit(ch)||ch===95?(state.lastIntValue=ch%32,state.advance(),!0):!1};pp$8.regexp_eatHexEscapeSequence=function(state){var start=state.pos;if(state.eat(120)){if(this.regexp_eatFixedHexDigits(state,2))return !0;state.switchU&&state.raise("Invalid escape"),state.pos=start;}return !1};pp$8.regexp_eatDecimalDigits=function(state){var start=state.pos,ch=0;for(state.lastIntValue=0;isDecimalDigit(ch=state.current());)state.lastIntValue=10*state.lastIntValue+(ch-48),state.advance();return state.pos!==start};pp$8.regexp_eatHexDigits=function(state){var start=state.pos,ch=0;for(state.lastIntValue=0;isHexDigit(ch=state.current());)state.lastIntValue=16*state.lastIntValue+hexToInt(ch),state.advance();return state.pos!==start};pp$8.regexp_eatLegacyOctalEscapeSequence=function(state){if(this.regexp_eatOctalDigit(state)){var n1=state.lastIntValue;if(this.regexp_eatOctalDigit(state)){var n2=state.lastIntValue;n1<=3&&this.regexp_eatOctalDigit(state)?state.lastIntValue=n1*64+n2*8+state.lastIntValue:state.lastIntValue=n1*8+n2;}else state.lastIntValue=n1;return !0}return !1};pp$8.regexp_eatOctalDigit=function(state){var ch=state.current();return isOctalDigit(ch)?(state.lastIntValue=ch-48,state.advance(),!0):(state.lastIntValue=0,!1)};pp$8.regexp_eatFixedHexDigits=function(state,length){var start=state.pos;state.lastIntValue=0;for(var i=0;i<length;++i){var ch=state.current();if(!isHexDigit(ch))return state.pos=start,!1;state.lastIntValue=16*state.lastIntValue+hexToInt(ch),state.advance();}return !0};Token=function(p){this.type=p.type,this.value=p.value,this.start=p.start,this.end=p.end,p.options.locations&&(this.loc=new SourceLocation(p,p.startLoc,p.endLoc)),p.options.ranges&&(this.range=[p.start,p.end]);},pp$9=Parser.prototype;pp$9.next=function(ignoreEscapeSequenceInKeyword){!ignoreEscapeSequenceInKeyword&&this.type.keyword&&this.containsEsc&&this.raiseRecoverable(this.start,"Escape sequence in keyword "+this.type.keyword),this.options.onToken&&this.options.onToken(new Token(this)),this.lastTokEnd=this.end,this.lastTokStart=this.start,this.lastTokEndLoc=this.endLoc,this.lastTokStartLoc=this.startLoc,this.nextToken();};pp$9.getToken=function(){return this.next(),new Token(this)};typeof Symbol<"u"&&(pp$9[Symbol.iterator]=function(){var this$1$1=this;return {next:function(){var token=this$1$1.getToken();return {done:token.type===types.eof,value:token}}}});pp$9.curContext=function(){return this.context[this.context.length-1]};pp$9.nextToken=function(){var curContext=this.curContext();if((!curContext||!curContext.preserveSpace)&&this.skipSpace(),this.start=this.pos,this.options.locations&&(this.startLoc=this.curPosition()),this.pos>=this.input.length)return this.finishToken(types.eof);if(curContext.override)return curContext.override(this);this.readToken(this.fullCharCodeAtPos());};pp$9.readToken=function(code){return isIdentifierStart(code,this.options.ecmaVersion>=6)||code===92?this.readWord():this.getTokenFromCode(code)};pp$9.fullCharCodeAtPos=function(){var code=this.input.charCodeAt(this.pos);if(code<=55295||code>=57344)return code;var next=this.input.charCodeAt(this.pos+1);return (code<<10)+next-56613888};pp$9.skipBlockComment=function(){var startLoc=this.options.onComment&&this.curPosition(),start=this.pos,end=this.input.indexOf("*/",this.pos+=2);if(end===-1&&this.raise(this.pos-2,"Unterminated comment"),this.pos=end+2,this.options.locations){lineBreakG.lastIndex=start;for(var match;(match=lineBreakG.exec(this.input))&&match.index<this.pos;)++this.curLine,this.lineStart=match.index+match[0].length;}this.options.onComment&&this.options.onComment(!0,this.input.slice(start+2,end),start,this.pos,startLoc,this.curPosition());};pp$9.skipLineComment=function(startSkip){for(var start=this.pos,startLoc=this.options.onComment&&this.curPosition(),ch=this.input.charCodeAt(this.pos+=startSkip);this.pos<this.input.length&&!isNewLine(ch);)ch=this.input.charCodeAt(++this.pos);this.options.onComment&&this.options.onComment(!1,this.input.slice(start+startSkip,this.pos),start,this.pos,startLoc,this.curPosition());};pp$9.skipSpace=function(){loop:for(;this.pos<this.input.length;){var ch=this.input.charCodeAt(this.pos);switch(ch){case 32:case 160:++this.pos;break;case 13:this.input.charCodeAt(this.pos+1)===10&&++this.pos;case 10:case 8232:case 8233:++this.pos,this.options.locations&&(++this.curLine,this.lineStart=this.pos);break;case 47:switch(this.input.charCodeAt(this.pos+1)){case 42:this.skipBlockComment();break;case 47:this.skipLineComment(2);break;default:break loop}break;default:if(ch>8&&ch<14||ch>=5760&&nonASCIIwhitespace.test(String.fromCharCode(ch)))++this.pos;else break loop}}};pp$9.finishToken=function(type,val){this.end=this.pos,this.options.locations&&(this.endLoc=this.curPosition());var prevType=this.type;this.type=type,this.value=val,this.updateContext(prevType);};pp$9.readToken_dot=function(){var next=this.input.charCodeAt(this.pos+1);if(next>=48&&next<=57)return this.readNumber(!0);var next2=this.input.charCodeAt(this.pos+2);return this.options.ecmaVersion>=6&&next===46&&next2===46?(this.pos+=3,this.finishToken(types.ellipsis)):(++this.pos,this.finishToken(types.dot))};pp$9.readToken_slash=function(){var next=this.input.charCodeAt(this.pos+1);return this.exprAllowed?(++this.pos,this.readRegexp()):next===61?this.finishOp(types.assign,2):this.finishOp(types.slash,1)};pp$9.readToken_mult_modulo_exp=function(code){var next=this.input.charCodeAt(this.pos+1),size=1,tokentype=code===42?types.star:types.modulo;return this.options.ecmaVersion>=7&&code===42&&next===42&&(++size,tokentype=types.starstar,next=this.input.charCodeAt(this.pos+2)),next===61?this.finishOp(types.assign,size+1):this.finishOp(tokentype,size)};pp$9.readToken_pipe_amp=function(code){var next=this.input.charCodeAt(this.pos+1);if(next===code){if(this.options.ecmaVersion>=12){var next2=this.input.charCodeAt(this.pos+2);if(next2===61)return this.finishOp(types.assign,3)}return this.finishOp(code===124?types.logicalOR:types.logicalAND,2)}return next===61?this.finishOp(types.assign,2):this.finishOp(code===124?types.bitwiseOR:types.bitwiseAND,1)};pp$9.readToken_caret=function(){var next=this.input.charCodeAt(this.pos+1);return next===61?this.finishOp(types.assign,2):this.finishOp(types.bitwiseXOR,1)};pp$9.readToken_plus_min=function(code){var next=this.input.charCodeAt(this.pos+1);return next===code?next===45&&!this.inModule&&this.input.charCodeAt(this.pos+2)===62&&(this.lastTokEnd===0||lineBreak.test(this.input.slice(this.lastTokEnd,this.pos)))?(this.skipLineComment(3),this.skipSpace(),this.nextToken()):this.finishOp(types.incDec,2):next===61?this.finishOp(types.assign,2):this.finishOp(types.plusMin,1)};pp$9.readToken_lt_gt=function(code){var next=this.input.charCodeAt(this.pos+1),size=1;return next===code?(size=code===62&&this.input.charCodeAt(this.pos+2)===62?3:2,this.input.charCodeAt(this.pos+size)===61?this.finishOp(types.assign,size+1):this.finishOp(types.bitShift,size)):next===33&&code===60&&!this.inModule&&this.input.charCodeAt(this.pos+2)===45&&this.input.charCodeAt(this.pos+3)===45?(this.skipLineComment(4),this.skipSpace(),this.nextToken()):(next===61&&(size=2),this.finishOp(types.relational,size))};pp$9.readToken_eq_excl=function(code){var next=this.input.charCodeAt(this.pos+1);return next===61?this.finishOp(types.equality,this.input.charCodeAt(this.pos+2)===61?3:2):code===61&&next===62&&this.options.ecmaVersion>=6?(this.pos+=2,this.finishToken(types.arrow)):this.finishOp(code===61?types.eq:types.prefix,1)};pp$9.readToken_question=function(){var ecmaVersion=this.options.ecmaVersion;if(ecmaVersion>=11){var next=this.input.charCodeAt(this.pos+1);if(next===46){var next2=this.input.charCodeAt(this.pos+2);if(next2<48||next2>57)return this.finishOp(types.questionDot,2)}if(next===63){if(ecmaVersion>=12){var next2$1=this.input.charCodeAt(this.pos+2);if(next2$1===61)return this.finishOp(types.assign,3)}return this.finishOp(types.coalesce,2)}}return this.finishOp(types.question,1)};pp$9.getTokenFromCode=function(code){switch(code){case 46:return this.readToken_dot();case 40:return ++this.pos,this.finishToken(types.parenL);case 41:return ++this.pos,this.finishToken(types.parenR);case 59:return ++this.pos,this.finishToken(types.semi);case 44:return ++this.pos,this.finishToken(types.comma);case 91:return ++this.pos,this.finishToken(types.bracketL);case 93:return ++this.pos,this.finishToken(types.bracketR);case 123:return ++this.pos,this.finishToken(types.braceL);case 125:return ++this.pos,this.finishToken(types.braceR);case 58:return ++this.pos,this.finishToken(types.colon);case 96:if(this.options.ecmaVersion<6)break;return ++this.pos,this.finishToken(types.backQuote);case 48:var next=this.input.charCodeAt(this.pos+1);if(next===120||next===88)return this.readRadixNumber(16);if(this.options.ecmaVersion>=6){if(next===111||next===79)return this.readRadixNumber(8);if(next===98||next===66)return this.readRadixNumber(2)}case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return this.readNumber(!1);case 34:case 39:return this.readString(code);case 47:return this.readToken_slash();case 37:case 42:return this.readToken_mult_modulo_exp(code);case 124:case 38:return this.readToken_pipe_amp(code);case 94:return this.readToken_caret();case 43:case 45:return this.readToken_plus_min(code);case 60:case 62:return this.readToken_lt_gt(code);case 61:case 33:return this.readToken_eq_excl(code);case 63:return this.readToken_question();case 126:return this.finishOp(types.prefix,1)}this.raise(this.pos,"Unexpected character \'"+codePointToString$1(code)+"\'");};pp$9.finishOp=function(type,size){var str=this.input.slice(this.pos,this.pos+size);return this.pos+=size,this.finishToken(type,str)};pp$9.readRegexp=function(){for(var escaped,inClass,start=this.pos;;){this.pos>=this.input.length&&this.raise(start,"Unterminated regular expression");var ch=this.input.charAt(this.pos);if(lineBreak.test(ch)&&this.raise(start,"Unterminated regular expression"),escaped)escaped=!1;else {if(ch==="[")inClass=!0;else if(ch==="]"&&inClass)inClass=!1;else if(ch==="/"&&!inClass)break;escaped=ch==="\\\\";}++this.pos;}var pattern=this.input.slice(start,this.pos);++this.pos;var flagsStart=this.pos,flags=this.readWord1();this.containsEsc&&this.unexpected(flagsStart);var state=this.regexpState||(this.regexpState=new RegExpValidationState(this));state.reset(start,pattern,flags),this.validateRegExpFlags(state),this.validateRegExpPattern(state);var value=null;try{value=new RegExp(pattern,flags);}catch{}return this.finishToken(types.regexp,{pattern,flags,value})};pp$9.readInt=function(radix,len,maybeLegacyOctalNumericLiteral){for(var allowSeparators=this.options.ecmaVersion>=12&&len===void 0,isLegacyOctalNumericLiteral=maybeLegacyOctalNumericLiteral&&this.input.charCodeAt(this.pos)===48,start=this.pos,total=0,lastCode=0,i=0,e=len??1/0;i<e;++i,++this.pos){var code=this.input.charCodeAt(this.pos),val=void 0;if(allowSeparators&&code===95){isLegacyOctalNumericLiteral&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed in legacy octal numeric literals"),lastCode===95&&this.raiseRecoverable(this.pos,"Numeric separator must be exactly one underscore"),i===0&&this.raiseRecoverable(this.pos,"Numeric separator is not allowed at the first of digits"),lastCode=code;continue}if(code>=97?val=code-97+10:code>=65?val=code-65+10:code>=48&&code<=57?val=code-48:val=1/0,val>=radix)break;lastCode=code,total=total*radix+val;}return allowSeparators&&lastCode===95&&this.raiseRecoverable(this.pos-1,"Numeric separator is not allowed at the last of digits"),this.pos===start||len!=null&&this.pos-start!==len?null:total};pp$9.readRadixNumber=function(radix){var start=this.pos;this.pos+=2;var val=this.readInt(radix);return val==null&&this.raise(this.start+2,"Expected number in radix "+radix),this.options.ecmaVersion>=11&&this.input.charCodeAt(this.pos)===110?(val=stringToBigInt(this.input.slice(start,this.pos)),++this.pos):isIdentifierStart(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(types.num,val)};pp$9.readNumber=function(startsWithDot){var start=this.pos;!startsWithDot&&this.readInt(10,void 0,!0)===null&&this.raise(start,"Invalid number");var octal=this.pos-start>=2&&this.input.charCodeAt(start)===48;octal&&this.strict&&this.raise(start,"Invalid number");var next=this.input.charCodeAt(this.pos);if(!octal&&!startsWithDot&&this.options.ecmaVersion>=11&&next===110){var val$1=stringToBigInt(this.input.slice(start,this.pos));return ++this.pos,isIdentifierStart(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number"),this.finishToken(types.num,val$1)}octal&&/[89]/.test(this.input.slice(start,this.pos))&&(octal=!1),next===46&&!octal&&(++this.pos,this.readInt(10),next=this.input.charCodeAt(this.pos)),(next===69||next===101)&&!octal&&(next=this.input.charCodeAt(++this.pos),(next===43||next===45)&&++this.pos,this.readInt(10)===null&&this.raise(start,"Invalid number")),isIdentifierStart(this.fullCharCodeAtPos())&&this.raise(this.pos,"Identifier directly after number");var val=stringToNumber(this.input.slice(start,this.pos),octal);return this.finishToken(types.num,val)};pp$9.readCodePoint=function(){var ch=this.input.charCodeAt(this.pos),code;if(ch===123){this.options.ecmaVersion<6&&this.unexpected();var codePos=++this.pos;code=this.readHexChar(this.input.indexOf("}",this.pos)-this.pos),++this.pos,code>1114111&&this.invalidStringToken(codePos,"Code point out of bounds");}else code=this.readHexChar(4);return code};pp$9.readString=function(quote){for(var out="",chunkStart=++this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");var ch=this.input.charCodeAt(this.pos);if(ch===quote)break;ch===92?(out+=this.input.slice(chunkStart,this.pos),out+=this.readEscapedChar(!1),chunkStart=this.pos):(isNewLine(ch,this.options.ecmaVersion>=10)&&this.raise(this.start,"Unterminated string constant"),++this.pos);}return out+=this.input.slice(chunkStart,this.pos++),this.finishToken(types.string,out)};INVALID_TEMPLATE_ESCAPE_ERROR={};pp$9.tryReadTemplateToken=function(){this.inTemplateElement=!0;try{this.readTmplToken();}catch(err){if(err===INVALID_TEMPLATE_ESCAPE_ERROR)this.readInvalidTemplateToken();else throw err}this.inTemplateElement=!1;};pp$9.invalidStringToken=function(position,message){if(this.inTemplateElement&&this.options.ecmaVersion>=9)throw INVALID_TEMPLATE_ESCAPE_ERROR;this.raise(position,message);};pp$9.readTmplToken=function(){for(var out="",chunkStart=this.pos;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated template");var ch=this.input.charCodeAt(this.pos);if(ch===96||ch===36&&this.input.charCodeAt(this.pos+1)===123)return this.pos===this.start&&(this.type===types.template||this.type===types.invalidTemplate)?ch===36?(this.pos+=2,this.finishToken(types.dollarBraceL)):(++this.pos,this.finishToken(types.backQuote)):(out+=this.input.slice(chunkStart,this.pos),this.finishToken(types.template,out));if(ch===92)out+=this.input.slice(chunkStart,this.pos),out+=this.readEscapedChar(!0),chunkStart=this.pos;else if(isNewLine(ch)){switch(out+=this.input.slice(chunkStart,this.pos),++this.pos,ch){case 13:this.input.charCodeAt(this.pos)===10&&++this.pos;case 10:out+=`\n`;break;default:out+=String.fromCharCode(ch);break}this.options.locations&&(++this.curLine,this.lineStart=this.pos),chunkStart=this.pos;}else ++this.pos;}};pp$9.readInvalidTemplateToken=function(){for(;this.pos<this.input.length;this.pos++)switch(this.input[this.pos]){case"\\\\":++this.pos;break;case"$":if(this.input[this.pos+1]!=="{")break;case"`":return this.finishToken(types.invalidTemplate,this.input.slice(this.start,this.pos))}this.raise(this.start,"Unterminated template");};pp$9.readEscapedChar=function(inTemplate){var ch=this.input.charCodeAt(++this.pos);switch(++this.pos,ch){case 110:return `\n`;case 114:return "\\r";case 120:return String.fromCharCode(this.readHexChar(2));case 117:return codePointToString$1(this.readCodePoint());case 116:return "\t";case 98:return "\\b";case 118:return "\\v";case 102:return "\\f";case 13:this.input.charCodeAt(this.pos)===10&&++this.pos;case 10:return this.options.locations&&(this.lineStart=this.pos,++this.curLine),"";case 56:case 57:if(inTemplate){var codePos=this.pos-1;return this.invalidStringToken(codePos,"Invalid escape sequence in template string"),null}default:if(ch>=48&&ch<=55){var octalStr=this.input.substr(this.pos-1,3).match(/^[0-7]+/)[0],octal=parseInt(octalStr,8);return octal>255&&(octalStr=octalStr.slice(0,-1),octal=parseInt(octalStr,8)),this.pos+=octalStr.length-1,ch=this.input.charCodeAt(this.pos),(octalStr!=="0"||ch===56||ch===57)&&(this.strict||inTemplate)&&this.invalidStringToken(this.pos-1-octalStr.length,inTemplate?"Octal literal in template string":"Octal literal in strict mode"),String.fromCharCode(octal)}return isNewLine(ch)?"":String.fromCharCode(ch)}};pp$9.readHexChar=function(len){var codePos=this.pos,n=this.readInt(16,len);return n===null&&this.invalidStringToken(codePos,"Bad character escape sequence"),n};pp$9.readWord1=function(){this.containsEsc=!1;for(var word="",first=!0,chunkStart=this.pos,astral=this.options.ecmaVersion>=6;this.pos<this.input.length;){var ch=this.fullCharCodeAtPos();if(isIdentifierChar(ch,astral))this.pos+=ch<=65535?1:2;else if(ch===92){this.containsEsc=!0,word+=this.input.slice(chunkStart,this.pos);var escStart=this.pos;this.input.charCodeAt(++this.pos)!==117&&this.invalidStringToken(this.pos,"Expecting Unicode escape sequence \\\\uXXXX"),++this.pos;var esc=this.readCodePoint();(first?isIdentifierStart:isIdentifierChar)(esc,astral)||this.invalidStringToken(escStart,"Invalid Unicode escape"),word+=codePointToString$1(esc),chunkStart=this.pos;}else break;first=!1;}return word+this.input.slice(chunkStart,this.pos)};pp$9.readWord=function(){var word=this.readWord1(),type=types.name;return this.keywords.test(word)&&(type=keywords$1[word]),this.finishToken(type,word)};version="7.4.1";Parser.acorn={Parser,version,defaultOptions,Position,SourceLocation,getLineInfo,Node,TokenType,tokTypes:types,keywordTypes:keywords$1,TokContext,tokContexts:types$1,isIdentifierChar,isIdentifierStart,Token,isNewLine,lineBreak,lineBreakG,nonASCIIwhitespace};}});var require_xhtml=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/acorn-jsx/xhtml.js"(exports,module){module.exports={quot:\'"\',amp:"&",apos:"\'",lt:"<",gt:">",nbsp:"\\xA0",iexcl:"\\xA1",cent:"\\xA2",pound:"\\xA3",curren:"\\xA4",yen:"\\xA5",brvbar:"\\xA6",sect:"\\xA7",uml:"\\xA8",copy:"\\xA9",ordf:"\\xAA",laquo:"\\xAB",not:"\\xAC",shy:"\\xAD",reg:"\\xAE",macr:"\\xAF",deg:"\\xB0",plusmn:"\\xB1",sup2:"\\xB2",sup3:"\\xB3",acute:"\\xB4",micro:"\\xB5",para:"\\xB6",middot:"\\xB7",cedil:"\\xB8",sup1:"\\xB9",ordm:"\\xBA",raquo:"\\xBB",frac14:"\\xBC",frac12:"\\xBD",frac34:"\\xBE",iquest:"\\xBF",Agrave:"\\xC0",Aacute:"\\xC1",Acirc:"\\xC2",Atilde:"\\xC3",Auml:"\\xC4",Aring:"\\xC5",AElig:"\\xC6",Ccedil:"\\xC7",Egrave:"\\xC8",Eacute:"\\xC9",Ecirc:"\\xCA",Euml:"\\xCB",Igrave:"\\xCC",Iacute:"\\xCD",Icirc:"\\xCE",Iuml:"\\xCF",ETH:"\\xD0",Ntilde:"\\xD1",Ograve:"\\xD2",Oacute:"\\xD3",Ocirc:"\\xD4",Otilde:"\\xD5",Ouml:"\\xD6",times:"\\xD7",Oslash:"\\xD8",Ugrave:"\\xD9",Uacute:"\\xDA",Ucirc:"\\xDB",Uuml:"\\xDC",Yacute:"\\xDD",THORN:"\\xDE",szlig:"\\xDF",agrave:"\\xE0",aacute:"\\xE1",acirc:"\\xE2",atilde:"\\xE3",auml:"\\xE4",aring:"\\xE5",aelig:"\\xE6",ccedil:"\\xE7",egrave:"\\xE8",eacute:"\\xE9",ecirc:"\\xEA",euml:"\\xEB",igrave:"\\xEC",iacute:"\\xED",icirc:"\\xEE",iuml:"\\xEF",eth:"\\xF0",ntilde:"\\xF1",ograve:"\\xF2",oacute:"\\xF3",ocirc:"\\xF4",otilde:"\\xF5",ouml:"\\xF6",divide:"\\xF7",oslash:"\\xF8",ugrave:"\\xF9",uacute:"\\xFA",ucirc:"\\xFB",uuml:"\\xFC",yacute:"\\xFD",thorn:"\\xFE",yuml:"\\xFF",OElig:"\\u0152",oelig:"\\u0153",Scaron:"\\u0160",scaron:"\\u0161",Yuml:"\\u0178",fnof:"\\u0192",circ:"\\u02C6",tilde:"\\u02DC",Alpha:"\\u0391",Beta:"\\u0392",Gamma:"\\u0393",Delta:"\\u0394",Epsilon:"\\u0395",Zeta:"\\u0396",Eta:"\\u0397",Theta:"\\u0398",Iota:"\\u0399",Kappa:"\\u039A",Lambda:"\\u039B",Mu:"\\u039C",Nu:"\\u039D",Xi:"\\u039E",Omicron:"\\u039F",Pi:"\\u03A0",Rho:"\\u03A1",Sigma:"\\u03A3",Tau:"\\u03A4",Upsilon:"\\u03A5",Phi:"\\u03A6",Chi:"\\u03A7",Psi:"\\u03A8",Omega:"\\u03A9",alpha:"\\u03B1",beta:"\\u03B2",gamma:"\\u03B3",delta:"\\u03B4",epsilon:"\\u03B5",zeta:"\\u03B6",eta:"\\u03B7",theta:"\\u03B8",iota:"\\u03B9",kappa:"\\u03BA",lambda:"\\u03BB",mu:"\\u03BC",nu:"\\u03BD",xi:"\\u03BE",omicron:"\\u03BF",pi:"\\u03C0",rho:"\\u03C1",sigmaf:"\\u03C2",sigma:"\\u03C3",tau:"\\u03C4",upsilon:"\\u03C5",phi:"\\u03C6",chi:"\\u03C7",psi:"\\u03C8",omega:"\\u03C9",thetasym:"\\u03D1",upsih:"\\u03D2",piv:"\\u03D6",ensp:"\\u2002",emsp:"\\u2003",thinsp:"\\u2009",zwnj:"\\u200C",zwj:"\\u200D",lrm:"\\u200E",rlm:"\\u200F",ndash:"\\u2013",mdash:"\\u2014",lsquo:"\\u2018",rsquo:"\\u2019",sbquo:"\\u201A",ldquo:"\\u201C",rdquo:"\\u201D",bdquo:"\\u201E",dagger:"\\u2020",Dagger:"\\u2021",bull:"\\u2022",hellip:"\\u2026",permil:"\\u2030",prime:"\\u2032",Prime:"\\u2033",lsaquo:"\\u2039",rsaquo:"\\u203A",oline:"\\u203E",frasl:"\\u2044",euro:"\\u20AC",image:"\\u2111",weierp:"\\u2118",real:"\\u211C",trade:"\\u2122",alefsym:"\\u2135",larr:"\\u2190",uarr:"\\u2191",rarr:"\\u2192",darr:"\\u2193",harr:"\\u2194",crarr:"\\u21B5",lArr:"\\u21D0",uArr:"\\u21D1",rArr:"\\u21D2",dArr:"\\u21D3",hArr:"\\u21D4",forall:"\\u2200",part:"\\u2202",exist:"\\u2203",empty:"\\u2205",nabla:"\\u2207",isin:"\\u2208",notin:"\\u2209",ni:"\\u220B",prod:"\\u220F",sum:"\\u2211",minus:"\\u2212",lowast:"\\u2217",radic:"\\u221A",prop:"\\u221D",infin:"\\u221E",ang:"\\u2220",and:"\\u2227",or:"\\u2228",cap:"\\u2229",cup:"\\u222A",int:"\\u222B",there4:"\\u2234",sim:"\\u223C",cong:"\\u2245",asymp:"\\u2248",ne:"\\u2260",equiv:"\\u2261",le:"\\u2264",ge:"\\u2265",sub:"\\u2282",sup:"\\u2283",nsub:"\\u2284",sube:"\\u2286",supe:"\\u2287",oplus:"\\u2295",otimes:"\\u2297",perp:"\\u22A5",sdot:"\\u22C5",lceil:"\\u2308",rceil:"\\u2309",lfloor:"\\u230A",rfloor:"\\u230B",lang:"\\u2329",rang:"\\u232A",loz:"\\u25CA",spades:"\\u2660",clubs:"\\u2663",hearts:"\\u2665",diams:"\\u2666"};}});var require_acorn_jsx=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/acorn-jsx/index.js"(exports,module){var XHTMLEntities=require_xhtml(),hexNumber=/^[\\da-fA-F]+$/,decimalNumber=/^\\d+$/,acornJsxMap=new WeakMap;function getJsxTokens(acorn){acorn=acorn.Parser.acorn||acorn;let acornJsx=acornJsxMap.get(acorn);if(!acornJsx){let tt=acorn.tokTypes,TokContext3=acorn.TokContext,TokenType3=acorn.TokenType,tc_oTag=new TokContext3("<tag",!1),tc_cTag=new TokContext3("</tag",!1),tc_expr=new TokContext3("<tag>...</tag>",!0,!0),tokContexts={tc_oTag,tc_cTag,tc_expr},tokTypes={jsxName:new TokenType3("jsxName"),jsxText:new TokenType3("jsxText",{beforeExpr:!0}),jsxTagStart:new TokenType3("jsxTagStart",{startsExpr:!0}),jsxTagEnd:new TokenType3("jsxTagEnd")};tokTypes.jsxTagStart.updateContext=function(){this.context.push(tc_expr),this.context.push(tc_oTag),this.exprAllowed=!1;},tokTypes.jsxTagEnd.updateContext=function(prevType){let out=this.context.pop();out===tc_oTag&&prevType===tt.slash||out===tc_cTag?(this.context.pop(),this.exprAllowed=this.curContext()===tc_expr):this.exprAllowed=!0;},acornJsx={tokContexts,tokTypes},acornJsxMap.set(acorn,acornJsx);}return acornJsx}function getQualifiedJSXName(object){if(!object)return object;if(object.type==="JSXIdentifier")return object.name;if(object.type==="JSXNamespacedName")return object.namespace.name+":"+object.name.name;if(object.type==="JSXMemberExpression")return getQualifiedJSXName(object.object)+"."+getQualifiedJSXName(object.property)}module.exports=function(options){return options=options||{},function(Parser3){return plugin({allowNamespaces:options.allowNamespaces!==!1,allowNamespacedObjects:!!options.allowNamespacedObjects},Parser3)}};Object.defineProperty(module.exports,"tokTypes",{get:function(){return getJsxTokens((init_acorn(),(0,chunk_XP5HYGXS/* __toCommonJS */.Yp)(acorn_exports))).tokTypes},configurable:!0,enumerable:!0});function plugin(options,Parser3){let acorn=Parser3.acorn||(init_acorn(),(0,chunk_XP5HYGXS/* __toCommonJS */.Yp)(acorn_exports)),acornJsx=getJsxTokens(acorn),tt=acorn.tokTypes,tok=acornJsx.tokTypes,tokContexts=acorn.tokContexts,tc_oTag=acornJsx.tokContexts.tc_oTag,tc_cTag=acornJsx.tokContexts.tc_cTag,tc_expr=acornJsx.tokContexts.tc_expr,isNewLine2=acorn.isNewLine,isIdentifierStart2=acorn.isIdentifierStart,isIdentifierChar2=acorn.isIdentifierChar;return class extends Parser3{static get acornJsx(){return acornJsx}jsx_readToken(){let out="",chunkStart=this.pos;for(;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated JSX contents");let ch=this.input.charCodeAt(this.pos);switch(ch){case 60:case 123:return this.pos===this.start?ch===60&&this.exprAllowed?(++this.pos,this.finishToken(tok.jsxTagStart)):this.getTokenFromCode(ch):(out+=this.input.slice(chunkStart,this.pos),this.finishToken(tok.jsxText,out));case 38:out+=this.input.slice(chunkStart,this.pos),out+=this.jsx_readEntity(),chunkStart=this.pos;break;case 62:case 125:this.raise(this.pos,"Unexpected token `"+this.input[this.pos]+"`. Did you mean `"+(ch===62?"&gt;":"&rbrace;")+\'` or `{"\'+this.input[this.pos]+\'"}`?\');default:isNewLine2(ch)?(out+=this.input.slice(chunkStart,this.pos),out+=this.jsx_readNewLine(!0),chunkStart=this.pos):++this.pos;}}}jsx_readNewLine(normalizeCRLF){let ch=this.input.charCodeAt(this.pos),out;return ++this.pos,ch===13&&this.input.charCodeAt(this.pos)===10?(++this.pos,out=normalizeCRLF?`\n`:`\\r\n`):out=String.fromCharCode(ch),this.options.locations&&(++this.curLine,this.lineStart=this.pos),out}jsx_readString(quote){let out="",chunkStart=++this.pos;for(;;){this.pos>=this.input.length&&this.raise(this.start,"Unterminated string constant");let ch=this.input.charCodeAt(this.pos);if(ch===quote)break;ch===38?(out+=this.input.slice(chunkStart,this.pos),out+=this.jsx_readEntity(),chunkStart=this.pos):isNewLine2(ch)?(out+=this.input.slice(chunkStart,this.pos),out+=this.jsx_readNewLine(!1),chunkStart=this.pos):++this.pos;}return out+=this.input.slice(chunkStart,this.pos++),this.finishToken(tt.string,out)}jsx_readEntity(){let str="",count=0,entity,ch=this.input[this.pos];ch!=="&"&&this.raise(this.pos,"Entity must start with an ampersand");let startPos=++this.pos;for(;this.pos<this.input.length&&count++<10;){if(ch=this.input[this.pos++],ch===";"){str[0]==="#"?str[1]==="x"?(str=str.substr(2),hexNumber.test(str)&&(entity=String.fromCharCode(parseInt(str,16)))):(str=str.substr(1),decimalNumber.test(str)&&(entity=String.fromCharCode(parseInt(str,10)))):entity=XHTMLEntities[str];break}str+=ch;}return entity||(this.pos=startPos,"&")}jsx_readWord(){let ch,start=this.pos;do ch=this.input.charCodeAt(++this.pos);while(isIdentifierChar2(ch)||ch===45);return this.finishToken(tok.jsxName,this.input.slice(start,this.pos))}jsx_parseIdentifier(){let node=this.startNode();return this.type===tok.jsxName?node.name=this.value:this.type.keyword?node.name=this.type.keyword:this.unexpected(),this.next(),this.finishNode(node,"JSXIdentifier")}jsx_parseNamespacedName(){let startPos=this.start,startLoc=this.startLoc,name=this.jsx_parseIdentifier();if(!options.allowNamespaces||!this.eat(tt.colon))return name;var node=this.startNodeAt(startPos,startLoc);return node.namespace=name,node.name=this.jsx_parseIdentifier(),this.finishNode(node,"JSXNamespacedName")}jsx_parseElementName(){if(this.type===tok.jsxTagEnd)return "";let startPos=this.start,startLoc=this.startLoc,node=this.jsx_parseNamespacedName();for(this.type===tt.dot&&node.type==="JSXNamespacedName"&&!options.allowNamespacedObjects&&this.unexpected();this.eat(tt.dot);){let newNode=this.startNodeAt(startPos,startLoc);newNode.object=node,newNode.property=this.jsx_parseIdentifier(),node=this.finishNode(newNode,"JSXMemberExpression");}return node}jsx_parseAttributeValue(){switch(this.type){case tt.braceL:let node=this.jsx_parseExpressionContainer();return node.expression.type==="JSXEmptyExpression"&&this.raise(node.start,"JSX attributes must only be assigned a non-empty expression"),node;case tok.jsxTagStart:case tt.string:return this.parseExprAtom();default:this.raise(this.start,"JSX value should be either an expression or a quoted JSX text");}}jsx_parseEmptyExpression(){let node=this.startNodeAt(this.lastTokEnd,this.lastTokEndLoc);return this.finishNodeAt(node,"JSXEmptyExpression",this.start,this.startLoc)}jsx_parseExpressionContainer(){let node=this.startNode();return this.next(),node.expression=this.type===tt.braceR?this.jsx_parseEmptyExpression():this.parseExpression(),this.expect(tt.braceR),this.finishNode(node,"JSXExpressionContainer")}jsx_parseAttribute(){let node=this.startNode();return this.eat(tt.braceL)?(this.expect(tt.ellipsis),node.argument=this.parseMaybeAssign(),this.expect(tt.braceR),this.finishNode(node,"JSXSpreadAttribute")):(node.name=this.jsx_parseNamespacedName(),node.value=this.eat(tt.eq)?this.jsx_parseAttributeValue():null,this.finishNode(node,"JSXAttribute"))}jsx_parseOpeningElementAt(startPos,startLoc){let node=this.startNodeAt(startPos,startLoc);node.attributes=[];let nodeName=this.jsx_parseElementName();for(nodeName&&(node.name=nodeName);this.type!==tt.slash&&this.type!==tok.jsxTagEnd;)node.attributes.push(this.jsx_parseAttribute());return node.selfClosing=this.eat(tt.slash),this.expect(tok.jsxTagEnd),this.finishNode(node,nodeName?"JSXOpeningElement":"JSXOpeningFragment")}jsx_parseClosingElementAt(startPos,startLoc){let node=this.startNodeAt(startPos,startLoc),nodeName=this.jsx_parseElementName();return nodeName&&(node.name=nodeName),this.expect(tok.jsxTagEnd),this.finishNode(node,nodeName?"JSXClosingElement":"JSXClosingFragment")}jsx_parseElementAt(startPos,startLoc){let node=this.startNodeAt(startPos,startLoc),children=[],openingElement=this.jsx_parseOpeningElementAt(startPos,startLoc),closingElement=null;if(!openingElement.selfClosing){contents:for(;;)switch(this.type){case tok.jsxTagStart:if(startPos=this.start,startLoc=this.startLoc,this.next(),this.eat(tt.slash)){closingElement=this.jsx_parseClosingElementAt(startPos,startLoc);break contents}children.push(this.jsx_parseElementAt(startPos,startLoc));break;case tok.jsxText:children.push(this.parseExprAtom());break;case tt.braceL:children.push(this.jsx_parseExpressionContainer());break;default:this.unexpected();}getQualifiedJSXName(closingElement.name)!==getQualifiedJSXName(openingElement.name)&&this.raise(closingElement.start,"Expected corresponding JSX closing tag for <"+getQualifiedJSXName(openingElement.name)+">");}let fragmentOrElement=openingElement.name?"Element":"Fragment";return node["opening"+fragmentOrElement]=openingElement,node["closing"+fragmentOrElement]=closingElement,node.children=children,this.type===tt.relational&&this.value==="<"&&this.raise(this.start,"Adjacent JSX elements must be wrapped in an enclosing tag"),this.finishNode(node,"JSX"+fragmentOrElement)}jsx_parseText(){let node=this.parseLiteral(this.value);return node.type="JSXText",node}jsx_parseElement(){let startPos=this.start,startLoc=this.startLoc;return this.next(),this.jsx_parseElementAt(startPos,startLoc)}parseExprAtom(refShortHandDefaultPos){return this.type===tok.jsxText?this.jsx_parseText():this.type===tok.jsxTagStart?this.jsx_parseElement():super.parseExprAtom(refShortHandDefaultPos)}readToken(code){let context=this.curContext();if(context===tc_expr)return this.jsx_readToken();if(context===tc_oTag||context===tc_cTag){if(isIdentifierStart2(code))return this.jsx_readWord();if(code==62)return ++this.pos,this.finishToken(tok.jsxTagEnd);if((code===34||code===39)&&context==tc_oTag)return this.jsx_readString(code)}return code===60&&this.exprAllowed&&this.input.charCodeAt(this.pos+1)!==33?(++this.pos,this.finishToken(tok.jsxTagStart)):super.readToken(code)}updateContext(prevType){if(this.type==tt.braceL){var curContext=this.curContext();curContext==tc_oTag?this.context.push(tokContexts.b_expr):curContext==tc_expr?this.context.push(tokContexts.b_tmpl):super.updateContext(prevType),this.exprAllowed=!0;}else if(this.type===tt.slash&&prevType===tok.jsxTagStart)this.context.length-=2,this.context.push(tc_cTag),this.exprAllowed=!1;else return super.updateContext(prevType)}}}}});var require_dist=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/@base2/pretty-print-object/dist/index.js"(exports){var __assign=exports&&exports.__assign||function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);}return t},__assign.apply(this,arguments)},__spreadArrays=exports&&exports.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;for(var r=Array(s),k=0,i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0});var seen=[];function isObj(value){var type=typeof value;return value!==null&&(type==="object"||type==="function")}function isRegexp(value){return Object.prototype.toString.call(value)==="[object RegExp]"}function getOwnEnumPropSymbols(object){return Object.getOwnPropertySymbols(object).filter(function(keySymbol){return Object.prototype.propertyIsEnumerable.call(object,keySymbol)})}function prettyPrint2(input,options,pad){pad===void 0&&(pad="");var defaultOptions2={indent:"\t",singleQuotes:!0},combinedOptions=__assign(__assign({},defaultOptions2),options),tokens;combinedOptions.inlineCharacterLimit===void 0?tokens={newLine:`\n`,newLineOrSpace:`\n`,pad,indent:pad+combinedOptions.indent}:tokens={newLine:"@@__PRETTY_PRINT_NEW_LINE__@@",newLineOrSpace:"@@__PRETTY_PRINT_NEW_LINE_OR_SPACE__@@",pad:"@@__PRETTY_PRINT_PAD__@@",indent:"@@__PRETTY_PRINT_INDENT__@@"};var expandWhiteSpace=function(string){if(combinedOptions.inlineCharacterLimit===void 0)return string;var oneLined=string.replace(new RegExp(tokens.newLine,"g"),"").replace(new RegExp(tokens.newLineOrSpace,"g")," ").replace(new RegExp(tokens.pad+"|"+tokens.indent,"g"),"");return oneLined.length<=combinedOptions.inlineCharacterLimit?oneLined:string.replace(new RegExp(tokens.newLine+"|"+tokens.newLineOrSpace,"g"),`\n`).replace(new RegExp(tokens.pad,"g"),pad).replace(new RegExp(tokens.indent,"g"),pad+combinedOptions.indent)};if(seen.indexOf(input)!==-1)return \'"[Circular]"\';if(input==null||typeof input=="number"||typeof input=="boolean"||typeof input=="function"||typeof input=="symbol"||isRegexp(input))return String(input);if(input instanceof Date)return "new Date(\'"+input.toISOString()+"\')";if(Array.isArray(input)){if(input.length===0)return "[]";seen.push(input);var ret="["+tokens.newLine+input.map(function(el,i){var eol=input.length-1===i?tokens.newLine:","+tokens.newLineOrSpace,value=prettyPrint2(el,combinedOptions,pad+combinedOptions.indent);return combinedOptions.transform&&(value=combinedOptions.transform(input,i,value)),tokens.indent+value+eol}).join("")+tokens.pad+"]";return seen.pop(),expandWhiteSpace(ret)}if(isObj(input)){var objKeys_1=__spreadArrays(Object.keys(input),getOwnEnumPropSymbols(input));if(combinedOptions.filter&&(objKeys_1=objKeys_1.filter(function(el){return combinedOptions.filter&&combinedOptions.filter(input,el)})),objKeys_1.length===0)return "{}";seen.push(input);var ret="{"+tokens.newLine+objKeys_1.map(function(el,i){var eol=objKeys_1.length-1===i?tokens.newLine:","+tokens.newLineOrSpace,isSymbol=typeof el=="symbol",isClassic=!isSymbol&&/^[a-z$_][a-z$_0-9]*$/i.test(el.toString()),key=isSymbol||isClassic?el:prettyPrint2(el,combinedOptions),value=prettyPrint2(input[el],combinedOptions,pad+combinedOptions.indent);return combinedOptions.transform&&(value=combinedOptions.transform(input,el,value)),tokens.indent+String(key)+": "+value+eol}).join("")+tokens.pad+"}";return seen.pop(),expandWhiteSpace(ret)}return input=String(input).replace(/[\\r\\n]/g,function(x){return x===`\n`?"\\\\n":"\\\\r"}),combinedOptions.singleQuotes?(input=input.replace(/\\\\?\'/g,"\\\\\'"),"\'"+input+"\'"):(input=input.replace(/"/g,\'\\\\"\'),\'"\'+input+\'"\')}exports.prettyPrint=prettyPrint2;}});var require_react_is_production_min2=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/react-element-to-jsx-string/node_modules/react-is/cjs/react-is.production.min.js"(exports){var b=Symbol.for("react.element"),c=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),e=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),h=Symbol.for("react.context"),k=Symbol.for("react.server_context"),l=Symbol.for("react.forward_ref"),m=Symbol.for("react.suspense"),n=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),t=Symbol.for("react.offscreen"),u;u=Symbol.for("react.module.reference");function v(a){if(typeof a=="object"&&a!==null){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;exports.SuspenseList=n;exports.isAsyncMode=function(){return !1};exports.isConcurrentMode=function(){return !1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return typeof a=="object"&&a!==null&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};exports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};exports.isValidElementType=function(a){return typeof a=="string"||typeof a=="function"||a===d||a===f||a===e||a===m||a===n||a===t||typeof a=="object"&&a!==null&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||a.getModuleId!==void 0)};exports.typeOf=v;}});var require_react_is_development2=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/react-element-to-jsx-string/node_modules/react-is/cjs/react-is.development.js"(exports){ false&&0;}});var require_react_is2=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/react-element-to-jsx-string/node_modules/react-is/index.js"(exports,module){ true?module.exports=require_react_is_production_min2():0;}});var entry_preview_docs_exports={};(0,chunk_XP5HYGXS/* __export */.VA)(entry_preview_docs_exports,{applyDecorators:()=>applyDecorators,argTypesEnhancers:()=>argTypesEnhancers,decorators:()=>decorators,parameters:()=>parameters});var import_prop_types=(0,chunk_XP5HYGXS/* __toESM */.f1)(require_prop_types());var CUSTOM_CAPTION="custom",OBJECT_CAPTION="object",ARRAY_CAPTION="array",CLASS_CAPTION="class",FUNCTION_CAPTION="func",ELEMENT_CAPTION="element";var import_html_tags=(0,chunk_XP5HYGXS/* __toESM */.f1)(require_html_tags2());function isHtmlTag(tagName){return import_html_tags.default.includes(tagName.toLowerCase())}var import_escodegen=(0,chunk_XP5HYGXS/* __toESM */.f1)(require_escodegen());function dedent(templ){for(var values=[],_i=1;_i<arguments.length;_i++)values[_i-1]=arguments[_i];var strings=Array.from(typeof templ=="string"?[templ]:templ);strings[strings.length-1]=strings[strings.length-1].replace(/\\r?\\n([\\t ]*)$/,"");var indentLengths=strings.reduce(function(arr,str){var matches=str.match(/\\n([\\t ]+|(?!\\s).)/g);return matches?arr.concat(matches.map(function(match){var _a,_b;return (_b=(_a=match.match(/[\\t ]/g))===null||_a===void 0?void 0:_a.length)!==null&&_b!==void 0?_b:0})):arr},[]);if(indentLengths.length){var pattern_1=new RegExp(`\n[\t ]{`+Math.min.apply(Math,indentLengths)+"}","g");strings=strings.map(function(str){return str.replace(pattern_1,`\n`)});}strings[0]=strings[0].replace(/^\\r?\\n/,"");var string=strings[0];return values.forEach(function(value,i){var endentations=string.match(/(?:^|\\n)( *)$/),endentation=endentations?endentations[1]:"",indentedValue=value;typeof value=="string"&&value.includes(`\n`)&&(indentedValue=String(value).split(`\n`).map(function(str,i2){return i2===0?str:""+endentation+str}).join(`\n`)),string+=indentedValue+strings[i+1];}),string}var BASIC_OPTIONS={format:{indent:{style:"  "},semicolons:!1}},COMPACT_OPTIONS={...BASIC_OPTIONS,format:{newline:""}},PRETTY_OPTIONS={...BASIC_OPTIONS};function generateCode(ast,compact=!1){return (0, import_escodegen.generate)(ast,compact?COMPACT_OPTIONS:PRETTY_OPTIONS)}function generateObjectCode(ast,compact=!1){return compact?generateCompactObjectCode(ast):generateCode(ast)}function generateCompactObjectCode(ast){let result=generateCode(ast,!0);return result.endsWith(" }")||(result=`${result.slice(0,-1)} }`),result}function generateArrayCode(ast,compact=!1){return compact?generateCompactArrayCode(ast):generateMultilineArrayCode(ast)}function generateMultilineArrayCode(ast){let result=generateCode(ast);return result.endsWith("  }]")&&(result=dedent(result)),result}function generateCompactArrayCode(ast){let result=generateCode(ast,!0);return result.startsWith("[    ")&&(result=result.replace("[    ","[")),result}var isMemo=component=>component.$$typeof===Symbol.for("react.memo"),isForwardRef=component=>component.$$typeof===Symbol.for("react.forward_ref");init_acorn();var import_acorn_jsx=(0,chunk_XP5HYGXS/* __toESM */.f1)(require_acorn_jsx());function simple(node,visitors,baseVisitor,state,override){baseVisitor||(baseVisitor=base),function c(node2,st,override2){var type=override2||node2.type,found=visitors[type];baseVisitor[type](node2,st,c),found&&found(node2,st);}(node,state,override);}function ancestor(node,visitors,baseVisitor,state,override){var ancestors=[];baseVisitor||(baseVisitor=base),function c(node2,st,override2){var type=override2||node2.type,found=visitors[type],isNew=node2!==ancestors[ancestors.length-1];isNew&&ancestors.push(node2),baseVisitor[type](node2,st,c),found&&found(node2,st||ancestors,ancestors),isNew&&ancestors.pop();}(node,state,override);}function skipThrough(node,st,c){c(node,st);}function ignore(_node,_st,_c){}var base={};base.Program=base.BlockStatement=function(node,st,c){for(var i=0,list=node.body;i<list.length;i+=1){var stmt=list[i];c(stmt,st,"Statement");}};base.Statement=skipThrough;base.EmptyStatement=ignore;base.ExpressionStatement=base.ParenthesizedExpression=base.ChainExpression=function(node,st,c){return c(node.expression,st,"Expression")};base.IfStatement=function(node,st,c){c(node.test,st,"Expression"),c(node.consequent,st,"Statement"),node.alternate&&c(node.alternate,st,"Statement");};base.LabeledStatement=function(node,st,c){return c(node.body,st,"Statement")};base.BreakStatement=base.ContinueStatement=ignore;base.WithStatement=function(node,st,c){c(node.object,st,"Expression"),c(node.body,st,"Statement");};base.SwitchStatement=function(node,st,c){c(node.discriminant,st,"Expression");for(var i$1=0,list$1=node.cases;i$1<list$1.length;i$1+=1){var cs=list$1[i$1];cs.test&&c(cs.test,st,"Expression");for(var i=0,list=cs.consequent;i<list.length;i+=1){var cons=list[i];c(cons,st,"Statement");}}};base.SwitchCase=function(node,st,c){node.test&&c(node.test,st,"Expression");for(var i=0,list=node.consequent;i<list.length;i+=1){var cons=list[i];c(cons,st,"Statement");}};base.ReturnStatement=base.YieldExpression=base.AwaitExpression=function(node,st,c){node.argument&&c(node.argument,st,"Expression");};base.ThrowStatement=base.SpreadElement=function(node,st,c){return c(node.argument,st,"Expression")};base.TryStatement=function(node,st,c){c(node.block,st,"Statement"),node.handler&&c(node.handler,st),node.finalizer&&c(node.finalizer,st,"Statement");};base.CatchClause=function(node,st,c){node.param&&c(node.param,st,"Pattern"),c(node.body,st,"Statement");};base.WhileStatement=base.DoWhileStatement=function(node,st,c){c(node.test,st,"Expression"),c(node.body,st,"Statement");};base.ForStatement=function(node,st,c){node.init&&c(node.init,st,"ForInit"),node.test&&c(node.test,st,"Expression"),node.update&&c(node.update,st,"Expression"),c(node.body,st,"Statement");};base.ForInStatement=base.ForOfStatement=function(node,st,c){c(node.left,st,"ForInit"),c(node.right,st,"Expression"),c(node.body,st,"Statement");};base.ForInit=function(node,st,c){node.type==="VariableDeclaration"?c(node,st):c(node,st,"Expression");};base.DebuggerStatement=ignore;base.FunctionDeclaration=function(node,st,c){return c(node,st,"Function")};base.VariableDeclaration=function(node,st,c){for(var i=0,list=node.declarations;i<list.length;i+=1){var decl=list[i];c(decl,st);}};base.VariableDeclarator=function(node,st,c){c(node.id,st,"Pattern"),node.init&&c(node.init,st,"Expression");};base.Function=function(node,st,c){node.id&&c(node.id,st,"Pattern");for(var i=0,list=node.params;i<list.length;i+=1){var param=list[i];c(param,st,"Pattern");}c(node.body,st,node.expression?"Expression":"Statement");};base.Pattern=function(node,st,c){node.type==="Identifier"?c(node,st,"VariablePattern"):node.type==="MemberExpression"?c(node,st,"MemberPattern"):c(node,st);};base.VariablePattern=ignore;base.MemberPattern=skipThrough;base.RestElement=function(node,st,c){return c(node.argument,st,"Pattern")};base.ArrayPattern=function(node,st,c){for(var i=0,list=node.elements;i<list.length;i+=1){var elt=list[i];elt&&c(elt,st,"Pattern");}};base.ObjectPattern=function(node,st,c){for(var i=0,list=node.properties;i<list.length;i+=1){var prop=list[i];prop.type==="Property"?(prop.computed&&c(prop.key,st,"Expression"),c(prop.value,st,"Pattern")):prop.type==="RestElement"&&c(prop.argument,st,"Pattern");}};base.Expression=skipThrough;base.ThisExpression=base.Super=base.MetaProperty=ignore;base.ArrayExpression=function(node,st,c){for(var i=0,list=node.elements;i<list.length;i+=1){var elt=list[i];elt&&c(elt,st,"Expression");}};base.ObjectExpression=function(node,st,c){for(var i=0,list=node.properties;i<list.length;i+=1){var prop=list[i];c(prop,st);}};base.FunctionExpression=base.ArrowFunctionExpression=base.FunctionDeclaration;base.SequenceExpression=function(node,st,c){for(var i=0,list=node.expressions;i<list.length;i+=1){var expr=list[i];c(expr,st,"Expression");}};base.TemplateLiteral=function(node,st,c){for(var i=0,list=node.quasis;i<list.length;i+=1){var quasi=list[i];c(quasi,st);}for(var i$1=0,list$1=node.expressions;i$1<list$1.length;i$1+=1){var expr=list$1[i$1];c(expr,st,"Expression");}};base.TemplateElement=ignore;base.UnaryExpression=base.UpdateExpression=function(node,st,c){c(node.argument,st,"Expression");};base.BinaryExpression=base.LogicalExpression=function(node,st,c){c(node.left,st,"Expression"),c(node.right,st,"Expression");};base.AssignmentExpression=base.AssignmentPattern=function(node,st,c){c(node.left,st,"Pattern"),c(node.right,st,"Expression");};base.ConditionalExpression=function(node,st,c){c(node.test,st,"Expression"),c(node.consequent,st,"Expression"),c(node.alternate,st,"Expression");};base.NewExpression=base.CallExpression=function(node,st,c){if(c(node.callee,st,"Expression"),node.arguments)for(var i=0,list=node.arguments;i<list.length;i+=1){var arg=list[i];c(arg,st,"Expression");}};base.MemberExpression=function(node,st,c){c(node.object,st,"Expression"),node.computed&&c(node.property,st,"Expression");};base.ExportNamedDeclaration=base.ExportDefaultDeclaration=function(node,st,c){node.declaration&&c(node.declaration,st,node.type==="ExportNamedDeclaration"||node.declaration.id?"Statement":"Expression"),node.source&&c(node.source,st,"Expression");};base.ExportAllDeclaration=function(node,st,c){node.exported&&c(node.exported,st),c(node.source,st,"Expression");};base.ImportDeclaration=function(node,st,c){for(var i=0,list=node.specifiers;i<list.length;i+=1){var spec=list[i];c(spec,st);}c(node.source,st,"Expression");};base.ImportExpression=function(node,st,c){c(node.source,st,"Expression");};base.ImportSpecifier=base.ImportDefaultSpecifier=base.ImportNamespaceSpecifier=base.Identifier=base.Literal=ignore;base.TaggedTemplateExpression=function(node,st,c){c(node.tag,st,"Expression"),c(node.quasi,st,"Expression");};base.ClassDeclaration=base.ClassExpression=function(node,st,c){return c(node,st,"Class")};base.Class=function(node,st,c){node.id&&c(node.id,st,"Pattern"),node.superClass&&c(node.superClass,st,"Expression"),c(node.body,st);};base.ClassBody=function(node,st,c){for(var i=0,list=node.body;i<list.length;i+=1){var elt=list[i];c(elt,st);}};base.MethodDefinition=base.Property=function(node,st,c){node.computed&&c(node.key,st,"Expression"),c(node.value,st,"Expression");};var ACORN_WALK_VISITORS={...base,JSXElement:()=>{}},acornParser=Parser.extend((0, import_acorn_jsx.default)());function extractIdentifierName(identifierNode){return identifierNode!=null?identifierNode.name:null}function filterAncestors(ancestors){return ancestors.filter(x=>x.type==="ObjectExpression"||x.type==="ArrayExpression")}function calculateNodeDepth(node){let depths=[];return ancestor(node,{ObjectExpression(_,ancestors){depths.push(filterAncestors(ancestors).length);},ArrayExpression(_,ancestors){depths.push(filterAncestors(ancestors).length);}},ACORN_WALK_VISITORS),Math.max(...depths)}function parseIdentifier(identifierNode){return {inferredType:{type:"Identifier",identifier:extractIdentifierName(identifierNode)},ast:identifierNode}}function parseLiteral(literalNode){return {inferredType:{type:"Literal"},ast:literalNode}}function parseFunction(funcNode){let innerJsxElementNode;simple(funcNode.body,{JSXElement(node){innerJsxElementNode=node;}},ACORN_WALK_VISITORS);let inferredType={type:innerJsxElementNode!=null?"Element":"Function",params:funcNode.params,hasParams:funcNode.params.length!==0},identifierName=extractIdentifierName(funcNode.id);return identifierName!=null&&(inferredType.identifier=identifierName),{inferredType,ast:funcNode}}function parseClass(classNode){let innerJsxElementNode;return simple(classNode.body,{JSXElement(node){innerJsxElementNode=node;}},ACORN_WALK_VISITORS),{inferredType:{type:innerJsxElementNode!=null?"Element":"Class",identifier:extractIdentifierName(classNode.id)},ast:classNode}}function parseJsxElement(jsxElementNode){let inferredType={type:"Element"},identifierName=extractIdentifierName(jsxElementNode.openingElement.name);return identifierName!=null&&(inferredType.identifier=identifierName),{inferredType,ast:jsxElementNode}}function parseCall(callNode){let identifierNode=callNode.callee.type==="MemberExpression"?callNode.callee.property:callNode.callee;return extractIdentifierName(identifierNode)==="shape"?parseObject(callNode.arguments[0]):null}function parseObject(objectNode){return {inferredType:{type:"Object",depth:calculateNodeDepth(objectNode)},ast:objectNode}}function parseArray(arrayNode){return {inferredType:{type:"Array",depth:calculateNodeDepth(arrayNode)},ast:arrayNode}}function parseExpression(expression){switch(expression.type){case"Identifier":return parseIdentifier(expression);case"Literal":return parseLiteral(expression);case"FunctionExpression":case"ArrowFunctionExpression":return parseFunction(expression);case"ClassExpression":return parseClass(expression);case"JSXElement":return parseJsxElement(expression);case"CallExpression":return parseCall(expression);case"ObjectExpression":return parseObject(expression);case"ArrayExpression":return parseArray(expression);default:return null}}function parse4(value){let ast=acornParser.parse(`(${value})`,{ecmaVersion:2020}),parsingResult={inferredType:{type:"Unknown"},ast};if(ast.body[0]!=null){let rootNode=ast.body[0];switch(rootNode.type){case"ExpressionStatement":{let expressionResult=parseExpression(rootNode.expression);expressionResult!=null&&(parsingResult=expressionResult);break}}}return parsingResult}function inspectValue(value){try{return {...parse4(value)}}catch{}return {inferredType:{type:"Unknown"}}}function generateArray({inferredType,ast}){let{depth}=inferredType;if(depth<=2){let compactArray=generateArrayCode(ast,!0);if(!(0,docs_tools/* isTooLongForDefaultValueSummary */.Sy)(compactArray))return (0,docs_tools/* createSummaryValue */.Ux)(compactArray)}return (0,docs_tools/* createSummaryValue */.Ux)(ARRAY_CAPTION,generateArrayCode(ast))}function generateObject({inferredType,ast}){let{depth}=inferredType;if(depth===1){let compactObject=generateObjectCode(ast,!0);if(!(0,docs_tools/* isTooLongForDefaultValueSummary */.Sy)(compactObject))return (0,docs_tools/* createSummaryValue */.Ux)(compactObject)}return (0,docs_tools/* createSummaryValue */.Ux)(OBJECT_CAPTION,generateObjectCode(ast))}function getPrettyFuncIdentifier(identifier,hasArguments){return hasArguments?`${identifier}( ... )`:`${identifier}()`}function getPrettyElementIdentifier(identifier){return `<${identifier} />`}function getPrettyIdentifier(inferredType){let{type,identifier}=inferredType;switch(type){case"Function":return getPrettyFuncIdentifier(identifier,inferredType.hasParams);case"Element":return getPrettyElementIdentifier(identifier);default:return identifier}}function generateFunc({inferredType,ast}){let{identifier}=inferredType;if(identifier!=null)return (0,docs_tools/* createSummaryValue */.Ux)(getPrettyIdentifier(inferredType),generateCode(ast));let prettyCaption=generateCode(ast,!0);return (0,docs_tools/* isTooLongForDefaultValueSummary */.Sy)(prettyCaption)?(0,docs_tools/* createSummaryValue */.Ux)(FUNCTION_CAPTION,generateCode(ast)):(0,docs_tools/* createSummaryValue */.Ux)(prettyCaption)}function generateElement(defaultValue,inspectionResult){let{inferredType}=inspectionResult,{identifier}=inferredType;if(identifier!=null&&!isHtmlTag(identifier)){let prettyIdentifier=getPrettyIdentifier(inferredType);return (0,docs_tools/* createSummaryValue */.Ux)(prettyIdentifier,defaultValue)}return (0,docs_tools/* isTooLongForDefaultValueSummary */.Sy)(defaultValue)?(0,docs_tools/* createSummaryValue */.Ux)(ELEMENT_CAPTION,defaultValue):(0,docs_tools/* createSummaryValue */.Ux)(defaultValue)}function createDefaultValue(defaultValue){try{let inspectionResult=inspectValue(defaultValue);switch(inspectionResult.inferredType.type){case"Object":return generateObject(inspectionResult);case"Function":return generateFunc(inspectionResult);case"Element":return generateElement(defaultValue,inspectionResult);case"Array":return generateArray(inspectionResult);default:return null}}catch(e){console.error(e);}return null}function isFunction(value){return typeof value=="function"}function isString(value){return typeof value=="string"||value instanceof String}function isPlainObject(object){if(typeof object!="object"||object==null)return !1;if(Object.getPrototypeOf(object)===null)return !0;if(Object.prototype.toString.call(object)!=="[object Object]"){let tag=object[Symbol.toStringTag];return tag==null||!Object.getOwnPropertyDescriptor(object,Symbol.toStringTag)?.writable?!1:object.toString()===`[object ${tag}]`}let proto=object;for(;Object.getPrototypeOf(proto)!==null;)proto=Object.getPrototypeOf(proto);return Object.getPrototypeOf(object)===proto}function isObject(o){return Object.prototype.toString.call(o)==="[object Object]"}function isPlainObject2(o){var ctor,prot;return isObject(o)===!1?!1:(ctor=o.constructor,ctor===void 0?!0:(prot=ctor.prototype,!(isObject(prot)===!1||prot.hasOwnProperty("isPrototypeOf")===!1)))}var import_pretty_print_object=(0,chunk_XP5HYGXS/* __toESM */.f1)(require_dist()),import_react_is=(0,chunk_XP5HYGXS/* __toESM */.f1)(require_react_is2());var spacer=function(times,tabStop){return times===0?"":new Array(times*tabStop).fill(" ").join("")};function _typeof(obj){"@babel/helpers - typeof";return _typeof=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(obj2){return typeof obj2}:function(obj2){return obj2&&typeof Symbol=="function"&&obj2.constructor===Symbol&&obj2!==Symbol.prototype?"symbol":typeof obj2},_typeof(obj)}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableSpread()}function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}function _iterableToArray(iter){if(typeof Symbol<"u"&&iter[Symbol.iterator]!=null||iter["@@iterator"]!=null)return Array.from(iter)}function _unsupportedIterableToArray(o,minLen){if(o){if(typeof o=="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor&&(n=o.constructor.name),n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){(len==null||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _nonIterableSpread(){throw new TypeError(`Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function safeSortObject(value,seen){return value===null||_typeof(value)!=="object"||value instanceof Date||value instanceof RegExp||react.isValidElement(value)?value:(seen.add(value),Array.isArray(value)?value.map(function(v){return safeSortObject(v,seen)}):Object.keys(value).sort().reduce(function(result,key){return key==="_owner"||(key==="current"||seen.has(value[key])?result[key]="[Circular]":result[key]=safeSortObject(value[key],seen)),result},{}))}function sortObject(value){return safeSortObject(value,new WeakSet)}var createStringTreeNode=function(value){return {type:"string",value}},createNumberTreeNode=function(value){return {type:"number",value}},createReactElementTreeNode=function(displayName,props,defaultProps,childrens){return {type:"ReactElement",displayName,props,defaultProps,childrens}},createReactFragmentTreeNode=function(key,childrens){return {type:"ReactFragment",key,childrens}},supportFragment=!!react.Fragment,getFunctionTypeName=function(functionType){return !functionType.name||functionType.name==="_default"?"No Display Name":functionType.name},getWrappedComponentDisplayName=function getWrappedComponentDisplayName2(Component){switch(!0){case!!Component.displayName:return Component.displayName;case Component.$$typeof===import_react_is.Memo:return getWrappedComponentDisplayName2(Component.type);case Component.$$typeof===import_react_is.ForwardRef:return getWrappedComponentDisplayName2(Component.render);default:return getFunctionTypeName(Component)}},getReactElementDisplayName=function(element){switch(!0){case typeof element.type=="string":return element.type;case typeof element.type=="function":return element.type.displayName?element.type.displayName:getFunctionTypeName(element.type);case(0, import_react_is.isForwardRef)(element):case(0, import_react_is.isMemo)(element):return getWrappedComponentDisplayName(element.type);case(0, import_react_is.isContextConsumer)(element):return "".concat(element.type._context.displayName||"Context",".Consumer");case(0, import_react_is.isContextProvider)(element):return "".concat(element.type._context.displayName||"Context",".Provider");case(0, import_react_is.isLazy)(element):return "Lazy";case(0, import_react_is.isProfiler)(element):return "Profiler";case(0, import_react_is.isStrictMode)(element):return "StrictMode";case(0, import_react_is.isSuspense)(element):return "Suspense";default:return "UnknownElementType"}},noChildren=function(propsValue,propName){return propName!=="children"},onlyMeaningfulChildren=function(children){return children!==!0&&children!==!1&&children!==null&&children!==""},filterProps=function(originalProps,cb){var filteredProps={};return Object.keys(originalProps).filter(function(key){return cb(originalProps[key],key)}).forEach(function(key){return filteredProps[key]=originalProps[key]}),filteredProps},parseReactElement=function parseReactElement2(element,options){var _options$displayName=options.displayName,displayNameFn=_options$displayName===void 0?getReactElementDisplayName:_options$displayName;if(typeof element=="string")return createStringTreeNode(element);if(typeof element=="number")return createNumberTreeNode(element);if(!react.isValidElement(element))throw new Error("react-element-to-jsx-string: Expected a React.Element, got `".concat(_typeof(element),"`"));var displayName=displayNameFn(element),props=filterProps(element.props,noChildren);element.ref!==null&&(props.ref=element.ref);var key=element.key;typeof key=="string"&&key.search(/^\\./)&&(props.key=key);var defaultProps=filterProps(element.type.defaultProps||{},noChildren),childrens=react.Children.toArray(element.props.children).filter(onlyMeaningfulChildren).map(function(child){return parseReactElement2(child,options)});return supportFragment&&element.type===react.Fragment?createReactFragmentTreeNode(key,childrens):createReactElementTreeNode(displayName,props,defaultProps,childrens)};function noRefCheck(){}var inlineFunction=function(fn){return fn.toString().split(`\n`).map(function(line){return line.trim()}).join("")};var defaultFunctionValue=inlineFunction,formatFunction=function(fn,options){var _options$functionValu=options.functionValue,functionValue=_options$functionValu===void 0?defaultFunctionValue:_options$functionValu,showFunctions=options.showFunctions;return functionValue(!showFunctions&&functionValue===defaultFunctionValue?noRefCheck:fn)},formatComplexDataStructure=function(value,inline,lvl,options){var normalizedValue=sortObject(value),stringifiedValue=(0, import_pretty_print_object.prettyPrint)(normalizedValue,{transform:function(currentObj,prop,originalResult){var currentValue=currentObj[prop];return currentValue&&(0,react.isValidElement)(currentValue)?formatTreeNode(parseReactElement(currentValue,options),!0,lvl,options):typeof currentValue=="function"?formatFunction(currentValue,options):originalResult}});return inline?stringifiedValue.replace(/\\s+/g," ").replace(/{ /g,"{").replace(/ }/g,"}").replace(/\\[ /g,"[").replace(/ ]/g,"]"):stringifiedValue.replace(/\\t/g,spacer(1,options.tabStop)).replace(/\\n([^$])/g,`\n`.concat(spacer(lvl+1,options.tabStop),"$1"))},escape$1=function(s){return s.replace(/"/g,"&quot;")},formatPropValue=function(propValue,inline,lvl,options){if(typeof propValue=="number")return "{".concat(String(propValue),"}");if(typeof propValue=="string")return \'"\'.concat(escape$1(propValue),\'"\');if(_typeof(propValue)==="symbol"){var symbolDescription=propValue.valueOf().toString().replace(/Symbol\\((.*)\\)/,"$1");return symbolDescription?"{Symbol(\'".concat(symbolDescription,"\')}"):"{Symbol()}"}return typeof propValue=="function"?"{".concat(formatFunction(propValue,options),"}"):(0,react.isValidElement)(propValue)?"{".concat(formatTreeNode(parseReactElement(propValue,options),!0,lvl,options),"}"):propValue instanceof Date?isNaN(propValue.valueOf())?"{new Date(NaN)}":\'{new Date("\'.concat(propValue.toISOString(),\'")}\'):isPlainObject2(propValue)||Array.isArray(propValue)?"{".concat(formatComplexDataStructure(propValue,inline,lvl,options),"}"):"{".concat(String(propValue),"}")},formatProp=function(name,hasValue,value,hasDefaultValue,defaultValue,inline,lvl,options){if(!hasValue&&!hasDefaultValue)throw new Error(\'The prop "\'.concat(name,\'" has no value and no default: could not be formatted\'));var usedValue=hasValue?value:defaultValue,useBooleanShorthandSyntax=options.useBooleanShorthandSyntax,tabStop=options.tabStop,formattedPropValue=formatPropValue(usedValue,inline,lvl,options),attributeFormattedInline=" ",attributeFormattedMultiline=`\n`.concat(spacer(lvl+1,tabStop)),isMultilineAttribute=formattedPropValue.includes(`\n`);return useBooleanShorthandSyntax&&formattedPropValue==="{false}"&&!hasDefaultValue?(attributeFormattedInline="",attributeFormattedMultiline=""):useBooleanShorthandSyntax&&formattedPropValue==="{true}"?(attributeFormattedInline+="".concat(name),attributeFormattedMultiline+="".concat(name)):(attributeFormattedInline+="".concat(name,"=").concat(formattedPropValue),attributeFormattedMultiline+="".concat(name,"=").concat(formattedPropValue)),{attributeFormattedInline,attributeFormattedMultiline,isMultilineAttribute}},mergeSiblingPlainStringChildrenReducer=function(previousNodes,currentNode){var nodes=previousNodes.slice(0,previousNodes.length>0?previousNodes.length-1:0),previousNode=previousNodes[previousNodes.length-1];return previousNode&&(currentNode.type==="string"||currentNode.type==="number")&&(previousNode.type==="string"||previousNode.type==="number")?nodes.push(createStringTreeNode(String(previousNode.value)+String(currentNode.value))):(previousNode&&nodes.push(previousNode),nodes.push(currentNode)),nodes},isKeyOrRefProps=function(propName){return ["key","ref"].includes(propName)},sortPropsByNames=function(shouldSortUserProps){return function(props){var haveKeyProp=props.includes("key"),haveRefProp=props.includes("ref"),userPropsOnly=props.filter(function(oneProp){return !isKeyOrRefProps(oneProp)}),sortedProps=_toConsumableArray(shouldSortUserProps?userPropsOnly.sort():userPropsOnly);return haveRefProp&&sortedProps.unshift("ref"),haveKeyProp&&sortedProps.unshift("key"),sortedProps}};function createPropFilter(props,filter){return Array.isArray(filter)?function(key){return filter.indexOf(key)===-1}:function(key){return filter(props[key],key)}}var compensateMultilineStringElementIndentation=function(element,formattedElement,inline,lvl,options){var tabStop=options.tabStop;return element.type==="string"?formattedElement.split(`\n`).map(function(line,offset2){return offset2===0?line:"".concat(spacer(lvl,tabStop)).concat(line)}).join(`\n`):formattedElement},formatOneChildren=function(inline,lvl,options){return function(element){return compensateMultilineStringElementIndentation(element,formatTreeNode(element,inline,lvl,options),inline,lvl,options)}},onlyPropsWithOriginalValue=function(defaultProps,props){return function(propName){var haveDefaultValue=Object.keys(defaultProps).includes(propName);return !haveDefaultValue||haveDefaultValue&&defaultProps[propName]!==props[propName]}},isInlineAttributeTooLong=function(attributes,inlineAttributeString,lvl,tabStop,maxInlineAttributesLineLength){return maxInlineAttributesLineLength?spacer(lvl,tabStop).length+inlineAttributeString.length>maxInlineAttributesLineLength:attributes.length>1},shouldRenderMultilineAttr=function(attributes,inlineAttributeString,containsMultilineAttr,inline,lvl,tabStop,maxInlineAttributesLineLength){return (isInlineAttributeTooLong(attributes,inlineAttributeString,lvl,tabStop,maxInlineAttributesLineLength)||containsMultilineAttr)&&!inline},formatReactElementNode=function(node,inline,lvl,options){var type=node.type,_node$displayName=node.displayName,displayName=_node$displayName===void 0?"":_node$displayName,childrens=node.childrens,_node$props=node.props,props=_node$props===void 0?{}:_node$props,_node$defaultProps=node.defaultProps,defaultProps=_node$defaultProps===void 0?{}:_node$defaultProps;if(type!=="ReactElement")throw new Error(\'The "formatReactElementNode" function could only format node of type "ReactElement". Given:  \'.concat(type));var filterProps3=options.filterProps,maxInlineAttributesLineLength=options.maxInlineAttributesLineLength,showDefaultProps=options.showDefaultProps,sortProps=options.sortProps,tabStop=options.tabStop,out="<".concat(displayName),outInlineAttr=out,outMultilineAttr=out,containsMultilineAttr=!1,visibleAttributeNames=[],propFilter=createPropFilter(props,filterProps3);Object.keys(props).filter(propFilter).filter(onlyPropsWithOriginalValue(defaultProps,props)).forEach(function(propName){return visibleAttributeNames.push(propName)}),Object.keys(defaultProps).filter(propFilter).filter(function(){return showDefaultProps}).filter(function(defaultPropName){return !visibleAttributeNames.includes(defaultPropName)}).forEach(function(defaultPropName){return visibleAttributeNames.push(defaultPropName)});var attributes=sortPropsByNames(sortProps)(visibleAttributeNames);if(attributes.forEach(function(attributeName){var _formatProp=formatProp(attributeName,Object.keys(props).includes(attributeName),props[attributeName],Object.keys(defaultProps).includes(attributeName),defaultProps[attributeName],inline,lvl,options),attributeFormattedInline=_formatProp.attributeFormattedInline,attributeFormattedMultiline=_formatProp.attributeFormattedMultiline,isMultilineAttribute=_formatProp.isMultilineAttribute;isMultilineAttribute&&(containsMultilineAttr=!0),outInlineAttr+=attributeFormattedInline,outMultilineAttr+=attributeFormattedMultiline;}),outMultilineAttr+=`\n`.concat(spacer(lvl,tabStop)),shouldRenderMultilineAttr(attributes,outInlineAttr,containsMultilineAttr,inline,lvl,tabStop,maxInlineAttributesLineLength)?out=outMultilineAttr:out=outInlineAttr,childrens&&childrens.length>0){var newLvl=lvl+1;out+=">",inline||(out+=`\n`,out+=spacer(newLvl,tabStop)),out+=childrens.reduce(mergeSiblingPlainStringChildrenReducer,[]).map(formatOneChildren(inline,newLvl,options)).join(inline?"":`\n`.concat(spacer(newLvl,tabStop))),inline||(out+=`\n`,out+=spacer(newLvl-1,tabStop)),out+="</".concat(displayName,">");}else isInlineAttributeTooLong(attributes,outInlineAttr,lvl,tabStop,maxInlineAttributesLineLength)||(out+=" "),out+="/>";return out},REACT_FRAGMENT_TAG_NAME_SHORT_SYNTAX="",REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX="React.Fragment",toReactElementTreeNode=function(displayName,key,childrens){var props={};return key&&(props={key}),{type:"ReactElement",displayName,props,defaultProps:{},childrens}},isKeyedFragment=function(_ref){var key=_ref.key;return !!key},hasNoChildren=function(_ref2){var childrens=_ref2.childrens;return childrens.length===0},formatReactFragmentNode=function(node,inline,lvl,options){var type=node.type,key=node.key,childrens=node.childrens;if(type!=="ReactFragment")throw new Error(\'The "formatReactFragmentNode" function could only format node of type "ReactFragment". Given: \'.concat(type));var useFragmentShortSyntax=options.useFragmentShortSyntax,displayName;return useFragmentShortSyntax?hasNoChildren(node)||isKeyedFragment(node)?displayName=REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX:displayName=REACT_FRAGMENT_TAG_NAME_SHORT_SYNTAX:displayName=REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX,formatReactElementNode(toReactElementTreeNode(displayName,key,childrens),inline,lvl,options)},jsxStopChars=["<",">","{","}"],shouldBeEscaped=function(s){return jsxStopChars.some(function(jsxStopChar){return s.includes(jsxStopChar)})},escape2=function(s){return shouldBeEscaped(s)?"{`".concat(s,"`}"):s},preserveTrailingSpace=function(s){var result=s;return result.endsWith(" ")&&(result=result.replace(/^(.*?)(\\s+)$/,"$1{\'$2\'}")),result.startsWith(" ")&&(result=result.replace(/^(\\s+)(.*)$/,"{\'$1\'}$2")),result},formatTreeNode=function(node,inline,lvl,options){if(node.type==="number")return String(node.value);if(node.type==="string")return node.value?"".concat(preserveTrailingSpace(escape2(String(node.value)))):"";if(node.type==="ReactElement")return formatReactElementNode(node,inline,lvl,options);if(node.type==="ReactFragment")return formatReactFragmentNode(node,inline,lvl,options);throw new TypeError(\'Unknow format type "\'.concat(node.type,\'"\'))},formatTree=function(node,options){return formatTreeNode(node,!1,0,options)},reactElementToJsxString=function(element){var _ref=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},_ref$filterProps=_ref.filterProps,filterProps3=_ref$filterProps===void 0?[]:_ref$filterProps,_ref$showDefaultProps=_ref.showDefaultProps,showDefaultProps=_ref$showDefaultProps===void 0?!0:_ref$showDefaultProps,_ref$showFunctions=_ref.showFunctions,showFunctions=_ref$showFunctions===void 0?!1:_ref$showFunctions,functionValue=_ref.functionValue,_ref$tabStop=_ref.tabStop,tabStop=_ref$tabStop===void 0?2:_ref$tabStop,_ref$useBooleanShorth=_ref.useBooleanShorthandSyntax,useBooleanShorthandSyntax=_ref$useBooleanShorth===void 0?!0:_ref$useBooleanShorth,_ref$useFragmentShort=_ref.useFragmentShortSyntax,useFragmentShortSyntax=_ref$useFragmentShort===void 0?!0:_ref$useFragmentShort,_ref$sortProps=_ref.sortProps,sortProps=_ref$sortProps===void 0?!0:_ref$sortProps,maxInlineAttributesLineLength=_ref.maxInlineAttributesLineLength,displayName=_ref.displayName;if(!element)throw new Error("react-element-to-jsx-string: Expected a ReactElement");var options={filterProps:filterProps3,showDefaultProps,showFunctions,functionValue,tabStop,useBooleanShorthandSyntax,useFragmentShortSyntax,sortProps,maxInlineAttributesLineLength,displayName};return formatTree(parseReactElement(element,options),options)};var reactElementToJSXString=reactElementToJsxString;function isReactElement(element){return element.$$typeof!=null}function extractFunctionName(func,propName){let{name}=func;return name!==""&&name!=="anonymous"&&name!==propName?name:null}var stringResolver=rawDefaultProp=>(0,docs_tools/* createSummaryValue */.Ux)(JSON.stringify(rawDefaultProp));function generateReactObject(rawDefaultProp){let{type}=rawDefaultProp,{displayName}=type,jsx2=reactElementToJSXString(rawDefaultProp,{});if(displayName!=null){let prettyIdentifier=getPrettyElementIdentifier(displayName);return (0,docs_tools/* createSummaryValue */.Ux)(prettyIdentifier,jsx2)}if(isString(type)&&isHtmlTag(type)){let jsxSummary=reactElementToJSXString(rawDefaultProp,{tabStop:0}).replace(/\\r?\\n|\\r/g,"");if(!(0,docs_tools/* isTooLongForDefaultValueSummary */.Sy)(jsxSummary))return (0,docs_tools/* createSummaryValue */.Ux)(jsxSummary)}return (0,docs_tools/* createSummaryValue */.Ux)(ELEMENT_CAPTION,jsx2)}var objectResolver=rawDefaultProp=>{if(isReactElement(rawDefaultProp)&&rawDefaultProp.type!=null)return generateReactObject(rawDefaultProp);if(isPlainObject(rawDefaultProp)){let inspectionResult=inspectValue(JSON.stringify(rawDefaultProp));return generateObject(inspectionResult)}if(Array.isArray(rawDefaultProp)){let inspectionResult=inspectValue(JSON.stringify(rawDefaultProp));return generateArray(inspectionResult)}return (0,docs_tools/* createSummaryValue */.Ux)(OBJECT_CAPTION)},functionResolver=(rawDefaultProp,propDef)=>{let isElement=!1,inspectionResult;if(isFunction(rawDefaultProp.render))isElement=!0;else if(rawDefaultProp.prototype!=null&&isFunction(rawDefaultProp.prototype.render))isElement=!0;else {let innerElement;try{inspectionResult=inspectValue(rawDefaultProp.toString());let{hasParams,params}=inspectionResult.inferredType;hasParams?params.length===1&&params[0].type==="ObjectPattern"&&(innerElement=rawDefaultProp({})):innerElement=rawDefaultProp(),innerElement!=null&&isReactElement(innerElement)&&(isElement=!0);}catch{}}let funcName=extractFunctionName(rawDefaultProp,propDef.name);if(funcName!=null){if(isElement)return (0,docs_tools/* createSummaryValue */.Ux)(getPrettyElementIdentifier(funcName));inspectionResult!=null&&(inspectionResult=inspectValue(rawDefaultProp.toString()));let{hasParams}=inspectionResult.inferredType;return (0,docs_tools/* createSummaryValue */.Ux)(getPrettyFuncIdentifier(funcName,hasParams))}return (0,docs_tools/* createSummaryValue */.Ux)(isElement?ELEMENT_CAPTION:FUNCTION_CAPTION)},defaultResolver=rawDefaultProp=>(0,docs_tools/* createSummaryValue */.Ux)(rawDefaultProp.toString()),DEFAULT_TYPE_RESOLVERS={string:stringResolver,object:objectResolver,function:functionResolver,default:defaultResolver};function createTypeResolvers(customResolvers={}){return {...DEFAULT_TYPE_RESOLVERS,...customResolvers}}function createDefaultValueFromRawDefaultProp(rawDefaultProp,propDef,typeResolvers=DEFAULT_TYPE_RESOLVERS){try{switch(typeof rawDefaultProp){case"string":return typeResolvers.string(rawDefaultProp,propDef);case"object":return typeResolvers.object(rawDefaultProp,propDef);case"function":return typeResolvers.function(rawDefaultProp,propDef);default:return typeResolvers.default(rawDefaultProp,propDef)}}catch(e){console.error(e);}return null}function generateFuncSignature(params,returns){let hasParams=params!=null,hasReturns=returns!=null;if(!hasParams&&!hasReturns)return "";let funcParts=[];if(hasParams){let funcParams=params.map(x=>{let prettyName=x.getPrettyName(),typeName=x.getTypeName();return typeName!=null?`${prettyName}: ${typeName}`:prettyName});funcParts.push(`(${funcParams.join(", ")})`);}else funcParts.push("()");return hasReturns&&funcParts.push(`=> ${returns.getTypeName()}`),funcParts.join(" ")}function generateShortFuncSignature(params,returns){let hasParams=params!=null,hasReturns=returns!=null;if(!hasParams&&!hasReturns)return "";let funcParts=[];return hasParams?funcParts.push("( ... )"):funcParts.push("()"),hasReturns&&funcParts.push(`=> ${returns.getTypeName()}`),funcParts.join(" ")}function toMultilineSignature(signature){return signature.replace(/,/g,`,\\r\n`)}var MAX_FUNC_LENGTH=150;function createTypeDef({name,short,compact,full,inferredType}){return {name,short,compact,full:full??short,inferredType}}function cleanPropTypes(value){return value.replace(/PropTypes./g,"").replace(/.isRequired/g,"")}function splitIntoLines(value){return value.split(/\\r?\\n/)}function prettyObject(ast,compact=!1){return cleanPropTypes(generateObjectCode(ast,compact))}function prettyArray(ast,compact=!1){return cleanPropTypes(generateCode(ast,compact))}function getCaptionForInspectionType(type){switch(type){case"Object":return OBJECT_CAPTION;case"Array":return ARRAY_CAPTION;case"Class":return CLASS_CAPTION;case"Function":return FUNCTION_CAPTION;case"Element":return ELEMENT_CAPTION;default:return CUSTOM_CAPTION}}function generateTypeFromString(value,originalTypeName){let{inferredType,ast}=inspectValue(value),{type}=inferredType,short,compact,full;switch(type){case"Identifier":case"Literal":short=value,compact=value;break;case"Object":{let{depth}=inferredType;short=OBJECT_CAPTION,compact=depth===1?prettyObject(ast,!0):null,full=prettyObject(ast);break}case"Element":{let{identifier}=inferredType;short=identifier!=null&&!isHtmlTag(identifier)?identifier:ELEMENT_CAPTION,compact=splitIntoLines(value).length===1?value:null,full=value;break}case"Array":{let{depth}=inferredType;short=ARRAY_CAPTION,compact=depth<=2?prettyArray(ast,!0):null,full=prettyArray(ast);break}default:short=getCaptionForInspectionType(type),compact=splitIntoLines(value).length===1?value:null,full=value;break}return createTypeDef({name:originalTypeName,short,compact,full,inferredType:type})}function generateCustom({raw}){return raw!=null?generateTypeFromString(raw,"custom"):createTypeDef({name:"custom",short:CUSTOM_CAPTION,compact:CUSTOM_CAPTION})}function generateFunc2(extractedProp){let{jsDocTags}=extractedProp;return jsDocTags!=null&&(jsDocTags.params!=null||jsDocTags.returns!=null)?createTypeDef({name:"func",short:generateShortFuncSignature(jsDocTags.params,jsDocTags.returns),compact:null,full:generateFuncSignature(jsDocTags.params,jsDocTags.returns)}):createTypeDef({name:"func",short:FUNCTION_CAPTION,compact:FUNCTION_CAPTION})}function generateShape(type,extractedProp){let fields=Object.keys(type.value).map(key=>`${key}: ${generateType(type.value[key],extractedProp).full}`).join(", "),{inferredType,ast}=inspectValue(`{ ${fields} }`),{depth}=inferredType;return createTypeDef({name:"shape",short:OBJECT_CAPTION,compact:depth===1&&ast?prettyObject(ast,!0):null,full:ast?prettyObject(ast):null})}function objectOf(of){return `objectOf(${of})`}function generateObjectOf(type,extractedProp){let{short,compact,full}=generateType(type.value,extractedProp);return createTypeDef({name:"objectOf",short:objectOf(short),compact:compact!=null?objectOf(compact):null,full:full&&objectOf(full)})}function generateUnion(type,extractedProp){if(Array.isArray(type.value)){let values=type.value.reduce((acc,v)=>{let{short,compact,full}=generateType(v,extractedProp);return acc.short.push(short),acc.compact.push(compact),acc.full.push(full),acc},{short:[],compact:[],full:[]});return createTypeDef({name:"union",short:values.short.join(" | "),compact:values.compact.every(x=>x!=null)?values.compact.join(" | "):null,full:values.full.join(" | ")})}return createTypeDef({name:"union",short:type.value,compact:null})}function generateEnumValue({value,computed}){return computed?generateTypeFromString(value,"enumvalue"):createTypeDef({name:"enumvalue",short:value,compact:value})}function generateEnum(type){if(Array.isArray(type.value)){let values=type.value.reduce((acc,v)=>{let{short,compact,full}=generateEnumValue(v);return acc.short.push(short),acc.compact.push(compact),acc.full.push(full),acc},{short:[],compact:[],full:[]});return createTypeDef({name:"enum",short:values.short.join(" | "),compact:values.compact.every(x=>x!=null)?values.compact.join(" | "):null,full:values.full.join(" | ")})}return createTypeDef({name:"enum",short:type.value,compact:type.value})}function braceAfter(of){return `${of}[]`}function braceAround(of){return `[${of}]`}function createArrayOfObjectTypeDef(short,compact,full){return createTypeDef({name:"arrayOf",short:braceAfter(short),compact:compact!=null?braceAround(compact):null,full:full&&braceAround(full)})}function generateArray2(type,extractedProp){let{name,short,compact,full,inferredType}=generateType(type.value,extractedProp);if(name==="custom"){if(inferredType==="Object")return createArrayOfObjectTypeDef(short,compact,full)}else if(name==="shape")return createArrayOfObjectTypeDef(short,compact,full);return createTypeDef({name:"arrayOf",short:braceAfter(short),compact:braceAfter(short)})}function generateType(type,extractedProp){try{switch(type.name){case"custom":return generateCustom(type);case"func":return generateFunc2(extractedProp);case"shape":return generateShape(type,extractedProp);case"instanceOf":return createTypeDef({name:"instanceOf",short:type.value,compact:type.value});case"objectOf":return generateObjectOf(type,extractedProp);case"union":return generateUnion(type,extractedProp);case"enum":return generateEnum(type);case"arrayOf":return generateArray2(type,extractedProp);default:return createTypeDef({name:type.name,short:type.name,compact:type.name})}}catch(e){console.error(e);}return createTypeDef({name:"unknown",short:"unknown",compact:"unknown"})}function createType(extractedProp){let{type}=extractedProp.docgenInfo;if(type==null)return null;try{switch(type.name){case"custom":case"shape":case"instanceOf":case"objectOf":case"union":case"enum":case"arrayOf":{let{short,compact,full}=generateType(type,extractedProp);return compact!=null&&!(0,docs_tools/* isTooLongForTypeSummary */.i3)(compact)?(0,docs_tools/* createSummaryValue */.Ux)(compact):full?(0,docs_tools/* createSummaryValue */.Ux)(short,full):(0,docs_tools/* createSummaryValue */.Ux)(short)}case"func":{let{short,full}=generateType(type,extractedProp),summary=short,detail;return full&&full.length<MAX_FUNC_LENGTH?summary=full:full&&(detail=toMultilineSignature(full)),(0,docs_tools/* createSummaryValue */.Ux)(summary,detail)}default:return null}}catch(e){console.error(e);}return null}var funcResolver=(rawDefaultProp,{name,type})=>{let isElement=type?.summary==="element"||type?.summary==="elementType",funcName=extractFunctionName(rawDefaultProp,name);if(funcName!=null){if(isElement)return (0,docs_tools/* createSummaryValue */.Ux)(getPrettyElementIdentifier(funcName));let{hasParams}=inspectValue(rawDefaultProp.toString()).inferredType;return (0,docs_tools/* createSummaryValue */.Ux)(getPrettyFuncIdentifier(funcName,hasParams))}return (0,docs_tools/* createSummaryValue */.Ux)(isElement?ELEMENT_CAPTION:FUNCTION_CAPTION)},rawDefaultPropTypeResolvers=createTypeResolvers({function:funcResolver});function keepOriginalDefinitionOrder(extractedProps,component){let{propTypes}=component;return propTypes!=null?Object.keys(propTypes).map(x=>extractedProps.find(y=>y.name===x)).filter(Boolean):extractedProps}function enhancePropTypesProp(extractedProp,rawDefaultProp){let{propDef}=extractedProp,newtype=createType(extractedProp);newtype!=null&&(propDef.type=newtype);let{defaultValue}=extractedProp.docgenInfo;if(defaultValue!=null&&defaultValue.value!=null){let newDefaultValue=createDefaultValue(defaultValue.value);newDefaultValue!=null&&(propDef.defaultValue=newDefaultValue);}else if(rawDefaultProp!=null){let newDefaultValue=createDefaultValueFromRawDefaultProp(rawDefaultProp,propDef,rawDefaultPropTypeResolvers);newDefaultValue!=null&&(propDef.defaultValue=newDefaultValue);}return propDef}function enhancePropTypesProps(extractedProps,component){let rawDefaultProps=component.defaultProps!=null?component.defaultProps:{},enhancedProps=extractedProps.map(x=>enhancePropTypesProp(x,rawDefaultProps[x.propDef.name]));return keepOriginalDefinitionOrder(enhancedProps,component)}function enhanceTypeScriptProp(extractedProp,rawDefaultProp){let{propDef}=extractedProp,{defaultValue}=extractedProp.docgenInfo;if(defaultValue!=null&&defaultValue.value!=null){let newDefaultValue=createDefaultValue(defaultValue.value);newDefaultValue!=null&&(propDef.defaultValue=newDefaultValue);}else if(rawDefaultProp!=null){let newDefaultValue=createDefaultValueFromRawDefaultProp(rawDefaultProp,propDef);newDefaultValue!=null&&(propDef.defaultValue=newDefaultValue);}return propDef}function enhanceTypeScriptProps(extractedProps){return extractedProps.map(prop=>enhanceTypeScriptProp(prop))}var propTypesMap=new Map;Object.keys(import_prop_types.default).forEach(typeName=>{let type=import_prop_types.default[typeName];propTypesMap.set(type,typeName),propTypesMap.set(type.isRequired,typeName);});function getPropDefs(component,section){let processedComponent=component;!(0,docs_tools/* hasDocgen */.TQ)(component)&&!component.propTypes&&isMemo(component)&&(processedComponent=component.type);let extractedProps=(0,docs_tools/* extractComponentProps */.p6)(processedComponent,section);if(extractedProps.length===0)return [];switch(extractedProps[0].typeSystem){case docs_tools/* TypeSystem */.YF.JAVASCRIPT:return enhancePropTypesProps(extractedProps,component);case docs_tools/* TypeSystem */.YF.TYPESCRIPT:return enhanceTypeScriptProps(extractedProps);default:return extractedProps.map(x=>x.propDef)}}var extractProps=component=>({rows:getPropDefs(component,"props")});var extractArgTypes=component=>{if(component){let{rows}=extractProps(component);if(rows)return rows.reduce((acc,row)=>{let{name,description,type,sbType,defaultValue:defaultSummary,jsDocTags,required}=row;return acc[name]={name,description,type:{required,...sbType},table:{type:type??void 0,jsDocTags,defaultValue:defaultSummary??void 0}},acc},{})}return null};var reactElementToJSXString2=reactElementToJsxString,toPascalCase=str=>str.charAt(0).toUpperCase()+str.slice(1),getReactSymbolName=elementType=>(elementType.$$typeof||elementType).toString().replace(/^Symbol\\((.*)\\)$/,"$1").split(".").map(segment=>segment.split("_").map(toPascalCase).join("")).join(".");function simplifyNodeForStringify(node){if((0,react.isValidElement)(node)){let props=Object.keys(node.props).reduce((acc,cur)=>(acc[cur]=simplifyNodeForStringify(node.props[cur]),acc),{});return {...node,props,_owner:null}}return Array.isArray(node)?node.map(simplifyNodeForStringify):node}var renderJsx=(code,options)=>{if(typeof code>"u")return external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn("Too many skip or undefined component"),null;let renderedJSX=code,Type=renderedJSX.type;for(let i=0;i<options?.skip;i+=1){if(typeof renderedJSX>"u")return external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn("Cannot skip undefined element"),null;if(react.Children.count(renderedJSX)>1)return external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn("Trying to skip an array of elements"),null;typeof renderedJSX.props.children>"u"?(external_STORYBOOK_MODULE_CLIENT_LOGGER_.logger.warn("Not enough children to skip elements."),typeof renderedJSX.type=="function"&&renderedJSX.type.name===""&&(renderedJSX=react.createElement(Type,{...renderedJSX.props}))):typeof renderedJSX.props.children=="function"?renderedJSX=renderedJSX.props.children():renderedJSX=renderedJSX.props.children;}let displayNameDefaults;typeof options?.displayName=="string"?displayNameDefaults={showFunctions:!0,displayName:()=>options.displayName}:displayNameDefaults={displayName:el=>el.type.displayName?el.type.displayName:(0,docs_tools/* getDocgenSection */.UO)(el.type,"displayName")?(0,docs_tools/* getDocgenSection */.UO)(el.type,"displayName"):el.type.render?.displayName?el.type.render.displayName:typeof el.type=="symbol"||el.type.$$typeof&&typeof el.type.$$typeof=="symbol"?getReactSymbolName(el.type):el.type.name&&el.type.name!=="_default"?el.type.name:typeof el.type=="function"?"No Display Name":isForwardRef(el.type)?el.type.render.name:isMemo(el.type)?el.type.type.name:el.type};let opts={...displayNameDefaults,...{filterProps:(value,key)=>value!==void 0},...options};return react.Children.map(code,c=>{let child=typeof c=="number"?c.toString():c,string=(typeof reactElementToJSXString2=="function"?reactElementToJSXString2:reactElementToJSXString2.default)(simplifyNodeForStringify(child),opts);if(string.indexOf("&quot;")>-1){let matches=string.match(/\\S+=\\\\"([^"]*)\\\\"/g);matches&&matches.forEach(match=>{string=string.replace(match,match.replace(/&quot;/g,"\'"));});}return string}).join(`\n`).replace(/function\\s+noRefCheck\\(\\)\\s*\\{\\}/g,"() => {}")},defaultOpts={skip:0,showFunctions:!1,enableBeautify:!0,showDefaultProps:!1},skipJsxRender=context=>{let sourceParams=context?.parameters.docs?.source,isArgsStory=context?.parameters.__isArgsStory;return sourceParams?.type===docs_tools/* SourceType */.Y1.DYNAMIC?!1:!isArgsStory||sourceParams?.code||sourceParams?.type===docs_tools/* SourceType */.Y1.CODE},isMdx=node=>node.type?.displayName==="MDXCreateElement"&&!!node.props?.mdxType,mdxToJsx=node=>{if(!isMdx(node))return node;let{mdxType,originalType,children,...rest}=node.props,jsxChildren=[];return children&&(jsxChildren=(Array.isArray(children)?children:[children]).map(mdxToJsx)),(0,react.createElement)(originalType,rest,...jsxChildren)},jsxDecorator=(storyFn,context)=>{let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),skip=skipJsxRender(context),jsx2="";(0,external_STORYBOOK_MODULE_PREVIEW_API_.useEffect)(()=>{if(!skip){let{id,unmappedArgs}=context;channel.emit(docs_tools/* SNIPPET_RENDERED */.Op,{id,source:jsx2,args:unmappedArgs});}});let story=storyFn();if(skip)return story;let options={...defaultOpts,...context?.parameters.jsx||{}},storyJsx=context?.parameters.docs?.source?.excludeDecorators?context.originalStoryFn(context.args,context):story,sourceJsx=mdxToJsx(storyJsx),rendered=renderJsx(sourceJsx,options);return rendered&&(jsx2=rendered),story};var applyDecorators=(storyFn,decorators2)=>{let jsxIndex=decorators2.findIndex(d=>d.originalFn===jsxDecorator),reorderedDecorators=jsxIndex===-1?decorators2:[...decorators2.splice(jsxIndex,1),...decorators2];return (0,external_STORYBOOK_MODULE_PREVIEW_API_.defaultDecorateStory)(storyFn,reorderedDecorators)};var parameters={docs:{story:{inline:!0},extractArgTypes,extractComponentDescription: docs_tools/* extractComponentDescription */.rl}},decorators=[jsxDecorator],argTypesEnhancers=[docs_tools/* enhanceArgTypes */.C2];\n\n\n\n;// ../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/entry-preview-docs.mjs\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srcmVhY3RAOC42LjEyX0BzdG9yeWJvb2srdGVzdEA4LjYuMTJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM19fX3JlYWN0LV8wZGNlMjk5MGZkOTFhOTU4MmIzOTg1YTY3ODU5OTdjYS9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9yZWFjdC9kaXN0L2VudHJ5LXByZXZpZXctZG9jcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwRjtBQUMrSztBQUN6TztBQUNpRDtBQUN2QjtBQUMrQjs7QUFFekYsb0NBQW9DLHFDQUFVLEVBQUUsc0VBQXNFLGd2QkFBZ3ZCLGNBQWMsaUNBQWlDLGlCQUFpQixVQUFVLDBCQUEwQixtREFBbUQsa0NBQWtDLDRDQUE0QyxrQkFBa0Isa0JBQWtCLGNBQWMsZ0JBQWdCLG9CQUFvQix5QkFBeUIsMEJBQTBCLDBCQUEwQixrQkFBa0IscUJBQXFCLG1CQUFtQixlQUFlLGVBQWUsaUJBQWlCLG1CQUFtQixxQkFBcUIsbUJBQW1CLGdDQUFnQyx1QkFBdUIsMkJBQTJCLHNDQUFzQyxpQkFBaUIsc0NBQXNDLGlCQUFpQiw4QkFBOEIscURBQXFELGlDQUFpQyxpQkFBaUIsK0JBQStCLGlCQUFpQiwyQkFBMkIsaUJBQWlCLDJCQUEyQixpQkFBaUIsNkJBQTZCLGlCQUFpQiwrQkFBK0IsaUJBQWlCLGlDQUFpQyxpQkFBaUIsK0JBQStCLGlCQUFpQix1Q0FBdUMsMlFBQTJRLG1CQUFtQixFQUFFLGlDQUFpQyxxQ0FBVSxFQUFFLG1FQUFtRSxNQUFtQyxFQUFFLENBQXkrSixHQUFHLEVBQUUscUJBQXFCLHFDQUFVLEVBQUUsdURBQXVELEtBQW1DLGtEQUFrRCxDQUE2QyxHQUFHLEVBQUUsMEJBQTBCLHFDQUFVLEVBQUUsNERBQTRELDhKQUE4Six1QkFBdUIsMEZBQTBGLG1CQUFtQiwyQkFBMkIsSUFBSSw0QkFBNEIsNEJBQTRCLHNFQUFzRSxnQkFBZ0IsS0FBSyxLQUFLLHdDQUF3Qyw2REFBNkQsZ0JBQWdCLEVBQUUsNENBQTRDLGFBQWEsaUVBQWlFLHNCQUFzQiw4QkFBOEIsMkNBQTJDLE1BQU0sV0FBVyx1RUFBdUUsNkNBQTZDLG1CQUFtQixLQUFLLDBCQUEwQix3RUFBd0UsMEJBQTBCLG9DQUFvQyxZQUFZLGlCQUFpQixnRkFBZ0YsYUFBYSxFQUFFLGlDQUFpQyxxQ0FBVSxFQUFFLDRFQUE0RSx3RUFBd0Usc0NBQXNDLEVBQUUsZ0JBQWdCLHFDQUFVLEVBQUUsMkRBQTJELHFFQUFxRSxFQUFFLDJCQUEyQixxQ0FBVSxFQUFFLGtFQUFrRSw4QkFBOEIsTUFBbUMsR0FBRyxDQUFzTyxFQUFFLGlEQUFpRCwwRUFBMEUsR0FBRyxLQUFtQyxDQUFDLHdDQUFtckMsQ0FBQyw0Q0FBNEMsTUFBbUMsR0FBRyxDQUFxQixJQUFJLGdDQUFnQyxFQUFFLG9DQUFvQyxxQ0FBVSxFQUFFLDJFQUEyRSx1TUFBdU0sTUFBbUMsR0FBRyxDQUF5SSxFQUFFLHdDQUF3QyxZQUFZLDZEQUE2RCxpR0FBaUcsc0NBQXNDLHFIQUFxSCxtREFBbUQsOENBQThDLHNzQkFBc3NCLGlCQUFpQiwyQ0FBMkMsc0NBQXNDLHFFQUFxRSxnQkFBZ0Isd0NBQXdDLDhDQUE4QyxHQUFHLEtBQW1DLENBQUMsNERBQTRELHlGQUF5Riw2R0FBNkcsd0JBQXdCLHVNQUF1TSx5Q0FBeUMsUUFBUSxLQUF1RCxDQUFDLGlCQUF5Z0IsQ0FBQyxnWkFBZ1osNkNBQTZDLDRFQUE0RSxrREFBa0QsNkVBQTZFLDhEQUE4RCw0QkFBNEIsMENBQTBDLHNLQUFzSyxhQUFhLEVBQUUsWUFBWSw0Q0FBNEMsZ0NBQWdDLGdFQUFnRSwrQ0FBK0Msc0VBQXNFLHlLQUF5Syw4QkFBOEIsOEJBQThCLG9DQUFvQyxvSkFBb0osWUFBWSxtQkFBbUIsS0FBSyxzR0FBc0csdUNBQXVDLFlBQVksNENBQTRDLG9DQUFvQyxzRUFBc0UsOEJBQThCLGdDQUFnQyxvQ0FBb0MsaUtBQWlLLFlBQVksNENBQTRDLHdDQUF3QyxzRUFBc0UsOEJBQThCLDJDQUEyQyxvQ0FBb0Msc0tBQXNLLFlBQVksNENBQTRDLGtEQUFrRCxzRUFBc0UsK0NBQStDLGtHQUFrRywyTEFBMkwsWUFBWSw0Q0FBNEMsK0NBQStDLHlDQUF5QyxNQUFtQyxHQUFHLENBQThRLCtCQUErQixzRUFBc0Usc0NBQXNDLHdCQUF3QixtREFBbUQsbUVBQW1FLCtCQUErQiwyQ0FBMkMsRUFBRSw2S0FBNkssNENBQTRDLGdEQUFnRCxzRUFBc0UsMEtBQTBLLDhEQUE4RCw0S0FBNEssaURBQWlELHNHQUFzRyx1Q0FBdUMsWUFBWSw0Q0FBNEMscURBQXFELDhDQUE4QyxNQUFtQyxFQUFFLENBQXNGLDhCQUE4QixZQUFZLDZCQUE2QixLQUFLLG1DQUFtQyxtT0FBbU8sc0VBQXNFLDhCQUE4Qiw4QkFBOEIsTUFBTSxxSUFBcUksbUNBQW1DLGtIQUFrSCwyR0FBMkcsa0lBQWtJLDRDQUE0Qyw2QkFBNkIsc0VBQXNFLDZKQUE2Siw0Q0FBNEMsNkVBQTZFLG9IQUFvSCx5RkFBeUYsNENBQTRDLHNFQUFzRSw4REFBOEQsMktBQTJLLDJCQUEyQiw0QkFBNEIsNEhBQTRILGtHQUFrRyxzQkFBc0IsWUFBWSw0Q0FBNEMsa0RBQWtELHNFQUFzRSw4REFBOEQsMktBQTJLLHFCQUFxQiw2QkFBNkIsd0JBQXdCLDRCQUE0QixrSkFBa0o7QUFDMXRzQixpRUFBaUUsa0dBQWtHLHNCQUFzQixZQUFZLDRDQUE0QywyQkFBMkIseUJBQXlCLG9EQUFvRCxnQ0FBZ0Msd0VBQXdFLDBEQUEwRCx3Q0FBd0MsZUFBZSw2Q0FBNkMsbUNBQW1DLEtBQUssNkJBQTZCLGtDQUFrQyxVQUFVLDZCQUE2QixFQUFFLHFCQUFxQix1Q0FBdUMsZUFBZSxVQUFVLG1CQUFtQixzQ0FBc0MseUlBQXlJLGdDQUFnQyw4QkFBOEIsNEhBQTRILG1DQUFtQyw4REFBOEQsb0NBQW9DLHdCQUF3QiwyQ0FBMkMsK0NBQStDLGdCQUFnQix5Q0FBeUMsK0JBQStCLGFBQWEsMkNBQTJDLHVEQUF1RCxxQkFBcUIsaUNBQWlDLGdHQUFnRyxnTEFBZ0wsRUFBRSxxQ0FBcUMscUNBQVUsRUFBRSw0RUFBNEUsd0RBQXdELDBCQUEwQixtQ0FBbUMsdURBQXVELDBCQUEwQix5RUFBeUUsa0NBQWtDLHFNQUFxTSwwQ0FBMEMscUJBQXFCLG1CQUFtQixZQUFZLG9CQUFvQixtVUFBbVUsaUVBQWlFLEVBQUUsdUJBQXVCLHFDQUFVLEVBQUUseURBQXlELE1BQW1DLEVBQUUsQ0FBeUksc0RBQXNELGtDQUFrQyxFQUFFLHNCQUFzQixxQ0FBVSxFQUFFLDhEQUE4RCxtM0JBQW0zQixFQUFFLHVCQUF1QixxQ0FBVSxFQUFFLHdEQUF3RCxxQ0FBcUMsRUFBRSx1QkFBdUIscUNBQVUsRUFBRSx1REFBdUQsMEJBQTBCLHVEQUF1RCx1QkFBdUIsVUFBVSxTQUFTLDRIQUE0SCxXQUFXLGdDQUFnQyx3QkFBd0IseUJBQXlCLElBQUksd0ZBQXdGLFNBQVMsUUFBUSxra0ZBQWtrRixjQUFjLDI1RUFBMjVFLFNBQVMsUUFBUSxVQUFVLGdCQUFnQixxQ0FBcUMsK0JBQStCLGlDQUFpQywyQ0FBMkMsNEJBQTRCLHVDQUF1QywrRkFBK0Ysc0NBQXNDLDREQUE0RCx1QkFBdUIscUNBQXFDLDZCQUE2QixrQ0FBa0MsZ0RBQWdELEtBQUssMkJBQTJCLDBCQUEwQixvQ0FBb0MsNkNBQTZDLEtBQUssK0RBQStELG9EQUFvRCxzQ0FBc0Msd0JBQXdCLHNDQUFzQyx5Q0FBeUMsZ0JBQWdCLDZDQUE2QyxLQUFLLDBDQUEwQyxjQUFjLHlDQUF5QywyQkFBMkIsMkRBQTJELG9CQUFvQiwwTkFBME4sNENBQTRDLG1CQUFtQixzQ0FBc0MsbUJBQW1CLHVDQUF1QyxvQkFBb0Isd0NBQXdDLHFCQUFxQiwwREFBMEQsc1hBQXNYLHNCQUFzQix1RUFBdUUsa0NBQWtDLGlHQUFpRyx5REFBeUQsNkJBQTZCLEtBQUssK0NBQStDLFVBQVUscURBQXFELHNHQUFzRywrQ0FBK0Msc0pBQXNKLGdCQUFnQixFQUFFLDhDQUE4Qyw4R0FBOEcsU0FBUyxpQkFBaUIsc0ZBQXNGLDRGQUE0Rix1SkFBdUosd0RBQXdELCtCQUErQixpQkFBaUIsOERBQThELDZCQUE2QiwrQkFBK0Isa0JBQWtCLHVGQUF1Rix1SEFBdUgseUdBQXlHLGNBQWMseUJBQXlCLDJCQUEyQiw0REFBNEQseURBQXlELHFEQUFxRCwrR0FBK0csOEJBQThCLDJCQUEyQiwwQkFBMEIsdUVBQXVFLElBQUkscUVBQXFFLCtCQUErQixzQkFBc0IsK0NBQStDLDREQUE0RCxLQUFLLGdIQUFnSCxnQkFBZ0IsRUFBRSw4Q0FBOEMsMFJBQTBSLFNBQVMsNFNBQTRTLHNIQUFzSCxxSUFBcUksd0RBQXdELCtCQUErQixpQkFBaUIsMEZBQTBGLCtCQUErQixrQkFBa0IsMEJBQTBCLHFKQUFxSix1SUFBdUksY0FBYyx5QkFBeUIsaUdBQWlHLG1CQUFtQixnQ0FBZ0MsOEJBQThCLHlDQUF5QywrQkFBK0IsOEJBQThCLHdDQUF3Qyw0Q0FBNEMsV0FBVyxnREFBZ0QsdUNBQXVDLHVOQUF1TixzREFBc0QscUNBQXFDLHlFQUF5RSxtQkFBbUIsNEJBQTRCLG9DQUFvQyxNQUFNLDBHQUEwRywrQkFBK0IsWUFBWSxvQ0FBb0MsTUFBTSw2RUFBNkUsK0JBQStCLHFCQUFxQixpQkFBaUIsK0ZBQStGLHFLQUFxSyx1REFBdUQsOEVBQThFLDBCQUEwQixxQkFBcUIsaUJBQWlCLCtGQUErRix3S0FBd0ssdURBQXVELDhFQUE4RSxPQUFPLG1RQUFtUSxlQUFlLEVBQUUsVUFBVSxhQUFhLEVBQUUsZ0JBQWdCLHFDQUFVLEVBQUUsd0RBQXdELFlBQVksNEJBQTRCLHdCQUF3QixrQkFBa0IsZ1hBQWdYLFVBQVUsb0NBQW9DLHdCQUF3QixrQkFBa0IsOEZBQThGLFVBQVUsMkJBQTJCLHdCQUF3QixrQkFBa0Isa1pBQWtaLFVBQVUsK0JBQStCLHdFQUF3RSxpQ0FBaUMsa0JBQWtCLDZFQUE2RSx5SEFBeUgsWUFBWSx3Q0FBd0MsYUFBYSw2REFBNkQseUJBQXlCLEdBQUcscUVBQXFFLHNDQUFzQyxnQkFBZ0IsVUFBVSxnQkFBZ0IsMkdBQTJHLE1BQU0sRUFBRSxpQkFBaUIscUNBQVUsRUFBRSx5REFBeUQsWUFBWSxnRkFBZ0YsVUFBVSxxdlNBQXF2UyxXQUFXLG02ZEFBbTZkLDhCQUE4Qix3QkFBd0IsMEJBQTBCLDZEQUE2RCw0QkFBNEIsd0JBQXdCLDBHQUEwRywyQkFBMkIsMEdBQTBHLCtCQUErQixrREFBa0QsMkJBQTJCLDRDQUE0Qyw4R0FBOEcsZUFBZSx5Q0FBeUMsT0FBTyw0RUFBNEUsd0NBQXdDLE9BQU8sMkZBQTJGLG1DQUFtQywrRkFBK0Ysa0NBQWtDLDZGQUE2RixtQ0FBbUMsK0ZBQStGLGtDQUFrQyw2RkFBNkYsZ0JBQWdCLG1NQUFtTSxNQUFNLEVBQUUsb0JBQW9CLHFDQUFVLEVBQUUsNERBQTRELFlBQVksd0JBQXdCLHlDQUF5QyxXQUFXLDJIQUEySCxtQkFBbUIsaUNBQWlDLHdEQUF3RCxpQ0FBaUMscURBQXFELGtCQUFrQiw4Q0FBOEMsNkRBQTZELDJGQUEyRiw2SEFBNkgsdUdBQXVHLDZEQUE2RCxnRUFBZ0UsaUNBQWlDLG1CQUFtQixzQ0FBc0MsdUVBQXVFLHNDQUFzQyx1RUFBdUUsOEJBQThCLHFDQUFxQyxpQ0FBaUMsWUFBWSxpRkFBaUYscUJBQXFCLEtBQUssbUVBQW1FLFVBQVUsaUNBQWlDLDZDQUE2QyxpQ0FBaUMsd0JBQXdCLDJCQUEyQixxREFBcUQsS0FBSyxLQUFLLDZDQUE2QywrRUFBK0UsMEJBQTBCLHdCQUF3QixnQ0FBZ0MsVUFBVSxvQ0FBb0MsOERBQThELG9DQUFvQyw4REFBOEQsZ0JBQWdCLHlKQUF5SixNQUFNLEVBQUUsa0JBQWtCLHFDQUFVLEVBQUUsbURBQW1ELFlBQVkseUZBQXlGLE1BQU0sRUFBRSxtQkFBbUIscUNBQVUsRUFBRSw4RUFBOEUsOEZBQThGLGdDQUFnQyxxRUFBcUUsMERBQTBELGtDQUFrQyw0R0FBNEcsNE5BQTROLEVBQUUsdUJBQXVCLHFDQUFVLEVBQUUsa0ZBQWtGLCtIQUErSCw2QkFBNkIsNkNBQTZDLCtCQUErQixnREFBZ0QsbUNBQW1DLGdDQUFnQyw2Q0FBNkMsb0hBQW9ILGFBQWEsZ0JBQWdCLCtDQUErQywyREFBMkQsR0FBRyxnRkFBZ0YsNkhBQTZILHFIQUFxSCxvQkFBb0IsZ0VBQWdFLEVBQUUsaUJBQWlCLHFDQUFVLEVBQUUsNEVBQTRFLDJDQUEyQyxzQ0FBc0MsNkNBQTZDLHVEQUF1RCxzQkFBc0IsNkdBQTZHLHdCQUF3QixnQ0FBZ0MsY0FBYyx3RUFBd0UsTUFBTSwwQkFBMEIsaUNBQWlDLFdBQVcsNk9BQTZPLGdDQUFnQywwQkFBMEIsbUNBQW1DLFFBQVEsMEJBQTBCLGVBQWUsK0ZBQStGLEtBQUssdUlBQXVJLDJHQUEyRyw0QkFBNEIsMkJBQTJCLGdEQUFnRCxzREFBc0QsNElBQTRJLHFEQUFxRCw2RkFBNkYscUZBQXFGLG9FQUFvRSxrQkFBa0IsbUNBQW1DLHFEQUFxRCwrQkFBK0Isc0RBQXNELGdCQUFnQiw2QkFBNkIsRUFBRSxpQ0FBaUMsdUZBQXVGLFNBQVMsK0RBQStELDBCQUEwQixpQ0FBaUMsNEJBQTRCLDRCQUE0QixHQUFHLHFCQUFxQixTQUFTLDJCQUEyQix5Q0FBeUMsMkRBQTJELDZCQUE2Qiw4Q0FBOEMsK0RBQStELDBCQUEwQixnQkFBZ0Isb0JBQW9CLGdTQUFnUyxvQkFBb0IsS0FBSyxzQ0FBc0MsVUFBVSwyRUFBMkUsZ0RBQWdELG9VQUFvVSw4REFBOEQscUZBQXFGLHNEQUFzRCwrVEFBK1QsZ0ZBQWdGLDZCQUE2Qix1RUFBdUUsZ0VBQWdFLHNEQUFzRCx5U0FBeVMsZ0ZBQWdGLGtDQUFrQyxvQ0FBb0MsZ0JBQWdCLGdEQUFnRCw2REFBNkQsbUtBQW1LLGtDQUFrQywrREFBK0QsZ0JBQWdCLHVDQUF1QywwREFBMEQsK0NBQStDLDRCQUE0Qiw0Q0FBNEMsRUFBRSxzQkFBc0IscUNBQVUsRUFBRSxpRkFBaUYseUZBQXlGLG9CQUFvQixtRUFBbUUscURBQXFELCtDQUErQyxNQUFNLHdDQUF3QyxZQUFZLG1DQUFtQyxpRkFBaUYsdURBQXVELDJJQUEySSxtSUFBbUksc0NBQXNDLDJDQUEyQyxnQ0FBZ0Msa0NBQWtDLDBDQUEwQyxpQkFBaUIsNEJBQTRCLHFCQUFxQixNQUFNLGdDQUFnQyxvREFBb0Qsa0RBQWtELHFDQUFxQyw2REFBNkQsZ0RBQWdELHNDQUFzQyw0QkFBNEIsNEJBQTRCLEVBQUUseUJBQXlCLHFDQUFVLEVBQUUsb0ZBQW9GLHdCQUF3QixtREFBbUQsZ0lBQWdJLG1IQUFtSCx1QkFBdUIsMkNBQTJDLHFDQUFxQyxtRUFBbUUsMENBQTBDLDZDQUE2Qyw0SUFBNEkseUNBQXlDLCtHQUErRyxrQ0FBa0MsRUFBRSxpQ0FBaUMscUNBQVUsRUFBRSw0RkFBNEYsNElBQTRJLG1DQUFtQyxnQkFBZ0IsNlFBQTZRLHdDQUF3Qyw4REFBOEQsK0VBQStFLHdDQUF3QyxFQUFFLHdEQUF3RCxnQkFBZ0IsV0FBVyw0REFBNEQsK0pBQStKLHdEQUF3RCx1RkFBdUYsMERBQTBELDhCQUE4Qix3SkFBd0osNERBQTRELCtEQUErRCxhQUFhLHdEQUF3RCxxS0FBcUssd1FBQXdRLG9LQUFvSyxJQUFJLG1GQUFtRix1QkFBdUIsK1hBQStYLG9HQUFvRywyQkFBMkIsc0JBQXNCLGlNQUFpTSxvQ0FBb0MsZ0NBQWdDLG9FQUFvRSxrREFBa0QsaURBQWlELDREQUE0RCxxREFBcUQsd0RBQXdELEVBQUUsaVZBQWlWLDBCQUEwQiw4REFBOEQsc0JBQXNCLHFEQUFxRCw4R0FBOEcsNkRBQTZELDZNQUE2TSxTQUFTLDJGQUEyRixpVkFBaVYscUlBQXFJLCtNQUErTSxvREFBb0Qsa0VBQWtFLEtBQUssMkRBQTJELDZPQUE2TyxNQUFNLEtBQUssMkdBQTJHLDhDQUE4QyxTQUFTLDBCQUEwQixhQUFhLDZFQUE2RSxXQUFXLDhuQkFBOG5CLGVBQWUsb0ZBQW9GLHFDQUFxQyxzQ0FBc0MsOERBQThELGlDQUFpQyx1R0FBdUcsUUFBUSwrQ0FBK0MsU0FBUyxzSEFBc0gsbU5BQW1OLGlEQUFpRCxzQ0FBc0MsZ0RBQWdELEVBQUUsMEJBQTBCLHFDQUFVLEVBQUUscUZBQXFGLCtCQUErQiw0QkFBNEIsc0VBQXNFLGdGQUFnRixnU0FBZ1MsMERBQTBELGtDQUFrQyw4R0FBOEcscUJBQXFCLEtBQUssaUVBQWlFLFNBQVMsZ0JBQWdCLEVBQUUsdUJBQXVCLHFDQUFVLEVBQUUsa0ZBQWtGLHVCQUF1QixnQkFBZ0IsMkJBQTJCLG9DQUFvQyxnREFBZ0QseUNBQXlDLFFBQVEsMkNBQTJDLHVCQUF1Qix5QkFBeUIsSUFBSSxzREFBc0QsZ0JBQWdCLFVBQVUsc0VBQXNFLDJDQUEyQywrQ0FBK0MsRUFBRSxnQ0FBZ0MscUNBQVUsRUFBRSwyRkFBMkYsMktBQTJLLHFEQUFxRCx5QkFBeUIsd05BQXdOLG1FQUFtRSx1RUFBdUUsdUNBQXVDLHFEQUFxRCx3RUFBd0UsNkNBQTZDLCtHQUErRyxFQUFFLG9EQUFvRCx1RUFBdUUsNkNBQTZDLDZHQUE2RyxFQUFFLHlFQUF5RSx5QkFBeUIsYUFBYSxZQUFZLHNFQUFzRSw2REFBNkQsb0NBQW9DLG1DQUFtQyx5Q0FBeUMsc0NBQXNDLDRFQUE0RSxvRkFBb0YsY0FBYyx3RUFBd0UsTUFBTSxzRUFBc0UsTUFBTSx1REFBdUQsK0JBQStCLCtCQUErQix1RUFBdUUsMkVBQTJFLHVOQUF1TixvQ0FBb0MscUVBQXFFLDJDQUEyQyxtR0FBbUcsZ0ZBQWdGLHNLQUFzSyxhQUFhLDBDQUEwQyxtRUFBbUUsNkNBQTZDLGdCQUFnQiw2SkFBNkosMENBQTBDLG1EQUFtRCw2RUFBNkUsZ0JBQWdCLDZKQUE2SiwyQ0FBMkMsaUJBQWlCLDRDQUE0QywwREFBMEQseUJBQXlCLDhFQUE4RSxrVUFBa1UsNkVBQTZFLHlIQUF5SCxnSEFBZ0gsa0tBQWtLLHlEQUF5RCx5SUFBeUksNEVBQTRFLDREQUE0RCxvRUFBb0UsMkJBQTJCLHdLQUF3SyxNQUFNLFFBQVEsK0JBQStCLGtEQUFrRCxXQUFXLHdFQUF3RSxzTUFBc00seVBBQXlQLDZEQUE2RCxFQUFFLHFNQUFxTSxTQUFTLEtBQUssNERBQTRELDhhQUE4YSw4RUFBOEUsNENBQTRDLGtFQUFrRSxlQUFlLHNDQUFzQyxFQUFFLG1CQUFtQiw2SEFBNkgsMkVBQTJFLDhLQUE4SyxRQUFRLHdFQUF3RSxhQUFhLDJCQUEyQixvREFBb0QseUNBQXlDLE1BQU0sc0VBQXNFLG9EQUFvRCxPQUFPLG1GQUFtRixNQUFNLGVBQWUsVUFBVSx3RkFBd0YsZ0ZBQWdGLGdGQUFnRiw2QkFBNkIsMGxCQUEwbEIsd05BQXdOLGtIQUFrSCxpSEFBaUgsc0hBQXNILGlFQUFpRSwrREFBK0QsZ0JBQWdCLHFDQUFxQyxTQUFTLDJDQUEyQywyQ0FBMkMsaURBQWlELHNEQUFzRCwwREFBMEQsVUFBVSxtQ0FBbUMscUVBQXFFLFlBQVksb0ZBQW9GLHFNQUFxTSxhQUFhLDJDQUEyQyxpREFBaUQsOENBQThDLHlIQUF5SCwwQ0FBMEMsaURBQWlELDhHQUE4RyxRQUFRLDhDQUE4QyxvRUFBb0Usb0hBQW9ILGdCQUFnQixNQUFNLGtGQUFrRixvQ0FBb0MseUNBQXlDLDhDQUE4QywyQkFBMkIsc0ZBQXNGLFFBQVEsZ0VBQWdFLDJEQUEyRCwySEFBMkgsMklBQTJJLDZCQUE2QixrRUFBa0Usc0VBQXNFLHVDQUF1Qyx5REFBeUQsdUNBQXVDLFlBQVkseUZBQXlGLHlMQUF5TCxhQUFhLDBDQUEwQywwQ0FBMEMsOEpBQThKLFFBQVEsd0NBQXdDLHNEQUFzRCw0REFBNEQseUJBQXlCLDhFQUE4RSx5RkFBeUYsNkVBQTZFLG9EQUFvRCxnQkFBZ0Isa0JBQWtCLHdDQUF3QywrRUFBK0Usc0hBQXNILG9LQUFvSywyQkFBMkIsaUJBQWlCLDBEQUEwRCxxRUFBcUUsR0FBRyw4RUFBOEUsaUVBQWlFLDhDQUE4QyxvRUFBb0UsZUFBZSx1QkFBdUIsd0JBQXdCLGdCQUFnQiw0Q0FBNEMsd0RBQXdELGdCQUFnQixFQUFFLHVFQUF1RSxZQUFZLG9GQUFvRixtRkFBbUYscUVBQXFFLDZFQUE2RSx1Q0FBdUMscURBQXFELDZOQUE2TixHQUFHLDhDQUE4QyxzRUFBc0Usd0NBQXdDLDRDQUE0QyxHQUFHLG9GQUFvRixZQUFZLHdCQUF3QixLQUFLLG9GQUFvRiwwQkFBMEIsNkJBQTZCLDJEQUEyRCx3RUFBd0UsWUFBWSx3QkFBd0IsS0FBSyw4QkFBOEIsd0VBQXdFLG1FQUFtRSxzQkFBc0IsU0FBUyxvTkFBb04sYUFBYSxRQUFRLHdCQUF3Qiw2RUFBNkUsdURBQXVELFlBQVksd0JBQXdCLDhGQUE4Rix5QkFBeUIsS0FBSyxtRkFBbUYsbUpBQW1KLGNBQWMsbUhBQW1ILHFCQUFxQix1VEFBdVQsNklBQTZJLGtKQUFrSiw0REFBNEQsRUFBRSx3QkFBd0IscUNBQVUsRUFBRSxtRkFBbUYsdUtBQXVLLHlEQUF5RCx1Q0FBdUMseUpBQXlKLDZGQUE2RiwwSEFBMEgseURBQXlELDRCQUE0Qix1QkFBdUIsK0ZBQStGLDREQUE0RCx3REFBd0QsMkpBQTJKLE1BQU0seUhBQXlILHNNQUFzTSxPQUFPLEtBQUssd0NBQXdDLCtDQUErQyxnREFBZ0QscURBQXFELCtLQUErSyxxQkFBcUIsdU9BQXVPLDREQUE0RCxrSUFBa0ksT0FBTywwQ0FBMEMsMERBQTBELE1BQU0sZ0ZBQWdGLG1HQUFtRywwQ0FBMEMsd0RBQXdELGlCQUFpQixPQUFPLHlGQUF5RiwrR0FBK0csYUFBYSw4Q0FBOEMsbURBQW1ELEtBQUssNEJBQTRCLG9GQUFvRiwrR0FBK0csYUFBYSx3Q0FBd0MsMkNBQTJDLE1BQU0sc0ZBQXNGLG9FQUFvRSxJQUFJLHlDQUF5QywyQ0FBMkMsVUFBVSx1QkFBdUIsUUFBUSw4REFBOEQsOERBQThELGFBQWEsa0VBQWtFLG9EQUFvRCxtUEFBbVAsMkVBQTJFLG9FQUFvRSxzREFBc0QscUNBQXFDLE1BQU0sNkVBQTZFLHdFQUF3RSxNQUFNLDBFQUEwRSx5Q0FBeUMsV0FBVyxpQ0FBaUMsWUFBWSxPQUFPLDJEQUEyRCxlQUFlLHdCQUF3QixzSkFBc0osMENBQTBDLDhQQUE4UCxpQ0FBaUMsMENBQTBDLFlBQVksNENBQTRDLG9CQUFvQixvTUFBb00sV0FBVyw2Q0FBNkMsa0RBQWtELGtDQUFrQyxXQUFXLHFMQUFxTCxpQ0FBaUMsMENBQTBDLFlBQVksNENBQTRDLG9CQUFvQix1QkFBdUIsNkRBQTZELGdEQUFnRCxHQUFHLDBCQUEwQixnQ0FBZ0MsRUFBRSx1QkFBdUIscUNBQVUsRUFBRSw4RUFBOEUsNkVBQTZFLDBFQUEwRSxzREFBc0QsRUFBRSxvQkFBb0IscUNBQVUsRUFBRSw0REFBNEQsZ0JBQWdCLGlJQUFpSSxnRUFBZ0UsZ0dBQWdHLGFBQWEsZUFBZSx5RkFBeUYsY0FBYyx5REFBeUQsZUFBZSxzREFBc0QsdUJBQXVCLHNCQUFzQixrQkFBa0Isd1BBQXdQLGlDQUFpQywyUkFBMlIsRUFBRSxzQkFBc0IscUNBQVUsRUFBRSxxREFBcUQsWUFBWSxrUkFBa1IsaUZBQWlGLDRCQUE0QiwwREFBMEQsMkJBQTJCLHlEQUF5RCxZQUFZLHdVQUF3VSxtQkFBbUIsdXRCQUF1dEIsdWNBQXVjLDZCQUE2QixRQUFRLG9EQUFvRCxRQUFRLDhDQUE4QztBQUM1MzhGLGdLQUFnSyxNQUFNLG9FQUFvRSwyR0FBMkcsK0JBQStCLGNBQWMsV0FBVyxNQUFNLHVDQUF1QyxjQUFjLGdDQUFnQywyQkFBMkIscUNBQXFDLG1CQUFtQixpRUFBaUUsZ0NBQWdDLFFBQVEsOEVBQThFLGNBQWMsdUNBQXVDLFlBQVksK0JBQStCLHlGQUF5RiwwS0FBMEssdUJBQXVCLGNBQWMsK0JBQStCLG1DQUFtQyx1RUFBdUUsNEZBQTRGLDREQUE0RCw0REFBNEQsc1ZBQXNWLHdDQUF3QyxPQUFPLG9RQUFvUSx1REFBdUQseUtBQXlLLDZCQUE2QixvRUFBb0UscUNBQXFDLHlEQUF5RCxpR0FBaUcsS0FBSywyVEFBMlQsNEJBQTRCLGNBQWMsMkNBQTJDLFFBQVEsbVBBQW1QLHlDQUF5QywyQkFBMkIsMEJBQTBCLDBCQUEwQixnQ0FBZ0MsZ0NBQWdDLG9EQUFvRCw4QkFBOEIsb0JBQW9CLHNEQUFzRCxLQUFLLHlDQUF5QyxVQUFVLE1BQU0sbUJBQW1CLFVBQVUsTUFBTSxvQkFBb0IsdUJBQXVCLDJCQUEyQixvRUFBb0UsdUJBQXVCLE1BQU0sS0FBSyxtREFBbUQsaUNBQWlDLHFDQUFxQyx3REFBd0Qsd0NBQXdDLFNBQVMsMkdBQTJHLHlEQUF5RCxTQUFTLG1DQUFtQyw4SkFBOEosK0NBQStDLE1BQU0scUhBQXFILG9CQUFvQiw4QkFBOEIsd0JBQXdCLHNCQUFzQixLQUFLLHVFQUF1RSxjQUFjLGdEQUFnRCxtRkFBbUYsZUFBZSxvREFBb0QsU0FBUyx1TkFBdU4sd0JBQXdCLGtCQUFrQiwwQkFBMEIsc0RBQXNELHNzQkFBc3NCLHlCQUF5QixvQkFBb0Isd0JBQXdCLGlCQUFpQiwrREFBK0QsOEJBQThCLE1BQU0sbUJBQW1CLHdEQUF3RCxLQUFLLHNCQUFzQixtREFBbUQsOENBQThDLGtGQUFrRixNQUFNLEtBQUssc0JBQXNCLDZEQUE2RCxLQUFLLHNCQUFzQiwwS0FBMEssTUFBTSxtR0FBbUc7QUFDejBOLEdBQUcsOENBQThDLDBCQUEwQixtRUFBbUUsOEJBQThCO0FBQzVLLFVBQVUsb0tBQW9LLGtDQUFrQyxrSEFBa0gsd0RBQXdELG1DQUFtQztBQUM3Wiw0S0FBNEssTUFBTTtBQUNsTCwyRUFBMkU7QUFDM0UsV0FBVztBQUNYO0FBQ0EsdUNBQXVDLE1BQU07QUFDN0Msb0NBQW9DLDhCQUE4QjtBQUNsRSx3SEFBd0gsNE9BQTRPLE1BQU07QUFDMVcsSUFBSSxjQUFjLDhDQUE4QyxxQkFBcUIsWUFBWSxNQUFNO0FBQ3ZHLGtCQUFrQixRQUFRLGVBQWUsMEJBQTBCLDRDQUE0QywyQ0FBMkMsd0NBQXdDLGdCQUFnQix3REFBd0QsS0FBSyxzQ0FBc0MsY0FBYywyQ0FBMkMseUJBQXlCLDZWQUE2ViwwQkFBMEIsd0RBQXdELHNDQUFzQyxtTkFBbU4seUJBQXlCLGdFQUFnRSxVQUFVLGdFQUFnRSwyRUFBMkUsb0pBQW9KLGtDQUFrQyw4Q0FBOEMsaURBQWlELGtFQUFrRSxrQ0FBa0MsNkRBQTZELGdDQUFnQyxvQ0FBb0MsOEJBQThCLHVJQUF1SSx3RUFBd0UsNkdBQTZHLCtEQUErRCwyQkFBMkIsOFBBQThQLE1BQU0sa0tBQWtLLEtBQUssb1BBQW9QLHdJQUF3SSxjQUFjLDZEQUE2RCxnQkFBZ0IseVFBQXlRLGtHQUFrRyxxRkFBcUYsOEVBQThFLDZCQUE2QixrRUFBa0Usa0hBQWtILGdNQUFnTSx1REFBdUQscUVBQXFFLGNBQWMsMklBQTJJLDJGQUEyRixrUEFBa1AsbURBQW1ELCtDQUErQyxFQUFFLDBCQUEwQixvQ0FBb0MsNEJBQTRCLHFCQUFxQiw2QkFBNkI7QUFDOXpKLGNBQWMsMkJBQTJCLDRCQUE0Qiw2RkFBNkYsS0FBSztBQUN2SyxjQUFjLGl2QkFBaXZCLDBCQUEwQixXQUFXLHFDQUFxQywrRkFBK0Ysd0NBQXdDLHFHQUFxRyxnQ0FBZ0MsY0FBYyxxQkFBcUIsb0NBQW9DLFNBQVMsNEJBQTRCLEtBQUssb0lBQW9JLDJIQUEySCxVQUFVLHVDQUF1QyxvQkFBb0IsMlVBQTJVLHlDQUF5QyxnSEFBZ0gsdUNBQXVDLHdEQUF3RCw4S0FBOEssa0NBQWtDLHFCQUFxQiw2QkFBNkIsVUFBVSw4T0FBOE8sd0RBQXdELHdDQUF3Qyx3Q0FBd0MscUNBQXFDLFNBQVMsRUFBRSwrQ0FBK0MsZ0NBQWdDLCtTQUErUyw2Q0FBNkMsMENBQTBDLHlNQUF5TSxVQUFVLHlLQUF5SyxnQ0FBZ0MsU0FBUyx1REFBdUQsS0FBSyw4SUFBOEksOEdBQThHLG9MQUFvTCwyQ0FBMkMsb0lBQW9JLDBDQUEwQyxvQkFBb0Isb0NBQW9DLFNBQVMseUpBQXlKLHVDQUF1QyxTQUFTLHNLQUFzSyxvQ0FBb0MsY0FBYyxpR0FBaUcsNEJBQTRCLHlEQUF5RCxLQUFLLGtMQUFrTCxnY0FBZ2Msd0NBQXdDLDRCQUE0Qixna0JBQWdrQixxS0FBcUssd0NBQXdDLFNBQVMsNERBQTRELEtBQUssOElBQThJLDhHQUE4Ryw0SUFBNEkseUNBQXlDLDJDQUEyQyxxT0FBcU8sMENBQTBDLHlDQUF5Qyw0REFBNEQsaUJBQWlCO0FBQ3owTyxxTEFBcUwsS0FBSywwT0FBME8sc0dBQXNHLHFDQUFxQyw4R0FBOEcsbUNBQW1DLGdDQUFnQyxtSkFBbUosS0FBSyxpS0FBaUssTUFBTSwyRUFBMkUsS0FBSyxxS0FBcUssOEVBQThFLEtBQUssK0pBQStKLCtJQUErSSx1R0FBdUcsc0NBQXNDLDZDQUE2Qyx5QkFBeUIsNEdBQTRHLFlBQVksMkRBQTJELEtBQUssK05BQStOLCtCQUErQixXQUFXLGlDQUFpQyw2Q0FBNkMsNkJBQTZCLDhZQUE4WSxLQUFLLHVRQUF1USxTQUFTLGtDQUFrQyxpREFBaUQsNkJBQTZCLDBGQUEwRix3ZUFBd2UsbUNBQW1DLHFCQUFxQiw2QkFBNkIsOE5BQThOLGtCQUFrQiwySEFBMkgsbUlBQW1JLHFGQUFxRixxQ0FBcUMseUZBQXlGLHFDQUFxQyx5RkFBeUYsdUNBQXVDLDRGQUE0Riw4QkFBOEIsbUNBQW1DO0FBQ2owSiwyQkFBMkIsS0FBSywwckJBQTByQixjQUFjLDBDQUEwQyxpS0FBaUssc0NBQXNDLDhKQUE4SixxQ0FBcUMscUJBQXFCLDZCQUE2Qiw2RkFBNkYscUZBQXFGLG9DQUFvQyxxQkFBcUIsNkJBQTZCLDhGQUE4RixzRkFBc0Ysa0ZBQWtGLG1EQUFtRCxnQkFBZ0IsaUdBQWlHLEtBQUsseUhBQXlILDJEQUEyRCxzREFBc0Qsb0ZBQW9GLHlEQUF5RCx5RkFBeUYsdURBQXVELHNWQUFzVixtREFBbUQsb0dBQW9HLGtEQUFrRCxnRkFBZ0Ysdy9CQUF3L0IsZ0RBQWdELGdCQUFnQix1SkFBdUosS0FBSyx1SEFBdUgsNEdBQTRHLGlEQUFpRCw4REFBOEQsc0ZBQXNGLG1FQUFtRSwrQ0FBK0MsaUNBQWlDLGtQQUFrUCxtQ0FBbUMsS0FBSyx1SEFBdUgsa0JBQWtCLHNEQUFzRCxrREFBa0Qsb0JBQW9CLDh1QkFBOHVCLDhDQUE4QyxXQUFXLGdRQUFnUSxpREFBaUQsMERBQTBELHFuQkFBcW5CLGlEQUFpRCxXQUFXLHdNQUF3TSxpREFBaUQseUdBQXlHLHdEQUF3RCxrREFBa0QsdVFBQXVRLG9EQUFvRCxxREFBcUQsaU5BQWlOLDhDQUE4QyxzREFBc0QsMkRBQTJELCtCQUErQiwwSUFBMEksU0FBUyxnQ0FBZ0MsS0FBSyw2UEFBNlAsb0tBQW9LLDZDQUE2QyxpREFBaUQsaURBQWlELG9CQUFvQiwyVUFBMlUsa0RBQWtELG9CQUFvQiwrVkFBK1YsMENBQTBDLDhqQkFBOGpCLGtEQUFrRCx3Q0FBd0Msd0ZBQXdGLGdGQUFnRixpRkFBaUYseUJBQXlCLGlDQUFpQyxTQUFTLGFBQWEsaUdBQWlHLEtBQUssOElBQThJLDJIQUEySCxlQUFlLEVBQUUsbURBQW1ELDBFQUEwRSwrQ0FBK0MsNkNBQTZDLHFDQUFxQyxFQUFFLGdLQUFnSyx1Q0FBdUMsS0FBSyx5RkFBeUYsYUFBYSxNQUFNLGlCQUFpQixxREFBcUQsV0FBVyxvQ0FBb0MsT0FBTyxpTEFBaUwsb0pBQW9KLFVBQVUsZ0RBQWdELGNBQWMsdUNBQXVDLGVBQWUsNENBQTRDLGdDQUFnQyx3REFBd0QsK0NBQStDLDBEQUEwRCx3Q0FBd0MsZ0ZBQWdGLGlEQUFpRCxtRUFBbUUsMkhBQTJILGlEQUFpRCxnRUFBZ0UsaUlBQWlJLHlDQUF5QyxRQUFRLHFEQUFxRCw2R0FBNkcsT0FBTyx1V0FBdVcscURBQXFELDJEQUEyRCx5REFBeUQsbUNBQW1DLDJQQUEyUCw4QkFBOEIsS0FBSyw4TEFBOEwsZ1lBQWdZLG9EQUFvRCxhQUFhLHNYQUFzWCwrQ0FBK0Msa0ZBQWtGLDBEQUEwRCxvQkFBb0Isc0NBQXNDLHNJQUFzSSxpRUFBaUUsaURBQWlELHNCQUFzQixpREFBaUQsZ0JBQWdCLDJDQUEyQyxLQUFLLDBHQUEwRyxpSEFBaUgsSUFBSSwrQkFBK0IsaURBQWlELDJDQUEyQyxpREFBaUQsa0lBQWtJLG9JQUFvSSxnQkFBZ0IsNlBBQTZQLGdFQUFnRSxvQkFBb0I7QUFDanZoQiw4SUFBOEksZ0NBQWdDLFlBQVksNkZBQTZGLHdGQUF3RixpREFBaUQsaUNBQWlDLG9EQUFvRCxxb0NBQXFvQyxxQkFBTSw4SUFBOEksbURBQW1ELHVKQUF1SixnQ0FBZ0MsMkNBQTJDLGVBQWUsUUFBUSxnQkFBZ0IsZ0dBQWdHLG9NQUFvTSw2R0FBNkcsTUFBTSxFQUFFLHFCQUFxQixtQ0FBUSxnQkFBZ0Isd2tCQUF3a0IsRUFBRSxpQ0FBaUMsc0JBQXNCLGFBQWEsTUFBTSxrQ0FBa0Msc0NBQXNDLHdDQUF3QywrTUFBK00sdUNBQXVDLDJRQUEyUSwwQkFBMEIsMkJBQTJCLHlCQUF5QixFQUFFLDBCQUEwQixvQ0FBb0Msb0VBQW9FLHdDQUF3Qyx5RUFBeUUsMkJBQTJCLE9BQU8sNkJBQWMsb0JBQW9CLDRCQUE0Qix1REFBdUQsb0NBQW9DLHNCQUFzQixFQUFFLHlCQUF5QixpQ0FBaUMscUVBQXFFLDRDQUE0QywwQkFBMEIsZUFBZSw2RkFBNkYsK0pBQStKLDJCQUEyQixnQ0FBZ0MsNEJBQTRCLHNHQUFzRyxvQ0FBb0Msc0RBQXNELGFBQWEsZ0RBQWdELDRJQUE0SSx3Q0FBd0MsMEVBQTBFLCtCQUErQiw2R0FBNkcseUNBQXlDLDRIQUE0SCx1Q0FBdUMseUJBQXlCLHFHQUFxRyxrSEFBa0gsOEtBQThLLCtCQUErQix5R0FBeUcsK0JBQStCLG1GQUFtRixxQ0FBcUMsa0RBQWtELG9DQUFvQyx1RUFBdUUsNkJBQTZCLHVDQUF1Qyw0QkFBNEIsMEJBQTBCLG9DQUFvQywrREFBK0QsNENBQTRDLG9DQUFvQyw2Q0FBNkMsOERBQThELDRCQUE0QixzQkFBc0Isd0JBQXdCLHVEQUF1RCxzQkFBc0Isa0VBQWtFLDBCQUEwQixzQkFBc0IseURBQXlELG9GQUFvRiw2QkFBNkIsbUVBQW1FLG1DQUFtQyxtSEFBbUgsK0JBQStCLG1DQUFtQywrQ0FBK0MsbURBQW1ELG1DQUFtQyx1Q0FBdUMsdVVBQXVVLDZCQUFjLENBQUMsdUJBQVEsNHRCQUE0dEIsK0JBQUssRUFBRSw0Q0FBNEMsZUFBZSw4WEFBOFgsOE1BQThNLHlJQUF5SSxzL05BQXMvTiwwREFBMEQsdzhEQUF3OEQsK0JBQStCLHVCQUF1QixxUkFBcVIsWUFBWSxjQUFjLGFBQWEsY0FBYyxlQUFlLE9BQU8sbU5BQW1OLDRCQUE0QixxREFBcUQsR0FBRyw0QkFBNEIseUJBQXlCLDZCQUE2Qiw0QkFBNEIscUZBQXFGLHdYQUF3WCxHQUFHLDRCQUE0Qix3QkFBd0IsMEJBQTBCLDZCQUE2QiwwQkFBMEIsZ0NBQWdDLG1DQUFtQyw4QkFBOEIsc0NBQXNDLHVQQUF1UCw4Q0FBOEMsMkZBQTJGLGNBQWMsNExBQTRMLHdCQUF3QixvRUFBb0UsVUFBVSwwTUFBME0sVUFBVSxrQ0FBa0MsNEJBQTRCLG9SQUFvUixzQkFBc0IsK0JBQStCLHNCQUFzQix1QkFBdUIsc0NBQXNDLG1CQUFtQixzQ0FBc0MsdUJBQXVCLHNDQUFzQyxFQUFFLGdGQUFnRix1SUFBdUksNkJBQWMsb0JBQW9CLHVCQUFRLGNBQWMscUNBQXFDLE9BQU8sdUJBQVEsK0JBQStCLDRCQUE0QixpQ0FBaUMsc0NBQXNDLDhDQUE4QyxxQ0FBcUMsZ0ZBQWdGLGdCQUFnQix3VUFBd1UsMktBQTJLLGlJQUFpSSxvTEFBb0wsZ0JBQWdCLCtCQUErQiw4QkFBOEIsNkJBQTZCLEtBQUsscURBQXFELHlDQUF5QyxtRUFBbUU7QUFDdnV1Qix3bEJBQXdsQixpS0FBaUsscUJBQXFCLFlBQVksZ0JBQWdCLGNBQWMsZ0JBQWdCLFVBQVUsZ0JBQWdCLGFBQWEsZ0JBQWdCLG1CQUFtQixnQkFBZ0Isc0JBQXNCLGtCQUFrQixrQ0FBa0MsZ0RBQWdELGtEQUFrRCw2Q0FBNkMsd0RBQXdELDhDQUE4Qyx5REFBeUQsMENBQTBDLHFEQUFxRCw2Q0FBNkMsc0RBQXNELG1EQUFtRCw2REFBNkQsc0RBQXNELDZEQUE2RCwrQ0FBK0MseURBQXlELHlCQUF5Qix3Q0FBd0MsTUFBTSw2QkFBNkIscUJBQXFCLGlCQUFpQix3QkFBd0IsWUFBWSxxQ0FBcUMsd0NBQXdDLHFEQUFxRCx1Q0FBdUMsb0RBQW9ELHlDQUF5QyxnQ0FBZ0MsNkRBQTZELDZFQUE2RSxtQ0FBbUMsTUFBTSxFQUFFLGdGQUFnRixnREFBZ0Qsb0JBQW9CLHdDQUF3QywrQ0FBK0MscUhBQXFILGdCQUFnQixZQUFZLGtIQUFrSCw2SEFBNkgsY0FBYyxzQkFBc0IsNkNBQTZDLCtCQUErQixxRUFBcUUsZ0NBQWdDLG9EQUFvRCxtQ0FBbUMsOENBQThDLGlDQUFpQyxzSEFBc0gsOEJBQThCLCtJQUErSSx3QkFBd0Isb0VBQW9FLGdEQUFnRCwwSkFBMEoseUJBQXlCLG9DQUFvQyw0QkFBNEIsaURBQWlELGdFQUFnRSwyQkFBMkIscUpBQXFKLHdHQUF3RyxvRUFBb0UsbUVBQW1FLHFDQUFxQywwR0FBMEcsdURBQXVELG9OQUFvTiw2Q0FBNkMsNk5BQTZOLHVDQUF1QyxrSkFBa0osc0JBQXNCLGtDQUFrQyxlQUFlLDhCQUE4QixzQkFBc0IsRUFBRSw4Q0FBOEMsc0JBQXNCLHFFQUFxRSxjQUFjLE1BQU0saUJBQWlCLDZGQUE2RixtSUFBbUksV0FBVyxZQUFZLGNBQWMsZUFBZSw2QkFBNkIsbUVBQW1FLGtDQUFrQyx5R0FBeUcseUJBQXlCLHFCQUFxQiwwQkFBMEIsaUNBQWlDLG1CQUFtQixnREFBZ0QsT0FBTyxxQ0FBcUMsb0RBQW9ELFdBQVcsZ0NBQWdDLHFFQUFxRSxrQ0FBa0Msc0VBQXNFLGlMQUFpTCx1REFBdUQsbURBQW1ELHlFQUF5RSx1R0FBdUcsOERBQThELGtEQUFrRCxvREFBb0Qsb0xBQW9MLDZFQUE2RSxrREFBa0QsMERBQTBELDBEQUEwRCx3REFBd0Qsb0RBQW9ELDBJQUEwSSx3REFBd0Qsc0RBQXNELGtEQUFrRCxzREFBc0QsaUdBQWlHLGtDQUFrQyx5R0FBeUcsOEZBQThGLHFVQUFxVSw4SEFBOEgscURBQXFELGtMQUFrTCx3REFBd0QsOEJBQThCLGtLQUFrSyxZQUFZLHFCQUFxQixLQUFLLHVCQUF1Qiw2SEFBNkgsaUpBQWlKLDJDQUEyQywrRUFBK0UscUNBQXFDLGlSQUFpUixzQ0FBc0MsWUFBWSxvS0FBb0ssd0tBQXdLLHVCQUF1Qiw0REFBNEQsd0RBQXdELDhaQUE4Wix3R0FBd0csOFpBQThaLHVFQUF1RSxzSEFBc0gscUNBQXFDLDRNQUE0TSx5Q0FBeUMsc1NBQXNTLHlDQUF5QyxtSkFBbUosMEJBQTBCLHlCQUF5Qix5REFBeUQsbUNBQW1DLDBSQUEwUiwyRUFBMkUsc0lBQXNJLHdDQUF3Qyx5T0FBeU8sU0FBUyxzQ0FBc0Msd0ZBQXdGLDRCQUE0Qix1Q0FBdUMscUNBQXFDLDZDQUE2Qyw2SUFBNkkseUZBQXlGLHFHQUFxRyxxTUFBcU0sMkNBQTJDLDZHQUE2Ryx3Q0FBd0Msc0xBQXNMLHVDQUF1QyxvTUFBb00sd0NBQXdDLDJEQUEyRCxpRUFBaUUsK0JBQStCLGdCQUFnQixRQUFRLG9CQUFvQiw0RkFBNEYsb0dBQW9HLEtBQUssS0FBSywyQkFBMkIsMkZBQTJGLFdBQVcseUJBQXlCLDhDQUE4QyxtTEFBbUwsa0RBQWtELDBGQUEwRixnRUFBZ0UsdUxBQXVMLHlCQUF5QixFQUFFLG1DQUFtQyxzQkFBc0IsZ0lBQWdJLGtDQUFrQyw0VUFBNFUsb0NBQW9DLGtDQUFrQyx3b0JBQXdvQix3Q0FBd0MseUNBQXlDLEVBQUUsMEJBQTBCLHVlQUF1ZSxhQUFhLG9DQUFvQyxnR0FBZ0csNkRBQTZELHdFQUF3RSw2aEJBQTZoQiw0RkFBNEYsOGNBQThjLHdDQUF3QyxpSkFBaUosMkNBQTJDLFlBQVksMEJBQTBCLDhFQUE4RSxpREFBaUQsZ0RBQWdELHlCQUF5QixFQUFFLDJEQUEyRCxrTkFBa04sa0tBQWtLLHdEQUF3RCxrQkFBa0Isb0NBQW9DLGtFQUFrRSx1Q0FBdUMsb0RBQW9ELDhSQUE4UiwyREFBMkQsZ0RBQWdELDZRQUE2USx3Q0FBd0MsNGlDQUE0aUMsNkVBQTZFLHdIQUF3SCw2Q0FBNkMsNkpBQTZKLG9DQUFvQywyRUFBMkUsd0NBQXdDLG1ZQUFtWSw2QkFBNkIsc0RBQXNELFlBQVksa0VBQWtFLDJCQUEyQix3SEFBd0gsa0NBQWtDLDJCQUEyQixzREFBc0QsK0RBQStELHdEQUF3RCwrU0FBK1MsTUFBTSxxTEFBcUwsTUFBTSxpQ0FBaUMsY0FBYyxNQUFNLGlCQUFpQixvRUFBb0Usa0JBQWtCLGtCQUFrQix1REFBdUQsNENBQTRDLDBHQUEwRyw4Q0FBOEMsa0JBQWtCLG9FQUFvRSwrREFBK0QsY0FBYyxNQUFNLGlCQUFpQix1Q0FBdUMsZ0VBQWdFLGtCQUFrQixRQUFRLG9CQUFvQiwyQ0FBMkMsOFJBQThSLGlEQUFpRCxrQ0FBa0MsY0FBYyxNQUFNLGlCQUFpQiw0Q0FBNEMsMkNBQTJDLGtLQUFrSyw2Q0FBNkMsc0JBQXNCLDhCQUE4Qix3QkFBd0IsRUFBRSxrQkFBa0IsNkVBQTZFLDBCQUEwQiwyTkFBMk4sY0FBYyxnQ0FBZ0MsMFRBQTBULHNDQUFzQyxzQkFBc0IsMkJBQTJCLDBCQUEwQix1S0FBdUssMkJBQTJCLDRCQUE0Qiw2TEFBNkwsOEJBQThCLHdCQUF3QixFQUFFLGtCQUFrQiw2RUFBNkUsNEJBQTRCLGtRQUFrUSxjQUFjLGlEQUFpRCxZQUFZLDhEQUE4RCx1RUFBdUUsOENBQThDLDJNQUEyTSxzQkFBc0Isa0VBQWtFLHVEQUF1RCx1SUFBdUksTUFBTSwrREFBK0QsNEhBQTRILGlDQUFpQyxjQUFjLE1BQU0saUJBQWlCLDhMQUE4TCxNQUFNLHNKQUFzSixNQUFNLHlLQUF5SyxNQUFNLDZNQUE2TSxNQUFNLGtPQUFrTyw4QkFBOEIsa0dBQWtHLE1BQU0sNEdBQTRHLE1BQU0sMkNBQTJDLHNEQUFzRCxnRkFBZ0YsYUFBYSxtREFBbUQsZ0NBQWdDLE1BQU0sS0FBSyxvQkFBb0IsdUNBQXVDLFFBQVEseUJBQXlCLG1KQUFtSixpQkFBaUIsa0RBQWtELDBCQUEwQix5SEFBeUgsaUNBQWlDLDBCQUEwQixzS0FBc0ssaUNBQWlDLGlEQUFpRCw4Q0FBOEMsa0hBQWtILDJDQUEyQywwQkFBMEIsb0VBQW9FLHlCQUF5QixpQkFBaUIsZ0dBQWdHLE1BQU0sNERBQTRELCtCQUErQixpQ0FBaUMsbUtBQW1LLE1BQU0sTUFBTSwwREFBMEQsa0RBQWtELGFBQWEsMENBQTBDLGNBQWMsd0RBQXdELGtHQUFrRyw2Q0FBNkMsb0dBQW9HLHVEQUF1RCxnRUFBZ0UsMGhCQUEwaEIsTUFBTSw0R0FBNEcsTUFBTSxrR0FBa0csTUFBTSxxREFBcUQsY0FBYyxNQUFNLGlCQUFpQiwrQ0FBK0MsTUFBTSxtRUFBbUUsTUFBTSxzREFBc0Qsa0JBQWtCLFFBQVEscUJBQXFCLHFEQUFxRCxNQUFNLDJFQUEyRSxNQUFNLHlFQUF5RSxNQUFNLHVGQUF1RixNQUFNLG1GQUFtRixzQkFBc0IsbUVBQW1FLDhJQUE4SSxzQkFBc0IsaUJBQWlCLCtCQUErQixNQUFNLHFDQUFxQyxNQUFNLGVBQWUsbUJBQW1CLGdDQUFnQywyUEFBMlAsT0FBTyxjQUFjLHlCQUF5QixVQUFVLGlCQUFpQix5TEFBeUwsMkJBQTJCLHVCQUF1QixrQkFBa0IsMkRBQTJELHVHQUF1Ryw0QkFBNEIsNkNBQTZDLDRCQUE0QixzQkFBc0IsMkVBQTJFLGtEQUFrRCxhQUFhLDJFQUEyRSwrQkFBK0IsaURBQWlELHFCQUFxQixvRUFBb0UsdVNBQXVTLCtDQUErQyx1RkFBdUYsaUVBQWlFLCtGQUErRiw2Q0FBNkMsZ2VBQWdlLG1GQUFtRix5S0FBeUssaUVBQWlFLG1HQUFtRyxrRUFBa0UsNkJBQTZCLDZDQUE2QyxnTEFBZ0wsYUFBYSx3REFBd0Qsb0dBQW9HLCtLQUErSyx1RUFBdUUseUJBQXlCLDZEQUE2RCwwR0FBMEcsd0NBQXdDLGtCQUFrQixZQUFZLGtOQUFrTixnVEFBZ1QsYUFBYSxtRUFBbUUsNkNBQTZDLDhIQUE4SCwrREFBK0Qsb0RBQW9ELDJJQUEySSwwQkFBMEIsMERBQTBELG1hQUFtYSxNQUFNLHdIQUF3SCxLQUFLLDhDQUE4QyxFQUFFLCtDQUErQyxvSkFBb0osZ0lBQWdJLDBEQUEwRCwrRkFBK0YsZ0hBQWdILHdEQUF3RCwyUkFBMlIsK0RBQStELGtQQUFrUCxFQUFFLGlHQUFpRyxxR0FBcUcsb0JBQW9CLGtEQUFrRCxtRkFBbUYsZUFBZSxpQkFBaUIsOEZBQThGLDJHQUEyRyxvSEFBb0gsc0NBQXNDLG1HQUFtRyw2Q0FBNkMsaVJBQWlSLDBDQUEwQywySUFBMkkscURBQXFELG9HQUFvRyxxY0FBcWMsZ01BQWdNLCtDQUErQyw0SUFBNEkscUNBQXFDLGdJQUFnSSwrQ0FBK0Msa0RBQWtELFlBQVksNERBQTRELGNBQWMsb0RBQW9ELDJDQUEyQyx1REFBdUQsa0JBQWtCLDZYQUE2WCxpR0FBaUcsbUhBQW1ILDhMQUE4TCwyQ0FBMkMsdUdBQXVHLG9RQUFvUSxVQUFVLHVDQUF1Qyx1REFBdUQsd0NBQXdDLE1BQU0sc0VBQXNFLHdOQUF3TixnR0FBZ0csc1FBQXNRLG1MQUFtTCxrRUFBa0UseUZBQXlGLDhEQUE4RCx1Q0FBdUMsaURBQWlELGdHQUFnRyw2QkFBNkIsZ0NBQWdDLDBCQUEwQix3RkFBd0YsNkJBQTZCLGtCQUFrQix1REFBdUQsZ0VBQWdFLDZCQUE2Qix1Q0FBdUMsNEVBQTRFLHdCQUF3QixxSkFBcUosaURBQWlELG9DQUFvQyxZQUFZLGlDQUFpQyx1YUFBdWEsa0NBQWtDLDBCQUEwQixzTkFBc04scUNBQXFDLDBCQUEwQiwrQkFBK0Isc0NBQXNDLDZEQUE2RCxrR0FBa0csZ0NBQWdDLFlBQVksNE1BQTRNLG9DQUFvQyx5QkFBeUIsMEdBQTBHLGVBQWUsTUFBTSxvQ0FBb0MsbUxBQW1MLE1BQU0seUZBQXlGLHFEQUFxRCxvU0FBb1MsMGFBQTBhLHFDQUFxQyxnQ0FBZ0MsNENBQTRDLHlFQUF5RSxpQkFBaUIsbUNBQW1DLGFBQWEsOERBQThELGdGQUFnRixXQUFXLHlCQUF5QixxRkFBcUYsbURBQW1ELHFEQUFxRCxlQUFlLGlDQUFpQywyWkFBMlosa0ZBQWtGLDRWQUE0Vix5Q0FBeUMsaURBQWlELHFKQUFxSiwyQkFBMkIsY0FBYztBQUN4cmtELHFCQUFxQiw0RkFBNEYsa0NBQWtDLHVCQUF1QixFQUFFLDJCQUEyQixpQ0FBaUMsMEJBQTBCLGdDQUFnQyxzQ0FBc0MsU0FBUyxFQUFFLHlCQUF5QixhQUFhLHdPQUF3TyxTQUFTLEdBQUcsNERBQTRELGdDQUFnQyw0VEFBNFQseURBQXlELCtDQUErQyxtQ0FBbUMsd0JBQXdCLEVBQUUsa0JBQWtCLDBHQUEwRyw4REFBOEQsaUdBQWlHLDJFQUEyRSw4REFBOEQsZ0VBQWdFLGd1QkFBZ3VCLGdNQUFnTSxpQ0FBaUMsNlpBQTZaLDBIQUEwSCxvT0FBb08sNEtBQTRLLHNPQUFzTywrSEFBK0gscUNBQXFDLDBDQUEwQywyQkFBMkIsbUpBQW1KLHNKQUFzSixva0JBQW9rQixzQ0FBc0MsZ0NBQWdDLDBIQUEwSCxrQkFBa0IsNElBQTRJLGlDQUFpQyw2SEFBNkgsZ0VBQWdFLGtIQUFrSCxtbUJBQW1tQix3REFBd0QsNEZBQTRGLHdaQUF3WiwrREFBK0QsOEZBQThGLCtGQUErRixNQUFNLGdGQUFnRix3TUFBd00sMEJBQTBCLHVXQUF1VyxtQkFBbUIsd0NBQXdDLHdCQUF3QixjQUFjLE1BQU0sa0JBQWtCLHVDQUF1QyxXQUFXLGdEQUFnRCxtQkFBbUIsc0JBQXNCLGNBQWMsTUFBTSxrQkFBa0IsZ0VBQWdFLHdGQUF3Rix5QkFBeUIsaUJBQWlCLEVBQUUsa0JBQWtCLDBGQUEwRixlQUFlLHVVQUF1VSxhQUFhLG9DQUFvQyxpREFBaUQsMFlBQTBZLCtEQUErRCx5TUFBeU0sNENBQTRDLDBCQUEwQiw2YkFBNmIsK0JBQStCLDBDQUEwQywwQkFBMEIsa1JBQWtSLDJCQUEyQiwwQ0FBMEMsMEJBQTBCLHdHQUF3RyxzQkFBc0IsaUNBQWlDLG9DQUFvQywwQ0FBMEMsaUNBQWlDLHlEQUF5RCxpQ0FBaUMsNEJBQTRCLHFGQUFxRiw0Q0FBNEMsaUVBQWlFLGdDQUFnQyx5Q0FBeUMsMEJBQTBCLHdCQUF3QixnREFBZ0QsMEVBQTBFLGdEQUFnRCxrQkFBa0IsK0JBQStCLDhCQUE4QiwyTUFBMk0seUNBQXlDLGdDQUFnQyw0QkFBNEIscUNBQXFDLGdDQUFnQyw2S0FBNkssd0NBQXdDLEtBQUssS0FBSywrQkFBK0Isb0xBQW9MLGNBQWMsTUFBTSxtSUFBbUksMkZBQTJGLG1DQUFtQyxzSUFBc0ksNkJBQTZCLGtEQUFrRCxnQ0FBZ0Msb0NBQW9DLEtBQUssNkJBQTZCLHdDQUF3QyxpQ0FBaUMsb0NBQW9DLEtBQUssNkJBQTZCLG9FQUFvRSw4QkFBOEIsMk9BQTJPLHVCQUF1QiwwQkFBMEIsZ0RBQWdELG1DQUFtQywrQkFBK0Isb0NBQW9DLDZFQUE2RSw4Q0FBOEMsa0RBQWtELG1FQUFtRSw0SEFBNEgsVUFBVSx3QkFBd0IsOEJBQThCLCtCQUErQiw4R0FBOEcsZ0NBQWdDLCtLQUErSyx1QkFBdUIsK0JBQStCLHlCQUF5QixxQ0FBcUMsNkJBQTZCLHdoQkFBd2hCLG1DQUFtQyxnQ0FBZ0MsS0FBSyxLQUFLLDRCQUE0Qix1REFBdUQsV0FBVyxzQ0FBc0MsMEJBQTBCLGlKQUFpSixpRUFBaUUsNEJBQTRCLG9CQUFvQixPQUFPLDJCQUEyQixvSEFBb0gsOENBQThDLG1HQUFtRyw0Q0FBNEMsd0RBQXdELDhDQUE4QyxpSEFBaUgsdUZBQXVGLHdDQUF3Qyw0RUFBNEUsa1ZBQWtWLHlDQUF5Qyw4R0FBOEcsNENBQTRDLCtCQUErQixnQ0FBZ0MsK0dBQStHLHNCQUFzQiw0Q0FBNEMsZUFBZSxvTEFBb0wsaW9DQUFpb0MsNEVBQTRFLDI4RkFBMjhGLGdFQUFnRSxTQUFTLG9CQUFvQixxQkFBcUIscUJBQXFCLDZEQUE2RCx5ZEFBeWQsb0VBQW9FLG9DQUFvQywrS0FBK0ssd0RBQXdELHFHQUFxRyxzREFBc0QsNkJBQTZCLDZCQUE2QixrQkFBa0Isc0JBQXNCLGdFQUFnRSwyQkFBMkIseURBQXlELDZEQUE2RCw2QkFBNkIsNkJBQTZCLGlCQUFpQiwyQkFBMkIsZ0hBQWdILHlEQUF5RCw4REFBOEQsMkRBQTJELHFGQUFxRix5REFBeUQsd0VBQXdFLHdEQUF3RCw0RkFBNEYseUNBQXlDLDBEQUEwRCxlQUFlLEtBQUsseUJBQXlCLG9MQUFvTCwyQ0FBMkMsbUpBQW1KLG9DQUFvQyxxZEFBcWQsMENBQTBDLGNBQWMsTUFBTSxpQkFBaUIsd0ZBQXdGLHdDQUF3QyxtQ0FBbUMsZUFBZSxnQ0FBZ0MsZ0lBQWdJLHdDQUF3QyxLQUFLLDBEQUEwRCxJQUFJLG9DQUFvQywwUkFBMFIseUNBQXlDLG9CQUFvQiwrRUFBK0Usa0JBQWtCLDBDQUEwQyxpQkFBaUIsaUNBQWlDLGtCQUFrQixnT0FBZ08sMkJBQTJCLGtEQUFrRCw0R0FBNEcsd0RBQXdELG9HQUFvRyx3REFBd0Qsb0JBQW9CLG1CQUFtQixpQkFBaUIseU9BQXlPLGdCQUFnQiwrRUFBK0UsV0FBVyxvQ0FBb0MsbU9BQW1PLHdEQUF3RCxvQkFBb0Isa0JBQWtCLDhDQUE4QyxpQkFBaUIsV0FBVyxnREFBZ0Qsb0JBQW9CLGtCQUFrQixpQ0FBaUMsMERBQTBELG1DQUFtQyxpQkFBaUIsV0FBVyw4Q0FBOEMsa0JBQWtCLHVNQUF1TSxtQ0FBbUMsV0FBVyw0Q0FBNEMseVJBQXlSLHVEQUF1RCx1RkFBdUYsK0NBQStDLHVCQUF1Qiw0RUFBNEUsaURBQWlELDZCQUE2QixrREFBa0QsaUJBQWlCLDBCQUEwQix3REFBd0QsdUJBQXVCLGtIQUFrSCwyQ0FBMkMsa0JBQWtCLG9DQUFvQywrSUFBK0ksT0FBTyxnQ0FBZ0MseUNBQXlDLDJDQUEyQyx1RUFBdUUsMkNBQTJDLFdBQVcsb0RBQW9ELHlFQUF5RSxpRUFBaUUsMkNBQTJDLDhEQUE4RCxVQUFVLFdBQVcscURBQXFELGlGQUFpRixxTUFBcU0sb0RBQW9ELGlGQUFpRixvTUFBb00sMENBQTBDLG1TQUFtUyw2Q0FBNkMsb0JBQW9CLHdDQUF3Qyx5QkFBeUIsZ0ZBQWdGLHlDQUF5QyxpQkFBaUIsV0FBVywwQ0FBMEMsbUJBQW1CLGtHQUFrRyx3Q0FBd0MsV0FBVywrQ0FBK0Msb1RBQW9ULDhDQUE4QyxvQkFBb0Isa0JBQWtCLGlEQUFpRCxpQkFBaUIsV0FBVyxvQ0FBb0MsOEdBQThHLDZDQUE2Qyx1QkFBdUIsOFFBQThRLDZDQUE2Qyx1QkFBdUIsNkVBQTZFLGtFQUFrRSw2QkFBNkIsa0RBQWtELG1CQUFtQiwyQ0FBMkMsNEJBQTRCLHNDQUFzQywrQkFBK0IsMEVBQTBFLDZCQUE2QixpR0FBaUcsb0RBQW9ELFVBQVUsMEhBQTBILGdFQUFnRSxXQUFXLDhDQUE4Qyw2R0FBNkcsdUJBQXVCLDBGQUEwRiw2Q0FBNkMscUJBQXFCLHVCQUF1QixtQkFBbUIsb0VBQW9FLHdDQUF3QyxVQUFVLFdBQVcsb0RBQW9ELHVCQUF1Qiw4RUFBOEUsb0VBQW9FLHdJQUF3SSxzQ0FBc0MsV0FBVyw4REFBOEQsb0JBQW9CLDZEQUE2RCwrQkFBK0IsK0NBQStDLGdDQUFnQyw2RUFBNkUseUVBQXlFLHNDQUFzQyw0RUFBNEUsV0FBVywyRUFBMkUsK0tBQStLLDJFQUEyRSx5RkFBeUYsbURBQW1ELFNBQVMsNkJBQTZCLG1EQUFtRCw4REFBOEQsbUNBQW1DLG9EQUFvRCxTQUFTLDZCQUE2QixvREFBb0QsOERBQThELG1DQUFtQyw4REFBOEQsbURBQW1ELDhDQUE4QyxrQkFBa0Isd0VBQXdFLDZDQUE2QyxXQUFXLHdDQUF3QyxLQUFLLGdDQUFnQyxFQUFFLDRCQUE0QixtREFBbUQsNkJBQTZCLDJLQUEySyx5Q0FBeUMsb0JBQW9CLGtCQUFrQiwrQ0FBK0Msa0JBQWtCLHlCQUF5QixvR0FBb0csaUJBQWlCLHVCQUF1Qiw4REFBOEQsMkNBQTJDLG9CQUFvQixnREFBZ0QsZ0VBQWdFLGtDQUFrQyxzREFBc0QsaUJBQWlCLDBGQUEwRixrREFBa0QsdUJBQXVCLHFGQUFxRixpREFBaUQsb0JBQW9CLG1CQUFtQixvREFBb0QsOERBQThELFdBQVcsNkNBQTZDLHlCQUF5Qix5QkFBeUIsbUNBQW1DLGtFQUFrRSwwQkFBMEIseUNBQXlDLHlCQUF5Qix5QkFBeUIsK0JBQStCLHVFQUF1RSwwQkFBMEIseURBQXlELHFDQUFxQywwQkFBMEIscUNBQXFDLDBCQUEwQixxSEFBcUgsMkJBQTJCLFVBQVUsV0FBVywwQ0FBMEMsdUJBQXVCLGlHQUFpRyxxREFBcUQsb0JBQW9CLHFCQUFxQixZQUFZLFNBQVMsS0FBSyx1QkFBdUIsNkNBQTZDLHVFQUF1RSxXQUFXLGtCQUFrQixnTUFBZ00sdUJBQXVCLGtEQUFrRCw4VkFBOFYseUJBQXlCLG9DQUFvQyxxREFBcUQsa0JBQWtCLFFBQVEsZ0JBQWdCLDhCQUE4QixRQUFRLDJDQUEyQyxFQUFFLDJCQUEyQiw0Q0FBNEMsMEJBQTBCLGlDQUFpQyw0TUFBNE0sd0RBQXdELDJDQUEyQyw4QkFBOEIsbUhBQW1ILGtDQUFrQyx5Q0FBeUMsd0NBQXdDLDJDQUEyQyxpQ0FBaUMsaUNBQWlDLGdIQUFnSCxrR0FBa0csMkJBQTJCLGNBQWMsMERBQTBELDREQUE0RCw4SEFBOEgseUNBQXlDLHlIQUF5SCwyQ0FBMkMsc0NBQXNDLDJJQUEySSwwQkFBMEIsVUFBVSwyQkFBMkIsRUFBRSx1Q0FBdUMsV0FBVyw0QkFBNEIsTUFBTSwyREFBMkQsd0dBQXdHLE1BQU0sa0RBQWtELGdDQUFnQyxNQUFNLGdDQUFnQyxNQUFNLG1CQUFtQixNQUFNLDhGQUE4RixtQkFBbUIsb0NBQW9DLDJFQUEyRSx1QkFBdUIsNkRBQTZELDhCQUE4QiwyQ0FBMkMsaURBQWlELDRDQUE0QyxtSkFBbUosZ0NBQWdDLDJDQUEyQyw2SEFBNkgsOENBQThDLDhGQUE4RiwrTUFBK00sdUNBQXVDLDJDQUEyQyxnQkFBZ0IsaUNBQWlDLDRDQUE0QyxtREFBbUQsb0VBQW9FLDZHQUE2RyxnQ0FBZ0MsMkNBQTJDLGtGQUFrRix1Q0FBdUMsMkNBQTJDLDBVQUEwVSxvQ0FBb0Msa0RBQWtELDZhQUE2YSxzQ0FBc0MsMkNBQTJDLDBPQUEwTyxtQ0FBbUMseUNBQXlDLG9CQUFvQiwyQ0FBMkMsY0FBYyw0Q0FBNEMsZ0VBQWdFLGNBQWMsb0JBQW9CLDhDQUE4QyxxREFBcUQsd0NBQXdDLHdDQUF3QyxxQ0FBcUMsYUFBYSxvQ0FBb0MseURBQXlELHlEQUF5RCx1REFBdUQsd0RBQXdELDJEQUEyRCwyREFBMkQsMERBQTBELDBEQUEwRCx3REFBd0QsNENBQTRDLG9EQUFvRCxtREFBbUQseURBQXlELGdDQUFnQyx3REFBd0QsdURBQXVELG1HQUFtRyw2Q0FBNkMsc0NBQXNDLDREQUE0RCxzREFBc0Qsc0NBQXNDLHFEQUFxRCxrREFBa0Qsb0RBQW9ELHlDQUF5Qyw4Q0FBOEMsOEVBQThFLGtDQUFrQyxpREFBaUQsa0RBQWtELDJCQUEyQix3Q0FBd0MsRUFBRSxpRkFBaUYsbUNBQW1DLDhGQUE4RixNQUFNLHVCQUF1QixxQ0FBcUMsaUNBQWlDLG1CQUFtQixZQUFZLDZDQUE2QyxXQUFXLCtDQUErQyw4Q0FBOEMsK0VBQStFLG1HQUFtRyxlQUFlLElBQUksaUNBQWlDLE9BQU8sc0NBQXNDLG9CQUFvQixHQUFHLGdFQUFnRSxxTkFBcU4sSUFBSSxnQkFBZ0Isb0RBQW9ELCtCQUErQixrVkFBa1YsU0FBUywyR0FBMkcscUNBQXFDLGdNQUFnTSxxQ0FBcUMsbUJBQW1CLFlBQVksNEJBQTRCLHlWQUF5Vix3Q0FBd0MsbUJBQW1CLHNGQUFzRiwrREFBK0QsdURBQXVELHlDQUF5QyxxRUFBcUUsMkRBQTJELHlKQUF5SixxYUFBcWEsK0RBQStELHdDQUF3Qyw4QkFBOEIsNENBQTRDLGFBQWEsOENBQThDLHVCQUF1QiwyQ0FBMkMsNEdBQTRHLDhCQUE4QixhQUFhLGdDQUFnQyxzQ0FBc0MsRUFBRSxtRkFBbUYsdUNBQXVDLG9CQUFvQix1TkFBdU4sd0ZBQXdGLGlDQUFpQyxxQ0FBcUMsMEJBQTBCLElBQUksc0JBQXNCLFdBQVcsdUVBQXVFLGVBQWUsNEJBQTRCLG1EQUFtRCwyRkFBMkYsK0JBQStCLDhCQUE4QixvQ0FBb0MsRUFBRSw0RUFBNEUsdUNBQXVDLHVWQUF1Vix3R0FBd0csdUJBQXVCLGlFQUFpRSx5REFBeUQ7QUFDdnJsRCxFQUFFLE1BQU0scUNBQXFDLE1BQU0sc0ZBQXNGLG1CQUFtQix5Q0FBeUMsS0FBSywyQkFBMkIsd0NBQXdDLG9CQUFvQixNQUFNLHNDQUFzQyxRQUFRLDZGQUE2RixpREFBaUQsMENBQTBDLHlDQUF5QyxzQkFBc0I7QUFDNWtCLEVBQUUscUJBQXFCLHlEQUF5RCwwREFBMEQsb0JBQW9CLG9CQUFvQixxQkFBcUIscUJBQXFCLHlEQUF5RCxtRkFBbUYsK0JBQStCLHVCQUF1QiwwRkFBMEYsMkJBQTJCLDRGQUE0Rix1V0FBdVcsa0RBQWtELCtCQUErQiw0Q0FBNEMscUZBQXFGLDBCQUEwQixvQkFBb0IsZ0ZBQWdGLDJCQUEyQixFQUFFLGdDQUFnQyx1REFBdUQsaUJBQWlCLGdFQUFnRSxzQkFBc0Isa0lBQWtJLDZCQUE2Qix1S0FBdUssV0FBVyxVQUFVLG1EQUFtRCx5QkFBeUIsMENBQTBDLHNGQUFzRixnQkFBZ0IsY0FBYyxxUEFBcVAsRUFBRSxrQkFBa0IscUNBQVUsRUFBRSx3REFBd0QsZ0JBQWdCLDQ1R0FBNDVHLEVBQUUsc0JBQXNCLHFDQUFVLEVBQUUsd0RBQXdELDBHQUEwRyw2QkFBNkIsZ0NBQWdDLG9DQUFvQyxjQUFjLGtOQUFrTix3QkFBd0IsV0FBVyxvRUFBb0UsY0FBYyw0Q0FBNEMsY0FBYyx5Q0FBeUMsOENBQThDLDJFQUEyRSxxREFBcUQsMkJBQTJCLHlJQUF5SSxXQUFXLHFCQUFxQixrQ0FBa0MsZ0JBQWdCLHFDQUFxQyx5QkFBeUIsb0RBQW9ELHVGQUF1RiwwSEFBMEgsaUNBQWlDLDBCQUEwQixtQkFBbUIsZUFBZSxxR0FBcUcsWUFBWSxpREFBaUQsZUFBZSxrQ0FBa0MsdUNBQVksMkJBQTJCLCtCQUErQixFQUFFLGlDQUFpQyx1Q0FBdUMsdUNBQVksa1ZBQWtWLDZCQUE2QixzQkFBc0IsZ0JBQWdCLGdCQUFnQiwrQkFBK0IsTUFBTSxFQUFFLGdGQUFnRix1Q0FBdUMsV0FBVyxnT0FBZ08sa0dBQWtHLE1BQU0saUhBQWlILFdBQVcsV0FBVywyQkFBMkIsS0FBSyxvSUFBb0ksK0JBQStCLDJDQUEyQztBQUM1OVI7QUFDQSxvR0FBb0csc0JBQXNCLGlDQUFpQyxNQUFNLEVBQUUsbUZBQW1GLHVDQUF1QyxvQkFBb0IsOE5BQThOLG9GQUFvRixpQkFBaUIsa0RBQWtELHFFQUFxRSx3QkFBd0IsS0FBSyx1Q0FBdUMsRUFBRSxvQ0FBb0MsR0FBRyx3T0FBd08sTUFBTSxTQUFTLHVDQUF1QyxlQUFlLHNCQUFzQix3Q0FBd0Msc0NBQXNDLHNFQUFzRSxzQkFBc0IsMEJBQTBCLHNLQUFzSywwQkFBMEIsK0VBQStFLDZEQUE2RCw2Q0FBNkMsMEdBQTBHLHVCQUF1Qix1Q0FBdUMsbUZBQW1GLDRHQUE0RyxpQkFBaUIsRUFBRSxnREFBZ0QscUhBQXFILFlBQVksMEJBQTBCLGtCQUFrQiw0REFBNEQsOElBQThJLGdFQUFnRSxpR0FBaUcsMkJBQTJCLDhEQUE4RCw2RUFBNkUsK0JBQStCLDBCQUEwQixzTEFBc0wscUJBQXFCLDBCQUEwQiw2U0FBNlMsNkNBQTZDLDZDQUE2QyxtQkFBbUIseUNBQXlDLG1DQUFtQyxnREFBZ0QsaURBQWlELDhJQUE4SSw2Q0FBNkMsa0ZBQWtGLHlJQUF5SSxzQ0FBc0MsOElBQThJLGdDQUFnQyxlQUFlLG1CQUFtQixtR0FBbUcsaUVBQWlFLGVBQWUsMERBQTBELE1BQU0scURBQXFELE1BQU0sa0VBQWtFLE1BQU0sMkJBQTJCLG1OQUFtTiwrREFBK0QsOFNBQThTLGdCQUFnQix1Q0FBdUMsZ0NBQWdDLG1CQUFtQiwrQ0FBK0MsOERBQThELHNDQUFzQyxvSkFBb0osZ0JBQWdCLDhCQUE4QixpREFBaUQseUNBQXlDLHVEQUF1RCw4REFBOEQsNkVBQTZFLGdKQUFnSix3QkFBd0IseUJBQXlCLGlDQUFpQyx1S0FBdUssK0hBQStILDhDQUE4QyxFQUFFLGlCQUFpQixxQ0FBVSxFQUFFLHVFQUF1RSxtREFBbUQsMkNBQTJDLGlDQUFpQyxJQUFJLEtBQUssZUFBZSx1RUFBdUUsU0FBUyxnQ0FBZ0MsNERBQTRELG9DQUFvQyxLQUFLLDJCQUEyQiwyQkFBMkIsS0FBSywyQ0FBMkMsS0FBSyxrQkFBa0IsVUFBVSw0Q0FBNEMsU0FBUyxFQUFFLFlBQVksc0JBQXNCLHNCQUFzQiwwREFBMEQseUJBQXlCLGlFQUFpRSx1Q0FBdUMsdUVBQXVFLG9FQUFvRSxFQUFFLHlDQUF5Qyx1QkFBdUIscUJBQXFCLDJCQUEyQixxQ0FBcUMsa0NBQWtDLHNEQUFzRDtBQUNoeFA7QUFDQSx3Q0FBd0MsU0FBUyxxS0FBcUssc0NBQXNDLCtEQUErRCwyS0FBMks7QUFDdGUsOEdBQThHLGtEQUFrRCx3SkFBd0osc0VBQXNFLHlCQUF5QixnQ0FBZ0MsaUJBQWlCLG9EQUFvRCxzSUFBc0ksMkdBQTJHLDBCQUEwQix3Q0FBd0MsaUJBQWlCLDhFQUE4RSxvRUFBb0UsZ0VBQWdFLGtDQUFrQyxFQUFFLGlCQUFpQixVQUFVLDhDQUE4QywyU0FBMlMsNkhBQTZILHdCQUF3QixFQUFFLHdDQUF3Qyx5REFBeUQ7QUFDbHFELGNBQWMsa0lBQWtJLG1DQUFtQyxFQUFFLHFDQUFxQyxxQ0FBVSxFQUFFLCtHQUErRyw4YkFBOGIsdUNBQXVDLGNBQWMsaUNBQWlDLGlCQUFpQixVQUFVLDBCQUEwQiw0Q0FBNEMsa0NBQWtDLG1EQUFtRCxrQkFBa0Isa0JBQWtCLDBCQUEwQiwwQkFBMEIsa0JBQWtCLHFCQUFxQixtQkFBbUIsZUFBZSxlQUFlLGlCQUFpQixtQkFBbUIscUJBQXFCLG1CQUFtQix1QkFBdUIsK0JBQStCLFdBQVcsb0NBQW9DLFdBQVcsc0NBQXNDLGlCQUFpQixzQ0FBc0MsaUJBQWlCLDhCQUE4QixxREFBcUQsaUNBQWlDLGlCQUFpQiwrQkFBK0IsaUJBQWlCLDJCQUEyQixpQkFBaUIsMkJBQTJCLGlCQUFpQiw2QkFBNkIsaUJBQWlCLCtCQUErQixpQkFBaUIsaUNBQWlDLGlCQUFpQiwrQkFBK0IsaUJBQWlCLG1DQUFtQyxpQkFBaUIsdUNBQXVDLG1QQUFtUCxtQkFBbUIsRUFBRSxrQ0FBa0MscUNBQVUsRUFBRSw0R0FBNEcsTUFBbUMsRUFBRSxDQUFreEosR0FBRyxFQUFFLHNCQUFzQixxQ0FBVSxFQUFFLGdHQUFnRyxLQUFtQyxtREFBbUQsQ0FBOEMsR0FBRyxFQUFFLGtDQUFrQyxtQ0FBUSw2QkFBNkIsZ0lBQWdJLEVBQUUsc0JBQXNCLGtDQUFPLHVCQUF1QixrSkFBa0oscUJBQXFCLGtDQUFPLHVCQUF1Qiw0QkFBNEIsZ0VBQWdFLHFCQUFxQixrQ0FBTyxzQkFBc0IsdUJBQXVCLHVCQUF1QixvQkFBb0IsZ0NBQWdDLDZEQUE2RCxpRkFBaUYsbURBQW1ELDZDQUE2QyxzREFBc0QsVUFBVSxxR0FBcUcsT0FBTyxLQUFLLHlCQUF5QjtBQUNwblIsS0FBSyx1Q0FBdUMsT0FBTyxrQ0FBa0M7QUFDckYsR0FBRyxHQUFHLDJDQUEyQyxzQkFBc0Isd0NBQXdDLCtHQUErRztBQUM5TjtBQUNBLHdCQUF3QixxQ0FBcUM7QUFDN0Qsd0NBQXdDLFNBQVMsbUJBQW1CLFFBQVEsUUFBUSxXQUFXLGdCQUFnQixrQkFBa0IseUJBQXlCLFlBQVksaUJBQWlCLGtCQUFrQixzQ0FBc0Msa0ZBQWtGLDRDQUE0QyxnRUFBZ0Usd0NBQXdDLGdDQUFnQywwQkFBMEIsZUFBZSxxQkFBcUIsVUFBVSwyQ0FBMkMsNkVBQTZFLHlDQUF5Qyw2QkFBNkIsMkJBQTJCLG9DQUFvQyx1Q0FBdUMsZ0NBQWdDLCtFQUErRSxpSkFBaUosYUFBYSxxQkFBcUIsa0NBQU8sc0JBQXNCLDBEQUEwRCwrREFBK0Qsb0RBQW9ELHNEQUFzRCx1QkFBdUIsNERBQTRELGlCQUFpQiwrREFBK0QsZ0dBQWdHLCtIQUErSCx1QkFBdUIsZ0NBQWdDLFlBQVksK0JBQStCLFlBQVkscURBQXFELDJCQUEyQixjQUFjLE1BQU0saUJBQWlCLDBCQUEwQiwyQkFBMkIsMkJBQTJCLCtGQUErRiwyQ0FBMkMscUNBQXFDLGtIQUFrSCwwQ0FBMEMsb0NBQW9DLGtEQUFrRCx1Q0FBdUMsNkRBQTZELHlDQUF5QyxxQ0FBcUMsZ0NBQWdDLGtCQUFrQixRQUFRLG1CQUFtQixvQ0FBb0MsK0JBQStCLGNBQWMsTUFBTSxpQkFBaUIsMkJBQTJCLG9DQUFvQyx3Q0FBd0MsaUNBQWlDLGNBQWMsTUFBTSxpQkFBaUIsMEJBQTBCLG1GQUFtRixrREFBa0QsMkRBQTJELHlDQUF5QyxzQ0FBc0MsaUhBQWlILHFDQUFxQyxxRUFBcUUsOERBQThELDJEQUEyRCxzQ0FBc0MsdUpBQXVKLDREQUE0RCxzRkFBc0YsaUNBQWlDLHVFQUF1RSw4QkFBOEIsNkNBQTZDLDhCQUE4Qiw2Q0FBNkMsbUNBQW1DLGNBQWMsTUFBTSxpQkFBaUIsY0FBYyw0Q0FBNEMsa0VBQWtFLGtDQUFrQyxpQ0FBaUMsNkJBQTZCLGNBQWMsTUFBTSxrQkFBa0IsdUJBQXVCLDJEQUEyRCxpQ0FBaUMsNkhBQTZILDRCQUE0QiwrQkFBK0IscUNBQXFDLHNDQUFzQyxzQ0FBc0MsK0JBQStCLGNBQWMsTUFBTSxnQkFBZ0IsNEJBQTRCLHVDQUF1QyxpQ0FBaUMsY0FBYyxNQUFNLGlCQUFpQiwySkFBMkosNEJBQTRCLHdEQUF3RCx5Q0FBeUMsK0JBQStCLGNBQWMsTUFBTSxnQkFBZ0IsK0JBQStCLDBDQUEwQyxpQ0FBaUMsY0FBYyxNQUFNLGlCQUFpQixjQUFjLDhFQUE4RSw0Q0FBNEMsa0NBQWtDLGNBQWMsTUFBTSxpQkFBaUIsMkJBQTJCLHlDQUF5Qyw2QkFBNkIsY0FBYyxNQUFNLGtCQUFrQixhQUFhLHNDQUFzQyxrQkFBa0IsUUFBUSxxQkFBcUIsMkJBQTJCLDRCQUE0QiwrREFBK0QsbUNBQW1DLGlFQUFpRSw2REFBNkQscUVBQXFFLDBEQUEwRCwrQ0FBK0Msb0dBQW9HLDJEQUEyRCxpRkFBaUYsY0FBYyxNQUFNLGdCQUFnQiwwQkFBMEIsMENBQTBDLGlGQUFpRiw4RUFBOEUsMEtBQTBLLDhDQUE4QyxvRUFBb0UsMkNBQTJDLGlDQUFpQyxjQUFjLE1BQU0saUJBQWlCLFlBQVksaUNBQWlDLDBDQUEwQyxpQ0FBaUMsbUhBQW1ILGtEQUFrRCw0REFBNEQsK0RBQStELDJCQUEyQiwrQkFBK0IsdUdBQXVHLG1DQUFtQywyQkFBMkIsY0FBYyxNQUFNLGdCQUFnQixhQUFhLHdEQUF3RCwyRUFBMkUseUJBQXlCLDBCQUEwQiw0REFBNEQsK0NBQStDLHFEQUFxRCxvQ0FBb0Msb0ZBQW9GLGtDQUFrQyxjQUFjLHNCQUFzQiw4QkFBOEIsZ0RBQWdELDhCQUE4QixpREFBaUQsMENBQTBDLHlDQUF5QyxRQUFRLGNBQWMsbUVBQW1FLHFCQUFxQixtQ0FBbUMsUUFBUSxjQUFjLGVBQWUsa0JBQWtCLGlDQUFpQyx3QkFBd0Isc0JBQXNCLGlCQUFpQiwyQkFBMkIsc0JBQXNCLGtCQUFrQixnSEFBZ0gsbURBQW1ELHVFQUF1RSwyQkFBMkIsK0JBQStCLHdCQUF3Qiw4QkFBOEIsaUJBQWlCLDJCQUEyQix1QkFBdUIsY0FBYyxnR0FBZ0csZ0JBQWdCLHlDQUF5QyxrQkFBa0IsZUFBZSwwRUFBMEUsdUVBQXVFLGlDQUFpQyw2QkFBNkIsc0dBQXNHLCtGQUErRixpQ0FBaUMsUUFBUSxjQUFjLG1EQUFtRCxpQkFBaUIsK0JBQStCLFFBQVEsY0FBYyxpREFBaUQsZ0JBQWdCLHFDQUFxQyx3QkFBd0Isb0RBQW9ELDhDQUE4Qyx3RkFBd0Ysb0RBQW9ELG9EQUFvRCxrREFBa0Qsc0RBQXNELG9EQUFvRCxxQkFBcUIsdUJBQXVCLDhCQUE4QixNQUFNLElBQUksaUJBQWlCLGlCQUFpQixjQUFjLGVBQWUsTUFBTSxzQkFBc0IseUJBQXlCLHNCQUFzQiwyQkFBMkIsMERBQTBELHlEQUF5RCxRQUFRLHFCQUFxQiw2QkFBNkIsSUFBSSxRQUFRLGtCQUFrQixPQUFPLFFBQVEsY0FBYyxpQkFBaUIsd0JBQXdCLGlCQUFpQixFQUFFLElBQUksTUFBTSxjQUFjLGFBQWEsMkNBQTJDLElBQUksc0RBQStCLHNCQUFzQix5Q0FBa0IsZUFBZSxPQUFPLHlDQUFrQix1Q0FBdUMseUJBQXlCLGlCQUFpQixFQUFFLElBQUksTUFBTSxjQUFjLGNBQWMsNkNBQTZDLElBQUksc0RBQStCLHVCQUF1Qix5Q0FBa0IsZ0JBQWdCLE9BQU8seUNBQWtCLHlDQUF5QywwREFBMEQsdUJBQXVCLFdBQVcsWUFBWSxXQUFXLElBQUksZ0RBQWdELFdBQVcsWUFBWSxJQUFJLDJDQUEyQyxJQUFJLGdCQUFnQixjQUFjLGFBQWEsaUZBQWlGLDREQUE0RCwyQkFBMkIsdUJBQXVCLGlCQUFpQixFQUFFLElBQUksV0FBVyxjQUFjLDJCQUEyQix5Q0FBa0Isc0RBQXNELHVDQUF1QyxPQUFPLHNEQUErQixnQkFBZ0IseUNBQWtCLHFDQUFxQyx5Q0FBa0IsZ0JBQWdCLHdEQUF3RCxJQUFJLGFBQWEsbUJBQW1CLFdBQVcsY0FBYyw2Q0FBNkMsdURBQXVELE9BQU8seUNBQWtCLGdDQUFnQyxPQUFPLHNEQUErQixlQUFlLHlDQUFrQiwrQkFBK0IseUNBQWtCLGVBQWUsMENBQTBDLElBQUksZ0RBQWdELDJDQUEyQyxxREFBcUQscURBQXFELG9FQUFvRSxtREFBbUQscUJBQXFCLFNBQVMsa0JBQWtCLFlBQVksMkJBQTJCLGdDQUFnQyx5QkFBeUIsdURBQXVELCtCQUErQixtREFBbUQsa0RBQWtELCtEQUErRCxtQ0FBbUMsMEhBQTBILElBQUksR0FBRyxpQkFBaUIsS0FBSyxvQ0FBb0Msb0NBQW9DLDZDQUE2QyxxQkFBcUIsNkRBQTZELDJCQUEyQixjQUFjLHlKQUF5SiwrQkFBK0Isa0NBQU8saUNBQWlDLGtDQUFPLHNCQUFzQixtQ0FBbUMsaUVBQWlFLHNCQUFzQiwwQkFBMEIsMEZBQTBGLG1CQUFtQixnQkFBZ0IsZ0hBQWdILGNBQWMsaUNBQWlDLDhHQUE4RyxpQ0FBaUMsb0RBQW9ELGdDQUFnQyxvR0FBb0csK0NBQStDLE1BQU0seURBQXlELG9EQUFvRCxpR0FBaUcsMkdBQTJHLG9DQUFvQyw4Q0FBOEMsZ0NBQWdDLE1BQU0sbUJBQW1CLFlBQVksOEJBQThCO0FBQ3R1ZixxRkFBcUYsb0NBQW9DLGdHQUFnRyxvQkFBcUIsMEVBQTBFLDhCQUE4Qix3REFBd0QsMklBQTJJLEdBQUcsR0FBRywyQkFBMkIseUNBQXlDLHlDQUF5QyxRQUFRLHFCQUFxQixzQ0FBc0MsUUFBUSxxQkFBcUIsK0VBQStFLFFBQVEsOERBQThELHFEQUFxRCxRQUFRLG9DQUFvQyxtQkFBbUIsY0FBUSw0Q0FBNEMsOEZBQThGLG9GQUFvRixXQUFXLHlEQUF5RCxzR0FBc0csOEdBQThHLCtDQUErQyw4Q0FBOEMsV0FBVyx1REFBdUQsZ0lBQWdJLDRJQUE0SSwrSEFBK0gsK0hBQStILHVEQUF1RCwrREFBK0QsbUVBQW1FLCtEQUErRCxxQ0FBcUMsMENBQTBDLDZCQUE2QiwyQ0FBMkMsb0VBQW9FLHdDQUF3QyxxQkFBcUIsdURBQXVELGtDQUFrQyx3QkFBd0IsNkNBQTZDLGdCQUFnQixnRUFBZ0UseUlBQXlJLGlFQUFpRSxpRUFBaUUsSUFBSSxvQkFBOEIsdUhBQXVILG1GQUFtRiw0Q0FBNEMsb0JBQW9CLHlEQUF5RCwwREFBMEQsdUJBQXVCLGNBQXdCLG9GQUFvRix5Q0FBeUMsRUFBRSx1Q0FBdUMsY0FBUSxrSEFBa0gsdUJBQXVCLGdDQUFnQztBQUMxOEgsc0JBQXNCLG1CQUFtQixZQUFZLDRFQUE0RSw0S0FBNEsseUZBQXlGLCtEQUErRCxvSEFBb0gsbURBQW1ELGtDQUFrQyxxQkFBcUIsd0JBQWMsMktBQTJLLEVBQUUsOERBQThELEtBQUssY0FBYyxLQUFLO0FBQ3A3Qiw4Q0FBOEMsc0JBQXNCLDZCQUE2QixHQUFHLHdEQUF3RCx1Q0FBdUMsNkJBQTZCLEdBQUcseUVBQXlFLGtDQUFrQyxvRkFBb0YsMkJBQTJCLHVDQUF1QyxLQUFLLFNBQVMsRUFBRSxzQ0FBc0MsNkNBQTZDLEdBQUcsd0JBQWMsY0FBYywrRUFBK0UsMERBQTBELGNBQWMsSUFBSSwrQ0FBK0MseURBQXlELG9FQUFvRSxLQUFLLDZCQUE2QixHQUFHLDBGQUEwRixrSUFBa0k7QUFDOXFDO0FBQ0EsR0FBRyx5REFBeUQsTUFBTSxtSUFBbUksS0FBSyxtUEFBbVAsMkVBQTJFLDRFQUE0RSxvSUFBb0ksNFNBQTRTLG9DQUFvQyx3Q0FBd0MsZ0RBQWdELHVCQUF1QixxSEFBcUgsaUNBQWlDLHlGQUF5RixxR0FBcUcsd0NBQXdDLDJDQUEyQyxnQ0FBZ0MsZUFBZSwrQkFBK0Isc0dBQXNHLDRCQUE0QjtBQUM5d0QsOEJBQThCLG9FQUFvRTtBQUNsRyxvQkFBb0IsZ0RBQWdELHlCQUF5QiwySEFBMkgseURBQXlELDBCQUEwQixrRUFBa0Usc0ZBQXNGLCtHQUErRywrSUFBK0ksNklBQTZJLDhJQUE4SSwwREFBMEQsK0xBQStMLDZGQUE2RixvQkFBb0IsdUpBQXVKLDRXQUE0Vyx3SEFBd0gsNENBQTRDLGlFQUFpRSx3QkFBd0IsbUNBQW1DLHdEQUF3RCxvQ0FBb0MsbURBQW1ELEVBQUUsa0VBQWtFLDhDQUE4QyxtWUFBbVksd0lBQXdJO0FBQ3IzRiwrTkFBK04saUJBQWlCO0FBQ2hQO0FBQ0E7QUFDQSxvRUFBb0Usd0hBQXdILFdBQVcsNkpBQTZKLGFBQWEsb0JBQW9CLElBQUksR0FBRyxxREFBcUQsWUFBWSxnQ0FBZ0MsaUJBQWlCLGFBQWEsK0JBQStCLDhCQUE4Qiw0QkFBNEIsMkRBQTJELHlEQUF5RCx5SkFBeUosc0VBQXNFLCtUQUErVCx5QkFBeUIsSUFBSSwrQkFBK0IsK0NBQStDLCtCQUErQixFQUFFLHFCQUFxQiw0QkFBNEIsZUFBZSxLQUFLLG1DQUFtQyxhQUFhLHVFQUF1RSxLQUFLLG1FQUFtRSxLQUFLLGFBQWEsa0RBQWtELGtEQUFrRCwyR0FBMkcscUZBQXFGLHVGQUF1RixrRUFBa0UsbUNBQW1DLHlDQUF5QywyQ0FBMkMsa0VBQWtFLHkxQkFBeTFCLG9GQUFvRixhQUFhLG9MQUFvTCwrREFBK0Qsb0RBQW9ELGlDQUFpQyw4QkFBOEIsNENBQTRDLElBQUksS0FBSyxNQUFNLGdFQUFnRSxtQ0FBbUMseUNBQWtCLGlDQUFpQyw2Q0FBNkMsSUFBSSxLQUFLLGlCQUFpQixZQUFZLG9EQUFvRCxFQUFFLHNCQUFzQiw2REFBNkQsT0FBTyx5Q0FBa0Isd0JBQXdCLG9DQUFvQyx1REFBdUQsVUFBVSwwQkFBMEIsSUFBSSxzREFBK0Isb0JBQW9CLHlDQUFrQixhQUFhLE9BQU8seUNBQWtCLHVCQUF1QixvQ0FBb0Msd0dBQXdHLGtDQUFrQyxrRUFBa0Usd0NBQXdDLGtDQUFrQyxrRUFBa0UsdUNBQXVDLE9BQU8seUNBQWtCLGlCQUFpQiw2Q0FBNkMsa0NBQWtDLGtEQUFrRCxpR0FBaUcsTUFBTSxpQkFBaUIsSUFBSSx5REFBeUQsSUFBSSxpQkFBaUIsK0JBQStCLDhGQUE4RixtR0FBbUcsUUFBUSw4REFBOEQsbUJBQW1CLG9CQUFvQix5Q0FBa0IsdUNBQXVDLG1GQUFtRixJQUFJLFVBQVUsK0JBQStCLE9BQU8seUNBQWtCLDhDQUE4QyxPQUFPLHlDQUFrQiw2Q0FBNkMsaUNBQWlDLHlDQUFrQixvREFBb0QsK0ZBQStGLCtDQUErQyxFQUFFLFFBQVEsOENBQThDLDJHQUEyRyxJQUFJLDhCQUE4QixpRUFBaUUsaUVBQWlFLHFFQUFxRSw4REFBOEQsU0FBUyxrQkFBa0IsWUFBWSwrQ0FBK0Msb0RBQW9ELHFDQUFxQyxpQkFBaUIsY0FBYyw4QkFBOEIsMERBQTBELHlCQUF5QixXQUFXLElBQUksU0FBUyxhQUFhLEVBQUUsbUJBQW1CLHNCQUFzQixLQUFLLDBCQUEwQix3Q0FBd0Msc0JBQXNCLHVCQUF1QixvREFBb0Qsb0RBQW9ELHFDQUFxQyxpQkFBaUIsaUdBQWlHLHNCQUFzQix1QkFBdUIseUNBQXlDO0FBQ250TyxHQUFHLHdCQUF3Qix3QkFBd0IscUNBQXFDLEVBQUUsUUFBUSxrREFBa0QsK0JBQStCLGtFQUFrRSwrQkFBK0IsNEJBQTRCLHNDQUFzQyx1REFBdUQscUNBQXFDLGlEQUFpRCwyQ0FBMkMsYUFBYSxtQ0FBbUMsaUNBQWlDLGlDQUFpQyx1Q0FBdUMscUNBQXFDLCtCQUErQix3REFBd0QsSUFBSSxpQkFBaUIsc0JBQXNCLEtBQUssaUNBQWlDLGFBQWEseURBQXlELE1BQU0sY0FBYyxJQUFJLE1BQU0sY0FBYyx3RkFBd0YsTUFBTSxlQUFlLElBQUksV0FBVyxjQUFjLHlJQUF5SSxNQUFNLGFBQWEsSUFBSSxNQUFNLGNBQWMsb0ZBQW9GLE1BQU0sK0dBQStHLE1BQU0sc0JBQXNCLDJEQUEyRCxFQUFFLHlCQUF5QixJQUFJLEVBQUUscUVBQXFFLDBEQUEwRCxFQUFFLHNDQUFzQyxJQUFJLFVBQVUsZUFBZSx5RkFBeUYsNkpBQTZKLGlCQUFpQiw0REFBNEQsRUFBRSwyQ0FBMkMsK0NBQStDLElBQUksSUFBSSxpREFBaUQsZUFBZSxpQkFBaUIsaUJBQWlCLEVBQUUsU0FBUyxJQUFJLE1BQU0sY0FBYyxzQkFBc0IsbUhBQW1ILEVBQUUsc0JBQXNCLG1CQUFtQixHQUFHLEdBQUcsOENBQThDLElBQUksbUJBQW1CLHdDQUF3QyxzQkFBc0IsNkdBQTZHLEVBQUUsMkNBQTJDLDhCQUE4Qix1Q0FBdUMsSUFBSSxtQkFBbUIsK0JBQStCLCtFQUErRSxFQUFFLDRCQUE0QixFQUFFLHNCQUFzQixrSkFBa0osRUFBRSxzQkFBc0IsMkNBQTJDLEVBQUUsNEJBQTRCLGVBQWUsRUFBRSx5RUFBeUUsMkNBQTJDLEVBQUUsNEJBQTRCLDhCQUE4Qix1Q0FBdUMsSUFBSSxtQkFBbUIsc0JBQXNCLCtFQUErRSxFQUFFLDRCQUE0QixFQUFFLHNCQUFzQixpSkFBaUosRUFBRSxzQkFBc0IsZ0RBQWdELEVBQUUsd0JBQXdCLFVBQVUsR0FBRyxJQUFJLHlCQUF5QixXQUFXLEdBQUcsR0FBRyx3REFBd0Qsc0JBQXNCLG9IQUFvSCxFQUFFLDRDQUE0QyxJQUFJLHFDQUFxQyx3Q0FBd0Msb0JBQW9CLGlGQUFpRiw2RUFBNkUsc0JBQXNCLGlFQUFpRSxFQUFFLDBDQUEwQyxJQUFJLGtCQUFrQix5Q0FBeUMsK0NBQStDLHFEQUFxRCx1Q0FBdUMsc0RBQXNELEVBQUUsMkRBQTJELHFEQUFxRCxxQ0FBcUMsd0RBQXdELDhCQUE4QixpREFBaUQsR0FBRyxTQUFTLGtCQUFrQixzQkFBc0IsaURBQWlELEVBQUUsbUNBQW1DLElBQUksS0FBSywwQkFBMEIsMEJBQTBCLElBQUksa0JBQWtCLCtGQUErRixJQUFJLG1CQUFtQixrQ0FBa0MsdUJBQXVCLDhDQUF1QixVQUFVLHlDQUFrQixlQUFlLHlDQUFrQixhQUFhLHlDQUFrQixRQUFRLFlBQVksSUFBSSxXQUFXLHVEQUF1RCxnR0FBZ0cseUNBQWtCLGlCQUFpQixxQkFBcUIsU0FBUyxrQkFBa0IsWUFBWSxrQ0FBa0MsVUFBVSxJQUFJLHlIQUF5SCxtQkFBbUIsb0JBQW9CLHlDQUFrQix1Q0FBdUMsSUFBSSxVQUFVLHNEQUFzRCxPQUFPLHlDQUFrQiw4Q0FBOEMsT0FBTyx5Q0FBa0IsNkNBQTZDLGtEQUFrRCxzQkFBc0IsRUFBRSwrREFBK0QsSUFBSSxVQUFVLFdBQVcsd0hBQXdILDREQUE0RCxJQUFJLFFBQVEsaURBQWlELHNDQUFzQyxJQUFJLGFBQWEsMEJBQTBCLGlEQUFpRCwyREFBMkQsK0RBQStELDhCQUE4Qiw2R0FBNkcsK0RBQStELGVBQWUseURBQXlELDBFQUEwRSw4RkFBOEYsNERBQTRELDZEQUE2RCxJQUFJLFFBQVEsZ0JBQWdCLGFBQWEsMEJBQTBCLGlEQUFpRCwyREFBMkQsK0RBQStELDhCQUE4QixpRkFBaUYsK0RBQStELGVBQWUsZ0RBQWdELDZEQUE2RCx5QkFBeUIsMERBQTBELDZDQUE2Qyw0RUFBNEUsRUFBRSx3Q0FBd0MsaUNBQWlDLENBQUMsZ0NBQVMsMEZBQTBGLG1CQUFtQiw0Q0FBcUIsNkJBQTZCLHVDQUF1QyxxQ0FBcUMsS0FBSyw2QkFBVSxtRUFBbUUsS0FBSyw2QkFBVSwwREFBMEQsaURBQWlELDhCQUE4QixvQ0FBb0MsRUFBRSxnQ0FBZ0MsY0FBYyxJQUFJLEtBQUsseUJBQXlCLHVDQUF1QyxJQUFJLDRFQUE0RSxLQUFLLGtCQUFrQix1QkFBdUIsbUJBQW1CLFFBQVEsaUVBQWlFLEtBQUssR0FBRyxFQUFFLGFBQWEsaVRBQWlULHdDQUF3QyxHQUFHLHdCQUFjLFFBQVEsK0dBQStHLEVBQUUsUUFBUSwyQkFBMkIsbUVBQW1FLCtCQUErQiwwQkFBMEIsK0NBQU0sbURBQW1ELDJDQUEyQyxZQUFZLGdCQUFnQixNQUFNLGlDQUFpQywrQ0FBTSw0Q0FBNEMsR0FBRyxjQUF3Qiw2QkFBNkIsK0NBQU0sa0RBQWtELHVDQUF1QywrQ0FBTSw2SEFBNkgsbUJBQTZCLE9BQU8scUJBQXFCLG1JQUFtSSx3QkFBd0IsMkRBQTJELHFEQUFxRCxzQkFBc0Isd0RBQXdELHVDQUFnQix3QkFBd0IsdUNBQWdCLGdYQUFnWCxVQUFVLDJCQUEyQix3Q0FBd0MsYUFBYSxPQUFPLGNBQXdCLGNBQWMsaU1BQWlNLHlCQUF5QixPQUFPLCtDQUErQyxpQ0FBaUMsaURBQWlELFVBQVUsR0FBRyxjQUFjO0FBQzluWCwwQ0FBMEMsRUFBRSxZQUFZLEdBQUcsY0FBYyw4REFBOEQseUJBQXlCLGdHQUFnRyw0QkFBNEIsNkJBQVUsbUVBQW1FLDZCQUFVLE1BQU0sZ0dBQWdHLDRCQUE0QixJQUFJLHNDQUFzQywyQkFBMkIsMkZBQTJGLHVCQUFhLG1DQUFtQyxrQ0FBa0MsWUFBWSw2Q0FBTSxrREFBa0Qsb0RBQVMsTUFBTSxVQUFVLElBQUksZ0JBQWdCLFNBQVMsYUFBYSxtQ0FBZ0IsRUFBRSxpQ0FBaUMsSUFBSSxFQUFFLG9CQUFvQixxQkFBcUIsYUFBYSw4Q0FBOEMscUxBQXFMLHdDQUF3Qyw0Q0FBNEMsb0tBQW9LLE9BQU8sK0RBQW9CLCtCQUErQixnQkFBZ0IsTUFBTSxPQUFPLFVBQVUsNENBQTRDLGtEQUFFLDhDQUE4QyxrQ0FBZTs7QUFFbGlEOzs7QUN2REE7QUFDcEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbWl0by1mb3Jtcy9idWxtYS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQHN0b3J5Ym9vaytyZWFjdEA4LjYuMTJfQHN0b3J5Ym9vayt0ZXN0QDguNi4xMl9zdG9yeWJvb2tAOC42LjEyX3ByZXR0aWVyQDMuNS4zX19fcmVhY3QtXzBkY2UyOTkwZmQ5MWE5NTgyYjM5ODVhNjc4NTk5N2NhL25vZGVfbW9kdWxlcy9Ac3Rvcnlib29rL3JlYWN0L2Rpc3QvY2h1bmstRVdJVTZMSFQubWpzPzNlZDIiLCJ3ZWJwYWNrOi8vQG1pdG8tZm9ybXMvYnVsbWEvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BzdG9yeWJvb2srcmVhY3RAOC42LjEyX0BzdG9yeWJvb2srdGVzdEA4LjYuMTJfc3Rvcnlib29rQDguNi4xMl9wcmV0dGllckAzLjUuM19fX3JlYWN0LV8wZGNlMjk5MGZkOTFhOTU4MmIzOTg1YTY3ODU5OTdjYS9ub2RlX21vZHVsZXMvQHN0b3J5Ym9vay9yZWFjdC9kaXN0L2VudHJ5LXByZXZpZXctZG9jcy5tanM/NTMwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2NvbW1vbkpTLCBfX2V4cG9ydCwgX19lc20sIF9fdG9Db21tb25KUywgX190b0VTTSB9IGZyb20gJy4vY2h1bmstWFA1SFlHWFMubWpzJztcbmltcG9ydCB7IGV4dHJhY3RDb21wb25lbnREZXNjcmlwdGlvbiwgZW5oYW5jZUFyZ1R5cGVzLCBTTklQUEVUX1JFTkRFUkVELCBjcmVhdGVTdW1tYXJ5VmFsdWUsIGdldERvY2dlblNlY3Rpb24sIFNvdXJjZVR5cGUsIGhhc0RvY2dlbiwgZXh0cmFjdENvbXBvbmVudFByb3BzLCBUeXBlU3lzdGVtLCBpc1Rvb0xvbmdGb3JEZWZhdWx0VmFsdWVTdW1tYXJ5LCBpc1Rvb0xvbmdGb3JUeXBlU3VtbWFyeSB9IGZyb20gJ3N0b3J5Ym9vay9pbnRlcm5hbC9kb2NzLXRvb2xzJztcbmltcG9ydCAqIGFzIFJlYWN0MiBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3QyX19kZWZhdWx0LCB7IGNyZWF0ZUVsZW1lbnQsIGlzVmFsaWRFbGVtZW50LCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ3N0b3J5Ym9vay9pbnRlcm5hbC9jbGllbnQtbG9nZ2VyJztcbmltcG9ydCB7IGRlZmF1bHREZWNvcmF0ZVN0b3J5LCBhZGRvbnMsIHVzZUVmZmVjdCB9IGZyb20gJ3N0b3J5Ym9vay9pbnRlcm5hbC9wcmV2aWV3LWFwaSc7XG5cbnZhciByZXF1aXJlX3JlYWN0X2lzX3Byb2R1Y3Rpb25fbWluPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1wiKGV4cG9ydHMpe3ZhciBiPXR5cGVvZiBTeW1ib2w9PVwiZnVuY3Rpb25cIiYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtmdW5jdGlvbiB6KGEpe2lmKHR5cGVvZiBhPT1cIm9iamVjdFwiJiZhIT09bnVsbCl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7ZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gdHlwZW9mIGE9PVwib2JqZWN0XCImJmEhPT1udWxsJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O2V4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHR5cGVvZiBhPT1cInN0cmluZ1wifHx0eXBlb2YgYT09XCJmdW5jdGlvblwifHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHx0eXBlb2YgYT09XCJvYmplY3RcIiYmYSE9PW51bGwmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejt9fSk7dmFyIHJlcXVpcmVfcmVhY3RfaXNfZGV2ZWxvcG1lbnQ9X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzXCIoZXhwb3J0cyl7cHJvY2Vzcy5lbnYuTk9ERV9FTlYhPT1cInByb2R1Y3Rpb25cIiYmZnVuY3Rpb24oKXt2YXIgaGFzU3ltYm9sPXR5cGVvZiBTeW1ib2w9PVwiZnVuY3Rpb25cIiYmU3ltYm9sLmZvcixSRUFDVF9FTEVNRU5UX1RZUEU9aGFzU3ltYm9sP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLFJFQUNUX1BPUlRBTF9UWVBFPWhhc1N5bWJvbD9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LFJFQUNUX0ZSQUdNRU5UX1RZUEU9aGFzU3ltYm9sP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFPWhhc1N5bWJvbD9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsUkVBQ1RfUFJPRklMRVJfVFlQRT1oYXNTeW1ib2w/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LFJFQUNUX1BST1ZJREVSX1RZUEU9aGFzU3ltYm9sP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxSRUFDVF9DT05URVhUX1RZUEU9aGFzU3ltYm9sP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLFJFQUNUX0FTWU5DX01PREVfVFlQRT1oYXNTeW1ib2w/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsUkVBQ1RfQ09OQ1VSUkVOVF9NT0RFX1RZUEU9aGFzU3ltYm9sP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRT1oYXNTeW1ib2w/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLFJFQUNUX1NVU1BFTlNFX1RZUEU9aGFzU3ltYm9sP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEU9aGFzU3ltYm9sP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLFJFQUNUX01FTU9fVFlQRT1oYXNTeW1ib2w/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsUkVBQ1RfTEFaWV9UWVBFPWhhc1N5bWJvbD9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixSRUFDVF9CTE9DS19UWVBFPWhhc1N5bWJvbD9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsUkVBQ1RfRlVOREFNRU5UQUxfVFlQRT1oYXNTeW1ib2w/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LFJFQUNUX1JFU1BPTkRFUl9UWVBFPWhhc1N5bWJvbD9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LFJFQUNUX1NDT1BFX1RZUEU9aGFzU3ltYm9sP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtmdW5jdGlvbiBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSl7cmV0dXJuIHR5cGVvZiB0eXBlPT1cInN0cmluZ1wifHx0eXBlb2YgdHlwZT09XCJmdW5jdGlvblwifHx0eXBlPT09UkVBQ1RfRlJBR01FTlRfVFlQRXx8dHlwZT09PVJFQUNUX0NPTkNVUlJFTlRfTU9ERV9UWVBFfHx0eXBlPT09UkVBQ1RfUFJPRklMRVJfVFlQRXx8dHlwZT09PVJFQUNUX1NUUklDVF9NT0RFX1RZUEV8fHR5cGU9PT1SRUFDVF9TVVNQRU5TRV9UWVBFfHx0eXBlPT09UkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFfHx0eXBlb2YgdHlwZT09XCJvYmplY3RcIiYmdHlwZSE9PW51bGwmJih0eXBlLiQkdHlwZW9mPT09UkVBQ1RfTEFaWV9UWVBFfHx0eXBlLiQkdHlwZW9mPT09UkVBQ1RfTUVNT19UWVBFfHx0eXBlLiQkdHlwZW9mPT09UkVBQ1RfUFJPVklERVJfVFlQRXx8dHlwZS4kJHR5cGVvZj09PVJFQUNUX0NPTlRFWFRfVFlQRXx8dHlwZS4kJHR5cGVvZj09PVJFQUNUX0ZPUldBUkRfUkVGX1RZUEV8fHR5cGUuJCR0eXBlb2Y9PT1SRUFDVF9GVU5EQU1FTlRBTF9UWVBFfHx0eXBlLiQkdHlwZW9mPT09UkVBQ1RfUkVTUE9OREVSX1RZUEV8fHR5cGUuJCR0eXBlb2Y9PT1SRUFDVF9TQ09QRV9UWVBFfHx0eXBlLiQkdHlwZW9mPT09UkVBQ1RfQkxPQ0tfVFlQRSl9ZnVuY3Rpb24gdHlwZU9mKG9iamVjdCl7aWYodHlwZW9mIG9iamVjdD09XCJvYmplY3RcIiYmb2JqZWN0IT09bnVsbCl7dmFyICQkdHlwZW9mPW9iamVjdC4kJHR5cGVvZjtzd2l0Y2goJCR0eXBlb2Ype2Nhc2UgUkVBQ1RfRUxFTUVOVF9UWVBFOnZhciB0eXBlPW9iamVjdC50eXBlO3N3aXRjaCh0eXBlKXtjYXNlIFJFQUNUX0FTWU5DX01PREVfVFlQRTpjYXNlIFJFQUNUX0NPTkNVUlJFTlRfTU9ERV9UWVBFOmNhc2UgUkVBQ1RfRlJBR01FTlRfVFlQRTpjYXNlIFJFQUNUX1BST0ZJTEVSX1RZUEU6Y2FzZSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFOmNhc2UgUkVBQ1RfU1VTUEVOU0VfVFlQRTpyZXR1cm4gdHlwZTtkZWZhdWx0OnZhciAkJHR5cGVvZlR5cGU9dHlwZSYmdHlwZS4kJHR5cGVvZjtzd2l0Y2goJCR0eXBlb2ZUeXBlKXtjYXNlIFJFQUNUX0NPTlRFWFRfVFlQRTpjYXNlIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU6Y2FzZSBSRUFDVF9MQVpZX1RZUEU6Y2FzZSBSRUFDVF9NRU1PX1RZUEU6Y2FzZSBSRUFDVF9QUk9WSURFUl9UWVBFOnJldHVybiAkJHR5cGVvZlR5cGU7ZGVmYXVsdDpyZXR1cm4gJCR0eXBlb2Z9fWNhc2UgUkVBQ1RfUE9SVEFMX1RZUEU6cmV0dXJuICQkdHlwZW9mfX19dmFyIEFzeW5jTW9kZT1SRUFDVF9BU1lOQ19NT0RFX1RZUEUsQ29uY3VycmVudE1vZGU9UkVBQ1RfQ09OQ1VSUkVOVF9NT0RFX1RZUEUsQ29udGV4dENvbnN1bWVyPVJFQUNUX0NPTlRFWFRfVFlQRSxDb250ZXh0UHJvdmlkZXI9UkVBQ1RfUFJPVklERVJfVFlQRSxFbGVtZW50PVJFQUNUX0VMRU1FTlRfVFlQRSxGb3J3YXJkUmVmMj1SRUFDVF9GT1JXQVJEX1JFRl9UWVBFLEZyYWdtZW50Mj1SRUFDVF9GUkFHTUVOVF9UWVBFLExhenk9UkVBQ1RfTEFaWV9UWVBFLE1lbW8yPVJFQUNUX01FTU9fVFlQRSxQb3J0YWw9UkVBQ1RfUE9SVEFMX1RZUEUsUHJvZmlsZXI9UkVBQ1RfUFJPRklMRVJfVFlQRSxTdHJpY3RNb2RlPVJFQUNUX1NUUklDVF9NT0RFX1RZUEUsU3VzcGVuc2U9UkVBQ1RfU1VTUEVOU0VfVFlQRSxoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0FzeW5jTW9kZT0hMTtmdW5jdGlvbiBpc0FzeW5jTW9kZShvYmplY3Qpe3JldHVybiBoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0FzeW5jTW9kZXx8KGhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlPSEwLGNvbnNvbGUud2FybihcIlRoZSBSZWFjdElzLmlzQXN5bmNNb2RlKCkgYWxpYXMgaGFzIGJlZW4gZGVwcmVjYXRlZCwgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBSZWFjdCAxNysuIFVwZGF0ZSB5b3VyIGNvZGUgdG8gdXNlIFJlYWN0SXMuaXNDb25jdXJyZW50TW9kZSgpIGluc3RlYWQuIEl0IGhhcyB0aGUgZXhhY3Qgc2FtZSBBUEkuXCIpKSxpc0NvbmN1cnJlbnRNb2RlKG9iamVjdCl8fHR5cGVPZihvYmplY3QpPT09UkVBQ1RfQVNZTkNfTU9ERV9UWVBFfWZ1bmN0aW9uIGlzQ29uY3VycmVudE1vZGUob2JqZWN0KXtyZXR1cm4gdHlwZU9mKG9iamVjdCk9PT1SRUFDVF9DT05DVVJSRU5UX01PREVfVFlQRX1mdW5jdGlvbiBpc0NvbnRleHRDb25zdW1lcjIob2JqZWN0KXtyZXR1cm4gdHlwZU9mKG9iamVjdCk9PT1SRUFDVF9DT05URVhUX1RZUEV9ZnVuY3Rpb24gaXNDb250ZXh0UHJvdmlkZXIyKG9iamVjdCl7cmV0dXJuIHR5cGVPZihvYmplY3QpPT09UkVBQ1RfUFJPVklERVJfVFlQRX1mdW5jdGlvbiBpc0VsZW1lbnQob2JqZWN0KXtyZXR1cm4gdHlwZW9mIG9iamVjdD09XCJvYmplY3RcIiYmb2JqZWN0IT09bnVsbCYmb2JqZWN0LiQkdHlwZW9mPT09UkVBQ1RfRUxFTUVOVF9UWVBFfWZ1bmN0aW9uIGlzRm9yd2FyZFJlZjMob2JqZWN0KXtyZXR1cm4gdHlwZU9mKG9iamVjdCk9PT1SRUFDVF9GT1JXQVJEX1JFRl9UWVBFfWZ1bmN0aW9uIGlzRnJhZ21lbnQob2JqZWN0KXtyZXR1cm4gdHlwZU9mKG9iamVjdCk9PT1SRUFDVF9GUkFHTUVOVF9UWVBFfWZ1bmN0aW9uIGlzTGF6eTIob2JqZWN0KXtyZXR1cm4gdHlwZU9mKG9iamVjdCk9PT1SRUFDVF9MQVpZX1RZUEV9ZnVuY3Rpb24gaXNNZW1vMyhvYmplY3Qpe3JldHVybiB0eXBlT2Yob2JqZWN0KT09PVJFQUNUX01FTU9fVFlQRX1mdW5jdGlvbiBpc1BvcnRhbChvYmplY3Qpe3JldHVybiB0eXBlT2Yob2JqZWN0KT09PVJFQUNUX1BPUlRBTF9UWVBFfWZ1bmN0aW9uIGlzUHJvZmlsZXIyKG9iamVjdCl7cmV0dXJuIHR5cGVPZihvYmplY3QpPT09UkVBQ1RfUFJPRklMRVJfVFlQRX1mdW5jdGlvbiBpc1N0cmljdE1vZGUyKG9iamVjdCl7cmV0dXJuIHR5cGVPZihvYmplY3QpPT09UkVBQ1RfU1RSSUNUX01PREVfVFlQRX1mdW5jdGlvbiBpc1N1c3BlbnNlMihvYmplY3Qpe3JldHVybiB0eXBlT2Yob2JqZWN0KT09PVJFQUNUX1NVU1BFTlNFX1RZUEV9ZXhwb3J0cy5Bc3luY01vZGU9QXN5bmNNb2RlLGV4cG9ydHMuQ29uY3VycmVudE1vZGU9Q29uY3VycmVudE1vZGUsZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9Q29udGV4dENvbnN1bWVyLGV4cG9ydHMuQ29udGV4dFByb3ZpZGVyPUNvbnRleHRQcm92aWRlcixleHBvcnRzLkVsZW1lbnQ9RWxlbWVudCxleHBvcnRzLkZvcndhcmRSZWY9Rm9yd2FyZFJlZjIsZXhwb3J0cy5GcmFnbWVudD1GcmFnbWVudDIsZXhwb3J0cy5MYXp5PUxhenksZXhwb3J0cy5NZW1vPU1lbW8yLGV4cG9ydHMuUG9ydGFsPVBvcnRhbCxleHBvcnRzLlByb2ZpbGVyPVByb2ZpbGVyLGV4cG9ydHMuU3RyaWN0TW9kZT1TdHJpY3RNb2RlLGV4cG9ydHMuU3VzcGVuc2U9U3VzcGVuc2UsZXhwb3J0cy5pc0FzeW5jTW9kZT1pc0FzeW5jTW9kZSxleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9aXNDb25jdXJyZW50TW9kZSxleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWlzQ29udGV4dENvbnN1bWVyMixleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWlzQ29udGV4dFByb3ZpZGVyMixleHBvcnRzLmlzRWxlbWVudD1pc0VsZW1lbnQsZXhwb3J0cy5pc0ZvcndhcmRSZWY9aXNGb3J3YXJkUmVmMyxleHBvcnRzLmlzRnJhZ21lbnQ9aXNGcmFnbWVudCxleHBvcnRzLmlzTGF6eT1pc0xhenkyLGV4cG9ydHMuaXNNZW1vPWlzTWVtbzMsZXhwb3J0cy5pc1BvcnRhbD1pc1BvcnRhbCxleHBvcnRzLmlzUHJvZmlsZXI9aXNQcm9maWxlcjIsZXhwb3J0cy5pc1N0cmljdE1vZGU9aXNTdHJpY3RNb2RlMixleHBvcnRzLmlzU3VzcGVuc2U9aXNTdXNwZW5zZTIsZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9aXNWYWxpZEVsZW1lbnRUeXBlLGV4cG9ydHMudHlwZU9mPXR5cGVPZjt9KCk7fX0pO3ZhciByZXF1aXJlX3JlYWN0X2lzPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzXCIoZXhwb3J0cyxtb2R1bGUpe3Byb2Nlc3MuZW52Lk5PREVfRU5WPT09XCJwcm9kdWN0aW9uXCI/bW9kdWxlLmV4cG9ydHM9cmVxdWlyZV9yZWFjdF9pc19wcm9kdWN0aW9uX21pbigpOm1vZHVsZS5leHBvcnRzPXJlcXVpcmVfcmVhY3RfaXNfZGV2ZWxvcG1lbnQoKTt9fSk7dmFyIHJlcXVpcmVfb2JqZWN0X2Fzc2lnbj1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzXCIoZXhwb3J0cyxtb2R1bGUpe3ZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHM9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyxoYXNPd25Qcm9wZXJ0eTI9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxwcm9wSXNFbnVtZXJhYmxlPU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7ZnVuY3Rpb24gdG9PYmplY3QodmFsKXtpZih2YWw9PW51bGwpdGhyb3cgbmV3IFR5cGVFcnJvcihcIk9iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkXCIpO3JldHVybiBPYmplY3QodmFsKX1mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKXt0cnl7aWYoIU9iamVjdC5hc3NpZ24pcmV0dXJuICExO3ZhciB0ZXN0MT1uZXcgU3RyaW5nKFwiYWJjXCIpO2lmKHRlc3QxWzVdPVwiZGVcIixPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF09PT1cIjVcIilyZXR1cm4gITE7Zm9yKHZhciB0ZXN0Mj17fSxpPTA7aTwxMDtpKyspdGVzdDJbXCJfXCIrU3RyaW5nLmZyb21DaGFyQ29kZShpKV09aTt2YXIgb3JkZXIyPU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24obil7cmV0dXJuIHRlc3QyW25dfSk7aWYob3JkZXIyLmpvaW4oXCJcIikhPT1cIjAxMjM0NTY3ODlcIilyZXR1cm4gITE7dmFyIHRlc3QzPXt9O3JldHVybiBcImFiY2RlZmdoaWprbG1ub3BxcnN0XCIuc3BsaXQoXCJcIikuZm9yRWFjaChmdW5jdGlvbihsZXR0ZXIpe3Rlc3QzW2xldHRlcl09bGV0dGVyO30pLE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sdGVzdDMpKS5qb2luKFwiXCIpPT09XCJhYmNkZWZnaGlqa2xtbm9wcXJzdFwifWNhdGNoe3JldHVybiAhMX19bW9kdWxlLmV4cG9ydHM9c2hvdWxkVXNlTmF0aXZlKCk/T2JqZWN0LmFzc2lnbjpmdW5jdGlvbih0YXJnZXQsc291cmNlKXtmb3IodmFyIGZyb20sdG89dG9PYmplY3QodGFyZ2V0KSxzeW1ib2xzLHM9MTtzPGFyZ3VtZW50cy5sZW5ndGg7cysrKXtmcm9tPU9iamVjdChhcmd1bWVudHNbc10pO2Zvcih2YXIga2V5IGluIGZyb20paGFzT3duUHJvcGVydHkyLmNhbGwoZnJvbSxrZXkpJiYodG9ba2V5XT1mcm9tW2tleV0pO2lmKGdldE93blByb3BlcnR5U3ltYm9scyl7c3ltYm9scz1nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7Zm9yKHZhciBpPTA7aTxzeW1ib2xzLmxlbmd0aDtpKyspcHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sc3ltYm9sc1tpXSkmJih0b1tzeW1ib2xzW2ldXT1mcm9tW3N5bWJvbHNbaV1dKTt9fXJldHVybiB0b307fX0pO3ZhciByZXF1aXJlX1JlYWN0UHJvcFR5cGVzU2VjcmV0PV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzXCIoZXhwb3J0cyxtb2R1bGUpe3ZhciBSZWFjdFByb3BUeXBlc1NlY3JldD1cIlNFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEXCI7bW9kdWxlLmV4cG9ydHM9UmVhY3RQcm9wVHlwZXNTZWNyZXQ7fX0pO3ZhciByZXF1aXJlX2hhcz1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9oYXMuanNcIihleHBvcnRzLG1vZHVsZSl7bW9kdWxlLmV4cG9ydHM9RnVuY3Rpb24uY2FsbC5iaW5kKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpO319KTt2YXIgcmVxdWlyZV9jaGVja1Byb3BUeXBlcz1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzXCIoZXhwb3J0cyxtb2R1bGUpe3ZhciBwcmludFdhcm5pbmc9ZnVuY3Rpb24oKXt9O3Byb2Nlc3MuZW52Lk5PREVfRU5WIT09XCJwcm9kdWN0aW9uXCImJihSZWFjdFByb3BUeXBlc1NlY3JldD1yZXF1aXJlX1JlYWN0UHJvcFR5cGVzU2VjcmV0KCksbG9nZ2VkVHlwZUZhaWx1cmVzPXt9LGhhczI9cmVxdWlyZV9oYXMoKSxwcmludFdhcm5pbmc9ZnVuY3Rpb24odGV4dCl7dmFyIG1lc3NhZ2U9XCJXYXJuaW5nOiBcIit0ZXh0O3R5cGVvZiBjb25zb2xlPFwidVwiJiZjb25zb2xlLmVycm9yKG1lc3NhZ2UpO3RyeXt0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSl9Y2F0Y2h7fX0pO3ZhciBSZWFjdFByb3BUeXBlc1NlY3JldCxsb2dnZWRUeXBlRmFpbHVyZXMsaGFzMjtmdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsdmFsdWVzLGxvY2F0aW9uLGNvbXBvbmVudE5hbWUsZ2V0U3RhY2spe2lmKHByb2Nlc3MuZW52Lk5PREVfRU5WIT09XCJwcm9kdWN0aW9uXCIpe2Zvcih2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcylpZihoYXMyKHR5cGVTcGVjcyx0eXBlU3BlY05hbWUpKXt2YXIgZXJyb3I7dHJ5e2lmKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSE9XCJmdW5jdGlvblwiKXt2YXIgZXJyPUVycm9yKChjb21wb25lbnROYW1lfHxcIlJlYWN0IGNsYXNzXCIpK1wiOiBcIitsb2NhdGlvbitcIiB0eXBlIGBcIit0eXBlU3BlY05hbWUrXCJgIGlzIGludmFsaWQ7IGl0IG11c3QgYmUgYSBmdW5jdGlvbiwgdXN1YWxseSBmcm9tIHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZSwgYnV0IHJlY2VpdmVkIGBcIit0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0rXCJgLlRoaXMgb2Z0ZW4gaGFwcGVucyBiZWNhdXNlIG9mIHR5cG9zIHN1Y2ggYXMgYFByb3BUeXBlcy5mdW5jdGlvbmAgaW5zdGVhZCBvZiBgUHJvcFR5cGVzLmZ1bmNgLlwiKTt0aHJvdyBlcnIubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIixlcnJ9ZXJyb3I9dHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLHR5cGVTcGVjTmFtZSxjb21wb25lbnROYW1lLGxvY2F0aW9uLG51bGwsUmVhY3RQcm9wVHlwZXNTZWNyZXQpO31jYXRjaChleCl7ZXJyb3I9ZXg7fWlmKGVycm9yJiYhKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpJiZwcmludFdhcm5pbmcoKGNvbXBvbmVudE5hbWV8fFwiUmVhY3QgY2xhc3NcIikrXCI6IHR5cGUgc3BlY2lmaWNhdGlvbiBvZiBcIitsb2NhdGlvbitcIiBgXCIrdHlwZVNwZWNOYW1lK1wiYCBpcyBpbnZhbGlkOyB0aGUgdHlwZSBjaGVja2VyIGZ1bmN0aW9uIG11c3QgcmV0dXJuIGBudWxsYCBvciBhbiBgRXJyb3JgIGJ1dCByZXR1cm5lZCBhIFwiK3R5cGVvZiBlcnJvcitcIi4gWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCBzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuXCIpLGVycm9yIGluc3RhbmNlb2YgRXJyb3ImJiEoZXJyb3IubWVzc2FnZSBpbiBsb2dnZWRUeXBlRmFpbHVyZXMpKXtsb2dnZWRUeXBlRmFpbHVyZXNbZXJyb3IubWVzc2FnZV09ITA7dmFyIHN0YWNrPWdldFN0YWNrP2dldFN0YWNrKCk6XCJcIjtwcmludFdhcm5pbmcoXCJGYWlsZWQgXCIrbG9jYXRpb24rXCIgdHlwZTogXCIrZXJyb3IubWVzc2FnZSsoc3RhY2s/P1wiXCIpKTt9fX19Y2hlY2tQcm9wVHlwZXMucmVzZXRXYXJuaW5nQ2FjaGU9ZnVuY3Rpb24oKXtwcm9jZXNzLmVudi5OT0RFX0VOViE9PVwicHJvZHVjdGlvblwiJiYobG9nZ2VkVHlwZUZhaWx1cmVzPXt9KTt9O21vZHVsZS5leHBvcnRzPWNoZWNrUHJvcFR5cGVzO319KTt2YXIgcmVxdWlyZV9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycz1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzXCIoZXhwb3J0cyxtb2R1bGUpe3ZhciBSZWFjdElzPXJlcXVpcmVfcmVhY3RfaXMoKSxhc3NpZ249cmVxdWlyZV9vYmplY3RfYXNzaWduKCksUmVhY3RQcm9wVHlwZXNTZWNyZXQ9cmVxdWlyZV9SZWFjdFByb3BUeXBlc1NlY3JldCgpLGhhczI9cmVxdWlyZV9oYXMoKSxjaGVja1Byb3BUeXBlcz1yZXF1aXJlX2NoZWNrUHJvcFR5cGVzKCkscHJpbnRXYXJuaW5nPWZ1bmN0aW9uKCl7fTtwcm9jZXNzLmVudi5OT0RFX0VOViE9PVwicHJvZHVjdGlvblwiJiYocHJpbnRXYXJuaW5nPWZ1bmN0aW9uKHRleHQpe3ZhciBtZXNzYWdlPVwiV2FybmluZzogXCIrdGV4dDt0eXBlb2YgY29uc29sZTxcInVcIiYmY29uc29sZS5lcnJvcihtZXNzYWdlKTt0cnl7dGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpfWNhdGNoe319KTtmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsKCl7cmV0dXJuIG51bGx9bW9kdWxlLmV4cG9ydHM9ZnVuY3Rpb24oaXNWYWxpZEVsZW1lbnQ0LHRocm93T25EaXJlY3RBY2Nlc3Mpe3ZhciBJVEVSQVRPUl9TWU1CT0w9dHlwZW9mIFN5bWJvbD09XCJmdW5jdGlvblwiJiZTeW1ib2wuaXRlcmF0b3IsRkFVWF9JVEVSQVRPUl9TWU1CT0w9XCJAQGl0ZXJhdG9yXCI7ZnVuY3Rpb24gZ2V0SXRlcmF0b3JGbihtYXliZUl0ZXJhYmxlKXt2YXIgaXRlcmF0b3JGbj1tYXliZUl0ZXJhYmxlJiYoSVRFUkFUT1JfU1lNQk9MJiZtYXliZUl0ZXJhYmxlW0lURVJBVE9SX1NZTUJPTF18fG1heWJlSXRlcmFibGVbRkFVWF9JVEVSQVRPUl9TWU1CT0xdKTtpZih0eXBlb2YgaXRlcmF0b3JGbj09XCJmdW5jdGlvblwiKXJldHVybiBpdGVyYXRvckZufXZhciBBTk9OWU1PVVM9XCI8PGFub255bW91cz4+XCIsUmVhY3RQcm9wVHlwZXM9e2FycmF5OmNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKFwiYXJyYXlcIiksYmlnaW50OmNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKFwiYmlnaW50XCIpLGJvb2w6Y3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoXCJib29sZWFuXCIpLGZ1bmM6Y3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoXCJmdW5jdGlvblwiKSxudW1iZXI6Y3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoXCJudW1iZXJcIiksb2JqZWN0OmNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKFwib2JqZWN0XCIpLHN0cmluZzpjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcihcInN0cmluZ1wiKSxzeW1ib2w6Y3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoXCJzeW1ib2xcIiksYW55OmNyZWF0ZUFueVR5cGVDaGVja2VyKCksYXJyYXlPZjpjcmVhdGVBcnJheU9mVHlwZUNoZWNrZXIsZWxlbWVudDpjcmVhdGVFbGVtZW50VHlwZUNoZWNrZXIoKSxlbGVtZW50VHlwZTpjcmVhdGVFbGVtZW50VHlwZVR5cGVDaGVja2VyKCksaW5zdGFuY2VPZjpjcmVhdGVJbnN0YW5jZVR5cGVDaGVja2VyLG5vZGU6Y3JlYXRlTm9kZUNoZWNrZXIoKSxvYmplY3RPZjpjcmVhdGVPYmplY3RPZlR5cGVDaGVja2VyLG9uZU9mOmNyZWF0ZUVudW1UeXBlQ2hlY2tlcixvbmVPZlR5cGU6Y3JlYXRlVW5pb25UeXBlQ2hlY2tlcixzaGFwZTpjcmVhdGVTaGFwZVR5cGVDaGVja2VyLGV4YWN0OmNyZWF0ZVN0cmljdFNoYXBlVHlwZUNoZWNrZXJ9O2Z1bmN0aW9uIGlzKHgseSl7cmV0dXJuIHg9PT15P3ghPT0wfHwxL3g9PT0xL3k6eCE9PXgmJnkhPT15fWZ1bmN0aW9uIFByb3BUeXBlRXJyb3IobWVzc2FnZSxkYXRhMil7dGhpcy5tZXNzYWdlPW1lc3NhZ2UsdGhpcy5kYXRhPWRhdGEyJiZ0eXBlb2YgZGF0YTI9PVwib2JqZWN0XCI/ZGF0YTI6e30sdGhpcy5zdGFjaz1cIlwiO31Qcm9wVHlwZUVycm9yLnByb3RvdHlwZT1FcnJvci5wcm90b3R5cGU7ZnVuY3Rpb24gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpe2lmKHByb2Nlc3MuZW52Lk5PREVfRU5WIT09XCJwcm9kdWN0aW9uXCIpdmFyIG1hbnVhbFByb3BUeXBlQ2FsbENhY2hlPXt9LG1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50PTA7ZnVuY3Rpb24gY2hlY2tUeXBlKGlzUmVxdWlyZWQscHJvcHMscHJvcE5hbWUsY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUsc2VjcmV0KXtpZihjb21wb25lbnROYW1lPWNvbXBvbmVudE5hbWV8fEFOT05ZTU9VUyxwcm9wRnVsbE5hbWU9cHJvcEZ1bGxOYW1lfHxwcm9wTmFtZSxzZWNyZXQhPT1SZWFjdFByb3BUeXBlc1NlY3JldCl7aWYodGhyb3dPbkRpcmVjdEFjY2Vzcyl7dmFyIGVycj1uZXcgRXJyb3IoXCJDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiBVc2UgYFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpYCB0byBjYWxsIHRoZW0uIFJlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXNcIik7dGhyb3cgZXJyLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCIsZXJyfWVsc2UgaWYocHJvY2Vzcy5lbnYuTk9ERV9FTlYhPT1cInByb2R1Y3Rpb25cIiYmdHlwZW9mIGNvbnNvbGU8XCJ1XCIpe3ZhciBjYWNoZUtleT1jb21wb25lbnROYW1lK1wiOlwiK3Byb3BOYW1lOyFtYW51YWxQcm9wVHlwZUNhbGxDYWNoZVtjYWNoZUtleV0mJm1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50PDMmJihwcmludFdhcm5pbmcoXCJZb3UgYXJlIG1hbnVhbGx5IGNhbGxpbmcgYSBSZWFjdC5Qcm9wVHlwZXMgdmFsaWRhdGlvbiBmdW5jdGlvbiBmb3IgdGhlIGBcIitwcm9wRnVsbE5hbWUrXCJgIHByb3Agb24gYFwiK2NvbXBvbmVudE5hbWUrXCJgLiBUaGlzIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgdGhyb3cgaW4gdGhlIHN0YW5kYWxvbmUgYHByb3AtdHlwZXNgIHBhY2thZ2UuIFlvdSBtYXkgYmUgc2VlaW5nIHRoaXMgd2FybmluZyBkdWUgdG8gYSB0aGlyZC1wYXJ0eSBQcm9wVHlwZXMgbGlicmFyeS4gU2VlIGh0dHBzOi8vZmIubWUvcmVhY3Qtd2FybmluZy1kb250LWNhbGwtcHJvcHR5cGVzIGZvciBkZXRhaWxzLlwiKSxtYW51YWxQcm9wVHlwZUNhbGxDYWNoZVtjYWNoZUtleV09ITAsbWFudWFsUHJvcFR5cGVXYXJuaW5nQ291bnQrKyk7fX1yZXR1cm4gcHJvcHNbcHJvcE5hbWVdPT1udWxsP2lzUmVxdWlyZWQ/cHJvcHNbcHJvcE5hbWVdPT09bnVsbD9uZXcgUHJvcFR5cGVFcnJvcihcIlRoZSBcIitsb2NhdGlvbitcIiBgXCIrcHJvcEZ1bGxOYW1lK1wiYCBpcyBtYXJrZWQgYXMgcmVxdWlyZWQgXCIrKFwiaW4gYFwiK2NvbXBvbmVudE5hbWUrXCJgLCBidXQgaXRzIHZhbHVlIGlzIGBudWxsYC5cIikpOm5ldyBQcm9wVHlwZUVycm9yKFwiVGhlIFwiK2xvY2F0aW9uK1wiIGBcIitwcm9wRnVsbE5hbWUrXCJgIGlzIG1hcmtlZCBhcyByZXF1aXJlZCBpbiBcIisoXCJgXCIrY29tcG9uZW50TmFtZStcImAsIGJ1dCBpdHMgdmFsdWUgaXMgYHVuZGVmaW5lZGAuXCIpKTpudWxsOnZhbGlkYXRlKHByb3BzLHByb3BOYW1lLGNvbXBvbmVudE5hbWUsbG9jYXRpb24scHJvcEZ1bGxOYW1lKX12YXIgY2hhaW5lZENoZWNrVHlwZT1jaGVja1R5cGUuYmluZChudWxsLCExKTtyZXR1cm4gY2hhaW5lZENoZWNrVHlwZS5pc1JlcXVpcmVkPWNoZWNrVHlwZS5iaW5kKG51bGwsITApLGNoYWluZWRDaGVja1R5cGV9ZnVuY3Rpb24gY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoZXhwZWN0ZWRUeXBlKXtmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcyxwcm9wTmFtZSxjb21wb25lbnROYW1lLGxvY2F0aW9uLHByb3BGdWxsTmFtZSxzZWNyZXQpe3ZhciBwcm9wVmFsdWU9cHJvcHNbcHJvcE5hbWVdLHByb3BUeXBlPWdldFByb3BUeXBlKHByb3BWYWx1ZSk7aWYocHJvcFR5cGUhPT1leHBlY3RlZFR5cGUpe3ZhciBwcmVjaXNlVHlwZT1nZXRQcmVjaXNlVHlwZShwcm9wVmFsdWUpO3JldHVybiBuZXcgUHJvcFR5cGVFcnJvcihcIkludmFsaWQgXCIrbG9jYXRpb24rXCIgYFwiK3Byb3BGdWxsTmFtZStcImAgb2YgdHlwZSBcIisoXCJgXCIrcHJlY2lzZVR5cGUrXCJgIHN1cHBsaWVkIHRvIGBcIitjb21wb25lbnROYW1lK1wiYCwgZXhwZWN0ZWQgXCIpKyhcImBcIitleHBlY3RlZFR5cGUrXCJgLlwiKSx7ZXhwZWN0ZWRUeXBlfSl9cmV0dXJuIG51bGx9cmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKX1mdW5jdGlvbiBjcmVhdGVBbnlUeXBlQ2hlY2tlcigpe3JldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcihlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsKX1mdW5jdGlvbiBjcmVhdGVBcnJheU9mVHlwZUNoZWNrZXIodHlwZUNoZWNrZXIpe2Z1bmN0aW9uIHZhbGlkYXRlKHByb3BzLHByb3BOYW1lLGNvbXBvbmVudE5hbWUsbG9jYXRpb24scHJvcEZ1bGxOYW1lKXtpZih0eXBlb2YgdHlwZUNoZWNrZXIhPVwiZnVuY3Rpb25cIilyZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJQcm9wZXJ0eSBgXCIrcHJvcEZ1bGxOYW1lK1wiYCBvZiBjb21wb25lbnQgYFwiK2NvbXBvbmVudE5hbWUrXCJgIGhhcyBpbnZhbGlkIFByb3BUeXBlIG5vdGF0aW9uIGluc2lkZSBhcnJheU9mLlwiKTt2YXIgcHJvcFZhbHVlPXByb3BzW3Byb3BOYW1lXTtpZighQXJyYXkuaXNBcnJheShwcm9wVmFsdWUpKXt2YXIgcHJvcFR5cGU9Z2V0UHJvcFR5cGUocHJvcFZhbHVlKTtyZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiK2xvY2F0aW9uK1wiIGBcIitwcm9wRnVsbE5hbWUrXCJgIG9mIHR5cGUgXCIrKFwiYFwiK3Byb3BUeXBlK1wiYCBzdXBwbGllZCB0byBgXCIrY29tcG9uZW50TmFtZStcImAsIGV4cGVjdGVkIGFuIGFycmF5LlwiKSl9Zm9yKHZhciBpPTA7aTxwcm9wVmFsdWUubGVuZ3RoO2krKyl7dmFyIGVycm9yPXR5cGVDaGVja2VyKHByb3BWYWx1ZSxpLGNvbXBvbmVudE5hbWUsbG9jYXRpb24scHJvcEZ1bGxOYW1lK1wiW1wiK2krXCJdXCIsUmVhY3RQcm9wVHlwZXNTZWNyZXQpO2lmKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpcmV0dXJuIGVycm9yfXJldHVybiBudWxsfXJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSl9ZnVuY3Rpb24gY3JlYXRlRWxlbWVudFR5cGVDaGVja2VyKCl7ZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMscHJvcE5hbWUsY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUpe3ZhciBwcm9wVmFsdWU9cHJvcHNbcHJvcE5hbWVdO2lmKCFpc1ZhbGlkRWxlbWVudDQocHJvcFZhbHVlKSl7dmFyIHByb3BUeXBlPWdldFByb3BUeXBlKHByb3BWYWx1ZSk7cmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKFwiSW52YWxpZCBcIitsb2NhdGlvbitcIiBgXCIrcHJvcEZ1bGxOYW1lK1wiYCBvZiB0eXBlIFwiKyhcImBcIitwcm9wVHlwZStcImAgc3VwcGxpZWQgdG8gYFwiK2NvbXBvbmVudE5hbWUrXCJgLCBleHBlY3RlZCBhIHNpbmdsZSBSZWFjdEVsZW1lbnQuXCIpKX1yZXR1cm4gbnVsbH1yZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpfWZ1bmN0aW9uIGNyZWF0ZUVsZW1lbnRUeXBlVHlwZUNoZWNrZXIoKXtmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcyxwcm9wTmFtZSxjb21wb25lbnROYW1lLGxvY2F0aW9uLHByb3BGdWxsTmFtZSl7dmFyIHByb3BWYWx1ZT1wcm9wc1twcm9wTmFtZV07aWYoIVJlYWN0SXMuaXNWYWxpZEVsZW1lbnRUeXBlKHByb3BWYWx1ZSkpe3ZhciBwcm9wVHlwZT1nZXRQcm9wVHlwZShwcm9wVmFsdWUpO3JldHVybiBuZXcgUHJvcFR5cGVFcnJvcihcIkludmFsaWQgXCIrbG9jYXRpb24rXCIgYFwiK3Byb3BGdWxsTmFtZStcImAgb2YgdHlwZSBcIisoXCJgXCIrcHJvcFR5cGUrXCJgIHN1cHBsaWVkIHRvIGBcIitjb21wb25lbnROYW1lK1wiYCwgZXhwZWN0ZWQgYSBzaW5nbGUgUmVhY3RFbGVtZW50IHR5cGUuXCIpKX1yZXR1cm4gbnVsbH1yZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpfWZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlVHlwZUNoZWNrZXIoZXhwZWN0ZWRDbGFzcyl7ZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMscHJvcE5hbWUsY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUpe2lmKCEocHJvcHNbcHJvcE5hbWVdaW5zdGFuY2VvZiBleHBlY3RlZENsYXNzKSl7dmFyIGV4cGVjdGVkQ2xhc3NOYW1lPWV4cGVjdGVkQ2xhc3MubmFtZXx8QU5PTllNT1VTLGFjdHVhbENsYXNzTmFtZT1nZXRDbGFzc05hbWUocHJvcHNbcHJvcE5hbWVdKTtyZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiK2xvY2F0aW9uK1wiIGBcIitwcm9wRnVsbE5hbWUrXCJgIG9mIHR5cGUgXCIrKFwiYFwiK2FjdHVhbENsYXNzTmFtZStcImAgc3VwcGxpZWQgdG8gYFwiK2NvbXBvbmVudE5hbWUrXCJgLCBleHBlY3RlZCBcIikrKFwiaW5zdGFuY2Ugb2YgYFwiK2V4cGVjdGVkQ2xhc3NOYW1lK1wiYC5cIikpfXJldHVybiBudWxsfXJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSl9ZnVuY3Rpb24gY3JlYXRlRW51bVR5cGVDaGVja2VyKGV4cGVjdGVkVmFsdWVzKXtpZighQXJyYXkuaXNBcnJheShleHBlY3RlZFZhbHVlcykpcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WIT09XCJwcm9kdWN0aW9uXCImJihhcmd1bWVudHMubGVuZ3RoPjE/cHJpbnRXYXJuaW5nKFwiSW52YWxpZCBhcmd1bWVudHMgc3VwcGxpZWQgdG8gb25lT2YsIGV4cGVjdGVkIGFuIGFycmF5LCBnb3QgXCIrYXJndW1lbnRzLmxlbmd0aCtcIiBhcmd1bWVudHMuIEEgY29tbW9uIG1pc3Rha2UgaXMgdG8gd3JpdGUgb25lT2YoeCwgeSwgeikgaW5zdGVhZCBvZiBvbmVPZihbeCwgeSwgel0pLlwiKTpwcmludFdhcm5pbmcoXCJJbnZhbGlkIGFyZ3VtZW50IHN1cHBsaWVkIHRvIG9uZU9mLCBleHBlY3RlZCBhbiBhcnJheS5cIikpLGVtcHR5RnVuY3Rpb25UaGF0UmV0dXJuc051bGw7ZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMscHJvcE5hbWUsY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUpe2Zvcih2YXIgcHJvcFZhbHVlPXByb3BzW3Byb3BOYW1lXSxpPTA7aTxleHBlY3RlZFZhbHVlcy5sZW5ndGg7aSsrKWlmKGlzKHByb3BWYWx1ZSxleHBlY3RlZFZhbHVlc1tpXSkpcmV0dXJuIG51bGw7dmFyIHZhbHVlc1N0cmluZz1KU09OLnN0cmluZ2lmeShleHBlY3RlZFZhbHVlcyxmdW5jdGlvbihrZXksdmFsdWUpe3ZhciB0eXBlPWdldFByZWNpc2VUeXBlKHZhbHVlKTtyZXR1cm4gdHlwZT09PVwic3ltYm9sXCI/U3RyaW5nKHZhbHVlKTp2YWx1ZX0pO3JldHVybiBuZXcgUHJvcFR5cGVFcnJvcihcIkludmFsaWQgXCIrbG9jYXRpb24rXCIgYFwiK3Byb3BGdWxsTmFtZStcImAgb2YgdmFsdWUgYFwiK1N0cmluZyhwcm9wVmFsdWUpK1wiYCBcIisoXCJzdXBwbGllZCB0byBgXCIrY29tcG9uZW50TmFtZStcImAsIGV4cGVjdGVkIG9uZSBvZiBcIit2YWx1ZXNTdHJpbmcrXCIuXCIpKX1yZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpfWZ1bmN0aW9uIGNyZWF0ZU9iamVjdE9mVHlwZUNoZWNrZXIodHlwZUNoZWNrZXIpe2Z1bmN0aW9uIHZhbGlkYXRlKHByb3BzLHByb3BOYW1lLGNvbXBvbmVudE5hbWUsbG9jYXRpb24scHJvcEZ1bGxOYW1lKXtpZih0eXBlb2YgdHlwZUNoZWNrZXIhPVwiZnVuY3Rpb25cIilyZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJQcm9wZXJ0eSBgXCIrcHJvcEZ1bGxOYW1lK1wiYCBvZiBjb21wb25lbnQgYFwiK2NvbXBvbmVudE5hbWUrXCJgIGhhcyBpbnZhbGlkIFByb3BUeXBlIG5vdGF0aW9uIGluc2lkZSBvYmplY3RPZi5cIik7dmFyIHByb3BWYWx1ZT1wcm9wc1twcm9wTmFtZV0scHJvcFR5cGU9Z2V0UHJvcFR5cGUocHJvcFZhbHVlKTtpZihwcm9wVHlwZSE9PVwib2JqZWN0XCIpcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKFwiSW52YWxpZCBcIitsb2NhdGlvbitcIiBgXCIrcHJvcEZ1bGxOYW1lK1wiYCBvZiB0eXBlIFwiKyhcImBcIitwcm9wVHlwZStcImAgc3VwcGxpZWQgdG8gYFwiK2NvbXBvbmVudE5hbWUrXCJgLCBleHBlY3RlZCBhbiBvYmplY3QuXCIpKTtmb3IodmFyIGtleSBpbiBwcm9wVmFsdWUpaWYoaGFzMihwcm9wVmFsdWUsa2V5KSl7dmFyIGVycm9yPXR5cGVDaGVja2VyKHByb3BWYWx1ZSxrZXksY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUrXCIuXCIra2V5LFJlYWN0UHJvcFR5cGVzU2VjcmV0KTtpZihlcnJvciBpbnN0YW5jZW9mIEVycm9yKXJldHVybiBlcnJvcn1yZXR1cm4gbnVsbH1yZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpfWZ1bmN0aW9uIGNyZWF0ZVVuaW9uVHlwZUNoZWNrZXIoYXJyYXlPZlR5cGVDaGVja2Vycyl7aWYoIUFycmF5LmlzQXJyYXkoYXJyYXlPZlR5cGVDaGVja2VycykpcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WIT09XCJwcm9kdWN0aW9uXCImJnByaW50V2FybmluZyhcIkludmFsaWQgYXJndW1lbnQgc3VwcGxpZWQgdG8gb25lT2ZUeXBlLCBleHBlY3RlZCBhbiBpbnN0YW5jZSBvZiBhcnJheS5cIiksZW1wdHlGdW5jdGlvblRoYXRSZXR1cm5zTnVsbDtmb3IodmFyIGk9MDtpPGFycmF5T2ZUeXBlQ2hlY2tlcnMubGVuZ3RoO2krKyl7dmFyIGNoZWNrZXI9YXJyYXlPZlR5cGVDaGVja2Vyc1tpXTtpZih0eXBlb2YgY2hlY2tlciE9XCJmdW5jdGlvblwiKXJldHVybiBwcmludFdhcm5pbmcoXCJJbnZhbGlkIGFyZ3VtZW50IHN1cHBsaWVkIHRvIG9uZU9mVHlwZS4gRXhwZWN0ZWQgYW4gYXJyYXkgb2YgY2hlY2sgZnVuY3Rpb25zLCBidXQgcmVjZWl2ZWQgXCIrZ2V0UG9zdGZpeEZvclR5cGVXYXJuaW5nKGNoZWNrZXIpK1wiIGF0IGluZGV4IFwiK2krXCIuXCIpLGVtcHR5RnVuY3Rpb25UaGF0UmV0dXJuc051bGx9ZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMscHJvcE5hbWUsY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUpe2Zvcih2YXIgZXhwZWN0ZWRUeXBlcz1bXSxpMj0wO2kyPGFycmF5T2ZUeXBlQ2hlY2tlcnMubGVuZ3RoO2kyKyspe3ZhciBjaGVja2VyMj1hcnJheU9mVHlwZUNoZWNrZXJzW2kyXSxjaGVja2VyUmVzdWx0PWNoZWNrZXIyKHByb3BzLHByb3BOYW1lLGNvbXBvbmVudE5hbWUsbG9jYXRpb24scHJvcEZ1bGxOYW1lLFJlYWN0UHJvcFR5cGVzU2VjcmV0KTtpZihjaGVja2VyUmVzdWx0PT1udWxsKXJldHVybiBudWxsO2NoZWNrZXJSZXN1bHQuZGF0YSYmaGFzMihjaGVja2VyUmVzdWx0LmRhdGEsXCJleHBlY3RlZFR5cGVcIikmJmV4cGVjdGVkVHlwZXMucHVzaChjaGVja2VyUmVzdWx0LmRhdGEuZXhwZWN0ZWRUeXBlKTt9dmFyIGV4cGVjdGVkVHlwZXNNZXNzYWdlPWV4cGVjdGVkVHlwZXMubGVuZ3RoPjA/XCIsIGV4cGVjdGVkIG9uZSBvZiB0eXBlIFtcIitleHBlY3RlZFR5cGVzLmpvaW4oXCIsIFwiKStcIl1cIjpcIlwiO3JldHVybiBuZXcgUHJvcFR5cGVFcnJvcihcIkludmFsaWQgXCIrbG9jYXRpb24rXCIgYFwiK3Byb3BGdWxsTmFtZStcImAgc3VwcGxpZWQgdG8gXCIrKFwiYFwiK2NvbXBvbmVudE5hbWUrXCJgXCIrZXhwZWN0ZWRUeXBlc01lc3NhZ2UrXCIuXCIpKX1yZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpfWZ1bmN0aW9uIGNyZWF0ZU5vZGVDaGVja2VyKCl7ZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMscHJvcE5hbWUsY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUpe3JldHVybiBpc05vZGUocHJvcHNbcHJvcE5hbWVdKT9udWxsOm5ldyBQcm9wVHlwZUVycm9yKFwiSW52YWxpZCBcIitsb2NhdGlvbitcIiBgXCIrcHJvcEZ1bGxOYW1lK1wiYCBzdXBwbGllZCB0byBcIisoXCJgXCIrY29tcG9uZW50TmFtZStcImAsIGV4cGVjdGVkIGEgUmVhY3ROb2RlLlwiKSl9cmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKX1mdW5jdGlvbiBpbnZhbGlkVmFsaWRhdG9yRXJyb3IoY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUsa2V5LHR5cGUpe3JldHVybiBuZXcgUHJvcFR5cGVFcnJvcigoY29tcG9uZW50TmFtZXx8XCJSZWFjdCBjbGFzc1wiKStcIjogXCIrbG9jYXRpb24rXCIgdHlwZSBgXCIrcHJvcEZ1bGxOYW1lK1wiLlwiK2tleStcImAgaXMgaW52YWxpZDsgaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYFwiK3R5cGUrXCJgLlwiKX1mdW5jdGlvbiBjcmVhdGVTaGFwZVR5cGVDaGVja2VyKHNoYXBlVHlwZXMpe2Z1bmN0aW9uIHZhbGlkYXRlKHByb3BzLHByb3BOYW1lLGNvbXBvbmVudE5hbWUsbG9jYXRpb24scHJvcEZ1bGxOYW1lKXt2YXIgcHJvcFZhbHVlPXByb3BzW3Byb3BOYW1lXSxwcm9wVHlwZT1nZXRQcm9wVHlwZShwcm9wVmFsdWUpO2lmKHByb3BUeXBlIT09XCJvYmplY3RcIilyZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiK2xvY2F0aW9uK1wiIGBcIitwcm9wRnVsbE5hbWUrXCJgIG9mIHR5cGUgYFwiK3Byb3BUeXBlK1wiYCBcIisoXCJzdXBwbGllZCB0byBgXCIrY29tcG9uZW50TmFtZStcImAsIGV4cGVjdGVkIGBvYmplY3RgLlwiKSk7Zm9yKHZhciBrZXkgaW4gc2hhcGVUeXBlcyl7dmFyIGNoZWNrZXI9c2hhcGVUeXBlc1trZXldO2lmKHR5cGVvZiBjaGVja2VyIT1cImZ1bmN0aW9uXCIpcmV0dXJuIGludmFsaWRWYWxpZGF0b3JFcnJvcihjb21wb25lbnROYW1lLGxvY2F0aW9uLHByb3BGdWxsTmFtZSxrZXksZ2V0UHJlY2lzZVR5cGUoY2hlY2tlcikpO3ZhciBlcnJvcj1jaGVja2VyKHByb3BWYWx1ZSxrZXksY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUrXCIuXCIra2V5LFJlYWN0UHJvcFR5cGVzU2VjcmV0KTtpZihlcnJvcilyZXR1cm4gZXJyb3J9cmV0dXJuIG51bGx9cmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKX1mdW5jdGlvbiBjcmVhdGVTdHJpY3RTaGFwZVR5cGVDaGVja2VyKHNoYXBlVHlwZXMpe2Z1bmN0aW9uIHZhbGlkYXRlKHByb3BzLHByb3BOYW1lLGNvbXBvbmVudE5hbWUsbG9jYXRpb24scHJvcEZ1bGxOYW1lKXt2YXIgcHJvcFZhbHVlPXByb3BzW3Byb3BOYW1lXSxwcm9wVHlwZT1nZXRQcm9wVHlwZShwcm9wVmFsdWUpO2lmKHByb3BUeXBlIT09XCJvYmplY3RcIilyZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiK2xvY2F0aW9uK1wiIGBcIitwcm9wRnVsbE5hbWUrXCJgIG9mIHR5cGUgYFwiK3Byb3BUeXBlK1wiYCBcIisoXCJzdXBwbGllZCB0byBgXCIrY29tcG9uZW50TmFtZStcImAsIGV4cGVjdGVkIGBvYmplY3RgLlwiKSk7dmFyIGFsbEtleXM9YXNzaWduKHt9LHByb3BzW3Byb3BOYW1lXSxzaGFwZVR5cGVzKTtmb3IodmFyIGtleSBpbiBhbGxLZXlzKXt2YXIgY2hlY2tlcj1zaGFwZVR5cGVzW2tleV07aWYoaGFzMihzaGFwZVR5cGVzLGtleSkmJnR5cGVvZiBjaGVja2VyIT1cImZ1bmN0aW9uXCIpcmV0dXJuIGludmFsaWRWYWxpZGF0b3JFcnJvcihjb21wb25lbnROYW1lLGxvY2F0aW9uLHByb3BGdWxsTmFtZSxrZXksZ2V0UHJlY2lzZVR5cGUoY2hlY2tlcikpO2lmKCFjaGVja2VyKXJldHVybiBuZXcgUHJvcFR5cGVFcnJvcihcIkludmFsaWQgXCIrbG9jYXRpb24rXCIgYFwiK3Byb3BGdWxsTmFtZStcImAga2V5IGBcIitrZXkrXCJgIHN1cHBsaWVkIHRvIGBcIitjb21wb25lbnROYW1lK1wiYC5cXG5CYWQgb2JqZWN0OiBcIitKU09OLnN0cmluZ2lmeShwcm9wc1twcm9wTmFtZV0sbnVsbCxcIiAgXCIpK2BcblZhbGlkIGtleXM6IGArSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmtleXMoc2hhcGVUeXBlcyksbnVsbCxcIiAgXCIpKTt2YXIgZXJyb3I9Y2hlY2tlcihwcm9wVmFsdWUsa2V5LGNvbXBvbmVudE5hbWUsbG9jYXRpb24scHJvcEZ1bGxOYW1lK1wiLlwiK2tleSxSZWFjdFByb3BUeXBlc1NlY3JldCk7aWYoZXJyb3IpcmV0dXJuIGVycm9yfXJldHVybiBudWxsfXJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSl9ZnVuY3Rpb24gaXNOb2RlKHByb3BWYWx1ZSl7c3dpdGNoKHR5cGVvZiBwcm9wVmFsdWUpe2Nhc2VcIm51bWJlclwiOmNhc2VcInN0cmluZ1wiOmNhc2VcInVuZGVmaW5lZFwiOnJldHVybiAhMDtjYXNlXCJib29sZWFuXCI6cmV0dXJuICFwcm9wVmFsdWU7Y2FzZVwib2JqZWN0XCI6aWYoQXJyYXkuaXNBcnJheShwcm9wVmFsdWUpKXJldHVybiBwcm9wVmFsdWUuZXZlcnkoaXNOb2RlKTtpZihwcm9wVmFsdWU9PT1udWxsfHxpc1ZhbGlkRWxlbWVudDQocHJvcFZhbHVlKSlyZXR1cm4gITA7dmFyIGl0ZXJhdG9yRm49Z2V0SXRlcmF0b3JGbihwcm9wVmFsdWUpO2lmKGl0ZXJhdG9yRm4pe3ZhciBpdGVyYXRvcj1pdGVyYXRvckZuLmNhbGwocHJvcFZhbHVlKSxzdGVwO2lmKGl0ZXJhdG9yRm4hPT1wcm9wVmFsdWUuZW50cmllcyl7Zm9yKDshKHN0ZXA9aXRlcmF0b3IubmV4dCgpKS5kb25lOylpZighaXNOb2RlKHN0ZXAudmFsdWUpKXJldHVybiAhMX1lbHNlIGZvcig7IShzdGVwPWl0ZXJhdG9yLm5leHQoKSkuZG9uZTspe3ZhciBlbnRyeT1zdGVwLnZhbHVlO2lmKGVudHJ5JiYhaXNOb2RlKGVudHJ5WzFdKSlyZXR1cm4gITF9fWVsc2UgcmV0dXJuICExO3JldHVybiAhMDtkZWZhdWx0OnJldHVybiAhMX19ZnVuY3Rpb24gaXNTeW1ib2wocHJvcFR5cGUscHJvcFZhbHVlKXtyZXR1cm4gcHJvcFR5cGU9PT1cInN5bWJvbFwiPyEwOnByb3BWYWx1ZT9wcm9wVmFsdWVbXCJAQHRvU3RyaW5nVGFnXCJdPT09XCJTeW1ib2xcInx8dHlwZW9mIFN5bWJvbD09XCJmdW5jdGlvblwiJiZwcm9wVmFsdWUgaW5zdGFuY2VvZiBTeW1ib2w6ITF9ZnVuY3Rpb24gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKXt2YXIgcHJvcFR5cGU9dHlwZW9mIHByb3BWYWx1ZTtyZXR1cm4gQXJyYXkuaXNBcnJheShwcm9wVmFsdWUpP1wiYXJyYXlcIjpwcm9wVmFsdWUgaW5zdGFuY2VvZiBSZWdFeHA/XCJvYmplY3RcIjppc1N5bWJvbChwcm9wVHlwZSxwcm9wVmFsdWUpP1wic3ltYm9sXCI6cHJvcFR5cGV9ZnVuY3Rpb24gZ2V0UHJlY2lzZVR5cGUocHJvcFZhbHVlKXtpZih0eXBlb2YgcHJvcFZhbHVlPlwidVwifHxwcm9wVmFsdWU9PT1udWxsKXJldHVybiBcIlwiK3Byb3BWYWx1ZTt2YXIgcHJvcFR5cGU9Z2V0UHJvcFR5cGUocHJvcFZhbHVlKTtpZihwcm9wVHlwZT09PVwib2JqZWN0XCIpe2lmKHByb3BWYWx1ZSBpbnN0YW5jZW9mIERhdGUpcmV0dXJuIFwiZGF0ZVwiO2lmKHByb3BWYWx1ZSBpbnN0YW5jZW9mIFJlZ0V4cClyZXR1cm4gXCJyZWdleHBcIn1yZXR1cm4gcHJvcFR5cGV9ZnVuY3Rpb24gZ2V0UG9zdGZpeEZvclR5cGVXYXJuaW5nKHZhbHVlKXt2YXIgdHlwZT1nZXRQcmVjaXNlVHlwZSh2YWx1ZSk7c3dpdGNoKHR5cGUpe2Nhc2VcImFycmF5XCI6Y2FzZVwib2JqZWN0XCI6cmV0dXJuIFwiYW4gXCIrdHlwZTtjYXNlXCJib29sZWFuXCI6Y2FzZVwiZGF0ZVwiOmNhc2VcInJlZ2V4cFwiOnJldHVybiBcImEgXCIrdHlwZTtkZWZhdWx0OnJldHVybiB0eXBlfX1mdW5jdGlvbiBnZXRDbGFzc05hbWUocHJvcFZhbHVlKXtyZXR1cm4gIXByb3BWYWx1ZS5jb25zdHJ1Y3Rvcnx8IXByb3BWYWx1ZS5jb25zdHJ1Y3Rvci5uYW1lP0FOT05ZTU9VUzpwcm9wVmFsdWUuY29uc3RydWN0b3IubmFtZX1yZXR1cm4gUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXM9Y2hlY2tQcm9wVHlwZXMsUmVhY3RQcm9wVHlwZXMucmVzZXRXYXJuaW5nQ2FjaGU9Y2hlY2tQcm9wVHlwZXMucmVzZXRXYXJuaW5nQ2FjaGUsUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzPVJlYWN0UHJvcFR5cGVzLFJlYWN0UHJvcFR5cGVzfTt9fSk7dmFyIHJlcXVpcmVfZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzXCIoZXhwb3J0cyxtb2R1bGUpe3ZhciBSZWFjdFByb3BUeXBlc1NlY3JldD1yZXF1aXJlX1JlYWN0UHJvcFR5cGVzU2VjcmV0KCk7ZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpe31mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCl7fWVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGU9ZW1wdHlGdW5jdGlvbjttb2R1bGUuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIHNoaW0ocHJvcHMscHJvcE5hbWUsY29tcG9uZW50TmFtZSxsb2NhdGlvbixwcm9wRnVsbE5hbWUsc2VjcmV0KXtpZihzZWNyZXQhPT1SZWFjdFByb3BUeXBlc1NlY3JldCl7dmFyIGVycj1uZXcgRXJyb3IoXCJDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiBVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiBSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzXCIpO3Rocm93IGVyci5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwiLGVycn19c2hpbS5pc1JlcXVpcmVkPXNoaW07ZnVuY3Rpb24gZ2V0U2hpbSgpe3JldHVybiBzaGltfXZhciBSZWFjdFByb3BUeXBlcz17YXJyYXk6c2hpbSxiaWdpbnQ6c2hpbSxib29sOnNoaW0sZnVuYzpzaGltLG51bWJlcjpzaGltLG9iamVjdDpzaGltLHN0cmluZzpzaGltLHN5bWJvbDpzaGltLGFueTpzaGltLGFycmF5T2Y6Z2V0U2hpbSxlbGVtZW50OnNoaW0sZWxlbWVudFR5cGU6c2hpbSxpbnN0YW5jZU9mOmdldFNoaW0sbm9kZTpzaGltLG9iamVjdE9mOmdldFNoaW0sb25lT2Y6Z2V0U2hpbSxvbmVPZlR5cGU6Z2V0U2hpbSxzaGFwZTpnZXRTaGltLGV4YWN0OmdldFNoaW0sY2hlY2tQcm9wVHlwZXM6ZW1wdHlGdW5jdGlvbldpdGhSZXNldCxyZXNldFdhcm5pbmdDYWNoZTplbXB0eUZ1bmN0aW9ufTtyZXR1cm4gUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzPVJlYWN0UHJvcFR5cGVzLFJlYWN0UHJvcFR5cGVzfTt9fSk7dmFyIHJlcXVpcmVfcHJvcF90eXBlcz1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzXCIoZXhwb3J0cyxtb2R1bGUpe3Byb2Nlc3MuZW52Lk5PREVfRU5WIT09XCJwcm9kdWN0aW9uXCI/KFJlYWN0SXM9cmVxdWlyZV9yZWFjdF9pcygpLHRocm93T25EaXJlY3RBY2Nlc3M9ITAsbW9kdWxlLmV4cG9ydHM9cmVxdWlyZV9mYWN0b3J5V2l0aFR5cGVDaGVja2VycygpKFJlYWN0SXMuaXNFbGVtZW50LHRocm93T25EaXJlY3RBY2Nlc3MpKTptb2R1bGUuZXhwb3J0cz1yZXF1aXJlX2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcygpKCk7dmFyIFJlYWN0SXMsdGhyb3dPbkRpcmVjdEFjY2Vzczt9fSk7dmFyIHJlcXVpcmVfaHRtbF90YWdzPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2h0bWwtdGFncy9odG1sLXRhZ3MuanNvblwiKGV4cG9ydHMsbW9kdWxlKXttb2R1bGUuZXhwb3J0cz1bXCJhXCIsXCJhYmJyXCIsXCJhZGRyZXNzXCIsXCJhcmVhXCIsXCJhcnRpY2xlXCIsXCJhc2lkZVwiLFwiYXVkaW9cIixcImJcIixcImJhc2VcIixcImJkaVwiLFwiYmRvXCIsXCJibG9ja3F1b3RlXCIsXCJib2R5XCIsXCJiclwiLFwiYnV0dG9uXCIsXCJjYW52YXNcIixcImNhcHRpb25cIixcImNpdGVcIixcImNvZGVcIixcImNvbFwiLFwiY29sZ3JvdXBcIixcImRhdGFcIixcImRhdGFsaXN0XCIsXCJkZFwiLFwiZGVsXCIsXCJkZXRhaWxzXCIsXCJkZm5cIixcImRpYWxvZ1wiLFwiZGl2XCIsXCJkbFwiLFwiZHRcIixcImVtXCIsXCJlbWJlZFwiLFwiZmllbGRzZXRcIixcImZpZ2NhcHRpb25cIixcImZpZ3VyZVwiLFwiZm9vdGVyXCIsXCJmb3JtXCIsXCJoMVwiLFwiaDJcIixcImgzXCIsXCJoNFwiLFwiaDVcIixcImg2XCIsXCJoZWFkXCIsXCJoZWFkZXJcIixcImhncm91cFwiLFwiaHJcIixcImh0bWxcIixcImlcIixcImlmcmFtZVwiLFwiaW1nXCIsXCJpbnB1dFwiLFwiaW5zXCIsXCJrYmRcIixcImxhYmVsXCIsXCJsZWdlbmRcIixcImxpXCIsXCJsaW5rXCIsXCJtYWluXCIsXCJtYXBcIixcIm1hcmtcIixcIm1hdGhcIixcIm1lbnVcIixcIm1lbnVpdGVtXCIsXCJtZXRhXCIsXCJtZXRlclwiLFwibmF2XCIsXCJub3NjcmlwdFwiLFwib2JqZWN0XCIsXCJvbFwiLFwib3B0Z3JvdXBcIixcIm9wdGlvblwiLFwib3V0cHV0XCIsXCJwXCIsXCJwYXJhbVwiLFwicGljdHVyZVwiLFwicHJlXCIsXCJwcm9ncmVzc1wiLFwicVwiLFwicmJcIixcInJwXCIsXCJydFwiLFwicnRjXCIsXCJydWJ5XCIsXCJzXCIsXCJzYW1wXCIsXCJzY3JpcHRcIixcInNlYXJjaFwiLFwic2VjdGlvblwiLFwic2VsZWN0XCIsXCJzbG90XCIsXCJzbWFsbFwiLFwic291cmNlXCIsXCJzcGFuXCIsXCJzdHJvbmdcIixcInN0eWxlXCIsXCJzdWJcIixcInN1bW1hcnlcIixcInN1cFwiLFwic3ZnXCIsXCJ0YWJsZVwiLFwidGJvZHlcIixcInRkXCIsXCJ0ZW1wbGF0ZVwiLFwidGV4dGFyZWFcIixcInRmb290XCIsXCJ0aFwiLFwidGhlYWRcIixcInRpbWVcIixcInRpdGxlXCIsXCJ0clwiLFwidHJhY2tcIixcInVcIixcInVsXCIsXCJ2YXJcIixcInZpZGVvXCIsXCJ3YnJcIl07fX0pO3ZhciByZXF1aXJlX2h0bWxfdGFnczI9X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvaHRtbC10YWdzL2luZGV4LmpzXCIoZXhwb3J0cyxtb2R1bGUpe21vZHVsZS5leHBvcnRzPXJlcXVpcmVfaHRtbF90YWdzKCk7fX0pO3ZhciByZXF1aXJlX2VzdHJhdmVyc2U9X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvZXN0cmF2ZXJzZS9lc3RyYXZlcnNlLmpzXCIoZXhwb3J0cyl7KGZ1bmN0aW9uIGNsb25lKGV4cG9ydHMyKXt2YXIgU3ludGF4LFZpc2l0b3JPcHRpb24sVmlzaXRvcktleXMsQlJFQUssU0tJUCxSRU1PVkU7ZnVuY3Rpb24gZGVlcENvcHkob2JqKXt2YXIgcmV0PXt9LGtleSx2YWw7Zm9yKGtleSBpbiBvYmopb2JqLmhhc093blByb3BlcnR5KGtleSkmJih2YWw9b2JqW2tleV0sdHlwZW9mIHZhbD09XCJvYmplY3RcIiYmdmFsIT09bnVsbD9yZXRba2V5XT1kZWVwQ29weSh2YWwpOnJldFtrZXldPXZhbCk7cmV0dXJuIHJldH1mdW5jdGlvbiB1cHBlckJvdW5kKGFycmF5LGZ1bmMpe3ZhciBkaWZmLGxlbixpLGN1cnJlbnQyO2ZvcihsZW49YXJyYXkubGVuZ3RoLGk9MDtsZW47KWRpZmY9bGVuPj4+MSxjdXJyZW50Mj1pK2RpZmYsZnVuYyhhcnJheVtjdXJyZW50Ml0pP2xlbj1kaWZmOihpPWN1cnJlbnQyKzEsbGVuLT1kaWZmKzEpO3JldHVybiBpfVN5bnRheD17QXNzaWdubWVudEV4cHJlc3Npb246XCJBc3NpZ25tZW50RXhwcmVzc2lvblwiLEFzc2lnbm1lbnRQYXR0ZXJuOlwiQXNzaWdubWVudFBhdHRlcm5cIixBcnJheUV4cHJlc3Npb246XCJBcnJheUV4cHJlc3Npb25cIixBcnJheVBhdHRlcm46XCJBcnJheVBhdHRlcm5cIixBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbjpcIkFycm93RnVuY3Rpb25FeHByZXNzaW9uXCIsQXdhaXRFeHByZXNzaW9uOlwiQXdhaXRFeHByZXNzaW9uXCIsQmxvY2tTdGF0ZW1lbnQ6XCJCbG9ja1N0YXRlbWVudFwiLEJpbmFyeUV4cHJlc3Npb246XCJCaW5hcnlFeHByZXNzaW9uXCIsQnJlYWtTdGF0ZW1lbnQ6XCJCcmVha1N0YXRlbWVudFwiLENhbGxFeHByZXNzaW9uOlwiQ2FsbEV4cHJlc3Npb25cIixDYXRjaENsYXVzZTpcIkNhdGNoQ2xhdXNlXCIsQ2hhaW5FeHByZXNzaW9uOlwiQ2hhaW5FeHByZXNzaW9uXCIsQ2xhc3NCb2R5OlwiQ2xhc3NCb2R5XCIsQ2xhc3NEZWNsYXJhdGlvbjpcIkNsYXNzRGVjbGFyYXRpb25cIixDbGFzc0V4cHJlc3Npb246XCJDbGFzc0V4cHJlc3Npb25cIixDb21wcmVoZW5zaW9uQmxvY2s6XCJDb21wcmVoZW5zaW9uQmxvY2tcIixDb21wcmVoZW5zaW9uRXhwcmVzc2lvbjpcIkNvbXByZWhlbnNpb25FeHByZXNzaW9uXCIsQ29uZGl0aW9uYWxFeHByZXNzaW9uOlwiQ29uZGl0aW9uYWxFeHByZXNzaW9uXCIsQ29udGludWVTdGF0ZW1lbnQ6XCJDb250aW51ZVN0YXRlbWVudFwiLERlYnVnZ2VyU3RhdGVtZW50OlwiRGVidWdnZXJTdGF0ZW1lbnRcIixEaXJlY3RpdmVTdGF0ZW1lbnQ6XCJEaXJlY3RpdmVTdGF0ZW1lbnRcIixEb1doaWxlU3RhdGVtZW50OlwiRG9XaGlsZVN0YXRlbWVudFwiLEVtcHR5U3RhdGVtZW50OlwiRW1wdHlTdGF0ZW1lbnRcIixFeHBvcnRBbGxEZWNsYXJhdGlvbjpcIkV4cG9ydEFsbERlY2xhcmF0aW9uXCIsRXhwb3J0RGVmYXVsdERlY2xhcmF0aW9uOlwiRXhwb3J0RGVmYXVsdERlY2xhcmF0aW9uXCIsRXhwb3J0TmFtZWREZWNsYXJhdGlvbjpcIkV4cG9ydE5hbWVkRGVjbGFyYXRpb25cIixFeHBvcnRTcGVjaWZpZXI6XCJFeHBvcnRTcGVjaWZpZXJcIixFeHByZXNzaW9uU3RhdGVtZW50OlwiRXhwcmVzc2lvblN0YXRlbWVudFwiLEZvclN0YXRlbWVudDpcIkZvclN0YXRlbWVudFwiLEZvckluU3RhdGVtZW50OlwiRm9ySW5TdGF0ZW1lbnRcIixGb3JPZlN0YXRlbWVudDpcIkZvck9mU3RhdGVtZW50XCIsRnVuY3Rpb25EZWNsYXJhdGlvbjpcIkZ1bmN0aW9uRGVjbGFyYXRpb25cIixGdW5jdGlvbkV4cHJlc3Npb246XCJGdW5jdGlvbkV4cHJlc3Npb25cIixHZW5lcmF0b3JFeHByZXNzaW9uOlwiR2VuZXJhdG9yRXhwcmVzc2lvblwiLElkZW50aWZpZXI6XCJJZGVudGlmaWVyXCIsSWZTdGF0ZW1lbnQ6XCJJZlN0YXRlbWVudFwiLEltcG9ydEV4cHJlc3Npb246XCJJbXBvcnRFeHByZXNzaW9uXCIsSW1wb3J0RGVjbGFyYXRpb246XCJJbXBvcnREZWNsYXJhdGlvblwiLEltcG9ydERlZmF1bHRTcGVjaWZpZXI6XCJJbXBvcnREZWZhdWx0U3BlY2lmaWVyXCIsSW1wb3J0TmFtZXNwYWNlU3BlY2lmaWVyOlwiSW1wb3J0TmFtZXNwYWNlU3BlY2lmaWVyXCIsSW1wb3J0U3BlY2lmaWVyOlwiSW1wb3J0U3BlY2lmaWVyXCIsTGl0ZXJhbDpcIkxpdGVyYWxcIixMYWJlbGVkU3RhdGVtZW50OlwiTGFiZWxlZFN0YXRlbWVudFwiLExvZ2ljYWxFeHByZXNzaW9uOlwiTG9naWNhbEV4cHJlc3Npb25cIixNZW1iZXJFeHByZXNzaW9uOlwiTWVtYmVyRXhwcmVzc2lvblwiLE1ldGFQcm9wZXJ0eTpcIk1ldGFQcm9wZXJ0eVwiLE1ldGhvZERlZmluaXRpb246XCJNZXRob2REZWZpbml0aW9uXCIsTW9kdWxlU3BlY2lmaWVyOlwiTW9kdWxlU3BlY2lmaWVyXCIsTmV3RXhwcmVzc2lvbjpcIk5ld0V4cHJlc3Npb25cIixPYmplY3RFeHByZXNzaW9uOlwiT2JqZWN0RXhwcmVzc2lvblwiLE9iamVjdFBhdHRlcm46XCJPYmplY3RQYXR0ZXJuXCIsUHJpdmF0ZUlkZW50aWZpZXI6XCJQcml2YXRlSWRlbnRpZmllclwiLFByb2dyYW06XCJQcm9ncmFtXCIsUHJvcGVydHk6XCJQcm9wZXJ0eVwiLFByb3BlcnR5RGVmaW5pdGlvbjpcIlByb3BlcnR5RGVmaW5pdGlvblwiLFJlc3RFbGVtZW50OlwiUmVzdEVsZW1lbnRcIixSZXR1cm5TdGF0ZW1lbnQ6XCJSZXR1cm5TdGF0ZW1lbnRcIixTZXF1ZW5jZUV4cHJlc3Npb246XCJTZXF1ZW5jZUV4cHJlc3Npb25cIixTcHJlYWRFbGVtZW50OlwiU3ByZWFkRWxlbWVudFwiLFN1cGVyOlwiU3VwZXJcIixTd2l0Y2hTdGF0ZW1lbnQ6XCJTd2l0Y2hTdGF0ZW1lbnRcIixTd2l0Y2hDYXNlOlwiU3dpdGNoQ2FzZVwiLFRhZ2dlZFRlbXBsYXRlRXhwcmVzc2lvbjpcIlRhZ2dlZFRlbXBsYXRlRXhwcmVzc2lvblwiLFRlbXBsYXRlRWxlbWVudDpcIlRlbXBsYXRlRWxlbWVudFwiLFRlbXBsYXRlTGl0ZXJhbDpcIlRlbXBsYXRlTGl0ZXJhbFwiLFRoaXNFeHByZXNzaW9uOlwiVGhpc0V4cHJlc3Npb25cIixUaHJvd1N0YXRlbWVudDpcIlRocm93U3RhdGVtZW50XCIsVHJ5U3RhdGVtZW50OlwiVHJ5U3RhdGVtZW50XCIsVW5hcnlFeHByZXNzaW9uOlwiVW5hcnlFeHByZXNzaW9uXCIsVXBkYXRlRXhwcmVzc2lvbjpcIlVwZGF0ZUV4cHJlc3Npb25cIixWYXJpYWJsZURlY2xhcmF0aW9uOlwiVmFyaWFibGVEZWNsYXJhdGlvblwiLFZhcmlhYmxlRGVjbGFyYXRvcjpcIlZhcmlhYmxlRGVjbGFyYXRvclwiLFdoaWxlU3RhdGVtZW50OlwiV2hpbGVTdGF0ZW1lbnRcIixXaXRoU3RhdGVtZW50OlwiV2l0aFN0YXRlbWVudFwiLFlpZWxkRXhwcmVzc2lvbjpcIllpZWxkRXhwcmVzc2lvblwifSxWaXNpdG9yS2V5cz17QXNzaWdubWVudEV4cHJlc3Npb246W1wibGVmdFwiLFwicmlnaHRcIl0sQXNzaWdubWVudFBhdHRlcm46W1wibGVmdFwiLFwicmlnaHRcIl0sQXJyYXlFeHByZXNzaW9uOltcImVsZW1lbnRzXCJdLEFycmF5UGF0dGVybjpbXCJlbGVtZW50c1wiXSxBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbjpbXCJwYXJhbXNcIixcImJvZHlcIl0sQXdhaXRFeHByZXNzaW9uOltcImFyZ3VtZW50XCJdLEJsb2NrU3RhdGVtZW50OltcImJvZHlcIl0sQmluYXJ5RXhwcmVzc2lvbjpbXCJsZWZ0XCIsXCJyaWdodFwiXSxCcmVha1N0YXRlbWVudDpbXCJsYWJlbFwiXSxDYWxsRXhwcmVzc2lvbjpbXCJjYWxsZWVcIixcImFyZ3VtZW50c1wiXSxDYXRjaENsYXVzZTpbXCJwYXJhbVwiLFwiYm9keVwiXSxDaGFpbkV4cHJlc3Npb246W1wiZXhwcmVzc2lvblwiXSxDbGFzc0JvZHk6W1wiYm9keVwiXSxDbGFzc0RlY2xhcmF0aW9uOltcImlkXCIsXCJzdXBlckNsYXNzXCIsXCJib2R5XCJdLENsYXNzRXhwcmVzc2lvbjpbXCJpZFwiLFwic3VwZXJDbGFzc1wiLFwiYm9keVwiXSxDb21wcmVoZW5zaW9uQmxvY2s6W1wibGVmdFwiLFwicmlnaHRcIl0sQ29tcHJlaGVuc2lvbkV4cHJlc3Npb246W1wiYmxvY2tzXCIsXCJmaWx0ZXJcIixcImJvZHlcIl0sQ29uZGl0aW9uYWxFeHByZXNzaW9uOltcInRlc3RcIixcImNvbnNlcXVlbnRcIixcImFsdGVybmF0ZVwiXSxDb250aW51ZVN0YXRlbWVudDpbXCJsYWJlbFwiXSxEZWJ1Z2dlclN0YXRlbWVudDpbXSxEaXJlY3RpdmVTdGF0ZW1lbnQ6W10sRG9XaGlsZVN0YXRlbWVudDpbXCJib2R5XCIsXCJ0ZXN0XCJdLEVtcHR5U3RhdGVtZW50OltdLEV4cG9ydEFsbERlY2xhcmF0aW9uOltcInNvdXJjZVwiXSxFeHBvcnREZWZhdWx0RGVjbGFyYXRpb246W1wiZGVjbGFyYXRpb25cIl0sRXhwb3J0TmFtZWREZWNsYXJhdGlvbjpbXCJkZWNsYXJhdGlvblwiLFwic3BlY2lmaWVyc1wiLFwic291cmNlXCJdLEV4cG9ydFNwZWNpZmllcjpbXCJleHBvcnRlZFwiLFwibG9jYWxcIl0sRXhwcmVzc2lvblN0YXRlbWVudDpbXCJleHByZXNzaW9uXCJdLEZvclN0YXRlbWVudDpbXCJpbml0XCIsXCJ0ZXN0XCIsXCJ1cGRhdGVcIixcImJvZHlcIl0sRm9ySW5TdGF0ZW1lbnQ6W1wibGVmdFwiLFwicmlnaHRcIixcImJvZHlcIl0sRm9yT2ZTdGF0ZW1lbnQ6W1wibGVmdFwiLFwicmlnaHRcIixcImJvZHlcIl0sRnVuY3Rpb25EZWNsYXJhdGlvbjpbXCJpZFwiLFwicGFyYW1zXCIsXCJib2R5XCJdLEZ1bmN0aW9uRXhwcmVzc2lvbjpbXCJpZFwiLFwicGFyYW1zXCIsXCJib2R5XCJdLEdlbmVyYXRvckV4cHJlc3Npb246W1wiYmxvY2tzXCIsXCJmaWx0ZXJcIixcImJvZHlcIl0sSWRlbnRpZmllcjpbXSxJZlN0YXRlbWVudDpbXCJ0ZXN0XCIsXCJjb25zZXF1ZW50XCIsXCJhbHRlcm5hdGVcIl0sSW1wb3J0RXhwcmVzc2lvbjpbXCJzb3VyY2VcIl0sSW1wb3J0RGVjbGFyYXRpb246W1wic3BlY2lmaWVyc1wiLFwic291cmNlXCJdLEltcG9ydERlZmF1bHRTcGVjaWZpZXI6W1wibG9jYWxcIl0sSW1wb3J0TmFtZXNwYWNlU3BlY2lmaWVyOltcImxvY2FsXCJdLEltcG9ydFNwZWNpZmllcjpbXCJpbXBvcnRlZFwiLFwibG9jYWxcIl0sTGl0ZXJhbDpbXSxMYWJlbGVkU3RhdGVtZW50OltcImxhYmVsXCIsXCJib2R5XCJdLExvZ2ljYWxFeHByZXNzaW9uOltcImxlZnRcIixcInJpZ2h0XCJdLE1lbWJlckV4cHJlc3Npb246W1wib2JqZWN0XCIsXCJwcm9wZXJ0eVwiXSxNZXRhUHJvcGVydHk6W1wibWV0YVwiLFwicHJvcGVydHlcIl0sTWV0aG9kRGVmaW5pdGlvbjpbXCJrZXlcIixcInZhbHVlXCJdLE1vZHVsZVNwZWNpZmllcjpbXSxOZXdFeHByZXNzaW9uOltcImNhbGxlZVwiLFwiYXJndW1lbnRzXCJdLE9iamVjdEV4cHJlc3Npb246W1wicHJvcGVydGllc1wiXSxPYmplY3RQYXR0ZXJuOltcInByb3BlcnRpZXNcIl0sUHJpdmF0ZUlkZW50aWZpZXI6W10sUHJvZ3JhbTpbXCJib2R5XCJdLFByb3BlcnR5OltcImtleVwiLFwidmFsdWVcIl0sUHJvcGVydHlEZWZpbml0aW9uOltcImtleVwiLFwidmFsdWVcIl0sUmVzdEVsZW1lbnQ6W1wiYXJndW1lbnRcIl0sUmV0dXJuU3RhdGVtZW50OltcImFyZ3VtZW50XCJdLFNlcXVlbmNlRXhwcmVzc2lvbjpbXCJleHByZXNzaW9uc1wiXSxTcHJlYWRFbGVtZW50OltcImFyZ3VtZW50XCJdLFN1cGVyOltdLFN3aXRjaFN0YXRlbWVudDpbXCJkaXNjcmltaW5hbnRcIixcImNhc2VzXCJdLFN3aXRjaENhc2U6W1widGVzdFwiLFwiY29uc2VxdWVudFwiXSxUYWdnZWRUZW1wbGF0ZUV4cHJlc3Npb246W1widGFnXCIsXCJxdWFzaVwiXSxUZW1wbGF0ZUVsZW1lbnQ6W10sVGVtcGxhdGVMaXRlcmFsOltcInF1YXNpc1wiLFwiZXhwcmVzc2lvbnNcIl0sVGhpc0V4cHJlc3Npb246W10sVGhyb3dTdGF0ZW1lbnQ6W1wiYXJndW1lbnRcIl0sVHJ5U3RhdGVtZW50OltcImJsb2NrXCIsXCJoYW5kbGVyXCIsXCJmaW5hbGl6ZXJcIl0sVW5hcnlFeHByZXNzaW9uOltcImFyZ3VtZW50XCJdLFVwZGF0ZUV4cHJlc3Npb246W1wiYXJndW1lbnRcIl0sVmFyaWFibGVEZWNsYXJhdGlvbjpbXCJkZWNsYXJhdGlvbnNcIl0sVmFyaWFibGVEZWNsYXJhdG9yOltcImlkXCIsXCJpbml0XCJdLFdoaWxlU3RhdGVtZW50OltcInRlc3RcIixcImJvZHlcIl0sV2l0aFN0YXRlbWVudDpbXCJvYmplY3RcIixcImJvZHlcIl0sWWllbGRFeHByZXNzaW9uOltcImFyZ3VtZW50XCJdfSxCUkVBSz17fSxTS0lQPXt9LFJFTU9WRT17fSxWaXNpdG9yT3B0aW9uPXtCcmVhazpCUkVBSyxTa2lwOlNLSVAsUmVtb3ZlOlJFTU9WRX07ZnVuY3Rpb24gUmVmZXJlbmNlKHBhcmVudCxrZXkpe3RoaXMucGFyZW50PXBhcmVudCx0aGlzLmtleT1rZXk7fVJlZmVyZW5jZS5wcm90b3R5cGUucmVwbGFjZT1mdW5jdGlvbihub2RlKXt0aGlzLnBhcmVudFt0aGlzLmtleV09bm9kZTt9LFJlZmVyZW5jZS5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKCl7cmV0dXJuIEFycmF5LmlzQXJyYXkodGhpcy5wYXJlbnQpPyh0aGlzLnBhcmVudC5zcGxpY2UodGhpcy5rZXksMSksITApOih0aGlzLnJlcGxhY2UobnVsbCksITEpfTtmdW5jdGlvbiBFbGVtZW50KG5vZGUscGF0aCx3cmFwLHJlZjIpe3RoaXMubm9kZT1ub2RlLHRoaXMucGF0aD1wYXRoLHRoaXMud3JhcD13cmFwLHRoaXMucmVmPXJlZjI7fWZ1bmN0aW9uIENvbnRyb2xsZXIoKXt9Q29udHJvbGxlci5wcm90b3R5cGUucGF0aD1mdW5jdGlvbigpe3ZhciBpLGl6LGosanoscmVzdWx0LGVsZW1lbnQ7ZnVuY3Rpb24gYWRkVG9QYXRoKHJlc3VsdDIscGF0aDIpe2lmKEFycmF5LmlzQXJyYXkocGF0aDIpKWZvcihqPTAsano9cGF0aDIubGVuZ3RoO2o8ano7KytqKXJlc3VsdDIucHVzaChwYXRoMltqXSk7ZWxzZSByZXN1bHQyLnB1c2gocGF0aDIpO31pZighdGhpcy5fX2N1cnJlbnQucGF0aClyZXR1cm4gbnVsbDtmb3IocmVzdWx0PVtdLGk9Mixpej10aGlzLl9fbGVhdmVsaXN0Lmxlbmd0aDtpPGl6OysraSllbGVtZW50PXRoaXMuX19sZWF2ZWxpc3RbaV0sYWRkVG9QYXRoKHJlc3VsdCxlbGVtZW50LnBhdGgpO3JldHVybiBhZGRUb1BhdGgocmVzdWx0LHRoaXMuX19jdXJyZW50LnBhdGgpLHJlc3VsdH0sQ29udHJvbGxlci5wcm90b3R5cGUudHlwZT1mdW5jdGlvbigpe3ZhciBub2RlPXRoaXMuY3VycmVudCgpO3JldHVybiBub2RlLnR5cGV8fHRoaXMuX19jdXJyZW50LndyYXB9LENvbnRyb2xsZXIucHJvdG90eXBlLnBhcmVudHM9ZnVuY3Rpb24oKXt2YXIgaSxpeixyZXN1bHQ7Zm9yKHJlc3VsdD1bXSxpPTEsaXo9dGhpcy5fX2xlYXZlbGlzdC5sZW5ndGg7aTxpejsrK2kpcmVzdWx0LnB1c2godGhpcy5fX2xlYXZlbGlzdFtpXS5ub2RlKTtyZXR1cm4gcmVzdWx0fSxDb250cm9sbGVyLnByb3RvdHlwZS5jdXJyZW50PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19jdXJyZW50Lm5vZGV9LENvbnRyb2xsZXIucHJvdG90eXBlLl9fZXhlY3V0ZT1mdW5jdGlvbihjYWxsYmFjayxlbGVtZW50KXt2YXIgcHJldmlvdXMscmVzdWx0O3JldHVybiByZXN1bHQ9dm9pZCAwLHByZXZpb3VzPXRoaXMuX19jdXJyZW50LHRoaXMuX19jdXJyZW50PWVsZW1lbnQsdGhpcy5fX3N0YXRlPW51bGwsY2FsbGJhY2smJihyZXN1bHQ9Y2FsbGJhY2suY2FsbCh0aGlzLGVsZW1lbnQubm9kZSx0aGlzLl9fbGVhdmVsaXN0W3RoaXMuX19sZWF2ZWxpc3QubGVuZ3RoLTFdLm5vZGUpKSx0aGlzLl9fY3VycmVudD1wcmV2aW91cyxyZXN1bHR9LENvbnRyb2xsZXIucHJvdG90eXBlLm5vdGlmeT1mdW5jdGlvbihmbGFnKXt0aGlzLl9fc3RhdGU9ZmxhZzt9LENvbnRyb2xsZXIucHJvdG90eXBlLnNraXA9ZnVuY3Rpb24oKXt0aGlzLm5vdGlmeShTS0lQKTt9LENvbnRyb2xsZXIucHJvdG90eXBlLmJyZWFrPWZ1bmN0aW9uKCl7dGhpcy5ub3RpZnkoQlJFQUspO30sQ29udHJvbGxlci5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKCl7dGhpcy5ub3RpZnkoUkVNT1ZFKTt9LENvbnRyb2xsZXIucHJvdG90eXBlLl9faW5pdGlhbGl6ZT1mdW5jdGlvbihyb290LHZpc2l0b3Ipe3RoaXMudmlzaXRvcj12aXNpdG9yLHRoaXMucm9vdD1yb290LHRoaXMuX193b3JrbGlzdD1bXSx0aGlzLl9fbGVhdmVsaXN0PVtdLHRoaXMuX19jdXJyZW50PW51bGwsdGhpcy5fX3N0YXRlPW51bGwsdGhpcy5fX2ZhbGxiYWNrPW51bGwsdmlzaXRvci5mYWxsYmFjaz09PVwiaXRlcmF0aW9uXCI/dGhpcy5fX2ZhbGxiYWNrPU9iamVjdC5rZXlzOnR5cGVvZiB2aXNpdG9yLmZhbGxiYWNrPT1cImZ1bmN0aW9uXCImJih0aGlzLl9fZmFsbGJhY2s9dmlzaXRvci5mYWxsYmFjayksdGhpcy5fX2tleXM9VmlzaXRvcktleXMsdmlzaXRvci5rZXlzJiYodGhpcy5fX2tleXM9T2JqZWN0LmFzc2lnbihPYmplY3QuY3JlYXRlKHRoaXMuX19rZXlzKSx2aXNpdG9yLmtleXMpKTt9O2Z1bmN0aW9uIGlzTm9kZShub2RlKXtyZXR1cm4gbm9kZT09bnVsbD8hMTp0eXBlb2Ygbm9kZT09XCJvYmplY3RcIiYmdHlwZW9mIG5vZGUudHlwZT09XCJzdHJpbmdcIn1mdW5jdGlvbiBpc1Byb3BlcnR5KG5vZGVUeXBlLGtleSl7cmV0dXJuIChub2RlVHlwZT09PVN5bnRheC5PYmplY3RFeHByZXNzaW9ufHxub2RlVHlwZT09PVN5bnRheC5PYmplY3RQYXR0ZXJuKSYma2V5PT09XCJwcm9wZXJ0aWVzXCJ9ZnVuY3Rpb24gY2FuZGlkYXRlRXhpc3RzSW5MZWF2ZUxpc3QobGVhdmVsaXN0LGNhbmRpZGF0ZSl7Zm9yKHZhciBpPWxlYXZlbGlzdC5sZW5ndGgtMTtpPj0wOy0taSlpZihsZWF2ZWxpc3RbaV0ubm9kZT09PWNhbmRpZGF0ZSlyZXR1cm4gITA7cmV0dXJuICExfUNvbnRyb2xsZXIucHJvdG90eXBlLnRyYXZlcnNlPWZ1bmN0aW9uKHJvb3QsdmlzaXRvcil7dmFyIHdvcmtsaXN0LGxlYXZlbGlzdCxlbGVtZW50LG5vZGUsbm9kZVR5cGUscmV0LGtleSxjdXJyZW50MixjdXJyZW50MjIsY2FuZGlkYXRlcyxjYW5kaWRhdGUsc2VudGluZWw7Zm9yKHRoaXMuX19pbml0aWFsaXplKHJvb3QsdmlzaXRvciksc2VudGluZWw9e30sd29ya2xpc3Q9dGhpcy5fX3dvcmtsaXN0LGxlYXZlbGlzdD10aGlzLl9fbGVhdmVsaXN0LHdvcmtsaXN0LnB1c2gobmV3IEVsZW1lbnQocm9vdCxudWxsLG51bGwsbnVsbCkpLGxlYXZlbGlzdC5wdXNoKG5ldyBFbGVtZW50KG51bGwsbnVsbCxudWxsLG51bGwpKTt3b3JrbGlzdC5sZW5ndGg7KXtpZihlbGVtZW50PXdvcmtsaXN0LnBvcCgpLGVsZW1lbnQ9PT1zZW50aW5lbCl7aWYoZWxlbWVudD1sZWF2ZWxpc3QucG9wKCkscmV0PXRoaXMuX19leGVjdXRlKHZpc2l0b3IubGVhdmUsZWxlbWVudCksdGhpcy5fX3N0YXRlPT09QlJFQUt8fHJldD09PUJSRUFLKXJldHVybjtjb250aW51ZX1pZihlbGVtZW50Lm5vZGUpe2lmKHJldD10aGlzLl9fZXhlY3V0ZSh2aXNpdG9yLmVudGVyLGVsZW1lbnQpLHRoaXMuX19zdGF0ZT09PUJSRUFLfHxyZXQ9PT1CUkVBSylyZXR1cm47aWYod29ya2xpc3QucHVzaChzZW50aW5lbCksbGVhdmVsaXN0LnB1c2goZWxlbWVudCksdGhpcy5fX3N0YXRlPT09U0tJUHx8cmV0PT09U0tJUCljb250aW51ZTtpZihub2RlPWVsZW1lbnQubm9kZSxub2RlVHlwZT1ub2RlLnR5cGV8fGVsZW1lbnQud3JhcCxjYW5kaWRhdGVzPXRoaXMuX19rZXlzW25vZGVUeXBlXSwhY2FuZGlkYXRlcylpZih0aGlzLl9fZmFsbGJhY2spY2FuZGlkYXRlcz10aGlzLl9fZmFsbGJhY2sobm9kZSk7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIG5vZGUgdHlwZSBcIitub2RlVHlwZStcIi5cIik7Zm9yKGN1cnJlbnQyPWNhbmRpZGF0ZXMubGVuZ3RoOyhjdXJyZW50Mi09MSk+PTA7KWlmKGtleT1jYW5kaWRhdGVzW2N1cnJlbnQyXSxjYW5kaWRhdGU9bm9kZVtrZXldLCEhY2FuZGlkYXRlKXtpZihBcnJheS5pc0FycmF5KGNhbmRpZGF0ZSkpe2ZvcihjdXJyZW50MjI9Y2FuZGlkYXRlLmxlbmd0aDsoY3VycmVudDIyLT0xKT49MDspaWYoY2FuZGlkYXRlW2N1cnJlbnQyMl0mJiFjYW5kaWRhdGVFeGlzdHNJbkxlYXZlTGlzdChsZWF2ZWxpc3QsY2FuZGlkYXRlW2N1cnJlbnQyMl0pKXtpZihpc1Byb3BlcnR5KG5vZGVUeXBlLGNhbmRpZGF0ZXNbY3VycmVudDJdKSllbGVtZW50PW5ldyBFbGVtZW50KGNhbmRpZGF0ZVtjdXJyZW50MjJdLFtrZXksY3VycmVudDIyXSxcIlByb3BlcnR5XCIsbnVsbCk7ZWxzZSBpZihpc05vZGUoY2FuZGlkYXRlW2N1cnJlbnQyMl0pKWVsZW1lbnQ9bmV3IEVsZW1lbnQoY2FuZGlkYXRlW2N1cnJlbnQyMl0sW2tleSxjdXJyZW50MjJdLG51bGwsbnVsbCk7ZWxzZSBjb250aW51ZTt3b3JrbGlzdC5wdXNoKGVsZW1lbnQpO319ZWxzZSBpZihpc05vZGUoY2FuZGlkYXRlKSl7aWYoY2FuZGlkYXRlRXhpc3RzSW5MZWF2ZUxpc3QobGVhdmVsaXN0LGNhbmRpZGF0ZSkpY29udGludWU7d29ya2xpc3QucHVzaChuZXcgRWxlbWVudChjYW5kaWRhdGUsa2V5LG51bGwsbnVsbCkpO319fX19LENvbnRyb2xsZXIucHJvdG90eXBlLnJlcGxhY2U9ZnVuY3Rpb24ocm9vdCx2aXNpdG9yKXt2YXIgd29ya2xpc3QsbGVhdmVsaXN0LG5vZGUsbm9kZVR5cGUsdGFyZ2V0LGVsZW1lbnQsY3VycmVudDIsY3VycmVudDIyLGNhbmRpZGF0ZXMsY2FuZGlkYXRlLHNlbnRpbmVsLG91dGVyLGtleTtmdW5jdGlvbiByZW1vdmVFbGVtKGVsZW1lbnQyKXt2YXIgaSxrZXkyLG5leHRFbGVtLHBhcmVudDtpZihlbGVtZW50Mi5yZWYucmVtb3ZlKCkpe2ZvcihrZXkyPWVsZW1lbnQyLnJlZi5rZXkscGFyZW50PWVsZW1lbnQyLnJlZi5wYXJlbnQsaT13b3JrbGlzdC5sZW5ndGg7aS0tOylpZihuZXh0RWxlbT13b3JrbGlzdFtpXSxuZXh0RWxlbS5yZWYmJm5leHRFbGVtLnJlZi5wYXJlbnQ9PT1wYXJlbnQpe2lmKG5leHRFbGVtLnJlZi5rZXk8a2V5MilicmVhazstLW5leHRFbGVtLnJlZi5rZXk7fX19Zm9yKHRoaXMuX19pbml0aWFsaXplKHJvb3QsdmlzaXRvciksc2VudGluZWw9e30sd29ya2xpc3Q9dGhpcy5fX3dvcmtsaXN0LGxlYXZlbGlzdD10aGlzLl9fbGVhdmVsaXN0LG91dGVyPXtyb290fSxlbGVtZW50PW5ldyBFbGVtZW50KHJvb3QsbnVsbCxudWxsLG5ldyBSZWZlcmVuY2Uob3V0ZXIsXCJyb290XCIpKSx3b3JrbGlzdC5wdXNoKGVsZW1lbnQpLGxlYXZlbGlzdC5wdXNoKGVsZW1lbnQpO3dvcmtsaXN0Lmxlbmd0aDspe2lmKGVsZW1lbnQ9d29ya2xpc3QucG9wKCksZWxlbWVudD09PXNlbnRpbmVsKXtpZihlbGVtZW50PWxlYXZlbGlzdC5wb3AoKSx0YXJnZXQ9dGhpcy5fX2V4ZWN1dGUodmlzaXRvci5sZWF2ZSxlbGVtZW50KSx0YXJnZXQhPT12b2lkIDAmJnRhcmdldCE9PUJSRUFLJiZ0YXJnZXQhPT1TS0lQJiZ0YXJnZXQhPT1SRU1PVkUmJmVsZW1lbnQucmVmLnJlcGxhY2UodGFyZ2V0KSwodGhpcy5fX3N0YXRlPT09UkVNT1ZFfHx0YXJnZXQ9PT1SRU1PVkUpJiZyZW1vdmVFbGVtKGVsZW1lbnQpLHRoaXMuX19zdGF0ZT09PUJSRUFLfHx0YXJnZXQ9PT1CUkVBSylyZXR1cm4gb3V0ZXIucm9vdDtjb250aW51ZX1pZih0YXJnZXQ9dGhpcy5fX2V4ZWN1dGUodmlzaXRvci5lbnRlcixlbGVtZW50KSx0YXJnZXQhPT12b2lkIDAmJnRhcmdldCE9PUJSRUFLJiZ0YXJnZXQhPT1TS0lQJiZ0YXJnZXQhPT1SRU1PVkUmJihlbGVtZW50LnJlZi5yZXBsYWNlKHRhcmdldCksZWxlbWVudC5ub2RlPXRhcmdldCksKHRoaXMuX19zdGF0ZT09PVJFTU9WRXx8dGFyZ2V0PT09UkVNT1ZFKSYmKHJlbW92ZUVsZW0oZWxlbWVudCksZWxlbWVudC5ub2RlPW51bGwpLHRoaXMuX19zdGF0ZT09PUJSRUFLfHx0YXJnZXQ9PT1CUkVBSylyZXR1cm4gb3V0ZXIucm9vdDtpZihub2RlPWVsZW1lbnQubm9kZSwhIW5vZGUmJih3b3JrbGlzdC5wdXNoKHNlbnRpbmVsKSxsZWF2ZWxpc3QucHVzaChlbGVtZW50KSwhKHRoaXMuX19zdGF0ZT09PVNLSVB8fHRhcmdldD09PVNLSVApKSl7aWYobm9kZVR5cGU9bm9kZS50eXBlfHxlbGVtZW50LndyYXAsY2FuZGlkYXRlcz10aGlzLl9fa2V5c1tub2RlVHlwZV0sIWNhbmRpZGF0ZXMpaWYodGhpcy5fX2ZhbGxiYWNrKWNhbmRpZGF0ZXM9dGhpcy5fX2ZhbGxiYWNrKG5vZGUpO2Vsc2UgdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBub2RlIHR5cGUgXCIrbm9kZVR5cGUrXCIuXCIpO2ZvcihjdXJyZW50Mj1jYW5kaWRhdGVzLmxlbmd0aDsoY3VycmVudDItPTEpPj0wOylpZihrZXk9Y2FuZGlkYXRlc1tjdXJyZW50Ml0sY2FuZGlkYXRlPW5vZGVba2V5XSwhIWNhbmRpZGF0ZSlpZihBcnJheS5pc0FycmF5KGNhbmRpZGF0ZSkpe2ZvcihjdXJyZW50MjI9Y2FuZGlkYXRlLmxlbmd0aDsoY3VycmVudDIyLT0xKT49MDspaWYoY2FuZGlkYXRlW2N1cnJlbnQyMl0pe2lmKGlzUHJvcGVydHkobm9kZVR5cGUsY2FuZGlkYXRlc1tjdXJyZW50Ml0pKWVsZW1lbnQ9bmV3IEVsZW1lbnQoY2FuZGlkYXRlW2N1cnJlbnQyMl0sW2tleSxjdXJyZW50MjJdLFwiUHJvcGVydHlcIixuZXcgUmVmZXJlbmNlKGNhbmRpZGF0ZSxjdXJyZW50MjIpKTtlbHNlIGlmKGlzTm9kZShjYW5kaWRhdGVbY3VycmVudDIyXSkpZWxlbWVudD1uZXcgRWxlbWVudChjYW5kaWRhdGVbY3VycmVudDIyXSxba2V5LGN1cnJlbnQyMl0sbnVsbCxuZXcgUmVmZXJlbmNlKGNhbmRpZGF0ZSxjdXJyZW50MjIpKTtlbHNlIGNvbnRpbnVlO3dvcmtsaXN0LnB1c2goZWxlbWVudCk7fX1lbHNlIGlzTm9kZShjYW5kaWRhdGUpJiZ3b3JrbGlzdC5wdXNoKG5ldyBFbGVtZW50KGNhbmRpZGF0ZSxrZXksbnVsbCxuZXcgUmVmZXJlbmNlKG5vZGUsa2V5KSkpO319cmV0dXJuIG91dGVyLnJvb3R9O2Z1bmN0aW9uIHRyYXZlcnNlKHJvb3QsdmlzaXRvcil7dmFyIGNvbnRyb2xsZXI9bmV3IENvbnRyb2xsZXI7cmV0dXJuIGNvbnRyb2xsZXIudHJhdmVyc2Uocm9vdCx2aXNpdG9yKX1mdW5jdGlvbiByZXBsYWNlKHJvb3QsdmlzaXRvcil7dmFyIGNvbnRyb2xsZXI9bmV3IENvbnRyb2xsZXI7cmV0dXJuIGNvbnRyb2xsZXIucmVwbGFjZShyb290LHZpc2l0b3IpfWZ1bmN0aW9uIGV4dGVuZENvbW1lbnRSYW5nZShjb21tZW50LHRva2Vucyl7dmFyIHRhcmdldDtyZXR1cm4gdGFyZ2V0PXVwcGVyQm91bmQodG9rZW5zLGZ1bmN0aW9uKHRva2VuKXtyZXR1cm4gdG9rZW4ucmFuZ2VbMF0+Y29tbWVudC5yYW5nZVswXX0pLGNvbW1lbnQuZXh0ZW5kZWRSYW5nZT1bY29tbWVudC5yYW5nZVswXSxjb21tZW50LnJhbmdlWzFdXSx0YXJnZXQhPT10b2tlbnMubGVuZ3RoJiYoY29tbWVudC5leHRlbmRlZFJhbmdlWzFdPXRva2Vuc1t0YXJnZXRdLnJhbmdlWzBdKSx0YXJnZXQtPTEsdGFyZ2V0Pj0wJiYoY29tbWVudC5leHRlbmRlZFJhbmdlWzBdPXRva2Vuc1t0YXJnZXRdLnJhbmdlWzFdKSxjb21tZW50fWZ1bmN0aW9uIGF0dGFjaENvbW1lbnRzKHRyZWUscHJvdmlkZWRDb21tZW50cyx0b2tlbnMpe3ZhciBjb21tZW50cz1bXSxjb21tZW50LGxlbixpLGN1cnNvcjtpZighdHJlZS5yYW5nZSl0aHJvdyBuZXcgRXJyb3IoXCJhdHRhY2hDb21tZW50cyBuZWVkcyByYW5nZSBpbmZvcm1hdGlvblwiKTtpZighdG9rZW5zLmxlbmd0aCl7aWYocHJvdmlkZWRDb21tZW50cy5sZW5ndGgpe2ZvcihpPTAsbGVuPXByb3ZpZGVkQ29tbWVudHMubGVuZ3RoO2k8bGVuO2krPTEpY29tbWVudD1kZWVwQ29weShwcm92aWRlZENvbW1lbnRzW2ldKSxjb21tZW50LmV4dGVuZGVkUmFuZ2U9WzAsdHJlZS5yYW5nZVswXV0sY29tbWVudHMucHVzaChjb21tZW50KTt0cmVlLmxlYWRpbmdDb21tZW50cz1jb21tZW50czt9cmV0dXJuIHRyZWV9Zm9yKGk9MCxsZW49cHJvdmlkZWRDb21tZW50cy5sZW5ndGg7aTxsZW47aSs9MSljb21tZW50cy5wdXNoKGV4dGVuZENvbW1lbnRSYW5nZShkZWVwQ29weShwcm92aWRlZENvbW1lbnRzW2ldKSx0b2tlbnMpKTtyZXR1cm4gY3Vyc29yPTAsdHJhdmVyc2UodHJlZSx7ZW50ZXI6ZnVuY3Rpb24obm9kZSl7Zm9yKHZhciBjb21tZW50MjtjdXJzb3I8Y29tbWVudHMubGVuZ3RoJiYoY29tbWVudDI9Y29tbWVudHNbY3Vyc29yXSwhKGNvbW1lbnQyLmV4dGVuZGVkUmFuZ2VbMV0+bm9kZS5yYW5nZVswXSkpOyljb21tZW50Mi5leHRlbmRlZFJhbmdlWzFdPT09bm9kZS5yYW5nZVswXT8obm9kZS5sZWFkaW5nQ29tbWVudHN8fChub2RlLmxlYWRpbmdDb21tZW50cz1bXSksbm9kZS5sZWFkaW5nQ29tbWVudHMucHVzaChjb21tZW50MiksY29tbWVudHMuc3BsaWNlKGN1cnNvciwxKSk6Y3Vyc29yKz0xO2lmKGN1cnNvcj09PWNvbW1lbnRzLmxlbmd0aClyZXR1cm4gVmlzaXRvck9wdGlvbi5CcmVhaztpZihjb21tZW50c1tjdXJzb3JdLmV4dGVuZGVkUmFuZ2VbMF0+bm9kZS5yYW5nZVsxXSlyZXR1cm4gVmlzaXRvck9wdGlvbi5Ta2lwfX0pLGN1cnNvcj0wLHRyYXZlcnNlKHRyZWUse2xlYXZlOmZ1bmN0aW9uKG5vZGUpe2Zvcih2YXIgY29tbWVudDI7Y3Vyc29yPGNvbW1lbnRzLmxlbmd0aCYmKGNvbW1lbnQyPWNvbW1lbnRzW2N1cnNvcl0sIShub2RlLnJhbmdlWzFdPGNvbW1lbnQyLmV4dGVuZGVkUmFuZ2VbMF0pKTspbm9kZS5yYW5nZVsxXT09PWNvbW1lbnQyLmV4dGVuZGVkUmFuZ2VbMF0/KG5vZGUudHJhaWxpbmdDb21tZW50c3x8KG5vZGUudHJhaWxpbmdDb21tZW50cz1bXSksbm9kZS50cmFpbGluZ0NvbW1lbnRzLnB1c2goY29tbWVudDIpLGNvbW1lbnRzLnNwbGljZShjdXJzb3IsMSkpOmN1cnNvcis9MTtpZihjdXJzb3I9PT1jb21tZW50cy5sZW5ndGgpcmV0dXJuIFZpc2l0b3JPcHRpb24uQnJlYWs7aWYoY29tbWVudHNbY3Vyc29yXS5leHRlbmRlZFJhbmdlWzBdPm5vZGUucmFuZ2VbMV0pcmV0dXJuIFZpc2l0b3JPcHRpb24uU2tpcH19KSx0cmVlfXJldHVybiBleHBvcnRzMi5TeW50YXg9U3ludGF4LGV4cG9ydHMyLnRyYXZlcnNlPXRyYXZlcnNlLGV4cG9ydHMyLnJlcGxhY2U9cmVwbGFjZSxleHBvcnRzMi5hdHRhY2hDb21tZW50cz1hdHRhY2hDb21tZW50cyxleHBvcnRzMi5WaXNpdG9yS2V5cz1WaXNpdG9yS2V5cyxleHBvcnRzMi5WaXNpdG9yT3B0aW9uPVZpc2l0b3JPcHRpb24sZXhwb3J0czIuQ29udHJvbGxlcj1Db250cm9sbGVyLGV4cG9ydHMyLmNsb25lRW52aXJvbm1lbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gY2xvbmUoe30pfSxleHBvcnRzMn0pKGV4cG9ydHMpO319KTt2YXIgcmVxdWlyZV9hc3Q9X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvZXN1dGlscy9saWIvYXN0LmpzXCIoZXhwb3J0cyxtb2R1bGUpeyhmdW5jdGlvbigpe2Z1bmN0aW9uIGlzRXhwcmVzc2lvbihub2RlKXtpZihub2RlPT1udWxsKXJldHVybiAhMTtzd2l0Y2gobm9kZS50eXBlKXtjYXNlXCJBcnJheUV4cHJlc3Npb25cIjpjYXNlXCJBc3NpZ25tZW50RXhwcmVzc2lvblwiOmNhc2VcIkJpbmFyeUV4cHJlc3Npb25cIjpjYXNlXCJDYWxsRXhwcmVzc2lvblwiOmNhc2VcIkNvbmRpdGlvbmFsRXhwcmVzc2lvblwiOmNhc2VcIkZ1bmN0aW9uRXhwcmVzc2lvblwiOmNhc2VcIklkZW50aWZpZXJcIjpjYXNlXCJMaXRlcmFsXCI6Y2FzZVwiTG9naWNhbEV4cHJlc3Npb25cIjpjYXNlXCJNZW1iZXJFeHByZXNzaW9uXCI6Y2FzZVwiTmV3RXhwcmVzc2lvblwiOmNhc2VcIk9iamVjdEV4cHJlc3Npb25cIjpjYXNlXCJTZXF1ZW5jZUV4cHJlc3Npb25cIjpjYXNlXCJUaGlzRXhwcmVzc2lvblwiOmNhc2VcIlVuYXJ5RXhwcmVzc2lvblwiOmNhc2VcIlVwZGF0ZUV4cHJlc3Npb25cIjpyZXR1cm4gITB9cmV0dXJuICExfWZ1bmN0aW9uIGlzSXRlcmF0aW9uU3RhdGVtZW50KG5vZGUpe2lmKG5vZGU9PW51bGwpcmV0dXJuICExO3N3aXRjaChub2RlLnR5cGUpe2Nhc2VcIkRvV2hpbGVTdGF0ZW1lbnRcIjpjYXNlXCJGb3JJblN0YXRlbWVudFwiOmNhc2VcIkZvclN0YXRlbWVudFwiOmNhc2VcIldoaWxlU3RhdGVtZW50XCI6cmV0dXJuICEwfXJldHVybiAhMX1mdW5jdGlvbiBpc1N0YXRlbWVudChub2RlKXtpZihub2RlPT1udWxsKXJldHVybiAhMTtzd2l0Y2gobm9kZS50eXBlKXtjYXNlXCJCbG9ja1N0YXRlbWVudFwiOmNhc2VcIkJyZWFrU3RhdGVtZW50XCI6Y2FzZVwiQ29udGludWVTdGF0ZW1lbnRcIjpjYXNlXCJEZWJ1Z2dlclN0YXRlbWVudFwiOmNhc2VcIkRvV2hpbGVTdGF0ZW1lbnRcIjpjYXNlXCJFbXB0eVN0YXRlbWVudFwiOmNhc2VcIkV4cHJlc3Npb25TdGF0ZW1lbnRcIjpjYXNlXCJGb3JJblN0YXRlbWVudFwiOmNhc2VcIkZvclN0YXRlbWVudFwiOmNhc2VcIklmU3RhdGVtZW50XCI6Y2FzZVwiTGFiZWxlZFN0YXRlbWVudFwiOmNhc2VcIlJldHVyblN0YXRlbWVudFwiOmNhc2VcIlN3aXRjaFN0YXRlbWVudFwiOmNhc2VcIlRocm93U3RhdGVtZW50XCI6Y2FzZVwiVHJ5U3RhdGVtZW50XCI6Y2FzZVwiVmFyaWFibGVEZWNsYXJhdGlvblwiOmNhc2VcIldoaWxlU3RhdGVtZW50XCI6Y2FzZVwiV2l0aFN0YXRlbWVudFwiOnJldHVybiAhMH1yZXR1cm4gITF9ZnVuY3Rpb24gaXNTb3VyY2VFbGVtZW50KG5vZGUpe3JldHVybiBpc1N0YXRlbWVudChub2RlKXx8bm9kZSE9bnVsbCYmbm9kZS50eXBlPT09XCJGdW5jdGlvbkRlY2xhcmF0aW9uXCJ9ZnVuY3Rpb24gdHJhaWxpbmdTdGF0ZW1lbnQobm9kZSl7c3dpdGNoKG5vZGUudHlwZSl7Y2FzZVwiSWZTdGF0ZW1lbnRcIjpyZXR1cm4gbm9kZS5hbHRlcm5hdGUhPW51bGw/bm9kZS5hbHRlcm5hdGU6bm9kZS5jb25zZXF1ZW50O2Nhc2VcIkxhYmVsZWRTdGF0ZW1lbnRcIjpjYXNlXCJGb3JTdGF0ZW1lbnRcIjpjYXNlXCJGb3JJblN0YXRlbWVudFwiOmNhc2VcIldoaWxlU3RhdGVtZW50XCI6Y2FzZVwiV2l0aFN0YXRlbWVudFwiOnJldHVybiBub2RlLmJvZHl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gaXNQcm9ibGVtYXRpY0lmU3RhdGVtZW50KG5vZGUpe3ZhciBjdXJyZW50MjtpZihub2RlLnR5cGUhPT1cIklmU3RhdGVtZW50XCJ8fG5vZGUuYWx0ZXJuYXRlPT1udWxsKXJldHVybiAhMTtjdXJyZW50Mj1ub2RlLmNvbnNlcXVlbnQ7ZG97aWYoY3VycmVudDIudHlwZT09PVwiSWZTdGF0ZW1lbnRcIiYmY3VycmVudDIuYWx0ZXJuYXRlPT1udWxsKXJldHVybiAhMDtjdXJyZW50Mj10cmFpbGluZ1N0YXRlbWVudChjdXJyZW50Mik7fXdoaWxlKGN1cnJlbnQyKTtyZXR1cm4gITF9bW9kdWxlLmV4cG9ydHM9e2lzRXhwcmVzc2lvbixpc1N0YXRlbWVudCxpc0l0ZXJhdGlvblN0YXRlbWVudCxpc1NvdXJjZUVsZW1lbnQsaXNQcm9ibGVtYXRpY0lmU3RhdGVtZW50LHRyYWlsaW5nU3RhdGVtZW50fTt9KSgpO319KTt2YXIgcmVxdWlyZV9jb2RlPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2VzdXRpbHMvbGliL2NvZGUuanNcIihleHBvcnRzLG1vZHVsZSl7KGZ1bmN0aW9uKCl7dmFyIEVTNlJlZ2V4LEVTNVJlZ2V4LE5PTl9BU0NJSV9XSElURVNQQUNFUyxJREVOVElGSUVSX1NUQVJULElERU5USUZJRVJfUEFSVCxjaDtFUzVSZWdleD17Tm9uQXNjaWlJZGVudGlmaWVyU3RhcnQ6L1tcXHhBQVxceEI1XFx4QkFcXHhDMC1cXHhENlxceEQ4LVxceEY2XFx4RjgtXFx1MDJDMVxcdTAyQzYtXFx1MDJEMVxcdTAyRTAtXFx1MDJFNFxcdTAyRUNcXHUwMkVFXFx1MDM3MC1cXHUwMzc0XFx1MDM3NlxcdTAzNzdcXHUwMzdBLVxcdTAzN0RcXHUwMzdGXFx1MDM4NlxcdTAzODgtXFx1MDM4QVxcdTAzOENcXHUwMzhFLVxcdTAzQTFcXHUwM0EzLVxcdTAzRjVcXHUwM0Y3LVxcdTA0ODFcXHUwNDhBLVxcdTA1MkZcXHUwNTMxLVxcdTA1NTZcXHUwNTU5XFx1MDU2MS1cXHUwNTg3XFx1MDVEMC1cXHUwNUVBXFx1MDVGMC1cXHUwNUYyXFx1MDYyMC1cXHUwNjRBXFx1MDY2RVxcdTA2NkZcXHUwNjcxLVxcdTA2RDNcXHUwNkQ1XFx1MDZFNVxcdTA2RTZcXHUwNkVFXFx1MDZFRlxcdTA2RkEtXFx1MDZGQ1xcdTA2RkZcXHUwNzEwXFx1MDcxMi1cXHUwNzJGXFx1MDc0RC1cXHUwN0E1XFx1MDdCMVxcdTA3Q0EtXFx1MDdFQVxcdTA3RjRcXHUwN0Y1XFx1MDdGQVxcdTA4MDAtXFx1MDgxNVxcdTA4MUFcXHUwODI0XFx1MDgyOFxcdTA4NDAtXFx1MDg1OFxcdTA4QTAtXFx1MDhCNFxcdTA4QjYtXFx1MDhCRFxcdTA5MDQtXFx1MDkzOVxcdTA5M0RcXHUwOTUwXFx1MDk1OC1cXHUwOTYxXFx1MDk3MS1cXHUwOTgwXFx1MDk4NS1cXHUwOThDXFx1MDk4RlxcdTA5OTBcXHUwOTkzLVxcdTA5QThcXHUwOUFBLVxcdTA5QjBcXHUwOUIyXFx1MDlCNi1cXHUwOUI5XFx1MDlCRFxcdTA5Q0VcXHUwOURDXFx1MDlERFxcdTA5REYtXFx1MDlFMVxcdTA5RjBcXHUwOUYxXFx1MEEwNS1cXHUwQTBBXFx1MEEwRlxcdTBBMTBcXHUwQTEzLVxcdTBBMjhcXHUwQTJBLVxcdTBBMzBcXHUwQTMyXFx1MEEzM1xcdTBBMzVcXHUwQTM2XFx1MEEzOFxcdTBBMzlcXHUwQTU5LVxcdTBBNUNcXHUwQTVFXFx1MEE3Mi1cXHUwQTc0XFx1MEE4NS1cXHUwQThEXFx1MEE4Ri1cXHUwQTkxXFx1MEE5My1cXHUwQUE4XFx1MEFBQS1cXHUwQUIwXFx1MEFCMlxcdTBBQjNcXHUwQUI1LVxcdTBBQjlcXHUwQUJEXFx1MEFEMFxcdTBBRTBcXHUwQUUxXFx1MEFGOVxcdTBCMDUtXFx1MEIwQ1xcdTBCMEZcXHUwQjEwXFx1MEIxMy1cXHUwQjI4XFx1MEIyQS1cXHUwQjMwXFx1MEIzMlxcdTBCMzNcXHUwQjM1LVxcdTBCMzlcXHUwQjNEXFx1MEI1Q1xcdTBCNURcXHUwQjVGLVxcdTBCNjFcXHUwQjcxXFx1MEI4M1xcdTBCODUtXFx1MEI4QVxcdTBCOEUtXFx1MEI5MFxcdTBCOTItXFx1MEI5NVxcdTBCOTlcXHUwQjlBXFx1MEI5Q1xcdTBCOUVcXHUwQjlGXFx1MEJBM1xcdTBCQTRcXHUwQkE4LVxcdTBCQUFcXHUwQkFFLVxcdTBCQjlcXHUwQkQwXFx1MEMwNS1cXHUwQzBDXFx1MEMwRS1cXHUwQzEwXFx1MEMxMi1cXHUwQzI4XFx1MEMyQS1cXHUwQzM5XFx1MEMzRFxcdTBDNTgtXFx1MEM1QVxcdTBDNjBcXHUwQzYxXFx1MEM4MFxcdTBDODUtXFx1MEM4Q1xcdTBDOEUtXFx1MEM5MFxcdTBDOTItXFx1MENBOFxcdTBDQUEtXFx1MENCM1xcdTBDQjUtXFx1MENCOVxcdTBDQkRcXHUwQ0RFXFx1MENFMFxcdTBDRTFcXHUwQ0YxXFx1MENGMlxcdTBEMDUtXFx1MEQwQ1xcdTBEMEUtXFx1MEQxMFxcdTBEMTItXFx1MEQzQVxcdTBEM0RcXHUwRDRFXFx1MEQ1NC1cXHUwRDU2XFx1MEQ1Ri1cXHUwRDYxXFx1MEQ3QS1cXHUwRDdGXFx1MEQ4NS1cXHUwRDk2XFx1MEQ5QS1cXHUwREIxXFx1MERCMy1cXHUwREJCXFx1MERCRFxcdTBEQzAtXFx1MERDNlxcdTBFMDEtXFx1MEUzMFxcdTBFMzJcXHUwRTMzXFx1MEU0MC1cXHUwRTQ2XFx1MEU4MVxcdTBFODJcXHUwRTg0XFx1MEU4N1xcdTBFODhcXHUwRThBXFx1MEU4RFxcdTBFOTQtXFx1MEU5N1xcdTBFOTktXFx1MEU5RlxcdTBFQTEtXFx1MEVBM1xcdTBFQTVcXHUwRUE3XFx1MEVBQVxcdTBFQUJcXHUwRUFELVxcdTBFQjBcXHUwRUIyXFx1MEVCM1xcdTBFQkRcXHUwRUMwLVxcdTBFQzRcXHUwRUM2XFx1MEVEQy1cXHUwRURGXFx1MEYwMFxcdTBGNDAtXFx1MEY0N1xcdTBGNDktXFx1MEY2Q1xcdTBGODgtXFx1MEY4Q1xcdTEwMDAtXFx1MTAyQVxcdTEwM0ZcXHUxMDUwLVxcdTEwNTVcXHUxMDVBLVxcdTEwNURcXHUxMDYxXFx1MTA2NVxcdTEwNjZcXHUxMDZFLVxcdTEwNzBcXHUxMDc1LVxcdTEwODFcXHUxMDhFXFx1MTBBMC1cXHUxMEM1XFx1MTBDN1xcdTEwQ0RcXHUxMEQwLVxcdTEwRkFcXHUxMEZDLVxcdTEyNDhcXHUxMjRBLVxcdTEyNERcXHUxMjUwLVxcdTEyNTZcXHUxMjU4XFx1MTI1QS1cXHUxMjVEXFx1MTI2MC1cXHUxMjg4XFx1MTI4QS1cXHUxMjhEXFx1MTI5MC1cXHUxMkIwXFx1MTJCMi1cXHUxMkI1XFx1MTJCOC1cXHUxMkJFXFx1MTJDMFxcdTEyQzItXFx1MTJDNVxcdTEyQzgtXFx1MTJENlxcdTEyRDgtXFx1MTMxMFxcdTEzMTItXFx1MTMxNVxcdTEzMTgtXFx1MTM1QVxcdTEzODAtXFx1MTM4RlxcdTEzQTAtXFx1MTNGNVxcdTEzRjgtXFx1MTNGRFxcdTE0MDEtXFx1MTY2Q1xcdTE2NkYtXFx1MTY3RlxcdTE2ODEtXFx1MTY5QVxcdTE2QTAtXFx1MTZFQVxcdTE2RUUtXFx1MTZGOFxcdTE3MDAtXFx1MTcwQ1xcdTE3MEUtXFx1MTcxMVxcdTE3MjAtXFx1MTczMVxcdTE3NDAtXFx1MTc1MVxcdTE3NjAtXFx1MTc2Q1xcdTE3NkUtXFx1MTc3MFxcdTE3ODAtXFx1MTdCM1xcdTE3RDdcXHUxN0RDXFx1MTgyMC1cXHUxODc3XFx1MTg4MC1cXHUxODg0XFx1MTg4Ny1cXHUxOEE4XFx1MThBQVxcdTE4QjAtXFx1MThGNVxcdTE5MDAtXFx1MTkxRVxcdTE5NTAtXFx1MTk2RFxcdTE5NzAtXFx1MTk3NFxcdTE5ODAtXFx1MTlBQlxcdTE5QjAtXFx1MTlDOVxcdTFBMDAtXFx1MUExNlxcdTFBMjAtXFx1MUE1NFxcdTFBQTdcXHUxQjA1LVxcdTFCMzNcXHUxQjQ1LVxcdTFCNEJcXHUxQjgzLVxcdTFCQTBcXHUxQkFFXFx1MUJBRlxcdTFCQkEtXFx1MUJFNVxcdTFDMDAtXFx1MUMyM1xcdTFDNEQtXFx1MUM0RlxcdTFDNUEtXFx1MUM3RFxcdTFDODAtXFx1MUM4OFxcdTFDRTktXFx1MUNFQ1xcdTFDRUUtXFx1MUNGMVxcdTFDRjVcXHUxQ0Y2XFx1MUQwMC1cXHUxREJGXFx1MUUwMC1cXHUxRjE1XFx1MUYxOC1cXHUxRjFEXFx1MUYyMC1cXHUxRjQ1XFx1MUY0OC1cXHUxRjREXFx1MUY1MC1cXHUxRjU3XFx1MUY1OVxcdTFGNUJcXHUxRjVEXFx1MUY1Ri1cXHUxRjdEXFx1MUY4MC1cXHUxRkI0XFx1MUZCNi1cXHUxRkJDXFx1MUZCRVxcdTFGQzItXFx1MUZDNFxcdTFGQzYtXFx1MUZDQ1xcdTFGRDAtXFx1MUZEM1xcdTFGRDYtXFx1MUZEQlxcdTFGRTAtXFx1MUZFQ1xcdTFGRjItXFx1MUZGNFxcdTFGRjYtXFx1MUZGQ1xcdTIwNzFcXHUyMDdGXFx1MjA5MC1cXHUyMDlDXFx1MjEwMlxcdTIxMDdcXHUyMTBBLVxcdTIxMTNcXHUyMTE1XFx1MjExOS1cXHUyMTFEXFx1MjEyNFxcdTIxMjZcXHUyMTI4XFx1MjEyQS1cXHUyMTJEXFx1MjEyRi1cXHUyMTM5XFx1MjEzQy1cXHUyMTNGXFx1MjE0NS1cXHUyMTQ5XFx1MjE0RVxcdTIxNjAtXFx1MjE4OFxcdTJDMDAtXFx1MkMyRVxcdTJDMzAtXFx1MkM1RVxcdTJDNjAtXFx1MkNFNFxcdTJDRUItXFx1MkNFRVxcdTJDRjJcXHUyQ0YzXFx1MkQwMC1cXHUyRDI1XFx1MkQyN1xcdTJEMkRcXHUyRDMwLVxcdTJENjdcXHUyRDZGXFx1MkQ4MC1cXHUyRDk2XFx1MkRBMC1cXHUyREE2XFx1MkRBOC1cXHUyREFFXFx1MkRCMC1cXHUyREI2XFx1MkRCOC1cXHUyREJFXFx1MkRDMC1cXHUyREM2XFx1MkRDOC1cXHUyRENFXFx1MkREMC1cXHUyREQ2XFx1MkREOC1cXHUyRERFXFx1MkUyRlxcdTMwMDUtXFx1MzAwN1xcdTMwMjEtXFx1MzAyOVxcdTMwMzEtXFx1MzAzNVxcdTMwMzgtXFx1MzAzQ1xcdTMwNDEtXFx1MzA5NlxcdTMwOUQtXFx1MzA5RlxcdTMwQTEtXFx1MzBGQVxcdTMwRkMtXFx1MzBGRlxcdTMxMDUtXFx1MzEyRFxcdTMxMzEtXFx1MzE4RVxcdTMxQTAtXFx1MzFCQVxcdTMxRjAtXFx1MzFGRlxcdTM0MDAtXFx1NERCNVxcdTRFMDAtXFx1OUZENVxcdUEwMDAtXFx1QTQ4Q1xcdUE0RDAtXFx1QTRGRFxcdUE1MDAtXFx1QTYwQ1xcdUE2MTAtXFx1QTYxRlxcdUE2MkFcXHVBNjJCXFx1QTY0MC1cXHVBNjZFXFx1QTY3Ri1cXHVBNjlEXFx1QTZBMC1cXHVBNkVGXFx1QTcxNy1cXHVBNzFGXFx1QTcyMi1cXHVBNzg4XFx1QTc4Qi1cXHVBN0FFXFx1QTdCMC1cXHVBN0I3XFx1QTdGNy1cXHVBODAxXFx1QTgwMy1cXHVBODA1XFx1QTgwNy1cXHVBODBBXFx1QTgwQy1cXHVBODIyXFx1QTg0MC1cXHVBODczXFx1QTg4Mi1cXHVBOEIzXFx1QThGMi1cXHVBOEY3XFx1QThGQlxcdUE4RkRcXHVBOTBBLVxcdUE5MjVcXHVBOTMwLVxcdUE5NDZcXHVBOTYwLVxcdUE5N0NcXHVBOTg0LVxcdUE5QjJcXHVBOUNGXFx1QTlFMC1cXHVBOUU0XFx1QTlFNi1cXHVBOUVGXFx1QTlGQS1cXHVBOUZFXFx1QUEwMC1cXHVBQTI4XFx1QUE0MC1cXHVBQTQyXFx1QUE0NC1cXHVBQTRCXFx1QUE2MC1cXHVBQTc2XFx1QUE3QVxcdUFBN0UtXFx1QUFBRlxcdUFBQjFcXHVBQUI1XFx1QUFCNlxcdUFBQjktXFx1QUFCRFxcdUFBQzBcXHVBQUMyXFx1QUFEQi1cXHVBQUREXFx1QUFFMC1cXHVBQUVBXFx1QUFGMi1cXHVBQUY0XFx1QUIwMS1cXHVBQjA2XFx1QUIwOS1cXHVBQjBFXFx1QUIxMS1cXHVBQjE2XFx1QUIyMC1cXHVBQjI2XFx1QUIyOC1cXHVBQjJFXFx1QUIzMC1cXHVBQjVBXFx1QUI1Qy1cXHVBQjY1XFx1QUI3MC1cXHVBQkUyXFx1QUMwMC1cXHVEN0EzXFx1RDdCMC1cXHVEN0M2XFx1RDdDQi1cXHVEN0ZCXFx1RjkwMC1cXHVGQTZEXFx1RkE3MC1cXHVGQUQ5XFx1RkIwMC1cXHVGQjA2XFx1RkIxMy1cXHVGQjE3XFx1RkIxRFxcdUZCMUYtXFx1RkIyOFxcdUZCMkEtXFx1RkIzNlxcdUZCMzgtXFx1RkIzQ1xcdUZCM0VcXHVGQjQwXFx1RkI0MVxcdUZCNDNcXHVGQjQ0XFx1RkI0Ni1cXHVGQkIxXFx1RkJEMy1cXHVGRDNEXFx1RkQ1MC1cXHVGRDhGXFx1RkQ5Mi1cXHVGREM3XFx1RkRGMC1cXHVGREZCXFx1RkU3MC1cXHVGRTc0XFx1RkU3Ni1cXHVGRUZDXFx1RkYyMS1cXHVGRjNBXFx1RkY0MS1cXHVGRjVBXFx1RkY2Ni1cXHVGRkJFXFx1RkZDMi1cXHVGRkM3XFx1RkZDQS1cXHVGRkNGXFx1RkZEMi1cXHVGRkQ3XFx1RkZEQS1cXHVGRkRDXS8sTm9uQXNjaWlJZGVudGlmaWVyUGFydDovW1xceEFBXFx4QjVcXHhCQVxceEMwLVxceEQ2XFx4RDgtXFx4RjZcXHhGOC1cXHUwMkMxXFx1MDJDNi1cXHUwMkQxXFx1MDJFMC1cXHUwMkU0XFx1MDJFQ1xcdTAyRUVcXHUwMzAwLVxcdTAzNzRcXHUwMzc2XFx1MDM3N1xcdTAzN0EtXFx1MDM3RFxcdTAzN0ZcXHUwMzg2XFx1MDM4OC1cXHUwMzhBXFx1MDM4Q1xcdTAzOEUtXFx1MDNBMVxcdTAzQTMtXFx1MDNGNVxcdTAzRjctXFx1MDQ4MVxcdTA0ODMtXFx1MDQ4N1xcdTA0OEEtXFx1MDUyRlxcdTA1MzEtXFx1MDU1NlxcdTA1NTlcXHUwNTYxLVxcdTA1ODdcXHUwNTkxLVxcdTA1QkRcXHUwNUJGXFx1MDVDMVxcdTA1QzJcXHUwNUM0XFx1MDVDNVxcdTA1QzdcXHUwNUQwLVxcdTA1RUFcXHUwNUYwLVxcdTA1RjJcXHUwNjEwLVxcdTA2MUFcXHUwNjIwLVxcdTA2NjlcXHUwNjZFLVxcdTA2RDNcXHUwNkQ1LVxcdTA2RENcXHUwNkRGLVxcdTA2RThcXHUwNkVBLVxcdTA2RkNcXHUwNkZGXFx1MDcxMC1cXHUwNzRBXFx1MDc0RC1cXHUwN0IxXFx1MDdDMC1cXHUwN0Y1XFx1MDdGQVxcdTA4MDAtXFx1MDgyRFxcdTA4NDAtXFx1MDg1QlxcdTA4QTAtXFx1MDhCNFxcdTA4QjYtXFx1MDhCRFxcdTA4RDQtXFx1MDhFMVxcdTA4RTMtXFx1MDk2M1xcdTA5NjYtXFx1MDk2RlxcdTA5NzEtXFx1MDk4M1xcdTA5ODUtXFx1MDk4Q1xcdTA5OEZcXHUwOTkwXFx1MDk5My1cXHUwOUE4XFx1MDlBQS1cXHUwOUIwXFx1MDlCMlxcdTA5QjYtXFx1MDlCOVxcdTA5QkMtXFx1MDlDNFxcdTA5QzdcXHUwOUM4XFx1MDlDQi1cXHUwOUNFXFx1MDlEN1xcdTA5RENcXHUwOUREXFx1MDlERi1cXHUwOUUzXFx1MDlFNi1cXHUwOUYxXFx1MEEwMS1cXHUwQTAzXFx1MEEwNS1cXHUwQTBBXFx1MEEwRlxcdTBBMTBcXHUwQTEzLVxcdTBBMjhcXHUwQTJBLVxcdTBBMzBcXHUwQTMyXFx1MEEzM1xcdTBBMzVcXHUwQTM2XFx1MEEzOFxcdTBBMzlcXHUwQTNDXFx1MEEzRS1cXHUwQTQyXFx1MEE0N1xcdTBBNDhcXHUwQTRCLVxcdTBBNERcXHUwQTUxXFx1MEE1OS1cXHUwQTVDXFx1MEE1RVxcdTBBNjYtXFx1MEE3NVxcdTBBODEtXFx1MEE4M1xcdTBBODUtXFx1MEE4RFxcdTBBOEYtXFx1MEE5MVxcdTBBOTMtXFx1MEFBOFxcdTBBQUEtXFx1MEFCMFxcdTBBQjJcXHUwQUIzXFx1MEFCNS1cXHUwQUI5XFx1MEFCQy1cXHUwQUM1XFx1MEFDNy1cXHUwQUM5XFx1MEFDQi1cXHUwQUNEXFx1MEFEMFxcdTBBRTAtXFx1MEFFM1xcdTBBRTYtXFx1MEFFRlxcdTBBRjlcXHUwQjAxLVxcdTBCMDNcXHUwQjA1LVxcdTBCMENcXHUwQjBGXFx1MEIxMFxcdTBCMTMtXFx1MEIyOFxcdTBCMkEtXFx1MEIzMFxcdTBCMzJcXHUwQjMzXFx1MEIzNS1cXHUwQjM5XFx1MEIzQy1cXHUwQjQ0XFx1MEI0N1xcdTBCNDhcXHUwQjRCLVxcdTBCNERcXHUwQjU2XFx1MEI1N1xcdTBCNUNcXHUwQjVEXFx1MEI1Ri1cXHUwQjYzXFx1MEI2Ni1cXHUwQjZGXFx1MEI3MVxcdTBCODJcXHUwQjgzXFx1MEI4NS1cXHUwQjhBXFx1MEI4RS1cXHUwQjkwXFx1MEI5Mi1cXHUwQjk1XFx1MEI5OVxcdTBCOUFcXHUwQjlDXFx1MEI5RVxcdTBCOUZcXHUwQkEzXFx1MEJBNFxcdTBCQTgtXFx1MEJBQVxcdTBCQUUtXFx1MEJCOVxcdTBCQkUtXFx1MEJDMlxcdTBCQzYtXFx1MEJDOFxcdTBCQ0EtXFx1MEJDRFxcdTBCRDBcXHUwQkQ3XFx1MEJFNi1cXHUwQkVGXFx1MEMwMC1cXHUwQzAzXFx1MEMwNS1cXHUwQzBDXFx1MEMwRS1cXHUwQzEwXFx1MEMxMi1cXHUwQzI4XFx1MEMyQS1cXHUwQzM5XFx1MEMzRC1cXHUwQzQ0XFx1MEM0Ni1cXHUwQzQ4XFx1MEM0QS1cXHUwQzREXFx1MEM1NVxcdTBDNTZcXHUwQzU4LVxcdTBDNUFcXHUwQzYwLVxcdTBDNjNcXHUwQzY2LVxcdTBDNkZcXHUwQzgwLVxcdTBDODNcXHUwQzg1LVxcdTBDOENcXHUwQzhFLVxcdTBDOTBcXHUwQzkyLVxcdTBDQThcXHUwQ0FBLVxcdTBDQjNcXHUwQ0I1LVxcdTBDQjlcXHUwQ0JDLVxcdTBDQzRcXHUwQ0M2LVxcdTBDQzhcXHUwQ0NBLVxcdTBDQ0RcXHUwQ0Q1XFx1MENENlxcdTBDREVcXHUwQ0UwLVxcdTBDRTNcXHUwQ0U2LVxcdTBDRUZcXHUwQ0YxXFx1MENGMlxcdTBEMDEtXFx1MEQwM1xcdTBEMDUtXFx1MEQwQ1xcdTBEMEUtXFx1MEQxMFxcdTBEMTItXFx1MEQzQVxcdTBEM0QtXFx1MEQ0NFxcdTBENDYtXFx1MEQ0OFxcdTBENEEtXFx1MEQ0RVxcdTBENTQtXFx1MEQ1N1xcdTBENUYtXFx1MEQ2M1xcdTBENjYtXFx1MEQ2RlxcdTBEN0EtXFx1MEQ3RlxcdTBEODJcXHUwRDgzXFx1MEQ4NS1cXHUwRDk2XFx1MEQ5QS1cXHUwREIxXFx1MERCMy1cXHUwREJCXFx1MERCRFxcdTBEQzAtXFx1MERDNlxcdTBEQ0FcXHUwRENGLVxcdTBERDRcXHUwREQ2XFx1MEREOC1cXHUwRERGXFx1MERFNi1cXHUwREVGXFx1MERGMlxcdTBERjNcXHUwRTAxLVxcdTBFM0FcXHUwRTQwLVxcdTBFNEVcXHUwRTUwLVxcdTBFNTlcXHUwRTgxXFx1MEU4MlxcdTBFODRcXHUwRTg3XFx1MEU4OFxcdTBFOEFcXHUwRThEXFx1MEU5NC1cXHUwRTk3XFx1MEU5OS1cXHUwRTlGXFx1MEVBMS1cXHUwRUEzXFx1MEVBNVxcdTBFQTdcXHUwRUFBXFx1MEVBQlxcdTBFQUQtXFx1MEVCOVxcdTBFQkItXFx1MEVCRFxcdTBFQzAtXFx1MEVDNFxcdTBFQzZcXHUwRUM4LVxcdTBFQ0RcXHUwRUQwLVxcdTBFRDlcXHUwRURDLVxcdTBFREZcXHUwRjAwXFx1MEYxOFxcdTBGMTlcXHUwRjIwLVxcdTBGMjlcXHUwRjM1XFx1MEYzN1xcdTBGMzlcXHUwRjNFLVxcdTBGNDdcXHUwRjQ5LVxcdTBGNkNcXHUwRjcxLVxcdTBGODRcXHUwRjg2LVxcdTBGOTdcXHUwRjk5LVxcdTBGQkNcXHUwRkM2XFx1MTAwMC1cXHUxMDQ5XFx1MTA1MC1cXHUxMDlEXFx1MTBBMC1cXHUxMEM1XFx1MTBDN1xcdTEwQ0RcXHUxMEQwLVxcdTEwRkFcXHUxMEZDLVxcdTEyNDhcXHUxMjRBLVxcdTEyNERcXHUxMjUwLVxcdTEyNTZcXHUxMjU4XFx1MTI1QS1cXHUxMjVEXFx1MTI2MC1cXHUxMjg4XFx1MTI4QS1cXHUxMjhEXFx1MTI5MC1cXHUxMkIwXFx1MTJCMi1cXHUxMkI1XFx1MTJCOC1cXHUxMkJFXFx1MTJDMFxcdTEyQzItXFx1MTJDNVxcdTEyQzgtXFx1MTJENlxcdTEyRDgtXFx1MTMxMFxcdTEzMTItXFx1MTMxNVxcdTEzMTgtXFx1MTM1QVxcdTEzNUQtXFx1MTM1RlxcdTEzODAtXFx1MTM4RlxcdTEzQTAtXFx1MTNGNVxcdTEzRjgtXFx1MTNGRFxcdTE0MDEtXFx1MTY2Q1xcdTE2NkYtXFx1MTY3RlxcdTE2ODEtXFx1MTY5QVxcdTE2QTAtXFx1MTZFQVxcdTE2RUUtXFx1MTZGOFxcdTE3MDAtXFx1MTcwQ1xcdTE3MEUtXFx1MTcxNFxcdTE3MjAtXFx1MTczNFxcdTE3NDAtXFx1MTc1M1xcdTE3NjAtXFx1MTc2Q1xcdTE3NkUtXFx1MTc3MFxcdTE3NzJcXHUxNzczXFx1MTc4MC1cXHUxN0QzXFx1MTdEN1xcdTE3RENcXHUxN0REXFx1MTdFMC1cXHUxN0U5XFx1MTgwQi1cXHUxODBEXFx1MTgxMC1cXHUxODE5XFx1MTgyMC1cXHUxODc3XFx1MTg4MC1cXHUxOEFBXFx1MThCMC1cXHUxOEY1XFx1MTkwMC1cXHUxOTFFXFx1MTkyMC1cXHUxOTJCXFx1MTkzMC1cXHUxOTNCXFx1MTk0Ni1cXHUxOTZEXFx1MTk3MC1cXHUxOTc0XFx1MTk4MC1cXHUxOUFCXFx1MTlCMC1cXHUxOUM5XFx1MTlEMC1cXHUxOUQ5XFx1MUEwMC1cXHUxQTFCXFx1MUEyMC1cXHUxQTVFXFx1MUE2MC1cXHUxQTdDXFx1MUE3Ri1cXHUxQTg5XFx1MUE5MC1cXHUxQTk5XFx1MUFBN1xcdTFBQjAtXFx1MUFCRFxcdTFCMDAtXFx1MUI0QlxcdTFCNTAtXFx1MUI1OVxcdTFCNkItXFx1MUI3M1xcdTFCODAtXFx1MUJGM1xcdTFDMDAtXFx1MUMzN1xcdTFDNDAtXFx1MUM0OVxcdTFDNEQtXFx1MUM3RFxcdTFDODAtXFx1MUM4OFxcdTFDRDAtXFx1MUNEMlxcdTFDRDQtXFx1MUNGNlxcdTFDRjhcXHUxQ0Y5XFx1MUQwMC1cXHUxREY1XFx1MURGQi1cXHUxRjE1XFx1MUYxOC1cXHUxRjFEXFx1MUYyMC1cXHUxRjQ1XFx1MUY0OC1cXHUxRjREXFx1MUY1MC1cXHUxRjU3XFx1MUY1OVxcdTFGNUJcXHUxRjVEXFx1MUY1Ri1cXHUxRjdEXFx1MUY4MC1cXHUxRkI0XFx1MUZCNi1cXHUxRkJDXFx1MUZCRVxcdTFGQzItXFx1MUZDNFxcdTFGQzYtXFx1MUZDQ1xcdTFGRDAtXFx1MUZEM1xcdTFGRDYtXFx1MUZEQlxcdTFGRTAtXFx1MUZFQ1xcdTFGRjItXFx1MUZGNFxcdTFGRjYtXFx1MUZGQ1xcdTIwMENcXHUyMDBEXFx1MjAzRlxcdTIwNDBcXHUyMDU0XFx1MjA3MVxcdTIwN0ZcXHUyMDkwLVxcdTIwOUNcXHUyMEQwLVxcdTIwRENcXHUyMEUxXFx1MjBFNS1cXHUyMEYwXFx1MjEwMlxcdTIxMDdcXHUyMTBBLVxcdTIxMTNcXHUyMTE1XFx1MjExOS1cXHUyMTFEXFx1MjEyNFxcdTIxMjZcXHUyMTI4XFx1MjEyQS1cXHUyMTJEXFx1MjEyRi1cXHUyMTM5XFx1MjEzQy1cXHUyMTNGXFx1MjE0NS1cXHUyMTQ5XFx1MjE0RVxcdTIxNjAtXFx1MjE4OFxcdTJDMDAtXFx1MkMyRVxcdTJDMzAtXFx1MkM1RVxcdTJDNjAtXFx1MkNFNFxcdTJDRUItXFx1MkNGM1xcdTJEMDAtXFx1MkQyNVxcdTJEMjdcXHUyRDJEXFx1MkQzMC1cXHUyRDY3XFx1MkQ2RlxcdTJEN0YtXFx1MkQ5NlxcdTJEQTAtXFx1MkRBNlxcdTJEQTgtXFx1MkRBRVxcdTJEQjAtXFx1MkRCNlxcdTJEQjgtXFx1MkRCRVxcdTJEQzAtXFx1MkRDNlxcdTJEQzgtXFx1MkRDRVxcdTJERDAtXFx1MkRENlxcdTJERDgtXFx1MkRERVxcdTJERTAtXFx1MkRGRlxcdTJFMkZcXHUzMDA1LVxcdTMwMDdcXHUzMDIxLVxcdTMwMkZcXHUzMDMxLVxcdTMwMzVcXHUzMDM4LVxcdTMwM0NcXHUzMDQxLVxcdTMwOTZcXHUzMDk5XFx1MzA5QVxcdTMwOUQtXFx1MzA5RlxcdTMwQTEtXFx1MzBGQVxcdTMwRkMtXFx1MzBGRlxcdTMxMDUtXFx1MzEyRFxcdTMxMzEtXFx1MzE4RVxcdTMxQTAtXFx1MzFCQVxcdTMxRjAtXFx1MzFGRlxcdTM0MDAtXFx1NERCNVxcdTRFMDAtXFx1OUZENVxcdUEwMDAtXFx1QTQ4Q1xcdUE0RDAtXFx1QTRGRFxcdUE1MDAtXFx1QTYwQ1xcdUE2MTAtXFx1QTYyQlxcdUE2NDAtXFx1QTY2RlxcdUE2NzQtXFx1QTY3RFxcdUE2N0YtXFx1QTZGMVxcdUE3MTctXFx1QTcxRlxcdUE3MjItXFx1QTc4OFxcdUE3OEItXFx1QTdBRVxcdUE3QjAtXFx1QTdCN1xcdUE3RjctXFx1QTgyN1xcdUE4NDAtXFx1QTg3M1xcdUE4ODAtXFx1QThDNVxcdUE4RDAtXFx1QThEOVxcdUE4RTAtXFx1QThGN1xcdUE4RkJcXHVBOEZEXFx1QTkwMC1cXHVBOTJEXFx1QTkzMC1cXHVBOTUzXFx1QTk2MC1cXHVBOTdDXFx1QTk4MC1cXHVBOUMwXFx1QTlDRi1cXHVBOUQ5XFx1QTlFMC1cXHVBOUZFXFx1QUEwMC1cXHVBQTM2XFx1QUE0MC1cXHVBQTREXFx1QUE1MC1cXHVBQTU5XFx1QUE2MC1cXHVBQTc2XFx1QUE3QS1cXHVBQUMyXFx1QUFEQi1cXHVBQUREXFx1QUFFMC1cXHVBQUVGXFx1QUFGMi1cXHVBQUY2XFx1QUIwMS1cXHVBQjA2XFx1QUIwOS1cXHVBQjBFXFx1QUIxMS1cXHVBQjE2XFx1QUIyMC1cXHVBQjI2XFx1QUIyOC1cXHVBQjJFXFx1QUIzMC1cXHVBQjVBXFx1QUI1Qy1cXHVBQjY1XFx1QUI3MC1cXHVBQkVBXFx1QUJFQ1xcdUFCRURcXHVBQkYwLVxcdUFCRjlcXHVBQzAwLVxcdUQ3QTNcXHVEN0IwLVxcdUQ3QzZcXHVEN0NCLVxcdUQ3RkJcXHVGOTAwLVxcdUZBNkRcXHVGQTcwLVxcdUZBRDlcXHVGQjAwLVxcdUZCMDZcXHVGQjEzLVxcdUZCMTdcXHVGQjFELVxcdUZCMjhcXHVGQjJBLVxcdUZCMzZcXHVGQjM4LVxcdUZCM0NcXHVGQjNFXFx1RkI0MFxcdUZCNDFcXHVGQjQzXFx1RkI0NFxcdUZCNDYtXFx1RkJCMVxcdUZCRDMtXFx1RkQzRFxcdUZENTAtXFx1RkQ4RlxcdUZEOTItXFx1RkRDN1xcdUZERjAtXFx1RkRGQlxcdUZFMDAtXFx1RkUwRlxcdUZFMjAtXFx1RkUyRlxcdUZFMzNcXHVGRTM0XFx1RkU0RC1cXHVGRTRGXFx1RkU3MC1cXHVGRTc0XFx1RkU3Ni1cXHVGRUZDXFx1RkYxMC1cXHVGRjE5XFx1RkYyMS1cXHVGRjNBXFx1RkYzRlxcdUZGNDEtXFx1RkY1QVxcdUZGNjYtXFx1RkZCRVxcdUZGQzItXFx1RkZDN1xcdUZGQ0EtXFx1RkZDRlxcdUZGRDItXFx1RkZEN1xcdUZGREEtXFx1RkZEQ10vfSxFUzZSZWdleD17Tm9uQXNjaWlJZGVudGlmaWVyU3RhcnQ6L1tcXHhBQVxceEI1XFx4QkFcXHhDMC1cXHhENlxceEQ4LVxceEY2XFx4RjgtXFx1MDJDMVxcdTAyQzYtXFx1MDJEMVxcdTAyRTAtXFx1MDJFNFxcdTAyRUNcXHUwMkVFXFx1MDM3MC1cXHUwMzc0XFx1MDM3NlxcdTAzNzdcXHUwMzdBLVxcdTAzN0RcXHUwMzdGXFx1MDM4NlxcdTAzODgtXFx1MDM4QVxcdTAzOENcXHUwMzhFLVxcdTAzQTFcXHUwM0EzLVxcdTAzRjVcXHUwM0Y3LVxcdTA0ODFcXHUwNDhBLVxcdTA1MkZcXHUwNTMxLVxcdTA1NTZcXHUwNTU5XFx1MDU2MS1cXHUwNTg3XFx1MDVEMC1cXHUwNUVBXFx1MDVGMC1cXHUwNUYyXFx1MDYyMC1cXHUwNjRBXFx1MDY2RVxcdTA2NkZcXHUwNjcxLVxcdTA2RDNcXHUwNkQ1XFx1MDZFNVxcdTA2RTZcXHUwNkVFXFx1MDZFRlxcdTA2RkEtXFx1MDZGQ1xcdTA2RkZcXHUwNzEwXFx1MDcxMi1cXHUwNzJGXFx1MDc0RC1cXHUwN0E1XFx1MDdCMVxcdTA3Q0EtXFx1MDdFQVxcdTA3RjRcXHUwN0Y1XFx1MDdGQVxcdTA4MDAtXFx1MDgxNVxcdTA4MUFcXHUwODI0XFx1MDgyOFxcdTA4NDAtXFx1MDg1OFxcdTA4QTAtXFx1MDhCNFxcdTA4QjYtXFx1MDhCRFxcdTA5MDQtXFx1MDkzOVxcdTA5M0RcXHUwOTUwXFx1MDk1OC1cXHUwOTYxXFx1MDk3MS1cXHUwOTgwXFx1MDk4NS1cXHUwOThDXFx1MDk4RlxcdTA5OTBcXHUwOTkzLVxcdTA5QThcXHUwOUFBLVxcdTA5QjBcXHUwOUIyXFx1MDlCNi1cXHUwOUI5XFx1MDlCRFxcdTA5Q0VcXHUwOURDXFx1MDlERFxcdTA5REYtXFx1MDlFMVxcdTA5RjBcXHUwOUYxXFx1MEEwNS1cXHUwQTBBXFx1MEEwRlxcdTBBMTBcXHUwQTEzLVxcdTBBMjhcXHUwQTJBLVxcdTBBMzBcXHUwQTMyXFx1MEEzM1xcdTBBMzVcXHUwQTM2XFx1MEEzOFxcdTBBMzlcXHUwQTU5LVxcdTBBNUNcXHUwQTVFXFx1MEE3Mi1cXHUwQTc0XFx1MEE4NS1cXHUwQThEXFx1MEE4Ri1cXHUwQTkxXFx1MEE5My1cXHUwQUE4XFx1MEFBQS1cXHUwQUIwXFx1MEFCMlxcdTBBQjNcXHUwQUI1LVxcdTBBQjlcXHUwQUJEXFx1MEFEMFxcdTBBRTBcXHUwQUUxXFx1MEFGOVxcdTBCMDUtXFx1MEIwQ1xcdTBCMEZcXHUwQjEwXFx1MEIxMy1cXHUwQjI4XFx1MEIyQS1cXHUwQjMwXFx1MEIzMlxcdTBCMzNcXHUwQjM1LVxcdTBCMzlcXHUwQjNEXFx1MEI1Q1xcdTBCNURcXHUwQjVGLVxcdTBCNjFcXHUwQjcxXFx1MEI4M1xcdTBCODUtXFx1MEI4QVxcdTBCOEUtXFx1MEI5MFxcdTBCOTItXFx1MEI5NVxcdTBCOTlcXHUwQjlBXFx1MEI5Q1xcdTBCOUVcXHUwQjlGXFx1MEJBM1xcdTBCQTRcXHUwQkE4LVxcdTBCQUFcXHUwQkFFLVxcdTBCQjlcXHUwQkQwXFx1MEMwNS1cXHUwQzBDXFx1MEMwRS1cXHUwQzEwXFx1MEMxMi1cXHUwQzI4XFx1MEMyQS1cXHUwQzM5XFx1MEMzRFxcdTBDNTgtXFx1MEM1QVxcdTBDNjBcXHUwQzYxXFx1MEM4MFxcdTBDODUtXFx1MEM4Q1xcdTBDOEUtXFx1MEM5MFxcdTBDOTItXFx1MENBOFxcdTBDQUEtXFx1MENCM1xcdTBDQjUtXFx1MENCOVxcdTBDQkRcXHUwQ0RFXFx1MENFMFxcdTBDRTFcXHUwQ0YxXFx1MENGMlxcdTBEMDUtXFx1MEQwQ1xcdTBEMEUtXFx1MEQxMFxcdTBEMTItXFx1MEQzQVxcdTBEM0RcXHUwRDRFXFx1MEQ1NC1cXHUwRDU2XFx1MEQ1Ri1cXHUwRDYxXFx1MEQ3QS1cXHUwRDdGXFx1MEQ4NS1cXHUwRDk2XFx1MEQ5QS1cXHUwREIxXFx1MERCMy1cXHUwREJCXFx1MERCRFxcdTBEQzAtXFx1MERDNlxcdTBFMDEtXFx1MEUzMFxcdTBFMzJcXHUwRTMzXFx1MEU0MC1cXHUwRTQ2XFx1MEU4MVxcdTBFODJcXHUwRTg0XFx1MEU4N1xcdTBFODhcXHUwRThBXFx1MEU4RFxcdTBFOTQtXFx1MEU5N1xcdTBFOTktXFx1MEU5RlxcdTBFQTEtXFx1MEVBM1xcdTBFQTVcXHUwRUE3XFx1MEVBQVxcdTBFQUJcXHUwRUFELVxcdTBFQjBcXHUwRUIyXFx1MEVCM1xcdTBFQkRcXHUwRUMwLVxcdTBFQzRcXHUwRUM2XFx1MEVEQy1cXHUwRURGXFx1MEYwMFxcdTBGNDAtXFx1MEY0N1xcdTBGNDktXFx1MEY2Q1xcdTBGODgtXFx1MEY4Q1xcdTEwMDAtXFx1MTAyQVxcdTEwM0ZcXHUxMDUwLVxcdTEwNTVcXHUxMDVBLVxcdTEwNURcXHUxMDYxXFx1MTA2NVxcdTEwNjZcXHUxMDZFLVxcdTEwNzBcXHUxMDc1LVxcdTEwODFcXHUxMDhFXFx1MTBBMC1cXHUxMEM1XFx1MTBDN1xcdTEwQ0RcXHUxMEQwLVxcdTEwRkFcXHUxMEZDLVxcdTEyNDhcXHUxMjRBLVxcdTEyNERcXHUxMjUwLVxcdTEyNTZcXHUxMjU4XFx1MTI1QS1cXHUxMjVEXFx1MTI2MC1cXHUxMjg4XFx1MTI4QS1cXHUxMjhEXFx1MTI5MC1cXHUxMkIwXFx1MTJCMi1cXHUxMkI1XFx1MTJCOC1cXHUxMkJFXFx1MTJDMFxcdTEyQzItXFx1MTJDNVxcdTEyQzgtXFx1MTJENlxcdTEyRDgtXFx1MTMxMFxcdTEzMTItXFx1MTMxNVxcdTEzMTgtXFx1MTM1QVxcdTEzODAtXFx1MTM4RlxcdTEzQTAtXFx1MTNGNVxcdTEzRjgtXFx1MTNGRFxcdTE0MDEtXFx1MTY2Q1xcdTE2NkYtXFx1MTY3RlxcdTE2ODEtXFx1MTY5QVxcdTE2QTAtXFx1MTZFQVxcdTE2RUUtXFx1MTZGOFxcdTE3MDAtXFx1MTcwQ1xcdTE3MEUtXFx1MTcxMVxcdTE3MjAtXFx1MTczMVxcdTE3NDAtXFx1MTc1MVxcdTE3NjAtXFx1MTc2Q1xcdTE3NkUtXFx1MTc3MFxcdTE3ODAtXFx1MTdCM1xcdTE3RDdcXHUxN0RDXFx1MTgyMC1cXHUxODc3XFx1MTg4MC1cXHUxOEE4XFx1MThBQVxcdTE4QjAtXFx1MThGNVxcdTE5MDAtXFx1MTkxRVxcdTE5NTAtXFx1MTk2RFxcdTE5NzAtXFx1MTk3NFxcdTE5ODAtXFx1MTlBQlxcdTE5QjAtXFx1MTlDOVxcdTFBMDAtXFx1MUExNlxcdTFBMjAtXFx1MUE1NFxcdTFBQTdcXHUxQjA1LVxcdTFCMzNcXHUxQjQ1LVxcdTFCNEJcXHUxQjgzLVxcdTFCQTBcXHUxQkFFXFx1MUJBRlxcdTFCQkEtXFx1MUJFNVxcdTFDMDAtXFx1MUMyM1xcdTFDNEQtXFx1MUM0RlxcdTFDNUEtXFx1MUM3RFxcdTFDODAtXFx1MUM4OFxcdTFDRTktXFx1MUNFQ1xcdTFDRUUtXFx1MUNGMVxcdTFDRjVcXHUxQ0Y2XFx1MUQwMC1cXHUxREJGXFx1MUUwMC1cXHUxRjE1XFx1MUYxOC1cXHUxRjFEXFx1MUYyMC1cXHUxRjQ1XFx1MUY0OC1cXHUxRjREXFx1MUY1MC1cXHUxRjU3XFx1MUY1OVxcdTFGNUJcXHUxRjVEXFx1MUY1Ri1cXHUxRjdEXFx1MUY4MC1cXHUxRkI0XFx1MUZCNi1cXHUxRkJDXFx1MUZCRVxcdTFGQzItXFx1MUZDNFxcdTFGQzYtXFx1MUZDQ1xcdTFGRDAtXFx1MUZEM1xcdTFGRDYtXFx1MUZEQlxcdTFGRTAtXFx1MUZFQ1xcdTFGRjItXFx1MUZGNFxcdTFGRjYtXFx1MUZGQ1xcdTIwNzFcXHUyMDdGXFx1MjA5MC1cXHUyMDlDXFx1MjEwMlxcdTIxMDdcXHUyMTBBLVxcdTIxMTNcXHUyMTE1XFx1MjExOC1cXHUyMTFEXFx1MjEyNFxcdTIxMjZcXHUyMTI4XFx1MjEyQS1cXHUyMTM5XFx1MjEzQy1cXHUyMTNGXFx1MjE0NS1cXHUyMTQ5XFx1MjE0RVxcdTIxNjAtXFx1MjE4OFxcdTJDMDAtXFx1MkMyRVxcdTJDMzAtXFx1MkM1RVxcdTJDNjAtXFx1MkNFNFxcdTJDRUItXFx1MkNFRVxcdTJDRjJcXHUyQ0YzXFx1MkQwMC1cXHUyRDI1XFx1MkQyN1xcdTJEMkRcXHUyRDMwLVxcdTJENjdcXHUyRDZGXFx1MkQ4MC1cXHUyRDk2XFx1MkRBMC1cXHUyREE2XFx1MkRBOC1cXHUyREFFXFx1MkRCMC1cXHUyREI2XFx1MkRCOC1cXHUyREJFXFx1MkRDMC1cXHUyREM2XFx1MkRDOC1cXHUyRENFXFx1MkREMC1cXHUyREQ2XFx1MkREOC1cXHUyRERFXFx1MzAwNS1cXHUzMDA3XFx1MzAyMS1cXHUzMDI5XFx1MzAzMS1cXHUzMDM1XFx1MzAzOC1cXHUzMDNDXFx1MzA0MS1cXHUzMDk2XFx1MzA5Qi1cXHUzMDlGXFx1MzBBMS1cXHUzMEZBXFx1MzBGQy1cXHUzMEZGXFx1MzEwNS1cXHUzMTJEXFx1MzEzMS1cXHUzMThFXFx1MzFBMC1cXHUzMUJBXFx1MzFGMC1cXHUzMUZGXFx1MzQwMC1cXHU0REI1XFx1NEUwMC1cXHU5RkQ1XFx1QTAwMC1cXHVBNDhDXFx1QTREMC1cXHVBNEZEXFx1QTUwMC1cXHVBNjBDXFx1QTYxMC1cXHVBNjFGXFx1QTYyQVxcdUE2MkJcXHVBNjQwLVxcdUE2NkVcXHVBNjdGLVxcdUE2OURcXHVBNkEwLVxcdUE2RUZcXHVBNzE3LVxcdUE3MUZcXHVBNzIyLVxcdUE3ODhcXHVBNzhCLVxcdUE3QUVcXHVBN0IwLVxcdUE3QjdcXHVBN0Y3LVxcdUE4MDFcXHVBODAzLVxcdUE4MDVcXHVBODA3LVxcdUE4MEFcXHVBODBDLVxcdUE4MjJcXHVBODQwLVxcdUE4NzNcXHVBODgyLVxcdUE4QjNcXHVBOEYyLVxcdUE4RjdcXHVBOEZCXFx1QThGRFxcdUE5MEEtXFx1QTkyNVxcdUE5MzAtXFx1QTk0NlxcdUE5NjAtXFx1QTk3Q1xcdUE5ODQtXFx1QTlCMlxcdUE5Q0ZcXHVBOUUwLVxcdUE5RTRcXHVBOUU2LVxcdUE5RUZcXHVBOUZBLVxcdUE5RkVcXHVBQTAwLVxcdUFBMjhcXHVBQTQwLVxcdUFBNDJcXHVBQTQ0LVxcdUFBNEJcXHVBQTYwLVxcdUFBNzZcXHVBQTdBXFx1QUE3RS1cXHVBQUFGXFx1QUFCMVxcdUFBQjVcXHVBQUI2XFx1QUFCOS1cXHVBQUJEXFx1QUFDMFxcdUFBQzJcXHVBQURCLVxcdUFBRERcXHVBQUUwLVxcdUFBRUFcXHVBQUYyLVxcdUFBRjRcXHVBQjAxLVxcdUFCMDZcXHVBQjA5LVxcdUFCMEVcXHVBQjExLVxcdUFCMTZcXHVBQjIwLVxcdUFCMjZcXHVBQjI4LVxcdUFCMkVcXHVBQjMwLVxcdUFCNUFcXHVBQjVDLVxcdUFCNjVcXHVBQjcwLVxcdUFCRTJcXHVBQzAwLVxcdUQ3QTNcXHVEN0IwLVxcdUQ3QzZcXHVEN0NCLVxcdUQ3RkJcXHVGOTAwLVxcdUZBNkRcXHVGQTcwLVxcdUZBRDlcXHVGQjAwLVxcdUZCMDZcXHVGQjEzLVxcdUZCMTdcXHVGQjFEXFx1RkIxRi1cXHVGQjI4XFx1RkIyQS1cXHVGQjM2XFx1RkIzOC1cXHVGQjNDXFx1RkIzRVxcdUZCNDBcXHVGQjQxXFx1RkI0M1xcdUZCNDRcXHVGQjQ2LVxcdUZCQjFcXHVGQkQzLVxcdUZEM0RcXHVGRDUwLVxcdUZEOEZcXHVGRDkyLVxcdUZEQzdcXHVGREYwLVxcdUZERkJcXHVGRTcwLVxcdUZFNzRcXHVGRTc2LVxcdUZFRkNcXHVGRjIxLVxcdUZGM0FcXHVGRjQxLVxcdUZGNUFcXHVGRjY2LVxcdUZGQkVcXHVGRkMyLVxcdUZGQzdcXHVGRkNBLVxcdUZGQ0ZcXHVGRkQyLVxcdUZGRDdcXHVGRkRBLVxcdUZGRENdfFxcdUQ4MDBbXFx1REMwMC1cXHVEQzBCXFx1REMwRC1cXHVEQzI2XFx1REMyOC1cXHVEQzNBXFx1REMzQ1xcdURDM0RcXHVEQzNGLVxcdURDNERcXHVEQzUwLVxcdURDNURcXHVEQzgwLVxcdURDRkFcXHVERDQwLVxcdURENzRcXHVERTgwLVxcdURFOUNcXHVERUEwLVxcdURFRDBcXHVERjAwLVxcdURGMUZcXHVERjMwLVxcdURGNEFcXHVERjUwLVxcdURGNzVcXHVERjgwLVxcdURGOURcXHVERkEwLVxcdURGQzNcXHVERkM4LVxcdURGQ0ZcXHVERkQxLVxcdURGRDVdfFxcdUQ4MDFbXFx1REMwMC1cXHVEQzlEXFx1RENCMC1cXHVEQ0QzXFx1RENEOC1cXHVEQ0ZCXFx1REQwMC1cXHVERDI3XFx1REQzMC1cXHVERDYzXFx1REUwMC1cXHVERjM2XFx1REY0MC1cXHVERjU1XFx1REY2MC1cXHVERjY3XXxcXHVEODAyW1xcdURDMDAtXFx1REMwNVxcdURDMDhcXHVEQzBBLVxcdURDMzVcXHVEQzM3XFx1REMzOFxcdURDM0NcXHVEQzNGLVxcdURDNTVcXHVEQzYwLVxcdURDNzZcXHVEQzgwLVxcdURDOUVcXHVEQ0UwLVxcdURDRjJcXHVEQ0Y0XFx1RENGNVxcdUREMDAtXFx1REQxNVxcdUREMjAtXFx1REQzOVxcdUREODAtXFx1RERCN1xcdUREQkVcXHVEREJGXFx1REUwMFxcdURFMTAtXFx1REUxM1xcdURFMTUtXFx1REUxN1xcdURFMTktXFx1REUzM1xcdURFNjAtXFx1REU3Q1xcdURFODAtXFx1REU5Q1xcdURFQzAtXFx1REVDN1xcdURFQzktXFx1REVFNFxcdURGMDAtXFx1REYzNVxcdURGNDAtXFx1REY1NVxcdURGNjAtXFx1REY3MlxcdURGODAtXFx1REY5MV18XFx1RDgwM1tcXHVEQzAwLVxcdURDNDhcXHVEQzgwLVxcdURDQjJcXHVEQ0MwLVxcdURDRjJdfFxcdUQ4MDRbXFx1REMwMy1cXHVEQzM3XFx1REM4My1cXHVEQ0FGXFx1RENEMC1cXHVEQ0U4XFx1REQwMy1cXHVERDI2XFx1REQ1MC1cXHVERDcyXFx1REQ3NlxcdUREODMtXFx1RERCMlxcdUREQzEtXFx1RERDNFxcdUREREFcXHVERERDXFx1REUwMC1cXHVERTExXFx1REUxMy1cXHVERTJCXFx1REU4MC1cXHVERTg2XFx1REU4OFxcdURFOEEtXFx1REU4RFxcdURFOEYtXFx1REU5RFxcdURFOUYtXFx1REVBOFxcdURFQjAtXFx1REVERVxcdURGMDUtXFx1REYwQ1xcdURGMEZcXHVERjEwXFx1REYxMy1cXHVERjI4XFx1REYyQS1cXHVERjMwXFx1REYzMlxcdURGMzNcXHVERjM1LVxcdURGMzlcXHVERjNEXFx1REY1MFxcdURGNUQtXFx1REY2MV18XFx1RDgwNVtcXHVEQzAwLVxcdURDMzRcXHVEQzQ3LVxcdURDNEFcXHVEQzgwLVxcdURDQUZcXHVEQ0M0XFx1RENDNVxcdURDQzdcXHVERDgwLVxcdUREQUVcXHVEREQ4LVxcdUREREJcXHVERTAwLVxcdURFMkZcXHVERTQ0XFx1REU4MC1cXHVERUFBXFx1REYwMC1cXHVERjE5XXxcXHVEODA2W1xcdURDQTAtXFx1RENERlxcdURDRkZcXHVERUMwLVxcdURFRjhdfFxcdUQ4MDdbXFx1REMwMC1cXHVEQzA4XFx1REMwQS1cXHVEQzJFXFx1REM0MFxcdURDNzItXFx1REM4Rl18XFx1RDgwOFtcXHVEQzAwLVxcdURGOTldfFxcdUQ4MDlbXFx1REMwMC1cXHVEQzZFXFx1REM4MC1cXHVERDQzXXxbXFx1RDgwQ1xcdUQ4MUMtXFx1RDgyMFxcdUQ4NDAtXFx1RDg2OFxcdUQ4NkEtXFx1RDg2Q1xcdUQ4NkYtXFx1RDg3Ml1bXFx1REMwMC1cXHVERkZGXXxcXHVEODBEW1xcdURDMDAtXFx1REMyRV18XFx1RDgxMVtcXHVEQzAwLVxcdURFNDZdfFxcdUQ4MUFbXFx1REMwMC1cXHVERTM4XFx1REU0MC1cXHVERTVFXFx1REVEMC1cXHVERUVEXFx1REYwMC1cXHVERjJGXFx1REY0MC1cXHVERjQzXFx1REY2My1cXHVERjc3XFx1REY3RC1cXHVERjhGXXxcXHVEODFCW1xcdURGMDAtXFx1REY0NFxcdURGNTBcXHVERjkzLVxcdURGOUZcXHVERkUwXXxcXHVEODIxW1xcdURDMDAtXFx1REZFQ118XFx1RDgyMltcXHVEQzAwLVxcdURFRjJdfFxcdUQ4MkNbXFx1REMwMFxcdURDMDFdfFxcdUQ4MkZbXFx1REMwMC1cXHVEQzZBXFx1REM3MC1cXHVEQzdDXFx1REM4MC1cXHVEQzg4XFx1REM5MC1cXHVEQzk5XXxcXHVEODM1W1xcdURDMDAtXFx1REM1NFxcdURDNTYtXFx1REM5Q1xcdURDOUVcXHVEQzlGXFx1RENBMlxcdURDQTVcXHVEQ0E2XFx1RENBOS1cXHVEQ0FDXFx1RENBRS1cXHVEQ0I5XFx1RENCQlxcdURDQkQtXFx1RENDM1xcdURDQzUtXFx1REQwNVxcdUREMDctXFx1REQwQVxcdUREMEQtXFx1REQxNFxcdUREMTYtXFx1REQxQ1xcdUREMUUtXFx1REQzOVxcdUREM0ItXFx1REQzRVxcdURENDAtXFx1REQ0NFxcdURENDZcXHVERDRBLVxcdURENTBcXHVERDUyLVxcdURFQTVcXHVERUE4LVxcdURFQzBcXHVERUMyLVxcdURFREFcXHVERURDLVxcdURFRkFcXHVERUZDLVxcdURGMTRcXHVERjE2LVxcdURGMzRcXHVERjM2LVxcdURGNEVcXHVERjUwLVxcdURGNkVcXHVERjcwLVxcdURGODhcXHVERjhBLVxcdURGQThcXHVERkFBLVxcdURGQzJcXHVERkM0LVxcdURGQ0JdfFxcdUQ4M0FbXFx1REMwMC1cXHVEQ0M0XFx1REQwMC1cXHVERDQzXXxcXHVEODNCW1xcdURFMDAtXFx1REUwM1xcdURFMDUtXFx1REUxRlxcdURFMjFcXHVERTIyXFx1REUyNFxcdURFMjdcXHVERTI5LVxcdURFMzJcXHVERTM0LVxcdURFMzdcXHVERTM5XFx1REUzQlxcdURFNDJcXHVERTQ3XFx1REU0OVxcdURFNEJcXHVERTRELVxcdURFNEZcXHVERTUxXFx1REU1MlxcdURFNTRcXHVERTU3XFx1REU1OVxcdURFNUJcXHVERTVEXFx1REU1RlxcdURFNjFcXHVERTYyXFx1REU2NFxcdURFNjctXFx1REU2QVxcdURFNkMtXFx1REU3MlxcdURFNzQtXFx1REU3N1xcdURFNzktXFx1REU3Q1xcdURFN0VcXHVERTgwLVxcdURFODlcXHVERThCLVxcdURFOUJcXHVERUExLVxcdURFQTNcXHVERUE1LVxcdURFQTlcXHVERUFCLVxcdURFQkJdfFxcdUQ4NjlbXFx1REMwMC1cXHVERUQ2XFx1REYwMC1cXHVERkZGXXxcXHVEODZEW1xcdURDMDAtXFx1REYzNFxcdURGNDAtXFx1REZGRl18XFx1RDg2RVtcXHVEQzAwLVxcdURDMURcXHVEQzIwLVxcdURGRkZdfFxcdUQ4NzNbXFx1REMwMC1cXHVERUExXXxcXHVEODdFW1xcdURDMDAtXFx1REUxRF0vLE5vbkFzY2lpSWRlbnRpZmllclBhcnQ6L1tcXHhBQVxceEI1XFx4QjdcXHhCQVxceEMwLVxceEQ2XFx4RDgtXFx4RjZcXHhGOC1cXHUwMkMxXFx1MDJDNi1cXHUwMkQxXFx1MDJFMC1cXHUwMkU0XFx1MDJFQ1xcdTAyRUVcXHUwMzAwLVxcdTAzNzRcXHUwMzc2XFx1MDM3N1xcdTAzN0EtXFx1MDM3RFxcdTAzN0ZcXHUwMzg2LVxcdTAzOEFcXHUwMzhDXFx1MDM4RS1cXHUwM0ExXFx1MDNBMy1cXHUwM0Y1XFx1MDNGNy1cXHUwNDgxXFx1MDQ4My1cXHUwNDg3XFx1MDQ4QS1cXHUwNTJGXFx1MDUzMS1cXHUwNTU2XFx1MDU1OVxcdTA1NjEtXFx1MDU4N1xcdTA1OTEtXFx1MDVCRFxcdTA1QkZcXHUwNUMxXFx1MDVDMlxcdTA1QzRcXHUwNUM1XFx1MDVDN1xcdTA1RDAtXFx1MDVFQVxcdTA1RjAtXFx1MDVGMlxcdTA2MTAtXFx1MDYxQVxcdTA2MjAtXFx1MDY2OVxcdTA2NkUtXFx1MDZEM1xcdTA2RDUtXFx1MDZEQ1xcdTA2REYtXFx1MDZFOFxcdTA2RUEtXFx1MDZGQ1xcdTA2RkZcXHUwNzEwLVxcdTA3NEFcXHUwNzRELVxcdTA3QjFcXHUwN0MwLVxcdTA3RjVcXHUwN0ZBXFx1MDgwMC1cXHUwODJEXFx1MDg0MC1cXHUwODVCXFx1MDhBMC1cXHUwOEI0XFx1MDhCNi1cXHUwOEJEXFx1MDhENC1cXHUwOEUxXFx1MDhFMy1cXHUwOTYzXFx1MDk2Ni1cXHUwOTZGXFx1MDk3MS1cXHUwOTgzXFx1MDk4NS1cXHUwOThDXFx1MDk4RlxcdTA5OTBcXHUwOTkzLVxcdTA5QThcXHUwOUFBLVxcdTA5QjBcXHUwOUIyXFx1MDlCNi1cXHUwOUI5XFx1MDlCQy1cXHUwOUM0XFx1MDlDN1xcdTA5QzhcXHUwOUNCLVxcdTA5Q0VcXHUwOUQ3XFx1MDlEQ1xcdTA5RERcXHUwOURGLVxcdTA5RTNcXHUwOUU2LVxcdTA5RjFcXHUwQTAxLVxcdTBBMDNcXHUwQTA1LVxcdTBBMEFcXHUwQTBGXFx1MEExMFxcdTBBMTMtXFx1MEEyOFxcdTBBMkEtXFx1MEEzMFxcdTBBMzJcXHUwQTMzXFx1MEEzNVxcdTBBMzZcXHUwQTM4XFx1MEEzOVxcdTBBM0NcXHUwQTNFLVxcdTBBNDJcXHUwQTQ3XFx1MEE0OFxcdTBBNEItXFx1MEE0RFxcdTBBNTFcXHUwQTU5LVxcdTBBNUNcXHUwQTVFXFx1MEE2Ni1cXHUwQTc1XFx1MEE4MS1cXHUwQTgzXFx1MEE4NS1cXHUwQThEXFx1MEE4Ri1cXHUwQTkxXFx1MEE5My1cXHUwQUE4XFx1MEFBQS1cXHUwQUIwXFx1MEFCMlxcdTBBQjNcXHUwQUI1LVxcdTBBQjlcXHUwQUJDLVxcdTBBQzVcXHUwQUM3LVxcdTBBQzlcXHUwQUNCLVxcdTBBQ0RcXHUwQUQwXFx1MEFFMC1cXHUwQUUzXFx1MEFFNi1cXHUwQUVGXFx1MEFGOVxcdTBCMDEtXFx1MEIwM1xcdTBCMDUtXFx1MEIwQ1xcdTBCMEZcXHUwQjEwXFx1MEIxMy1cXHUwQjI4XFx1MEIyQS1cXHUwQjMwXFx1MEIzMlxcdTBCMzNcXHUwQjM1LVxcdTBCMzlcXHUwQjNDLVxcdTBCNDRcXHUwQjQ3XFx1MEI0OFxcdTBCNEItXFx1MEI0RFxcdTBCNTZcXHUwQjU3XFx1MEI1Q1xcdTBCNURcXHUwQjVGLVxcdTBCNjNcXHUwQjY2LVxcdTBCNkZcXHUwQjcxXFx1MEI4MlxcdTBCODNcXHUwQjg1LVxcdTBCOEFcXHUwQjhFLVxcdTBCOTBcXHUwQjkyLVxcdTBCOTVcXHUwQjk5XFx1MEI5QVxcdTBCOUNcXHUwQjlFXFx1MEI5RlxcdTBCQTNcXHUwQkE0XFx1MEJBOC1cXHUwQkFBXFx1MEJBRS1cXHUwQkI5XFx1MEJCRS1cXHUwQkMyXFx1MEJDNi1cXHUwQkM4XFx1MEJDQS1cXHUwQkNEXFx1MEJEMFxcdTBCRDdcXHUwQkU2LVxcdTBCRUZcXHUwQzAwLVxcdTBDMDNcXHUwQzA1LVxcdTBDMENcXHUwQzBFLVxcdTBDMTBcXHUwQzEyLVxcdTBDMjhcXHUwQzJBLVxcdTBDMzlcXHUwQzNELVxcdTBDNDRcXHUwQzQ2LVxcdTBDNDhcXHUwQzRBLVxcdTBDNERcXHUwQzU1XFx1MEM1NlxcdTBDNTgtXFx1MEM1QVxcdTBDNjAtXFx1MEM2M1xcdTBDNjYtXFx1MEM2RlxcdTBDODAtXFx1MEM4M1xcdTBDODUtXFx1MEM4Q1xcdTBDOEUtXFx1MEM5MFxcdTBDOTItXFx1MENBOFxcdTBDQUEtXFx1MENCM1xcdTBDQjUtXFx1MENCOVxcdTBDQkMtXFx1MENDNFxcdTBDQzYtXFx1MENDOFxcdTBDQ0EtXFx1MENDRFxcdTBDRDVcXHUwQ0Q2XFx1MENERVxcdTBDRTAtXFx1MENFM1xcdTBDRTYtXFx1MENFRlxcdTBDRjFcXHUwQ0YyXFx1MEQwMS1cXHUwRDAzXFx1MEQwNS1cXHUwRDBDXFx1MEQwRS1cXHUwRDEwXFx1MEQxMi1cXHUwRDNBXFx1MEQzRC1cXHUwRDQ0XFx1MEQ0Ni1cXHUwRDQ4XFx1MEQ0QS1cXHUwRDRFXFx1MEQ1NC1cXHUwRDU3XFx1MEQ1Ri1cXHUwRDYzXFx1MEQ2Ni1cXHUwRDZGXFx1MEQ3QS1cXHUwRDdGXFx1MEQ4MlxcdTBEODNcXHUwRDg1LVxcdTBEOTZcXHUwRDlBLVxcdTBEQjFcXHUwREIzLVxcdTBEQkJcXHUwREJEXFx1MERDMC1cXHUwREM2XFx1MERDQVxcdTBEQ0YtXFx1MERENFxcdTBERDZcXHUwREQ4LVxcdTBEREZcXHUwREU2LVxcdTBERUZcXHUwREYyXFx1MERGM1xcdTBFMDEtXFx1MEUzQVxcdTBFNDAtXFx1MEU0RVxcdTBFNTAtXFx1MEU1OVxcdTBFODFcXHUwRTgyXFx1MEU4NFxcdTBFODdcXHUwRTg4XFx1MEU4QVxcdTBFOERcXHUwRTk0LVxcdTBFOTdcXHUwRTk5LVxcdTBFOUZcXHUwRUExLVxcdTBFQTNcXHUwRUE1XFx1MEVBN1xcdTBFQUFcXHUwRUFCXFx1MEVBRC1cXHUwRUI5XFx1MEVCQi1cXHUwRUJEXFx1MEVDMC1cXHUwRUM0XFx1MEVDNlxcdTBFQzgtXFx1MEVDRFxcdTBFRDAtXFx1MEVEOVxcdTBFREMtXFx1MEVERlxcdTBGMDBcXHUwRjE4XFx1MEYxOVxcdTBGMjAtXFx1MEYyOVxcdTBGMzVcXHUwRjM3XFx1MEYzOVxcdTBGM0UtXFx1MEY0N1xcdTBGNDktXFx1MEY2Q1xcdTBGNzEtXFx1MEY4NFxcdTBGODYtXFx1MEY5N1xcdTBGOTktXFx1MEZCQ1xcdTBGQzZcXHUxMDAwLVxcdTEwNDlcXHUxMDUwLVxcdTEwOURcXHUxMEEwLVxcdTEwQzVcXHUxMEM3XFx1MTBDRFxcdTEwRDAtXFx1MTBGQVxcdTEwRkMtXFx1MTI0OFxcdTEyNEEtXFx1MTI0RFxcdTEyNTAtXFx1MTI1NlxcdTEyNThcXHUxMjVBLVxcdTEyNURcXHUxMjYwLVxcdTEyODhcXHUxMjhBLVxcdTEyOERcXHUxMjkwLVxcdTEyQjBcXHUxMkIyLVxcdTEyQjVcXHUxMkI4LVxcdTEyQkVcXHUxMkMwXFx1MTJDMi1cXHUxMkM1XFx1MTJDOC1cXHUxMkQ2XFx1MTJEOC1cXHUxMzEwXFx1MTMxMi1cXHUxMzE1XFx1MTMxOC1cXHUxMzVBXFx1MTM1RC1cXHUxMzVGXFx1MTM2OS1cXHUxMzcxXFx1MTM4MC1cXHUxMzhGXFx1MTNBMC1cXHUxM0Y1XFx1MTNGOC1cXHUxM0ZEXFx1MTQwMS1cXHUxNjZDXFx1MTY2Ri1cXHUxNjdGXFx1MTY4MS1cXHUxNjlBXFx1MTZBMC1cXHUxNkVBXFx1MTZFRS1cXHUxNkY4XFx1MTcwMC1cXHUxNzBDXFx1MTcwRS1cXHUxNzE0XFx1MTcyMC1cXHUxNzM0XFx1MTc0MC1cXHUxNzUzXFx1MTc2MC1cXHUxNzZDXFx1MTc2RS1cXHUxNzcwXFx1MTc3MlxcdTE3NzNcXHUxNzgwLVxcdTE3RDNcXHUxN0Q3XFx1MTdEQ1xcdTE3RERcXHUxN0UwLVxcdTE3RTlcXHUxODBCLVxcdTE4MERcXHUxODEwLVxcdTE4MTlcXHUxODIwLVxcdTE4NzdcXHUxODgwLVxcdTE4QUFcXHUxOEIwLVxcdTE4RjVcXHUxOTAwLVxcdTE5MUVcXHUxOTIwLVxcdTE5MkJcXHUxOTMwLVxcdTE5M0JcXHUxOTQ2LVxcdTE5NkRcXHUxOTcwLVxcdTE5NzRcXHUxOTgwLVxcdTE5QUJcXHUxOUIwLVxcdTE5QzlcXHUxOUQwLVxcdTE5REFcXHUxQTAwLVxcdTFBMUJcXHUxQTIwLVxcdTFBNUVcXHUxQTYwLVxcdTFBN0NcXHUxQTdGLVxcdTFBODlcXHUxQTkwLVxcdTFBOTlcXHUxQUE3XFx1MUFCMC1cXHUxQUJEXFx1MUIwMC1cXHUxQjRCXFx1MUI1MC1cXHUxQjU5XFx1MUI2Qi1cXHUxQjczXFx1MUI4MC1cXHUxQkYzXFx1MUMwMC1cXHUxQzM3XFx1MUM0MC1cXHUxQzQ5XFx1MUM0RC1cXHUxQzdEXFx1MUM4MC1cXHUxQzg4XFx1MUNEMC1cXHUxQ0QyXFx1MUNENC1cXHUxQ0Y2XFx1MUNGOFxcdTFDRjlcXHUxRDAwLVxcdTFERjVcXHUxREZCLVxcdTFGMTVcXHUxRjE4LVxcdTFGMURcXHUxRjIwLVxcdTFGNDVcXHUxRjQ4LVxcdTFGNERcXHUxRjUwLVxcdTFGNTdcXHUxRjU5XFx1MUY1QlxcdTFGNURcXHUxRjVGLVxcdTFGN0RcXHUxRjgwLVxcdTFGQjRcXHUxRkI2LVxcdTFGQkNcXHUxRkJFXFx1MUZDMi1cXHUxRkM0XFx1MUZDNi1cXHUxRkNDXFx1MUZEMC1cXHUxRkQzXFx1MUZENi1cXHUxRkRCXFx1MUZFMC1cXHUxRkVDXFx1MUZGMi1cXHUxRkY0XFx1MUZGNi1cXHUxRkZDXFx1MjAwQ1xcdTIwMERcXHUyMDNGXFx1MjA0MFxcdTIwNTRcXHUyMDcxXFx1MjA3RlxcdTIwOTAtXFx1MjA5Q1xcdTIwRDAtXFx1MjBEQ1xcdTIwRTFcXHUyMEU1LVxcdTIwRjBcXHUyMTAyXFx1MjEwN1xcdTIxMEEtXFx1MjExM1xcdTIxMTVcXHUyMTE4LVxcdTIxMURcXHUyMTI0XFx1MjEyNlxcdTIxMjhcXHUyMTJBLVxcdTIxMzlcXHUyMTNDLVxcdTIxM0ZcXHUyMTQ1LVxcdTIxNDlcXHUyMTRFXFx1MjE2MC1cXHUyMTg4XFx1MkMwMC1cXHUyQzJFXFx1MkMzMC1cXHUyQzVFXFx1MkM2MC1cXHUyQ0U0XFx1MkNFQi1cXHUyQ0YzXFx1MkQwMC1cXHUyRDI1XFx1MkQyN1xcdTJEMkRcXHUyRDMwLVxcdTJENjdcXHUyRDZGXFx1MkQ3Ri1cXHUyRDk2XFx1MkRBMC1cXHUyREE2XFx1MkRBOC1cXHUyREFFXFx1MkRCMC1cXHUyREI2XFx1MkRCOC1cXHUyREJFXFx1MkRDMC1cXHUyREM2XFx1MkRDOC1cXHUyRENFXFx1MkREMC1cXHUyREQ2XFx1MkREOC1cXHUyRERFXFx1MkRFMC1cXHUyREZGXFx1MzAwNS1cXHUzMDA3XFx1MzAyMS1cXHUzMDJGXFx1MzAzMS1cXHUzMDM1XFx1MzAzOC1cXHUzMDNDXFx1MzA0MS1cXHUzMDk2XFx1MzA5OS1cXHUzMDlGXFx1MzBBMS1cXHUzMEZBXFx1MzBGQy1cXHUzMEZGXFx1MzEwNS1cXHUzMTJEXFx1MzEzMS1cXHUzMThFXFx1MzFBMC1cXHUzMUJBXFx1MzFGMC1cXHUzMUZGXFx1MzQwMC1cXHU0REI1XFx1NEUwMC1cXHU5RkQ1XFx1QTAwMC1cXHVBNDhDXFx1QTREMC1cXHVBNEZEXFx1QTUwMC1cXHVBNjBDXFx1QTYxMC1cXHVBNjJCXFx1QTY0MC1cXHVBNjZGXFx1QTY3NC1cXHVBNjdEXFx1QTY3Ri1cXHVBNkYxXFx1QTcxNy1cXHVBNzFGXFx1QTcyMi1cXHVBNzg4XFx1QTc4Qi1cXHVBN0FFXFx1QTdCMC1cXHVBN0I3XFx1QTdGNy1cXHVBODI3XFx1QTg0MC1cXHVBODczXFx1QTg4MC1cXHVBOEM1XFx1QThEMC1cXHVBOEQ5XFx1QThFMC1cXHVBOEY3XFx1QThGQlxcdUE4RkRcXHVBOTAwLVxcdUE5MkRcXHVBOTMwLVxcdUE5NTNcXHVBOTYwLVxcdUE5N0NcXHVBOTgwLVxcdUE5QzBcXHVBOUNGLVxcdUE5RDlcXHVBOUUwLVxcdUE5RkVcXHVBQTAwLVxcdUFBMzZcXHVBQTQwLVxcdUFBNERcXHVBQTUwLVxcdUFBNTlcXHVBQTYwLVxcdUFBNzZcXHVBQTdBLVxcdUFBQzJcXHVBQURCLVxcdUFBRERcXHVBQUUwLVxcdUFBRUZcXHVBQUYyLVxcdUFBRjZcXHVBQjAxLVxcdUFCMDZcXHVBQjA5LVxcdUFCMEVcXHVBQjExLVxcdUFCMTZcXHVBQjIwLVxcdUFCMjZcXHVBQjI4LVxcdUFCMkVcXHVBQjMwLVxcdUFCNUFcXHVBQjVDLVxcdUFCNjVcXHVBQjcwLVxcdUFCRUFcXHVBQkVDXFx1QUJFRFxcdUFCRjAtXFx1QUJGOVxcdUFDMDAtXFx1RDdBM1xcdUQ3QjAtXFx1RDdDNlxcdUQ3Q0ItXFx1RDdGQlxcdUY5MDAtXFx1RkE2RFxcdUZBNzAtXFx1RkFEOVxcdUZCMDAtXFx1RkIwNlxcdUZCMTMtXFx1RkIxN1xcdUZCMUQtXFx1RkIyOFxcdUZCMkEtXFx1RkIzNlxcdUZCMzgtXFx1RkIzQ1xcdUZCM0VcXHVGQjQwXFx1RkI0MVxcdUZCNDNcXHVGQjQ0XFx1RkI0Ni1cXHVGQkIxXFx1RkJEMy1cXHVGRDNEXFx1RkQ1MC1cXHVGRDhGXFx1RkQ5Mi1cXHVGREM3XFx1RkRGMC1cXHVGREZCXFx1RkUwMC1cXHVGRTBGXFx1RkUyMC1cXHVGRTJGXFx1RkUzM1xcdUZFMzRcXHVGRTRELVxcdUZFNEZcXHVGRTcwLVxcdUZFNzRcXHVGRTc2LVxcdUZFRkNcXHVGRjEwLVxcdUZGMTlcXHVGRjIxLVxcdUZGM0FcXHVGRjNGXFx1RkY0MS1cXHVGRjVBXFx1RkY2Ni1cXHVGRkJFXFx1RkZDMi1cXHVGRkM3XFx1RkZDQS1cXHVGRkNGXFx1RkZEMi1cXHVGRkQ3XFx1RkZEQS1cXHVGRkRDXXxcXHVEODAwW1xcdURDMDAtXFx1REMwQlxcdURDMEQtXFx1REMyNlxcdURDMjgtXFx1REMzQVxcdURDM0NcXHVEQzNEXFx1REMzRi1cXHVEQzREXFx1REM1MC1cXHVEQzVEXFx1REM4MC1cXHVEQ0ZBXFx1REQ0MC1cXHVERDc0XFx1RERGRFxcdURFODAtXFx1REU5Q1xcdURFQTAtXFx1REVEMFxcdURFRTBcXHVERjAwLVxcdURGMUZcXHVERjMwLVxcdURGNEFcXHVERjUwLVxcdURGN0FcXHVERjgwLVxcdURGOURcXHVERkEwLVxcdURGQzNcXHVERkM4LVxcdURGQ0ZcXHVERkQxLVxcdURGRDVdfFxcdUQ4MDFbXFx1REMwMC1cXHVEQzlEXFx1RENBMC1cXHVEQ0E5XFx1RENCMC1cXHVEQ0QzXFx1RENEOC1cXHVEQ0ZCXFx1REQwMC1cXHVERDI3XFx1REQzMC1cXHVERDYzXFx1REUwMC1cXHVERjM2XFx1REY0MC1cXHVERjU1XFx1REY2MC1cXHVERjY3XXxcXHVEODAyW1xcdURDMDAtXFx1REMwNVxcdURDMDhcXHVEQzBBLVxcdURDMzVcXHVEQzM3XFx1REMzOFxcdURDM0NcXHVEQzNGLVxcdURDNTVcXHVEQzYwLVxcdURDNzZcXHVEQzgwLVxcdURDOUVcXHVEQ0UwLVxcdURDRjJcXHVEQ0Y0XFx1RENGNVxcdUREMDAtXFx1REQxNVxcdUREMjAtXFx1REQzOVxcdUREODAtXFx1RERCN1xcdUREQkVcXHVEREJGXFx1REUwMC1cXHVERTAzXFx1REUwNVxcdURFMDZcXHVERTBDLVxcdURFMTNcXHVERTE1LVxcdURFMTdcXHVERTE5LVxcdURFMzNcXHVERTM4LVxcdURFM0FcXHVERTNGXFx1REU2MC1cXHVERTdDXFx1REU4MC1cXHVERTlDXFx1REVDMC1cXHVERUM3XFx1REVDOS1cXHVERUU2XFx1REYwMC1cXHVERjM1XFx1REY0MC1cXHVERjU1XFx1REY2MC1cXHVERjcyXFx1REY4MC1cXHVERjkxXXxcXHVEODAzW1xcdURDMDAtXFx1REM0OFxcdURDODAtXFx1RENCMlxcdURDQzAtXFx1RENGMl18XFx1RDgwNFtcXHVEQzAwLVxcdURDNDZcXHVEQzY2LVxcdURDNkZcXHVEQzdGLVxcdURDQkFcXHVEQ0QwLVxcdURDRThcXHVEQ0YwLVxcdURDRjlcXHVERDAwLVxcdUREMzRcXHVERDM2LVxcdUREM0ZcXHVERDUwLVxcdURENzNcXHVERDc2XFx1REQ4MC1cXHVEREM0XFx1RERDQS1cXHVERENDXFx1REREMC1cXHVERERBXFx1REREQ1xcdURFMDAtXFx1REUxMVxcdURFMTMtXFx1REUzN1xcdURFM0VcXHVERTgwLVxcdURFODZcXHVERTg4XFx1REU4QS1cXHVERThEXFx1REU4Ri1cXHVERTlEXFx1REU5Ri1cXHVERUE4XFx1REVCMC1cXHVERUVBXFx1REVGMC1cXHVERUY5XFx1REYwMC1cXHVERjAzXFx1REYwNS1cXHVERjBDXFx1REYwRlxcdURGMTBcXHVERjEzLVxcdURGMjhcXHVERjJBLVxcdURGMzBcXHVERjMyXFx1REYzM1xcdURGMzUtXFx1REYzOVxcdURGM0MtXFx1REY0NFxcdURGNDdcXHVERjQ4XFx1REY0Qi1cXHVERjREXFx1REY1MFxcdURGNTdcXHVERjVELVxcdURGNjNcXHVERjY2LVxcdURGNkNcXHVERjcwLVxcdURGNzRdfFxcdUQ4MDVbXFx1REMwMC1cXHVEQzRBXFx1REM1MC1cXHVEQzU5XFx1REM4MC1cXHVEQ0M1XFx1RENDN1xcdURDRDAtXFx1RENEOVxcdUREODAtXFx1RERCNVxcdUREQjgtXFx1RERDMFxcdURERDgtXFx1RERERFxcdURFMDAtXFx1REU0MFxcdURFNDRcXHVERTUwLVxcdURFNTlcXHVERTgwLVxcdURFQjdcXHVERUMwLVxcdURFQzlcXHVERjAwLVxcdURGMTlcXHVERjFELVxcdURGMkJcXHVERjMwLVxcdURGMzldfFxcdUQ4MDZbXFx1RENBMC1cXHVEQ0U5XFx1RENGRlxcdURFQzAtXFx1REVGOF18XFx1RDgwN1tcXHVEQzAwLVxcdURDMDhcXHVEQzBBLVxcdURDMzZcXHVEQzM4LVxcdURDNDBcXHVEQzUwLVxcdURDNTlcXHVEQzcyLVxcdURDOEZcXHVEQzkyLVxcdURDQTdcXHVEQ0E5LVxcdURDQjZdfFxcdUQ4MDhbXFx1REMwMC1cXHVERjk5XXxcXHVEODA5W1xcdURDMDAtXFx1REM2RVxcdURDODAtXFx1REQ0M118W1xcdUQ4MENcXHVEODFDLVxcdUQ4MjBcXHVEODQwLVxcdUQ4NjhcXHVEODZBLVxcdUQ4NkNcXHVEODZGLVxcdUQ4NzJdW1xcdURDMDAtXFx1REZGRl18XFx1RDgwRFtcXHVEQzAwLVxcdURDMkVdfFxcdUQ4MTFbXFx1REMwMC1cXHVERTQ2XXxcXHVEODFBW1xcdURDMDAtXFx1REUzOFxcdURFNDAtXFx1REU1RVxcdURFNjAtXFx1REU2OVxcdURFRDAtXFx1REVFRFxcdURFRjAtXFx1REVGNFxcdURGMDAtXFx1REYzNlxcdURGNDAtXFx1REY0M1xcdURGNTAtXFx1REY1OVxcdURGNjMtXFx1REY3N1xcdURGN0QtXFx1REY4Rl18XFx1RDgxQltcXHVERjAwLVxcdURGNDRcXHVERjUwLVxcdURGN0VcXHVERjhGLVxcdURGOUZcXHVERkUwXXxcXHVEODIxW1xcdURDMDAtXFx1REZFQ118XFx1RDgyMltcXHVEQzAwLVxcdURFRjJdfFxcdUQ4MkNbXFx1REMwMFxcdURDMDFdfFxcdUQ4MkZbXFx1REMwMC1cXHVEQzZBXFx1REM3MC1cXHVEQzdDXFx1REM4MC1cXHVEQzg4XFx1REM5MC1cXHVEQzk5XFx1REM5RFxcdURDOUVdfFxcdUQ4MzRbXFx1REQ2NS1cXHVERDY5XFx1REQ2RC1cXHVERDcyXFx1REQ3Qi1cXHVERDgyXFx1REQ4NS1cXHVERDhCXFx1RERBQS1cXHVEREFEXFx1REU0Mi1cXHVERTQ0XXxcXHVEODM1W1xcdURDMDAtXFx1REM1NFxcdURDNTYtXFx1REM5Q1xcdURDOUVcXHVEQzlGXFx1RENBMlxcdURDQTVcXHVEQ0E2XFx1RENBOS1cXHVEQ0FDXFx1RENBRS1cXHVEQ0I5XFx1RENCQlxcdURDQkQtXFx1RENDM1xcdURDQzUtXFx1REQwNVxcdUREMDctXFx1REQwQVxcdUREMEQtXFx1REQxNFxcdUREMTYtXFx1REQxQ1xcdUREMUUtXFx1REQzOVxcdUREM0ItXFx1REQzRVxcdURENDAtXFx1REQ0NFxcdURENDZcXHVERDRBLVxcdURENTBcXHVERDUyLVxcdURFQTVcXHVERUE4LVxcdURFQzBcXHVERUMyLVxcdURFREFcXHVERURDLVxcdURFRkFcXHVERUZDLVxcdURGMTRcXHVERjE2LVxcdURGMzRcXHVERjM2LVxcdURGNEVcXHVERjUwLVxcdURGNkVcXHVERjcwLVxcdURGODhcXHVERjhBLVxcdURGQThcXHVERkFBLVxcdURGQzJcXHVERkM0LVxcdURGQ0JcXHVERkNFLVxcdURGRkZdfFxcdUQ4MzZbXFx1REUwMC1cXHVERTM2XFx1REUzQi1cXHVERTZDXFx1REU3NVxcdURFODRcXHVERTlCLVxcdURFOUZcXHVERUExLVxcdURFQUZdfFxcdUQ4MzhbXFx1REMwMC1cXHVEQzA2XFx1REMwOC1cXHVEQzE4XFx1REMxQi1cXHVEQzIxXFx1REMyM1xcdURDMjRcXHVEQzI2LVxcdURDMkFdfFxcdUQ4M0FbXFx1REMwMC1cXHVEQ0M0XFx1RENEMC1cXHVEQ0Q2XFx1REQwMC1cXHVERDRBXFx1REQ1MC1cXHVERDU5XXxcXHVEODNCW1xcdURFMDAtXFx1REUwM1xcdURFMDUtXFx1REUxRlxcdURFMjFcXHVERTIyXFx1REUyNFxcdURFMjdcXHVERTI5LVxcdURFMzJcXHVERTM0LVxcdURFMzdcXHVERTM5XFx1REUzQlxcdURFNDJcXHVERTQ3XFx1REU0OVxcdURFNEJcXHVERTRELVxcdURFNEZcXHVERTUxXFx1REU1MlxcdURFNTRcXHVERTU3XFx1REU1OVxcdURFNUJcXHVERTVEXFx1REU1RlxcdURFNjFcXHVERTYyXFx1REU2NFxcdURFNjctXFx1REU2QVxcdURFNkMtXFx1REU3MlxcdURFNzQtXFx1REU3N1xcdURFNzktXFx1REU3Q1xcdURFN0VcXHVERTgwLVxcdURFODlcXHVERThCLVxcdURFOUJcXHVERUExLVxcdURFQTNcXHVERUE1LVxcdURFQTlcXHVERUFCLVxcdURFQkJdfFxcdUQ4NjlbXFx1REMwMC1cXHVERUQ2XFx1REYwMC1cXHVERkZGXXxcXHVEODZEW1xcdURDMDAtXFx1REYzNFxcdURGNDAtXFx1REZGRl18XFx1RDg2RVtcXHVEQzAwLVxcdURDMURcXHVEQzIwLVxcdURGRkZdfFxcdUQ4NzNbXFx1REMwMC1cXHVERUExXXxcXHVEODdFW1xcdURDMDAtXFx1REUxRF18XFx1REI0MFtcXHVERDAwLVxcdURERUZdL307ZnVuY3Rpb24gaXNEZWNpbWFsRGlnaXQyKGNoMil7cmV0dXJuIDQ4PD1jaDImJmNoMjw9NTd9ZnVuY3Rpb24gaXNIZXhEaWdpdDIoY2gyKXtyZXR1cm4gNDg8PWNoMiYmY2gyPD01N3x8OTc8PWNoMiYmY2gyPD0xMDJ8fDY1PD1jaDImJmNoMjw9NzB9ZnVuY3Rpb24gaXNPY3RhbERpZ2l0MihjaDIpe3JldHVybiBjaDI+PTQ4JiZjaDI8PTU1fU5PTl9BU0NJSV9XSElURVNQQUNFUz1bNTc2MCw4MTkyLDgxOTMsODE5NCw4MTk1LDgxOTYsODE5Nyw4MTk4LDgxOTksODIwMCw4MjAxLDgyMDIsODIzOSw4Mjg3LDEyMjg4LDY1Mjc5XTtmdW5jdGlvbiBpc1doaXRlU3BhY2UoY2gyKXtyZXR1cm4gY2gyPT09MzJ8fGNoMj09PTl8fGNoMj09PTExfHxjaDI9PT0xMnx8Y2gyPT09MTYwfHxjaDI+PTU3NjAmJk5PTl9BU0NJSV9XSElURVNQQUNFUy5pbmRleE9mKGNoMik+PTB9ZnVuY3Rpb24gaXNMaW5lVGVybWluYXRvcihjaDIpe3JldHVybiBjaDI9PT0xMHx8Y2gyPT09MTN8fGNoMj09PTgyMzJ8fGNoMj09PTgyMzN9ZnVuY3Rpb24gZnJvbUNvZGVQb2ludChjcCl7aWYoY3A8PTY1NTM1KXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGNwKTt2YXIgY3UxPVN0cmluZy5mcm9tQ2hhckNvZGUoTWF0aC5mbG9vcigoY3AtNjU1MzYpLzEwMjQpKzU1Mjk2KSxjdTI9U3RyaW5nLmZyb21DaGFyQ29kZSgoY3AtNjU1MzYpJTEwMjQrNTYzMjApO3JldHVybiBjdTErY3UyfWZvcihJREVOVElGSUVSX1NUQVJUPW5ldyBBcnJheSgxMjgpLGNoPTA7Y2g8MTI4OysrY2gpSURFTlRJRklFUl9TVEFSVFtjaF09Y2g+PTk3JiZjaDw9MTIyfHxjaD49NjUmJmNoPD05MHx8Y2g9PT0zNnx8Y2g9PT05NTtmb3IoSURFTlRJRklFUl9QQVJUPW5ldyBBcnJheSgxMjgpLGNoPTA7Y2g8MTI4OysrY2gpSURFTlRJRklFUl9QQVJUW2NoXT1jaD49OTcmJmNoPD0xMjJ8fGNoPj02NSYmY2g8PTkwfHxjaD49NDgmJmNoPD01N3x8Y2g9PT0zNnx8Y2g9PT05NTtmdW5jdGlvbiBpc0lkZW50aWZpZXJTdGFydEVTNShjaDIpe3JldHVybiBjaDI8MTI4P0lERU5USUZJRVJfU1RBUlRbY2gyXTpFUzVSZWdleC5Ob25Bc2NpaUlkZW50aWZpZXJTdGFydC50ZXN0KGZyb21Db2RlUG9pbnQoY2gyKSl9ZnVuY3Rpb24gaXNJZGVudGlmaWVyUGFydEVTNShjaDIpe3JldHVybiBjaDI8MTI4P0lERU5USUZJRVJfUEFSVFtjaDJdOkVTNVJlZ2V4Lk5vbkFzY2lpSWRlbnRpZmllclBhcnQudGVzdChmcm9tQ29kZVBvaW50KGNoMikpfWZ1bmN0aW9uIGlzSWRlbnRpZmllclN0YXJ0RVM2KGNoMil7cmV0dXJuIGNoMjwxMjg/SURFTlRJRklFUl9TVEFSVFtjaDJdOkVTNlJlZ2V4Lk5vbkFzY2lpSWRlbnRpZmllclN0YXJ0LnRlc3QoZnJvbUNvZGVQb2ludChjaDIpKX1mdW5jdGlvbiBpc0lkZW50aWZpZXJQYXJ0RVM2KGNoMil7cmV0dXJuIGNoMjwxMjg/SURFTlRJRklFUl9QQVJUW2NoMl06RVM2UmVnZXguTm9uQXNjaWlJZGVudGlmaWVyUGFydC50ZXN0KGZyb21Db2RlUG9pbnQoY2gyKSl9bW9kdWxlLmV4cG9ydHM9e2lzRGVjaW1hbERpZ2l0OmlzRGVjaW1hbERpZ2l0Mixpc0hleERpZ2l0OmlzSGV4RGlnaXQyLGlzT2N0YWxEaWdpdDppc09jdGFsRGlnaXQyLGlzV2hpdGVTcGFjZSxpc0xpbmVUZXJtaW5hdG9yLGlzSWRlbnRpZmllclN0YXJ0RVM1LGlzSWRlbnRpZmllclBhcnRFUzUsaXNJZGVudGlmaWVyU3RhcnRFUzYsaXNJZGVudGlmaWVyUGFydEVTNn07fSkoKTt9fSk7dmFyIHJlcXVpcmVfa2V5d29yZD1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9lc3V0aWxzL2xpYi9rZXl3b3JkLmpzXCIoZXhwb3J0cyxtb2R1bGUpeyhmdW5jdGlvbigpe3ZhciBjb2RlPXJlcXVpcmVfY29kZSgpO2Z1bmN0aW9uIGlzU3RyaWN0TW9kZVJlc2VydmVkV29yZEVTNihpZCl7c3dpdGNoKGlkKXtjYXNlXCJpbXBsZW1lbnRzXCI6Y2FzZVwiaW50ZXJmYWNlXCI6Y2FzZVwicGFja2FnZVwiOmNhc2VcInByaXZhdGVcIjpjYXNlXCJwcm90ZWN0ZWRcIjpjYXNlXCJwdWJsaWNcIjpjYXNlXCJzdGF0aWNcIjpjYXNlXCJsZXRcIjpyZXR1cm4gITA7ZGVmYXVsdDpyZXR1cm4gITF9fWZ1bmN0aW9uIGlzS2V5d29yZEVTNShpZCxzdHJpY3Qpe3JldHVybiAhc3RyaWN0JiZpZD09PVwieWllbGRcIj8hMTppc0tleXdvcmRFUzYoaWQsc3RyaWN0KX1mdW5jdGlvbiBpc0tleXdvcmRFUzYoaWQsc3RyaWN0KXtpZihzdHJpY3QmJmlzU3RyaWN0TW9kZVJlc2VydmVkV29yZEVTNihpZCkpcmV0dXJuICEwO3N3aXRjaChpZC5sZW5ndGgpe2Nhc2UgMjpyZXR1cm4gaWQ9PT1cImlmXCJ8fGlkPT09XCJpblwifHxpZD09PVwiZG9cIjtjYXNlIDM6cmV0dXJuIGlkPT09XCJ2YXJcInx8aWQ9PT1cImZvclwifHxpZD09PVwibmV3XCJ8fGlkPT09XCJ0cnlcIjtjYXNlIDQ6cmV0dXJuIGlkPT09XCJ0aGlzXCJ8fGlkPT09XCJlbHNlXCJ8fGlkPT09XCJjYXNlXCJ8fGlkPT09XCJ2b2lkXCJ8fGlkPT09XCJ3aXRoXCJ8fGlkPT09XCJlbnVtXCI7Y2FzZSA1OnJldHVybiBpZD09PVwid2hpbGVcInx8aWQ9PT1cImJyZWFrXCJ8fGlkPT09XCJjYXRjaFwifHxpZD09PVwidGhyb3dcInx8aWQ9PT1cImNvbnN0XCJ8fGlkPT09XCJ5aWVsZFwifHxpZD09PVwiY2xhc3NcInx8aWQ9PT1cInN1cGVyXCI7Y2FzZSA2OnJldHVybiBpZD09PVwicmV0dXJuXCJ8fGlkPT09XCJ0eXBlb2ZcInx8aWQ9PT1cImRlbGV0ZVwifHxpZD09PVwic3dpdGNoXCJ8fGlkPT09XCJleHBvcnRcInx8aWQ9PT1cImltcG9ydFwiO2Nhc2UgNzpyZXR1cm4gaWQ9PT1cImRlZmF1bHRcInx8aWQ9PT1cImZpbmFsbHlcInx8aWQ9PT1cImV4dGVuZHNcIjtjYXNlIDg6cmV0dXJuIGlkPT09XCJmdW5jdGlvblwifHxpZD09PVwiY29udGludWVcInx8aWQ9PT1cImRlYnVnZ2VyXCI7Y2FzZSAxMDpyZXR1cm4gaWQ9PT1cImluc3RhbmNlb2ZcIjtkZWZhdWx0OnJldHVybiAhMX19ZnVuY3Rpb24gaXNSZXNlcnZlZFdvcmRFUzUoaWQsc3RyaWN0KXtyZXR1cm4gaWQ9PT1cIm51bGxcInx8aWQ9PT1cInRydWVcInx8aWQ9PT1cImZhbHNlXCJ8fGlzS2V5d29yZEVTNShpZCxzdHJpY3QpfWZ1bmN0aW9uIGlzUmVzZXJ2ZWRXb3JkRVM2KGlkLHN0cmljdCl7cmV0dXJuIGlkPT09XCJudWxsXCJ8fGlkPT09XCJ0cnVlXCJ8fGlkPT09XCJmYWxzZVwifHxpc0tleXdvcmRFUzYoaWQsc3RyaWN0KX1mdW5jdGlvbiBpc1Jlc3RyaWN0ZWRXb3JkKGlkKXtyZXR1cm4gaWQ9PT1cImV2YWxcInx8aWQ9PT1cImFyZ3VtZW50c1wifWZ1bmN0aW9uIGlzSWRlbnRpZmllck5hbWVFUzUoaWQpe3ZhciBpLGl6LGNoO2lmKGlkLmxlbmd0aD09PTB8fChjaD1pZC5jaGFyQ29kZUF0KDApLCFjb2RlLmlzSWRlbnRpZmllclN0YXJ0RVM1KGNoKSkpcmV0dXJuICExO2ZvcihpPTEsaXo9aWQubGVuZ3RoO2k8aXo7KytpKWlmKGNoPWlkLmNoYXJDb2RlQXQoaSksIWNvZGUuaXNJZGVudGlmaWVyUGFydEVTNShjaCkpcmV0dXJuICExO3JldHVybiAhMH1mdW5jdGlvbiBkZWNvZGVVdGYxNihsZWFkLHRyYWlsKXtyZXR1cm4gKGxlYWQtNTUyOTYpKjEwMjQrKHRyYWlsLTU2MzIwKSs2NTUzNn1mdW5jdGlvbiBpc0lkZW50aWZpZXJOYW1lRVM2KGlkKXt2YXIgaSxpeixjaCxsb3dDaCxjaGVjaztpZihpZC5sZW5ndGg9PT0wKXJldHVybiAhMTtmb3IoY2hlY2s9Y29kZS5pc0lkZW50aWZpZXJTdGFydEVTNixpPTAsaXo9aWQubGVuZ3RoO2k8aXo7KytpKXtpZihjaD1pZC5jaGFyQ29kZUF0KGkpLDU1Mjk2PD1jaCYmY2g8PTU2MzE5KXtpZigrK2ksaT49aXp8fChsb3dDaD1pZC5jaGFyQ29kZUF0KGkpLCEoNTYzMjA8PWxvd0NoJiZsb3dDaDw9NTczNDMpKSlyZXR1cm4gITE7Y2g9ZGVjb2RlVXRmMTYoY2gsbG93Q2gpO31pZighY2hlY2soY2gpKXJldHVybiAhMTtjaGVjaz1jb2RlLmlzSWRlbnRpZmllclBhcnRFUzY7fXJldHVybiAhMH1mdW5jdGlvbiBpc0lkZW50aWZpZXJFUzUoaWQsc3RyaWN0KXtyZXR1cm4gaXNJZGVudGlmaWVyTmFtZUVTNShpZCkmJiFpc1Jlc2VydmVkV29yZEVTNShpZCxzdHJpY3QpfWZ1bmN0aW9uIGlzSWRlbnRpZmllckVTNihpZCxzdHJpY3Qpe3JldHVybiBpc0lkZW50aWZpZXJOYW1lRVM2KGlkKSYmIWlzUmVzZXJ2ZWRXb3JkRVM2KGlkLHN0cmljdCl9bW9kdWxlLmV4cG9ydHM9e2lzS2V5d29yZEVTNSxpc0tleXdvcmRFUzYsaXNSZXNlcnZlZFdvcmRFUzUsaXNSZXNlcnZlZFdvcmRFUzYsaXNSZXN0cmljdGVkV29yZCxpc0lkZW50aWZpZXJOYW1lRVM1LGlzSWRlbnRpZmllck5hbWVFUzYsaXNJZGVudGlmaWVyRVM1LGlzSWRlbnRpZmllckVTNn07fSkoKTt9fSk7dmFyIHJlcXVpcmVfdXRpbHM9X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvZXN1dGlscy9saWIvdXRpbHMuanNcIihleHBvcnRzKXsoZnVuY3Rpb24oKXtleHBvcnRzLmFzdD1yZXF1aXJlX2FzdCgpLGV4cG9ydHMuY29kZT1yZXF1aXJlX2NvZGUoKSxleHBvcnRzLmtleXdvcmQ9cmVxdWlyZV9rZXl3b3JkKCk7fSkoKTt9fSk7dmFyIHJlcXVpcmVfYmFzZTY0PV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2VzY29kZWdlbi9ub2RlX21vZHVsZXMvc291cmNlLW1hcC9saWIvYmFzZTY0LmpzXCIoZXhwb3J0cyl7dmFyIGludFRvQ2hhck1hcD1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIi5zcGxpdChcIlwiKTtleHBvcnRzLmVuY29kZT1mdW5jdGlvbihudW1iZXIpe2lmKDA8PW51bWJlciYmbnVtYmVyPGludFRvQ2hhck1hcC5sZW5ndGgpcmV0dXJuIGludFRvQ2hhck1hcFtudW1iZXJdO3Rocm93IG5ldyBUeXBlRXJyb3IoXCJNdXN0IGJlIGJldHdlZW4gMCBhbmQgNjM6IFwiK251bWJlcil9O2V4cG9ydHMuZGVjb2RlPWZ1bmN0aW9uKGNoYXJDb2RlKXt2YXIgYmlnQT02NSxiaWdaPTkwLGxpdHRsZUE9OTcsbGl0dGxlWj0xMjIsemVybz00OCxuaW5lPTU3LHBsdXM9NDMsc2xhc2g9NDcsbGl0dGxlT2Zmc2V0PTI2LG51bWJlck9mZnNldD01MjtyZXR1cm4gYmlnQTw9Y2hhckNvZGUmJmNoYXJDb2RlPD1iaWdaP2NoYXJDb2RlLWJpZ0E6bGl0dGxlQTw9Y2hhckNvZGUmJmNoYXJDb2RlPD1saXR0bGVaP2NoYXJDb2RlLWxpdHRsZUErbGl0dGxlT2Zmc2V0Onplcm88PWNoYXJDb2RlJiZjaGFyQ29kZTw9bmluZT9jaGFyQ29kZS16ZXJvK251bWJlck9mZnNldDpjaGFyQ29kZT09cGx1cz82MjpjaGFyQ29kZT09c2xhc2g/NjM6LTF9O319KTt2YXIgcmVxdWlyZV9iYXNlNjRfdmxxPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2VzY29kZWdlbi9ub2RlX21vZHVsZXMvc291cmNlLW1hcC9saWIvYmFzZTY0LXZscS5qc1wiKGV4cG9ydHMpe3ZhciBiYXNlNjQ9cmVxdWlyZV9iYXNlNjQoKSxWTFFfQkFTRV9TSElGVD01LFZMUV9CQVNFPTE8PFZMUV9CQVNFX1NISUZULFZMUV9CQVNFX01BU0s9VkxRX0JBU0UtMSxWTFFfQ09OVElOVUFUSU9OX0JJVD1WTFFfQkFTRTtmdW5jdGlvbiB0b1ZMUVNpZ25lZChhVmFsdWUpe3JldHVybiBhVmFsdWU8MD8oLWFWYWx1ZTw8MSkrMTooYVZhbHVlPDwxKSswfWZ1bmN0aW9uIGZyb21WTFFTaWduZWQoYVZhbHVlKXt2YXIgaXNOZWdhdGl2ZT0oYVZhbHVlJjEpPT09MSxzaGlmdGVkPWFWYWx1ZT4+MTtyZXR1cm4gaXNOZWdhdGl2ZT8tc2hpZnRlZDpzaGlmdGVkfWV4cG9ydHMuZW5jb2RlPWZ1bmN0aW9uKGFWYWx1ZSl7dmFyIGVuY29kZWQ9XCJcIixkaWdpdCx2bHE9dG9WTFFTaWduZWQoYVZhbHVlKTtkbyBkaWdpdD12bHEmVkxRX0JBU0VfTUFTSyx2bHE+Pj49VkxRX0JBU0VfU0hJRlQsdmxxPjAmJihkaWdpdHw9VkxRX0NPTlRJTlVBVElPTl9CSVQpLGVuY29kZWQrPWJhc2U2NC5lbmNvZGUoZGlnaXQpO3doaWxlKHZscT4wKTtyZXR1cm4gZW5jb2RlZH07ZXhwb3J0cy5kZWNvZGU9ZnVuY3Rpb24oYVN0cixhSW5kZXgsYU91dFBhcmFtKXt2YXIgc3RyTGVuPWFTdHIubGVuZ3RoLHJlc3VsdD0wLHNoaWZ0PTAsY29udGludWF0aW9uLGRpZ2l0O2Rve2lmKGFJbmRleD49c3RyTGVuKXRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIG1vcmUgZGlnaXRzIGluIGJhc2UgNjQgVkxRIHZhbHVlLlwiKTtpZihkaWdpdD1iYXNlNjQuZGVjb2RlKGFTdHIuY2hhckNvZGVBdChhSW5kZXgrKykpLGRpZ2l0PT09LTEpdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBiYXNlNjQgZGlnaXQ6IFwiK2FTdHIuY2hhckF0KGFJbmRleC0xKSk7Y29udGludWF0aW9uPSEhKGRpZ2l0JlZMUV9DT05USU5VQVRJT05fQklUKSxkaWdpdCY9VkxRX0JBU0VfTUFTSyxyZXN1bHQ9cmVzdWx0KyhkaWdpdDw8c2hpZnQpLHNoaWZ0Kz1WTFFfQkFTRV9TSElGVDt9d2hpbGUoY29udGludWF0aW9uKTthT3V0UGFyYW0udmFsdWU9ZnJvbVZMUVNpZ25lZChyZXN1bHQpLGFPdXRQYXJhbS5yZXN0PWFJbmRleDt9O319KTt2YXIgcmVxdWlyZV91dGlsPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2VzY29kZWdlbi9ub2RlX21vZHVsZXMvc291cmNlLW1hcC9saWIvdXRpbC5qc1wiKGV4cG9ydHMpe2Z1bmN0aW9uIGdldEFyZyhhQXJncyxhTmFtZSxhRGVmYXVsdFZhbHVlKXtpZihhTmFtZSBpbiBhQXJncylyZXR1cm4gYUFyZ3NbYU5hbWVdO2lmKGFyZ3VtZW50cy5sZW5ndGg9PT0zKXJldHVybiBhRGVmYXVsdFZhbHVlO3Rocm93IG5ldyBFcnJvcignXCInK2FOYW1lKydcIiBpcyBhIHJlcXVpcmVkIGFyZ3VtZW50LicpfWV4cG9ydHMuZ2V0QXJnPWdldEFyZzt2YXIgdXJsUmVnZXhwPS9eKD86KFtcXHcrXFwtLl0rKTopP1xcL1xcLyg/OihcXHcrOlxcdyspQCk/KFtcXHcuLV0qKSg/OjooXFxkKykpPyguKikkLyxkYXRhVXJsUmVnZXhwPS9eZGF0YTouK1xcLC4rJC87ZnVuY3Rpb24gdXJsUGFyc2UoYVVybCl7dmFyIG1hdGNoPWFVcmwubWF0Y2godXJsUmVnZXhwKTtyZXR1cm4gbWF0Y2g/e3NjaGVtZTptYXRjaFsxXSxhdXRoOm1hdGNoWzJdLGhvc3Q6bWF0Y2hbM10scG9ydDptYXRjaFs0XSxwYXRoOm1hdGNoWzVdfTpudWxsfWV4cG9ydHMudXJsUGFyc2U9dXJsUGFyc2U7ZnVuY3Rpb24gdXJsR2VuZXJhdGUoYVBhcnNlZFVybCl7dmFyIHVybD1cIlwiO3JldHVybiBhUGFyc2VkVXJsLnNjaGVtZSYmKHVybCs9YVBhcnNlZFVybC5zY2hlbWUrXCI6XCIpLHVybCs9XCIvL1wiLGFQYXJzZWRVcmwuYXV0aCYmKHVybCs9YVBhcnNlZFVybC5hdXRoK1wiQFwiKSxhUGFyc2VkVXJsLmhvc3QmJih1cmwrPWFQYXJzZWRVcmwuaG9zdCksYVBhcnNlZFVybC5wb3J0JiYodXJsKz1cIjpcIithUGFyc2VkVXJsLnBvcnQpLGFQYXJzZWRVcmwucGF0aCYmKHVybCs9YVBhcnNlZFVybC5wYXRoKSx1cmx9ZXhwb3J0cy51cmxHZW5lcmF0ZT11cmxHZW5lcmF0ZTtmdW5jdGlvbiBub3JtYWxpemUoYVBhdGgpe3ZhciBwYXRoPWFQYXRoLHVybD11cmxQYXJzZShhUGF0aCk7aWYodXJsKXtpZighdXJsLnBhdGgpcmV0dXJuIGFQYXRoO3BhdGg9dXJsLnBhdGg7fWZvcih2YXIgaXNBYnNvbHV0ZT1leHBvcnRzLmlzQWJzb2x1dGUocGF0aCkscGFydHM9cGF0aC5zcGxpdCgvXFwvKy8pLHBhcnQsdXA9MCxpPXBhcnRzLmxlbmd0aC0xO2k+PTA7aS0tKXBhcnQ9cGFydHNbaV0scGFydD09PVwiLlwiP3BhcnRzLnNwbGljZShpLDEpOnBhcnQ9PT1cIi4uXCI/dXArKzp1cD4wJiYocGFydD09PVwiXCI/KHBhcnRzLnNwbGljZShpKzEsdXApLHVwPTApOihwYXJ0cy5zcGxpY2UoaSwyKSx1cC0tKSk7cmV0dXJuIHBhdGg9cGFydHMuam9pbihcIi9cIikscGF0aD09PVwiXCImJihwYXRoPWlzQWJzb2x1dGU/XCIvXCI6XCIuXCIpLHVybD8odXJsLnBhdGg9cGF0aCx1cmxHZW5lcmF0ZSh1cmwpKTpwYXRofWV4cG9ydHMubm9ybWFsaXplPW5vcm1hbGl6ZTtmdW5jdGlvbiBqb2luKGFSb290LGFQYXRoKXthUm9vdD09PVwiXCImJihhUm9vdD1cIi5cIiksYVBhdGg9PT1cIlwiJiYoYVBhdGg9XCIuXCIpO3ZhciBhUGF0aFVybD11cmxQYXJzZShhUGF0aCksYVJvb3RVcmw9dXJsUGFyc2UoYVJvb3QpO2lmKGFSb290VXJsJiYoYVJvb3Q9YVJvb3RVcmwucGF0aHx8XCIvXCIpLGFQYXRoVXJsJiYhYVBhdGhVcmwuc2NoZW1lKXJldHVybiBhUm9vdFVybCYmKGFQYXRoVXJsLnNjaGVtZT1hUm9vdFVybC5zY2hlbWUpLHVybEdlbmVyYXRlKGFQYXRoVXJsKTtpZihhUGF0aFVybHx8YVBhdGgubWF0Y2goZGF0YVVybFJlZ2V4cCkpcmV0dXJuIGFQYXRoO2lmKGFSb290VXJsJiYhYVJvb3RVcmwuaG9zdCYmIWFSb290VXJsLnBhdGgpcmV0dXJuIGFSb290VXJsLmhvc3Q9YVBhdGgsdXJsR2VuZXJhdGUoYVJvb3RVcmwpO3ZhciBqb2luZWQ9YVBhdGguY2hhckF0KDApPT09XCIvXCI/YVBhdGg6bm9ybWFsaXplKGFSb290LnJlcGxhY2UoL1xcLyskLyxcIlwiKStcIi9cIithUGF0aCk7cmV0dXJuIGFSb290VXJsPyhhUm9vdFVybC5wYXRoPWpvaW5lZCx1cmxHZW5lcmF0ZShhUm9vdFVybCkpOmpvaW5lZH1leHBvcnRzLmpvaW49am9pbjtleHBvcnRzLmlzQWJzb2x1dGU9ZnVuY3Rpb24oYVBhdGgpe3JldHVybiBhUGF0aC5jaGFyQXQoMCk9PT1cIi9cInx8dXJsUmVnZXhwLnRlc3QoYVBhdGgpfTtmdW5jdGlvbiByZWxhdGl2ZShhUm9vdCxhUGF0aCl7YVJvb3Q9PT1cIlwiJiYoYVJvb3Q9XCIuXCIpLGFSb290PWFSb290LnJlcGxhY2UoL1xcLyQvLFwiXCIpO2Zvcih2YXIgbGV2ZWw9MDthUGF0aC5pbmRleE9mKGFSb290K1wiL1wiKSE9PTA7KXt2YXIgaW5kZXg9YVJvb3QubGFzdEluZGV4T2YoXCIvXCIpO2lmKGluZGV4PDB8fChhUm9vdD1hUm9vdC5zbGljZSgwLGluZGV4KSxhUm9vdC5tYXRjaCgvXihbXlxcL10rOlxcLyk/XFwvKiQvKSkpcmV0dXJuIGFQYXRoOysrbGV2ZWw7fXJldHVybiBBcnJheShsZXZlbCsxKS5qb2luKFwiLi4vXCIpK2FQYXRoLnN1YnN0cihhUm9vdC5sZW5ndGgrMSl9ZXhwb3J0cy5yZWxhdGl2ZT1yZWxhdGl2ZTt2YXIgc3VwcG9ydHNOdWxsUHJvdG89ZnVuY3Rpb24oKXt2YXIgb2JqPU9iamVjdC5jcmVhdGUobnVsbCk7cmV0dXJuICEoXCJfX3Byb3RvX19cImluIG9iail9KCk7ZnVuY3Rpb24gaWRlbnRpdHkocyl7cmV0dXJuIHN9ZnVuY3Rpb24gdG9TZXRTdHJpbmcoYVN0cil7cmV0dXJuIGlzUHJvdG9TdHJpbmcoYVN0cik/XCIkXCIrYVN0cjphU3RyfWV4cG9ydHMudG9TZXRTdHJpbmc9c3VwcG9ydHNOdWxsUHJvdG8/aWRlbnRpdHk6dG9TZXRTdHJpbmc7ZnVuY3Rpb24gZnJvbVNldFN0cmluZyhhU3RyKXtyZXR1cm4gaXNQcm90b1N0cmluZyhhU3RyKT9hU3RyLnNsaWNlKDEpOmFTdHJ9ZXhwb3J0cy5mcm9tU2V0U3RyaW5nPXN1cHBvcnRzTnVsbFByb3RvP2lkZW50aXR5OmZyb21TZXRTdHJpbmc7ZnVuY3Rpb24gaXNQcm90b1N0cmluZyhzKXtpZighcylyZXR1cm4gITE7dmFyIGxlbmd0aD1zLmxlbmd0aDtpZihsZW5ndGg8OXx8cy5jaGFyQ29kZUF0KGxlbmd0aC0xKSE9PTk1fHxzLmNoYXJDb2RlQXQobGVuZ3RoLTIpIT09OTV8fHMuY2hhckNvZGVBdChsZW5ndGgtMykhPT0xMTF8fHMuY2hhckNvZGVBdChsZW5ndGgtNCkhPT0xMTZ8fHMuY2hhckNvZGVBdChsZW5ndGgtNSkhPT0xMTF8fHMuY2hhckNvZGVBdChsZW5ndGgtNikhPT0xMTR8fHMuY2hhckNvZGVBdChsZW5ndGgtNykhPT0xMTJ8fHMuY2hhckNvZGVBdChsZW5ndGgtOCkhPT05NXx8cy5jaGFyQ29kZUF0KGxlbmd0aC05KSE9PTk1KXJldHVybiAhMTtmb3IodmFyIGk9bGVuZ3RoLTEwO2k+PTA7aS0tKWlmKHMuY2hhckNvZGVBdChpKSE9PTM2KXJldHVybiAhMTtyZXR1cm4gITB9ZnVuY3Rpb24gY29tcGFyZUJ5T3JpZ2luYWxQb3NpdGlvbnMobWFwcGluZ0EsbWFwcGluZ0Isb25seUNvbXBhcmVPcmlnaW5hbCl7dmFyIGNtcD1zdHJjbXAobWFwcGluZ0Euc291cmNlLG1hcHBpbmdCLnNvdXJjZSk7cmV0dXJuIGNtcCE9PTB8fChjbXA9bWFwcGluZ0Eub3JpZ2luYWxMaW5lLW1hcHBpbmdCLm9yaWdpbmFsTGluZSxjbXAhPT0wKXx8KGNtcD1tYXBwaW5nQS5vcmlnaW5hbENvbHVtbi1tYXBwaW5nQi5vcmlnaW5hbENvbHVtbixjbXAhPT0wfHxvbmx5Q29tcGFyZU9yaWdpbmFsKXx8KGNtcD1tYXBwaW5nQS5nZW5lcmF0ZWRDb2x1bW4tbWFwcGluZ0IuZ2VuZXJhdGVkQ29sdW1uLGNtcCE9PTApfHwoY21wPW1hcHBpbmdBLmdlbmVyYXRlZExpbmUtbWFwcGluZ0IuZ2VuZXJhdGVkTGluZSxjbXAhPT0wKT9jbXA6c3RyY21wKG1hcHBpbmdBLm5hbWUsbWFwcGluZ0IubmFtZSl9ZXhwb3J0cy5jb21wYXJlQnlPcmlnaW5hbFBvc2l0aW9ucz1jb21wYXJlQnlPcmlnaW5hbFBvc2l0aW9ucztmdW5jdGlvbiBjb21wYXJlQnlHZW5lcmF0ZWRQb3NpdGlvbnNEZWZsYXRlZChtYXBwaW5nQSxtYXBwaW5nQixvbmx5Q29tcGFyZUdlbmVyYXRlZCl7dmFyIGNtcD1tYXBwaW5nQS5nZW5lcmF0ZWRMaW5lLW1hcHBpbmdCLmdlbmVyYXRlZExpbmU7cmV0dXJuIGNtcCE9PTB8fChjbXA9bWFwcGluZ0EuZ2VuZXJhdGVkQ29sdW1uLW1hcHBpbmdCLmdlbmVyYXRlZENvbHVtbixjbXAhPT0wfHxvbmx5Q29tcGFyZUdlbmVyYXRlZCl8fChjbXA9c3RyY21wKG1hcHBpbmdBLnNvdXJjZSxtYXBwaW5nQi5zb3VyY2UpLGNtcCE9PTApfHwoY21wPW1hcHBpbmdBLm9yaWdpbmFsTGluZS1tYXBwaW5nQi5vcmlnaW5hbExpbmUsY21wIT09MCl8fChjbXA9bWFwcGluZ0Eub3JpZ2luYWxDb2x1bW4tbWFwcGluZ0Iub3JpZ2luYWxDb2x1bW4sY21wIT09MCk/Y21wOnN0cmNtcChtYXBwaW5nQS5uYW1lLG1hcHBpbmdCLm5hbWUpfWV4cG9ydHMuY29tcGFyZUJ5R2VuZXJhdGVkUG9zaXRpb25zRGVmbGF0ZWQ9Y29tcGFyZUJ5R2VuZXJhdGVkUG9zaXRpb25zRGVmbGF0ZWQ7ZnVuY3Rpb24gc3RyY21wKGFTdHIxLGFTdHIyKXtyZXR1cm4gYVN0cjE9PT1hU3RyMj8wOmFTdHIxPT09bnVsbD8xOmFTdHIyPT09bnVsbD8tMTphU3RyMT5hU3RyMj8xOi0xfWZ1bmN0aW9uIGNvbXBhcmVCeUdlbmVyYXRlZFBvc2l0aW9uc0luZmxhdGVkKG1hcHBpbmdBLG1hcHBpbmdCKXt2YXIgY21wPW1hcHBpbmdBLmdlbmVyYXRlZExpbmUtbWFwcGluZ0IuZ2VuZXJhdGVkTGluZTtyZXR1cm4gY21wIT09MHx8KGNtcD1tYXBwaW5nQS5nZW5lcmF0ZWRDb2x1bW4tbWFwcGluZ0IuZ2VuZXJhdGVkQ29sdW1uLGNtcCE9PTApfHwoY21wPXN0cmNtcChtYXBwaW5nQS5zb3VyY2UsbWFwcGluZ0Iuc291cmNlKSxjbXAhPT0wKXx8KGNtcD1tYXBwaW5nQS5vcmlnaW5hbExpbmUtbWFwcGluZ0Iub3JpZ2luYWxMaW5lLGNtcCE9PTApfHwoY21wPW1hcHBpbmdBLm9yaWdpbmFsQ29sdW1uLW1hcHBpbmdCLm9yaWdpbmFsQ29sdW1uLGNtcCE9PTApP2NtcDpzdHJjbXAobWFwcGluZ0EubmFtZSxtYXBwaW5nQi5uYW1lKX1leHBvcnRzLmNvbXBhcmVCeUdlbmVyYXRlZFBvc2l0aW9uc0luZmxhdGVkPWNvbXBhcmVCeUdlbmVyYXRlZFBvc2l0aW9uc0luZmxhdGVkO2Z1bmN0aW9uIHBhcnNlU291cmNlTWFwSW5wdXQoc3RyKXtyZXR1cm4gSlNPTi5wYXJzZShzdHIucmVwbGFjZSgvXlxcKV19J1teXFxuXSpcXG4vLFwiXCIpKX1leHBvcnRzLnBhcnNlU291cmNlTWFwSW5wdXQ9cGFyc2VTb3VyY2VNYXBJbnB1dDtmdW5jdGlvbiBjb21wdXRlU291cmNlVVJMKHNvdXJjZVJvb3Qsc291cmNlVVJMLHNvdXJjZU1hcFVSTCl7aWYoc291cmNlVVJMPXNvdXJjZVVSTHx8XCJcIixzb3VyY2VSb290JiYoc291cmNlUm9vdFtzb3VyY2VSb290Lmxlbmd0aC0xXSE9PVwiL1wiJiZzb3VyY2VVUkxbMF0hPT1cIi9cIiYmKHNvdXJjZVJvb3QrPVwiL1wiKSxzb3VyY2VVUkw9c291cmNlUm9vdCtzb3VyY2VVUkwpLHNvdXJjZU1hcFVSTCl7dmFyIHBhcnNlZD11cmxQYXJzZShzb3VyY2VNYXBVUkwpO2lmKCFwYXJzZWQpdGhyb3cgbmV3IEVycm9yKFwic291cmNlTWFwVVJMIGNvdWxkIG5vdCBiZSBwYXJzZWRcIik7aWYocGFyc2VkLnBhdGgpe3ZhciBpbmRleD1wYXJzZWQucGF0aC5sYXN0SW5kZXhPZihcIi9cIik7aW5kZXg+PTAmJihwYXJzZWQucGF0aD1wYXJzZWQucGF0aC5zdWJzdHJpbmcoMCxpbmRleCsxKSk7fXNvdXJjZVVSTD1qb2luKHVybEdlbmVyYXRlKHBhcnNlZCksc291cmNlVVJMKTt9cmV0dXJuIG5vcm1hbGl6ZShzb3VyY2VVUkwpfWV4cG9ydHMuY29tcHV0ZVNvdXJjZVVSTD1jb21wdXRlU291cmNlVVJMO319KTt2YXIgcmVxdWlyZV9hcnJheV9zZXQ9X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvZXNjb2RlZ2VuL25vZGVfbW9kdWxlcy9zb3VyY2UtbWFwL2xpYi9hcnJheS1zZXQuanNcIihleHBvcnRzKXt2YXIgdXRpbD1yZXF1aXJlX3V0aWwoKSxoYXMyPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksaGFzTmF0aXZlTWFwPXR5cGVvZiBNYXA8XCJ1XCI7ZnVuY3Rpb24gQXJyYXlTZXQoKXt0aGlzLl9hcnJheT1bXSx0aGlzLl9zZXQ9aGFzTmF0aXZlTWFwP25ldyBNYXA6T2JqZWN0LmNyZWF0ZShudWxsKTt9QXJyYXlTZXQuZnJvbUFycmF5PWZ1bmN0aW9uKGFBcnJheSxhQWxsb3dEdXBsaWNhdGVzKXtmb3IodmFyIHNldD1uZXcgQXJyYXlTZXQsaT0wLGxlbj1hQXJyYXkubGVuZ3RoO2k8bGVuO2krKylzZXQuYWRkKGFBcnJheVtpXSxhQWxsb3dEdXBsaWNhdGVzKTtyZXR1cm4gc2V0fTtBcnJheVNldC5wcm90b3R5cGUuc2l6ZT1mdW5jdGlvbigpe3JldHVybiBoYXNOYXRpdmVNYXA/dGhpcy5fc2V0LnNpemU6T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcy5fc2V0KS5sZW5ndGh9O0FycmF5U2V0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oYVN0cixhQWxsb3dEdXBsaWNhdGVzKXt2YXIgc1N0cj1oYXNOYXRpdmVNYXA/YVN0cjp1dGlsLnRvU2V0U3RyaW5nKGFTdHIpLGlzRHVwbGljYXRlPWhhc05hdGl2ZU1hcD90aGlzLmhhcyhhU3RyKTpoYXMyLmNhbGwodGhpcy5fc2V0LHNTdHIpLGlkeD10aGlzLl9hcnJheS5sZW5ndGg7KCFpc0R1cGxpY2F0ZXx8YUFsbG93RHVwbGljYXRlcykmJnRoaXMuX2FycmF5LnB1c2goYVN0ciksaXNEdXBsaWNhdGV8fChoYXNOYXRpdmVNYXA/dGhpcy5fc2V0LnNldChhU3RyLGlkeCk6dGhpcy5fc2V0W3NTdHJdPWlkeCk7fTtBcnJheVNldC5wcm90b3R5cGUuaGFzPWZ1bmN0aW9uKGFTdHIpe2lmKGhhc05hdGl2ZU1hcClyZXR1cm4gdGhpcy5fc2V0LmhhcyhhU3RyKTt2YXIgc1N0cj11dGlsLnRvU2V0U3RyaW5nKGFTdHIpO3JldHVybiBoYXMyLmNhbGwodGhpcy5fc2V0LHNTdHIpfTtBcnJheVNldC5wcm90b3R5cGUuaW5kZXhPZj1mdW5jdGlvbihhU3RyKXtpZihoYXNOYXRpdmVNYXApe3ZhciBpZHg9dGhpcy5fc2V0LmdldChhU3RyKTtpZihpZHg+PTApcmV0dXJuIGlkeH1lbHNlIHt2YXIgc1N0cj11dGlsLnRvU2V0U3RyaW5nKGFTdHIpO2lmKGhhczIuY2FsbCh0aGlzLl9zZXQsc1N0cikpcmV0dXJuIHRoaXMuX3NldFtzU3RyXX10aHJvdyBuZXcgRXJyb3IoJ1wiJythU3RyKydcIiBpcyBub3QgaW4gdGhlIHNldC4nKX07QXJyYXlTZXQucHJvdG90eXBlLmF0PWZ1bmN0aW9uKGFJZHgpe2lmKGFJZHg+PTAmJmFJZHg8dGhpcy5fYXJyYXkubGVuZ3RoKXJldHVybiB0aGlzLl9hcnJheVthSWR4XTt0aHJvdyBuZXcgRXJyb3IoXCJObyBlbGVtZW50IGluZGV4ZWQgYnkgXCIrYUlkeCl9O0FycmF5U2V0LnByb3RvdHlwZS50b0FycmF5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2FycmF5LnNsaWNlKCl9O2V4cG9ydHMuQXJyYXlTZXQ9QXJyYXlTZXQ7fX0pO3ZhciByZXF1aXJlX21hcHBpbmdfbGlzdD1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9lc2NvZGVnZW4vbm9kZV9tb2R1bGVzL3NvdXJjZS1tYXAvbGliL21hcHBpbmctbGlzdC5qc1wiKGV4cG9ydHMpe3ZhciB1dGlsPXJlcXVpcmVfdXRpbCgpO2Z1bmN0aW9uIGdlbmVyYXRlZFBvc2l0aW9uQWZ0ZXIobWFwcGluZ0EsbWFwcGluZ0Ipe3ZhciBsaW5lQT1tYXBwaW5nQS5nZW5lcmF0ZWRMaW5lLGxpbmVCPW1hcHBpbmdCLmdlbmVyYXRlZExpbmUsY29sdW1uQT1tYXBwaW5nQS5nZW5lcmF0ZWRDb2x1bW4sY29sdW1uQj1tYXBwaW5nQi5nZW5lcmF0ZWRDb2x1bW47cmV0dXJuIGxpbmVCPmxpbmVBfHxsaW5lQj09bGluZUEmJmNvbHVtbkI+PWNvbHVtbkF8fHV0aWwuY29tcGFyZUJ5R2VuZXJhdGVkUG9zaXRpb25zSW5mbGF0ZWQobWFwcGluZ0EsbWFwcGluZ0IpPD0wfWZ1bmN0aW9uIE1hcHBpbmdMaXN0KCl7dGhpcy5fYXJyYXk9W10sdGhpcy5fc29ydGVkPSEwLHRoaXMuX2xhc3Q9e2dlbmVyYXRlZExpbmU6LTEsZ2VuZXJhdGVkQ29sdW1uOjB9O31NYXBwaW5nTGlzdC5wcm90b3R5cGUudW5zb3J0ZWRGb3JFYWNoPWZ1bmN0aW9uKGFDYWxsYmFjayxhVGhpc0FyZyl7dGhpcy5fYXJyYXkuZm9yRWFjaChhQ2FsbGJhY2ssYVRoaXNBcmcpO307TWFwcGluZ0xpc3QucHJvdG90eXBlLmFkZD1mdW5jdGlvbihhTWFwcGluZyl7Z2VuZXJhdGVkUG9zaXRpb25BZnRlcih0aGlzLl9sYXN0LGFNYXBwaW5nKT8odGhpcy5fbGFzdD1hTWFwcGluZyx0aGlzLl9hcnJheS5wdXNoKGFNYXBwaW5nKSk6KHRoaXMuX3NvcnRlZD0hMSx0aGlzLl9hcnJheS5wdXNoKGFNYXBwaW5nKSk7fTtNYXBwaW5nTGlzdC5wcm90b3R5cGUudG9BcnJheT1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9zb3J0ZWR8fCh0aGlzLl9hcnJheS5zb3J0KHV0aWwuY29tcGFyZUJ5R2VuZXJhdGVkUG9zaXRpb25zSW5mbGF0ZWQpLHRoaXMuX3NvcnRlZD0hMCksdGhpcy5fYXJyYXl9O2V4cG9ydHMuTWFwcGluZ0xpc3Q9TWFwcGluZ0xpc3Q7fX0pO3ZhciByZXF1aXJlX3NvdXJjZV9tYXBfZ2VuZXJhdG9yPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2VzY29kZWdlbi9ub2RlX21vZHVsZXMvc291cmNlLW1hcC9saWIvc291cmNlLW1hcC1nZW5lcmF0b3IuanNcIihleHBvcnRzKXt2YXIgYmFzZTY0VkxRPXJlcXVpcmVfYmFzZTY0X3ZscSgpLHV0aWw9cmVxdWlyZV91dGlsKCksQXJyYXlTZXQ9cmVxdWlyZV9hcnJheV9zZXQoKS5BcnJheVNldCxNYXBwaW5nTGlzdD1yZXF1aXJlX21hcHBpbmdfbGlzdCgpLk1hcHBpbmdMaXN0O2Z1bmN0aW9uIFNvdXJjZU1hcEdlbmVyYXRvcihhQXJncyl7YUFyZ3N8fChhQXJncz17fSksdGhpcy5fZmlsZT11dGlsLmdldEFyZyhhQXJncyxcImZpbGVcIixudWxsKSx0aGlzLl9zb3VyY2VSb290PXV0aWwuZ2V0QXJnKGFBcmdzLFwic291cmNlUm9vdFwiLG51bGwpLHRoaXMuX3NraXBWYWxpZGF0aW9uPXV0aWwuZ2V0QXJnKGFBcmdzLFwic2tpcFZhbGlkYXRpb25cIiwhMSksdGhpcy5fc291cmNlcz1uZXcgQXJyYXlTZXQsdGhpcy5fbmFtZXM9bmV3IEFycmF5U2V0LHRoaXMuX21hcHBpbmdzPW5ldyBNYXBwaW5nTGlzdCx0aGlzLl9zb3VyY2VzQ29udGVudHM9bnVsbDt9U291cmNlTWFwR2VuZXJhdG9yLnByb3RvdHlwZS5fdmVyc2lvbj0zO1NvdXJjZU1hcEdlbmVyYXRvci5mcm9tU291cmNlTWFwPWZ1bmN0aW9uKGFTb3VyY2VNYXBDb25zdW1lcil7dmFyIHNvdXJjZVJvb3Q9YVNvdXJjZU1hcENvbnN1bWVyLnNvdXJjZVJvb3QsZ2VuZXJhdG9yPW5ldyBTb3VyY2VNYXBHZW5lcmF0b3Ioe2ZpbGU6YVNvdXJjZU1hcENvbnN1bWVyLmZpbGUsc291cmNlUm9vdH0pO3JldHVybiBhU291cmNlTWFwQ29uc3VtZXIuZWFjaE1hcHBpbmcoZnVuY3Rpb24obWFwcGluZyl7dmFyIG5ld01hcHBpbmc9e2dlbmVyYXRlZDp7bGluZTptYXBwaW5nLmdlbmVyYXRlZExpbmUsY29sdW1uOm1hcHBpbmcuZ2VuZXJhdGVkQ29sdW1ufX07bWFwcGluZy5zb3VyY2UhPW51bGwmJihuZXdNYXBwaW5nLnNvdXJjZT1tYXBwaW5nLnNvdXJjZSxzb3VyY2VSb290IT1udWxsJiYobmV3TWFwcGluZy5zb3VyY2U9dXRpbC5yZWxhdGl2ZShzb3VyY2VSb290LG5ld01hcHBpbmcuc291cmNlKSksbmV3TWFwcGluZy5vcmlnaW5hbD17bGluZTptYXBwaW5nLm9yaWdpbmFsTGluZSxjb2x1bW46bWFwcGluZy5vcmlnaW5hbENvbHVtbn0sbWFwcGluZy5uYW1lIT1udWxsJiYobmV3TWFwcGluZy5uYW1lPW1hcHBpbmcubmFtZSkpLGdlbmVyYXRvci5hZGRNYXBwaW5nKG5ld01hcHBpbmcpO30pLGFTb3VyY2VNYXBDb25zdW1lci5zb3VyY2VzLmZvckVhY2goZnVuY3Rpb24oc291cmNlRmlsZSl7dmFyIHNvdXJjZVJlbGF0aXZlPXNvdXJjZUZpbGU7c291cmNlUm9vdCE9PW51bGwmJihzb3VyY2VSZWxhdGl2ZT11dGlsLnJlbGF0aXZlKHNvdXJjZVJvb3Qsc291cmNlRmlsZSkpLGdlbmVyYXRvci5fc291cmNlcy5oYXMoc291cmNlUmVsYXRpdmUpfHxnZW5lcmF0b3IuX3NvdXJjZXMuYWRkKHNvdXJjZVJlbGF0aXZlKTt2YXIgY29udGVudD1hU291cmNlTWFwQ29uc3VtZXIuc291cmNlQ29udGVudEZvcihzb3VyY2VGaWxlKTtjb250ZW50IT1udWxsJiZnZW5lcmF0b3Iuc2V0U291cmNlQ29udGVudChzb3VyY2VGaWxlLGNvbnRlbnQpO30pLGdlbmVyYXRvcn07U291cmNlTWFwR2VuZXJhdG9yLnByb3RvdHlwZS5hZGRNYXBwaW5nPWZ1bmN0aW9uKGFBcmdzKXt2YXIgZ2VuZXJhdGVkPXV0aWwuZ2V0QXJnKGFBcmdzLFwiZ2VuZXJhdGVkXCIpLG9yaWdpbmFsPXV0aWwuZ2V0QXJnKGFBcmdzLFwib3JpZ2luYWxcIixudWxsKSxzb3VyY2U9dXRpbC5nZXRBcmcoYUFyZ3MsXCJzb3VyY2VcIixudWxsKSxuYW1lPXV0aWwuZ2V0QXJnKGFBcmdzLFwibmFtZVwiLG51bGwpO3RoaXMuX3NraXBWYWxpZGF0aW9ufHx0aGlzLl92YWxpZGF0ZU1hcHBpbmcoZ2VuZXJhdGVkLG9yaWdpbmFsLHNvdXJjZSxuYW1lKSxzb3VyY2UhPW51bGwmJihzb3VyY2U9U3RyaW5nKHNvdXJjZSksdGhpcy5fc291cmNlcy5oYXMoc291cmNlKXx8dGhpcy5fc291cmNlcy5hZGQoc291cmNlKSksbmFtZSE9bnVsbCYmKG5hbWU9U3RyaW5nKG5hbWUpLHRoaXMuX25hbWVzLmhhcyhuYW1lKXx8dGhpcy5fbmFtZXMuYWRkKG5hbWUpKSx0aGlzLl9tYXBwaW5ncy5hZGQoe2dlbmVyYXRlZExpbmU6Z2VuZXJhdGVkLmxpbmUsZ2VuZXJhdGVkQ29sdW1uOmdlbmVyYXRlZC5jb2x1bW4sb3JpZ2luYWxMaW5lOm9yaWdpbmFsIT1udWxsJiZvcmlnaW5hbC5saW5lLG9yaWdpbmFsQ29sdW1uOm9yaWdpbmFsIT1udWxsJiZvcmlnaW5hbC5jb2x1bW4sc291cmNlLG5hbWV9KTt9O1NvdXJjZU1hcEdlbmVyYXRvci5wcm90b3R5cGUuc2V0U291cmNlQ29udGVudD1mdW5jdGlvbihhU291cmNlRmlsZSxhU291cmNlQ29udGVudCl7dmFyIHNvdXJjZT1hU291cmNlRmlsZTt0aGlzLl9zb3VyY2VSb290IT1udWxsJiYoc291cmNlPXV0aWwucmVsYXRpdmUodGhpcy5fc291cmNlUm9vdCxzb3VyY2UpKSxhU291cmNlQ29udGVudCE9bnVsbD8odGhpcy5fc291cmNlc0NvbnRlbnRzfHwodGhpcy5fc291cmNlc0NvbnRlbnRzPU9iamVjdC5jcmVhdGUobnVsbCkpLHRoaXMuX3NvdXJjZXNDb250ZW50c1t1dGlsLnRvU2V0U3RyaW5nKHNvdXJjZSldPWFTb3VyY2VDb250ZW50KTp0aGlzLl9zb3VyY2VzQ29udGVudHMmJihkZWxldGUgdGhpcy5fc291cmNlc0NvbnRlbnRzW3V0aWwudG9TZXRTdHJpbmcoc291cmNlKV0sT2JqZWN0LmtleXModGhpcy5fc291cmNlc0NvbnRlbnRzKS5sZW5ndGg9PT0wJiYodGhpcy5fc291cmNlc0NvbnRlbnRzPW51bGwpKTt9O1NvdXJjZU1hcEdlbmVyYXRvci5wcm90b3R5cGUuYXBwbHlTb3VyY2VNYXA9ZnVuY3Rpb24oYVNvdXJjZU1hcENvbnN1bWVyLGFTb3VyY2VGaWxlLGFTb3VyY2VNYXBQYXRoKXt2YXIgc291cmNlRmlsZT1hU291cmNlRmlsZTtpZihhU291cmNlRmlsZT09bnVsbCl7aWYoYVNvdXJjZU1hcENvbnN1bWVyLmZpbGU9PW51bGwpdGhyb3cgbmV3IEVycm9yKGBTb3VyY2VNYXBHZW5lcmF0b3IucHJvdG90eXBlLmFwcGx5U291cmNlTWFwIHJlcXVpcmVzIGVpdGhlciBhbiBleHBsaWNpdCBzb3VyY2UgZmlsZSwgb3IgdGhlIHNvdXJjZSBtYXAncyBcImZpbGVcIiBwcm9wZXJ0eS4gQm90aCB3ZXJlIG9taXR0ZWQuYCk7c291cmNlRmlsZT1hU291cmNlTWFwQ29uc3VtZXIuZmlsZTt9dmFyIHNvdXJjZVJvb3Q9dGhpcy5fc291cmNlUm9vdDtzb3VyY2VSb290IT1udWxsJiYoc291cmNlRmlsZT11dGlsLnJlbGF0aXZlKHNvdXJjZVJvb3Qsc291cmNlRmlsZSkpO3ZhciBuZXdTb3VyY2VzPW5ldyBBcnJheVNldCxuZXdOYW1lcz1uZXcgQXJyYXlTZXQ7dGhpcy5fbWFwcGluZ3MudW5zb3J0ZWRGb3JFYWNoKGZ1bmN0aW9uKG1hcHBpbmcpe2lmKG1hcHBpbmcuc291cmNlPT09c291cmNlRmlsZSYmbWFwcGluZy5vcmlnaW5hbExpbmUhPW51bGwpe3ZhciBvcmlnaW5hbD1hU291cmNlTWFwQ29uc3VtZXIub3JpZ2luYWxQb3NpdGlvbkZvcih7bGluZTptYXBwaW5nLm9yaWdpbmFsTGluZSxjb2x1bW46bWFwcGluZy5vcmlnaW5hbENvbHVtbn0pO29yaWdpbmFsLnNvdXJjZSE9bnVsbCYmKG1hcHBpbmcuc291cmNlPW9yaWdpbmFsLnNvdXJjZSxhU291cmNlTWFwUGF0aCE9bnVsbCYmKG1hcHBpbmcuc291cmNlPXV0aWwuam9pbihhU291cmNlTWFwUGF0aCxtYXBwaW5nLnNvdXJjZSkpLHNvdXJjZVJvb3QhPW51bGwmJihtYXBwaW5nLnNvdXJjZT11dGlsLnJlbGF0aXZlKHNvdXJjZVJvb3QsbWFwcGluZy5zb3VyY2UpKSxtYXBwaW5nLm9yaWdpbmFsTGluZT1vcmlnaW5hbC5saW5lLG1hcHBpbmcub3JpZ2luYWxDb2x1bW49b3JpZ2luYWwuY29sdW1uLG9yaWdpbmFsLm5hbWUhPW51bGwmJihtYXBwaW5nLm5hbWU9b3JpZ2luYWwubmFtZSkpO312YXIgc291cmNlPW1hcHBpbmcuc291cmNlO3NvdXJjZSE9bnVsbCYmIW5ld1NvdXJjZXMuaGFzKHNvdXJjZSkmJm5ld1NvdXJjZXMuYWRkKHNvdXJjZSk7dmFyIG5hbWU9bWFwcGluZy5uYW1lO25hbWUhPW51bGwmJiFuZXdOYW1lcy5oYXMobmFtZSkmJm5ld05hbWVzLmFkZChuYW1lKTt9LHRoaXMpLHRoaXMuX3NvdXJjZXM9bmV3U291cmNlcyx0aGlzLl9uYW1lcz1uZXdOYW1lcyxhU291cmNlTWFwQ29uc3VtZXIuc291cmNlcy5mb3JFYWNoKGZ1bmN0aW9uKHNvdXJjZUZpbGUyKXt2YXIgY29udGVudD1hU291cmNlTWFwQ29uc3VtZXIuc291cmNlQ29udGVudEZvcihzb3VyY2VGaWxlMik7Y29udGVudCE9bnVsbCYmKGFTb3VyY2VNYXBQYXRoIT1udWxsJiYoc291cmNlRmlsZTI9dXRpbC5qb2luKGFTb3VyY2VNYXBQYXRoLHNvdXJjZUZpbGUyKSksc291cmNlUm9vdCE9bnVsbCYmKHNvdXJjZUZpbGUyPXV0aWwucmVsYXRpdmUoc291cmNlUm9vdCxzb3VyY2VGaWxlMikpLHRoaXMuc2V0U291cmNlQ29udGVudChzb3VyY2VGaWxlMixjb250ZW50KSk7fSx0aGlzKTt9O1NvdXJjZU1hcEdlbmVyYXRvci5wcm90b3R5cGUuX3ZhbGlkYXRlTWFwcGluZz1mdW5jdGlvbihhR2VuZXJhdGVkLGFPcmlnaW5hbCxhU291cmNlLGFOYW1lKXtpZihhT3JpZ2luYWwmJnR5cGVvZiBhT3JpZ2luYWwubGluZSE9XCJudW1iZXJcIiYmdHlwZW9mIGFPcmlnaW5hbC5jb2x1bW4hPVwibnVtYmVyXCIpdGhyb3cgbmV3IEVycm9yKFwib3JpZ2luYWwubGluZSBhbmQgb3JpZ2luYWwuY29sdW1uIGFyZSBub3QgbnVtYmVycyAtLSB5b3UgcHJvYmFibHkgbWVhbnQgdG8gb21pdCB0aGUgb3JpZ2luYWwgbWFwcGluZyBlbnRpcmVseSBhbmQgb25seSBtYXAgdGhlIGdlbmVyYXRlZCBwb3NpdGlvbi4gSWYgc28sIHBhc3MgbnVsbCBmb3IgdGhlIG9yaWdpbmFsIG1hcHBpbmcgaW5zdGVhZCBvZiBhbiBvYmplY3Qgd2l0aCBlbXB0eSBvciBudWxsIHZhbHVlcy5cIik7aWYoIShhR2VuZXJhdGVkJiZcImxpbmVcImluIGFHZW5lcmF0ZWQmJlwiY29sdW1uXCJpbiBhR2VuZXJhdGVkJiZhR2VuZXJhdGVkLmxpbmU+MCYmYUdlbmVyYXRlZC5jb2x1bW4+PTAmJiFhT3JpZ2luYWwmJiFhU291cmNlJiYhYU5hbWUpKXtpZihhR2VuZXJhdGVkJiZcImxpbmVcImluIGFHZW5lcmF0ZWQmJlwiY29sdW1uXCJpbiBhR2VuZXJhdGVkJiZhT3JpZ2luYWwmJlwibGluZVwiaW4gYU9yaWdpbmFsJiZcImNvbHVtblwiaW4gYU9yaWdpbmFsJiZhR2VuZXJhdGVkLmxpbmU+MCYmYUdlbmVyYXRlZC5jb2x1bW4+PTAmJmFPcmlnaW5hbC5saW5lPjAmJmFPcmlnaW5hbC5jb2x1bW4+PTAmJmFTb3VyY2UpcmV0dXJuO3Rocm93IG5ldyBFcnJvcihcIkludmFsaWQgbWFwcGluZzogXCIrSlNPTi5zdHJpbmdpZnkoe2dlbmVyYXRlZDphR2VuZXJhdGVkLHNvdXJjZTphU291cmNlLG9yaWdpbmFsOmFPcmlnaW5hbCxuYW1lOmFOYW1lfSkpfX07U291cmNlTWFwR2VuZXJhdG9yLnByb3RvdHlwZS5fc2VyaWFsaXplTWFwcGluZ3M9ZnVuY3Rpb24oKXtmb3IodmFyIHByZXZpb3VzR2VuZXJhdGVkQ29sdW1uPTAscHJldmlvdXNHZW5lcmF0ZWRMaW5lPTEscHJldmlvdXNPcmlnaW5hbENvbHVtbj0wLHByZXZpb3VzT3JpZ2luYWxMaW5lPTAscHJldmlvdXNOYW1lPTAscHJldmlvdXNTb3VyY2U9MCxyZXN1bHQ9XCJcIixuZXh0LG1hcHBpbmcsbmFtZUlkeCxzb3VyY2VJZHgsbWFwcGluZ3M9dGhpcy5fbWFwcGluZ3MudG9BcnJheSgpLGk9MCxsZW49bWFwcGluZ3MubGVuZ3RoO2k8bGVuO2krKyl7aWYobWFwcGluZz1tYXBwaW5nc1tpXSxuZXh0PVwiXCIsbWFwcGluZy5nZW5lcmF0ZWRMaW5lIT09cHJldmlvdXNHZW5lcmF0ZWRMaW5lKWZvcihwcmV2aW91c0dlbmVyYXRlZENvbHVtbj0wO21hcHBpbmcuZ2VuZXJhdGVkTGluZSE9PXByZXZpb3VzR2VuZXJhdGVkTGluZTspbmV4dCs9XCI7XCIscHJldmlvdXNHZW5lcmF0ZWRMaW5lKys7ZWxzZSBpZihpPjApe2lmKCF1dGlsLmNvbXBhcmVCeUdlbmVyYXRlZFBvc2l0aW9uc0luZmxhdGVkKG1hcHBpbmcsbWFwcGluZ3NbaS0xXSkpY29udGludWU7bmV4dCs9XCIsXCI7fW5leHQrPWJhc2U2NFZMUS5lbmNvZGUobWFwcGluZy5nZW5lcmF0ZWRDb2x1bW4tcHJldmlvdXNHZW5lcmF0ZWRDb2x1bW4pLHByZXZpb3VzR2VuZXJhdGVkQ29sdW1uPW1hcHBpbmcuZ2VuZXJhdGVkQ29sdW1uLG1hcHBpbmcuc291cmNlIT1udWxsJiYoc291cmNlSWR4PXRoaXMuX3NvdXJjZXMuaW5kZXhPZihtYXBwaW5nLnNvdXJjZSksbmV4dCs9YmFzZTY0VkxRLmVuY29kZShzb3VyY2VJZHgtcHJldmlvdXNTb3VyY2UpLHByZXZpb3VzU291cmNlPXNvdXJjZUlkeCxuZXh0Kz1iYXNlNjRWTFEuZW5jb2RlKG1hcHBpbmcub3JpZ2luYWxMaW5lLTEtcHJldmlvdXNPcmlnaW5hbExpbmUpLHByZXZpb3VzT3JpZ2luYWxMaW5lPW1hcHBpbmcub3JpZ2luYWxMaW5lLTEsbmV4dCs9YmFzZTY0VkxRLmVuY29kZShtYXBwaW5nLm9yaWdpbmFsQ29sdW1uLXByZXZpb3VzT3JpZ2luYWxDb2x1bW4pLHByZXZpb3VzT3JpZ2luYWxDb2x1bW49bWFwcGluZy5vcmlnaW5hbENvbHVtbixtYXBwaW5nLm5hbWUhPW51bGwmJihuYW1lSWR4PXRoaXMuX25hbWVzLmluZGV4T2YobWFwcGluZy5uYW1lKSxuZXh0Kz1iYXNlNjRWTFEuZW5jb2RlKG5hbWVJZHgtcHJldmlvdXNOYW1lKSxwcmV2aW91c05hbWU9bmFtZUlkeCkpLHJlc3VsdCs9bmV4dDt9cmV0dXJuIHJlc3VsdH07U291cmNlTWFwR2VuZXJhdG9yLnByb3RvdHlwZS5fZ2VuZXJhdGVTb3VyY2VzQ29udGVudD1mdW5jdGlvbihhU291cmNlcyxhU291cmNlUm9vdCl7cmV0dXJuIGFTb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2Upe2lmKCF0aGlzLl9zb3VyY2VzQ29udGVudHMpcmV0dXJuIG51bGw7YVNvdXJjZVJvb3QhPW51bGwmJihzb3VyY2U9dXRpbC5yZWxhdGl2ZShhU291cmNlUm9vdCxzb3VyY2UpKTt2YXIga2V5PXV0aWwudG9TZXRTdHJpbmcoc291cmNlKTtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuX3NvdXJjZXNDb250ZW50cyxrZXkpP3RoaXMuX3NvdXJjZXNDb250ZW50c1trZXldOm51bGx9LHRoaXMpfTtTb3VyY2VNYXBHZW5lcmF0b3IucHJvdG90eXBlLnRvSlNPTj1mdW5jdGlvbigpe3ZhciBtYXA9e3ZlcnNpb246dGhpcy5fdmVyc2lvbixzb3VyY2VzOnRoaXMuX3NvdXJjZXMudG9BcnJheSgpLG5hbWVzOnRoaXMuX25hbWVzLnRvQXJyYXkoKSxtYXBwaW5nczp0aGlzLl9zZXJpYWxpemVNYXBwaW5ncygpfTtyZXR1cm4gdGhpcy5fZmlsZSE9bnVsbCYmKG1hcC5maWxlPXRoaXMuX2ZpbGUpLHRoaXMuX3NvdXJjZVJvb3QhPW51bGwmJihtYXAuc291cmNlUm9vdD10aGlzLl9zb3VyY2VSb290KSx0aGlzLl9zb3VyY2VzQ29udGVudHMmJihtYXAuc291cmNlc0NvbnRlbnQ9dGhpcy5fZ2VuZXJhdGVTb3VyY2VzQ29udGVudChtYXAuc291cmNlcyxtYXAuc291cmNlUm9vdCkpLG1hcH07U291cmNlTWFwR2VuZXJhdG9yLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLnRvSlNPTigpKX07ZXhwb3J0cy5Tb3VyY2VNYXBHZW5lcmF0b3I9U291cmNlTWFwR2VuZXJhdG9yO319KTt2YXIgcmVxdWlyZV9iaW5hcnlfc2VhcmNoPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2VzY29kZWdlbi9ub2RlX21vZHVsZXMvc291cmNlLW1hcC9saWIvYmluYXJ5LXNlYXJjaC5qc1wiKGV4cG9ydHMpe2V4cG9ydHMuR1JFQVRFU1RfTE9XRVJfQk9VTkQ9MTtleHBvcnRzLkxFQVNUX1VQUEVSX0JPVU5EPTI7ZnVuY3Rpb24gcmVjdXJzaXZlU2VhcmNoKGFMb3csYUhpZ2gsYU5lZWRsZSxhSGF5c3RhY2ssYUNvbXBhcmUsYUJpYXMpe3ZhciBtaWQ9TWF0aC5mbG9vcigoYUhpZ2gtYUxvdykvMikrYUxvdyxjbXA9YUNvbXBhcmUoYU5lZWRsZSxhSGF5c3RhY2tbbWlkXSwhMCk7cmV0dXJuIGNtcD09PTA/bWlkOmNtcD4wP2FIaWdoLW1pZD4xP3JlY3Vyc2l2ZVNlYXJjaChtaWQsYUhpZ2gsYU5lZWRsZSxhSGF5c3RhY2ssYUNvbXBhcmUsYUJpYXMpOmFCaWFzPT1leHBvcnRzLkxFQVNUX1VQUEVSX0JPVU5EP2FIaWdoPGFIYXlzdGFjay5sZW5ndGg/YUhpZ2g6LTE6bWlkOm1pZC1hTG93PjE/cmVjdXJzaXZlU2VhcmNoKGFMb3csbWlkLGFOZWVkbGUsYUhheXN0YWNrLGFDb21wYXJlLGFCaWFzKTphQmlhcz09ZXhwb3J0cy5MRUFTVF9VUFBFUl9CT1VORD9taWQ6YUxvdzwwPy0xOmFMb3d9ZXhwb3J0cy5zZWFyY2g9ZnVuY3Rpb24oYU5lZWRsZSxhSGF5c3RhY2ssYUNvbXBhcmUsYUJpYXMpe2lmKGFIYXlzdGFjay5sZW5ndGg9PT0wKXJldHVybiAtMTt2YXIgaW5kZXg9cmVjdXJzaXZlU2VhcmNoKC0xLGFIYXlzdGFjay5sZW5ndGgsYU5lZWRsZSxhSGF5c3RhY2ssYUNvbXBhcmUsYUJpYXN8fGV4cG9ydHMuR1JFQVRFU1RfTE9XRVJfQk9VTkQpO2lmKGluZGV4PDApcmV0dXJuIC0xO2Zvcig7aW5kZXgtMT49MCYmYUNvbXBhcmUoYUhheXN0YWNrW2luZGV4XSxhSGF5c3RhY2tbaW5kZXgtMV0sITApPT09MDspLS1pbmRleDtyZXR1cm4gaW5kZXh9O319KTt2YXIgcmVxdWlyZV9xdWlja19zb3J0PV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2VzY29kZWdlbi9ub2RlX21vZHVsZXMvc291cmNlLW1hcC9saWIvcXVpY2stc29ydC5qc1wiKGV4cG9ydHMpe2Z1bmN0aW9uIHN3YXAoYXJ5LHgseSl7dmFyIHRlbXA9YXJ5W3hdO2FyeVt4XT1hcnlbeV0sYXJ5W3ldPXRlbXA7fWZ1bmN0aW9uIHJhbmRvbUludEluUmFuZ2UobG93LGhpZ2gpe3JldHVybiBNYXRoLnJvdW5kKGxvdytNYXRoLnJhbmRvbSgpKihoaWdoLWxvdykpfWZ1bmN0aW9uIGRvUXVpY2tTb3J0KGFyeSxjb21wYXJhdG9yLHAscil7aWYocDxyKXt2YXIgcGl2b3RJbmRleD1yYW5kb21JbnRJblJhbmdlKHAsciksaT1wLTE7c3dhcChhcnkscGl2b3RJbmRleCxyKTtmb3IodmFyIHBpdm90PWFyeVtyXSxqPXA7ajxyO2orKyljb21wYXJhdG9yKGFyeVtqXSxwaXZvdCk8PTAmJihpKz0xLHN3YXAoYXJ5LGksaikpO3N3YXAoYXJ5LGkrMSxqKTt2YXIgcT1pKzE7ZG9RdWlja1NvcnQoYXJ5LGNvbXBhcmF0b3IscCxxLTEpLGRvUXVpY2tTb3J0KGFyeSxjb21wYXJhdG9yLHErMSxyKTt9fWV4cG9ydHMucXVpY2tTb3J0PWZ1bmN0aW9uKGFyeSxjb21wYXJhdG9yKXtkb1F1aWNrU29ydChhcnksY29tcGFyYXRvciwwLGFyeS5sZW5ndGgtMSk7fTt9fSk7dmFyIHJlcXVpcmVfc291cmNlX21hcF9jb25zdW1lcj1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9lc2NvZGVnZW4vbm9kZV9tb2R1bGVzL3NvdXJjZS1tYXAvbGliL3NvdXJjZS1tYXAtY29uc3VtZXIuanNcIihleHBvcnRzKXt2YXIgdXRpbD1yZXF1aXJlX3V0aWwoKSxiaW5hcnlTZWFyY2g9cmVxdWlyZV9iaW5hcnlfc2VhcmNoKCksQXJyYXlTZXQ9cmVxdWlyZV9hcnJheV9zZXQoKS5BcnJheVNldCxiYXNlNjRWTFE9cmVxdWlyZV9iYXNlNjRfdmxxKCkscXVpY2tTb3J0PXJlcXVpcmVfcXVpY2tfc29ydCgpLnF1aWNrU29ydDtmdW5jdGlvbiBTb3VyY2VNYXBDb25zdW1lcihhU291cmNlTWFwLGFTb3VyY2VNYXBVUkwpe3ZhciBzb3VyY2VNYXA9YVNvdXJjZU1hcDtyZXR1cm4gdHlwZW9mIGFTb3VyY2VNYXA9PVwic3RyaW5nXCImJihzb3VyY2VNYXA9dXRpbC5wYXJzZVNvdXJjZU1hcElucHV0KGFTb3VyY2VNYXApKSxzb3VyY2VNYXAuc2VjdGlvbnMhPW51bGw/bmV3IEluZGV4ZWRTb3VyY2VNYXBDb25zdW1lcihzb3VyY2VNYXAsYVNvdXJjZU1hcFVSTCk6bmV3IEJhc2ljU291cmNlTWFwQ29uc3VtZXIoc291cmNlTWFwLGFTb3VyY2VNYXBVUkwpfVNvdXJjZU1hcENvbnN1bWVyLmZyb21Tb3VyY2VNYXA9ZnVuY3Rpb24oYVNvdXJjZU1hcCxhU291cmNlTWFwVVJMKXtyZXR1cm4gQmFzaWNTb3VyY2VNYXBDb25zdW1lci5mcm9tU291cmNlTWFwKGFTb3VyY2VNYXAsYVNvdXJjZU1hcFVSTCl9O1NvdXJjZU1hcENvbnN1bWVyLnByb3RvdHlwZS5fdmVyc2lvbj0zO1NvdXJjZU1hcENvbnN1bWVyLnByb3RvdHlwZS5fX2dlbmVyYXRlZE1hcHBpbmdzPW51bGw7T2JqZWN0LmRlZmluZVByb3BlcnR5KFNvdXJjZU1hcENvbnN1bWVyLnByb3RvdHlwZSxcIl9nZW5lcmF0ZWRNYXBwaW5nc1wiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fX2dlbmVyYXRlZE1hcHBpbmdzfHx0aGlzLl9wYXJzZU1hcHBpbmdzKHRoaXMuX21hcHBpbmdzLHRoaXMuc291cmNlUm9vdCksdGhpcy5fX2dlbmVyYXRlZE1hcHBpbmdzfX0pO1NvdXJjZU1hcENvbnN1bWVyLnByb3RvdHlwZS5fX29yaWdpbmFsTWFwcGluZ3M9bnVsbDtPYmplY3QuZGVmaW5lUHJvcGVydHkoU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLFwiX29yaWdpbmFsTWFwcGluZ3NcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX19vcmlnaW5hbE1hcHBpbmdzfHx0aGlzLl9wYXJzZU1hcHBpbmdzKHRoaXMuX21hcHBpbmdzLHRoaXMuc291cmNlUm9vdCksdGhpcy5fX29yaWdpbmFsTWFwcGluZ3N9fSk7U291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLl9jaGFySXNNYXBwaW5nU2VwYXJhdG9yPWZ1bmN0aW9uKGFTdHIsaW5kZXgpe3ZhciBjPWFTdHIuY2hhckF0KGluZGV4KTtyZXR1cm4gYz09PVwiO1wifHxjPT09XCIsXCJ9O1NvdXJjZU1hcENvbnN1bWVyLnByb3RvdHlwZS5fcGFyc2VNYXBwaW5ncz1mdW5jdGlvbihhU3RyLGFTb3VyY2VSb290KXt0aHJvdyBuZXcgRXJyb3IoXCJTdWJjbGFzc2VzIG11c3QgaW1wbGVtZW50IF9wYXJzZU1hcHBpbmdzXCIpfTtTb3VyY2VNYXBDb25zdW1lci5HRU5FUkFURURfT1JERVI9MTtTb3VyY2VNYXBDb25zdW1lci5PUklHSU5BTF9PUkRFUj0yO1NvdXJjZU1hcENvbnN1bWVyLkdSRUFURVNUX0xPV0VSX0JPVU5EPTE7U291cmNlTWFwQ29uc3VtZXIuTEVBU1RfVVBQRVJfQk9VTkQ9MjtTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUuZWFjaE1hcHBpbmc9ZnVuY3Rpb24oYUNhbGxiYWNrLGFDb250ZXh0LGFPcmRlcil7dmFyIGNvbnRleHQ9YUNvbnRleHR8fG51bGwsb3JkZXI9YU9yZGVyfHxTb3VyY2VNYXBDb25zdW1lci5HRU5FUkFURURfT1JERVIsbWFwcGluZ3M7c3dpdGNoKG9yZGVyKXtjYXNlIFNvdXJjZU1hcENvbnN1bWVyLkdFTkVSQVRFRF9PUkRFUjptYXBwaW5ncz10aGlzLl9nZW5lcmF0ZWRNYXBwaW5nczticmVhaztjYXNlIFNvdXJjZU1hcENvbnN1bWVyLk9SSUdJTkFMX09SREVSOm1hcHBpbmdzPXRoaXMuX29yaWdpbmFsTWFwcGluZ3M7YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIG9yZGVyIG9mIGl0ZXJhdGlvbi5cIil9dmFyIHNvdXJjZVJvb3Q9dGhpcy5zb3VyY2VSb290O21hcHBpbmdzLm1hcChmdW5jdGlvbihtYXBwaW5nKXt2YXIgc291cmNlPW1hcHBpbmcuc291cmNlPT09bnVsbD9udWxsOnRoaXMuX3NvdXJjZXMuYXQobWFwcGluZy5zb3VyY2UpO3JldHVybiBzb3VyY2U9dXRpbC5jb21wdXRlU291cmNlVVJMKHNvdXJjZVJvb3Qsc291cmNlLHRoaXMuX3NvdXJjZU1hcFVSTCkse3NvdXJjZSxnZW5lcmF0ZWRMaW5lOm1hcHBpbmcuZ2VuZXJhdGVkTGluZSxnZW5lcmF0ZWRDb2x1bW46bWFwcGluZy5nZW5lcmF0ZWRDb2x1bW4sb3JpZ2luYWxMaW5lOm1hcHBpbmcub3JpZ2luYWxMaW5lLG9yaWdpbmFsQ29sdW1uOm1hcHBpbmcub3JpZ2luYWxDb2x1bW4sbmFtZTptYXBwaW5nLm5hbWU9PT1udWxsP251bGw6dGhpcy5fbmFtZXMuYXQobWFwcGluZy5uYW1lKX19LHRoaXMpLmZvckVhY2goYUNhbGxiYWNrLGNvbnRleHQpO307U291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLmFsbEdlbmVyYXRlZFBvc2l0aW9uc0Zvcj1mdW5jdGlvbihhQXJncyl7dmFyIGxpbmU9dXRpbC5nZXRBcmcoYUFyZ3MsXCJsaW5lXCIpLG5lZWRsZT17c291cmNlOnV0aWwuZ2V0QXJnKGFBcmdzLFwic291cmNlXCIpLG9yaWdpbmFsTGluZTpsaW5lLG9yaWdpbmFsQ29sdW1uOnV0aWwuZ2V0QXJnKGFBcmdzLFwiY29sdW1uXCIsMCl9O2lmKG5lZWRsZS5zb3VyY2U9dGhpcy5fZmluZFNvdXJjZUluZGV4KG5lZWRsZS5zb3VyY2UpLG5lZWRsZS5zb3VyY2U8MClyZXR1cm4gW107dmFyIG1hcHBpbmdzPVtdLGluZGV4PXRoaXMuX2ZpbmRNYXBwaW5nKG5lZWRsZSx0aGlzLl9vcmlnaW5hbE1hcHBpbmdzLFwib3JpZ2luYWxMaW5lXCIsXCJvcmlnaW5hbENvbHVtblwiLHV0aWwuY29tcGFyZUJ5T3JpZ2luYWxQb3NpdGlvbnMsYmluYXJ5U2VhcmNoLkxFQVNUX1VQUEVSX0JPVU5EKTtpZihpbmRleD49MCl7dmFyIG1hcHBpbmc9dGhpcy5fb3JpZ2luYWxNYXBwaW5nc1tpbmRleF07aWYoYUFyZ3MuY29sdW1uPT09dm9pZCAwKWZvcih2YXIgb3JpZ2luYWxMaW5lPW1hcHBpbmcub3JpZ2luYWxMaW5lO21hcHBpbmcmJm1hcHBpbmcub3JpZ2luYWxMaW5lPT09b3JpZ2luYWxMaW5lOyltYXBwaW5ncy5wdXNoKHtsaW5lOnV0aWwuZ2V0QXJnKG1hcHBpbmcsXCJnZW5lcmF0ZWRMaW5lXCIsbnVsbCksY29sdW1uOnV0aWwuZ2V0QXJnKG1hcHBpbmcsXCJnZW5lcmF0ZWRDb2x1bW5cIixudWxsKSxsYXN0Q29sdW1uOnV0aWwuZ2V0QXJnKG1hcHBpbmcsXCJsYXN0R2VuZXJhdGVkQ29sdW1uXCIsbnVsbCl9KSxtYXBwaW5nPXRoaXMuX29yaWdpbmFsTWFwcGluZ3NbKytpbmRleF07ZWxzZSBmb3IodmFyIG9yaWdpbmFsQ29sdW1uPW1hcHBpbmcub3JpZ2luYWxDb2x1bW47bWFwcGluZyYmbWFwcGluZy5vcmlnaW5hbExpbmU9PT1saW5lJiZtYXBwaW5nLm9yaWdpbmFsQ29sdW1uPT1vcmlnaW5hbENvbHVtbjspbWFwcGluZ3MucHVzaCh7bGluZTp1dGlsLmdldEFyZyhtYXBwaW5nLFwiZ2VuZXJhdGVkTGluZVwiLG51bGwpLGNvbHVtbjp1dGlsLmdldEFyZyhtYXBwaW5nLFwiZ2VuZXJhdGVkQ29sdW1uXCIsbnVsbCksbGFzdENvbHVtbjp1dGlsLmdldEFyZyhtYXBwaW5nLFwibGFzdEdlbmVyYXRlZENvbHVtblwiLG51bGwpfSksbWFwcGluZz10aGlzLl9vcmlnaW5hbE1hcHBpbmdzWysraW5kZXhdO31yZXR1cm4gbWFwcGluZ3N9O2V4cG9ydHMuU291cmNlTWFwQ29uc3VtZXI9U291cmNlTWFwQ29uc3VtZXI7ZnVuY3Rpb24gQmFzaWNTb3VyY2VNYXBDb25zdW1lcihhU291cmNlTWFwLGFTb3VyY2VNYXBVUkwpe3ZhciBzb3VyY2VNYXA9YVNvdXJjZU1hcDt0eXBlb2YgYVNvdXJjZU1hcD09XCJzdHJpbmdcIiYmKHNvdXJjZU1hcD11dGlsLnBhcnNlU291cmNlTWFwSW5wdXQoYVNvdXJjZU1hcCkpO3ZhciB2ZXJzaW9uMj11dGlsLmdldEFyZyhzb3VyY2VNYXAsXCJ2ZXJzaW9uXCIpLHNvdXJjZXM9dXRpbC5nZXRBcmcoc291cmNlTWFwLFwic291cmNlc1wiKSxuYW1lcz11dGlsLmdldEFyZyhzb3VyY2VNYXAsXCJuYW1lc1wiLFtdKSxzb3VyY2VSb290PXV0aWwuZ2V0QXJnKHNvdXJjZU1hcCxcInNvdXJjZVJvb3RcIixudWxsKSxzb3VyY2VzQ29udGVudD11dGlsLmdldEFyZyhzb3VyY2VNYXAsXCJzb3VyY2VzQ29udGVudFwiLG51bGwpLG1hcHBpbmdzPXV0aWwuZ2V0QXJnKHNvdXJjZU1hcCxcIm1hcHBpbmdzXCIpLGZpbGU9dXRpbC5nZXRBcmcoc291cmNlTWFwLFwiZmlsZVwiLG51bGwpO2lmKHZlcnNpb24yIT10aGlzLl92ZXJzaW9uKXRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIHZlcnNpb246IFwiK3ZlcnNpb24yKTtzb3VyY2VSb290JiYoc291cmNlUm9vdD11dGlsLm5vcm1hbGl6ZShzb3VyY2VSb290KSksc291cmNlcz1zb3VyY2VzLm1hcChTdHJpbmcpLm1hcCh1dGlsLm5vcm1hbGl6ZSkubWFwKGZ1bmN0aW9uKHNvdXJjZSl7cmV0dXJuIHNvdXJjZVJvb3QmJnV0aWwuaXNBYnNvbHV0ZShzb3VyY2VSb290KSYmdXRpbC5pc0Fic29sdXRlKHNvdXJjZSk/dXRpbC5yZWxhdGl2ZShzb3VyY2VSb290LHNvdXJjZSk6c291cmNlfSksdGhpcy5fbmFtZXM9QXJyYXlTZXQuZnJvbUFycmF5KG5hbWVzLm1hcChTdHJpbmcpLCEwKSx0aGlzLl9zb3VyY2VzPUFycmF5U2V0LmZyb21BcnJheShzb3VyY2VzLCEwKSx0aGlzLl9hYnNvbHV0ZVNvdXJjZXM9dGhpcy5fc291cmNlcy50b0FycmF5KCkubWFwKGZ1bmN0aW9uKHMpe3JldHVybiB1dGlsLmNvbXB1dGVTb3VyY2VVUkwoc291cmNlUm9vdCxzLGFTb3VyY2VNYXBVUkwpfSksdGhpcy5zb3VyY2VSb290PXNvdXJjZVJvb3QsdGhpcy5zb3VyY2VzQ29udGVudD1zb3VyY2VzQ29udGVudCx0aGlzLl9tYXBwaW5ncz1tYXBwaW5ncyx0aGlzLl9zb3VyY2VNYXBVUkw9YVNvdXJjZU1hcFVSTCx0aGlzLmZpbGU9ZmlsZTt9QmFzaWNTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUpO0Jhc2ljU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLmNvbnN1bWVyPVNvdXJjZU1hcENvbnN1bWVyO0Jhc2ljU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLl9maW5kU291cmNlSW5kZXg9ZnVuY3Rpb24oYVNvdXJjZSl7dmFyIHJlbGF0aXZlU291cmNlPWFTb3VyY2U7aWYodGhpcy5zb3VyY2VSb290IT1udWxsJiYocmVsYXRpdmVTb3VyY2U9dXRpbC5yZWxhdGl2ZSh0aGlzLnNvdXJjZVJvb3QscmVsYXRpdmVTb3VyY2UpKSx0aGlzLl9zb3VyY2VzLmhhcyhyZWxhdGl2ZVNvdXJjZSkpcmV0dXJuIHRoaXMuX3NvdXJjZXMuaW5kZXhPZihyZWxhdGl2ZVNvdXJjZSk7dmFyIGk7Zm9yKGk9MDtpPHRoaXMuX2Fic29sdXRlU291cmNlcy5sZW5ndGg7KytpKWlmKHRoaXMuX2Fic29sdXRlU291cmNlc1tpXT09YVNvdXJjZSlyZXR1cm4gaTtyZXR1cm4gLTF9O0Jhc2ljU291cmNlTWFwQ29uc3VtZXIuZnJvbVNvdXJjZU1hcD1mdW5jdGlvbihhU291cmNlTWFwLGFTb3VyY2VNYXBVUkwpe3ZhciBzbWM9T2JqZWN0LmNyZWF0ZShCYXNpY1NvdXJjZU1hcENvbnN1bWVyLnByb3RvdHlwZSksbmFtZXM9c21jLl9uYW1lcz1BcnJheVNldC5mcm9tQXJyYXkoYVNvdXJjZU1hcC5fbmFtZXMudG9BcnJheSgpLCEwKSxzb3VyY2VzPXNtYy5fc291cmNlcz1BcnJheVNldC5mcm9tQXJyYXkoYVNvdXJjZU1hcC5fc291cmNlcy50b0FycmF5KCksITApO3NtYy5zb3VyY2VSb290PWFTb3VyY2VNYXAuX3NvdXJjZVJvb3Qsc21jLnNvdXJjZXNDb250ZW50PWFTb3VyY2VNYXAuX2dlbmVyYXRlU291cmNlc0NvbnRlbnQoc21jLl9zb3VyY2VzLnRvQXJyYXkoKSxzbWMuc291cmNlUm9vdCksc21jLmZpbGU9YVNvdXJjZU1hcC5fZmlsZSxzbWMuX3NvdXJjZU1hcFVSTD1hU291cmNlTWFwVVJMLHNtYy5fYWJzb2x1dGVTb3VyY2VzPXNtYy5fc291cmNlcy50b0FycmF5KCkubWFwKGZ1bmN0aW9uKHMpe3JldHVybiB1dGlsLmNvbXB1dGVTb3VyY2VVUkwoc21jLnNvdXJjZVJvb3QscyxhU291cmNlTWFwVVJMKX0pO2Zvcih2YXIgZ2VuZXJhdGVkTWFwcGluZ3M9YVNvdXJjZU1hcC5fbWFwcGluZ3MudG9BcnJheSgpLnNsaWNlKCksZGVzdEdlbmVyYXRlZE1hcHBpbmdzPXNtYy5fX2dlbmVyYXRlZE1hcHBpbmdzPVtdLGRlc3RPcmlnaW5hbE1hcHBpbmdzPXNtYy5fX29yaWdpbmFsTWFwcGluZ3M9W10saT0wLGxlbmd0aD1nZW5lcmF0ZWRNYXBwaW5ncy5sZW5ndGg7aTxsZW5ndGg7aSsrKXt2YXIgc3JjTWFwcGluZz1nZW5lcmF0ZWRNYXBwaW5nc1tpXSxkZXN0TWFwcGluZz1uZXcgTWFwcGluZztkZXN0TWFwcGluZy5nZW5lcmF0ZWRMaW5lPXNyY01hcHBpbmcuZ2VuZXJhdGVkTGluZSxkZXN0TWFwcGluZy5nZW5lcmF0ZWRDb2x1bW49c3JjTWFwcGluZy5nZW5lcmF0ZWRDb2x1bW4sc3JjTWFwcGluZy5zb3VyY2UmJihkZXN0TWFwcGluZy5zb3VyY2U9c291cmNlcy5pbmRleE9mKHNyY01hcHBpbmcuc291cmNlKSxkZXN0TWFwcGluZy5vcmlnaW5hbExpbmU9c3JjTWFwcGluZy5vcmlnaW5hbExpbmUsZGVzdE1hcHBpbmcub3JpZ2luYWxDb2x1bW49c3JjTWFwcGluZy5vcmlnaW5hbENvbHVtbixzcmNNYXBwaW5nLm5hbWUmJihkZXN0TWFwcGluZy5uYW1lPW5hbWVzLmluZGV4T2Yoc3JjTWFwcGluZy5uYW1lKSksZGVzdE9yaWdpbmFsTWFwcGluZ3MucHVzaChkZXN0TWFwcGluZykpLGRlc3RHZW5lcmF0ZWRNYXBwaW5ncy5wdXNoKGRlc3RNYXBwaW5nKTt9cmV0dXJuIHF1aWNrU29ydChzbWMuX19vcmlnaW5hbE1hcHBpbmdzLHV0aWwuY29tcGFyZUJ5T3JpZ2luYWxQb3NpdGlvbnMpLHNtY307QmFzaWNTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUuX3ZlcnNpb249MztPYmplY3QuZGVmaW5lUHJvcGVydHkoQmFzaWNTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUsXCJzb3VyY2VzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9hYnNvbHV0ZVNvdXJjZXMuc2xpY2UoKX19KTtmdW5jdGlvbiBNYXBwaW5nKCl7dGhpcy5nZW5lcmF0ZWRMaW5lPTAsdGhpcy5nZW5lcmF0ZWRDb2x1bW49MCx0aGlzLnNvdXJjZT1udWxsLHRoaXMub3JpZ2luYWxMaW5lPW51bGwsdGhpcy5vcmlnaW5hbENvbHVtbj1udWxsLHRoaXMubmFtZT1udWxsO31CYXNpY1NvdXJjZU1hcENvbnN1bWVyLnByb3RvdHlwZS5fcGFyc2VNYXBwaW5ncz1mdW5jdGlvbihhU3RyLGFTb3VyY2VSb290KXtmb3IodmFyIGdlbmVyYXRlZExpbmU9MSxwcmV2aW91c0dlbmVyYXRlZENvbHVtbj0wLHByZXZpb3VzT3JpZ2luYWxMaW5lPTAscHJldmlvdXNPcmlnaW5hbENvbHVtbj0wLHByZXZpb3VzU291cmNlPTAscHJldmlvdXNOYW1lPTAsbGVuZ3RoPWFTdHIubGVuZ3RoLGluZGV4PTAsY2FjaGVkU2VnbWVudHM9e30sdGVtcD17fSxvcmlnaW5hbE1hcHBpbmdzPVtdLGdlbmVyYXRlZE1hcHBpbmdzPVtdLG1hcHBpbmcsc3RyLHNlZ21lbnQsZW5kLHZhbHVlO2luZGV4PGxlbmd0aDspaWYoYVN0ci5jaGFyQXQoaW5kZXgpPT09XCI7XCIpZ2VuZXJhdGVkTGluZSsrLGluZGV4KysscHJldmlvdXNHZW5lcmF0ZWRDb2x1bW49MDtlbHNlIGlmKGFTdHIuY2hhckF0KGluZGV4KT09PVwiLFwiKWluZGV4Kys7ZWxzZSB7Zm9yKG1hcHBpbmc9bmV3IE1hcHBpbmcsbWFwcGluZy5nZW5lcmF0ZWRMaW5lPWdlbmVyYXRlZExpbmUsZW5kPWluZGV4O2VuZDxsZW5ndGgmJiF0aGlzLl9jaGFySXNNYXBwaW5nU2VwYXJhdG9yKGFTdHIsZW5kKTtlbmQrKyk7aWYoc3RyPWFTdHIuc2xpY2UoaW5kZXgsZW5kKSxzZWdtZW50PWNhY2hlZFNlZ21lbnRzW3N0cl0sc2VnbWVudClpbmRleCs9c3RyLmxlbmd0aDtlbHNlIHtmb3Ioc2VnbWVudD1bXTtpbmRleDxlbmQ7KWJhc2U2NFZMUS5kZWNvZGUoYVN0cixpbmRleCx0ZW1wKSx2YWx1ZT10ZW1wLnZhbHVlLGluZGV4PXRlbXAucmVzdCxzZWdtZW50LnB1c2godmFsdWUpO2lmKHNlZ21lbnQubGVuZ3RoPT09Mil0aHJvdyBuZXcgRXJyb3IoXCJGb3VuZCBhIHNvdXJjZSwgYnV0IG5vIGxpbmUgYW5kIGNvbHVtblwiKTtpZihzZWdtZW50Lmxlbmd0aD09PTMpdGhyb3cgbmV3IEVycm9yKFwiRm91bmQgYSBzb3VyY2UgYW5kIGxpbmUsIGJ1dCBubyBjb2x1bW5cIik7Y2FjaGVkU2VnbWVudHNbc3RyXT1zZWdtZW50O31tYXBwaW5nLmdlbmVyYXRlZENvbHVtbj1wcmV2aW91c0dlbmVyYXRlZENvbHVtbitzZWdtZW50WzBdLHByZXZpb3VzR2VuZXJhdGVkQ29sdW1uPW1hcHBpbmcuZ2VuZXJhdGVkQ29sdW1uLHNlZ21lbnQubGVuZ3RoPjEmJihtYXBwaW5nLnNvdXJjZT1wcmV2aW91c1NvdXJjZStzZWdtZW50WzFdLHByZXZpb3VzU291cmNlKz1zZWdtZW50WzFdLG1hcHBpbmcub3JpZ2luYWxMaW5lPXByZXZpb3VzT3JpZ2luYWxMaW5lK3NlZ21lbnRbMl0scHJldmlvdXNPcmlnaW5hbExpbmU9bWFwcGluZy5vcmlnaW5hbExpbmUsbWFwcGluZy5vcmlnaW5hbExpbmUrPTEsbWFwcGluZy5vcmlnaW5hbENvbHVtbj1wcmV2aW91c09yaWdpbmFsQ29sdW1uK3NlZ21lbnRbM10scHJldmlvdXNPcmlnaW5hbENvbHVtbj1tYXBwaW5nLm9yaWdpbmFsQ29sdW1uLHNlZ21lbnQubGVuZ3RoPjQmJihtYXBwaW5nLm5hbWU9cHJldmlvdXNOYW1lK3NlZ21lbnRbNF0scHJldmlvdXNOYW1lKz1zZWdtZW50WzRdKSksZ2VuZXJhdGVkTWFwcGluZ3MucHVzaChtYXBwaW5nKSx0eXBlb2YgbWFwcGluZy5vcmlnaW5hbExpbmU9PVwibnVtYmVyXCImJm9yaWdpbmFsTWFwcGluZ3MucHVzaChtYXBwaW5nKTt9cXVpY2tTb3J0KGdlbmVyYXRlZE1hcHBpbmdzLHV0aWwuY29tcGFyZUJ5R2VuZXJhdGVkUG9zaXRpb25zRGVmbGF0ZWQpLHRoaXMuX19nZW5lcmF0ZWRNYXBwaW5ncz1nZW5lcmF0ZWRNYXBwaW5ncyxxdWlja1NvcnQob3JpZ2luYWxNYXBwaW5ncyx1dGlsLmNvbXBhcmVCeU9yaWdpbmFsUG9zaXRpb25zKSx0aGlzLl9fb3JpZ2luYWxNYXBwaW5ncz1vcmlnaW5hbE1hcHBpbmdzO307QmFzaWNTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUuX2ZpbmRNYXBwaW5nPWZ1bmN0aW9uKGFOZWVkbGUsYU1hcHBpbmdzLGFMaW5lTmFtZSxhQ29sdW1uTmFtZSxhQ29tcGFyYXRvcixhQmlhcyl7aWYoYU5lZWRsZVthTGluZU5hbWVdPD0wKXRocm93IG5ldyBUeXBlRXJyb3IoXCJMaW5lIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDEsIGdvdCBcIithTmVlZGxlW2FMaW5lTmFtZV0pO2lmKGFOZWVkbGVbYUNvbHVtbk5hbWVdPDApdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNvbHVtbiBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAwLCBnb3QgXCIrYU5lZWRsZVthQ29sdW1uTmFtZV0pO3JldHVybiBiaW5hcnlTZWFyY2guc2VhcmNoKGFOZWVkbGUsYU1hcHBpbmdzLGFDb21wYXJhdG9yLGFCaWFzKX07QmFzaWNTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUuY29tcHV0ZUNvbHVtblNwYW5zPWZ1bmN0aW9uKCl7Zm9yKHZhciBpbmRleD0wO2luZGV4PHRoaXMuX2dlbmVyYXRlZE1hcHBpbmdzLmxlbmd0aDsrK2luZGV4KXt2YXIgbWFwcGluZz10aGlzLl9nZW5lcmF0ZWRNYXBwaW5nc1tpbmRleF07aWYoaW5kZXgrMTx0aGlzLl9nZW5lcmF0ZWRNYXBwaW5ncy5sZW5ndGgpe3ZhciBuZXh0TWFwcGluZz10aGlzLl9nZW5lcmF0ZWRNYXBwaW5nc1tpbmRleCsxXTtpZihtYXBwaW5nLmdlbmVyYXRlZExpbmU9PT1uZXh0TWFwcGluZy5nZW5lcmF0ZWRMaW5lKXttYXBwaW5nLmxhc3RHZW5lcmF0ZWRDb2x1bW49bmV4dE1hcHBpbmcuZ2VuZXJhdGVkQ29sdW1uLTE7Y29udGludWV9fW1hcHBpbmcubGFzdEdlbmVyYXRlZENvbHVtbj0xLzA7fX07QmFzaWNTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUub3JpZ2luYWxQb3NpdGlvbkZvcj1mdW5jdGlvbihhQXJncyl7dmFyIG5lZWRsZT17Z2VuZXJhdGVkTGluZTp1dGlsLmdldEFyZyhhQXJncyxcImxpbmVcIiksZ2VuZXJhdGVkQ29sdW1uOnV0aWwuZ2V0QXJnKGFBcmdzLFwiY29sdW1uXCIpfSxpbmRleD10aGlzLl9maW5kTWFwcGluZyhuZWVkbGUsdGhpcy5fZ2VuZXJhdGVkTWFwcGluZ3MsXCJnZW5lcmF0ZWRMaW5lXCIsXCJnZW5lcmF0ZWRDb2x1bW5cIix1dGlsLmNvbXBhcmVCeUdlbmVyYXRlZFBvc2l0aW9uc0RlZmxhdGVkLHV0aWwuZ2V0QXJnKGFBcmdzLFwiYmlhc1wiLFNvdXJjZU1hcENvbnN1bWVyLkdSRUFURVNUX0xPV0VSX0JPVU5EKSk7aWYoaW5kZXg+PTApe3ZhciBtYXBwaW5nPXRoaXMuX2dlbmVyYXRlZE1hcHBpbmdzW2luZGV4XTtpZihtYXBwaW5nLmdlbmVyYXRlZExpbmU9PT1uZWVkbGUuZ2VuZXJhdGVkTGluZSl7dmFyIHNvdXJjZT11dGlsLmdldEFyZyhtYXBwaW5nLFwic291cmNlXCIsbnVsbCk7c291cmNlIT09bnVsbCYmKHNvdXJjZT10aGlzLl9zb3VyY2VzLmF0KHNvdXJjZSksc291cmNlPXV0aWwuY29tcHV0ZVNvdXJjZVVSTCh0aGlzLnNvdXJjZVJvb3Qsc291cmNlLHRoaXMuX3NvdXJjZU1hcFVSTCkpO3ZhciBuYW1lPXV0aWwuZ2V0QXJnKG1hcHBpbmcsXCJuYW1lXCIsbnVsbCk7cmV0dXJuIG5hbWUhPT1udWxsJiYobmFtZT10aGlzLl9uYW1lcy5hdChuYW1lKSkse3NvdXJjZSxsaW5lOnV0aWwuZ2V0QXJnKG1hcHBpbmcsXCJvcmlnaW5hbExpbmVcIixudWxsKSxjb2x1bW46dXRpbC5nZXRBcmcobWFwcGluZyxcIm9yaWdpbmFsQ29sdW1uXCIsbnVsbCksbmFtZX19fXJldHVybiB7c291cmNlOm51bGwsbGluZTpudWxsLGNvbHVtbjpudWxsLG5hbWU6bnVsbH19O0Jhc2ljU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLmhhc0NvbnRlbnRzT2ZBbGxTb3VyY2VzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc291cmNlc0NvbnRlbnQ/dGhpcy5zb3VyY2VzQ29udGVudC5sZW5ndGg+PXRoaXMuX3NvdXJjZXMuc2l6ZSgpJiYhdGhpcy5zb3VyY2VzQ29udGVudC5zb21lKGZ1bmN0aW9uKHNjKXtyZXR1cm4gc2M9PW51bGx9KTohMX07QmFzaWNTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUuc291cmNlQ29udGVudEZvcj1mdW5jdGlvbihhU291cmNlLG51bGxPbk1pc3Npbmcpe2lmKCF0aGlzLnNvdXJjZXNDb250ZW50KXJldHVybiBudWxsO3ZhciBpbmRleD10aGlzLl9maW5kU291cmNlSW5kZXgoYVNvdXJjZSk7aWYoaW5kZXg+PTApcmV0dXJuIHRoaXMuc291cmNlc0NvbnRlbnRbaW5kZXhdO3ZhciByZWxhdGl2ZVNvdXJjZT1hU291cmNlO3RoaXMuc291cmNlUm9vdCE9bnVsbCYmKHJlbGF0aXZlU291cmNlPXV0aWwucmVsYXRpdmUodGhpcy5zb3VyY2VSb290LHJlbGF0aXZlU291cmNlKSk7dmFyIHVybDtpZih0aGlzLnNvdXJjZVJvb3QhPW51bGwmJih1cmw9dXRpbC51cmxQYXJzZSh0aGlzLnNvdXJjZVJvb3QpKSl7dmFyIGZpbGVVcmlBYnNQYXRoPXJlbGF0aXZlU291cmNlLnJlcGxhY2UoL15maWxlOlxcL1xcLy8sXCJcIik7aWYodXJsLnNjaGVtZT09XCJmaWxlXCImJnRoaXMuX3NvdXJjZXMuaGFzKGZpbGVVcmlBYnNQYXRoKSlyZXR1cm4gdGhpcy5zb3VyY2VzQ29udGVudFt0aGlzLl9zb3VyY2VzLmluZGV4T2YoZmlsZVVyaUFic1BhdGgpXTtpZigoIXVybC5wYXRofHx1cmwucGF0aD09XCIvXCIpJiZ0aGlzLl9zb3VyY2VzLmhhcyhcIi9cIityZWxhdGl2ZVNvdXJjZSkpcmV0dXJuIHRoaXMuc291cmNlc0NvbnRlbnRbdGhpcy5fc291cmNlcy5pbmRleE9mKFwiL1wiK3JlbGF0aXZlU291cmNlKV19aWYobnVsbE9uTWlzc2luZylyZXR1cm4gbnVsbDt0aHJvdyBuZXcgRXJyb3IoJ1wiJytyZWxhdGl2ZVNvdXJjZSsnXCIgaXMgbm90IGluIHRoZSBTb3VyY2VNYXAuJyl9O0Jhc2ljU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLmdlbmVyYXRlZFBvc2l0aW9uRm9yPWZ1bmN0aW9uKGFBcmdzKXt2YXIgc291cmNlPXV0aWwuZ2V0QXJnKGFBcmdzLFwic291cmNlXCIpO2lmKHNvdXJjZT10aGlzLl9maW5kU291cmNlSW5kZXgoc291cmNlKSxzb3VyY2U8MClyZXR1cm4ge2xpbmU6bnVsbCxjb2x1bW46bnVsbCxsYXN0Q29sdW1uOm51bGx9O3ZhciBuZWVkbGU9e3NvdXJjZSxvcmlnaW5hbExpbmU6dXRpbC5nZXRBcmcoYUFyZ3MsXCJsaW5lXCIpLG9yaWdpbmFsQ29sdW1uOnV0aWwuZ2V0QXJnKGFBcmdzLFwiY29sdW1uXCIpfSxpbmRleD10aGlzLl9maW5kTWFwcGluZyhuZWVkbGUsdGhpcy5fb3JpZ2luYWxNYXBwaW5ncyxcIm9yaWdpbmFsTGluZVwiLFwib3JpZ2luYWxDb2x1bW5cIix1dGlsLmNvbXBhcmVCeU9yaWdpbmFsUG9zaXRpb25zLHV0aWwuZ2V0QXJnKGFBcmdzLFwiYmlhc1wiLFNvdXJjZU1hcENvbnN1bWVyLkdSRUFURVNUX0xPV0VSX0JPVU5EKSk7aWYoaW5kZXg+PTApe3ZhciBtYXBwaW5nPXRoaXMuX29yaWdpbmFsTWFwcGluZ3NbaW5kZXhdO2lmKG1hcHBpbmcuc291cmNlPT09bmVlZGxlLnNvdXJjZSlyZXR1cm4ge2xpbmU6dXRpbC5nZXRBcmcobWFwcGluZyxcImdlbmVyYXRlZExpbmVcIixudWxsKSxjb2x1bW46dXRpbC5nZXRBcmcobWFwcGluZyxcImdlbmVyYXRlZENvbHVtblwiLG51bGwpLGxhc3RDb2x1bW46dXRpbC5nZXRBcmcobWFwcGluZyxcImxhc3RHZW5lcmF0ZWRDb2x1bW5cIixudWxsKX19cmV0dXJuIHtsaW5lOm51bGwsY29sdW1uOm51bGwsbGFzdENvbHVtbjpudWxsfX07ZXhwb3J0cy5CYXNpY1NvdXJjZU1hcENvbnN1bWVyPUJhc2ljU291cmNlTWFwQ29uc3VtZXI7ZnVuY3Rpb24gSW5kZXhlZFNvdXJjZU1hcENvbnN1bWVyKGFTb3VyY2VNYXAsYVNvdXJjZU1hcFVSTCl7dmFyIHNvdXJjZU1hcD1hU291cmNlTWFwO3R5cGVvZiBhU291cmNlTWFwPT1cInN0cmluZ1wiJiYoc291cmNlTWFwPXV0aWwucGFyc2VTb3VyY2VNYXBJbnB1dChhU291cmNlTWFwKSk7dmFyIHZlcnNpb24yPXV0aWwuZ2V0QXJnKHNvdXJjZU1hcCxcInZlcnNpb25cIiksc2VjdGlvbnM9dXRpbC5nZXRBcmcoc291cmNlTWFwLFwic2VjdGlvbnNcIik7aWYodmVyc2lvbjIhPXRoaXMuX3ZlcnNpb24pdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgdmVyc2lvbjogXCIrdmVyc2lvbjIpO3RoaXMuX3NvdXJjZXM9bmV3IEFycmF5U2V0LHRoaXMuX25hbWVzPW5ldyBBcnJheVNldDt2YXIgbGFzdE9mZnNldD17bGluZTotMSxjb2x1bW46MH07dGhpcy5fc2VjdGlvbnM9c2VjdGlvbnMubWFwKGZ1bmN0aW9uKHMpe2lmKHMudXJsKXRocm93IG5ldyBFcnJvcihcIlN1cHBvcnQgZm9yIHVybCBmaWVsZCBpbiBzZWN0aW9ucyBub3QgaW1wbGVtZW50ZWQuXCIpO3ZhciBvZmZzZXQyPXV0aWwuZ2V0QXJnKHMsXCJvZmZzZXRcIiksb2Zmc2V0TGluZT11dGlsLmdldEFyZyhvZmZzZXQyLFwibGluZVwiKSxvZmZzZXRDb2x1bW49dXRpbC5nZXRBcmcob2Zmc2V0MixcImNvbHVtblwiKTtpZihvZmZzZXRMaW5lPGxhc3RPZmZzZXQubGluZXx8b2Zmc2V0TGluZT09PWxhc3RPZmZzZXQubGluZSYmb2Zmc2V0Q29sdW1uPGxhc3RPZmZzZXQuY29sdW1uKXRocm93IG5ldyBFcnJvcihcIlNlY3Rpb24gb2Zmc2V0cyBtdXN0IGJlIG9yZGVyZWQgYW5kIG5vbi1vdmVybGFwcGluZy5cIik7cmV0dXJuIGxhc3RPZmZzZXQ9b2Zmc2V0Mix7Z2VuZXJhdGVkT2Zmc2V0OntnZW5lcmF0ZWRMaW5lOm9mZnNldExpbmUrMSxnZW5lcmF0ZWRDb2x1bW46b2Zmc2V0Q29sdW1uKzF9LGNvbnN1bWVyOm5ldyBTb3VyY2VNYXBDb25zdW1lcih1dGlsLmdldEFyZyhzLFwibWFwXCIpLGFTb3VyY2VNYXBVUkwpfX0pO31JbmRleGVkU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlKTtJbmRleGVkU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yPVNvdXJjZU1hcENvbnN1bWVyO0luZGV4ZWRTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUuX3ZlcnNpb249MztPYmplY3QuZGVmaW5lUHJvcGVydHkoSW5kZXhlZFNvdXJjZU1hcENvbnN1bWVyLnByb3RvdHlwZSxcInNvdXJjZXNcIix7Z2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciBzb3VyY2VzPVtdLGk9MDtpPHRoaXMuX3NlY3Rpb25zLmxlbmd0aDtpKyspZm9yKHZhciBqPTA7ajx0aGlzLl9zZWN0aW9uc1tpXS5jb25zdW1lci5zb3VyY2VzLmxlbmd0aDtqKyspc291cmNlcy5wdXNoKHRoaXMuX3NlY3Rpb25zW2ldLmNvbnN1bWVyLnNvdXJjZXNbal0pO3JldHVybiBzb3VyY2VzfX0pO0luZGV4ZWRTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUub3JpZ2luYWxQb3NpdGlvbkZvcj1mdW5jdGlvbihhQXJncyl7dmFyIG5lZWRsZT17Z2VuZXJhdGVkTGluZTp1dGlsLmdldEFyZyhhQXJncyxcImxpbmVcIiksZ2VuZXJhdGVkQ29sdW1uOnV0aWwuZ2V0QXJnKGFBcmdzLFwiY29sdW1uXCIpfSxzZWN0aW9uSW5kZXg9YmluYXJ5U2VhcmNoLnNlYXJjaChuZWVkbGUsdGhpcy5fc2VjdGlvbnMsZnVuY3Rpb24obmVlZGxlMixzZWN0aW9uMil7dmFyIGNtcD1uZWVkbGUyLmdlbmVyYXRlZExpbmUtc2VjdGlvbjIuZ2VuZXJhdGVkT2Zmc2V0LmdlbmVyYXRlZExpbmU7cmV0dXJuIGNtcHx8bmVlZGxlMi5nZW5lcmF0ZWRDb2x1bW4tc2VjdGlvbjIuZ2VuZXJhdGVkT2Zmc2V0LmdlbmVyYXRlZENvbHVtbn0pLHNlY3Rpb249dGhpcy5fc2VjdGlvbnNbc2VjdGlvbkluZGV4XTtyZXR1cm4gc2VjdGlvbj9zZWN0aW9uLmNvbnN1bWVyLm9yaWdpbmFsUG9zaXRpb25Gb3Ioe2xpbmU6bmVlZGxlLmdlbmVyYXRlZExpbmUtKHNlY3Rpb24uZ2VuZXJhdGVkT2Zmc2V0LmdlbmVyYXRlZExpbmUtMSksY29sdW1uOm5lZWRsZS5nZW5lcmF0ZWRDb2x1bW4tKHNlY3Rpb24uZ2VuZXJhdGVkT2Zmc2V0LmdlbmVyYXRlZExpbmU9PT1uZWVkbGUuZ2VuZXJhdGVkTGluZT9zZWN0aW9uLmdlbmVyYXRlZE9mZnNldC5nZW5lcmF0ZWRDb2x1bW4tMTowKSxiaWFzOmFBcmdzLmJpYXN9KTp7c291cmNlOm51bGwsbGluZTpudWxsLGNvbHVtbjpudWxsLG5hbWU6bnVsbH19O0luZGV4ZWRTb3VyY2VNYXBDb25zdW1lci5wcm90b3R5cGUuaGFzQ29udGVudHNPZkFsbFNvdXJjZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2VjdGlvbnMuZXZlcnkoZnVuY3Rpb24ocyl7cmV0dXJuIHMuY29uc3VtZXIuaGFzQ29udGVudHNPZkFsbFNvdXJjZXMoKX0pfTtJbmRleGVkU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLnNvdXJjZUNvbnRlbnRGb3I9ZnVuY3Rpb24oYVNvdXJjZSxudWxsT25NaXNzaW5nKXtmb3IodmFyIGk9MDtpPHRoaXMuX3NlY3Rpb25zLmxlbmd0aDtpKyspe3ZhciBzZWN0aW9uPXRoaXMuX3NlY3Rpb25zW2ldLGNvbnRlbnQ9c2VjdGlvbi5jb25zdW1lci5zb3VyY2VDb250ZW50Rm9yKGFTb3VyY2UsITApO2lmKGNvbnRlbnQpcmV0dXJuIGNvbnRlbnR9aWYobnVsbE9uTWlzc2luZylyZXR1cm4gbnVsbDt0aHJvdyBuZXcgRXJyb3IoJ1wiJythU291cmNlKydcIiBpcyBub3QgaW4gdGhlIFNvdXJjZU1hcC4nKX07SW5kZXhlZFNvdXJjZU1hcENvbnN1bWVyLnByb3RvdHlwZS5nZW5lcmF0ZWRQb3NpdGlvbkZvcj1mdW5jdGlvbihhQXJncyl7Zm9yKHZhciBpPTA7aTx0aGlzLl9zZWN0aW9ucy5sZW5ndGg7aSsrKXt2YXIgc2VjdGlvbj10aGlzLl9zZWN0aW9uc1tpXTtpZihzZWN0aW9uLmNvbnN1bWVyLl9maW5kU291cmNlSW5kZXgodXRpbC5nZXRBcmcoYUFyZ3MsXCJzb3VyY2VcIikpIT09LTEpe3ZhciBnZW5lcmF0ZWRQb3NpdGlvbj1zZWN0aW9uLmNvbnN1bWVyLmdlbmVyYXRlZFBvc2l0aW9uRm9yKGFBcmdzKTtpZihnZW5lcmF0ZWRQb3NpdGlvbil7dmFyIHJldD17bGluZTpnZW5lcmF0ZWRQb3NpdGlvbi5saW5lKyhzZWN0aW9uLmdlbmVyYXRlZE9mZnNldC5nZW5lcmF0ZWRMaW5lLTEpLGNvbHVtbjpnZW5lcmF0ZWRQb3NpdGlvbi5jb2x1bW4rKHNlY3Rpb24uZ2VuZXJhdGVkT2Zmc2V0LmdlbmVyYXRlZExpbmU9PT1nZW5lcmF0ZWRQb3NpdGlvbi5saW5lP3NlY3Rpb24uZ2VuZXJhdGVkT2Zmc2V0LmdlbmVyYXRlZENvbHVtbi0xOjApfTtyZXR1cm4gcmV0fX19cmV0dXJuIHtsaW5lOm51bGwsY29sdW1uOm51bGx9fTtJbmRleGVkU291cmNlTWFwQ29uc3VtZXIucHJvdG90eXBlLl9wYXJzZU1hcHBpbmdzPWZ1bmN0aW9uKGFTdHIsYVNvdXJjZVJvb3Qpe3RoaXMuX19nZW5lcmF0ZWRNYXBwaW5ncz1bXSx0aGlzLl9fb3JpZ2luYWxNYXBwaW5ncz1bXTtmb3IodmFyIGk9MDtpPHRoaXMuX3NlY3Rpb25zLmxlbmd0aDtpKyspZm9yKHZhciBzZWN0aW9uPXRoaXMuX3NlY3Rpb25zW2ldLHNlY3Rpb25NYXBwaW5ncz1zZWN0aW9uLmNvbnN1bWVyLl9nZW5lcmF0ZWRNYXBwaW5ncyxqPTA7ajxzZWN0aW9uTWFwcGluZ3MubGVuZ3RoO2orKyl7dmFyIG1hcHBpbmc9c2VjdGlvbk1hcHBpbmdzW2pdLHNvdXJjZT1zZWN0aW9uLmNvbnN1bWVyLl9zb3VyY2VzLmF0KG1hcHBpbmcuc291cmNlKTtzb3VyY2U9dXRpbC5jb21wdXRlU291cmNlVVJMKHNlY3Rpb24uY29uc3VtZXIuc291cmNlUm9vdCxzb3VyY2UsdGhpcy5fc291cmNlTWFwVVJMKSx0aGlzLl9zb3VyY2VzLmFkZChzb3VyY2UpLHNvdXJjZT10aGlzLl9zb3VyY2VzLmluZGV4T2Yoc291cmNlKTt2YXIgbmFtZT1udWxsO21hcHBpbmcubmFtZSYmKG5hbWU9c2VjdGlvbi5jb25zdW1lci5fbmFtZXMuYXQobWFwcGluZy5uYW1lKSx0aGlzLl9uYW1lcy5hZGQobmFtZSksbmFtZT10aGlzLl9uYW1lcy5pbmRleE9mKG5hbWUpKTt2YXIgYWRqdXN0ZWRNYXBwaW5nPXtzb3VyY2UsZ2VuZXJhdGVkTGluZTptYXBwaW5nLmdlbmVyYXRlZExpbmUrKHNlY3Rpb24uZ2VuZXJhdGVkT2Zmc2V0LmdlbmVyYXRlZExpbmUtMSksZ2VuZXJhdGVkQ29sdW1uOm1hcHBpbmcuZ2VuZXJhdGVkQ29sdW1uKyhzZWN0aW9uLmdlbmVyYXRlZE9mZnNldC5nZW5lcmF0ZWRMaW5lPT09bWFwcGluZy5nZW5lcmF0ZWRMaW5lP3NlY3Rpb24uZ2VuZXJhdGVkT2Zmc2V0LmdlbmVyYXRlZENvbHVtbi0xOjApLG9yaWdpbmFsTGluZTptYXBwaW5nLm9yaWdpbmFsTGluZSxvcmlnaW5hbENvbHVtbjptYXBwaW5nLm9yaWdpbmFsQ29sdW1uLG5hbWV9O3RoaXMuX19nZW5lcmF0ZWRNYXBwaW5ncy5wdXNoKGFkanVzdGVkTWFwcGluZyksdHlwZW9mIGFkanVzdGVkTWFwcGluZy5vcmlnaW5hbExpbmU9PVwibnVtYmVyXCImJnRoaXMuX19vcmlnaW5hbE1hcHBpbmdzLnB1c2goYWRqdXN0ZWRNYXBwaW5nKTt9cXVpY2tTb3J0KHRoaXMuX19nZW5lcmF0ZWRNYXBwaW5ncyx1dGlsLmNvbXBhcmVCeUdlbmVyYXRlZFBvc2l0aW9uc0RlZmxhdGVkKSxxdWlja1NvcnQodGhpcy5fX29yaWdpbmFsTWFwcGluZ3MsdXRpbC5jb21wYXJlQnlPcmlnaW5hbFBvc2l0aW9ucyk7fTtleHBvcnRzLkluZGV4ZWRTb3VyY2VNYXBDb25zdW1lcj1JbmRleGVkU291cmNlTWFwQ29uc3VtZXI7fX0pO3ZhciByZXF1aXJlX3NvdXJjZV9ub2RlPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2VzY29kZWdlbi9ub2RlX21vZHVsZXMvc291cmNlLW1hcC9saWIvc291cmNlLW5vZGUuanNcIihleHBvcnRzKXt2YXIgU291cmNlTWFwR2VuZXJhdG9yPXJlcXVpcmVfc291cmNlX21hcF9nZW5lcmF0b3IoKS5Tb3VyY2VNYXBHZW5lcmF0b3IsdXRpbD1yZXF1aXJlX3V0aWwoKSxSRUdFWF9ORVdMSU5FPS8oXFxyP1xcbikvLE5FV0xJTkVfQ09ERT0xMCxpc1NvdXJjZU5vZGU9XCIkJCRpc1NvdXJjZU5vZGUkJCRcIjtmdW5jdGlvbiBTb3VyY2VOb2RlKGFMaW5lLGFDb2x1bW4sYVNvdXJjZSxhQ2h1bmtzLGFOYW1lKXt0aGlzLmNoaWxkcmVuPVtdLHRoaXMuc291cmNlQ29udGVudHM9e30sdGhpcy5saW5lPWFMaW5lPz9udWxsLHRoaXMuY29sdW1uPWFDb2x1bW4/P251bGwsdGhpcy5zb3VyY2U9YVNvdXJjZT8/bnVsbCx0aGlzLm5hbWU9YU5hbWU/P251bGwsdGhpc1tpc1NvdXJjZU5vZGVdPSEwLGFDaHVua3MhPW51bGwmJnRoaXMuYWRkKGFDaHVua3MpO31Tb3VyY2VOb2RlLmZyb21TdHJpbmdXaXRoU291cmNlTWFwPWZ1bmN0aW9uKGFHZW5lcmF0ZWRDb2RlLGFTb3VyY2VNYXBDb25zdW1lcixhUmVsYXRpdmVQYXRoKXt2YXIgbm9kZT1uZXcgU291cmNlTm9kZSxyZW1haW5pbmdMaW5lcz1hR2VuZXJhdGVkQ29kZS5zcGxpdChSRUdFWF9ORVdMSU5FKSxyZW1haW5pbmdMaW5lc0luZGV4PTAsc2hpZnROZXh0TGluZT1mdW5jdGlvbigpe3ZhciBsaW5lQ29udGVudHM9Z2V0TmV4dExpbmUoKSxuZXdMaW5lPWdldE5leHRMaW5lKCl8fFwiXCI7cmV0dXJuIGxpbmVDb250ZW50cytuZXdMaW5lO2Z1bmN0aW9uIGdldE5leHRMaW5lKCl7cmV0dXJuIHJlbWFpbmluZ0xpbmVzSW5kZXg8cmVtYWluaW5nTGluZXMubGVuZ3RoP3JlbWFpbmluZ0xpbmVzW3JlbWFpbmluZ0xpbmVzSW5kZXgrK106dm9pZCAwfX0sbGFzdEdlbmVyYXRlZExpbmU9MSxsYXN0R2VuZXJhdGVkQ29sdW1uPTAsbGFzdE1hcHBpbmc9bnVsbDtyZXR1cm4gYVNvdXJjZU1hcENvbnN1bWVyLmVhY2hNYXBwaW5nKGZ1bmN0aW9uKG1hcHBpbmcpe2lmKGxhc3RNYXBwaW5nIT09bnVsbClpZihsYXN0R2VuZXJhdGVkTGluZTxtYXBwaW5nLmdlbmVyYXRlZExpbmUpYWRkTWFwcGluZ1dpdGhDb2RlKGxhc3RNYXBwaW5nLHNoaWZ0TmV4dExpbmUoKSksbGFzdEdlbmVyYXRlZExpbmUrKyxsYXN0R2VuZXJhdGVkQ29sdW1uPTA7ZWxzZSB7dmFyIG5leHRMaW5lPXJlbWFpbmluZ0xpbmVzW3JlbWFpbmluZ0xpbmVzSW5kZXhdfHxcIlwiLGNvZGU9bmV4dExpbmUuc3Vic3RyKDAsbWFwcGluZy5nZW5lcmF0ZWRDb2x1bW4tbGFzdEdlbmVyYXRlZENvbHVtbik7cmVtYWluaW5nTGluZXNbcmVtYWluaW5nTGluZXNJbmRleF09bmV4dExpbmUuc3Vic3RyKG1hcHBpbmcuZ2VuZXJhdGVkQ29sdW1uLWxhc3RHZW5lcmF0ZWRDb2x1bW4pLGxhc3RHZW5lcmF0ZWRDb2x1bW49bWFwcGluZy5nZW5lcmF0ZWRDb2x1bW4sYWRkTWFwcGluZ1dpdGhDb2RlKGxhc3RNYXBwaW5nLGNvZGUpLGxhc3RNYXBwaW5nPW1hcHBpbmc7cmV0dXJufWZvcig7bGFzdEdlbmVyYXRlZExpbmU8bWFwcGluZy5nZW5lcmF0ZWRMaW5lOylub2RlLmFkZChzaGlmdE5leHRMaW5lKCkpLGxhc3RHZW5lcmF0ZWRMaW5lKys7aWYobGFzdEdlbmVyYXRlZENvbHVtbjxtYXBwaW5nLmdlbmVyYXRlZENvbHVtbil7dmFyIG5leHRMaW5lPXJlbWFpbmluZ0xpbmVzW3JlbWFpbmluZ0xpbmVzSW5kZXhdfHxcIlwiO25vZGUuYWRkKG5leHRMaW5lLnN1YnN0cigwLG1hcHBpbmcuZ2VuZXJhdGVkQ29sdW1uKSkscmVtYWluaW5nTGluZXNbcmVtYWluaW5nTGluZXNJbmRleF09bmV4dExpbmUuc3Vic3RyKG1hcHBpbmcuZ2VuZXJhdGVkQ29sdW1uKSxsYXN0R2VuZXJhdGVkQ29sdW1uPW1hcHBpbmcuZ2VuZXJhdGVkQ29sdW1uO31sYXN0TWFwcGluZz1tYXBwaW5nO30sdGhpcykscmVtYWluaW5nTGluZXNJbmRleDxyZW1haW5pbmdMaW5lcy5sZW5ndGgmJihsYXN0TWFwcGluZyYmYWRkTWFwcGluZ1dpdGhDb2RlKGxhc3RNYXBwaW5nLHNoaWZ0TmV4dExpbmUoKSksbm9kZS5hZGQocmVtYWluaW5nTGluZXMuc3BsaWNlKHJlbWFpbmluZ0xpbmVzSW5kZXgpLmpvaW4oXCJcIikpKSxhU291cmNlTWFwQ29uc3VtZXIuc291cmNlcy5mb3JFYWNoKGZ1bmN0aW9uKHNvdXJjZUZpbGUpe3ZhciBjb250ZW50PWFTb3VyY2VNYXBDb25zdW1lci5zb3VyY2VDb250ZW50Rm9yKHNvdXJjZUZpbGUpO2NvbnRlbnQhPW51bGwmJihhUmVsYXRpdmVQYXRoIT1udWxsJiYoc291cmNlRmlsZT11dGlsLmpvaW4oYVJlbGF0aXZlUGF0aCxzb3VyY2VGaWxlKSksbm9kZS5zZXRTb3VyY2VDb250ZW50KHNvdXJjZUZpbGUsY29udGVudCkpO30pLG5vZGU7ZnVuY3Rpb24gYWRkTWFwcGluZ1dpdGhDb2RlKG1hcHBpbmcsY29kZSl7aWYobWFwcGluZz09PW51bGx8fG1hcHBpbmcuc291cmNlPT09dm9pZCAwKW5vZGUuYWRkKGNvZGUpO2Vsc2Uge3ZhciBzb3VyY2U9YVJlbGF0aXZlUGF0aD91dGlsLmpvaW4oYVJlbGF0aXZlUGF0aCxtYXBwaW5nLnNvdXJjZSk6bWFwcGluZy5zb3VyY2U7bm9kZS5hZGQobmV3IFNvdXJjZU5vZGUobWFwcGluZy5vcmlnaW5hbExpbmUsbWFwcGluZy5vcmlnaW5hbENvbHVtbixzb3VyY2UsY29kZSxtYXBwaW5nLm5hbWUpKTt9fX07U291cmNlTm9kZS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGFDaHVuayl7aWYoQXJyYXkuaXNBcnJheShhQ2h1bmspKWFDaHVuay5mb3JFYWNoKGZ1bmN0aW9uKGNodW5rKXt0aGlzLmFkZChjaHVuayk7fSx0aGlzKTtlbHNlIGlmKGFDaHVua1tpc1NvdXJjZU5vZGVdfHx0eXBlb2YgYUNodW5rPT1cInN0cmluZ1wiKWFDaHVuayYmdGhpcy5jaGlsZHJlbi5wdXNoKGFDaHVuayk7ZWxzZSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRXhwZWN0ZWQgYSBTb3VyY2VOb2RlLCBzdHJpbmcsIG9yIGFuIGFycmF5IG9mIFNvdXJjZU5vZGVzIGFuZCBzdHJpbmdzLiBHb3QgXCIrYUNodW5rKTtyZXR1cm4gdGhpc307U291cmNlTm9kZS5wcm90b3R5cGUucHJlcGVuZD1mdW5jdGlvbihhQ2h1bmspe2lmKEFycmF5LmlzQXJyYXkoYUNodW5rKSlmb3IodmFyIGk9YUNodW5rLmxlbmd0aC0xO2k+PTA7aS0tKXRoaXMucHJlcGVuZChhQ2h1bmtbaV0pO2Vsc2UgaWYoYUNodW5rW2lzU291cmNlTm9kZV18fHR5cGVvZiBhQ2h1bms9PVwic3RyaW5nXCIpdGhpcy5jaGlsZHJlbi51bnNoaWZ0KGFDaHVuayk7ZWxzZSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRXhwZWN0ZWQgYSBTb3VyY2VOb2RlLCBzdHJpbmcsIG9yIGFuIGFycmF5IG9mIFNvdXJjZU5vZGVzIGFuZCBzdHJpbmdzLiBHb3QgXCIrYUNodW5rKTtyZXR1cm4gdGhpc307U291cmNlTm9kZS5wcm90b3R5cGUud2Fsaz1mdW5jdGlvbihhRm4pe2Zvcih2YXIgY2h1bmssaT0wLGxlbj10aGlzLmNoaWxkcmVuLmxlbmd0aDtpPGxlbjtpKyspY2h1bms9dGhpcy5jaGlsZHJlbltpXSxjaHVua1tpc1NvdXJjZU5vZGVdP2NodW5rLndhbGsoYUZuKTpjaHVuayE9PVwiXCImJmFGbihjaHVuayx7c291cmNlOnRoaXMuc291cmNlLGxpbmU6dGhpcy5saW5lLGNvbHVtbjp0aGlzLmNvbHVtbixuYW1lOnRoaXMubmFtZX0pO307U291cmNlTm9kZS5wcm90b3R5cGUuam9pbj1mdW5jdGlvbihhU2VwKXt2YXIgbmV3Q2hpbGRyZW4saSxsZW49dGhpcy5jaGlsZHJlbi5sZW5ndGg7aWYobGVuPjApe2ZvcihuZXdDaGlsZHJlbj1bXSxpPTA7aTxsZW4tMTtpKyspbmV3Q2hpbGRyZW4ucHVzaCh0aGlzLmNoaWxkcmVuW2ldKSxuZXdDaGlsZHJlbi5wdXNoKGFTZXApO25ld0NoaWxkcmVuLnB1c2godGhpcy5jaGlsZHJlbltpXSksdGhpcy5jaGlsZHJlbj1uZXdDaGlsZHJlbjt9cmV0dXJuIHRoaXN9O1NvdXJjZU5vZGUucHJvdG90eXBlLnJlcGxhY2VSaWdodD1mdW5jdGlvbihhUGF0dGVybixhUmVwbGFjZW1lbnQpe3ZhciBsYXN0Q2hpbGQ9dGhpcy5jaGlsZHJlblt0aGlzLmNoaWxkcmVuLmxlbmd0aC0xXTtyZXR1cm4gbGFzdENoaWxkW2lzU291cmNlTm9kZV0/bGFzdENoaWxkLnJlcGxhY2VSaWdodChhUGF0dGVybixhUmVwbGFjZW1lbnQpOnR5cGVvZiBsYXN0Q2hpbGQ9PVwic3RyaW5nXCI/dGhpcy5jaGlsZHJlblt0aGlzLmNoaWxkcmVuLmxlbmd0aC0xXT1sYXN0Q2hpbGQucmVwbGFjZShhUGF0dGVybixhUmVwbGFjZW1lbnQpOnRoaXMuY2hpbGRyZW4ucHVzaChcIlwiLnJlcGxhY2UoYVBhdHRlcm4sYVJlcGxhY2VtZW50KSksdGhpc307U291cmNlTm9kZS5wcm90b3R5cGUuc2V0U291cmNlQ29udGVudD1mdW5jdGlvbihhU291cmNlRmlsZSxhU291cmNlQ29udGVudCl7dGhpcy5zb3VyY2VDb250ZW50c1t1dGlsLnRvU2V0U3RyaW5nKGFTb3VyY2VGaWxlKV09YVNvdXJjZUNvbnRlbnQ7fTtTb3VyY2VOb2RlLnByb3RvdHlwZS53YWxrU291cmNlQ29udGVudHM9ZnVuY3Rpb24oYUZuKXtmb3IodmFyIGk9MCxsZW49dGhpcy5jaGlsZHJlbi5sZW5ndGg7aTxsZW47aSsrKXRoaXMuY2hpbGRyZW5baV1baXNTb3VyY2VOb2RlXSYmdGhpcy5jaGlsZHJlbltpXS53YWxrU291cmNlQ29udGVudHMoYUZuKTtmb3IodmFyIHNvdXJjZXM9T2JqZWN0LmtleXModGhpcy5zb3VyY2VDb250ZW50cyksaT0wLGxlbj1zb3VyY2VzLmxlbmd0aDtpPGxlbjtpKyspYUZuKHV0aWwuZnJvbVNldFN0cmluZyhzb3VyY2VzW2ldKSx0aGlzLnNvdXJjZUNvbnRlbnRzW3NvdXJjZXNbaV1dKTt9O1NvdXJjZU5vZGUucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHN0cj1cIlwiO3JldHVybiB0aGlzLndhbGsoZnVuY3Rpb24oY2h1bmspe3N0cis9Y2h1bms7fSksc3RyfTtTb3VyY2VOb2RlLnByb3RvdHlwZS50b1N0cmluZ1dpdGhTb3VyY2VNYXA9ZnVuY3Rpb24oYUFyZ3Mpe3ZhciBnZW5lcmF0ZWQ9e2NvZGU6XCJcIixsaW5lOjEsY29sdW1uOjB9LG1hcD1uZXcgU291cmNlTWFwR2VuZXJhdG9yKGFBcmdzKSxzb3VyY2VNYXBwaW5nQWN0aXZlPSExLGxhc3RPcmlnaW5hbFNvdXJjZT1udWxsLGxhc3RPcmlnaW5hbExpbmU9bnVsbCxsYXN0T3JpZ2luYWxDb2x1bW49bnVsbCxsYXN0T3JpZ2luYWxOYW1lPW51bGw7cmV0dXJuIHRoaXMud2FsayhmdW5jdGlvbihjaHVuayxvcmlnaW5hbCl7Z2VuZXJhdGVkLmNvZGUrPWNodW5rLG9yaWdpbmFsLnNvdXJjZSE9PW51bGwmJm9yaWdpbmFsLmxpbmUhPT1udWxsJiZvcmlnaW5hbC5jb2x1bW4hPT1udWxsPygobGFzdE9yaWdpbmFsU291cmNlIT09b3JpZ2luYWwuc291cmNlfHxsYXN0T3JpZ2luYWxMaW5lIT09b3JpZ2luYWwubGluZXx8bGFzdE9yaWdpbmFsQ29sdW1uIT09b3JpZ2luYWwuY29sdW1ufHxsYXN0T3JpZ2luYWxOYW1lIT09b3JpZ2luYWwubmFtZSkmJm1hcC5hZGRNYXBwaW5nKHtzb3VyY2U6b3JpZ2luYWwuc291cmNlLG9yaWdpbmFsOntsaW5lOm9yaWdpbmFsLmxpbmUsY29sdW1uOm9yaWdpbmFsLmNvbHVtbn0sZ2VuZXJhdGVkOntsaW5lOmdlbmVyYXRlZC5saW5lLGNvbHVtbjpnZW5lcmF0ZWQuY29sdW1ufSxuYW1lOm9yaWdpbmFsLm5hbWV9KSxsYXN0T3JpZ2luYWxTb3VyY2U9b3JpZ2luYWwuc291cmNlLGxhc3RPcmlnaW5hbExpbmU9b3JpZ2luYWwubGluZSxsYXN0T3JpZ2luYWxDb2x1bW49b3JpZ2luYWwuY29sdW1uLGxhc3RPcmlnaW5hbE5hbWU9b3JpZ2luYWwubmFtZSxzb3VyY2VNYXBwaW5nQWN0aXZlPSEwKTpzb3VyY2VNYXBwaW5nQWN0aXZlJiYobWFwLmFkZE1hcHBpbmcoe2dlbmVyYXRlZDp7bGluZTpnZW5lcmF0ZWQubGluZSxjb2x1bW46Z2VuZXJhdGVkLmNvbHVtbn19KSxsYXN0T3JpZ2luYWxTb3VyY2U9bnVsbCxzb3VyY2VNYXBwaW5nQWN0aXZlPSExKTtmb3IodmFyIGlkeD0wLGxlbmd0aD1jaHVuay5sZW5ndGg7aWR4PGxlbmd0aDtpZHgrKyljaHVuay5jaGFyQ29kZUF0KGlkeCk9PT1ORVdMSU5FX0NPREU/KGdlbmVyYXRlZC5saW5lKyssZ2VuZXJhdGVkLmNvbHVtbj0wLGlkeCsxPT09bGVuZ3RoPyhsYXN0T3JpZ2luYWxTb3VyY2U9bnVsbCxzb3VyY2VNYXBwaW5nQWN0aXZlPSExKTpzb3VyY2VNYXBwaW5nQWN0aXZlJiZtYXAuYWRkTWFwcGluZyh7c291cmNlOm9yaWdpbmFsLnNvdXJjZSxvcmlnaW5hbDp7bGluZTpvcmlnaW5hbC5saW5lLGNvbHVtbjpvcmlnaW5hbC5jb2x1bW59LGdlbmVyYXRlZDp7bGluZTpnZW5lcmF0ZWQubGluZSxjb2x1bW46Z2VuZXJhdGVkLmNvbHVtbn0sbmFtZTpvcmlnaW5hbC5uYW1lfSkpOmdlbmVyYXRlZC5jb2x1bW4rKzt9KSx0aGlzLndhbGtTb3VyY2VDb250ZW50cyhmdW5jdGlvbihzb3VyY2VGaWxlLHNvdXJjZUNvbnRlbnQpe21hcC5zZXRTb3VyY2VDb250ZW50KHNvdXJjZUZpbGUsc291cmNlQ29udGVudCk7fSkse2NvZGU6Z2VuZXJhdGVkLmNvZGUsbWFwfX07ZXhwb3J0cy5Tb3VyY2VOb2RlPVNvdXJjZU5vZGU7fX0pO3ZhciByZXF1aXJlX3NvdXJjZV9tYXA9X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvZXNjb2RlZ2VuL25vZGVfbW9kdWxlcy9zb3VyY2UtbWFwL3NvdXJjZS1tYXAuanNcIihleHBvcnRzKXtleHBvcnRzLlNvdXJjZU1hcEdlbmVyYXRvcj1yZXF1aXJlX3NvdXJjZV9tYXBfZ2VuZXJhdG9yKCkuU291cmNlTWFwR2VuZXJhdG9yO2V4cG9ydHMuU291cmNlTWFwQ29uc3VtZXI9cmVxdWlyZV9zb3VyY2VfbWFwX2NvbnN1bWVyKCkuU291cmNlTWFwQ29uc3VtZXI7ZXhwb3J0cy5Tb3VyY2VOb2RlPXJlcXVpcmVfc291cmNlX25vZGUoKS5Tb3VyY2VOb2RlO319KTt2YXIgcmVxdWlyZV9wYWNrYWdlPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL2VzY29kZWdlbi9wYWNrYWdlLmpzb25cIihleHBvcnRzLG1vZHVsZSl7bW9kdWxlLmV4cG9ydHM9e25hbWU6XCJlc2NvZGVnZW5cIixkZXNjcmlwdGlvbjpcIkVDTUFTY3JpcHQgY29kZSBnZW5lcmF0b3JcIixob21lcGFnZTpcImh0dHA6Ly9naXRodWIuY29tL2VzdG9vbHMvZXNjb2RlZ2VuXCIsbWFpbjpcImVzY29kZWdlbi5qc1wiLGJpbjp7ZXNnZW5lcmF0ZTpcIi4vYmluL2VzZ2VuZXJhdGUuanNcIixlc2NvZGVnZW46XCIuL2Jpbi9lc2NvZGVnZW4uanNcIn0sZmlsZXM6W1wiTElDRU5TRS5CU0RcIixcIlJFQURNRS5tZFwiLFwiYmluXCIsXCJlc2NvZGVnZW4uanNcIixcInBhY2thZ2UuanNvblwiXSx2ZXJzaW9uOlwiMi4xLjBcIixlbmdpbmVzOntub2RlOlwiPj02LjBcIn0sbWFpbnRhaW5lcnM6W3tuYW1lOlwiWXVzdWtlIFN1enVraVwiLGVtYWlsOlwidXRhdGFuZS50ZWFAZ21haWwuY29tXCIsd2ViOlwiaHR0cDovL2dpdGh1Yi5jb20vQ29uc3RlbGxhdGlvblwifV0scmVwb3NpdG9yeTp7dHlwZTpcImdpdFwiLHVybDpcImh0dHA6Ly9naXRodWIuY29tL2VzdG9vbHMvZXNjb2RlZ2VuLmdpdFwifSxkZXBlbmRlbmNpZXM6e2VzdHJhdmVyc2U6XCJeNS4yLjBcIixlc3V0aWxzOlwiXjIuMC4yXCIsZXNwcmltYTpcIl40LjAuMVwifSxvcHRpb25hbERlcGVuZGVuY2llczp7XCJzb3VyY2UtbWFwXCI6XCJ+MC42LjFcIn0sZGV2RGVwZW5kZW5jaWVzOnthY29ybjpcIl44LjAuNFwiLGJsdWViaXJkOlwiXjMuNC43XCIsXCJib3dlci1yZWdpc3RyeS1jbGllbnRcIjpcIl4xLjAuMFwiLGNoYWk6XCJeNC4yLjBcIixcImNoYWktZXhjbHVkZVwiOlwiXjIuMC4yXCIsXCJjb21tb25qcy1ldmVyeXdoZXJlXCI6XCJeMC45LjdcIixndWxwOlwiXjQuMC4yXCIsXCJndWxwLWVzbGludFwiOlwiXjYuMC4wXCIsXCJndWxwLW1vY2hhXCI6XCJeNy4wLjJcIixtaW5pbWlzdDpcIl4xLjIuNVwiLG9wdGlvbmF0b3I6XCJeMC45LjFcIixzZW12ZXI6XCJeNy4zLjRcIn0sbGljZW5zZTpcIkJTRC0yLUNsYXVzZVwiLHNjcmlwdHM6e3Rlc3Q6XCJndWxwIHRyYXZpc1wiLFwidW5pdC10ZXN0XCI6XCJndWxwIHRlc3RcIixsaW50OlwiZ3VscCBsaW50XCIscmVsZWFzZTpcIm5vZGUgdG9vbHMvcmVsZWFzZS5qc1wiLFwiYnVpbGQtbWluXCI6XCIuL25vZGVfbW9kdWxlcy8uYmluL2Nqc2lmeSAtbWEgcGF0aDogdG9vbHMvZW50cnktcG9pbnQuanMgPiBlc2NvZGVnZW4uYnJvd3Nlci5taW4uanNcIixidWlsZDpcIi4vbm9kZV9tb2R1bGVzLy5iaW4vY2pzaWZ5IC1hIHBhdGg6IHRvb2xzL2VudHJ5LXBvaW50LmpzID4gZXNjb2RlZ2VuLmJyb3dzZXIuanNcIn19O319KTt2YXIgcmVxdWlyZV9lc2NvZGVnZW49X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvZXNjb2RlZ2VuL2VzY29kZWdlbi5qc1wiKGV4cG9ydHMpeyhmdW5jdGlvbigpe3ZhciBTeW50YXgsUHJlY2VkZW5jZSxCaW5hcnlQcmVjZWRlbmNlLFNvdXJjZU5vZGUsZXN0cmF2ZXJzZSxlc3V0aWxzLGJhc2UyLGluZGVudCxqc29uLHJlbnVtYmVyLGhleGFkZWNpbWFsLHF1b3Rlcyxlc2NhcGVsZXNzLG5ld2xpbmUsc3BhY2UscGFyZW50aGVzZXMsc2VtaWNvbG9ucyxzYWZlQ29uY2F0ZW5hdGlvbixkaXJlY3RpdmUsZXh0cmEscGFyc2U1LHNvdXJjZU1hcCxzb3VyY2VDb2RlLHByZXNlcnZlQmxhbmtMaW5lcyxGT1JNQVRfTUlOSUZZLEZPUk1BVF9ERUZBVUxUUztlc3RyYXZlcnNlPXJlcXVpcmVfZXN0cmF2ZXJzZSgpLGVzdXRpbHM9cmVxdWlyZV91dGlscygpLFN5bnRheD1lc3RyYXZlcnNlLlN5bnRheDtmdW5jdGlvbiBpc0V4cHJlc3Npb24obm9kZSl7cmV0dXJuIENvZGVHZW5lcmF0b3IuRXhwcmVzc2lvbi5oYXNPd25Qcm9wZXJ0eShub2RlLnR5cGUpfWZ1bmN0aW9uIGlzU3RhdGVtZW50KG5vZGUpe3JldHVybiBDb2RlR2VuZXJhdG9yLlN0YXRlbWVudC5oYXNPd25Qcm9wZXJ0eShub2RlLnR5cGUpfVByZWNlZGVuY2U9e1NlcXVlbmNlOjAsWWllbGQ6MSxBc3NpZ25tZW50OjEsQ29uZGl0aW9uYWw6MixBcnJvd0Z1bmN0aW9uOjIsQ29hbGVzY2U6MyxMb2dpY2FsT1I6NCxMb2dpY2FsQU5EOjUsQml0d2lzZU9SOjYsQml0d2lzZVhPUjo3LEJpdHdpc2VBTkQ6OCxFcXVhbGl0eTo5LFJlbGF0aW9uYWw6MTAsQml0d2lzZVNISUZUOjExLEFkZGl0aXZlOjEyLE11bHRpcGxpY2F0aXZlOjEzLEV4cG9uZW50aWF0aW9uOjE0LEF3YWl0OjE1LFVuYXJ5OjE1LFBvc3RmaXg6MTYsT3B0aW9uYWxDaGFpbmluZzoxNyxDYWxsOjE4LE5ldzoxOSxUYWdnZWRUZW1wbGF0ZToyMCxNZW1iZXI6MjEsUHJpbWFyeToyMn0sQmluYXJ5UHJlY2VkZW5jZT17XCI/P1wiOlByZWNlZGVuY2UuQ29hbGVzY2UsXCJ8fFwiOlByZWNlZGVuY2UuTG9naWNhbE9SLFwiJiZcIjpQcmVjZWRlbmNlLkxvZ2ljYWxBTkQsXCJ8XCI6UHJlY2VkZW5jZS5CaXR3aXNlT1IsXCJeXCI6UHJlY2VkZW5jZS5CaXR3aXNlWE9SLFwiJlwiOlByZWNlZGVuY2UuQml0d2lzZUFORCxcIj09XCI6UHJlY2VkZW5jZS5FcXVhbGl0eSxcIiE9XCI6UHJlY2VkZW5jZS5FcXVhbGl0eSxcIj09PVwiOlByZWNlZGVuY2UuRXF1YWxpdHksXCIhPT1cIjpQcmVjZWRlbmNlLkVxdWFsaXR5LGlzOlByZWNlZGVuY2UuRXF1YWxpdHksaXNudDpQcmVjZWRlbmNlLkVxdWFsaXR5LFwiPFwiOlByZWNlZGVuY2UuUmVsYXRpb25hbCxcIj5cIjpQcmVjZWRlbmNlLlJlbGF0aW9uYWwsXCI8PVwiOlByZWNlZGVuY2UuUmVsYXRpb25hbCxcIj49XCI6UHJlY2VkZW5jZS5SZWxhdGlvbmFsLGluOlByZWNlZGVuY2UuUmVsYXRpb25hbCxpbnN0YW5jZW9mOlByZWNlZGVuY2UuUmVsYXRpb25hbCxcIjw8XCI6UHJlY2VkZW5jZS5CaXR3aXNlU0hJRlQsXCI+PlwiOlByZWNlZGVuY2UuQml0d2lzZVNISUZULFwiPj4+XCI6UHJlY2VkZW5jZS5CaXR3aXNlU0hJRlQsXCIrXCI6UHJlY2VkZW5jZS5BZGRpdGl2ZSxcIi1cIjpQcmVjZWRlbmNlLkFkZGl0aXZlLFwiKlwiOlByZWNlZGVuY2UuTXVsdGlwbGljYXRpdmUsXCIlXCI6UHJlY2VkZW5jZS5NdWx0aXBsaWNhdGl2ZSxcIi9cIjpQcmVjZWRlbmNlLk11bHRpcGxpY2F0aXZlLFwiKipcIjpQcmVjZWRlbmNlLkV4cG9uZW50aWF0aW9ufTt2YXIgRl9BTExPV19JTj0xLEZfQUxMT1dfQ0FMTD0yLEZfQUxMT1dfVU5QQVJBVEhfTkVXPTQsRl9GVU5DX0JPRFk9OCxGX0RJUkVDVElWRV9DVFg9MTYsRl9TRU1JQ09MT05fT1BUPTMyLEZfRk9VTkRfQ09BTEVTQ0U9NjQsRV9GVFQ9Rl9BTExPV19DQUxMfEZfQUxMT1dfVU5QQVJBVEhfTkVXLEVfVFRGPUZfQUxMT1dfSU58Rl9BTExPV19DQUxMLEVfVFRUPUZfQUxMT1dfSU58Rl9BTExPV19DQUxMfEZfQUxMT1dfVU5QQVJBVEhfTkVXLEVfVEZGPUZfQUxMT1dfSU4sRV9GRlQ9Rl9BTExPV19VTlBBUkFUSF9ORVcsRV9URlQ9Rl9BTExPV19JTnxGX0FMTE9XX1VOUEFSQVRIX05FVyxTX1RGRkY9Rl9BTExPV19JTixTX1RGRlQ9Rl9BTExPV19JTnxGX1NFTUlDT0xPTl9PUFQsU19GRkZGPTAsU19URlRGPUZfQUxMT1dfSU58Rl9ESVJFQ1RJVkVfQ1RYLFNfVFRGRj1GX0FMTE9XX0lOfEZfRlVOQ19CT0RZO2Z1bmN0aW9uIGdldERlZmF1bHRPcHRpb25zKCl7cmV0dXJuIHtpbmRlbnQ6bnVsbCxiYXNlOm51bGwscGFyc2U6bnVsbCxjb21tZW50OiExLGZvcm1hdDp7aW5kZW50OntzdHlsZTpcIiAgICBcIixiYXNlOjAsYWRqdXN0TXVsdGlsaW5lQ29tbWVudDohMX0sbmV3bGluZTpgXG5gLHNwYWNlOlwiIFwiLGpzb246ITEscmVudW1iZXI6ITEsaGV4YWRlY2ltYWw6ITEscXVvdGVzOlwic2luZ2xlXCIsZXNjYXBlbGVzczohMSxjb21wYWN0OiExLHBhcmVudGhlc2VzOiEwLHNlbWljb2xvbnM6ITAsc2FmZUNvbmNhdGVuYXRpb246ITEscHJlc2VydmVCbGFua0xpbmVzOiExfSxtb3o6e2NvbXByZWhlbnNpb25FeHByZXNzaW9uU3RhcnRzV2l0aEFzc2lnbm1lbnQ6ITEsc3Rhcmxlc3NHZW5lcmF0b3I6ITF9LHNvdXJjZU1hcDpudWxsLHNvdXJjZU1hcFJvb3Q6bnVsbCxzb3VyY2VNYXBXaXRoQ29kZTohMSxkaXJlY3RpdmU6ITEscmF3OiEwLHZlcmJhdGltOm51bGwsc291cmNlQ29kZTpudWxsfX1mdW5jdGlvbiBzdHJpbmdSZXBlYXQoc3RyLG51bSl7dmFyIHJlc3VsdD1cIlwiO2ZvcihudW18PTA7bnVtPjA7bnVtPj4+PTEsc3RyKz1zdHIpbnVtJjEmJihyZXN1bHQrPXN0cik7cmV0dXJuIHJlc3VsdH1mdW5jdGlvbiBoYXNMaW5lVGVybWluYXRvcihzdHIpe3JldHVybiAvW1xcclxcbl0vZy50ZXN0KHN0cil9ZnVuY3Rpb24gZW5kc1dpdGhMaW5lVGVybWluYXRvcihzdHIpe3ZhciBsZW49c3RyLmxlbmd0aDtyZXR1cm4gbGVuJiZlc3V0aWxzLmNvZGUuaXNMaW5lVGVybWluYXRvcihzdHIuY2hhckNvZGVBdChsZW4tMSkpfWZ1bmN0aW9uIG1lcmdlKHRhcmdldCxvdmVycmlkZSl7dmFyIGtleTtmb3Ioa2V5IGluIG92ZXJyaWRlKW92ZXJyaWRlLmhhc093blByb3BlcnR5KGtleSkmJih0YXJnZXRba2V5XT1vdmVycmlkZVtrZXldKTtyZXR1cm4gdGFyZ2V0fWZ1bmN0aW9uIHVwZGF0ZURlZXBseSh0YXJnZXQsb3ZlcnJpZGUpe3ZhciBrZXksdmFsO2Z1bmN0aW9uIGlzSGFzaE9iamVjdCh0YXJnZXQyKXtyZXR1cm4gdHlwZW9mIHRhcmdldDI9PVwib2JqZWN0XCImJnRhcmdldDIgaW5zdGFuY2VvZiBPYmplY3QmJiEodGFyZ2V0MiBpbnN0YW5jZW9mIFJlZ0V4cCl9Zm9yKGtleSBpbiBvdmVycmlkZSlvdmVycmlkZS5oYXNPd25Qcm9wZXJ0eShrZXkpJiYodmFsPW92ZXJyaWRlW2tleV0saXNIYXNoT2JqZWN0KHZhbCk/aXNIYXNoT2JqZWN0KHRhcmdldFtrZXldKT91cGRhdGVEZWVwbHkodGFyZ2V0W2tleV0sdmFsKTp0YXJnZXRba2V5XT11cGRhdGVEZWVwbHkoe30sdmFsKTp0YXJnZXRba2V5XT12YWwpO3JldHVybiB0YXJnZXR9ZnVuY3Rpb24gZ2VuZXJhdGVOdW1iZXIodmFsdWUpe3ZhciByZXN1bHQscG9pbnQsdGVtcCxleHBvbmVudCxwb3M7aWYodmFsdWUhPT12YWx1ZSl0aHJvdyBuZXcgRXJyb3IoXCJOdW1lcmljIGxpdGVyYWwgd2hvc2UgdmFsdWUgaXMgTmFOXCIpO2lmKHZhbHVlPDB8fHZhbHVlPT09MCYmMS92YWx1ZTwwKXRocm93IG5ldyBFcnJvcihcIk51bWVyaWMgbGl0ZXJhbCB3aG9zZSB2YWx1ZSBpcyBuZWdhdGl2ZVwiKTtpZih2YWx1ZT09PTEvMClyZXR1cm4ganNvbj9cIm51bGxcIjpyZW51bWJlcj9cIjFlNDAwXCI6XCIxZSs0MDBcIjtpZihyZXN1bHQ9XCJcIit2YWx1ZSwhcmVudW1iZXJ8fHJlc3VsdC5sZW5ndGg8MylyZXR1cm4gcmVzdWx0O2Zvcihwb2ludD1yZXN1bHQuaW5kZXhPZihcIi5cIiksIWpzb24mJnJlc3VsdC5jaGFyQ29kZUF0KDApPT09NDgmJnBvaW50PT09MSYmKHBvaW50PTAscmVzdWx0PXJlc3VsdC5zbGljZSgxKSksdGVtcD1yZXN1bHQscmVzdWx0PXJlc3VsdC5yZXBsYWNlKFwiZStcIixcImVcIiksZXhwb25lbnQ9MCwocG9zPXRlbXAuaW5kZXhPZihcImVcIikpPjAmJihleHBvbmVudD0rdGVtcC5zbGljZShwb3MrMSksdGVtcD10ZW1wLnNsaWNlKDAscG9zKSkscG9pbnQ+PTAmJihleHBvbmVudC09dGVtcC5sZW5ndGgtcG9pbnQtMSx0ZW1wPSsodGVtcC5zbGljZSgwLHBvaW50KSt0ZW1wLnNsaWNlKHBvaW50KzEpKStcIlwiKSxwb3M9MDt0ZW1wLmNoYXJDb2RlQXQodGVtcC5sZW5ndGgrcG9zLTEpPT09NDg7KS0tcG9zO3JldHVybiBwb3MhPT0wJiYoZXhwb25lbnQtPXBvcyx0ZW1wPXRlbXAuc2xpY2UoMCxwb3MpKSxleHBvbmVudCE9PTAmJih0ZW1wKz1cImVcIitleHBvbmVudCksKHRlbXAubGVuZ3RoPHJlc3VsdC5sZW5ndGh8fGhleGFkZWNpbWFsJiZ2YWx1ZT4xZTEyJiZNYXRoLmZsb29yKHZhbHVlKT09PXZhbHVlJiYodGVtcD1cIjB4XCIrdmFsdWUudG9TdHJpbmcoMTYpKS5sZW5ndGg8cmVzdWx0Lmxlbmd0aCkmJit0ZW1wPT09dmFsdWUmJihyZXN1bHQ9dGVtcCkscmVzdWx0fWZ1bmN0aW9uIGVzY2FwZVJlZ0V4cENoYXJhY3RlcihjaCxwcmV2aW91c0lzQmFja3NsYXNoKXtyZXR1cm4gKGNoJi0yKT09PTgyMzI/KHByZXZpb3VzSXNCYWNrc2xhc2g/XCJ1XCI6XCJcXFxcdVwiKSsoY2g9PT04MjMyP1wiMjAyOFwiOlwiMjAyOVwiKTpjaD09PTEwfHxjaD09PTEzPyhwcmV2aW91c0lzQmFja3NsYXNoP1wiXCI6XCJcXFxcXCIpKyhjaD09PTEwP1wiblwiOlwiclwiKTpTdHJpbmcuZnJvbUNoYXJDb2RlKGNoKX1mdW5jdGlvbiBnZW5lcmF0ZVJlZ0V4cChyZWcpe3ZhciBtYXRjaCxyZXN1bHQsZmxhZ3MsaSxpeixjaCxjaGFyYWN0ZXJJbkJyYWNrLHByZXZpb3VzSXNCYWNrc2xhc2g7aWYocmVzdWx0PXJlZy50b1N0cmluZygpLHJlZy5zb3VyY2Upe2lmKG1hdGNoPXJlc3VsdC5tYXRjaCgvXFwvKFteL10qKSQvKSwhbWF0Y2gpcmV0dXJuIHJlc3VsdDtmb3IoZmxhZ3M9bWF0Y2hbMV0scmVzdWx0PVwiXCIsY2hhcmFjdGVySW5CcmFjaz0hMSxwcmV2aW91c0lzQmFja3NsYXNoPSExLGk9MCxpej1yZWcuc291cmNlLmxlbmd0aDtpPGl6OysraSljaD1yZWcuc291cmNlLmNoYXJDb2RlQXQoaSkscHJldmlvdXNJc0JhY2tzbGFzaD8ocmVzdWx0Kz1lc2NhcGVSZWdFeHBDaGFyYWN0ZXIoY2gscHJldmlvdXNJc0JhY2tzbGFzaCkscHJldmlvdXNJc0JhY2tzbGFzaD0hMSk6KGNoYXJhY3RlckluQnJhY2s/Y2g9PT05MyYmKGNoYXJhY3RlckluQnJhY2s9ITEpOmNoPT09NDc/cmVzdWx0Kz1cIlxcXFxcIjpjaD09PTkxJiYoY2hhcmFjdGVySW5CcmFjaz0hMCkscmVzdWx0Kz1lc2NhcGVSZWdFeHBDaGFyYWN0ZXIoY2gscHJldmlvdXNJc0JhY2tzbGFzaCkscHJldmlvdXNJc0JhY2tzbGFzaD1jaD09PTkyKTtyZXR1cm4gXCIvXCIrcmVzdWx0K1wiL1wiK2ZsYWdzfXJldHVybiByZXN1bHR9ZnVuY3Rpb24gZXNjYXBlQWxsb3dlZENoYXJhY3Rlcihjb2RlLG5leHQpe3ZhciBoZXg7cmV0dXJuIGNvZGU9PT04P1wiXFxcXGJcIjpjb2RlPT09MTI/XCJcXFxcZlwiOmNvZGU9PT05P1wiXFxcXHRcIjooaGV4PWNvZGUudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCksanNvbnx8Y29kZT4yNTU/XCJcXFxcdVwiK1wiMDAwMFwiLnNsaWNlKGhleC5sZW5ndGgpK2hleDpjb2RlPT09MCYmIWVzdXRpbHMuY29kZS5pc0RlY2ltYWxEaWdpdChuZXh0KT9cIlxcXFwwXCI6Y29kZT09PTExP1wiXFxcXHgwQlwiOlwiXFxcXHhcIitcIjAwXCIuc2xpY2UoaGV4Lmxlbmd0aCkraGV4KX1mdW5jdGlvbiBlc2NhcGVEaXNhbGxvd2VkQ2hhcmFjdGVyKGNvZGUpe2lmKGNvZGU9PT05MilyZXR1cm4gXCJcXFxcXFxcXFwiO2lmKGNvZGU9PT0xMClyZXR1cm4gXCJcXFxcblwiO2lmKGNvZGU9PT0xMylyZXR1cm4gXCJcXFxcclwiO2lmKGNvZGU9PT04MjMyKXJldHVybiBcIlxcXFx1MjAyOFwiO2lmKGNvZGU9PT04MjMzKXJldHVybiBcIlxcXFx1MjAyOVwiO3Rocm93IG5ldyBFcnJvcihcIkluY29ycmVjdGx5IGNsYXNzaWZpZWQgY2hhcmFjdGVyXCIpfWZ1bmN0aW9uIGVzY2FwZURpcmVjdGl2ZShzdHIpe3ZhciBpLGl6LGNvZGUscXVvdGU7Zm9yKHF1b3RlPXF1b3Rlcz09PVwiZG91YmxlXCI/J1wiJzpcIidcIixpPTAsaXo9c3RyLmxlbmd0aDtpPGl6OysraSlpZihjb2RlPXN0ci5jaGFyQ29kZUF0KGkpLGNvZGU9PT0zOSl7cXVvdGU9J1wiJzticmVha31lbHNlIGlmKGNvZGU9PT0zNCl7cXVvdGU9XCInXCI7YnJlYWt9ZWxzZSBjb2RlPT09OTImJisraTtyZXR1cm4gcXVvdGUrc3RyK3F1b3RlfWZ1bmN0aW9uIGVzY2FwZVN0cmluZyhzdHIpe3ZhciByZXN1bHQ9XCJcIixpLGxlbixjb2RlLHNpbmdsZVF1b3Rlcz0wLGRvdWJsZVF1b3Rlcz0wLHNpbmdsZSxxdW90ZTtmb3IoaT0wLGxlbj1zdHIubGVuZ3RoO2k8bGVuOysraSl7aWYoY29kZT1zdHIuY2hhckNvZGVBdChpKSxjb2RlPT09MzkpKytzaW5nbGVRdW90ZXM7ZWxzZSBpZihjb2RlPT09MzQpKytkb3VibGVRdW90ZXM7ZWxzZSBpZihjb2RlPT09NDcmJmpzb24pcmVzdWx0Kz1cIlxcXFxcIjtlbHNlIGlmKGVzdXRpbHMuY29kZS5pc0xpbmVUZXJtaW5hdG9yKGNvZGUpfHxjb2RlPT09OTIpe3Jlc3VsdCs9ZXNjYXBlRGlzYWxsb3dlZENoYXJhY3Rlcihjb2RlKTtjb250aW51ZX1lbHNlIGlmKCFlc3V0aWxzLmNvZGUuaXNJZGVudGlmaWVyUGFydEVTNShjb2RlKSYmKGpzb24mJmNvZGU8MzJ8fCFqc29uJiYhZXNjYXBlbGVzcyYmKGNvZGU8MzJ8fGNvZGU+MTI2KSkpe3Jlc3VsdCs9ZXNjYXBlQWxsb3dlZENoYXJhY3Rlcihjb2RlLHN0ci5jaGFyQ29kZUF0KGkrMSkpO2NvbnRpbnVlfXJlc3VsdCs9U3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKTt9aWYoc2luZ2xlPSEocXVvdGVzPT09XCJkb3VibGVcInx8cXVvdGVzPT09XCJhdXRvXCImJmRvdWJsZVF1b3RlczxzaW5nbGVRdW90ZXMpLHF1b3RlPXNpbmdsZT9cIidcIjonXCInLCEoc2luZ2xlP3NpbmdsZVF1b3Rlczpkb3VibGVRdW90ZXMpKXJldHVybiBxdW90ZStyZXN1bHQrcXVvdGU7Zm9yKHN0cj1yZXN1bHQscmVzdWx0PXF1b3RlLGk9MCxsZW49c3RyLmxlbmd0aDtpPGxlbjsrK2kpY29kZT1zdHIuY2hhckNvZGVBdChpKSwoY29kZT09PTM5JiZzaW5nbGV8fGNvZGU9PT0zNCYmIXNpbmdsZSkmJihyZXN1bHQrPVwiXFxcXFwiKSxyZXN1bHQrPVN0cmluZy5mcm9tQ2hhckNvZGUoY29kZSk7cmV0dXJuIHJlc3VsdCtxdW90ZX1mdW5jdGlvbiBmbGF0dGVuVG9TdHJpbmcoYXJyKXt2YXIgaSxpeixlbGVtLHJlc3VsdD1cIlwiO2ZvcihpPTAsaXo9YXJyLmxlbmd0aDtpPGl6OysraSllbGVtPWFycltpXSxyZXN1bHQrPUFycmF5LmlzQXJyYXkoZWxlbSk/ZmxhdHRlblRvU3RyaW5nKGVsZW0pOmVsZW07cmV0dXJuIHJlc3VsdH1mdW5jdGlvbiB0b1NvdXJjZU5vZGVXaGVuTmVlZGVkKGdlbmVyYXRlZCxub2RlKXtpZighc291cmNlTWFwKXJldHVybiBBcnJheS5pc0FycmF5KGdlbmVyYXRlZCk/ZmxhdHRlblRvU3RyaW5nKGdlbmVyYXRlZCk6Z2VuZXJhdGVkO2lmKG5vZGU9PW51bGwpe2lmKGdlbmVyYXRlZCBpbnN0YW5jZW9mIFNvdXJjZU5vZGUpcmV0dXJuIGdlbmVyYXRlZDtub2RlPXt9O31yZXR1cm4gbm9kZS5sb2M9PW51bGw/bmV3IFNvdXJjZU5vZGUobnVsbCxudWxsLHNvdXJjZU1hcCxnZW5lcmF0ZWQsbm9kZS5uYW1lfHxudWxsKTpuZXcgU291cmNlTm9kZShub2RlLmxvYy5zdGFydC5saW5lLG5vZGUubG9jLnN0YXJ0LmNvbHVtbixzb3VyY2VNYXA9PT0hMD9ub2RlLmxvYy5zb3VyY2V8fG51bGw6c291cmNlTWFwLGdlbmVyYXRlZCxub2RlLm5hbWV8fG51bGwpfWZ1bmN0aW9uIG5vRW1wdHlTcGFjZSgpe3JldHVybiBzcGFjZXx8XCIgXCJ9ZnVuY3Rpb24gam9pbihsZWZ0LHJpZ2h0KXt2YXIgbGVmdFNvdXJjZSxyaWdodFNvdXJjZSxsZWZ0Q2hhckNvZGUscmlnaHRDaGFyQ29kZTtyZXR1cm4gbGVmdFNvdXJjZT10b1NvdXJjZU5vZGVXaGVuTmVlZGVkKGxlZnQpLnRvU3RyaW5nKCksbGVmdFNvdXJjZS5sZW5ndGg9PT0wP1tyaWdodF06KHJpZ2h0U291cmNlPXRvU291cmNlTm9kZVdoZW5OZWVkZWQocmlnaHQpLnRvU3RyaW5nKCkscmlnaHRTb3VyY2UubGVuZ3RoPT09MD9bbGVmdF06KGxlZnRDaGFyQ29kZT1sZWZ0U291cmNlLmNoYXJDb2RlQXQobGVmdFNvdXJjZS5sZW5ndGgtMSkscmlnaHRDaGFyQ29kZT1yaWdodFNvdXJjZS5jaGFyQ29kZUF0KDApLChsZWZ0Q2hhckNvZGU9PT00M3x8bGVmdENoYXJDb2RlPT09NDUpJiZsZWZ0Q2hhckNvZGU9PT1yaWdodENoYXJDb2RlfHxlc3V0aWxzLmNvZGUuaXNJZGVudGlmaWVyUGFydEVTNShsZWZ0Q2hhckNvZGUpJiZlc3V0aWxzLmNvZGUuaXNJZGVudGlmaWVyUGFydEVTNShyaWdodENoYXJDb2RlKXx8bGVmdENoYXJDb2RlPT09NDcmJnJpZ2h0Q2hhckNvZGU9PT0xMDU/W2xlZnQsbm9FbXB0eVNwYWNlKCkscmlnaHRdOmVzdXRpbHMuY29kZS5pc1doaXRlU3BhY2UobGVmdENoYXJDb2RlKXx8ZXN1dGlscy5jb2RlLmlzTGluZVRlcm1pbmF0b3IobGVmdENoYXJDb2RlKXx8ZXN1dGlscy5jb2RlLmlzV2hpdGVTcGFjZShyaWdodENoYXJDb2RlKXx8ZXN1dGlscy5jb2RlLmlzTGluZVRlcm1pbmF0b3IocmlnaHRDaGFyQ29kZSk/W2xlZnQscmlnaHRdOltsZWZ0LHNwYWNlLHJpZ2h0XSkpfWZ1bmN0aW9uIGFkZEluZGVudChzdG10KXtyZXR1cm4gW2Jhc2UyLHN0bXRdfWZ1bmN0aW9uIHdpdGhJbmRlbnQoZm4pe3ZhciBwcmV2aW91c0Jhc2U7cHJldmlvdXNCYXNlPWJhc2UyLGJhc2UyKz1pbmRlbnQsZm4oYmFzZTIpLGJhc2UyPXByZXZpb3VzQmFzZTt9ZnVuY3Rpb24gY2FsY3VsYXRlU3BhY2VzKHN0cil7dmFyIGk7Zm9yKGk9c3RyLmxlbmd0aC0xO2k+PTAmJiFlc3V0aWxzLmNvZGUuaXNMaW5lVGVybWluYXRvcihzdHIuY2hhckNvZGVBdChpKSk7LS1pKTtyZXR1cm4gc3RyLmxlbmd0aC0xLWl9ZnVuY3Rpb24gYWRqdXN0TXVsdGlsaW5lQ29tbWVudCh2YWx1ZSxzcGVjaWFsQmFzZSl7dmFyIGFycmF5LGksbGVuLGxpbmUsaixzcGFjZXMscHJldmlvdXNCYXNlLHNuO2ZvcihhcnJheT12YWx1ZS5zcGxpdCgvXFxyXFxufFtcXHJcXG5dLyksc3BhY2VzPU51bWJlci5NQVhfVkFMVUUsaT0xLGxlbj1hcnJheS5sZW5ndGg7aTxsZW47KytpKXtmb3IobGluZT1hcnJheVtpXSxqPTA7ajxsaW5lLmxlbmd0aCYmZXN1dGlscy5jb2RlLmlzV2hpdGVTcGFjZShsaW5lLmNoYXJDb2RlQXQoaikpOykrK2o7c3BhY2VzPmomJihzcGFjZXM9aik7fWZvcih0eXBlb2Ygc3BlY2lhbEJhc2U8XCJ1XCI/KHByZXZpb3VzQmFzZT1iYXNlMixhcnJheVsxXVtzcGFjZXNdPT09XCIqXCImJihzcGVjaWFsQmFzZSs9XCIgXCIpLGJhc2UyPXNwZWNpYWxCYXNlKTooc3BhY2VzJjEmJi0tc3BhY2VzLHByZXZpb3VzQmFzZT1iYXNlMiksaT0xLGxlbj1hcnJheS5sZW5ndGg7aTxsZW47KytpKXNuPXRvU291cmNlTm9kZVdoZW5OZWVkZWQoYWRkSW5kZW50KGFycmF5W2ldLnNsaWNlKHNwYWNlcykpKSxhcnJheVtpXT1zb3VyY2VNYXA/c24uam9pbihcIlwiKTpzbjtyZXR1cm4gYmFzZTI9cHJldmlvdXNCYXNlLGFycmF5LmpvaW4oYFxuYCl9ZnVuY3Rpb24gZ2VuZXJhdGVDb21tZW50KGNvbW1lbnQsc3BlY2lhbEJhc2Upe2lmKGNvbW1lbnQudHlwZT09PVwiTGluZVwiKXtpZihlbmRzV2l0aExpbmVUZXJtaW5hdG9yKGNvbW1lbnQudmFsdWUpKXJldHVybiBcIi8vXCIrY29tbWVudC52YWx1ZTt2YXIgcmVzdWx0PVwiLy9cIitjb21tZW50LnZhbHVlO3JldHVybiBwcmVzZXJ2ZUJsYW5rTGluZXN8fChyZXN1bHQrPWBcbmApLHJlc3VsdH1yZXR1cm4gZXh0cmEuZm9ybWF0LmluZGVudC5hZGp1c3RNdWx0aWxpbmVDb21tZW50JiYvW1xcblxccl0vLnRlc3QoY29tbWVudC52YWx1ZSk/YWRqdXN0TXVsdGlsaW5lQ29tbWVudChcIi8qXCIrY29tbWVudC52YWx1ZStcIiovXCIsc3BlY2lhbEJhc2UpOlwiLypcIitjb21tZW50LnZhbHVlK1wiKi9cIn1mdW5jdGlvbiBhZGRDb21tZW50cyhzdG10LHJlc3VsdCl7dmFyIGksbGVuLGNvbW1lbnQsc2F2ZSx0YWlsaW5nVG9TdGF0ZW1lbnQsc3BlY2lhbEJhc2UsZnJhZ21lbnQsZXh0UmFuZ2UscmFuZ2UscHJldlJhbmdlLHByZWZpeCxpbmZpeCxzdWZmaXgsY291bnQ7aWYoc3RtdC5sZWFkaW5nQ29tbWVudHMmJnN0bXQubGVhZGluZ0NvbW1lbnRzLmxlbmd0aD4wKXtpZihzYXZlPXJlc3VsdCxwcmVzZXJ2ZUJsYW5rTGluZXMpe2Zvcihjb21tZW50PXN0bXQubGVhZGluZ0NvbW1lbnRzWzBdLHJlc3VsdD1bXSxleHRSYW5nZT1jb21tZW50LmV4dGVuZGVkUmFuZ2UscmFuZ2U9Y29tbWVudC5yYW5nZSxwcmVmaXg9c291cmNlQ29kZS5zdWJzdHJpbmcoZXh0UmFuZ2VbMF0scmFuZ2VbMF0pLGNvdW50PShwcmVmaXgubWF0Y2goL1xcbi9nKXx8W10pLmxlbmd0aCxjb3VudD4wPyhyZXN1bHQucHVzaChzdHJpbmdSZXBlYXQoYFxuYCxjb3VudCkpLHJlc3VsdC5wdXNoKGFkZEluZGVudChnZW5lcmF0ZUNvbW1lbnQoY29tbWVudCkpKSk6KHJlc3VsdC5wdXNoKHByZWZpeCkscmVzdWx0LnB1c2goZ2VuZXJhdGVDb21tZW50KGNvbW1lbnQpKSkscHJldlJhbmdlPXJhbmdlLGk9MSxsZW49c3RtdC5sZWFkaW5nQ29tbWVudHMubGVuZ3RoO2k8bGVuO2krKyljb21tZW50PXN0bXQubGVhZGluZ0NvbW1lbnRzW2ldLHJhbmdlPWNvbW1lbnQucmFuZ2UsaW5maXg9c291cmNlQ29kZS5zdWJzdHJpbmcocHJldlJhbmdlWzFdLHJhbmdlWzBdKSxjb3VudD0oaW5maXgubWF0Y2goL1xcbi9nKXx8W10pLmxlbmd0aCxyZXN1bHQucHVzaChzdHJpbmdSZXBlYXQoYFxuYCxjb3VudCkpLHJlc3VsdC5wdXNoKGFkZEluZGVudChnZW5lcmF0ZUNvbW1lbnQoY29tbWVudCkpKSxwcmV2UmFuZ2U9cmFuZ2U7c3VmZml4PXNvdXJjZUNvZGUuc3Vic3RyaW5nKHJhbmdlWzFdLGV4dFJhbmdlWzFdKSxjb3VudD0oc3VmZml4Lm1hdGNoKC9cXG4vZyl8fFtdKS5sZW5ndGgscmVzdWx0LnB1c2goc3RyaW5nUmVwZWF0KGBcbmAsY291bnQpKTt9ZWxzZSBmb3IoY29tbWVudD1zdG10LmxlYWRpbmdDb21tZW50c1swXSxyZXN1bHQ9W10sc2FmZUNvbmNhdGVuYXRpb24mJnN0bXQudHlwZT09PVN5bnRheC5Qcm9ncmFtJiZzdG10LmJvZHkubGVuZ3RoPT09MCYmcmVzdWx0LnB1c2goYFxuYCkscmVzdWx0LnB1c2goZ2VuZXJhdGVDb21tZW50KGNvbW1lbnQpKSxlbmRzV2l0aExpbmVUZXJtaW5hdG9yKHRvU291cmNlTm9kZVdoZW5OZWVkZWQocmVzdWx0KS50b1N0cmluZygpKXx8cmVzdWx0LnB1c2goYFxuYCksaT0xLGxlbj1zdG10LmxlYWRpbmdDb21tZW50cy5sZW5ndGg7aTxsZW47KytpKWNvbW1lbnQ9c3RtdC5sZWFkaW5nQ29tbWVudHNbaV0sZnJhZ21lbnQ9W2dlbmVyYXRlQ29tbWVudChjb21tZW50KV0sZW5kc1dpdGhMaW5lVGVybWluYXRvcih0b1NvdXJjZU5vZGVXaGVuTmVlZGVkKGZyYWdtZW50KS50b1N0cmluZygpKXx8ZnJhZ21lbnQucHVzaChgXG5gKSxyZXN1bHQucHVzaChhZGRJbmRlbnQoZnJhZ21lbnQpKTtyZXN1bHQucHVzaChhZGRJbmRlbnQoc2F2ZSkpO31pZihzdG10LnRyYWlsaW5nQ29tbWVudHMpaWYocHJlc2VydmVCbGFua0xpbmVzKWNvbW1lbnQ9c3RtdC50cmFpbGluZ0NvbW1lbnRzWzBdLGV4dFJhbmdlPWNvbW1lbnQuZXh0ZW5kZWRSYW5nZSxyYW5nZT1jb21tZW50LnJhbmdlLHByZWZpeD1zb3VyY2VDb2RlLnN1YnN0cmluZyhleHRSYW5nZVswXSxyYW5nZVswXSksY291bnQ9KHByZWZpeC5tYXRjaCgvXFxuL2cpfHxbXSkubGVuZ3RoLGNvdW50PjA/KHJlc3VsdC5wdXNoKHN0cmluZ1JlcGVhdChgXG5gLGNvdW50KSkscmVzdWx0LnB1c2goYWRkSW5kZW50KGdlbmVyYXRlQ29tbWVudChjb21tZW50KSkpKToocmVzdWx0LnB1c2gocHJlZml4KSxyZXN1bHQucHVzaChnZW5lcmF0ZUNvbW1lbnQoY29tbWVudCkpKTtlbHNlIGZvcih0YWlsaW5nVG9TdGF0ZW1lbnQ9IWVuZHNXaXRoTGluZVRlcm1pbmF0b3IodG9Tb3VyY2VOb2RlV2hlbk5lZWRlZChyZXN1bHQpLnRvU3RyaW5nKCkpLHNwZWNpYWxCYXNlPXN0cmluZ1JlcGVhdChcIiBcIixjYWxjdWxhdGVTcGFjZXModG9Tb3VyY2VOb2RlV2hlbk5lZWRlZChbYmFzZTIscmVzdWx0LGluZGVudF0pLnRvU3RyaW5nKCkpKSxpPTAsbGVuPXN0bXQudHJhaWxpbmdDb21tZW50cy5sZW5ndGg7aTxsZW47KytpKWNvbW1lbnQ9c3RtdC50cmFpbGluZ0NvbW1lbnRzW2ldLHRhaWxpbmdUb1N0YXRlbWVudD8oaT09PTA/cmVzdWx0PVtyZXN1bHQsaW5kZW50XTpyZXN1bHQ9W3Jlc3VsdCxzcGVjaWFsQmFzZV0scmVzdWx0LnB1c2goZ2VuZXJhdGVDb21tZW50KGNvbW1lbnQsc3BlY2lhbEJhc2UpKSk6cmVzdWx0PVtyZXN1bHQsYWRkSW5kZW50KGdlbmVyYXRlQ29tbWVudChjb21tZW50KSldLGkhPT1sZW4tMSYmIWVuZHNXaXRoTGluZVRlcm1pbmF0b3IodG9Tb3VyY2VOb2RlV2hlbk5lZWRlZChyZXN1bHQpLnRvU3RyaW5nKCkpJiYocmVzdWx0PVtyZXN1bHQsYFxuYF0pO3JldHVybiByZXN1bHR9ZnVuY3Rpb24gZ2VuZXJhdGVCbGFua0xpbmVzKHN0YXJ0LGVuZCxyZXN1bHQpe3ZhciBqLG5ld2xpbmVDb3VudD0wO2ZvcihqPXN0YXJ0O2o8ZW5kO2orKylzb3VyY2VDb2RlW2pdPT09YFxuYCYmbmV3bGluZUNvdW50Kys7Zm9yKGo9MTtqPG5ld2xpbmVDb3VudDtqKyspcmVzdWx0LnB1c2gobmV3bGluZSk7fWZ1bmN0aW9uIHBhcmVudGhlc2l6ZSh0ZXh0LGN1cnJlbnQyLHNob3VsZCl7cmV0dXJuIGN1cnJlbnQyPHNob3VsZD9bXCIoXCIsdGV4dCxcIilcIl06dGV4dH1mdW5jdGlvbiBnZW5lcmF0ZVZlcmJhdGltU3RyaW5nKHN0cmluZyl7dmFyIGksaXoscmVzdWx0O2ZvcihyZXN1bHQ9c3RyaW5nLnNwbGl0KC9cXHJcXG58XFxuLyksaT0xLGl6PXJlc3VsdC5sZW5ndGg7aTxpejtpKyspcmVzdWx0W2ldPW5ld2xpbmUrYmFzZTIrcmVzdWx0W2ldO3JldHVybiByZXN1bHR9ZnVuY3Rpb24gZ2VuZXJhdGVWZXJiYXRpbShleHByLHByZWNlZGVuY2Upe3ZhciB2ZXJiYXRpbSxyZXN1bHQscHJlYztyZXR1cm4gdmVyYmF0aW09ZXhwcltleHRyYS52ZXJiYXRpbV0sdHlwZW9mIHZlcmJhdGltPT1cInN0cmluZ1wiP3Jlc3VsdD1wYXJlbnRoZXNpemUoZ2VuZXJhdGVWZXJiYXRpbVN0cmluZyh2ZXJiYXRpbSksUHJlY2VkZW5jZS5TZXF1ZW5jZSxwcmVjZWRlbmNlKToocmVzdWx0PWdlbmVyYXRlVmVyYmF0aW1TdHJpbmcodmVyYmF0aW0uY29udGVudCkscHJlYz12ZXJiYXRpbS5wcmVjZWRlbmNlIT1udWxsP3ZlcmJhdGltLnByZWNlZGVuY2U6UHJlY2VkZW5jZS5TZXF1ZW5jZSxyZXN1bHQ9cGFyZW50aGVzaXplKHJlc3VsdCxwcmVjLHByZWNlZGVuY2UpKSx0b1NvdXJjZU5vZGVXaGVuTmVlZGVkKHJlc3VsdCxleHByKX1mdW5jdGlvbiBDb2RlR2VuZXJhdG9yKCl7fUNvZGVHZW5lcmF0b3IucHJvdG90eXBlLm1heWJlQmxvY2s9ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIHJlc3VsdCxub0xlYWRpbmdDb21tZW50LHRoYXQ9dGhpcztyZXR1cm4gbm9MZWFkaW5nQ29tbWVudD0hZXh0cmEuY29tbWVudHx8IXN0bXQubGVhZGluZ0NvbW1lbnRzLHN0bXQudHlwZT09PVN5bnRheC5CbG9ja1N0YXRlbWVudCYmbm9MZWFkaW5nQ29tbWVudD9bc3BhY2UsdGhpcy5nZW5lcmF0ZVN0YXRlbWVudChzdG10LGZsYWdzKV06c3RtdC50eXBlPT09U3ludGF4LkVtcHR5U3RhdGVtZW50JiZub0xlYWRpbmdDb21tZW50P1wiO1wiOih3aXRoSW5kZW50KGZ1bmN0aW9uKCl7cmVzdWx0PVtuZXdsaW5lLGFkZEluZGVudCh0aGF0LmdlbmVyYXRlU3RhdGVtZW50KHN0bXQsZmxhZ3MpKV07fSkscmVzdWx0KX0sQ29kZUdlbmVyYXRvci5wcm90b3R5cGUubWF5YmVCbG9ja1N1ZmZpeD1mdW5jdGlvbihzdG10LHJlc3VsdCl7dmFyIGVuZHM9ZW5kc1dpdGhMaW5lVGVybWluYXRvcih0b1NvdXJjZU5vZGVXaGVuTmVlZGVkKHJlc3VsdCkudG9TdHJpbmcoKSk7cmV0dXJuIHN0bXQudHlwZT09PVN5bnRheC5CbG9ja1N0YXRlbWVudCYmKCFleHRyYS5jb21tZW50fHwhc3RtdC5sZWFkaW5nQ29tbWVudHMpJiYhZW5kcz9bcmVzdWx0LHNwYWNlXTplbmRzP1tyZXN1bHQsYmFzZTJdOltyZXN1bHQsbmV3bGluZSxiYXNlMl19O2Z1bmN0aW9uIGdlbmVyYXRlSWRlbnRpZmllcihub2RlKXtyZXR1cm4gdG9Tb3VyY2VOb2RlV2hlbk5lZWRlZChub2RlLm5hbWUsbm9kZSl9ZnVuY3Rpb24gZ2VuZXJhdGVBc3luY1ByZWZpeChub2RlLHNwYWNlUmVxdWlyZWQpe3JldHVybiBub2RlLmFzeW5jP1wiYXN5bmNcIisoc3BhY2VSZXF1aXJlZD9ub0VtcHR5U3BhY2UoKTpzcGFjZSk6XCJcIn1mdW5jdGlvbiBnZW5lcmF0ZVN0YXJTdWZmaXgobm9kZSl7dmFyIGlzR2VuZXJhdG9yPW5vZGUuZ2VuZXJhdG9yJiYhZXh0cmEubW96LnN0YXJsZXNzR2VuZXJhdG9yO3JldHVybiBpc0dlbmVyYXRvcj9cIipcIitzcGFjZTpcIlwifWZ1bmN0aW9uIGdlbmVyYXRlTWV0aG9kUHJlZml4KHByb3Ape3ZhciBmdW5jPXByb3AudmFsdWUscHJlZml4PVwiXCI7cmV0dXJuIGZ1bmMuYXN5bmMmJihwcmVmaXgrPWdlbmVyYXRlQXN5bmNQcmVmaXgoZnVuYywhcHJvcC5jb21wdXRlZCkpLGZ1bmMuZ2VuZXJhdG9yJiYocHJlZml4Kz1nZW5lcmF0ZVN0YXJTdWZmaXgoZnVuYyk/XCIqXCI6XCJcIikscHJlZml4fUNvZGVHZW5lcmF0b3IucHJvdG90eXBlLmdlbmVyYXRlUGF0dGVybj1mdW5jdGlvbihub2RlLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiBub2RlLnR5cGU9PT1TeW50YXguSWRlbnRpZmllcj9nZW5lcmF0ZUlkZW50aWZpZXIobm9kZSk6dGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24obm9kZSxwcmVjZWRlbmNlLGZsYWdzKX0sQ29kZUdlbmVyYXRvci5wcm90b3R5cGUuZ2VuZXJhdGVGdW5jdGlvblBhcmFtcz1mdW5jdGlvbihub2RlKXt2YXIgaSxpeixyZXN1bHQsaGFzRGVmYXVsdDtpZihoYXNEZWZhdWx0PSExLG5vZGUudHlwZT09PVN5bnRheC5BcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbiYmIW5vZGUucmVzdCYmKCFub2RlLmRlZmF1bHRzfHxub2RlLmRlZmF1bHRzLmxlbmd0aD09PTApJiZub2RlLnBhcmFtcy5sZW5ndGg9PT0xJiZub2RlLnBhcmFtc1swXS50eXBlPT09U3ludGF4LklkZW50aWZpZXIpcmVzdWx0PVtnZW5lcmF0ZUFzeW5jUHJlZml4KG5vZGUsITApLGdlbmVyYXRlSWRlbnRpZmllcihub2RlLnBhcmFtc1swXSldO2Vsc2Uge2ZvcihyZXN1bHQ9bm9kZS50eXBlPT09U3ludGF4LkFycm93RnVuY3Rpb25FeHByZXNzaW9uP1tnZW5lcmF0ZUFzeW5jUHJlZml4KG5vZGUsITEpXTpbXSxyZXN1bHQucHVzaChcIihcIiksbm9kZS5kZWZhdWx0cyYmKGhhc0RlZmF1bHQ9ITApLGk9MCxpej1ub2RlLnBhcmFtcy5sZW5ndGg7aTxpejsrK2kpaGFzRGVmYXVsdCYmbm9kZS5kZWZhdWx0c1tpXT9yZXN1bHQucHVzaCh0aGlzLmdlbmVyYXRlQXNzaWdubWVudChub2RlLnBhcmFtc1tpXSxub2RlLmRlZmF1bHRzW2ldLFwiPVwiLFByZWNlZGVuY2UuQXNzaWdubWVudCxFX1RUVCkpOnJlc3VsdC5wdXNoKHRoaXMuZ2VuZXJhdGVQYXR0ZXJuKG5vZGUucGFyYW1zW2ldLFByZWNlZGVuY2UuQXNzaWdubWVudCxFX1RUVCkpLGkrMTxpeiYmcmVzdWx0LnB1c2goXCIsXCIrc3BhY2UpO25vZGUucmVzdCYmKG5vZGUucGFyYW1zLmxlbmd0aCYmcmVzdWx0LnB1c2goXCIsXCIrc3BhY2UpLHJlc3VsdC5wdXNoKFwiLi4uXCIpLHJlc3VsdC5wdXNoKGdlbmVyYXRlSWRlbnRpZmllcihub2RlLnJlc3QpKSkscmVzdWx0LnB1c2goXCIpXCIpO31yZXR1cm4gcmVzdWx0fSxDb2RlR2VuZXJhdG9yLnByb3RvdHlwZS5nZW5lcmF0ZUZ1bmN0aW9uQm9keT1mdW5jdGlvbihub2RlKXt2YXIgcmVzdWx0LGV4cHI7cmV0dXJuIHJlc3VsdD10aGlzLmdlbmVyYXRlRnVuY3Rpb25QYXJhbXMobm9kZSksbm9kZS50eXBlPT09U3ludGF4LkFycm93RnVuY3Rpb25FeHByZXNzaW9uJiYocmVzdWx0LnB1c2goc3BhY2UpLHJlc3VsdC5wdXNoKFwiPT5cIikpLG5vZGUuZXhwcmVzc2lvbj8ocmVzdWx0LnB1c2goc3BhY2UpLGV4cHI9dGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24obm9kZS5ib2R5LFByZWNlZGVuY2UuQXNzaWdubWVudCxFX1RUVCksZXhwci50b1N0cmluZygpLmNoYXJBdCgwKT09PVwie1wiJiYoZXhwcj1bXCIoXCIsZXhwcixcIilcIl0pLHJlc3VsdC5wdXNoKGV4cHIpKTpyZXN1bHQucHVzaCh0aGlzLm1heWJlQmxvY2sobm9kZS5ib2R5LFNfVFRGRikpLHJlc3VsdH0sQ29kZUdlbmVyYXRvci5wcm90b3R5cGUuZ2VuZXJhdGVJdGVyYXRpb25Gb3JTdGF0ZW1lbnQ9ZnVuY3Rpb24ob3BlcmF0b3Isc3RtdCxmbGFncyl7dmFyIHJlc3VsdD1bXCJmb3JcIisoc3RtdC5hd2FpdD9ub0VtcHR5U3BhY2UoKStcImF3YWl0XCI6XCJcIikrc3BhY2UrXCIoXCJdLHRoYXQ9dGhpcztyZXR1cm4gd2l0aEluZGVudChmdW5jdGlvbigpe3N0bXQubGVmdC50eXBlPT09U3ludGF4LlZhcmlhYmxlRGVjbGFyYXRpb24/d2l0aEluZGVudChmdW5jdGlvbigpe3Jlc3VsdC5wdXNoKHN0bXQubGVmdC5raW5kK25vRW1wdHlTcGFjZSgpKSxyZXN1bHQucHVzaCh0aGF0LmdlbmVyYXRlU3RhdGVtZW50KHN0bXQubGVmdC5kZWNsYXJhdGlvbnNbMF0sU19GRkZGKSk7fSk6cmVzdWx0LnB1c2godGhhdC5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC5sZWZ0LFByZWNlZGVuY2UuQ2FsbCxFX1RUVCkpLHJlc3VsdD1qb2luKHJlc3VsdCxvcGVyYXRvcikscmVzdWx0PVtqb2luKHJlc3VsdCx0aGF0LmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LnJpZ2h0LFByZWNlZGVuY2UuQXNzaWdubWVudCxFX1RUVCkpLFwiKVwiXTt9KSxyZXN1bHQucHVzaCh0aGlzLm1heWJlQmxvY2soc3RtdC5ib2R5LGZsYWdzKSkscmVzdWx0fSxDb2RlR2VuZXJhdG9yLnByb3RvdHlwZS5nZW5lcmF0ZVByb3BlcnR5S2V5PWZ1bmN0aW9uKGV4cHIsY29tcHV0ZWQpe3ZhciByZXN1bHQ9W107cmV0dXJuIGNvbXB1dGVkJiZyZXN1bHQucHVzaChcIltcIikscmVzdWx0LnB1c2godGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwcixQcmVjZWRlbmNlLkFzc2lnbm1lbnQsRV9UVFQpKSxjb21wdXRlZCYmcmVzdWx0LnB1c2goXCJdXCIpLHJlc3VsdH0sQ29kZUdlbmVyYXRvci5wcm90b3R5cGUuZ2VuZXJhdGVBc3NpZ25tZW50PWZ1bmN0aW9uKGxlZnQscmlnaHQsb3BlcmF0b3IscHJlY2VkZW5jZSxmbGFncyl7cmV0dXJuIFByZWNlZGVuY2UuQXNzaWdubWVudDxwcmVjZWRlbmNlJiYoZmxhZ3N8PUZfQUxMT1dfSU4pLHBhcmVudGhlc2l6ZShbdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24obGVmdCxQcmVjZWRlbmNlLkNhbGwsZmxhZ3MpLHNwYWNlK29wZXJhdG9yK3NwYWNlLHRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKHJpZ2h0LFByZWNlZGVuY2UuQXNzaWdubWVudCxmbGFncyldLFByZWNlZGVuY2UuQXNzaWdubWVudCxwcmVjZWRlbmNlKX0sQ29kZUdlbmVyYXRvci5wcm90b3R5cGUuc2VtaWNvbG9uPWZ1bmN0aW9uKGZsYWdzKXtyZXR1cm4gIXNlbWljb2xvbnMmJmZsYWdzJkZfU0VNSUNPTE9OX09QVD9cIlwiOlwiO1wifSxDb2RlR2VuZXJhdG9yLlN0YXRlbWVudD17QmxvY2tTdGF0ZW1lbnQ6ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIHJhbmdlLGNvbnRlbnQscmVzdWx0PVtcIntcIixuZXdsaW5lXSx0aGF0PXRoaXM7cmV0dXJuIHdpdGhJbmRlbnQoZnVuY3Rpb24oKXtzdG10LmJvZHkubGVuZ3RoPT09MCYmcHJlc2VydmVCbGFua0xpbmVzJiYocmFuZ2U9c3RtdC5yYW5nZSxyYW5nZVsxXS1yYW5nZVswXT4yJiYoY29udGVudD1zb3VyY2VDb2RlLnN1YnN0cmluZyhyYW5nZVswXSsxLHJhbmdlWzFdLTEpLGNvbnRlbnRbMF09PT1gXG5gJiYocmVzdWx0PVtcIntcIl0pLHJlc3VsdC5wdXNoKGNvbnRlbnQpKSk7dmFyIGksaXosZnJhZ21lbnQsYm9keUZsYWdzO2Zvcihib2R5RmxhZ3M9U19URkZGLGZsYWdzJkZfRlVOQ19CT0RZJiYoYm9keUZsYWdzfD1GX0RJUkVDVElWRV9DVFgpLGk9MCxpej1zdG10LmJvZHkubGVuZ3RoO2k8aXo7KytpKXByZXNlcnZlQmxhbmtMaW5lcyYmKGk9PT0wJiYoc3RtdC5ib2R5WzBdLmxlYWRpbmdDb21tZW50cyYmKHJhbmdlPXN0bXQuYm9keVswXS5sZWFkaW5nQ29tbWVudHNbMF0uZXh0ZW5kZWRSYW5nZSxjb250ZW50PXNvdXJjZUNvZGUuc3Vic3RyaW5nKHJhbmdlWzBdLHJhbmdlWzFdKSxjb250ZW50WzBdPT09YFxuYCYmKHJlc3VsdD1bXCJ7XCJdKSksc3RtdC5ib2R5WzBdLmxlYWRpbmdDb21tZW50c3x8Z2VuZXJhdGVCbGFua0xpbmVzKHN0bXQucmFuZ2VbMF0sc3RtdC5ib2R5WzBdLnJhbmdlWzBdLHJlc3VsdCkpLGk+MCYmIXN0bXQuYm9keVtpLTFdLnRyYWlsaW5nQ29tbWVudHMmJiFzdG10LmJvZHlbaV0ubGVhZGluZ0NvbW1lbnRzJiZnZW5lcmF0ZUJsYW5rTGluZXMoc3RtdC5ib2R5W2ktMV0ucmFuZ2VbMV0sc3RtdC5ib2R5W2ldLnJhbmdlWzBdLHJlc3VsdCkpLGk9PT1pei0xJiYoYm9keUZsYWdzfD1GX1NFTUlDT0xPTl9PUFQpLHN0bXQuYm9keVtpXS5sZWFkaW5nQ29tbWVudHMmJnByZXNlcnZlQmxhbmtMaW5lcz9mcmFnbWVudD10aGF0LmdlbmVyYXRlU3RhdGVtZW50KHN0bXQuYm9keVtpXSxib2R5RmxhZ3MpOmZyYWdtZW50PWFkZEluZGVudCh0aGF0LmdlbmVyYXRlU3RhdGVtZW50KHN0bXQuYm9keVtpXSxib2R5RmxhZ3MpKSxyZXN1bHQucHVzaChmcmFnbWVudCksZW5kc1dpdGhMaW5lVGVybWluYXRvcih0b1NvdXJjZU5vZGVXaGVuTmVlZGVkKGZyYWdtZW50KS50b1N0cmluZygpKXx8cHJlc2VydmVCbGFua0xpbmVzJiZpPGl6LTEmJnN0bXQuYm9keVtpKzFdLmxlYWRpbmdDb21tZW50c3x8cmVzdWx0LnB1c2gobmV3bGluZSkscHJlc2VydmVCbGFua0xpbmVzJiZpPT09aXotMSYmKHN0bXQuYm9keVtpXS50cmFpbGluZ0NvbW1lbnRzfHxnZW5lcmF0ZUJsYW5rTGluZXMoc3RtdC5ib2R5W2ldLnJhbmdlWzFdLHN0bXQucmFuZ2VbMV0scmVzdWx0KSk7fSkscmVzdWx0LnB1c2goYWRkSW5kZW50KFwifVwiKSkscmVzdWx0fSxCcmVha1N0YXRlbWVudDpmdW5jdGlvbihzdG10LGZsYWdzKXtyZXR1cm4gc3RtdC5sYWJlbD9cImJyZWFrIFwiK3N0bXQubGFiZWwubmFtZSt0aGlzLnNlbWljb2xvbihmbGFncyk6XCJicmVha1wiK3RoaXMuc2VtaWNvbG9uKGZsYWdzKX0sQ29udGludWVTdGF0ZW1lbnQ6ZnVuY3Rpb24oc3RtdCxmbGFncyl7cmV0dXJuIHN0bXQubGFiZWw/XCJjb250aW51ZSBcIitzdG10LmxhYmVsLm5hbWUrdGhpcy5zZW1pY29sb24oZmxhZ3MpOlwiY29udGludWVcIit0aGlzLnNlbWljb2xvbihmbGFncyl9LENsYXNzQm9keTpmdW5jdGlvbihzdG10LGZsYWdzKXt2YXIgcmVzdWx0PVtcIntcIixuZXdsaW5lXSx0aGF0PXRoaXM7cmV0dXJuIHdpdGhJbmRlbnQoZnVuY3Rpb24oaW5kZW50Mil7dmFyIGksaXo7Zm9yKGk9MCxpej1zdG10LmJvZHkubGVuZ3RoO2k8aXo7KytpKXJlc3VsdC5wdXNoKGluZGVudDIpLHJlc3VsdC5wdXNoKHRoYXQuZ2VuZXJhdGVFeHByZXNzaW9uKHN0bXQuYm9keVtpXSxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSksaSsxPGl6JiZyZXN1bHQucHVzaChuZXdsaW5lKTt9KSxlbmRzV2l0aExpbmVUZXJtaW5hdG9yKHRvU291cmNlTm9kZVdoZW5OZWVkZWQocmVzdWx0KS50b1N0cmluZygpKXx8cmVzdWx0LnB1c2gobmV3bGluZSkscmVzdWx0LnB1c2goYmFzZTIpLHJlc3VsdC5wdXNoKFwifVwiKSxyZXN1bHR9LENsYXNzRGVjbGFyYXRpb246ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIHJlc3VsdCxmcmFnbWVudDtyZXR1cm4gcmVzdWx0PVtcImNsYXNzXCJdLHN0bXQuaWQmJihyZXN1bHQ9am9pbihyZXN1bHQsdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC5pZCxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSkpLHN0bXQuc3VwZXJDbGFzcyYmKGZyYWdtZW50PWpvaW4oXCJleHRlbmRzXCIsdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC5zdXBlckNsYXNzLFByZWNlZGVuY2UuVW5hcnksRV9UVFQpKSxyZXN1bHQ9am9pbihyZXN1bHQsZnJhZ21lbnQpKSxyZXN1bHQucHVzaChzcGFjZSkscmVzdWx0LnB1c2godGhpcy5nZW5lcmF0ZVN0YXRlbWVudChzdG10LmJvZHksU19URkZUKSkscmVzdWx0fSxEaXJlY3RpdmVTdGF0ZW1lbnQ6ZnVuY3Rpb24oc3RtdCxmbGFncyl7cmV0dXJuIGV4dHJhLnJhdyYmc3RtdC5yYXc/c3RtdC5yYXcrdGhpcy5zZW1pY29sb24oZmxhZ3MpOmVzY2FwZURpcmVjdGl2ZShzdG10LmRpcmVjdGl2ZSkrdGhpcy5zZW1pY29sb24oZmxhZ3MpfSxEb1doaWxlU3RhdGVtZW50OmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3ZhciByZXN1bHQ9am9pbihcImRvXCIsdGhpcy5tYXliZUJsb2NrKHN0bXQuYm9keSxTX1RGRkYpKTtyZXR1cm4gcmVzdWx0PXRoaXMubWF5YmVCbG9ja1N1ZmZpeChzdG10LmJvZHkscmVzdWx0KSxqb2luKHJlc3VsdCxbXCJ3aGlsZVwiK3NwYWNlK1wiKFwiLHRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKHN0bXQudGVzdCxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSxcIilcIit0aGlzLnNlbWljb2xvbihmbGFncyldKX0sQ2F0Y2hDbGF1c2U6ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIHJlc3VsdCx0aGF0PXRoaXM7cmV0dXJuIHdpdGhJbmRlbnQoZnVuY3Rpb24oKXt2YXIgZ3VhcmQ7c3RtdC5wYXJhbT8ocmVzdWx0PVtcImNhdGNoXCIrc3BhY2UrXCIoXCIsdGhhdC5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC5wYXJhbSxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSxcIilcIl0sc3RtdC5ndWFyZCYmKGd1YXJkPXRoYXQuZ2VuZXJhdGVFeHByZXNzaW9uKHN0bXQuZ3VhcmQsUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCkscmVzdWx0LnNwbGljZSgyLDAsXCIgaWYgXCIsZ3VhcmQpKSk6cmVzdWx0PVtcImNhdGNoXCJdO30pLHJlc3VsdC5wdXNoKHRoaXMubWF5YmVCbG9jayhzdG10LmJvZHksU19URkZGKSkscmVzdWx0fSxEZWJ1Z2dlclN0YXRlbWVudDpmdW5jdGlvbihzdG10LGZsYWdzKXtyZXR1cm4gXCJkZWJ1Z2dlclwiK3RoaXMuc2VtaWNvbG9uKGZsYWdzKX0sRW1wdHlTdGF0ZW1lbnQ6ZnVuY3Rpb24oc3RtdCxmbGFncyl7cmV0dXJuIFwiO1wifSxFeHBvcnREZWZhdWx0RGVjbGFyYXRpb246ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIHJlc3VsdD1bXCJleHBvcnRcIl0sYm9keUZsYWdzO3JldHVybiBib2R5RmxhZ3M9ZmxhZ3MmRl9TRU1JQ09MT05fT1BUP1NfVEZGVDpTX1RGRkYscmVzdWx0PWpvaW4ocmVzdWx0LFwiZGVmYXVsdFwiKSxpc1N0YXRlbWVudChzdG10LmRlY2xhcmF0aW9uKT9yZXN1bHQ9am9pbihyZXN1bHQsdGhpcy5nZW5lcmF0ZVN0YXRlbWVudChzdG10LmRlY2xhcmF0aW9uLGJvZHlGbGFncykpOnJlc3VsdD1qb2luKHJlc3VsdCx0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LmRlY2xhcmF0aW9uLFByZWNlZGVuY2UuQXNzaWdubWVudCxFX1RUVCkrdGhpcy5zZW1pY29sb24oZmxhZ3MpKSxyZXN1bHR9LEV4cG9ydE5hbWVkRGVjbGFyYXRpb246ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIHJlc3VsdD1bXCJleHBvcnRcIl0sYm9keUZsYWdzLHRoYXQ9dGhpcztyZXR1cm4gYm9keUZsYWdzPWZsYWdzJkZfU0VNSUNPTE9OX09QVD9TX1RGRlQ6U19URkZGLHN0bXQuZGVjbGFyYXRpb24/am9pbihyZXN1bHQsdGhpcy5nZW5lcmF0ZVN0YXRlbWVudChzdG10LmRlY2xhcmF0aW9uLGJvZHlGbGFncykpOihzdG10LnNwZWNpZmllcnMmJihzdG10LnNwZWNpZmllcnMubGVuZ3RoPT09MD9yZXN1bHQ9am9pbihyZXN1bHQsXCJ7XCIrc3BhY2UrXCJ9XCIpOnN0bXQuc3BlY2lmaWVyc1swXS50eXBlPT09U3ludGF4LkV4cG9ydEJhdGNoU3BlY2lmaWVyP3Jlc3VsdD1qb2luKHJlc3VsdCx0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LnNwZWNpZmllcnNbMF0sUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCkpOihyZXN1bHQ9am9pbihyZXN1bHQsXCJ7XCIpLHdpdGhJbmRlbnQoZnVuY3Rpb24oaW5kZW50Mil7dmFyIGksaXo7Zm9yKHJlc3VsdC5wdXNoKG5ld2xpbmUpLGk9MCxpej1zdG10LnNwZWNpZmllcnMubGVuZ3RoO2k8aXo7KytpKXJlc3VsdC5wdXNoKGluZGVudDIpLHJlc3VsdC5wdXNoKHRoYXQuZ2VuZXJhdGVFeHByZXNzaW9uKHN0bXQuc3BlY2lmaWVyc1tpXSxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSksaSsxPGl6JiZyZXN1bHQucHVzaChcIixcIituZXdsaW5lKTt9KSxlbmRzV2l0aExpbmVUZXJtaW5hdG9yKHRvU291cmNlTm9kZVdoZW5OZWVkZWQocmVzdWx0KS50b1N0cmluZygpKXx8cmVzdWx0LnB1c2gobmV3bGluZSkscmVzdWx0LnB1c2goYmFzZTIrXCJ9XCIpKSxzdG10LnNvdXJjZT9yZXN1bHQ9am9pbihyZXN1bHQsW1wiZnJvbVwiK3NwYWNlLHRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKHN0bXQuc291cmNlLFByZWNlZGVuY2UuU2VxdWVuY2UsRV9UVFQpLHRoaXMuc2VtaWNvbG9uKGZsYWdzKV0pOnJlc3VsdC5wdXNoKHRoaXMuc2VtaWNvbG9uKGZsYWdzKSkpLHJlc3VsdCl9LEV4cG9ydEFsbERlY2xhcmF0aW9uOmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3JldHVybiBbXCJleHBvcnRcIitzcGFjZSxcIipcIitzcGFjZSxcImZyb21cIitzcGFjZSx0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LnNvdXJjZSxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSx0aGlzLnNlbWljb2xvbihmbGFncyldfSxFeHByZXNzaW9uU3RhdGVtZW50OmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3ZhciByZXN1bHQsZnJhZ21lbnQ7ZnVuY3Rpb24gaXNDbGFzc1ByZWZpeGVkKGZyYWdtZW50Mil7dmFyIGNvZGU7cmV0dXJuIGZyYWdtZW50Mi5zbGljZSgwLDUpIT09XCJjbGFzc1wiPyExOihjb2RlPWZyYWdtZW50Mi5jaGFyQ29kZUF0KDUpLGNvZGU9PT0xMjN8fGVzdXRpbHMuY29kZS5pc1doaXRlU3BhY2UoY29kZSl8fGVzdXRpbHMuY29kZS5pc0xpbmVUZXJtaW5hdG9yKGNvZGUpKX1mdW5jdGlvbiBpc0Z1bmN0aW9uUHJlZml4ZWQoZnJhZ21lbnQyKXt2YXIgY29kZTtyZXR1cm4gZnJhZ21lbnQyLnNsaWNlKDAsOCkhPT1cImZ1bmN0aW9uXCI/ITE6KGNvZGU9ZnJhZ21lbnQyLmNoYXJDb2RlQXQoOCksY29kZT09PTQwfHxlc3V0aWxzLmNvZGUuaXNXaGl0ZVNwYWNlKGNvZGUpfHxjb2RlPT09NDJ8fGVzdXRpbHMuY29kZS5pc0xpbmVUZXJtaW5hdG9yKGNvZGUpKX1mdW5jdGlvbiBpc0FzeW5jUHJlZml4ZWQoZnJhZ21lbnQyKXt2YXIgY29kZSxpLGl6O2lmKGZyYWdtZW50Mi5zbGljZSgwLDUpIT09XCJhc3luY1wifHwhZXN1dGlscy5jb2RlLmlzV2hpdGVTcGFjZShmcmFnbWVudDIuY2hhckNvZGVBdCg1KSkpcmV0dXJuICExO2ZvcihpPTYsaXo9ZnJhZ21lbnQyLmxlbmd0aDtpPGl6JiZlc3V0aWxzLmNvZGUuaXNXaGl0ZVNwYWNlKGZyYWdtZW50Mi5jaGFyQ29kZUF0KGkpKTsrK2kpO3JldHVybiBpPT09aXp8fGZyYWdtZW50Mi5zbGljZShpLGkrOCkhPT1cImZ1bmN0aW9uXCI/ITE6KGNvZGU9ZnJhZ21lbnQyLmNoYXJDb2RlQXQoaSs4KSxjb2RlPT09NDB8fGVzdXRpbHMuY29kZS5pc1doaXRlU3BhY2UoY29kZSl8fGNvZGU9PT00Mnx8ZXN1dGlscy5jb2RlLmlzTGluZVRlcm1pbmF0b3IoY29kZSkpfXJldHVybiByZXN1bHQ9W3RoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKHN0bXQuZXhwcmVzc2lvbixQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKV0sZnJhZ21lbnQ9dG9Tb3VyY2VOb2RlV2hlbk5lZWRlZChyZXN1bHQpLnRvU3RyaW5nKCksZnJhZ21lbnQuY2hhckNvZGVBdCgwKT09PTEyM3x8aXNDbGFzc1ByZWZpeGVkKGZyYWdtZW50KXx8aXNGdW5jdGlvblByZWZpeGVkKGZyYWdtZW50KXx8aXNBc3luY1ByZWZpeGVkKGZyYWdtZW50KXx8ZGlyZWN0aXZlJiZmbGFncyZGX0RJUkVDVElWRV9DVFgmJnN0bXQuZXhwcmVzc2lvbi50eXBlPT09U3ludGF4LkxpdGVyYWwmJnR5cGVvZiBzdG10LmV4cHJlc3Npb24udmFsdWU9PVwic3RyaW5nXCI/cmVzdWx0PVtcIihcIixyZXN1bHQsXCIpXCIrdGhpcy5zZW1pY29sb24oZmxhZ3MpXTpyZXN1bHQucHVzaCh0aGlzLnNlbWljb2xvbihmbGFncykpLHJlc3VsdH0sSW1wb3J0RGVjbGFyYXRpb246ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIHJlc3VsdCxjdXJzb3IsdGhhdD10aGlzO3JldHVybiBzdG10LnNwZWNpZmllcnMubGVuZ3RoPT09MD9bXCJpbXBvcnRcIixzcGFjZSx0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LnNvdXJjZSxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSx0aGlzLnNlbWljb2xvbihmbGFncyldOihyZXN1bHQ9W1wiaW1wb3J0XCJdLGN1cnNvcj0wLHN0bXQuc3BlY2lmaWVyc1tjdXJzb3JdLnR5cGU9PT1TeW50YXguSW1wb3J0RGVmYXVsdFNwZWNpZmllciYmKHJlc3VsdD1qb2luKHJlc3VsdCxbdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC5zcGVjaWZpZXJzW2N1cnNvcl0sUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCldKSwrK2N1cnNvciksc3RtdC5zcGVjaWZpZXJzW2N1cnNvcl0mJihjdXJzb3IhPT0wJiZyZXN1bHQucHVzaChcIixcIiksc3RtdC5zcGVjaWZpZXJzW2N1cnNvcl0udHlwZT09PVN5bnRheC5JbXBvcnROYW1lc3BhY2VTcGVjaWZpZXI/cmVzdWx0PWpvaW4ocmVzdWx0LFtzcGFjZSx0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LnNwZWNpZmllcnNbY3Vyc29yXSxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKV0pOihyZXN1bHQucHVzaChzcGFjZStcIntcIiksc3RtdC5zcGVjaWZpZXJzLmxlbmd0aC1jdXJzb3I9PT0xPyhyZXN1bHQucHVzaChzcGFjZSkscmVzdWx0LnB1c2godGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC5zcGVjaWZpZXJzW2N1cnNvcl0sUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCkpLHJlc3VsdC5wdXNoKHNwYWNlK1wifVwiK3NwYWNlKSk6KHdpdGhJbmRlbnQoZnVuY3Rpb24oaW5kZW50Mil7dmFyIGksaXo7Zm9yKHJlc3VsdC5wdXNoKG5ld2xpbmUpLGk9Y3Vyc29yLGl6PXN0bXQuc3BlY2lmaWVycy5sZW5ndGg7aTxpejsrK2kpcmVzdWx0LnB1c2goaW5kZW50MikscmVzdWx0LnB1c2godGhhdC5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC5zcGVjaWZpZXJzW2ldLFByZWNlZGVuY2UuU2VxdWVuY2UsRV9UVFQpKSxpKzE8aXomJnJlc3VsdC5wdXNoKFwiLFwiK25ld2xpbmUpO30pLGVuZHNXaXRoTGluZVRlcm1pbmF0b3IodG9Tb3VyY2VOb2RlV2hlbk5lZWRlZChyZXN1bHQpLnRvU3RyaW5nKCkpfHxyZXN1bHQucHVzaChuZXdsaW5lKSxyZXN1bHQucHVzaChiYXNlMitcIn1cIitzcGFjZSkpKSkscmVzdWx0PWpvaW4ocmVzdWx0LFtcImZyb21cIitzcGFjZSx0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LnNvdXJjZSxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSx0aGlzLnNlbWljb2xvbihmbGFncyldKSxyZXN1bHQpfSxWYXJpYWJsZURlY2xhcmF0b3I6ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIGl0ZW1GbGFncz1mbGFncyZGX0FMTE9XX0lOP0VfVFRUOkVfRlRUO3JldHVybiBzdG10LmluaXQ/W3RoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKHN0bXQuaWQsUHJlY2VkZW5jZS5Bc3NpZ25tZW50LGl0ZW1GbGFncyksc3BhY2UsXCI9XCIsc3BhY2UsdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC5pbml0LFByZWNlZGVuY2UuQXNzaWdubWVudCxpdGVtRmxhZ3MpXTp0aGlzLmdlbmVyYXRlUGF0dGVybihzdG10LmlkLFByZWNlZGVuY2UuQXNzaWdubWVudCxpdGVtRmxhZ3MpfSxWYXJpYWJsZURlY2xhcmF0aW9uOmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3ZhciByZXN1bHQsaSxpeixub2RlLGJvZHlGbGFncyx0aGF0PXRoaXM7cmVzdWx0PVtzdG10LmtpbmRdLGJvZHlGbGFncz1mbGFncyZGX0FMTE9XX0lOP1NfVEZGRjpTX0ZGRkY7ZnVuY3Rpb24gYmxvY2soKXtmb3Iobm9kZT1zdG10LmRlY2xhcmF0aW9uc1swXSxleHRyYS5jb21tZW50JiZub2RlLmxlYWRpbmdDb21tZW50cz8ocmVzdWx0LnB1c2goYFxuYCkscmVzdWx0LnB1c2goYWRkSW5kZW50KHRoYXQuZ2VuZXJhdGVTdGF0ZW1lbnQobm9kZSxib2R5RmxhZ3MpKSkpOihyZXN1bHQucHVzaChub0VtcHR5U3BhY2UoKSkscmVzdWx0LnB1c2godGhhdC5nZW5lcmF0ZVN0YXRlbWVudChub2RlLGJvZHlGbGFncykpKSxpPTEsaXo9c3RtdC5kZWNsYXJhdGlvbnMubGVuZ3RoO2k8aXo7KytpKW5vZGU9c3RtdC5kZWNsYXJhdGlvbnNbaV0sZXh0cmEuY29tbWVudCYmbm9kZS5sZWFkaW5nQ29tbWVudHM/KHJlc3VsdC5wdXNoKFwiLFwiK25ld2xpbmUpLHJlc3VsdC5wdXNoKGFkZEluZGVudCh0aGF0LmdlbmVyYXRlU3RhdGVtZW50KG5vZGUsYm9keUZsYWdzKSkpKToocmVzdWx0LnB1c2goXCIsXCIrc3BhY2UpLHJlc3VsdC5wdXNoKHRoYXQuZ2VuZXJhdGVTdGF0ZW1lbnQobm9kZSxib2R5RmxhZ3MpKSk7fXJldHVybiBzdG10LmRlY2xhcmF0aW9ucy5sZW5ndGg+MT93aXRoSW5kZW50KGJsb2NrKTpibG9jaygpLHJlc3VsdC5wdXNoKHRoaXMuc2VtaWNvbG9uKGZsYWdzKSkscmVzdWx0fSxUaHJvd1N0YXRlbWVudDpmdW5jdGlvbihzdG10LGZsYWdzKXtyZXR1cm4gW2pvaW4oXCJ0aHJvd1wiLHRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKHN0bXQuYXJndW1lbnQsUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCkpLHRoaXMuc2VtaWNvbG9uKGZsYWdzKV19LFRyeVN0YXRlbWVudDpmdW5jdGlvbihzdG10LGZsYWdzKXt2YXIgcmVzdWx0LGksaXosZ3VhcmRlZEhhbmRsZXJzO2lmKHJlc3VsdD1bXCJ0cnlcIix0aGlzLm1heWJlQmxvY2soc3RtdC5ibG9jayxTX1RGRkYpXSxyZXN1bHQ9dGhpcy5tYXliZUJsb2NrU3VmZml4KHN0bXQuYmxvY2sscmVzdWx0KSxzdG10LmhhbmRsZXJzKWZvcihpPTAsaXo9c3RtdC5oYW5kbGVycy5sZW5ndGg7aTxpejsrK2kpcmVzdWx0PWpvaW4ocmVzdWx0LHRoaXMuZ2VuZXJhdGVTdGF0ZW1lbnQoc3RtdC5oYW5kbGVyc1tpXSxTX1RGRkYpKSwoc3RtdC5maW5hbGl6ZXJ8fGkrMSE9PWl6KSYmKHJlc3VsdD10aGlzLm1heWJlQmxvY2tTdWZmaXgoc3RtdC5oYW5kbGVyc1tpXS5ib2R5LHJlc3VsdCkpO2Vsc2Uge2ZvcihndWFyZGVkSGFuZGxlcnM9c3RtdC5ndWFyZGVkSGFuZGxlcnN8fFtdLGk9MCxpej1ndWFyZGVkSGFuZGxlcnMubGVuZ3RoO2k8aXo7KytpKXJlc3VsdD1qb2luKHJlc3VsdCx0aGlzLmdlbmVyYXRlU3RhdGVtZW50KGd1YXJkZWRIYW5kbGVyc1tpXSxTX1RGRkYpKSwoc3RtdC5maW5hbGl6ZXJ8fGkrMSE9PWl6KSYmKHJlc3VsdD10aGlzLm1heWJlQmxvY2tTdWZmaXgoZ3VhcmRlZEhhbmRsZXJzW2ldLmJvZHkscmVzdWx0KSk7aWYoc3RtdC5oYW5kbGVyKWlmKEFycmF5LmlzQXJyYXkoc3RtdC5oYW5kbGVyKSlmb3IoaT0wLGl6PXN0bXQuaGFuZGxlci5sZW5ndGg7aTxpejsrK2kpcmVzdWx0PWpvaW4ocmVzdWx0LHRoaXMuZ2VuZXJhdGVTdGF0ZW1lbnQoc3RtdC5oYW5kbGVyW2ldLFNfVEZGRikpLChzdG10LmZpbmFsaXplcnx8aSsxIT09aXopJiYocmVzdWx0PXRoaXMubWF5YmVCbG9ja1N1ZmZpeChzdG10LmhhbmRsZXJbaV0uYm9keSxyZXN1bHQpKTtlbHNlIHJlc3VsdD1qb2luKHJlc3VsdCx0aGlzLmdlbmVyYXRlU3RhdGVtZW50KHN0bXQuaGFuZGxlcixTX1RGRkYpKSxzdG10LmZpbmFsaXplciYmKHJlc3VsdD10aGlzLm1heWJlQmxvY2tTdWZmaXgoc3RtdC5oYW5kbGVyLmJvZHkscmVzdWx0KSk7fXJldHVybiBzdG10LmZpbmFsaXplciYmKHJlc3VsdD1qb2luKHJlc3VsdCxbXCJmaW5hbGx5XCIsdGhpcy5tYXliZUJsb2NrKHN0bXQuZmluYWxpemVyLFNfVEZGRildKSkscmVzdWx0fSxTd2l0Y2hTdGF0ZW1lbnQ6ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIHJlc3VsdCxmcmFnbWVudCxpLGl6LGJvZHlGbGFncyx0aGF0PXRoaXM7aWYod2l0aEluZGVudChmdW5jdGlvbigpe3Jlc3VsdD1bXCJzd2l0Y2hcIitzcGFjZStcIihcIix0aGF0LmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LmRpc2NyaW1pbmFudCxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSxcIilcIitzcGFjZStcIntcIituZXdsaW5lXTt9KSxzdG10LmNhc2VzKWZvcihib2R5RmxhZ3M9U19URkZGLGk9MCxpej1zdG10LmNhc2VzLmxlbmd0aDtpPGl6OysraSlpPT09aXotMSYmKGJvZHlGbGFnc3w9Rl9TRU1JQ09MT05fT1BUKSxmcmFnbWVudD1hZGRJbmRlbnQodGhpcy5nZW5lcmF0ZVN0YXRlbWVudChzdG10LmNhc2VzW2ldLGJvZHlGbGFncykpLHJlc3VsdC5wdXNoKGZyYWdtZW50KSxlbmRzV2l0aExpbmVUZXJtaW5hdG9yKHRvU291cmNlTm9kZVdoZW5OZWVkZWQoZnJhZ21lbnQpLnRvU3RyaW5nKCkpfHxyZXN1bHQucHVzaChuZXdsaW5lKTtyZXR1cm4gcmVzdWx0LnB1c2goYWRkSW5kZW50KFwifVwiKSkscmVzdWx0fSxTd2l0Y2hDYXNlOmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3ZhciByZXN1bHQsZnJhZ21lbnQsaSxpeixib2R5RmxhZ3MsdGhhdD10aGlzO3JldHVybiB3aXRoSW5kZW50KGZ1bmN0aW9uKCl7Zm9yKHN0bXQudGVzdD9yZXN1bHQ9W2pvaW4oXCJjYXNlXCIsdGhhdC5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC50ZXN0LFByZWNlZGVuY2UuU2VxdWVuY2UsRV9UVFQpKSxcIjpcIl06cmVzdWx0PVtcImRlZmF1bHQ6XCJdLGk9MCxpej1zdG10LmNvbnNlcXVlbnQubGVuZ3RoLGl6JiZzdG10LmNvbnNlcXVlbnRbMF0udHlwZT09PVN5bnRheC5CbG9ja1N0YXRlbWVudCYmKGZyYWdtZW50PXRoYXQubWF5YmVCbG9jayhzdG10LmNvbnNlcXVlbnRbMF0sU19URkZGKSxyZXN1bHQucHVzaChmcmFnbWVudCksaT0xKSxpIT09aXomJiFlbmRzV2l0aExpbmVUZXJtaW5hdG9yKHRvU291cmNlTm9kZVdoZW5OZWVkZWQocmVzdWx0KS50b1N0cmluZygpKSYmcmVzdWx0LnB1c2gobmV3bGluZSksYm9keUZsYWdzPVNfVEZGRjtpPGl6OysraSlpPT09aXotMSYmZmxhZ3MmRl9TRU1JQ09MT05fT1BUJiYoYm9keUZsYWdzfD1GX1NFTUlDT0xPTl9PUFQpLGZyYWdtZW50PWFkZEluZGVudCh0aGF0LmdlbmVyYXRlU3RhdGVtZW50KHN0bXQuY29uc2VxdWVudFtpXSxib2R5RmxhZ3MpKSxyZXN1bHQucHVzaChmcmFnbWVudCksaSsxIT09aXomJiFlbmRzV2l0aExpbmVUZXJtaW5hdG9yKHRvU291cmNlTm9kZVdoZW5OZWVkZWQoZnJhZ21lbnQpLnRvU3RyaW5nKCkpJiZyZXN1bHQucHVzaChuZXdsaW5lKTt9KSxyZXN1bHR9LElmU3RhdGVtZW50OmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3ZhciByZXN1bHQsYm9keUZsYWdzLHNlbWljb2xvbk9wdGlvbmFsLHRoYXQ9dGhpcztyZXR1cm4gd2l0aEluZGVudChmdW5jdGlvbigpe3Jlc3VsdD1bXCJpZlwiK3NwYWNlK1wiKFwiLHRoYXQuZ2VuZXJhdGVFeHByZXNzaW9uKHN0bXQudGVzdCxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSxcIilcIl07fSksc2VtaWNvbG9uT3B0aW9uYWw9ZmxhZ3MmRl9TRU1JQ09MT05fT1BULGJvZHlGbGFncz1TX1RGRkYsc2VtaWNvbG9uT3B0aW9uYWwmJihib2R5RmxhZ3N8PUZfU0VNSUNPTE9OX09QVCksc3RtdC5hbHRlcm5hdGU/KHJlc3VsdC5wdXNoKHRoaXMubWF5YmVCbG9jayhzdG10LmNvbnNlcXVlbnQsU19URkZGKSkscmVzdWx0PXRoaXMubWF5YmVCbG9ja1N1ZmZpeChzdG10LmNvbnNlcXVlbnQscmVzdWx0KSxzdG10LmFsdGVybmF0ZS50eXBlPT09U3ludGF4LklmU3RhdGVtZW50P3Jlc3VsdD1qb2luKHJlc3VsdCxbXCJlbHNlIFwiLHRoaXMuZ2VuZXJhdGVTdGF0ZW1lbnQoc3RtdC5hbHRlcm5hdGUsYm9keUZsYWdzKV0pOnJlc3VsdD1qb2luKHJlc3VsdCxqb2luKFwiZWxzZVwiLHRoaXMubWF5YmVCbG9jayhzdG10LmFsdGVybmF0ZSxib2R5RmxhZ3MpKSkpOnJlc3VsdC5wdXNoKHRoaXMubWF5YmVCbG9jayhzdG10LmNvbnNlcXVlbnQsYm9keUZsYWdzKSkscmVzdWx0fSxGb3JTdGF0ZW1lbnQ6ZnVuY3Rpb24oc3RtdCxmbGFncyl7dmFyIHJlc3VsdCx0aGF0PXRoaXM7cmV0dXJuIHdpdGhJbmRlbnQoZnVuY3Rpb24oKXtyZXN1bHQ9W1wiZm9yXCIrc3BhY2UrXCIoXCJdLHN0bXQuaW5pdD9zdG10LmluaXQudHlwZT09PVN5bnRheC5WYXJpYWJsZURlY2xhcmF0aW9uP3Jlc3VsdC5wdXNoKHRoYXQuZ2VuZXJhdGVTdGF0ZW1lbnQoc3RtdC5pbml0LFNfRkZGRikpOihyZXN1bHQucHVzaCh0aGF0LmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LmluaXQsUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX0ZUVCkpLHJlc3VsdC5wdXNoKFwiO1wiKSk6cmVzdWx0LnB1c2goXCI7XCIpLHN0bXQudGVzdCYmKHJlc3VsdC5wdXNoKHNwYWNlKSxyZXN1bHQucHVzaCh0aGF0LmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LnRlc3QsUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCkpKSxyZXN1bHQucHVzaChcIjtcIiksc3RtdC51cGRhdGUmJihyZXN1bHQucHVzaChzcGFjZSkscmVzdWx0LnB1c2godGhhdC5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC51cGRhdGUsUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCkpKSxyZXN1bHQucHVzaChcIilcIik7fSkscmVzdWx0LnB1c2godGhpcy5tYXliZUJsb2NrKHN0bXQuYm9keSxmbGFncyZGX1NFTUlDT0xPTl9PUFQ/U19URkZUOlNfVEZGRikpLHJlc3VsdH0sRm9ySW5TdGF0ZW1lbnQ6ZnVuY3Rpb24oc3RtdCxmbGFncyl7cmV0dXJuIHRoaXMuZ2VuZXJhdGVJdGVyYXRpb25Gb3JTdGF0ZW1lbnQoXCJpblwiLHN0bXQsZmxhZ3MmRl9TRU1JQ09MT05fT1BUP1NfVEZGVDpTX1RGRkYpfSxGb3JPZlN0YXRlbWVudDpmdW5jdGlvbihzdG10LGZsYWdzKXtyZXR1cm4gdGhpcy5nZW5lcmF0ZUl0ZXJhdGlvbkZvclN0YXRlbWVudChcIm9mXCIsc3RtdCxmbGFncyZGX1NFTUlDT0xPTl9PUFQ/U19URkZUOlNfVEZGRil9LExhYmVsZWRTdGF0ZW1lbnQ6ZnVuY3Rpb24oc3RtdCxmbGFncyl7cmV0dXJuIFtzdG10LmxhYmVsLm5hbWUrXCI6XCIsdGhpcy5tYXliZUJsb2NrKHN0bXQuYm9keSxmbGFncyZGX1NFTUlDT0xPTl9PUFQ/U19URkZUOlNfVEZGRildfSxQcm9ncmFtOmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3ZhciByZXN1bHQsZnJhZ21lbnQsaSxpeixib2R5RmxhZ3M7Zm9yKGl6PXN0bXQuYm9keS5sZW5ndGgscmVzdWx0PVtzYWZlQ29uY2F0ZW5hdGlvbiYmaXo+MD9gXG5gOlwiXCJdLGJvZHlGbGFncz1TX1RGVEYsaT0wO2k8aXo7KytpKSFzYWZlQ29uY2F0ZW5hdGlvbiYmaT09PWl6LTEmJihib2R5RmxhZ3N8PUZfU0VNSUNPTE9OX09QVCkscHJlc2VydmVCbGFua0xpbmVzJiYoaT09PTAmJihzdG10LmJvZHlbMF0ubGVhZGluZ0NvbW1lbnRzfHxnZW5lcmF0ZUJsYW5rTGluZXMoc3RtdC5yYW5nZVswXSxzdG10LmJvZHlbaV0ucmFuZ2VbMF0scmVzdWx0KSksaT4wJiYhc3RtdC5ib2R5W2ktMV0udHJhaWxpbmdDb21tZW50cyYmIXN0bXQuYm9keVtpXS5sZWFkaW5nQ29tbWVudHMmJmdlbmVyYXRlQmxhbmtMaW5lcyhzdG10LmJvZHlbaS0xXS5yYW5nZVsxXSxzdG10LmJvZHlbaV0ucmFuZ2VbMF0scmVzdWx0KSksZnJhZ21lbnQ9YWRkSW5kZW50KHRoaXMuZ2VuZXJhdGVTdGF0ZW1lbnQoc3RtdC5ib2R5W2ldLGJvZHlGbGFncykpLHJlc3VsdC5wdXNoKGZyYWdtZW50KSxpKzE8aXomJiFlbmRzV2l0aExpbmVUZXJtaW5hdG9yKHRvU291cmNlTm9kZVdoZW5OZWVkZWQoZnJhZ21lbnQpLnRvU3RyaW5nKCkpJiYocHJlc2VydmVCbGFua0xpbmVzJiZzdG10LmJvZHlbaSsxXS5sZWFkaW5nQ29tbWVudHN8fHJlc3VsdC5wdXNoKG5ld2xpbmUpKSxwcmVzZXJ2ZUJsYW5rTGluZXMmJmk9PT1pei0xJiYoc3RtdC5ib2R5W2ldLnRyYWlsaW5nQ29tbWVudHN8fGdlbmVyYXRlQmxhbmtMaW5lcyhzdG10LmJvZHlbaV0ucmFuZ2VbMV0sc3RtdC5yYW5nZVsxXSxyZXN1bHQpKTtyZXR1cm4gcmVzdWx0fSxGdW5jdGlvbkRlY2xhcmF0aW9uOmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3JldHVybiBbZ2VuZXJhdGVBc3luY1ByZWZpeChzdG10LCEwKSxcImZ1bmN0aW9uXCIsZ2VuZXJhdGVTdGFyU3VmZml4KHN0bXQpfHxub0VtcHR5U3BhY2UoKSxzdG10LmlkP2dlbmVyYXRlSWRlbnRpZmllcihzdG10LmlkKTpcIlwiLHRoaXMuZ2VuZXJhdGVGdW5jdGlvbkJvZHkoc3RtdCldfSxSZXR1cm5TdGF0ZW1lbnQ6ZnVuY3Rpb24oc3RtdCxmbGFncyl7cmV0dXJuIHN0bXQuYXJndW1lbnQ/W2pvaW4oXCJyZXR1cm5cIix0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihzdG10LmFyZ3VtZW50LFByZWNlZGVuY2UuU2VxdWVuY2UsRV9UVFQpKSx0aGlzLnNlbWljb2xvbihmbGFncyldOltcInJldHVyblwiK3RoaXMuc2VtaWNvbG9uKGZsYWdzKV19LFdoaWxlU3RhdGVtZW50OmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3ZhciByZXN1bHQsdGhhdD10aGlzO3JldHVybiB3aXRoSW5kZW50KGZ1bmN0aW9uKCl7cmVzdWx0PVtcIndoaWxlXCIrc3BhY2UrXCIoXCIsdGhhdC5nZW5lcmF0ZUV4cHJlc3Npb24oc3RtdC50ZXN0LFByZWNlZGVuY2UuU2VxdWVuY2UsRV9UVFQpLFwiKVwiXTt9KSxyZXN1bHQucHVzaCh0aGlzLm1heWJlQmxvY2soc3RtdC5ib2R5LGZsYWdzJkZfU0VNSUNPTE9OX09QVD9TX1RGRlQ6U19URkZGKSkscmVzdWx0fSxXaXRoU3RhdGVtZW50OmZ1bmN0aW9uKHN0bXQsZmxhZ3Mpe3ZhciByZXN1bHQsdGhhdD10aGlzO3JldHVybiB3aXRoSW5kZW50KGZ1bmN0aW9uKCl7cmVzdWx0PVtcIndpdGhcIitzcGFjZStcIihcIix0aGF0LmdlbmVyYXRlRXhwcmVzc2lvbihzdG10Lm9iamVjdCxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSxcIilcIl07fSkscmVzdWx0LnB1c2godGhpcy5tYXliZUJsb2NrKHN0bXQuYm9keSxmbGFncyZGX1NFTUlDT0xPTl9PUFQ/U19URkZUOlNfVEZGRikpLHJlc3VsdH19LG1lcmdlKENvZGVHZW5lcmF0b3IucHJvdG90eXBlLENvZGVHZW5lcmF0b3IuU3RhdGVtZW50KSxDb2RlR2VuZXJhdG9yLkV4cHJlc3Npb249e1NlcXVlbmNlRXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3ZhciByZXN1bHQsaSxpejtmb3IoUHJlY2VkZW5jZS5TZXF1ZW5jZTxwcmVjZWRlbmNlJiYoZmxhZ3N8PUZfQUxMT1dfSU4pLHJlc3VsdD1bXSxpPTAsaXo9ZXhwci5leHByZXNzaW9ucy5sZW5ndGg7aTxpejsrK2kpcmVzdWx0LnB1c2godGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5leHByZXNzaW9uc1tpXSxQcmVjZWRlbmNlLkFzc2lnbm1lbnQsZmxhZ3MpKSxpKzE8aXomJnJlc3VsdC5wdXNoKFwiLFwiK3NwYWNlKTtyZXR1cm4gcGFyZW50aGVzaXplKHJlc3VsdCxQcmVjZWRlbmNlLlNlcXVlbmNlLHByZWNlZGVuY2UpfSxBc3NpZ25tZW50RXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiB0aGlzLmdlbmVyYXRlQXNzaWdubWVudChleHByLmxlZnQsZXhwci5yaWdodCxleHByLm9wZXJhdG9yLHByZWNlZGVuY2UsZmxhZ3MpfSxBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiBwYXJlbnRoZXNpemUodGhpcy5nZW5lcmF0ZUZ1bmN0aW9uQm9keShleHByKSxQcmVjZWRlbmNlLkFycm93RnVuY3Rpb24scHJlY2VkZW5jZSl9LENvbmRpdGlvbmFsRXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiBQcmVjZWRlbmNlLkNvbmRpdGlvbmFsPHByZWNlZGVuY2UmJihmbGFnc3w9Rl9BTExPV19JTikscGFyZW50aGVzaXplKFt0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLnRlc3QsUHJlY2VkZW5jZS5Db2FsZXNjZSxmbGFncyksc3BhY2UrXCI/XCIrc3BhY2UsdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5jb25zZXF1ZW50LFByZWNlZGVuY2UuQXNzaWdubWVudCxmbGFncyksc3BhY2UrXCI6XCIrc3BhY2UsdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5hbHRlcm5hdGUsUHJlY2VkZW5jZS5Bc3NpZ25tZW50LGZsYWdzKV0sUHJlY2VkZW5jZS5Db25kaXRpb25hbCxwcmVjZWRlbmNlKX0sTG9naWNhbEV4cHJlc3Npb246ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXtyZXR1cm4gZXhwci5vcGVyYXRvcj09PVwiPz9cIiYmKGZsYWdzfD1GX0ZPVU5EX0NPQUxFU0NFKSx0aGlzLkJpbmFyeUV4cHJlc3Npb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKX0sQmluYXJ5RXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3ZhciByZXN1bHQsbGVmdFByZWNlZGVuY2UscmlnaHRQcmVjZWRlbmNlLGN1cnJlbnRQcmVjZWRlbmNlLGZyYWdtZW50LGxlZnRTb3VyY2U7cmV0dXJuIGN1cnJlbnRQcmVjZWRlbmNlPUJpbmFyeVByZWNlZGVuY2VbZXhwci5vcGVyYXRvcl0sbGVmdFByZWNlZGVuY2U9ZXhwci5vcGVyYXRvcj09PVwiKipcIj9QcmVjZWRlbmNlLlBvc3RmaXg6Y3VycmVudFByZWNlZGVuY2UscmlnaHRQcmVjZWRlbmNlPWV4cHIub3BlcmF0b3I9PT1cIioqXCI/Y3VycmVudFByZWNlZGVuY2U6Y3VycmVudFByZWNlZGVuY2UrMSxjdXJyZW50UHJlY2VkZW5jZTxwcmVjZWRlbmNlJiYoZmxhZ3N8PUZfQUxMT1dfSU4pLGZyYWdtZW50PXRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIubGVmdCxsZWZ0UHJlY2VkZW5jZSxmbGFncyksbGVmdFNvdXJjZT1mcmFnbWVudC50b1N0cmluZygpLGxlZnRTb3VyY2UuY2hhckNvZGVBdChsZWZ0U291cmNlLmxlbmd0aC0xKT09PTQ3JiZlc3V0aWxzLmNvZGUuaXNJZGVudGlmaWVyUGFydEVTNShleHByLm9wZXJhdG9yLmNoYXJDb2RlQXQoMCkpP3Jlc3VsdD1bZnJhZ21lbnQsbm9FbXB0eVNwYWNlKCksZXhwci5vcGVyYXRvcl06cmVzdWx0PWpvaW4oZnJhZ21lbnQsZXhwci5vcGVyYXRvciksZnJhZ21lbnQ9dGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5yaWdodCxyaWdodFByZWNlZGVuY2UsZmxhZ3MpLGV4cHIub3BlcmF0b3I9PT1cIi9cIiYmZnJhZ21lbnQudG9TdHJpbmcoKS5jaGFyQXQoMCk9PT1cIi9cInx8ZXhwci5vcGVyYXRvci5zbGljZSgtMSk9PT1cIjxcIiYmZnJhZ21lbnQudG9TdHJpbmcoKS5zbGljZSgwLDMpPT09XCIhLS1cIj8ocmVzdWx0LnB1c2gobm9FbXB0eVNwYWNlKCkpLHJlc3VsdC5wdXNoKGZyYWdtZW50KSk6cmVzdWx0PWpvaW4ocmVzdWx0LGZyYWdtZW50KSxleHByLm9wZXJhdG9yPT09XCJpblwiJiYhKGZsYWdzJkZfQUxMT1dfSU4pP1tcIihcIixyZXN1bHQsXCIpXCJdOihleHByLm9wZXJhdG9yPT09XCJ8fFwifHxleHByLm9wZXJhdG9yPT09XCImJlwiKSYmZmxhZ3MmRl9GT1VORF9DT0FMRVNDRT9bXCIoXCIscmVzdWx0LFwiKVwiXTpwYXJlbnRoZXNpemUocmVzdWx0LGN1cnJlbnRQcmVjZWRlbmNlLHByZWNlZGVuY2UpfSxDYWxsRXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3ZhciByZXN1bHQsaSxpejtmb3IocmVzdWx0PVt0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLmNhbGxlZSxQcmVjZWRlbmNlLkNhbGwsRV9UVEYpXSxleHByLm9wdGlvbmFsJiZyZXN1bHQucHVzaChcIj8uXCIpLHJlc3VsdC5wdXNoKFwiKFwiKSxpPTAsaXo9ZXhwci5hcmd1bWVudHMubGVuZ3RoO2k8aXo7KytpKXJlc3VsdC5wdXNoKHRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIuYXJndW1lbnRzW2ldLFByZWNlZGVuY2UuQXNzaWdubWVudCxFX1RUVCkpLGkrMTxpeiYmcmVzdWx0LnB1c2goXCIsXCIrc3BhY2UpO3JldHVybiByZXN1bHQucHVzaChcIilcIiksZmxhZ3MmRl9BTExPV19DQUxMP3BhcmVudGhlc2l6ZShyZXN1bHQsUHJlY2VkZW5jZS5DYWxsLHByZWNlZGVuY2UpOltcIihcIixyZXN1bHQsXCIpXCJdfSxDaGFpbkV4cHJlc3Npb246ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXtQcmVjZWRlbmNlLk9wdGlvbmFsQ2hhaW5pbmc8cHJlY2VkZW5jZSYmKGZsYWdzfD1GX0FMTE9XX0NBTEwpO3ZhciByZXN1bHQ9dGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5leHByZXNzaW9uLFByZWNlZGVuY2UuT3B0aW9uYWxDaGFpbmluZyxmbGFncyk7cmV0dXJuIHBhcmVudGhlc2l6ZShyZXN1bHQsUHJlY2VkZW5jZS5PcHRpb25hbENoYWluaW5nLHByZWNlZGVuY2UpfSxOZXdFeHByZXNzaW9uOmZ1bmN0aW9uKGV4cHIscHJlY2VkZW5jZSxmbGFncyl7dmFyIHJlc3VsdCxsZW5ndGgsaSxpeixpdGVtRmxhZ3M7aWYobGVuZ3RoPWV4cHIuYXJndW1lbnRzLmxlbmd0aCxpdGVtRmxhZ3M9ZmxhZ3MmRl9BTExPV19VTlBBUkFUSF9ORVcmJiFwYXJlbnRoZXNlcyYmbGVuZ3RoPT09MD9FX1RGVDpFX1RGRixyZXN1bHQ9am9pbihcIm5ld1wiLHRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIuY2FsbGVlLFByZWNlZGVuY2UuTmV3LGl0ZW1GbGFncykpLCEoZmxhZ3MmRl9BTExPV19VTlBBUkFUSF9ORVcpfHxwYXJlbnRoZXNlc3x8bGVuZ3RoPjApe2ZvcihyZXN1bHQucHVzaChcIihcIiksaT0wLGl6PWxlbmd0aDtpPGl6OysraSlyZXN1bHQucHVzaCh0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLmFyZ3VtZW50c1tpXSxQcmVjZWRlbmNlLkFzc2lnbm1lbnQsRV9UVFQpKSxpKzE8aXomJnJlc3VsdC5wdXNoKFwiLFwiK3NwYWNlKTtyZXN1bHQucHVzaChcIilcIik7fXJldHVybiBwYXJlbnRoZXNpemUocmVzdWx0LFByZWNlZGVuY2UuTmV3LHByZWNlZGVuY2UpfSxNZW1iZXJFeHByZXNzaW9uOmZ1bmN0aW9uKGV4cHIscHJlY2VkZW5jZSxmbGFncyl7dmFyIHJlc3VsdCxmcmFnbWVudDtyZXR1cm4gcmVzdWx0PVt0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLm9iamVjdCxQcmVjZWRlbmNlLkNhbGwsZmxhZ3MmRl9BTExPV19DQUxMP0VfVFRGOkVfVEZGKV0sZXhwci5jb21wdXRlZD8oZXhwci5vcHRpb25hbCYmcmVzdWx0LnB1c2goXCI/LlwiKSxyZXN1bHQucHVzaChcIltcIikscmVzdWx0LnB1c2godGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5wcm9wZXJ0eSxQcmVjZWRlbmNlLlNlcXVlbmNlLGZsYWdzJkZfQUxMT1dfQ0FMTD9FX1RUVDpFX1RGVCkpLHJlc3VsdC5wdXNoKFwiXVwiKSk6KCFleHByLm9wdGlvbmFsJiZleHByLm9iamVjdC50eXBlPT09U3ludGF4LkxpdGVyYWwmJnR5cGVvZiBleHByLm9iamVjdC52YWx1ZT09XCJudW1iZXJcIiYmKGZyYWdtZW50PXRvU291cmNlTm9kZVdoZW5OZWVkZWQocmVzdWx0KS50b1N0cmluZygpLGZyYWdtZW50LmluZGV4T2YoXCIuXCIpPDAmJiEvW2VFeFhdLy50ZXN0KGZyYWdtZW50KSYmZXN1dGlscy5jb2RlLmlzRGVjaW1hbERpZ2l0KGZyYWdtZW50LmNoYXJDb2RlQXQoZnJhZ21lbnQubGVuZ3RoLTEpKSYmIShmcmFnbWVudC5sZW5ndGg+PTImJmZyYWdtZW50LmNoYXJDb2RlQXQoMCk9PT00OCkmJnJlc3VsdC5wdXNoKFwiIFwiKSkscmVzdWx0LnB1c2goZXhwci5vcHRpb25hbD9cIj8uXCI6XCIuXCIpLHJlc3VsdC5wdXNoKGdlbmVyYXRlSWRlbnRpZmllcihleHByLnByb3BlcnR5KSkpLHBhcmVudGhlc2l6ZShyZXN1bHQsUHJlY2VkZW5jZS5NZW1iZXIscHJlY2VkZW5jZSl9LE1ldGFQcm9wZXJ0eTpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3ZhciByZXN1bHQ7cmV0dXJuIHJlc3VsdD1bXSxyZXN1bHQucHVzaCh0eXBlb2YgZXhwci5tZXRhPT1cInN0cmluZ1wiP2V4cHIubWV0YTpnZW5lcmF0ZUlkZW50aWZpZXIoZXhwci5tZXRhKSkscmVzdWx0LnB1c2goXCIuXCIpLHJlc3VsdC5wdXNoKHR5cGVvZiBleHByLnByb3BlcnR5PT1cInN0cmluZ1wiP2V4cHIucHJvcGVydHk6Z2VuZXJhdGVJZGVudGlmaWVyKGV4cHIucHJvcGVydHkpKSxwYXJlbnRoZXNpemUocmVzdWx0LFByZWNlZGVuY2UuTWVtYmVyLHByZWNlZGVuY2UpfSxVbmFyeUV4cHJlc3Npb246ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXt2YXIgcmVzdWx0LGZyYWdtZW50LHJpZ2h0Q2hhckNvZGUsbGVmdFNvdXJjZSxsZWZ0Q2hhckNvZGU7cmV0dXJuIGZyYWdtZW50PXRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIuYXJndW1lbnQsUHJlY2VkZW5jZS5VbmFyeSxFX1RUVCksc3BhY2U9PT1cIlwiP3Jlc3VsdD1qb2luKGV4cHIub3BlcmF0b3IsZnJhZ21lbnQpOihyZXN1bHQ9W2V4cHIub3BlcmF0b3JdLGV4cHIub3BlcmF0b3IubGVuZ3RoPjI/cmVzdWx0PWpvaW4ocmVzdWx0LGZyYWdtZW50KToobGVmdFNvdXJjZT10b1NvdXJjZU5vZGVXaGVuTmVlZGVkKHJlc3VsdCkudG9TdHJpbmcoKSxsZWZ0Q2hhckNvZGU9bGVmdFNvdXJjZS5jaGFyQ29kZUF0KGxlZnRTb3VyY2UubGVuZ3RoLTEpLHJpZ2h0Q2hhckNvZGU9ZnJhZ21lbnQudG9TdHJpbmcoKS5jaGFyQ29kZUF0KDApLCgobGVmdENoYXJDb2RlPT09NDN8fGxlZnRDaGFyQ29kZT09PTQ1KSYmbGVmdENoYXJDb2RlPT09cmlnaHRDaGFyQ29kZXx8ZXN1dGlscy5jb2RlLmlzSWRlbnRpZmllclBhcnRFUzUobGVmdENoYXJDb2RlKSYmZXN1dGlscy5jb2RlLmlzSWRlbnRpZmllclBhcnRFUzUocmlnaHRDaGFyQ29kZSkpJiZyZXN1bHQucHVzaChub0VtcHR5U3BhY2UoKSkscmVzdWx0LnB1c2goZnJhZ21lbnQpKSkscGFyZW50aGVzaXplKHJlc3VsdCxQcmVjZWRlbmNlLlVuYXJ5LHByZWNlZGVuY2UpfSxZaWVsZEV4cHJlc3Npb246ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXt2YXIgcmVzdWx0O3JldHVybiBleHByLmRlbGVnYXRlP3Jlc3VsdD1cInlpZWxkKlwiOnJlc3VsdD1cInlpZWxkXCIsZXhwci5hcmd1bWVudCYmKHJlc3VsdD1qb2luKHJlc3VsdCx0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLmFyZ3VtZW50LFByZWNlZGVuY2UuWWllbGQsRV9UVFQpKSkscGFyZW50aGVzaXplKHJlc3VsdCxQcmVjZWRlbmNlLllpZWxkLHByZWNlZGVuY2UpfSxBd2FpdEV4cHJlc3Npb246ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXt2YXIgcmVzdWx0PWpvaW4oZXhwci5hbGw/XCJhd2FpdCpcIjpcImF3YWl0XCIsdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5hcmd1bWVudCxQcmVjZWRlbmNlLkF3YWl0LEVfVFRUKSk7cmV0dXJuIHBhcmVudGhlc2l6ZShyZXN1bHQsUHJlY2VkZW5jZS5Bd2FpdCxwcmVjZWRlbmNlKX0sVXBkYXRlRXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiBleHByLnByZWZpeD9wYXJlbnRoZXNpemUoW2V4cHIub3BlcmF0b3IsdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5hcmd1bWVudCxQcmVjZWRlbmNlLlVuYXJ5LEVfVFRUKV0sUHJlY2VkZW5jZS5VbmFyeSxwcmVjZWRlbmNlKTpwYXJlbnRoZXNpemUoW3RoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIuYXJndW1lbnQsUHJlY2VkZW5jZS5Qb3N0Zml4LEVfVFRUKSxleHByLm9wZXJhdG9yXSxQcmVjZWRlbmNlLlBvc3RmaXgscHJlY2VkZW5jZSl9LEZ1bmN0aW9uRXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3ZhciByZXN1bHQ9W2dlbmVyYXRlQXN5bmNQcmVmaXgoZXhwciwhMCksXCJmdW5jdGlvblwiXTtyZXR1cm4gZXhwci5pZD8ocmVzdWx0LnB1c2goZ2VuZXJhdGVTdGFyU3VmZml4KGV4cHIpfHxub0VtcHR5U3BhY2UoKSkscmVzdWx0LnB1c2goZ2VuZXJhdGVJZGVudGlmaWVyKGV4cHIuaWQpKSk6cmVzdWx0LnB1c2goZ2VuZXJhdGVTdGFyU3VmZml4KGV4cHIpfHxzcGFjZSkscmVzdWx0LnB1c2godGhpcy5nZW5lcmF0ZUZ1bmN0aW9uQm9keShleHByKSkscmVzdWx0fSxBcnJheVBhdHRlcm46ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXtyZXR1cm4gdGhpcy5BcnJheUV4cHJlc3Npb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzLCEwKX0sQXJyYXlFeHByZXNzaW9uOmZ1bmN0aW9uKGV4cHIscHJlY2VkZW5jZSxmbGFncyxpc1BhdHRlcm4pe3ZhciByZXN1bHQsbXVsdGlsaW5lLHRoYXQ9dGhpcztyZXR1cm4gZXhwci5lbGVtZW50cy5sZW5ndGg/KG11bHRpbGluZT1pc1BhdHRlcm4/ITE6ZXhwci5lbGVtZW50cy5sZW5ndGg+MSxyZXN1bHQ9W1wiW1wiLG11bHRpbGluZT9uZXdsaW5lOlwiXCJdLHdpdGhJbmRlbnQoZnVuY3Rpb24oaW5kZW50Mil7dmFyIGksaXo7Zm9yKGk9MCxpej1leHByLmVsZW1lbnRzLmxlbmd0aDtpPGl6OysraSlleHByLmVsZW1lbnRzW2ldPyhyZXN1bHQucHVzaChtdWx0aWxpbmU/aW5kZW50MjpcIlwiKSxyZXN1bHQucHVzaCh0aGF0LmdlbmVyYXRlRXhwcmVzc2lvbihleHByLmVsZW1lbnRzW2ldLFByZWNlZGVuY2UuQXNzaWdubWVudCxFX1RUVCkpKToobXVsdGlsaW5lJiZyZXN1bHQucHVzaChpbmRlbnQyKSxpKzE9PT1peiYmcmVzdWx0LnB1c2goXCIsXCIpKSxpKzE8aXomJnJlc3VsdC5wdXNoKFwiLFwiKyhtdWx0aWxpbmU/bmV3bGluZTpzcGFjZSkpO30pLG11bHRpbGluZSYmIWVuZHNXaXRoTGluZVRlcm1pbmF0b3IodG9Tb3VyY2VOb2RlV2hlbk5lZWRlZChyZXN1bHQpLnRvU3RyaW5nKCkpJiZyZXN1bHQucHVzaChuZXdsaW5lKSxyZXN1bHQucHVzaChtdWx0aWxpbmU/YmFzZTI6XCJcIikscmVzdWx0LnB1c2goXCJdXCIpLHJlc3VsdCk6XCJbXVwifSxSZXN0RWxlbWVudDpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiBcIi4uLlwiK3RoaXMuZ2VuZXJhdGVQYXR0ZXJuKGV4cHIuYXJndW1lbnQpfSxDbGFzc0V4cHJlc3Npb246ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXt2YXIgcmVzdWx0LGZyYWdtZW50O3JldHVybiByZXN1bHQ9W1wiY2xhc3NcIl0sZXhwci5pZCYmKHJlc3VsdD1qb2luKHJlc3VsdCx0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLmlkLFByZWNlZGVuY2UuU2VxdWVuY2UsRV9UVFQpKSksZXhwci5zdXBlckNsYXNzJiYoZnJhZ21lbnQ9am9pbihcImV4dGVuZHNcIix0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLnN1cGVyQ2xhc3MsUHJlY2VkZW5jZS5VbmFyeSxFX1RUVCkpLHJlc3VsdD1qb2luKHJlc3VsdCxmcmFnbWVudCkpLHJlc3VsdC5wdXNoKHNwYWNlKSxyZXN1bHQucHVzaCh0aGlzLmdlbmVyYXRlU3RhdGVtZW50KGV4cHIuYm9keSxTX1RGRlQpKSxyZXN1bHR9LE1ldGhvZERlZmluaXRpb246ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXt2YXIgcmVzdWx0LGZyYWdtZW50O3JldHVybiBleHByLnN0YXRpYz9yZXN1bHQ9W1wic3RhdGljXCIrc3BhY2VdOnJlc3VsdD1bXSxleHByLmtpbmQ9PT1cImdldFwifHxleHByLmtpbmQ9PT1cInNldFwiP2ZyYWdtZW50PVtqb2luKGV4cHIua2luZCx0aGlzLmdlbmVyYXRlUHJvcGVydHlLZXkoZXhwci5rZXksZXhwci5jb21wdXRlZCkpLHRoaXMuZ2VuZXJhdGVGdW5jdGlvbkJvZHkoZXhwci52YWx1ZSldOmZyYWdtZW50PVtnZW5lcmF0ZU1ldGhvZFByZWZpeChleHByKSx0aGlzLmdlbmVyYXRlUHJvcGVydHlLZXkoZXhwci5rZXksZXhwci5jb21wdXRlZCksdGhpcy5nZW5lcmF0ZUZ1bmN0aW9uQm9keShleHByLnZhbHVlKV0sam9pbihyZXN1bHQsZnJhZ21lbnQpfSxQcm9wZXJ0eTpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiBleHByLmtpbmQ9PT1cImdldFwifHxleHByLmtpbmQ9PT1cInNldFwiP1tleHByLmtpbmQsbm9FbXB0eVNwYWNlKCksdGhpcy5nZW5lcmF0ZVByb3BlcnR5S2V5KGV4cHIua2V5LGV4cHIuY29tcHV0ZWQpLHRoaXMuZ2VuZXJhdGVGdW5jdGlvbkJvZHkoZXhwci52YWx1ZSldOmV4cHIuc2hvcnRoYW5kP2V4cHIudmFsdWUudHlwZT09PVwiQXNzaWdubWVudFBhdHRlcm5cIj90aGlzLkFzc2lnbm1lbnRQYXR0ZXJuKGV4cHIudmFsdWUsUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCk6dGhpcy5nZW5lcmF0ZVByb3BlcnR5S2V5KGV4cHIua2V5LGV4cHIuY29tcHV0ZWQpOmV4cHIubWV0aG9kP1tnZW5lcmF0ZU1ldGhvZFByZWZpeChleHByKSx0aGlzLmdlbmVyYXRlUHJvcGVydHlLZXkoZXhwci5rZXksZXhwci5jb21wdXRlZCksdGhpcy5nZW5lcmF0ZUZ1bmN0aW9uQm9keShleHByLnZhbHVlKV06W3RoaXMuZ2VuZXJhdGVQcm9wZXJ0eUtleShleHByLmtleSxleHByLmNvbXB1dGVkKSxcIjpcIitzcGFjZSx0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLnZhbHVlLFByZWNlZGVuY2UuQXNzaWdubWVudCxFX1RUVCldfSxPYmplY3RFeHByZXNzaW9uOmZ1bmN0aW9uKGV4cHIscHJlY2VkZW5jZSxmbGFncyl7dmFyIG11bHRpbGluZSxyZXN1bHQsZnJhZ21lbnQsdGhhdD10aGlzO3JldHVybiBleHByLnByb3BlcnRpZXMubGVuZ3RoPyhtdWx0aWxpbmU9ZXhwci5wcm9wZXJ0aWVzLmxlbmd0aD4xLHdpdGhJbmRlbnQoZnVuY3Rpb24oKXtmcmFnbWVudD10aGF0LmdlbmVyYXRlRXhwcmVzc2lvbihleHByLnByb3BlcnRpZXNbMF0sUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCk7fSksIW11bHRpbGluZSYmIWhhc0xpbmVUZXJtaW5hdG9yKHRvU291cmNlTm9kZVdoZW5OZWVkZWQoZnJhZ21lbnQpLnRvU3RyaW5nKCkpP1tcIntcIixzcGFjZSxmcmFnbWVudCxzcGFjZSxcIn1cIl06KHdpdGhJbmRlbnQoZnVuY3Rpb24oaW5kZW50Mil7dmFyIGksaXo7aWYocmVzdWx0PVtcIntcIixuZXdsaW5lLGluZGVudDIsZnJhZ21lbnRdLG11bHRpbGluZSlmb3IocmVzdWx0LnB1c2goXCIsXCIrbmV3bGluZSksaT0xLGl6PWV4cHIucHJvcGVydGllcy5sZW5ndGg7aTxpejsrK2kpcmVzdWx0LnB1c2goaW5kZW50MikscmVzdWx0LnB1c2godGhhdC5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5wcm9wZXJ0aWVzW2ldLFByZWNlZGVuY2UuU2VxdWVuY2UsRV9UVFQpKSxpKzE8aXomJnJlc3VsdC5wdXNoKFwiLFwiK25ld2xpbmUpO30pLGVuZHNXaXRoTGluZVRlcm1pbmF0b3IodG9Tb3VyY2VOb2RlV2hlbk5lZWRlZChyZXN1bHQpLnRvU3RyaW5nKCkpfHxyZXN1bHQucHVzaChuZXdsaW5lKSxyZXN1bHQucHVzaChiYXNlMikscmVzdWx0LnB1c2goXCJ9XCIpLHJlc3VsdCkpOlwie31cIn0sQXNzaWdubWVudFBhdHRlcm46ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXtyZXR1cm4gdGhpcy5nZW5lcmF0ZUFzc2lnbm1lbnQoZXhwci5sZWZ0LGV4cHIucmlnaHQsXCI9XCIscHJlY2VkZW5jZSxmbGFncyl9LE9iamVjdFBhdHRlcm46ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXt2YXIgcmVzdWx0LGksaXosbXVsdGlsaW5lLHByb3BlcnR5LHRoYXQ9dGhpcztpZighZXhwci5wcm9wZXJ0aWVzLmxlbmd0aClyZXR1cm4gXCJ7fVwiO2lmKG11bHRpbGluZT0hMSxleHByLnByb3BlcnRpZXMubGVuZ3RoPT09MSlwcm9wZXJ0eT1leHByLnByb3BlcnRpZXNbMF0scHJvcGVydHkudHlwZT09PVN5bnRheC5Qcm9wZXJ0eSYmcHJvcGVydHkudmFsdWUudHlwZSE9PVN5bnRheC5JZGVudGlmaWVyJiYobXVsdGlsaW5lPSEwKTtlbHNlIGZvcihpPTAsaXo9ZXhwci5wcm9wZXJ0aWVzLmxlbmd0aDtpPGl6OysraSlpZihwcm9wZXJ0eT1leHByLnByb3BlcnRpZXNbaV0scHJvcGVydHkudHlwZT09PVN5bnRheC5Qcm9wZXJ0eSYmIXByb3BlcnR5LnNob3J0aGFuZCl7bXVsdGlsaW5lPSEwO2JyZWFrfXJldHVybiByZXN1bHQ9W1wie1wiLG11bHRpbGluZT9uZXdsaW5lOlwiXCJdLHdpdGhJbmRlbnQoZnVuY3Rpb24oaW5kZW50Mil7dmFyIGkyLGl6Mjtmb3IoaTI9MCxpejI9ZXhwci5wcm9wZXJ0aWVzLmxlbmd0aDtpMjxpejI7KytpMilyZXN1bHQucHVzaChtdWx0aWxpbmU/aW5kZW50MjpcIlwiKSxyZXN1bHQucHVzaCh0aGF0LmdlbmVyYXRlRXhwcmVzc2lvbihleHByLnByb3BlcnRpZXNbaTJdLFByZWNlZGVuY2UuU2VxdWVuY2UsRV9UVFQpKSxpMisxPGl6MiYmcmVzdWx0LnB1c2goXCIsXCIrKG11bHRpbGluZT9uZXdsaW5lOnNwYWNlKSk7fSksbXVsdGlsaW5lJiYhZW5kc1dpdGhMaW5lVGVybWluYXRvcih0b1NvdXJjZU5vZGVXaGVuTmVlZGVkKHJlc3VsdCkudG9TdHJpbmcoKSkmJnJlc3VsdC5wdXNoKG5ld2xpbmUpLHJlc3VsdC5wdXNoKG11bHRpbGluZT9iYXNlMjpcIlwiKSxyZXN1bHQucHVzaChcIn1cIikscmVzdWx0fSxUaGlzRXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiBcInRoaXNcIn0sU3VwZXI6ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXtyZXR1cm4gXCJzdXBlclwifSxJZGVudGlmaWVyOmZ1bmN0aW9uKGV4cHIscHJlY2VkZW5jZSxmbGFncyl7cmV0dXJuIGdlbmVyYXRlSWRlbnRpZmllcihleHByKX0sSW1wb3J0RGVmYXVsdFNwZWNpZmllcjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiBnZW5lcmF0ZUlkZW50aWZpZXIoZXhwci5pZHx8ZXhwci5sb2NhbCl9LEltcG9ydE5hbWVzcGFjZVNwZWNpZmllcjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3ZhciByZXN1bHQ9W1wiKlwiXSxpZD1leHByLmlkfHxleHByLmxvY2FsO3JldHVybiBpZCYmcmVzdWx0LnB1c2goc3BhY2UrXCJhc1wiK25vRW1wdHlTcGFjZSgpK2dlbmVyYXRlSWRlbnRpZmllcihpZCkpLHJlc3VsdH0sSW1wb3J0U3BlY2lmaWVyOmZ1bmN0aW9uKGV4cHIscHJlY2VkZW5jZSxmbGFncyl7dmFyIGltcG9ydGVkPWV4cHIuaW1wb3J0ZWQscmVzdWx0PVtpbXBvcnRlZC5uYW1lXSxsb2NhbD1leHByLmxvY2FsO3JldHVybiBsb2NhbCYmbG9jYWwubmFtZSE9PWltcG9ydGVkLm5hbWUmJnJlc3VsdC5wdXNoKG5vRW1wdHlTcGFjZSgpK1wiYXNcIitub0VtcHR5U3BhY2UoKStnZW5lcmF0ZUlkZW50aWZpZXIobG9jYWwpKSxyZXN1bHR9LEV4cG9ydFNwZWNpZmllcjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3ZhciBsb2NhbD1leHByLmxvY2FsLHJlc3VsdD1bbG9jYWwubmFtZV0sZXhwb3J0ZWQ9ZXhwci5leHBvcnRlZDtyZXR1cm4gZXhwb3J0ZWQmJmV4cG9ydGVkLm5hbWUhPT1sb2NhbC5uYW1lJiZyZXN1bHQucHVzaChub0VtcHR5U3BhY2UoKStcImFzXCIrbm9FbXB0eVNwYWNlKCkrZ2VuZXJhdGVJZGVudGlmaWVyKGV4cG9ydGVkKSkscmVzdWx0fSxMaXRlcmFsOmZ1bmN0aW9uKGV4cHIscHJlY2VkZW5jZSxmbGFncyl7dmFyIHJhdztpZihleHByLmhhc093blByb3BlcnR5KFwicmF3XCIpJiZwYXJzZTUmJmV4dHJhLnJhdyl0cnl7aWYocmF3PXBhcnNlNShleHByLnJhdykuYm9keVswXS5leHByZXNzaW9uLHJhdy50eXBlPT09U3ludGF4LkxpdGVyYWwmJnJhdy52YWx1ZT09PWV4cHIudmFsdWUpcmV0dXJuIGV4cHIucmF3fWNhdGNoe31yZXR1cm4gZXhwci5yZWdleD9cIi9cIitleHByLnJlZ2V4LnBhdHRlcm4rXCIvXCIrZXhwci5yZWdleC5mbGFnczp0eXBlb2YgZXhwci52YWx1ZT09XCJiaWdpbnRcIj9leHByLnZhbHVlLnRvU3RyaW5nKCkrXCJuXCI6ZXhwci5iaWdpbnQ/ZXhwci5iaWdpbnQrXCJuXCI6ZXhwci52YWx1ZT09PW51bGw/XCJudWxsXCI6dHlwZW9mIGV4cHIudmFsdWU9PVwic3RyaW5nXCI/ZXNjYXBlU3RyaW5nKGV4cHIudmFsdWUpOnR5cGVvZiBleHByLnZhbHVlPT1cIm51bWJlclwiP2dlbmVyYXRlTnVtYmVyKGV4cHIudmFsdWUpOnR5cGVvZiBleHByLnZhbHVlPT1cImJvb2xlYW5cIj9leHByLnZhbHVlP1widHJ1ZVwiOlwiZmFsc2VcIjpnZW5lcmF0ZVJlZ0V4cChleHByLnZhbHVlKX0sR2VuZXJhdG9yRXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiB0aGlzLkNvbXByZWhlbnNpb25FeHByZXNzaW9uKGV4cHIscHJlY2VkZW5jZSxmbGFncyl9LENvbXByZWhlbnNpb25FeHByZXNzaW9uOmZ1bmN0aW9uKGV4cHIscHJlY2VkZW5jZSxmbGFncyl7dmFyIHJlc3VsdCxpLGl6LGZyYWdtZW50LHRoYXQ9dGhpcztyZXR1cm4gcmVzdWx0PWV4cHIudHlwZT09PVN5bnRheC5HZW5lcmF0b3JFeHByZXNzaW9uP1tcIihcIl06W1wiW1wiXSxleHRyYS5tb3ouY29tcHJlaGVuc2lvbkV4cHJlc3Npb25TdGFydHNXaXRoQXNzaWdubWVudCYmKGZyYWdtZW50PXRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIuYm9keSxQcmVjZWRlbmNlLkFzc2lnbm1lbnQsRV9UVFQpLHJlc3VsdC5wdXNoKGZyYWdtZW50KSksZXhwci5ibG9ja3MmJndpdGhJbmRlbnQoZnVuY3Rpb24oKXtmb3IoaT0wLGl6PWV4cHIuYmxvY2tzLmxlbmd0aDtpPGl6OysraSlmcmFnbWVudD10aGF0LmdlbmVyYXRlRXhwcmVzc2lvbihleHByLmJsb2Nrc1tpXSxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKSxpPjB8fGV4dHJhLm1vei5jb21wcmVoZW5zaW9uRXhwcmVzc2lvblN0YXJ0c1dpdGhBc3NpZ25tZW50P3Jlc3VsdD1qb2luKHJlc3VsdCxmcmFnbWVudCk6cmVzdWx0LnB1c2goZnJhZ21lbnQpO30pLGV4cHIuZmlsdGVyJiYocmVzdWx0PWpvaW4ocmVzdWx0LFwiaWZcIitzcGFjZSksZnJhZ21lbnQ9dGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5maWx0ZXIsUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCkscmVzdWx0PWpvaW4ocmVzdWx0LFtcIihcIixmcmFnbWVudCxcIilcIl0pKSxleHRyYS5tb3ouY29tcHJlaGVuc2lvbkV4cHJlc3Npb25TdGFydHNXaXRoQXNzaWdubWVudHx8KGZyYWdtZW50PXRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIuYm9keSxQcmVjZWRlbmNlLkFzc2lnbm1lbnQsRV9UVFQpLHJlc3VsdD1qb2luKHJlc3VsdCxmcmFnbWVudCkpLHJlc3VsdC5wdXNoKGV4cHIudHlwZT09PVN5bnRheC5HZW5lcmF0b3JFeHByZXNzaW9uP1wiKVwiOlwiXVwiKSxyZXN1bHR9LENvbXByZWhlbnNpb25CbG9jazpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3ZhciBmcmFnbWVudDtyZXR1cm4gZXhwci5sZWZ0LnR5cGU9PT1TeW50YXguVmFyaWFibGVEZWNsYXJhdGlvbj9mcmFnbWVudD1bZXhwci5sZWZ0LmtpbmQsbm9FbXB0eVNwYWNlKCksdGhpcy5nZW5lcmF0ZVN0YXRlbWVudChleHByLmxlZnQuZGVjbGFyYXRpb25zWzBdLFNfRkZGRildOmZyYWdtZW50PXRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIubGVmdCxQcmVjZWRlbmNlLkNhbGwsRV9UVFQpLGZyYWdtZW50PWpvaW4oZnJhZ21lbnQsZXhwci5vZj9cIm9mXCI6XCJpblwiKSxmcmFnbWVudD1qb2luKGZyYWdtZW50LHRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIucmlnaHQsUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCkpLFtcImZvclwiK3NwYWNlK1wiKFwiLGZyYWdtZW50LFwiKVwiXX0sU3ByZWFkRWxlbWVudDpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiBbXCIuLi5cIix0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLmFyZ3VtZW50LFByZWNlZGVuY2UuQXNzaWdubWVudCxFX1RUVCldfSxUYWdnZWRUZW1wbGF0ZUV4cHJlc3Npb246ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXt2YXIgaXRlbUZsYWdzPUVfVFRGO2ZsYWdzJkZfQUxMT1dfQ0FMTHx8KGl0ZW1GbGFncz1FX1RGRik7dmFyIHJlc3VsdD1bdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci50YWcsUHJlY2VkZW5jZS5DYWxsLGl0ZW1GbGFncyksdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5xdWFzaSxQcmVjZWRlbmNlLlByaW1hcnksRV9GRlQpXTtyZXR1cm4gcGFyZW50aGVzaXplKHJlc3VsdCxQcmVjZWRlbmNlLlRhZ2dlZFRlbXBsYXRlLHByZWNlZGVuY2UpfSxUZW1wbGF0ZUVsZW1lbnQ6ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXtyZXR1cm4gZXhwci52YWx1ZS5yYXd9LFRlbXBsYXRlTGl0ZXJhbDpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3ZhciByZXN1bHQsaSxpejtmb3IocmVzdWx0PVtcImBcIl0saT0wLGl6PWV4cHIucXVhc2lzLmxlbmd0aDtpPGl6OysraSlyZXN1bHQucHVzaCh0aGlzLmdlbmVyYXRlRXhwcmVzc2lvbihleHByLnF1YXNpc1tpXSxQcmVjZWRlbmNlLlByaW1hcnksRV9UVFQpKSxpKzE8aXomJihyZXN1bHQucHVzaChcIiR7XCIrc3BhY2UpLHJlc3VsdC5wdXNoKHRoaXMuZ2VuZXJhdGVFeHByZXNzaW9uKGV4cHIuZXhwcmVzc2lvbnNbaV0sUHJlY2VkZW5jZS5TZXF1ZW5jZSxFX1RUVCkpLHJlc3VsdC5wdXNoKHNwYWNlK1wifVwiKSk7cmV0dXJuIHJlc3VsdC5wdXNoKFwiYFwiKSxyZXN1bHR9LE1vZHVsZVNwZWNpZmllcjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZ3Mpe3JldHVybiB0aGlzLkxpdGVyYWwoZXhwcixwcmVjZWRlbmNlLGZsYWdzKX0sSW1wb3J0RXhwcmVzc2lvbjpmdW5jdGlvbihleHByLHByZWNlZGVuY2UsZmxhZyl7cmV0dXJuIHBhcmVudGhlc2l6ZShbXCJpbXBvcnQoXCIsdGhpcy5nZW5lcmF0ZUV4cHJlc3Npb24oZXhwci5zb3VyY2UsUHJlY2VkZW5jZS5Bc3NpZ25tZW50LEVfVFRUKSxcIilcIl0sUHJlY2VkZW5jZS5DYWxsLHByZWNlZGVuY2UpfX0sbWVyZ2UoQ29kZUdlbmVyYXRvci5wcm90b3R5cGUsQ29kZUdlbmVyYXRvci5FeHByZXNzaW9uKSxDb2RlR2VuZXJhdG9yLnByb3RvdHlwZS5nZW5lcmF0ZUV4cHJlc3Npb249ZnVuY3Rpb24oZXhwcixwcmVjZWRlbmNlLGZsYWdzKXt2YXIgcmVzdWx0LHR5cGU7cmV0dXJuIHR5cGU9ZXhwci50eXBlfHxTeW50YXguUHJvcGVydHksZXh0cmEudmVyYmF0aW0mJmV4cHIuaGFzT3duUHJvcGVydHkoZXh0cmEudmVyYmF0aW0pP2dlbmVyYXRlVmVyYmF0aW0oZXhwcixwcmVjZWRlbmNlKToocmVzdWx0PXRoaXNbdHlwZV0oZXhwcixwcmVjZWRlbmNlLGZsYWdzKSxleHRyYS5jb21tZW50JiYocmVzdWx0PWFkZENvbW1lbnRzKGV4cHIscmVzdWx0KSksdG9Tb3VyY2VOb2RlV2hlbk5lZWRlZChyZXN1bHQsZXhwcikpfSxDb2RlR2VuZXJhdG9yLnByb3RvdHlwZS5nZW5lcmF0ZVN0YXRlbWVudD1mdW5jdGlvbihzdG10LGZsYWdzKXt2YXIgcmVzdWx0LGZyYWdtZW50O3JldHVybiByZXN1bHQ9dGhpc1tzdG10LnR5cGVdKHN0bXQsZmxhZ3MpLGV4dHJhLmNvbW1lbnQmJihyZXN1bHQ9YWRkQ29tbWVudHMoc3RtdCxyZXN1bHQpKSxmcmFnbWVudD10b1NvdXJjZU5vZGVXaGVuTmVlZGVkKHJlc3VsdCkudG9TdHJpbmcoKSxzdG10LnR5cGU9PT1TeW50YXguUHJvZ3JhbSYmIXNhZmVDb25jYXRlbmF0aW9uJiZuZXdsaW5lPT09XCJcIiYmZnJhZ21lbnQuY2hhckF0KGZyYWdtZW50Lmxlbmd0aC0xKT09PWBcbmAmJihyZXN1bHQ9c291cmNlTWFwP3RvU291cmNlTm9kZVdoZW5OZWVkZWQocmVzdWx0KS5yZXBsYWNlUmlnaHQoL1xccyskLyxcIlwiKTpmcmFnbWVudC5yZXBsYWNlKC9cXHMrJC8sXCJcIikpLHRvU291cmNlTm9kZVdoZW5OZWVkZWQocmVzdWx0LHN0bXQpfTtmdW5jdGlvbiBnZW5lcmF0ZUludGVybmFsKG5vZGUpe3ZhciBjb2RlZ2VuO2lmKGNvZGVnZW49bmV3IENvZGVHZW5lcmF0b3IsaXNTdGF0ZW1lbnQobm9kZSkpcmV0dXJuIGNvZGVnZW4uZ2VuZXJhdGVTdGF0ZW1lbnQobm9kZSxTX1RGRkYpO2lmKGlzRXhwcmVzc2lvbihub2RlKSlyZXR1cm4gY29kZWdlbi5nZW5lcmF0ZUV4cHJlc3Npb24obm9kZSxQcmVjZWRlbmNlLlNlcXVlbmNlLEVfVFRUKTt0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIG5vZGUgdHlwZTogXCIrbm9kZS50eXBlKX1mdW5jdGlvbiBnZW5lcmF0ZTIobm9kZSxvcHRpb25zKXt2YXIgZGVmYXVsdE9wdGlvbnMyPWdldERlZmF1bHRPcHRpb25zKCkscmVzdWx0LHBhaXI7cmV0dXJuIG9wdGlvbnMhPW51bGw/KHR5cGVvZiBvcHRpb25zLmluZGVudD09XCJzdHJpbmdcIiYmKGRlZmF1bHRPcHRpb25zMi5mb3JtYXQuaW5kZW50LnN0eWxlPW9wdGlvbnMuaW5kZW50KSx0eXBlb2Ygb3B0aW9ucy5iYXNlPT1cIm51bWJlclwiJiYoZGVmYXVsdE9wdGlvbnMyLmZvcm1hdC5pbmRlbnQuYmFzZT1vcHRpb25zLmJhc2UpLG9wdGlvbnM9dXBkYXRlRGVlcGx5KGRlZmF1bHRPcHRpb25zMixvcHRpb25zKSxpbmRlbnQ9b3B0aW9ucy5mb3JtYXQuaW5kZW50LnN0eWxlLHR5cGVvZiBvcHRpb25zLmJhc2U9PVwic3RyaW5nXCI/YmFzZTI9b3B0aW9ucy5iYXNlOmJhc2UyPXN0cmluZ1JlcGVhdChpbmRlbnQsb3B0aW9ucy5mb3JtYXQuaW5kZW50LmJhc2UpKToob3B0aW9ucz1kZWZhdWx0T3B0aW9uczIsaW5kZW50PW9wdGlvbnMuZm9ybWF0LmluZGVudC5zdHlsZSxiYXNlMj1zdHJpbmdSZXBlYXQoaW5kZW50LG9wdGlvbnMuZm9ybWF0LmluZGVudC5iYXNlKSksanNvbj1vcHRpb25zLmZvcm1hdC5qc29uLHJlbnVtYmVyPW9wdGlvbnMuZm9ybWF0LnJlbnVtYmVyLGhleGFkZWNpbWFsPWpzb24/ITE6b3B0aW9ucy5mb3JtYXQuaGV4YWRlY2ltYWwscXVvdGVzPWpzb24/XCJkb3VibGVcIjpvcHRpb25zLmZvcm1hdC5xdW90ZXMsZXNjYXBlbGVzcz1vcHRpb25zLmZvcm1hdC5lc2NhcGVsZXNzLG5ld2xpbmU9b3B0aW9ucy5mb3JtYXQubmV3bGluZSxzcGFjZT1vcHRpb25zLmZvcm1hdC5zcGFjZSxvcHRpb25zLmZvcm1hdC5jb21wYWN0JiYobmV3bGluZT1zcGFjZT1pbmRlbnQ9YmFzZTI9XCJcIikscGFyZW50aGVzZXM9b3B0aW9ucy5mb3JtYXQucGFyZW50aGVzZXMsc2VtaWNvbG9ucz1vcHRpb25zLmZvcm1hdC5zZW1pY29sb25zLHNhZmVDb25jYXRlbmF0aW9uPW9wdGlvbnMuZm9ybWF0LnNhZmVDb25jYXRlbmF0aW9uLGRpcmVjdGl2ZT1vcHRpb25zLmRpcmVjdGl2ZSxwYXJzZTU9anNvbj9udWxsOm9wdGlvbnMucGFyc2Usc291cmNlTWFwPW9wdGlvbnMuc291cmNlTWFwLHNvdXJjZUNvZGU9b3B0aW9ucy5zb3VyY2VDb2RlLHByZXNlcnZlQmxhbmtMaW5lcz1vcHRpb25zLmZvcm1hdC5wcmVzZXJ2ZUJsYW5rTGluZXMmJnNvdXJjZUNvZGUhPT1udWxsLGV4dHJhPW9wdGlvbnMsc291cmNlTWFwJiYoZXhwb3J0cy5icm93c2VyP1NvdXJjZU5vZGU9Z2xvYmFsLnNvdXJjZU1hcC5Tb3VyY2VOb2RlOlNvdXJjZU5vZGU9cmVxdWlyZV9zb3VyY2VfbWFwKCkuU291cmNlTm9kZSkscmVzdWx0PWdlbmVyYXRlSW50ZXJuYWwobm9kZSksc291cmNlTWFwPyhwYWlyPXJlc3VsdC50b1N0cmluZ1dpdGhTb3VyY2VNYXAoe2ZpbGU6b3B0aW9ucy5maWxlLHNvdXJjZVJvb3Q6b3B0aW9ucy5zb3VyY2VNYXBSb290fSksb3B0aW9ucy5zb3VyY2VDb250ZW50JiZwYWlyLm1hcC5zZXRTb3VyY2VDb250ZW50KG9wdGlvbnMuc291cmNlTWFwLG9wdGlvbnMuc291cmNlQ29udGVudCksb3B0aW9ucy5zb3VyY2VNYXBXaXRoQ29kZT9wYWlyOnBhaXIubWFwLnRvU3RyaW5nKCkpOihwYWlyPXtjb2RlOnJlc3VsdC50b1N0cmluZygpLG1hcDpudWxsfSxvcHRpb25zLnNvdXJjZU1hcFdpdGhDb2RlP3BhaXI6cGFpci5jb2RlKX1GT1JNQVRfTUlOSUZZPXtpbmRlbnQ6e3N0eWxlOlwiXCIsYmFzZTowfSxyZW51bWJlcjohMCxoZXhhZGVjaW1hbDohMCxxdW90ZXM6XCJhdXRvXCIsZXNjYXBlbGVzczohMCxjb21wYWN0OiEwLHBhcmVudGhlc2VzOiExLHNlbWljb2xvbnM6ITF9LEZPUk1BVF9ERUZBVUxUUz1nZXREZWZhdWx0T3B0aW9ucygpLmZvcm1hdCxleHBvcnRzLnZlcnNpb249cmVxdWlyZV9wYWNrYWdlKCkudmVyc2lvbixleHBvcnRzLmdlbmVyYXRlPWdlbmVyYXRlMixleHBvcnRzLmF0dGFjaENvbW1lbnRzPWVzdHJhdmVyc2UuYXR0YWNoQ29tbWVudHMsZXhwb3J0cy5QcmVjZWRlbmNlPXVwZGF0ZURlZXBseSh7fSxQcmVjZWRlbmNlKSxleHBvcnRzLmJyb3dzZXI9ITEsZXhwb3J0cy5GT1JNQVRfTUlOSUZZPUZPUk1BVF9NSU5JRlksZXhwb3J0cy5GT1JNQVRfREVGQVVMVFM9Rk9STUFUX0RFRkFVTFRTO30pKCk7fX0pO3ZhciBhY29ybl9leHBvcnRzPXt9O19fZXhwb3J0KGFjb3JuX2V4cG9ydHMse05vZGU6KCk9Pk5vZGUsUGFyc2VyOigpPT5QYXJzZXIsUG9zaXRpb246KCk9PlBvc2l0aW9uLFNvdXJjZUxvY2F0aW9uOigpPT5Tb3VyY2VMb2NhdGlvbixUb2tDb250ZXh0OigpPT5Ub2tDb250ZXh0LFRva2VuOigpPT5Ub2tlbixUb2tlblR5cGU6KCk9PlRva2VuVHlwZSxkZWZhdWx0T3B0aW9uczooKT0+ZGVmYXVsdE9wdGlvbnMsZ2V0TGluZUluZm86KCk9PmdldExpbmVJbmZvLGlzSWRlbnRpZmllckNoYXI6KCk9PmlzSWRlbnRpZmllckNoYXIsaXNJZGVudGlmaWVyU3RhcnQ6KCk9PmlzSWRlbnRpZmllclN0YXJ0LGlzTmV3TGluZTooKT0+aXNOZXdMaW5lLGtleXdvcmRUeXBlczooKT0+a2V5d29yZHMkMSxsaW5lQnJlYWs6KCk9PmxpbmVCcmVhayxsaW5lQnJlYWtHOigpPT5saW5lQnJlYWtHLG5vbkFTQ0lJd2hpdGVzcGFjZTooKT0+bm9uQVNDSUl3aGl0ZXNwYWNlLHBhcnNlOigpPT5wYXJzZTMscGFyc2VFeHByZXNzaW9uQXQ6KCk9PnBhcnNlRXhwcmVzc2lvbkF0Mix0b2tDb250ZXh0czooKT0+dHlwZXMkMSx0b2tUeXBlczooKT0+dHlwZXMsdG9rZW5pemVyOigpPT50b2tlbml6ZXIyLHZlcnNpb246KCk9PnZlcnNpb259KTtmdW5jdGlvbiBpc0luQXN0cmFsU2V0KGNvZGUsc2V0KXtmb3IodmFyIHBvcz02NTUzNixpPTA7aTxzZXQubGVuZ3RoO2krPTIpe2lmKHBvcys9c2V0W2ldLHBvcz5jb2RlKXJldHVybiAhMTtpZihwb3MrPXNldFtpKzFdLHBvcz49Y29kZSlyZXR1cm4gITB9fWZ1bmN0aW9uIGlzSWRlbnRpZmllclN0YXJ0KGNvZGUsYXN0cmFsKXtyZXR1cm4gY29kZTw2NT9jb2RlPT09MzY6Y29kZTw5MT8hMDpjb2RlPDk3P2NvZGU9PT05NTpjb2RlPDEyMz8hMDpjb2RlPD02NTUzNT9jb2RlPj0xNzAmJm5vbkFTQ0lJaWRlbnRpZmllclN0YXJ0LnRlc3QoU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKSk6YXN0cmFsPT09ITE/ITE6aXNJbkFzdHJhbFNldChjb2RlLGFzdHJhbElkZW50aWZpZXJTdGFydENvZGVzKX1mdW5jdGlvbiBpc0lkZW50aWZpZXJDaGFyKGNvZGUsYXN0cmFsKXtyZXR1cm4gY29kZTw0OD9jb2RlPT09MzY6Y29kZTw1OD8hMDpjb2RlPDY1PyExOmNvZGU8OTE/ITA6Y29kZTw5Nz9jb2RlPT09OTU6Y29kZTwxMjM/ITA6Y29kZTw9NjU1MzU/Y29kZT49MTcwJiZub25BU0NJSWlkZW50aWZpZXIudGVzdChTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGUpKTphc3RyYWw9PT0hMT8hMTppc0luQXN0cmFsU2V0KGNvZGUsYXN0cmFsSWRlbnRpZmllclN0YXJ0Q29kZXMpfHxpc0luQXN0cmFsU2V0KGNvZGUsYXN0cmFsSWRlbnRpZmllckNvZGVzKX1mdW5jdGlvbiBiaW5vcChuYW1lLHByZWMpe3JldHVybiBuZXcgVG9rZW5UeXBlKG5hbWUse2JlZm9yZUV4cHI6ITAsYmlub3A6cHJlY30pfWZ1bmN0aW9uIGt3KG5hbWUsb3B0aW9ucyl7cmV0dXJuIG9wdGlvbnM9PT12b2lkIDAmJihvcHRpb25zPXt9KSxvcHRpb25zLmtleXdvcmQ9bmFtZSxrZXl3b3JkcyQxW25hbWVdPW5ldyBUb2tlblR5cGUobmFtZSxvcHRpb25zKX1mdW5jdGlvbiBpc05ld0xpbmUoY29kZSxlY21hMjAxOVN0cmluZyl7cmV0dXJuIGNvZGU9PT0xMHx8Y29kZT09PTEzfHwhZWNtYTIwMTlTdHJpbmcmJihjb2RlPT09ODIzMnx8Y29kZT09PTgyMzMpfWZ1bmN0aW9uIGhhcyhvYmoscHJvcE5hbWUpe3JldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixwcm9wTmFtZSl9ZnVuY3Rpb24gd29yZHNSZWdleHAod29yZHMpe3JldHVybiBuZXcgUmVnRXhwKFwiXig/OlwiK3dvcmRzLnJlcGxhY2UoLyAvZyxcInxcIikrXCIpJFwiKX1mdW5jdGlvbiBnZXRMaW5lSW5mbyhpbnB1dCxvZmZzZXQyKXtmb3IodmFyIGxpbmU9MSxjdXI9MDs7KXtsaW5lQnJlYWtHLmxhc3RJbmRleD1jdXI7dmFyIG1hdGNoPWxpbmVCcmVha0cuZXhlYyhpbnB1dCk7aWYobWF0Y2gmJm1hdGNoLmluZGV4PG9mZnNldDIpKytsaW5lLGN1cj1tYXRjaC5pbmRleCttYXRjaFswXS5sZW5ndGg7ZWxzZSByZXR1cm4gbmV3IFBvc2l0aW9uKGxpbmUsb2Zmc2V0Mi1jdXIpfX1mdW5jdGlvbiBnZXRPcHRpb25zKG9wdHMpe3ZhciBvcHRpb25zPXt9O2Zvcih2YXIgb3B0IGluIGRlZmF1bHRPcHRpb25zKW9wdGlvbnNbb3B0XT1vcHRzJiZoYXMob3B0cyxvcHQpP29wdHNbb3B0XTpkZWZhdWx0T3B0aW9uc1tvcHRdO2lmKG9wdGlvbnMuZWNtYVZlcnNpb24+PTIwMTUmJihvcHRpb25zLmVjbWFWZXJzaW9uLT0yMDA5KSxvcHRpb25zLmFsbG93UmVzZXJ2ZWQ9PW51bGwmJihvcHRpb25zLmFsbG93UmVzZXJ2ZWQ9b3B0aW9ucy5lY21hVmVyc2lvbjw1KSxpc0FycmF5KG9wdGlvbnMub25Ub2tlbikpe3ZhciB0b2tlbnM9b3B0aW9ucy5vblRva2VuO29wdGlvbnMub25Ub2tlbj1mdW5jdGlvbih0b2tlbil7cmV0dXJuIHRva2Vucy5wdXNoKHRva2VuKX07fXJldHVybiBpc0FycmF5KG9wdGlvbnMub25Db21tZW50KSYmKG9wdGlvbnMub25Db21tZW50PXB1c2hDb21tZW50KG9wdGlvbnMsb3B0aW9ucy5vbkNvbW1lbnQpKSxvcHRpb25zfWZ1bmN0aW9uIHB1c2hDb21tZW50KG9wdGlvbnMsYXJyYXkpe3JldHVybiBmdW5jdGlvbihibG9jayx0ZXh0LHN0YXJ0LGVuZCxzdGFydExvYyxlbmRMb2Mpe3ZhciBjb21tZW50PXt0eXBlOmJsb2NrP1wiQmxvY2tcIjpcIkxpbmVcIix2YWx1ZTp0ZXh0LHN0YXJ0LGVuZH07b3B0aW9ucy5sb2NhdGlvbnMmJihjb21tZW50LmxvYz1uZXcgU291cmNlTG9jYXRpb24odGhpcyxzdGFydExvYyxlbmRMb2MpKSxvcHRpb25zLnJhbmdlcyYmKGNvbW1lbnQucmFuZ2U9W3N0YXJ0LGVuZF0pLGFycmF5LnB1c2goY29tbWVudCk7fX1mdW5jdGlvbiBmdW5jdGlvbkZsYWdzKGFzeW5jLGdlbmVyYXRvcil7cmV0dXJuIFNDT1BFX0ZVTkNUSU9OfChhc3luYz9TQ09QRV9BU1lOQzowKXwoZ2VuZXJhdG9yP1NDT1BFX0dFTkVSQVRPUjowKX1mdW5jdGlvbiBEZXN0cnVjdHVyaW5nRXJyb3JzKCl7dGhpcy5zaG9ydGhhbmRBc3NpZ249dGhpcy50cmFpbGluZ0NvbW1hPXRoaXMucGFyZW50aGVzaXplZEFzc2lnbj10aGlzLnBhcmVudGhlc2l6ZWRCaW5kPXRoaXMuZG91YmxlUHJvdG89LTE7fWZ1bmN0aW9uIGZpbmlzaE5vZGVBdChub2RlLHR5cGUscG9zLGxvYyl7cmV0dXJuIG5vZGUudHlwZT10eXBlLG5vZGUuZW5kPXBvcyx0aGlzLm9wdGlvbnMubG9jYXRpb25zJiYobm9kZS5sb2MuZW5kPWxvYyksdGhpcy5vcHRpb25zLnJhbmdlcyYmKG5vZGUucmFuZ2VbMV09cG9zKSxub2RlfWZ1bmN0aW9uIGJ1aWxkVW5pY29kZURhdGEoZWNtYVZlcnNpb24pe3ZhciBkPWRhdGFbZWNtYVZlcnNpb25dPXtiaW5hcnk6d29yZHNSZWdleHAodW5pY29kZUJpbmFyeVByb3BlcnRpZXNbZWNtYVZlcnNpb25dK1wiIFwiK3VuaWNvZGVHZW5lcmFsQ2F0ZWdvcnlWYWx1ZXMpLG5vbkJpbmFyeTp7R2VuZXJhbF9DYXRlZ29yeTp3b3Jkc1JlZ2V4cCh1bmljb2RlR2VuZXJhbENhdGVnb3J5VmFsdWVzKSxTY3JpcHQ6d29yZHNSZWdleHAodW5pY29kZVNjcmlwdFZhbHVlc1tlY21hVmVyc2lvbl0pfX07ZC5ub25CaW5hcnkuU2NyaXB0X0V4dGVuc2lvbnM9ZC5ub25CaW5hcnkuU2NyaXB0LGQubm9uQmluYXJ5LmdjPWQubm9uQmluYXJ5LkdlbmVyYWxfQ2F0ZWdvcnksZC5ub25CaW5hcnkuc2M9ZC5ub25CaW5hcnkuU2NyaXB0LGQubm9uQmluYXJ5LnNjeD1kLm5vbkJpbmFyeS5TY3JpcHRfRXh0ZW5zaW9uczt9ZnVuY3Rpb24gY29kZVBvaW50VG9TdHJpbmcoY2gpe3JldHVybiBjaDw9NjU1MzU/U3RyaW5nLmZyb21DaGFyQ29kZShjaCk6KGNoLT02NTUzNixTdHJpbmcuZnJvbUNoYXJDb2RlKChjaD4+MTApKzU1Mjk2LChjaCYxMDIzKSs1NjMyMCkpfWZ1bmN0aW9uIGlzU3ludGF4Q2hhcmFjdGVyKGNoKXtyZXR1cm4gY2g9PT0zNnx8Y2g+PTQwJiZjaDw9NDN8fGNoPT09NDZ8fGNoPT09NjN8fGNoPj05MSYmY2g8PTk0fHxjaD49MTIzJiZjaDw9MTI1fWZ1bmN0aW9uIGlzUmVnRXhwSWRlbnRpZmllclN0YXJ0KGNoKXtyZXR1cm4gaXNJZGVudGlmaWVyU3RhcnQoY2gsITApfHxjaD09PTM2fHxjaD09PTk1fWZ1bmN0aW9uIGlzUmVnRXhwSWRlbnRpZmllclBhcnQoY2gpe3JldHVybiBpc0lkZW50aWZpZXJDaGFyKGNoLCEwKXx8Y2g9PT0zNnx8Y2g9PT05NXx8Y2g9PT04MjA0fHxjaD09PTgyMDV9ZnVuY3Rpb24gaXNDb250cm9sTGV0dGVyKGNoKXtyZXR1cm4gY2g+PTY1JiZjaDw9OTB8fGNoPj05NyYmY2g8PTEyMn1mdW5jdGlvbiBpc1ZhbGlkVW5pY29kZShjaCl7cmV0dXJuIGNoPj0wJiZjaDw9MTExNDExMX1mdW5jdGlvbiBpc0NoYXJhY3RlckNsYXNzRXNjYXBlKGNoKXtyZXR1cm4gY2g9PT0xMDB8fGNoPT09Njh8fGNoPT09MTE1fHxjaD09PTgzfHxjaD09PTExOXx8Y2g9PT04N31mdW5jdGlvbiBpc1VuaWNvZGVQcm9wZXJ0eU5hbWVDaGFyYWN0ZXIoY2gpe3JldHVybiBpc0NvbnRyb2xMZXR0ZXIoY2gpfHxjaD09PTk1fWZ1bmN0aW9uIGlzVW5pY29kZVByb3BlcnR5VmFsdWVDaGFyYWN0ZXIoY2gpe3JldHVybiBpc1VuaWNvZGVQcm9wZXJ0eU5hbWVDaGFyYWN0ZXIoY2gpfHxpc0RlY2ltYWxEaWdpdChjaCl9ZnVuY3Rpb24gaXNEZWNpbWFsRGlnaXQoY2gpe3JldHVybiBjaD49NDgmJmNoPD01N31mdW5jdGlvbiBpc0hleERpZ2l0KGNoKXtyZXR1cm4gY2g+PTQ4JiZjaDw9NTd8fGNoPj02NSYmY2g8PTcwfHxjaD49OTcmJmNoPD0xMDJ9ZnVuY3Rpb24gaGV4VG9JbnQoY2gpe3JldHVybiBjaD49NjUmJmNoPD03MD8xMCsoY2gtNjUpOmNoPj05NyYmY2g8PTEwMj8xMCsoY2gtOTcpOmNoLTQ4fWZ1bmN0aW9uIGlzT2N0YWxEaWdpdChjaCl7cmV0dXJuIGNoPj00OCYmY2g8PTU1fWZ1bmN0aW9uIHN0cmluZ1RvTnVtYmVyKHN0cixpc0xlZ2FjeU9jdGFsTnVtZXJpY0xpdGVyYWwpe3JldHVybiBpc0xlZ2FjeU9jdGFsTnVtZXJpY0xpdGVyYWw/cGFyc2VJbnQoc3RyLDgpOnBhcnNlRmxvYXQoc3RyLnJlcGxhY2UoL18vZyxcIlwiKSl9ZnVuY3Rpb24gc3RyaW5nVG9CaWdJbnQoc3RyKXtyZXR1cm4gdHlwZW9mIEJpZ0ludCE9XCJmdW5jdGlvblwiP251bGw6QmlnSW50KHN0ci5yZXBsYWNlKC9fL2csXCJcIikpfWZ1bmN0aW9uIGNvZGVQb2ludFRvU3RyaW5nJDEoY29kZSl7cmV0dXJuIGNvZGU8PTY1NTM1P1N0cmluZy5mcm9tQ2hhckNvZGUoY29kZSk6KGNvZGUtPTY1NTM2LFN0cmluZy5mcm9tQ2hhckNvZGUoKGNvZGU+PjEwKSs1NTI5NiwoY29kZSYxMDIzKSs1NjMyMCkpfWZ1bmN0aW9uIHBhcnNlMyhpbnB1dCxvcHRpb25zKXtyZXR1cm4gUGFyc2VyLnBhcnNlKGlucHV0LG9wdGlvbnMpfWZ1bmN0aW9uIHBhcnNlRXhwcmVzc2lvbkF0MihpbnB1dCxwb3Msb3B0aW9ucyl7cmV0dXJuIFBhcnNlci5wYXJzZUV4cHJlc3Npb25BdChpbnB1dCxwb3Msb3B0aW9ucyl9ZnVuY3Rpb24gdG9rZW5pemVyMihpbnB1dCxvcHRpb25zKXtyZXR1cm4gUGFyc2VyLnRva2VuaXplcihpbnB1dCxvcHRpb25zKX12YXIgcmVzZXJ2ZWRXb3JkcyxlY21hNUFuZExlc3NLZXl3b3JkcyxrZXl3b3JkcyxrZXl3b3JkUmVsYXRpb25hbE9wZXJhdG9yLG5vbkFTQ0lJaWRlbnRpZmllclN0YXJ0Q2hhcnMsbm9uQVNDSUlpZGVudGlmaWVyQ2hhcnMsbm9uQVNDSUlpZGVudGlmaWVyU3RhcnQsbm9uQVNDSUlpZGVudGlmaWVyLGFzdHJhbElkZW50aWZpZXJTdGFydENvZGVzLGFzdHJhbElkZW50aWZpZXJDb2RlcyxUb2tlblR5cGUsYmVmb3JlRXhwcixzdGFydHNFeHByLGtleXdvcmRzJDEsdHlwZXMsbGluZUJyZWFrLGxpbmVCcmVha0csbm9uQVNDSUl3aGl0ZXNwYWNlLHNraXBXaGl0ZVNwYWNlLHJlZixoYXNPd25Qcm9wZXJ0eSx0b1N0cmluZyxpc0FycmF5LFBvc2l0aW9uLFNvdXJjZUxvY2F0aW9uLGRlZmF1bHRPcHRpb25zLFNDT1BFX1RPUCxTQ09QRV9GVU5DVElPTixTQ09QRV9WQVIsU0NPUEVfQVNZTkMsU0NPUEVfR0VORVJBVE9SLFNDT1BFX0FSUk9XLFNDT1BFX1NJTVBMRV9DQVRDSCxTQ09QRV9TVVBFUixTQ09QRV9ESVJFQ1RfU1VQRVIsQklORF9OT05FLEJJTkRfVkFSLEJJTkRfTEVYSUNBTCxCSU5EX0ZVTkNUSU9OLEJJTkRfU0lNUExFX0NBVENILEJJTkRfT1VUU0lERSxQYXJzZXIscHJvdG90eXBlQWNjZXNzb3JzLHBwLGxpdGVyYWwscHAkMSxsb29wTGFiZWwsc3dpdGNoTGFiZWwsZW1wdHksRlVOQ19TVEFURU1FTlQsRlVOQ19IQU5HSU5HX1NUQVRFTUVOVCxGVU5DX05VTExBQkxFX0lELHBwJDIscHAkMyxlbXB0eSQxLHBwJDQscHAkNSxTY29wZSxOb2RlLHBwJDYsVG9rQ29udGV4dCx0eXBlcyQxLHBwJDcsZWNtYTlCaW5hcnlQcm9wZXJ0aWVzLGVjbWExMEJpbmFyeVByb3BlcnRpZXMsZWNtYTExQmluYXJ5UHJvcGVydGllcyx1bmljb2RlQmluYXJ5UHJvcGVydGllcyx1bmljb2RlR2VuZXJhbENhdGVnb3J5VmFsdWVzLGVjbWE5U2NyaXB0VmFsdWVzLGVjbWExMFNjcmlwdFZhbHVlcyxlY21hMTFTY3JpcHRWYWx1ZXMsdW5pY29kZVNjcmlwdFZhbHVlcyxkYXRhLHBwJDgsUmVnRXhwVmFsaWRhdGlvblN0YXRlLFRva2VuLHBwJDksSU5WQUxJRF9URU1QTEFURV9FU0NBUEVfRVJST1IsdmVyc2lvbixpbml0X2Fjb3JuPV9fZXNtKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9hY29ybi9kaXN0L2Fjb3JuLm1qc1wiKCl7cmVzZXJ2ZWRXb3Jkcz17MzpcImFic3RyYWN0IGJvb2xlYW4gYnl0ZSBjaGFyIGNsYXNzIGRvdWJsZSBlbnVtIGV4cG9ydCBleHRlbmRzIGZpbmFsIGZsb2F0IGdvdG8gaW1wbGVtZW50cyBpbXBvcnQgaW50IGludGVyZmFjZSBsb25nIG5hdGl2ZSBwYWNrYWdlIHByaXZhdGUgcHJvdGVjdGVkIHB1YmxpYyBzaG9ydCBzdGF0aWMgc3VwZXIgc3luY2hyb25pemVkIHRocm93cyB0cmFuc2llbnQgdm9sYXRpbGVcIiw1OlwiY2xhc3MgZW51bSBleHRlbmRzIHN1cGVyIGNvbnN0IGV4cG9ydCBpbXBvcnRcIiw2OlwiZW51bVwiLHN0cmljdDpcImltcGxlbWVudHMgaW50ZXJmYWNlIGxldCBwYWNrYWdlIHByaXZhdGUgcHJvdGVjdGVkIHB1YmxpYyBzdGF0aWMgeWllbGRcIixzdHJpY3RCaW5kOlwiZXZhbCBhcmd1bWVudHNcIn0sZWNtYTVBbmRMZXNzS2V5d29yZHM9XCJicmVhayBjYXNlIGNhdGNoIGNvbnRpbnVlIGRlYnVnZ2VyIGRlZmF1bHQgZG8gZWxzZSBmaW5hbGx5IGZvciBmdW5jdGlvbiBpZiByZXR1cm4gc3dpdGNoIHRocm93IHRyeSB2YXIgd2hpbGUgd2l0aCBudWxsIHRydWUgZmFsc2UgaW5zdGFuY2VvZiB0eXBlb2Ygdm9pZCBkZWxldGUgbmV3IGluIHRoaXNcIixrZXl3b3Jkcz17NTplY21hNUFuZExlc3NLZXl3b3JkcyxcIjVtb2R1bGVcIjplY21hNUFuZExlc3NLZXl3b3JkcytcIiBleHBvcnQgaW1wb3J0XCIsNjplY21hNUFuZExlc3NLZXl3b3JkcytcIiBjb25zdCBjbGFzcyBleHRlbmRzIGV4cG9ydCBpbXBvcnQgc3VwZXJcIn0sa2V5d29yZFJlbGF0aW9uYWxPcGVyYXRvcj0vXmluKHN0YW5jZW9mKT8kLyxub25BU0NJSWlkZW50aWZpZXJTdGFydENoYXJzPVwiXFx4QUFcXHhCNVxceEJBXFx4QzAtXFx4RDZcXHhEOC1cXHhGNlxceEY4LVxcdTAyQzFcXHUwMkM2LVxcdTAyRDFcXHUwMkUwLVxcdTAyRTRcXHUwMkVDXFx1MDJFRVxcdTAzNzAtXFx1MDM3NFxcdTAzNzZcXHUwMzc3XFx1MDM3QS1cXHUwMzdEXFx1MDM3RlxcdTAzODZcXHUwMzg4LVxcdTAzOEFcXHUwMzhDXFx1MDM4RS1cXHUwM0ExXFx1MDNBMy1cXHUwM0Y1XFx1MDNGNy1cXHUwNDgxXFx1MDQ4QS1cXHUwNTJGXFx1MDUzMS1cXHUwNTU2XFx1MDU1OVxcdTA1NjAtXFx1MDU4OFxcdTA1RDAtXFx1MDVFQVxcdTA1RUYtXFx1MDVGMlxcdTA2MjAtXFx1MDY0QVxcdTA2NkVcXHUwNjZGXFx1MDY3MS1cXHUwNkQzXFx1MDZENVxcdTA2RTVcXHUwNkU2XFx1MDZFRVxcdTA2RUZcXHUwNkZBLVxcdTA2RkNcXHUwNkZGXFx1MDcxMFxcdTA3MTItXFx1MDcyRlxcdTA3NEQtXFx1MDdBNVxcdTA3QjFcXHUwN0NBLVxcdTA3RUFcXHUwN0Y0XFx1MDdGNVxcdTA3RkFcXHUwODAwLVxcdTA4MTVcXHUwODFBXFx1MDgyNFxcdTA4MjhcXHUwODQwLVxcdTA4NThcXHUwODYwLVxcdTA4NkFcXHUwOEEwLVxcdTA4QjRcXHUwOEI2LVxcdTA4QzdcXHUwOTA0LVxcdTA5MzlcXHUwOTNEXFx1MDk1MFxcdTA5NTgtXFx1MDk2MVxcdTA5NzEtXFx1MDk4MFxcdTA5ODUtXFx1MDk4Q1xcdTA5OEZcXHUwOTkwXFx1MDk5My1cXHUwOUE4XFx1MDlBQS1cXHUwOUIwXFx1MDlCMlxcdTA5QjYtXFx1MDlCOVxcdTA5QkRcXHUwOUNFXFx1MDlEQ1xcdTA5RERcXHUwOURGLVxcdTA5RTFcXHUwOUYwXFx1MDlGMVxcdTA5RkNcXHUwQTA1LVxcdTBBMEFcXHUwQTBGXFx1MEExMFxcdTBBMTMtXFx1MEEyOFxcdTBBMkEtXFx1MEEzMFxcdTBBMzJcXHUwQTMzXFx1MEEzNVxcdTBBMzZcXHUwQTM4XFx1MEEzOVxcdTBBNTktXFx1MEE1Q1xcdTBBNUVcXHUwQTcyLVxcdTBBNzRcXHUwQTg1LVxcdTBBOERcXHUwQThGLVxcdTBBOTFcXHUwQTkzLVxcdTBBQThcXHUwQUFBLVxcdTBBQjBcXHUwQUIyXFx1MEFCM1xcdTBBQjUtXFx1MEFCOVxcdTBBQkRcXHUwQUQwXFx1MEFFMFxcdTBBRTFcXHUwQUY5XFx1MEIwNS1cXHUwQjBDXFx1MEIwRlxcdTBCMTBcXHUwQjEzLVxcdTBCMjhcXHUwQjJBLVxcdTBCMzBcXHUwQjMyXFx1MEIzM1xcdTBCMzUtXFx1MEIzOVxcdTBCM0RcXHUwQjVDXFx1MEI1RFxcdTBCNUYtXFx1MEI2MVxcdTBCNzFcXHUwQjgzXFx1MEI4NS1cXHUwQjhBXFx1MEI4RS1cXHUwQjkwXFx1MEI5Mi1cXHUwQjk1XFx1MEI5OVxcdTBCOUFcXHUwQjlDXFx1MEI5RVxcdTBCOUZcXHUwQkEzXFx1MEJBNFxcdTBCQTgtXFx1MEJBQVxcdTBCQUUtXFx1MEJCOVxcdTBCRDBcXHUwQzA1LVxcdTBDMENcXHUwQzBFLVxcdTBDMTBcXHUwQzEyLVxcdTBDMjhcXHUwQzJBLVxcdTBDMzlcXHUwQzNEXFx1MEM1OC1cXHUwQzVBXFx1MEM2MFxcdTBDNjFcXHUwQzgwXFx1MEM4NS1cXHUwQzhDXFx1MEM4RS1cXHUwQzkwXFx1MEM5Mi1cXHUwQ0E4XFx1MENBQS1cXHUwQ0IzXFx1MENCNS1cXHUwQ0I5XFx1MENCRFxcdTBDREVcXHUwQ0UwXFx1MENFMVxcdTBDRjFcXHUwQ0YyXFx1MEQwNC1cXHUwRDBDXFx1MEQwRS1cXHUwRDEwXFx1MEQxMi1cXHUwRDNBXFx1MEQzRFxcdTBENEVcXHUwRDU0LVxcdTBENTZcXHUwRDVGLVxcdTBENjFcXHUwRDdBLVxcdTBEN0ZcXHUwRDg1LVxcdTBEOTZcXHUwRDlBLVxcdTBEQjFcXHUwREIzLVxcdTBEQkJcXHUwREJEXFx1MERDMC1cXHUwREM2XFx1MEUwMS1cXHUwRTMwXFx1MEUzMlxcdTBFMzNcXHUwRTQwLVxcdTBFNDZcXHUwRTgxXFx1MEU4MlxcdTBFODRcXHUwRTg2LVxcdTBFOEFcXHUwRThDLVxcdTBFQTNcXHUwRUE1XFx1MEVBNy1cXHUwRUIwXFx1MEVCMlxcdTBFQjNcXHUwRUJEXFx1MEVDMC1cXHUwRUM0XFx1MEVDNlxcdTBFREMtXFx1MEVERlxcdTBGMDBcXHUwRjQwLVxcdTBGNDdcXHUwRjQ5LVxcdTBGNkNcXHUwRjg4LVxcdTBGOENcXHUxMDAwLVxcdTEwMkFcXHUxMDNGXFx1MTA1MC1cXHUxMDU1XFx1MTA1QS1cXHUxMDVEXFx1MTA2MVxcdTEwNjVcXHUxMDY2XFx1MTA2RS1cXHUxMDcwXFx1MTA3NS1cXHUxMDgxXFx1MTA4RVxcdTEwQTAtXFx1MTBDNVxcdTEwQzdcXHUxMENEXFx1MTBEMC1cXHUxMEZBXFx1MTBGQy1cXHUxMjQ4XFx1MTI0QS1cXHUxMjREXFx1MTI1MC1cXHUxMjU2XFx1MTI1OFxcdTEyNUEtXFx1MTI1RFxcdTEyNjAtXFx1MTI4OFxcdTEyOEEtXFx1MTI4RFxcdTEyOTAtXFx1MTJCMFxcdTEyQjItXFx1MTJCNVxcdTEyQjgtXFx1MTJCRVxcdTEyQzBcXHUxMkMyLVxcdTEyQzVcXHUxMkM4LVxcdTEyRDZcXHUxMkQ4LVxcdTEzMTBcXHUxMzEyLVxcdTEzMTVcXHUxMzE4LVxcdTEzNUFcXHUxMzgwLVxcdTEzOEZcXHUxM0EwLVxcdTEzRjVcXHUxM0Y4LVxcdTEzRkRcXHUxNDAxLVxcdTE2NkNcXHUxNjZGLVxcdTE2N0ZcXHUxNjgxLVxcdTE2OUFcXHUxNkEwLVxcdTE2RUFcXHUxNkVFLVxcdTE2RjhcXHUxNzAwLVxcdTE3MENcXHUxNzBFLVxcdTE3MTFcXHUxNzIwLVxcdTE3MzFcXHUxNzQwLVxcdTE3NTFcXHUxNzYwLVxcdTE3NkNcXHUxNzZFLVxcdTE3NzBcXHUxNzgwLVxcdTE3QjNcXHUxN0Q3XFx1MTdEQ1xcdTE4MjAtXFx1MTg3OFxcdTE4ODAtXFx1MThBOFxcdTE4QUFcXHUxOEIwLVxcdTE4RjVcXHUxOTAwLVxcdTE5MUVcXHUxOTUwLVxcdTE5NkRcXHUxOTcwLVxcdTE5NzRcXHUxOTgwLVxcdTE5QUJcXHUxOUIwLVxcdTE5QzlcXHUxQTAwLVxcdTFBMTZcXHUxQTIwLVxcdTFBNTRcXHUxQUE3XFx1MUIwNS1cXHUxQjMzXFx1MUI0NS1cXHUxQjRCXFx1MUI4My1cXHUxQkEwXFx1MUJBRVxcdTFCQUZcXHUxQkJBLVxcdTFCRTVcXHUxQzAwLVxcdTFDMjNcXHUxQzRELVxcdTFDNEZcXHUxQzVBLVxcdTFDN0RcXHUxQzgwLVxcdTFDODhcXHUxQzkwLVxcdTFDQkFcXHUxQ0JELVxcdTFDQkZcXHUxQ0U5LVxcdTFDRUNcXHUxQ0VFLVxcdTFDRjNcXHUxQ0Y1XFx1MUNGNlxcdTFDRkFcXHUxRDAwLVxcdTFEQkZcXHUxRTAwLVxcdTFGMTVcXHUxRjE4LVxcdTFGMURcXHUxRjIwLVxcdTFGNDVcXHUxRjQ4LVxcdTFGNERcXHUxRjUwLVxcdTFGNTdcXHUxRjU5XFx1MUY1QlxcdTFGNURcXHUxRjVGLVxcdTFGN0RcXHUxRjgwLVxcdTFGQjRcXHUxRkI2LVxcdTFGQkNcXHUxRkJFXFx1MUZDMi1cXHUxRkM0XFx1MUZDNi1cXHUxRkNDXFx1MUZEMC1cXHUxRkQzXFx1MUZENi1cXHUxRkRCXFx1MUZFMC1cXHUxRkVDXFx1MUZGMi1cXHUxRkY0XFx1MUZGNi1cXHUxRkZDXFx1MjA3MVxcdTIwN0ZcXHUyMDkwLVxcdTIwOUNcXHUyMTAyXFx1MjEwN1xcdTIxMEEtXFx1MjExM1xcdTIxMTVcXHUyMTE4LVxcdTIxMURcXHUyMTI0XFx1MjEyNlxcdTIxMjhcXHUyMTJBLVxcdTIxMzlcXHUyMTNDLVxcdTIxM0ZcXHUyMTQ1LVxcdTIxNDlcXHUyMTRFXFx1MjE2MC1cXHUyMTg4XFx1MkMwMC1cXHUyQzJFXFx1MkMzMC1cXHUyQzVFXFx1MkM2MC1cXHUyQ0U0XFx1MkNFQi1cXHUyQ0VFXFx1MkNGMlxcdTJDRjNcXHUyRDAwLVxcdTJEMjVcXHUyRDI3XFx1MkQyRFxcdTJEMzAtXFx1MkQ2N1xcdTJENkZcXHUyRDgwLVxcdTJEOTZcXHUyREEwLVxcdTJEQTZcXHUyREE4LVxcdTJEQUVcXHUyREIwLVxcdTJEQjZcXHUyREI4LVxcdTJEQkVcXHUyREMwLVxcdTJEQzZcXHUyREM4LVxcdTJEQ0VcXHUyREQwLVxcdTJERDZcXHUyREQ4LVxcdTJEREVcXHUzMDA1LVxcdTMwMDdcXHUzMDIxLVxcdTMwMjlcXHUzMDMxLVxcdTMwMzVcXHUzMDM4LVxcdTMwM0NcXHUzMDQxLVxcdTMwOTZcXHUzMDlCLVxcdTMwOUZcXHUzMEExLVxcdTMwRkFcXHUzMEZDLVxcdTMwRkZcXHUzMTA1LVxcdTMxMkZcXHUzMTMxLVxcdTMxOEVcXHUzMUEwLVxcdTMxQkZcXHUzMUYwLVxcdTMxRkZcXHUzNDAwLVxcdTREQkZcXHU0RTAwLVxcdTlGRkNcXHVBMDAwLVxcdUE0OENcXHVBNEQwLVxcdUE0RkRcXHVBNTAwLVxcdUE2MENcXHVBNjEwLVxcdUE2MUZcXHVBNjJBXFx1QTYyQlxcdUE2NDAtXFx1QTY2RVxcdUE2N0YtXFx1QTY5RFxcdUE2QTAtXFx1QTZFRlxcdUE3MTctXFx1QTcxRlxcdUE3MjItXFx1QTc4OFxcdUE3OEItXFx1QTdCRlxcdUE3QzItXFx1QTdDQVxcdUE3RjUtXFx1QTgwMVxcdUE4MDMtXFx1QTgwNVxcdUE4MDctXFx1QTgwQVxcdUE4MEMtXFx1QTgyMlxcdUE4NDAtXFx1QTg3M1xcdUE4ODItXFx1QThCM1xcdUE4RjItXFx1QThGN1xcdUE4RkJcXHVBOEZEXFx1QThGRVxcdUE5MEEtXFx1QTkyNVxcdUE5MzAtXFx1QTk0NlxcdUE5NjAtXFx1QTk3Q1xcdUE5ODQtXFx1QTlCMlxcdUE5Q0ZcXHVBOUUwLVxcdUE5RTRcXHVBOUU2LVxcdUE5RUZcXHVBOUZBLVxcdUE5RkVcXHVBQTAwLVxcdUFBMjhcXHVBQTQwLVxcdUFBNDJcXHVBQTQ0LVxcdUFBNEJcXHVBQTYwLVxcdUFBNzZcXHVBQTdBXFx1QUE3RS1cXHVBQUFGXFx1QUFCMVxcdUFBQjVcXHVBQUI2XFx1QUFCOS1cXHVBQUJEXFx1QUFDMFxcdUFBQzJcXHVBQURCLVxcdUFBRERcXHVBQUUwLVxcdUFBRUFcXHVBQUYyLVxcdUFBRjRcXHVBQjAxLVxcdUFCMDZcXHVBQjA5LVxcdUFCMEVcXHVBQjExLVxcdUFCMTZcXHVBQjIwLVxcdUFCMjZcXHVBQjI4LVxcdUFCMkVcXHVBQjMwLVxcdUFCNUFcXHVBQjVDLVxcdUFCNjlcXHVBQjcwLVxcdUFCRTJcXHVBQzAwLVxcdUQ3QTNcXHVEN0IwLVxcdUQ3QzZcXHVEN0NCLVxcdUQ3RkJcXHVGOTAwLVxcdUZBNkRcXHVGQTcwLVxcdUZBRDlcXHVGQjAwLVxcdUZCMDZcXHVGQjEzLVxcdUZCMTdcXHVGQjFEXFx1RkIxRi1cXHVGQjI4XFx1RkIyQS1cXHVGQjM2XFx1RkIzOC1cXHVGQjNDXFx1RkIzRVxcdUZCNDBcXHVGQjQxXFx1RkI0M1xcdUZCNDRcXHVGQjQ2LVxcdUZCQjFcXHVGQkQzLVxcdUZEM0RcXHVGRDUwLVxcdUZEOEZcXHVGRDkyLVxcdUZEQzdcXHVGREYwLVxcdUZERkJcXHVGRTcwLVxcdUZFNzRcXHVGRTc2LVxcdUZFRkNcXHVGRjIxLVxcdUZGM0FcXHVGRjQxLVxcdUZGNUFcXHVGRjY2LVxcdUZGQkVcXHVGRkMyLVxcdUZGQzdcXHVGRkNBLVxcdUZGQ0ZcXHVGRkQyLVxcdUZGRDdcXHVGRkRBLVxcdUZGRENcIixub25BU0NJSWlkZW50aWZpZXJDaGFycz1cIlxcdTIwMENcXHUyMDBEXFx4QjdcXHUwMzAwLVxcdTAzNkZcXHUwMzg3XFx1MDQ4My1cXHUwNDg3XFx1MDU5MS1cXHUwNUJEXFx1MDVCRlxcdTA1QzFcXHUwNUMyXFx1MDVDNFxcdTA1QzVcXHUwNUM3XFx1MDYxMC1cXHUwNjFBXFx1MDY0Qi1cXHUwNjY5XFx1MDY3MFxcdTA2RDYtXFx1MDZEQ1xcdTA2REYtXFx1MDZFNFxcdTA2RTdcXHUwNkU4XFx1MDZFQS1cXHUwNkVEXFx1MDZGMC1cXHUwNkY5XFx1MDcxMVxcdTA3MzAtXFx1MDc0QVxcdTA3QTYtXFx1MDdCMFxcdTA3QzAtXFx1MDdDOVxcdTA3RUItXFx1MDdGM1xcdTA3RkRcXHUwODE2LVxcdTA4MTlcXHUwODFCLVxcdTA4MjNcXHUwODI1LVxcdTA4MjdcXHUwODI5LVxcdTA4MkRcXHUwODU5LVxcdTA4NUJcXHUwOEQzLVxcdTA4RTFcXHUwOEUzLVxcdTA5MDNcXHUwOTNBLVxcdTA5M0NcXHUwOTNFLVxcdTA5NEZcXHUwOTUxLVxcdTA5NTdcXHUwOTYyXFx1MDk2M1xcdTA5NjYtXFx1MDk2RlxcdTA5ODEtXFx1MDk4M1xcdTA5QkNcXHUwOUJFLVxcdTA5QzRcXHUwOUM3XFx1MDlDOFxcdTA5Q0ItXFx1MDlDRFxcdTA5RDdcXHUwOUUyXFx1MDlFM1xcdTA5RTYtXFx1MDlFRlxcdTA5RkVcXHUwQTAxLVxcdTBBMDNcXHUwQTNDXFx1MEEzRS1cXHUwQTQyXFx1MEE0N1xcdTBBNDhcXHUwQTRCLVxcdTBBNERcXHUwQTUxXFx1MEE2Ni1cXHUwQTcxXFx1MEE3NVxcdTBBODEtXFx1MEE4M1xcdTBBQkNcXHUwQUJFLVxcdTBBQzVcXHUwQUM3LVxcdTBBQzlcXHUwQUNCLVxcdTBBQ0RcXHUwQUUyXFx1MEFFM1xcdTBBRTYtXFx1MEFFRlxcdTBBRkEtXFx1MEFGRlxcdTBCMDEtXFx1MEIwM1xcdTBCM0NcXHUwQjNFLVxcdTBCNDRcXHUwQjQ3XFx1MEI0OFxcdTBCNEItXFx1MEI0RFxcdTBCNTUtXFx1MEI1N1xcdTBCNjJcXHUwQjYzXFx1MEI2Ni1cXHUwQjZGXFx1MEI4MlxcdTBCQkUtXFx1MEJDMlxcdTBCQzYtXFx1MEJDOFxcdTBCQ0EtXFx1MEJDRFxcdTBCRDdcXHUwQkU2LVxcdTBCRUZcXHUwQzAwLVxcdTBDMDRcXHUwQzNFLVxcdTBDNDRcXHUwQzQ2LVxcdTBDNDhcXHUwQzRBLVxcdTBDNERcXHUwQzU1XFx1MEM1NlxcdTBDNjJcXHUwQzYzXFx1MEM2Ni1cXHUwQzZGXFx1MEM4MS1cXHUwQzgzXFx1MENCQ1xcdTBDQkUtXFx1MENDNFxcdTBDQzYtXFx1MENDOFxcdTBDQ0EtXFx1MENDRFxcdTBDRDVcXHUwQ0Q2XFx1MENFMlxcdTBDRTNcXHUwQ0U2LVxcdTBDRUZcXHUwRDAwLVxcdTBEMDNcXHUwRDNCXFx1MEQzQ1xcdTBEM0UtXFx1MEQ0NFxcdTBENDYtXFx1MEQ0OFxcdTBENEEtXFx1MEQ0RFxcdTBENTdcXHUwRDYyXFx1MEQ2M1xcdTBENjYtXFx1MEQ2RlxcdTBEODEtXFx1MEQ4M1xcdTBEQ0FcXHUwRENGLVxcdTBERDRcXHUwREQ2XFx1MEREOC1cXHUwRERGXFx1MERFNi1cXHUwREVGXFx1MERGMlxcdTBERjNcXHUwRTMxXFx1MEUzNC1cXHUwRTNBXFx1MEU0Ny1cXHUwRTRFXFx1MEU1MC1cXHUwRTU5XFx1MEVCMVxcdTBFQjQtXFx1MEVCQ1xcdTBFQzgtXFx1MEVDRFxcdTBFRDAtXFx1MEVEOVxcdTBGMThcXHUwRjE5XFx1MEYyMC1cXHUwRjI5XFx1MEYzNVxcdTBGMzdcXHUwRjM5XFx1MEYzRVxcdTBGM0ZcXHUwRjcxLVxcdTBGODRcXHUwRjg2XFx1MEY4N1xcdTBGOEQtXFx1MEY5N1xcdTBGOTktXFx1MEZCQ1xcdTBGQzZcXHUxMDJCLVxcdTEwM0VcXHUxMDQwLVxcdTEwNDlcXHUxMDU2LVxcdTEwNTlcXHUxMDVFLVxcdTEwNjBcXHUxMDYyLVxcdTEwNjRcXHUxMDY3LVxcdTEwNkRcXHUxMDcxLVxcdTEwNzRcXHUxMDgyLVxcdTEwOERcXHUxMDhGLVxcdTEwOURcXHUxMzVELVxcdTEzNUZcXHUxMzY5LVxcdTEzNzFcXHUxNzEyLVxcdTE3MTRcXHUxNzMyLVxcdTE3MzRcXHUxNzUyXFx1MTc1M1xcdTE3NzJcXHUxNzczXFx1MTdCNC1cXHUxN0QzXFx1MTdERFxcdTE3RTAtXFx1MTdFOVxcdTE4MEItXFx1MTgwRFxcdTE4MTAtXFx1MTgxOVxcdTE4QTlcXHUxOTIwLVxcdTE5MkJcXHUxOTMwLVxcdTE5M0JcXHUxOTQ2LVxcdTE5NEZcXHUxOUQwLVxcdTE5REFcXHUxQTE3LVxcdTFBMUJcXHUxQTU1LVxcdTFBNUVcXHUxQTYwLVxcdTFBN0NcXHUxQTdGLVxcdTFBODlcXHUxQTkwLVxcdTFBOTlcXHUxQUIwLVxcdTFBQkRcXHUxQUJGXFx1MUFDMFxcdTFCMDAtXFx1MUIwNFxcdTFCMzQtXFx1MUI0NFxcdTFCNTAtXFx1MUI1OVxcdTFCNkItXFx1MUI3M1xcdTFCODAtXFx1MUI4MlxcdTFCQTEtXFx1MUJBRFxcdTFCQjAtXFx1MUJCOVxcdTFCRTYtXFx1MUJGM1xcdTFDMjQtXFx1MUMzN1xcdTFDNDAtXFx1MUM0OVxcdTFDNTAtXFx1MUM1OVxcdTFDRDAtXFx1MUNEMlxcdTFDRDQtXFx1MUNFOFxcdTFDRURcXHUxQ0Y0XFx1MUNGNy1cXHUxQ0Y5XFx1MURDMC1cXHUxREY5XFx1MURGQi1cXHUxREZGXFx1MjAzRlxcdTIwNDBcXHUyMDU0XFx1MjBEMC1cXHUyMERDXFx1MjBFMVxcdTIwRTUtXFx1MjBGMFxcdTJDRUYtXFx1MkNGMVxcdTJEN0ZcXHUyREUwLVxcdTJERkZcXHUzMDJBLVxcdTMwMkZcXHUzMDk5XFx1MzA5QVxcdUE2MjAtXFx1QTYyOVxcdUE2NkZcXHVBNjc0LVxcdUE2N0RcXHVBNjlFXFx1QTY5RlxcdUE2RjBcXHVBNkYxXFx1QTgwMlxcdUE4MDZcXHVBODBCXFx1QTgyMy1cXHVBODI3XFx1QTgyQ1xcdUE4ODBcXHVBODgxXFx1QThCNC1cXHVBOEM1XFx1QThEMC1cXHVBOEQ5XFx1QThFMC1cXHVBOEYxXFx1QThGRi1cXHVBOTA5XFx1QTkyNi1cXHVBOTJEXFx1QTk0Ny1cXHVBOTUzXFx1QTk4MC1cXHVBOTgzXFx1QTlCMy1cXHVBOUMwXFx1QTlEMC1cXHVBOUQ5XFx1QTlFNVxcdUE5RjAtXFx1QTlGOVxcdUFBMjktXFx1QUEzNlxcdUFBNDNcXHVBQTRDXFx1QUE0RFxcdUFBNTAtXFx1QUE1OVxcdUFBN0ItXFx1QUE3RFxcdUFBQjBcXHVBQUIyLVxcdUFBQjRcXHVBQUI3XFx1QUFCOFxcdUFBQkVcXHVBQUJGXFx1QUFDMVxcdUFBRUItXFx1QUFFRlxcdUFBRjVcXHVBQUY2XFx1QUJFMy1cXHVBQkVBXFx1QUJFQ1xcdUFCRURcXHVBQkYwLVxcdUFCRjlcXHVGQjFFXFx1RkUwMC1cXHVGRTBGXFx1RkUyMC1cXHVGRTJGXFx1RkUzM1xcdUZFMzRcXHVGRTRELVxcdUZFNEZcXHVGRjEwLVxcdUZGMTlcXHVGRjNGXCIsbm9uQVNDSUlpZGVudGlmaWVyU3RhcnQ9bmV3IFJlZ0V4cChcIltcIitub25BU0NJSWlkZW50aWZpZXJTdGFydENoYXJzK1wiXVwiKSxub25BU0NJSWlkZW50aWZpZXI9bmV3IFJlZ0V4cChcIltcIitub25BU0NJSWlkZW50aWZpZXJTdGFydENoYXJzK25vbkFTQ0lJaWRlbnRpZmllckNoYXJzK1wiXVwiKTtub25BU0NJSWlkZW50aWZpZXJTdGFydENoYXJzPW5vbkFTQ0lJaWRlbnRpZmllckNoYXJzPW51bGw7YXN0cmFsSWRlbnRpZmllclN0YXJ0Q29kZXM9WzAsMTEsMiwyNSwyLDE4LDIsMSwyLDE0LDMsMTMsMzUsMTIyLDcwLDUyLDI2OCwyOCw0LDQ4LDQ4LDMxLDE0LDI5LDYsMzcsMTEsMjksMywzNSw1LDcsMiw0LDQzLDE1NywxOSwzNSw1LDM1LDUsMzksOSw1MSwxNTcsMzEwLDEwLDIxLDExLDcsMTUzLDUsMywwLDIsNDMsMiwxLDQsMCwzLDIyLDExLDIyLDEwLDMwLDY2LDE4LDIsMSwxMSwyMSwxMSwyNSw3MSw1NSw3LDEsNjUsMCwxNiwzLDIsMiwyLDI4LDQzLDI4LDQsMjgsMzYsNywyLDI3LDI4LDUzLDExLDIxLDExLDE4LDE0LDE3LDExMSw3Miw1Niw1MCwxNCw1MCwxNCwzNSwzNDksNDEsNywxLDc5LDI4LDExLDAsOSwyMSwxMDcsMjAsMjgsMjIsMTMsNTIsNzYsNDQsMzMsMjQsMjcsMzUsMzAsMCwzLDAsOSwzNCw0LDAsMTMsNDcsMTUsMywyMiwwLDIsMCwzNiwxNywyLDI0LDg1LDYsMiwwLDIsMywyLDE0LDIsOSw4LDQ2LDM5LDcsMywxLDMsMjEsMiw2LDIsMSwyLDQsNCwwLDE5LDAsMTMsNCwxNTksNTIsMTksMywyMSwyLDMxLDQ3LDIxLDEsMiwwLDE4NSw0Niw0MiwzLDM3LDQ3LDIxLDAsNjAsNDIsMTQsMCw3MiwyNiwyMzAsNDMsMTE3LDYzLDMyLDcsMywwLDMsNywyLDEsMiwyMywxNiwwLDIsMCw5NSw3LDMsMzgsMTcsMCwyLDAsMjksMCwxMSwzOSw4LDAsMjIsMCwxMiw0NSwyMCwwLDM1LDU2LDI2NCw4LDIsMzYsMTgsMCw1MCwyOSwxMTMsNiwyLDEsMiwzNywyMiwwLDI2LDUsMiwxLDIsMzEsMTUsMCwzMjgsMTgsMTkwLDAsODAsOTIxLDEwMywxMTAsMTgsMTk1LDI3NDksMTA3MCw0MDUwLDU4Miw4NjM0LDU2OCw4LDMwLDExNCwyOSwxOSw0NywxNywzLDMyLDIwLDYsMTgsNjg5LDYzLDEyOSw3NCw2LDAsNjcsMTIsNjUsMSwyLDAsMjksNjEzNSw5LDEyMzcsNDMsOCw4OTUyLDI4Niw1MCwyLDE4LDMsOSwzOTUsMjMwOSwxMDYsNiwxMiw0LDgsOCw5LDU5OTEsODQsMiw3MCwyLDEsMywwLDMsMSwzLDMsMiwxMSwyLDAsMiw2LDIsNjQsMiwzLDMsNywyLDYsMiwyNywyLDMsMiw0LDIsMCw0LDYsMiwzMzksMywyNCwyLDI0LDIsMzAsMiwyNCwyLDMwLDIsMjQsMiwzMCwyLDI0LDIsMzAsMiwyNCwyLDcsMjM1Nyw0NCwxMSw2LDE3LDAsMzcwLDQzLDEzMDEsMTk2LDYwLDY3LDgsMCwxMjA1LDMsMiwyNiwyLDEsMiwwLDMsMCwyLDksMiwzLDIsMCwyLDAsNywwLDUsMCwyLDAsMiwwLDIsMiwyLDEsMiwwLDMsMCwyLDAsMiwwLDIsMCwyLDAsMiwxLDIsMCwzLDMsMiw2LDIsMywyLDMsMiwwLDIsOSwyLDE2LDYsMiwyLDQsMiwxNiw0NDIxLDQyNzE3LDM1LDQxNDgsMTIsMjIxLDMsNTc2MSwxNSw3NDcyLDMxMDQsNTQxLDE1MDcsNDkzOF0sYXN0cmFsSWRlbnRpZmllckNvZGVzPVs1MDksMCwyMjcsMCwxNTAsNCwyOTQsOSwxMzY4LDIsMiwxLDYsMyw0MSwyLDUsMCwxNjYsMSw1NzQsMyw5LDksMzcwLDEsMTU0LDEwLDE3NiwyLDU0LDE0LDMyLDksMTYsMyw0NiwxMCw1NCw5LDcsMiwzNywxMywyLDksNiwxLDQ1LDAsMTMsMiw0OSwxMyw5LDMsMiwxMSw4MywxMSw3LDAsMTYxLDExLDYsOSw3LDMsNTYsMSwyLDYsMywxLDMsMiwxMCwwLDExLDEsMyw2LDQsNCwxOTMsMTcsMTAsOSw1LDAsODIsMTksMTMsOSwyMTQsNiwzLDgsMjgsMSw4MywxNiwxNiw5LDgyLDEyLDksOSw4NCwxNCw1LDksMjQzLDE0LDE2Niw5LDcxLDUsMiwxLDMsMywyLDAsMiwxLDEzLDksMTIwLDYsMyw2LDQsMCwyOSw5LDQxLDYsMiwzLDksMCwxMCwxMCw0NywxNSw0MDYsNywyLDcsMTcsOSw1NywyMSwyLDEzLDEyMyw1LDQsMCwyLDEsMiw2LDIsMCw5LDksNDksNCwyLDEsMiw0LDksOSwzMzAsMywxOTMwNiw5LDEzNSw0LDYwLDYsMjYsOSwxMDE0LDAsMiw1NCw4LDMsODIsMCwxMiwxLDE5NjI4LDEsNTMxOSw0LDQsNSw5LDcsMyw2LDMxLDMsMTQ5LDIsMTQxOCw0OSw1MTMsNTQsNSw0OSw5LDAsMTUsMCwyMyw0LDIsMTQsMTM2MSw2LDIsMTYsMyw2LDIsMSwyLDQsMjYyLDYsMTAsOSw0MTksMTMsMTQ5NSw2LDExMCw2LDYsOSw0NzU5LDksNzg3NzE5LDIzOV07VG9rZW5UeXBlPWZ1bmN0aW9uKGxhYmVsLGNvbmYpe2NvbmY9PT12b2lkIDAmJihjb25mPXt9KSx0aGlzLmxhYmVsPWxhYmVsLHRoaXMua2V5d29yZD1jb25mLmtleXdvcmQsdGhpcy5iZWZvcmVFeHByPSEhY29uZi5iZWZvcmVFeHByLHRoaXMuc3RhcnRzRXhwcj0hIWNvbmYuc3RhcnRzRXhwcix0aGlzLmlzTG9vcD0hIWNvbmYuaXNMb29wLHRoaXMuaXNBc3NpZ249ISFjb25mLmlzQXNzaWduLHRoaXMucHJlZml4PSEhY29uZi5wcmVmaXgsdGhpcy5wb3N0Zml4PSEhY29uZi5wb3N0Zml4LHRoaXMuYmlub3A9Y29uZi5iaW5vcHx8bnVsbCx0aGlzLnVwZGF0ZUNvbnRleHQ9bnVsbDt9O2JlZm9yZUV4cHI9e2JlZm9yZUV4cHI6ITB9LHN0YXJ0c0V4cHI9e3N0YXJ0c0V4cHI6ITB9LGtleXdvcmRzJDE9e307dHlwZXM9e251bTpuZXcgVG9rZW5UeXBlKFwibnVtXCIsc3RhcnRzRXhwcikscmVnZXhwOm5ldyBUb2tlblR5cGUoXCJyZWdleHBcIixzdGFydHNFeHByKSxzdHJpbmc6bmV3IFRva2VuVHlwZShcInN0cmluZ1wiLHN0YXJ0c0V4cHIpLG5hbWU6bmV3IFRva2VuVHlwZShcIm5hbWVcIixzdGFydHNFeHByKSxlb2Y6bmV3IFRva2VuVHlwZShcImVvZlwiKSxicmFja2V0TDpuZXcgVG9rZW5UeXBlKFwiW1wiLHtiZWZvcmVFeHByOiEwLHN0YXJ0c0V4cHI6ITB9KSxicmFja2V0UjpuZXcgVG9rZW5UeXBlKFwiXVwiKSxicmFjZUw6bmV3IFRva2VuVHlwZShcIntcIix7YmVmb3JlRXhwcjohMCxzdGFydHNFeHByOiEwfSksYnJhY2VSOm5ldyBUb2tlblR5cGUoXCJ9XCIpLHBhcmVuTDpuZXcgVG9rZW5UeXBlKFwiKFwiLHtiZWZvcmVFeHByOiEwLHN0YXJ0c0V4cHI6ITB9KSxwYXJlblI6bmV3IFRva2VuVHlwZShcIilcIiksY29tbWE6bmV3IFRva2VuVHlwZShcIixcIixiZWZvcmVFeHByKSxzZW1pOm5ldyBUb2tlblR5cGUoXCI7XCIsYmVmb3JlRXhwciksY29sb246bmV3IFRva2VuVHlwZShcIjpcIixiZWZvcmVFeHByKSxkb3Q6bmV3IFRva2VuVHlwZShcIi5cIikscXVlc3Rpb246bmV3IFRva2VuVHlwZShcIj9cIixiZWZvcmVFeHByKSxxdWVzdGlvbkRvdDpuZXcgVG9rZW5UeXBlKFwiPy5cIiksYXJyb3c6bmV3IFRva2VuVHlwZShcIj0+XCIsYmVmb3JlRXhwciksdGVtcGxhdGU6bmV3IFRva2VuVHlwZShcInRlbXBsYXRlXCIpLGludmFsaWRUZW1wbGF0ZTpuZXcgVG9rZW5UeXBlKFwiaW52YWxpZFRlbXBsYXRlXCIpLGVsbGlwc2lzOm5ldyBUb2tlblR5cGUoXCIuLi5cIixiZWZvcmVFeHByKSxiYWNrUXVvdGU6bmV3IFRva2VuVHlwZShcImBcIixzdGFydHNFeHByKSxkb2xsYXJCcmFjZUw6bmV3IFRva2VuVHlwZShcIiR7XCIse2JlZm9yZUV4cHI6ITAsc3RhcnRzRXhwcjohMH0pLGVxOm5ldyBUb2tlblR5cGUoXCI9XCIse2JlZm9yZUV4cHI6ITAsaXNBc3NpZ246ITB9KSxhc3NpZ246bmV3IFRva2VuVHlwZShcIl89XCIse2JlZm9yZUV4cHI6ITAsaXNBc3NpZ246ITB9KSxpbmNEZWM6bmV3IFRva2VuVHlwZShcIisrLy0tXCIse3ByZWZpeDohMCxwb3N0Zml4OiEwLHN0YXJ0c0V4cHI6ITB9KSxwcmVmaXg6bmV3IFRva2VuVHlwZShcIiEvflwiLHtiZWZvcmVFeHByOiEwLHByZWZpeDohMCxzdGFydHNFeHByOiEwfSksbG9naWNhbE9SOmJpbm9wKFwifHxcIiwxKSxsb2dpY2FsQU5EOmJpbm9wKFwiJiZcIiwyKSxiaXR3aXNlT1I6Ymlub3AoXCJ8XCIsMyksYml0d2lzZVhPUjpiaW5vcChcIl5cIiw0KSxiaXR3aXNlQU5EOmJpbm9wKFwiJlwiLDUpLGVxdWFsaXR5OmJpbm9wKFwiPT0vIT0vPT09LyE9PVwiLDYpLHJlbGF0aW9uYWw6Ymlub3AoXCI8Lz4vPD0vPj1cIiw3KSxiaXRTaGlmdDpiaW5vcChcIjw8Lz4+Lz4+PlwiLDgpLHBsdXNNaW46bmV3IFRva2VuVHlwZShcIisvLVwiLHtiZWZvcmVFeHByOiEwLGJpbm9wOjkscHJlZml4OiEwLHN0YXJ0c0V4cHI6ITB9KSxtb2R1bG86Ymlub3AoXCIlXCIsMTApLHN0YXI6Ymlub3AoXCIqXCIsMTApLHNsYXNoOmJpbm9wKFwiL1wiLDEwKSxzdGFyc3RhcjpuZXcgVG9rZW5UeXBlKFwiKipcIix7YmVmb3JlRXhwcjohMH0pLGNvYWxlc2NlOmJpbm9wKFwiPz9cIiwxKSxfYnJlYWs6a3coXCJicmVha1wiKSxfY2FzZTprdyhcImNhc2VcIixiZWZvcmVFeHByKSxfY2F0Y2g6a3coXCJjYXRjaFwiKSxfY29udGludWU6a3coXCJjb250aW51ZVwiKSxfZGVidWdnZXI6a3coXCJkZWJ1Z2dlclwiKSxfZGVmYXVsdDprdyhcImRlZmF1bHRcIixiZWZvcmVFeHByKSxfZG86a3coXCJkb1wiLHtpc0xvb3A6ITAsYmVmb3JlRXhwcjohMH0pLF9lbHNlOmt3KFwiZWxzZVwiLGJlZm9yZUV4cHIpLF9maW5hbGx5Omt3KFwiZmluYWxseVwiKSxfZm9yOmt3KFwiZm9yXCIse2lzTG9vcDohMH0pLF9mdW5jdGlvbjprdyhcImZ1bmN0aW9uXCIsc3RhcnRzRXhwciksX2lmOmt3KFwiaWZcIiksX3JldHVybjprdyhcInJldHVyblwiLGJlZm9yZUV4cHIpLF9zd2l0Y2g6a3coXCJzd2l0Y2hcIiksX3Rocm93Omt3KFwidGhyb3dcIixiZWZvcmVFeHByKSxfdHJ5Omt3KFwidHJ5XCIpLF92YXI6a3coXCJ2YXJcIiksX2NvbnN0Omt3KFwiY29uc3RcIiksX3doaWxlOmt3KFwid2hpbGVcIix7aXNMb29wOiEwfSksX3dpdGg6a3coXCJ3aXRoXCIpLF9uZXc6a3coXCJuZXdcIix7YmVmb3JlRXhwcjohMCxzdGFydHNFeHByOiEwfSksX3RoaXM6a3coXCJ0aGlzXCIsc3RhcnRzRXhwciksX3N1cGVyOmt3KFwic3VwZXJcIixzdGFydHNFeHByKSxfY2xhc3M6a3coXCJjbGFzc1wiLHN0YXJ0c0V4cHIpLF9leHRlbmRzOmt3KFwiZXh0ZW5kc1wiLGJlZm9yZUV4cHIpLF9leHBvcnQ6a3coXCJleHBvcnRcIiksX2ltcG9ydDprdyhcImltcG9ydFwiLHN0YXJ0c0V4cHIpLF9udWxsOmt3KFwibnVsbFwiLHN0YXJ0c0V4cHIpLF90cnVlOmt3KFwidHJ1ZVwiLHN0YXJ0c0V4cHIpLF9mYWxzZTprdyhcImZhbHNlXCIsc3RhcnRzRXhwciksX2luOmt3KFwiaW5cIix7YmVmb3JlRXhwcjohMCxiaW5vcDo3fSksX2luc3RhbmNlb2Y6a3coXCJpbnN0YW5jZW9mXCIse2JlZm9yZUV4cHI6ITAsYmlub3A6N30pLF90eXBlb2Y6a3coXCJ0eXBlb2ZcIix7YmVmb3JlRXhwcjohMCxwcmVmaXg6ITAsc3RhcnRzRXhwcjohMH0pLF92b2lkOmt3KFwidm9pZFwiLHtiZWZvcmVFeHByOiEwLHByZWZpeDohMCxzdGFydHNFeHByOiEwfSksX2RlbGV0ZTprdyhcImRlbGV0ZVwiLHtiZWZvcmVFeHByOiEwLHByZWZpeDohMCxzdGFydHNFeHByOiEwfSl9LGxpbmVCcmVhaz0vXFxyXFxuP3xcXG58XFx1MjAyOHxcXHUyMDI5LyxsaW5lQnJlYWtHPW5ldyBSZWdFeHAobGluZUJyZWFrLnNvdXJjZSxcImdcIik7bm9uQVNDSUl3aGl0ZXNwYWNlPS9bXFx1MTY4MFxcdTIwMDAtXFx1MjAwYVxcdTIwMmZcXHUyMDVmXFx1MzAwMFxcdWZlZmZdLyxza2lwV2hpdGVTcGFjZT0vKD86XFxzfFxcL1xcLy4qfFxcL1xcKlteXSo/XFwqXFwvKSovZyxyZWY9T2JqZWN0LnByb3RvdHlwZSxoYXNPd25Qcm9wZXJ0eT1yZWYuaGFzT3duUHJvcGVydHksdG9TdHJpbmc9cmVmLnRvU3RyaW5nO2lzQXJyYXk9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24ob2JqKXtyZXR1cm4gdG9TdHJpbmcuY2FsbChvYmopPT09XCJbb2JqZWN0IEFycmF5XVwifTtQb3NpdGlvbj1mdW5jdGlvbihsaW5lLGNvbCl7dGhpcy5saW5lPWxpbmUsdGhpcy5jb2x1bW49Y29sO307UG9zaXRpb24ucHJvdG90eXBlLm9mZnNldD1mdW5jdGlvbihuKXtyZXR1cm4gbmV3IFBvc2l0aW9uKHRoaXMubGluZSx0aGlzLmNvbHVtbituKX07U291cmNlTG9jYXRpb249ZnVuY3Rpb24ocCxzdGFydCxlbmQpe3RoaXMuc3RhcnQ9c3RhcnQsdGhpcy5lbmQ9ZW5kLHAuc291cmNlRmlsZSE9PW51bGwmJih0aGlzLnNvdXJjZT1wLnNvdXJjZUZpbGUpO307ZGVmYXVsdE9wdGlvbnM9e2VjbWFWZXJzaW9uOjEwLHNvdXJjZVR5cGU6XCJzY3JpcHRcIixvbkluc2VydGVkU2VtaWNvbG9uOm51bGwsb25UcmFpbGluZ0NvbW1hOm51bGwsYWxsb3dSZXNlcnZlZDpudWxsLGFsbG93UmV0dXJuT3V0c2lkZUZ1bmN0aW9uOiExLGFsbG93SW1wb3J0RXhwb3J0RXZlcnl3aGVyZTohMSxhbGxvd0F3YWl0T3V0c2lkZUZ1bmN0aW9uOiExLGFsbG93SGFzaEJhbmc6ITEsbG9jYXRpb25zOiExLG9uVG9rZW46bnVsbCxvbkNvbW1lbnQ6bnVsbCxyYW5nZXM6ITEscHJvZ3JhbTpudWxsLHNvdXJjZUZpbGU6bnVsbCxkaXJlY3RTb3VyY2VGaWxlOm51bGwscHJlc2VydmVQYXJlbnM6ITF9O1NDT1BFX1RPUD0xLFNDT1BFX0ZVTkNUSU9OPTIsU0NPUEVfVkFSPVNDT1BFX1RPUHxTQ09QRV9GVU5DVElPTixTQ09QRV9BU1lOQz00LFNDT1BFX0dFTkVSQVRPUj04LFNDT1BFX0FSUk9XPTE2LFNDT1BFX1NJTVBMRV9DQVRDSD0zMixTQ09QRV9TVVBFUj02NCxTQ09QRV9ESVJFQ1RfU1VQRVI9MTI4O0JJTkRfTk9ORT0wLEJJTkRfVkFSPTEsQklORF9MRVhJQ0FMPTIsQklORF9GVU5DVElPTj0zLEJJTkRfU0lNUExFX0NBVENIPTQsQklORF9PVVRTSURFPTUsUGFyc2VyPWZ1bmN0aW9uKG9wdGlvbnMsaW5wdXQsc3RhcnRQb3Mpe3RoaXMub3B0aW9ucz1vcHRpb25zPWdldE9wdGlvbnMob3B0aW9ucyksdGhpcy5zb3VyY2VGaWxlPW9wdGlvbnMuc291cmNlRmlsZSx0aGlzLmtleXdvcmRzPXdvcmRzUmVnZXhwKGtleXdvcmRzW29wdGlvbnMuZWNtYVZlcnNpb24+PTY/NjpvcHRpb25zLnNvdXJjZVR5cGU9PT1cIm1vZHVsZVwiP1wiNW1vZHVsZVwiOjVdKTt2YXIgcmVzZXJ2ZWQ9XCJcIjtpZihvcHRpb25zLmFsbG93UmVzZXJ2ZWQhPT0hMCl7Zm9yKHZhciB2PW9wdGlvbnMuZWNtYVZlcnNpb247IShyZXNlcnZlZD1yZXNlcnZlZFdvcmRzW3ZdKTt2LS0pO29wdGlvbnMuc291cmNlVHlwZT09PVwibW9kdWxlXCImJihyZXNlcnZlZCs9XCIgYXdhaXRcIik7fXRoaXMucmVzZXJ2ZWRXb3Jkcz13b3Jkc1JlZ2V4cChyZXNlcnZlZCk7dmFyIHJlc2VydmVkU3RyaWN0PShyZXNlcnZlZD9yZXNlcnZlZCtcIiBcIjpcIlwiKStyZXNlcnZlZFdvcmRzLnN0cmljdDt0aGlzLnJlc2VydmVkV29yZHNTdHJpY3Q9d29yZHNSZWdleHAocmVzZXJ2ZWRTdHJpY3QpLHRoaXMucmVzZXJ2ZWRXb3Jkc1N0cmljdEJpbmQ9d29yZHNSZWdleHAocmVzZXJ2ZWRTdHJpY3QrXCIgXCIrcmVzZXJ2ZWRXb3Jkcy5zdHJpY3RCaW5kKSx0aGlzLmlucHV0PVN0cmluZyhpbnB1dCksdGhpcy5jb250YWluc0VzYz0hMSxzdGFydFBvcz8odGhpcy5wb3M9c3RhcnRQb3MsdGhpcy5saW5lU3RhcnQ9dGhpcy5pbnB1dC5sYXN0SW5kZXhPZihgXG5gLHN0YXJ0UG9zLTEpKzEsdGhpcy5jdXJMaW5lPXRoaXMuaW5wdXQuc2xpY2UoMCx0aGlzLmxpbmVTdGFydCkuc3BsaXQobGluZUJyZWFrKS5sZW5ndGgpOih0aGlzLnBvcz10aGlzLmxpbmVTdGFydD0wLHRoaXMuY3VyTGluZT0xKSx0aGlzLnR5cGU9dHlwZXMuZW9mLHRoaXMudmFsdWU9bnVsbCx0aGlzLnN0YXJ0PXRoaXMuZW5kPXRoaXMucG9zLHRoaXMuc3RhcnRMb2M9dGhpcy5lbmRMb2M9dGhpcy5jdXJQb3NpdGlvbigpLHRoaXMubGFzdFRva0VuZExvYz10aGlzLmxhc3RUb2tTdGFydExvYz1udWxsLHRoaXMubGFzdFRva1N0YXJ0PXRoaXMubGFzdFRva0VuZD10aGlzLnBvcyx0aGlzLmNvbnRleHQ9dGhpcy5pbml0aWFsQ29udGV4dCgpLHRoaXMuZXhwckFsbG93ZWQ9ITAsdGhpcy5pbk1vZHVsZT1vcHRpb25zLnNvdXJjZVR5cGU9PT1cIm1vZHVsZVwiLHRoaXMuc3RyaWN0PXRoaXMuaW5Nb2R1bGV8fHRoaXMuc3RyaWN0RGlyZWN0aXZlKHRoaXMucG9zKSx0aGlzLnBvdGVudGlhbEFycm93QXQ9LTEsdGhpcy55aWVsZFBvcz10aGlzLmF3YWl0UG9zPXRoaXMuYXdhaXRJZGVudFBvcz0wLHRoaXMubGFiZWxzPVtdLHRoaXMudW5kZWZpbmVkRXhwb3J0cz17fSx0aGlzLnBvcz09PTAmJm9wdGlvbnMuYWxsb3dIYXNoQmFuZyYmdGhpcy5pbnB1dC5zbGljZSgwLDIpPT09XCIjIVwiJiZ0aGlzLnNraXBMaW5lQ29tbWVudCgyKSx0aGlzLnNjb3BlU3RhY2s9W10sdGhpcy5lbnRlclNjb3BlKFNDT1BFX1RPUCksdGhpcy5yZWdleHBTdGF0ZT1udWxsO30scHJvdG90eXBlQWNjZXNzb3JzPXtpbkZ1bmN0aW9uOntjb25maWd1cmFibGU6ITB9LGluR2VuZXJhdG9yOntjb25maWd1cmFibGU6ITB9LGluQXN5bmM6e2NvbmZpZ3VyYWJsZTohMH0sYWxsb3dTdXBlcjp7Y29uZmlndXJhYmxlOiEwfSxhbGxvd0RpcmVjdFN1cGVyOntjb25maWd1cmFibGU6ITB9LHRyZWF0RnVuY3Rpb25zQXNWYXI6e2NvbmZpZ3VyYWJsZTohMH19O1BhcnNlci5wcm90b3R5cGUucGFyc2U9ZnVuY3Rpb24oKXt2YXIgbm9kZT10aGlzLm9wdGlvbnMucHJvZ3JhbXx8dGhpcy5zdGFydE5vZGUoKTtyZXR1cm4gdGhpcy5uZXh0VG9rZW4oKSx0aGlzLnBhcnNlVG9wTGV2ZWwobm9kZSl9O3Byb3RvdHlwZUFjY2Vzc29ycy5pbkZ1bmN0aW9uLmdldD1mdW5jdGlvbigpe3JldHVybiAodGhpcy5jdXJyZW50VmFyU2NvcGUoKS5mbGFncyZTQ09QRV9GVU5DVElPTik+MH07cHJvdG90eXBlQWNjZXNzb3JzLmluR2VuZXJhdG9yLmdldD1mdW5jdGlvbigpe3JldHVybiAodGhpcy5jdXJyZW50VmFyU2NvcGUoKS5mbGFncyZTQ09QRV9HRU5FUkFUT1IpPjB9O3Byb3RvdHlwZUFjY2Vzc29ycy5pbkFzeW5jLmdldD1mdW5jdGlvbigpe3JldHVybiAodGhpcy5jdXJyZW50VmFyU2NvcGUoKS5mbGFncyZTQ09QRV9BU1lOQyk+MH07cHJvdG90eXBlQWNjZXNzb3JzLmFsbG93U3VwZXIuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuICh0aGlzLmN1cnJlbnRUaGlzU2NvcGUoKS5mbGFncyZTQ09QRV9TVVBFUik+MH07cHJvdG90eXBlQWNjZXNzb3JzLmFsbG93RGlyZWN0U3VwZXIuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuICh0aGlzLmN1cnJlbnRUaGlzU2NvcGUoKS5mbGFncyZTQ09QRV9ESVJFQ1RfU1VQRVIpPjB9O3Byb3RvdHlwZUFjY2Vzc29ycy50cmVhdEZ1bmN0aW9uc0FzVmFyLmdldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRyZWF0RnVuY3Rpb25zQXNWYXJJblNjb3BlKHRoaXMuY3VycmVudFNjb3BlKCkpfTtQYXJzZXIucHJvdG90eXBlLmluTm9uQXJyb3dGdW5jdGlvbj1mdW5jdGlvbigpe3JldHVybiAodGhpcy5jdXJyZW50VGhpc1Njb3BlKCkuZmxhZ3MmU0NPUEVfRlVOQ1RJT04pPjB9O1BhcnNlci5leHRlbmQ9ZnVuY3Rpb24oKXtmb3IodmFyIHBsdWdpbnM9W10sbGVuPWFyZ3VtZW50cy5sZW5ndGg7bGVuLS07KXBsdWdpbnNbbGVuXT1hcmd1bWVudHNbbGVuXTtmb3IodmFyIGNscz10aGlzLGk9MDtpPHBsdWdpbnMubGVuZ3RoO2krKyljbHM9cGx1Z2luc1tpXShjbHMpO3JldHVybiBjbHN9O1BhcnNlci5wYXJzZT1mdW5jdGlvbihpbnB1dCxvcHRpb25zKXtyZXR1cm4gbmV3IHRoaXMob3B0aW9ucyxpbnB1dCkucGFyc2UoKX07UGFyc2VyLnBhcnNlRXhwcmVzc2lvbkF0PWZ1bmN0aW9uKGlucHV0LHBvcyxvcHRpb25zKXt2YXIgcGFyc2VyPW5ldyB0aGlzKG9wdGlvbnMsaW5wdXQscG9zKTtyZXR1cm4gcGFyc2VyLm5leHRUb2tlbigpLHBhcnNlci5wYXJzZUV4cHJlc3Npb24oKX07UGFyc2VyLnRva2VuaXplcj1mdW5jdGlvbihpbnB1dCxvcHRpb25zKXtyZXR1cm4gbmV3IHRoaXMob3B0aW9ucyxpbnB1dCl9O09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFBhcnNlci5wcm90b3R5cGUscHJvdG90eXBlQWNjZXNzb3JzKTtwcD1QYXJzZXIucHJvdG90eXBlLGxpdGVyYWw9L14oPzonKCg/OlxcXFwufFteJ1xcXFxdKSo/KSd8XCIoKD86XFxcXC58W15cIlxcXFxdKSo/KVwiKS87cHAuc3RyaWN0RGlyZWN0aXZlPWZ1bmN0aW9uKHN0YXJ0KXtmb3IoOzspe3NraXBXaGl0ZVNwYWNlLmxhc3RJbmRleD1zdGFydCxzdGFydCs9c2tpcFdoaXRlU3BhY2UuZXhlYyh0aGlzLmlucHV0KVswXS5sZW5ndGg7dmFyIG1hdGNoPWxpdGVyYWwuZXhlYyh0aGlzLmlucHV0LnNsaWNlKHN0YXJ0KSk7aWYoIW1hdGNoKXJldHVybiAhMTtpZigobWF0Y2hbMV18fG1hdGNoWzJdKT09PVwidXNlIHN0cmljdFwiKXtza2lwV2hpdGVTcGFjZS5sYXN0SW5kZXg9c3RhcnQrbWF0Y2hbMF0ubGVuZ3RoO3ZhciBzcGFjZUFmdGVyPXNraXBXaGl0ZVNwYWNlLmV4ZWModGhpcy5pbnB1dCksZW5kPXNwYWNlQWZ0ZXIuaW5kZXgrc3BhY2VBZnRlclswXS5sZW5ndGgsbmV4dD10aGlzLmlucHV0LmNoYXJBdChlbmQpO3JldHVybiBuZXh0PT09XCI7XCJ8fG5leHQ9PT1cIn1cInx8bGluZUJyZWFrLnRlc3Qoc3BhY2VBZnRlclswXSkmJiEoL1soYC5bK1xcLS8qJTw+PSw/XiZdLy50ZXN0KG5leHQpfHxuZXh0PT09XCIhXCImJnRoaXMuaW5wdXQuY2hhckF0KGVuZCsxKT09PVwiPVwiKX1zdGFydCs9bWF0Y2hbMF0ubGVuZ3RoLHNraXBXaGl0ZVNwYWNlLmxhc3RJbmRleD1zdGFydCxzdGFydCs9c2tpcFdoaXRlU3BhY2UuZXhlYyh0aGlzLmlucHV0KVswXS5sZW5ndGgsdGhpcy5pbnB1dFtzdGFydF09PT1cIjtcIiYmc3RhcnQrKzt9fTtwcC5lYXQ9ZnVuY3Rpb24odHlwZSl7cmV0dXJuIHRoaXMudHlwZT09PXR5cGU/KHRoaXMubmV4dCgpLCEwKTohMX07cHAuaXNDb250ZXh0dWFsPWZ1bmN0aW9uKG5hbWUpe3JldHVybiB0aGlzLnR5cGU9PT10eXBlcy5uYW1lJiZ0aGlzLnZhbHVlPT09bmFtZSYmIXRoaXMuY29udGFpbnNFc2N9O3BwLmVhdENvbnRleHR1YWw9ZnVuY3Rpb24obmFtZSl7cmV0dXJuIHRoaXMuaXNDb250ZXh0dWFsKG5hbWUpPyh0aGlzLm5leHQoKSwhMCk6ITF9O3BwLmV4cGVjdENvbnRleHR1YWw9ZnVuY3Rpb24obmFtZSl7dGhpcy5lYXRDb250ZXh0dWFsKG5hbWUpfHx0aGlzLnVuZXhwZWN0ZWQoKTt9O3BwLmNhbkluc2VydFNlbWljb2xvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnR5cGU9PT10eXBlcy5lb2Z8fHRoaXMudHlwZT09PXR5cGVzLmJyYWNlUnx8bGluZUJyZWFrLnRlc3QodGhpcy5pbnB1dC5zbGljZSh0aGlzLmxhc3RUb2tFbmQsdGhpcy5zdGFydCkpfTtwcC5pbnNlcnRTZW1pY29sb249ZnVuY3Rpb24oKXtpZih0aGlzLmNhbkluc2VydFNlbWljb2xvbigpKXJldHVybiB0aGlzLm9wdGlvbnMub25JbnNlcnRlZFNlbWljb2xvbiYmdGhpcy5vcHRpb25zLm9uSW5zZXJ0ZWRTZW1pY29sb24odGhpcy5sYXN0VG9rRW5kLHRoaXMubGFzdFRva0VuZExvYyksITB9O3BwLnNlbWljb2xvbj1mdW5jdGlvbigpeyF0aGlzLmVhdCh0eXBlcy5zZW1pKSYmIXRoaXMuaW5zZXJ0U2VtaWNvbG9uKCkmJnRoaXMudW5leHBlY3RlZCgpO307cHAuYWZ0ZXJUcmFpbGluZ0NvbW1hPWZ1bmN0aW9uKHRva1R5cGUsbm90TmV4dCl7aWYodGhpcy50eXBlPT09dG9rVHlwZSlyZXR1cm4gdGhpcy5vcHRpb25zLm9uVHJhaWxpbmdDb21tYSYmdGhpcy5vcHRpb25zLm9uVHJhaWxpbmdDb21tYSh0aGlzLmxhc3RUb2tTdGFydCx0aGlzLmxhc3RUb2tTdGFydExvYyksbm90TmV4dHx8dGhpcy5uZXh0KCksITB9O3BwLmV4cGVjdD1mdW5jdGlvbih0eXBlKXt0aGlzLmVhdCh0eXBlKXx8dGhpcy51bmV4cGVjdGVkKCk7fTtwcC51bmV4cGVjdGVkPWZ1bmN0aW9uKHBvcyl7dGhpcy5yYWlzZShwb3M/P3RoaXMuc3RhcnQsXCJVbmV4cGVjdGVkIHRva2VuXCIpO307cHAuY2hlY2tQYXR0ZXJuRXJyb3JzPWZ1bmN0aW9uKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMsaXNBc3NpZ24pe2lmKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpe3JlZkRlc3RydWN0dXJpbmdFcnJvcnMudHJhaWxpbmdDb21tYT4tMSYmdGhpcy5yYWlzZVJlY292ZXJhYmxlKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMudHJhaWxpbmdDb21tYSxcIkNvbW1hIGlzIG5vdCBwZXJtaXR0ZWQgYWZ0ZXIgdGhlIHJlc3QgZWxlbWVudFwiKTt2YXIgcGFyZW5zPWlzQXNzaWduP3JlZkRlc3RydWN0dXJpbmdFcnJvcnMucGFyZW50aGVzaXplZEFzc2lnbjpyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnBhcmVudGhlc2l6ZWRCaW5kO3BhcmVucz4tMSYmdGhpcy5yYWlzZVJlY292ZXJhYmxlKHBhcmVucyxcIlBhcmVudGhlc2l6ZWQgcGF0dGVyblwiKTt9fTtwcC5jaGVja0V4cHJlc3Npb25FcnJvcnM9ZnVuY3Rpb24ocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyxhbmRUaHJvdyl7aWYoIXJlZkRlc3RydWN0dXJpbmdFcnJvcnMpcmV0dXJuICExO3ZhciBzaG9ydGhhbmRBc3NpZ249cmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycy5zaG9ydGhhbmRBc3NpZ24sZG91YmxlUHJvdG89cmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycy5kb3VibGVQcm90bztpZighYW5kVGhyb3cpcmV0dXJuIHNob3J0aGFuZEFzc2lnbj49MHx8ZG91YmxlUHJvdG8+PTA7c2hvcnRoYW5kQXNzaWduPj0wJiZ0aGlzLnJhaXNlKHNob3J0aGFuZEFzc2lnbixcIlNob3J0aGFuZCBwcm9wZXJ0eSBhc3NpZ25tZW50cyBhcmUgdmFsaWQgb25seSBpbiBkZXN0cnVjdHVyaW5nIHBhdHRlcm5zXCIpLGRvdWJsZVByb3RvPj0wJiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUoZG91YmxlUHJvdG8sXCJSZWRlZmluaXRpb24gb2YgX19wcm90b19fIHByb3BlcnR5XCIpO307cHAuY2hlY2tZaWVsZEF3YWl0SW5EZWZhdWx0UGFyYW1zPWZ1bmN0aW9uKCl7dGhpcy55aWVsZFBvcyYmKCF0aGlzLmF3YWl0UG9zfHx0aGlzLnlpZWxkUG9zPHRoaXMuYXdhaXRQb3MpJiZ0aGlzLnJhaXNlKHRoaXMueWllbGRQb3MsXCJZaWVsZCBleHByZXNzaW9uIGNhbm5vdCBiZSBhIGRlZmF1bHQgdmFsdWVcIiksdGhpcy5hd2FpdFBvcyYmdGhpcy5yYWlzZSh0aGlzLmF3YWl0UG9zLFwiQXdhaXQgZXhwcmVzc2lvbiBjYW5ub3QgYmUgYSBkZWZhdWx0IHZhbHVlXCIpO307cHAuaXNTaW1wbGVBc3NpZ25UYXJnZXQ9ZnVuY3Rpb24oZXhwcil7cmV0dXJuIGV4cHIudHlwZT09PVwiUGFyZW50aGVzaXplZEV4cHJlc3Npb25cIj90aGlzLmlzU2ltcGxlQXNzaWduVGFyZ2V0KGV4cHIuZXhwcmVzc2lvbik6ZXhwci50eXBlPT09XCJJZGVudGlmaWVyXCJ8fGV4cHIudHlwZT09PVwiTWVtYmVyRXhwcmVzc2lvblwifTtwcCQxPVBhcnNlci5wcm90b3R5cGU7cHAkMS5wYXJzZVRvcExldmVsPWZ1bmN0aW9uKG5vZGUpe3ZhciBleHBvcnRzPXt9O2Zvcihub2RlLmJvZHl8fChub2RlLmJvZHk9W10pO3RoaXMudHlwZSE9PXR5cGVzLmVvZjspe3ZhciBzdG10PXRoaXMucGFyc2VTdGF0ZW1lbnQobnVsbCwhMCxleHBvcnRzKTtub2RlLmJvZHkucHVzaChzdG10KTt9aWYodGhpcy5pbk1vZHVsZSlmb3IodmFyIGk9MCxsaXN0PU9iamVjdC5rZXlzKHRoaXMudW5kZWZpbmVkRXhwb3J0cyk7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgbmFtZT1saXN0W2ldO3RoaXMucmFpc2VSZWNvdmVyYWJsZSh0aGlzLnVuZGVmaW5lZEV4cG9ydHNbbmFtZV0uc3RhcnQsXCJFeHBvcnQgJ1wiK25hbWUrXCInIGlzIG5vdCBkZWZpbmVkXCIpO31yZXR1cm4gdGhpcy5hZGFwdERpcmVjdGl2ZVByb2xvZ3VlKG5vZGUuYm9keSksdGhpcy5uZXh0KCksbm9kZS5zb3VyY2VUeXBlPXRoaXMub3B0aW9ucy5zb3VyY2VUeXBlLHRoaXMuZmluaXNoTm9kZShub2RlLFwiUHJvZ3JhbVwiKX07bG9vcExhYmVsPXtraW5kOlwibG9vcFwifSxzd2l0Y2hMYWJlbD17a2luZDpcInN3aXRjaFwifTtwcCQxLmlzTGV0PWZ1bmN0aW9uKGNvbnRleHQpe2lmKHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbjw2fHwhdGhpcy5pc0NvbnRleHR1YWwoXCJsZXRcIikpcmV0dXJuICExO3NraXBXaGl0ZVNwYWNlLmxhc3RJbmRleD10aGlzLnBvczt2YXIgc2tpcD1za2lwV2hpdGVTcGFjZS5leGVjKHRoaXMuaW5wdXQpLG5leHQ9dGhpcy5wb3Mrc2tpcFswXS5sZW5ndGgsbmV4dENoPXRoaXMuaW5wdXQuY2hhckNvZGVBdChuZXh0KTtpZihuZXh0Q2g9PT05MSlyZXR1cm4gITA7aWYoY29udGV4dClyZXR1cm4gITE7aWYobmV4dENoPT09MTIzKXJldHVybiAhMDtpZihpc0lkZW50aWZpZXJTdGFydChuZXh0Q2gsITApKXtmb3IodmFyIHBvcz1uZXh0KzE7aXNJZGVudGlmaWVyQ2hhcih0aGlzLmlucHV0LmNoYXJDb2RlQXQocG9zKSwhMCk7KSsrcG9zO3ZhciBpZGVudD10aGlzLmlucHV0LnNsaWNlKG5leHQscG9zKTtpZigha2V5d29yZFJlbGF0aW9uYWxPcGVyYXRvci50ZXN0KGlkZW50KSlyZXR1cm4gITB9cmV0dXJuICExfTtwcCQxLmlzQXN5bmNGdW5jdGlvbj1mdW5jdGlvbigpe2lmKHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbjw4fHwhdGhpcy5pc0NvbnRleHR1YWwoXCJhc3luY1wiKSlyZXR1cm4gITE7c2tpcFdoaXRlU3BhY2UubGFzdEluZGV4PXRoaXMucG9zO3ZhciBza2lwPXNraXBXaGl0ZVNwYWNlLmV4ZWModGhpcy5pbnB1dCksbmV4dD10aGlzLnBvcytza2lwWzBdLmxlbmd0aDtyZXR1cm4gIWxpbmVCcmVhay50ZXN0KHRoaXMuaW5wdXQuc2xpY2UodGhpcy5wb3MsbmV4dCkpJiZ0aGlzLmlucHV0LnNsaWNlKG5leHQsbmV4dCs4KT09PVwiZnVuY3Rpb25cIiYmKG5leHQrOD09PXRoaXMuaW5wdXQubGVuZ3RofHwhaXNJZGVudGlmaWVyQ2hhcih0aGlzLmlucHV0LmNoYXJBdChuZXh0KzgpKSl9O3BwJDEucGFyc2VTdGF0ZW1lbnQ9ZnVuY3Rpb24oY29udGV4dCx0b3BMZXZlbCxleHBvcnRzKXt2YXIgc3RhcnR0eXBlPXRoaXMudHlwZSxub2RlPXRoaXMuc3RhcnROb2RlKCksa2luZDtzd2l0Y2godGhpcy5pc0xldChjb250ZXh0KSYmKHN0YXJ0dHlwZT10eXBlcy5fdmFyLGtpbmQ9XCJsZXRcIiksc3RhcnR0eXBlKXtjYXNlIHR5cGVzLl9icmVhazpjYXNlIHR5cGVzLl9jb250aW51ZTpyZXR1cm4gdGhpcy5wYXJzZUJyZWFrQ29udGludWVTdGF0ZW1lbnQobm9kZSxzdGFydHR5cGUua2V5d29yZCk7Y2FzZSB0eXBlcy5fZGVidWdnZXI6cmV0dXJuIHRoaXMucGFyc2VEZWJ1Z2dlclN0YXRlbWVudChub2RlKTtjYXNlIHR5cGVzLl9kbzpyZXR1cm4gdGhpcy5wYXJzZURvU3RhdGVtZW50KG5vZGUpO2Nhc2UgdHlwZXMuX2ZvcjpyZXR1cm4gdGhpcy5wYXJzZUZvclN0YXRlbWVudChub2RlKTtjYXNlIHR5cGVzLl9mdW5jdGlvbjpyZXR1cm4gY29udGV4dCYmKHRoaXMuc3RyaWN0fHxjb250ZXh0IT09XCJpZlwiJiZjb250ZXh0IT09XCJsYWJlbFwiKSYmdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj02JiZ0aGlzLnVuZXhwZWN0ZWQoKSx0aGlzLnBhcnNlRnVuY3Rpb25TdGF0ZW1lbnQobm9kZSwhMSwhY29udGV4dCk7Y2FzZSB0eXBlcy5fY2xhc3M6cmV0dXJuIGNvbnRleHQmJnRoaXMudW5leHBlY3RlZCgpLHRoaXMucGFyc2VDbGFzcyhub2RlLCEwKTtjYXNlIHR5cGVzLl9pZjpyZXR1cm4gdGhpcy5wYXJzZUlmU3RhdGVtZW50KG5vZGUpO2Nhc2UgdHlwZXMuX3JldHVybjpyZXR1cm4gdGhpcy5wYXJzZVJldHVyblN0YXRlbWVudChub2RlKTtjYXNlIHR5cGVzLl9zd2l0Y2g6cmV0dXJuIHRoaXMucGFyc2VTd2l0Y2hTdGF0ZW1lbnQobm9kZSk7Y2FzZSB0eXBlcy5fdGhyb3c6cmV0dXJuIHRoaXMucGFyc2VUaHJvd1N0YXRlbWVudChub2RlKTtjYXNlIHR5cGVzLl90cnk6cmV0dXJuIHRoaXMucGFyc2VUcnlTdGF0ZW1lbnQobm9kZSk7Y2FzZSB0eXBlcy5fY29uc3Q6Y2FzZSB0eXBlcy5fdmFyOnJldHVybiBraW5kPWtpbmR8fHRoaXMudmFsdWUsY29udGV4dCYma2luZCE9PVwidmFyXCImJnRoaXMudW5leHBlY3RlZCgpLHRoaXMucGFyc2VWYXJTdGF0ZW1lbnQobm9kZSxraW5kKTtjYXNlIHR5cGVzLl93aGlsZTpyZXR1cm4gdGhpcy5wYXJzZVdoaWxlU3RhdGVtZW50KG5vZGUpO2Nhc2UgdHlwZXMuX3dpdGg6cmV0dXJuIHRoaXMucGFyc2VXaXRoU3RhdGVtZW50KG5vZGUpO2Nhc2UgdHlwZXMuYnJhY2VMOnJldHVybiB0aGlzLnBhcnNlQmxvY2soITAsbm9kZSk7Y2FzZSB0eXBlcy5zZW1pOnJldHVybiB0aGlzLnBhcnNlRW1wdHlTdGF0ZW1lbnQobm9kZSk7Y2FzZSB0eXBlcy5fZXhwb3J0OmNhc2UgdHlwZXMuX2ltcG9ydDppZih0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+MTAmJnN0YXJ0dHlwZT09PXR5cGVzLl9pbXBvcnQpe3NraXBXaGl0ZVNwYWNlLmxhc3RJbmRleD10aGlzLnBvczt2YXIgc2tpcD1za2lwV2hpdGVTcGFjZS5leGVjKHRoaXMuaW5wdXQpLG5leHQ9dGhpcy5wb3Mrc2tpcFswXS5sZW5ndGgsbmV4dENoPXRoaXMuaW5wdXQuY2hhckNvZGVBdChuZXh0KTtpZihuZXh0Q2g9PT00MHx8bmV4dENoPT09NDYpcmV0dXJuIHRoaXMucGFyc2VFeHByZXNzaW9uU3RhdGVtZW50KG5vZGUsdGhpcy5wYXJzZUV4cHJlc3Npb24oKSl9cmV0dXJuIHRoaXMub3B0aW9ucy5hbGxvd0ltcG9ydEV4cG9ydEV2ZXJ5d2hlcmV8fCh0b3BMZXZlbHx8dGhpcy5yYWlzZSh0aGlzLnN0YXJ0LFwiJ2ltcG9ydCcgYW5kICdleHBvcnQnIG1heSBvbmx5IGFwcGVhciBhdCB0aGUgdG9wIGxldmVsXCIpLHRoaXMuaW5Nb2R1bGV8fHRoaXMucmFpc2UodGhpcy5zdGFydCxcIidpbXBvcnQnIGFuZCAnZXhwb3J0JyBtYXkgYXBwZWFyIG9ubHkgd2l0aCAnc291cmNlVHlwZTogbW9kdWxlJ1wiKSksc3RhcnR0eXBlPT09dHlwZXMuX2ltcG9ydD90aGlzLnBhcnNlSW1wb3J0KG5vZGUpOnRoaXMucGFyc2VFeHBvcnQobm9kZSxleHBvcnRzKTtkZWZhdWx0OmlmKHRoaXMuaXNBc3luY0Z1bmN0aW9uKCkpcmV0dXJuIGNvbnRleHQmJnRoaXMudW5leHBlY3RlZCgpLHRoaXMubmV4dCgpLHRoaXMucGFyc2VGdW5jdGlvblN0YXRlbWVudChub2RlLCEwLCFjb250ZXh0KTt2YXIgbWF5YmVOYW1lPXRoaXMudmFsdWUsZXhwcj10aGlzLnBhcnNlRXhwcmVzc2lvbigpO3JldHVybiBzdGFydHR5cGU9PT10eXBlcy5uYW1lJiZleHByLnR5cGU9PT1cIklkZW50aWZpZXJcIiYmdGhpcy5lYXQodHlwZXMuY29sb24pP3RoaXMucGFyc2VMYWJlbGVkU3RhdGVtZW50KG5vZGUsbWF5YmVOYW1lLGV4cHIsY29udGV4dCk6dGhpcy5wYXJzZUV4cHJlc3Npb25TdGF0ZW1lbnQobm9kZSxleHByKX19O3BwJDEucGFyc2VCcmVha0NvbnRpbnVlU3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUsa2V5d29yZCl7dmFyIGlzQnJlYWs9a2V5d29yZD09PVwiYnJlYWtcIjt0aGlzLm5leHQoKSx0aGlzLmVhdCh0eXBlcy5zZW1pKXx8dGhpcy5pbnNlcnRTZW1pY29sb24oKT9ub2RlLmxhYmVsPW51bGw6dGhpcy50eXBlIT09dHlwZXMubmFtZT90aGlzLnVuZXhwZWN0ZWQoKToobm9kZS5sYWJlbD10aGlzLnBhcnNlSWRlbnQoKSx0aGlzLnNlbWljb2xvbigpKTtmb3IodmFyIGk9MDtpPHRoaXMubGFiZWxzLmxlbmd0aDsrK2kpe3ZhciBsYWI9dGhpcy5sYWJlbHNbaV07aWYoKG5vZGUubGFiZWw9PW51bGx8fGxhYi5uYW1lPT09bm9kZS5sYWJlbC5uYW1lKSYmKGxhYi5raW5kIT1udWxsJiYoaXNCcmVha3x8bGFiLmtpbmQ9PT1cImxvb3BcIil8fG5vZGUubGFiZWwmJmlzQnJlYWspKWJyZWFrfXJldHVybiBpPT09dGhpcy5sYWJlbHMubGVuZ3RoJiZ0aGlzLnJhaXNlKG5vZGUuc3RhcnQsXCJVbnN5bnRhY3RpYyBcIitrZXl3b3JkKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxpc0JyZWFrP1wiQnJlYWtTdGF0ZW1lbnRcIjpcIkNvbnRpbnVlU3RhdGVtZW50XCIpfTtwcCQxLnBhcnNlRGVidWdnZXJTdGF0ZW1lbnQ9ZnVuY3Rpb24obm9kZSl7cmV0dXJuIHRoaXMubmV4dCgpLHRoaXMuc2VtaWNvbG9uKCksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJEZWJ1Z2dlclN0YXRlbWVudFwiKX07cHAkMS5wYXJzZURvU3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUpe3JldHVybiB0aGlzLm5leHQoKSx0aGlzLmxhYmVscy5wdXNoKGxvb3BMYWJlbCksbm9kZS5ib2R5PXRoaXMucGFyc2VTdGF0ZW1lbnQoXCJkb1wiKSx0aGlzLmxhYmVscy5wb3AoKSx0aGlzLmV4cGVjdCh0eXBlcy5fd2hpbGUpLG5vZGUudGVzdD10aGlzLnBhcnNlUGFyZW5FeHByZXNzaW9uKCksdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj02P3RoaXMuZWF0KHR5cGVzLnNlbWkpOnRoaXMuc2VtaWNvbG9uKCksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJEb1doaWxlU3RhdGVtZW50XCIpfTtwcCQxLnBhcnNlRm9yU3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUpe3RoaXMubmV4dCgpO3ZhciBhd2FpdEF0PXRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OSYmKHRoaXMuaW5Bc3luY3x8IXRoaXMuaW5GdW5jdGlvbiYmdGhpcy5vcHRpb25zLmFsbG93QXdhaXRPdXRzaWRlRnVuY3Rpb24pJiZ0aGlzLmVhdENvbnRleHR1YWwoXCJhd2FpdFwiKT90aGlzLmxhc3RUb2tTdGFydDotMTtpZih0aGlzLmxhYmVscy5wdXNoKGxvb3BMYWJlbCksdGhpcy5lbnRlclNjb3BlKDApLHRoaXMuZXhwZWN0KHR5cGVzLnBhcmVuTCksdGhpcy50eXBlPT09dHlwZXMuc2VtaSlyZXR1cm4gYXdhaXRBdD4tMSYmdGhpcy51bmV4cGVjdGVkKGF3YWl0QXQpLHRoaXMucGFyc2VGb3Iobm9kZSxudWxsKTt2YXIgaXNMZXQ9dGhpcy5pc0xldCgpO2lmKHRoaXMudHlwZT09PXR5cGVzLl92YXJ8fHRoaXMudHlwZT09PXR5cGVzLl9jb25zdHx8aXNMZXQpe3ZhciBpbml0JDE9dGhpcy5zdGFydE5vZGUoKSxraW5kPWlzTGV0P1wibGV0XCI6dGhpcy52YWx1ZTtyZXR1cm4gdGhpcy5uZXh0KCksdGhpcy5wYXJzZVZhcihpbml0JDEsITAsa2luZCksdGhpcy5maW5pc2hOb2RlKGluaXQkMSxcIlZhcmlhYmxlRGVjbGFyYXRpb25cIiksKHRoaXMudHlwZT09PXR5cGVzLl9pbnx8dGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj02JiZ0aGlzLmlzQ29udGV4dHVhbChcIm9mXCIpKSYmaW5pdCQxLmRlY2xhcmF0aW9ucy5sZW5ndGg9PT0xPyh0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTkmJih0aGlzLnR5cGU9PT10eXBlcy5faW4/YXdhaXRBdD4tMSYmdGhpcy51bmV4cGVjdGVkKGF3YWl0QXQpOm5vZGUuYXdhaXQ9YXdhaXRBdD4tMSksdGhpcy5wYXJzZUZvckluKG5vZGUsaW5pdCQxKSk6KGF3YWl0QXQ+LTEmJnRoaXMudW5leHBlY3RlZChhd2FpdEF0KSx0aGlzLnBhcnNlRm9yKG5vZGUsaW5pdCQxKSl9dmFyIHJlZkRlc3RydWN0dXJpbmdFcnJvcnM9bmV3IERlc3RydWN0dXJpbmdFcnJvcnMsaW5pdD10aGlzLnBhcnNlRXhwcmVzc2lvbighMCxyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKTtyZXR1cm4gdGhpcy50eXBlPT09dHlwZXMuX2lufHx0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTYmJnRoaXMuaXNDb250ZXh0dWFsKFwib2ZcIik/KHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OSYmKHRoaXMudHlwZT09PXR5cGVzLl9pbj9hd2FpdEF0Pi0xJiZ0aGlzLnVuZXhwZWN0ZWQoYXdhaXRBdCk6bm9kZS5hd2FpdD1hd2FpdEF0Pi0xKSx0aGlzLnRvQXNzaWduYWJsZShpbml0LCExLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpLHRoaXMuY2hlY2tMVmFsKGluaXQpLHRoaXMucGFyc2VGb3JJbihub2RlLGluaXQpKToodGhpcy5jaGVja0V4cHJlc3Npb25FcnJvcnMocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycywhMCksYXdhaXRBdD4tMSYmdGhpcy51bmV4cGVjdGVkKGF3YWl0QXQpLHRoaXMucGFyc2VGb3Iobm9kZSxpbml0KSl9O3BwJDEucGFyc2VGdW5jdGlvblN0YXRlbWVudD1mdW5jdGlvbihub2RlLGlzQXN5bmMsZGVjbGFyYXRpb25Qb3NpdGlvbil7cmV0dXJuIHRoaXMubmV4dCgpLHRoaXMucGFyc2VGdW5jdGlvbihub2RlLEZVTkNfU1RBVEVNRU5UfChkZWNsYXJhdGlvblBvc2l0aW9uPzA6RlVOQ19IQU5HSU5HX1NUQVRFTUVOVCksITEsaXNBc3luYyl9O3BwJDEucGFyc2VJZlN0YXRlbWVudD1mdW5jdGlvbihub2RlKXtyZXR1cm4gdGhpcy5uZXh0KCksbm9kZS50ZXN0PXRoaXMucGFyc2VQYXJlbkV4cHJlc3Npb24oKSxub2RlLmNvbnNlcXVlbnQ9dGhpcy5wYXJzZVN0YXRlbWVudChcImlmXCIpLG5vZGUuYWx0ZXJuYXRlPXRoaXMuZWF0KHR5cGVzLl9lbHNlKT90aGlzLnBhcnNlU3RhdGVtZW50KFwiaWZcIik6bnVsbCx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIklmU3RhdGVtZW50XCIpfTtwcCQxLnBhcnNlUmV0dXJuU3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUpe3JldHVybiAhdGhpcy5pbkZ1bmN0aW9uJiYhdGhpcy5vcHRpb25zLmFsbG93UmV0dXJuT3V0c2lkZUZ1bmN0aW9uJiZ0aGlzLnJhaXNlKHRoaXMuc3RhcnQsXCIncmV0dXJuJyBvdXRzaWRlIG9mIGZ1bmN0aW9uXCIpLHRoaXMubmV4dCgpLHRoaXMuZWF0KHR5cGVzLnNlbWkpfHx0aGlzLmluc2VydFNlbWljb2xvbigpP25vZGUuYXJndW1lbnQ9bnVsbDoobm9kZS5hcmd1bWVudD10aGlzLnBhcnNlRXhwcmVzc2lvbigpLHRoaXMuc2VtaWNvbG9uKCkpLHRoaXMuZmluaXNoTm9kZShub2RlLFwiUmV0dXJuU3RhdGVtZW50XCIpfTtwcCQxLnBhcnNlU3dpdGNoU3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUpe3RoaXMubmV4dCgpLG5vZGUuZGlzY3JpbWluYW50PXRoaXMucGFyc2VQYXJlbkV4cHJlc3Npb24oKSxub2RlLmNhc2VzPVtdLHRoaXMuZXhwZWN0KHR5cGVzLmJyYWNlTCksdGhpcy5sYWJlbHMucHVzaChzd2l0Y2hMYWJlbCksdGhpcy5lbnRlclNjb3BlKDApO2Zvcih2YXIgY3VyLHNhd0RlZmF1bHQ9ITE7dGhpcy50eXBlIT09dHlwZXMuYnJhY2VSOylpZih0aGlzLnR5cGU9PT10eXBlcy5fY2FzZXx8dGhpcy50eXBlPT09dHlwZXMuX2RlZmF1bHQpe3ZhciBpc0Nhc2U9dGhpcy50eXBlPT09dHlwZXMuX2Nhc2U7Y3VyJiZ0aGlzLmZpbmlzaE5vZGUoY3VyLFwiU3dpdGNoQ2FzZVwiKSxub2RlLmNhc2VzLnB1c2goY3VyPXRoaXMuc3RhcnROb2RlKCkpLGN1ci5jb25zZXF1ZW50PVtdLHRoaXMubmV4dCgpLGlzQ2FzZT9jdXIudGVzdD10aGlzLnBhcnNlRXhwcmVzc2lvbigpOihzYXdEZWZhdWx0JiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUodGhpcy5sYXN0VG9rU3RhcnQsXCJNdWx0aXBsZSBkZWZhdWx0IGNsYXVzZXNcIiksc2F3RGVmYXVsdD0hMCxjdXIudGVzdD1udWxsKSx0aGlzLmV4cGVjdCh0eXBlcy5jb2xvbik7fWVsc2UgY3VyfHx0aGlzLnVuZXhwZWN0ZWQoKSxjdXIuY29uc2VxdWVudC5wdXNoKHRoaXMucGFyc2VTdGF0ZW1lbnQobnVsbCkpO3JldHVybiB0aGlzLmV4aXRTY29wZSgpLGN1ciYmdGhpcy5maW5pc2hOb2RlKGN1cixcIlN3aXRjaENhc2VcIiksdGhpcy5uZXh0KCksdGhpcy5sYWJlbHMucG9wKCksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJTd2l0Y2hTdGF0ZW1lbnRcIil9O3BwJDEucGFyc2VUaHJvd1N0YXRlbWVudD1mdW5jdGlvbihub2RlKXtyZXR1cm4gdGhpcy5uZXh0KCksbGluZUJyZWFrLnRlc3QodGhpcy5pbnB1dC5zbGljZSh0aGlzLmxhc3RUb2tFbmQsdGhpcy5zdGFydCkpJiZ0aGlzLnJhaXNlKHRoaXMubGFzdFRva0VuZCxcIklsbGVnYWwgbmV3bGluZSBhZnRlciB0aHJvd1wiKSxub2RlLmFyZ3VtZW50PXRoaXMucGFyc2VFeHByZXNzaW9uKCksdGhpcy5zZW1pY29sb24oKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIlRocm93U3RhdGVtZW50XCIpfTtlbXB0eT1bXTtwcCQxLnBhcnNlVHJ5U3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUpe2lmKHRoaXMubmV4dCgpLG5vZGUuYmxvY2s9dGhpcy5wYXJzZUJsb2NrKCksbm9kZS5oYW5kbGVyPW51bGwsdGhpcy50eXBlPT09dHlwZXMuX2NhdGNoKXt2YXIgY2xhdXNlPXRoaXMuc3RhcnROb2RlKCk7aWYodGhpcy5uZXh0KCksdGhpcy5lYXQodHlwZXMucGFyZW5MKSl7Y2xhdXNlLnBhcmFtPXRoaXMucGFyc2VCaW5kaW5nQXRvbSgpO3ZhciBzaW1wbGUyPWNsYXVzZS5wYXJhbS50eXBlPT09XCJJZGVudGlmaWVyXCI7dGhpcy5lbnRlclNjb3BlKHNpbXBsZTI/U0NPUEVfU0lNUExFX0NBVENIOjApLHRoaXMuY2hlY2tMVmFsKGNsYXVzZS5wYXJhbSxzaW1wbGUyP0JJTkRfU0lNUExFX0NBVENIOkJJTkRfTEVYSUNBTCksdGhpcy5leHBlY3QodHlwZXMucGFyZW5SKTt9ZWxzZSB0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb248MTAmJnRoaXMudW5leHBlY3RlZCgpLGNsYXVzZS5wYXJhbT1udWxsLHRoaXMuZW50ZXJTY29wZSgwKTtjbGF1c2UuYm9keT10aGlzLnBhcnNlQmxvY2soITEpLHRoaXMuZXhpdFNjb3BlKCksbm9kZS5oYW5kbGVyPXRoaXMuZmluaXNoTm9kZShjbGF1c2UsXCJDYXRjaENsYXVzZVwiKTt9cmV0dXJuIG5vZGUuZmluYWxpemVyPXRoaXMuZWF0KHR5cGVzLl9maW5hbGx5KT90aGlzLnBhcnNlQmxvY2soKTpudWxsLCFub2RlLmhhbmRsZXImJiFub2RlLmZpbmFsaXplciYmdGhpcy5yYWlzZShub2RlLnN0YXJ0LFwiTWlzc2luZyBjYXRjaCBvciBmaW5hbGx5IGNsYXVzZVwiKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIlRyeVN0YXRlbWVudFwiKX07cHAkMS5wYXJzZVZhclN0YXRlbWVudD1mdW5jdGlvbihub2RlLGtpbmQpe3JldHVybiB0aGlzLm5leHQoKSx0aGlzLnBhcnNlVmFyKG5vZGUsITEsa2luZCksdGhpcy5zZW1pY29sb24oKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIlZhcmlhYmxlRGVjbGFyYXRpb25cIil9O3BwJDEucGFyc2VXaGlsZVN0YXRlbWVudD1mdW5jdGlvbihub2RlKXtyZXR1cm4gdGhpcy5uZXh0KCksbm9kZS50ZXN0PXRoaXMucGFyc2VQYXJlbkV4cHJlc3Npb24oKSx0aGlzLmxhYmVscy5wdXNoKGxvb3BMYWJlbCksbm9kZS5ib2R5PXRoaXMucGFyc2VTdGF0ZW1lbnQoXCJ3aGlsZVwiKSx0aGlzLmxhYmVscy5wb3AoKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIldoaWxlU3RhdGVtZW50XCIpfTtwcCQxLnBhcnNlV2l0aFN0YXRlbWVudD1mdW5jdGlvbihub2RlKXtyZXR1cm4gdGhpcy5zdHJpY3QmJnRoaXMucmFpc2UodGhpcy5zdGFydCxcIid3aXRoJyBpbiBzdHJpY3QgbW9kZVwiKSx0aGlzLm5leHQoKSxub2RlLm9iamVjdD10aGlzLnBhcnNlUGFyZW5FeHByZXNzaW9uKCksbm9kZS5ib2R5PXRoaXMucGFyc2VTdGF0ZW1lbnQoXCJ3aXRoXCIpLHRoaXMuZmluaXNoTm9kZShub2RlLFwiV2l0aFN0YXRlbWVudFwiKX07cHAkMS5wYXJzZUVtcHR5U3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUpe3JldHVybiB0aGlzLm5leHQoKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkVtcHR5U3RhdGVtZW50XCIpfTtwcCQxLnBhcnNlTGFiZWxlZFN0YXRlbWVudD1mdW5jdGlvbihub2RlLG1heWJlTmFtZSxleHByLGNvbnRleHQpe2Zvcih2YXIgaSQxPTAsbGlzdD10aGlzLmxhYmVscztpJDE8bGlzdC5sZW5ndGg7aSQxKz0xKXt2YXIgbGFiZWw9bGlzdFtpJDFdO2xhYmVsLm5hbWU9PT1tYXliZU5hbWUmJnRoaXMucmFpc2UoZXhwci5zdGFydCxcIkxhYmVsICdcIittYXliZU5hbWUrXCInIGlzIGFscmVhZHkgZGVjbGFyZWRcIik7fWZvcih2YXIga2luZD10aGlzLnR5cGUuaXNMb29wP1wibG9vcFwiOnRoaXMudHlwZT09PXR5cGVzLl9zd2l0Y2g/XCJzd2l0Y2hcIjpudWxsLGk9dGhpcy5sYWJlbHMubGVuZ3RoLTE7aT49MDtpLS0pe3ZhciBsYWJlbCQxPXRoaXMubGFiZWxzW2ldO2lmKGxhYmVsJDEuc3RhdGVtZW50U3RhcnQ9PT1ub2RlLnN0YXJ0KWxhYmVsJDEuc3RhdGVtZW50U3RhcnQ9dGhpcy5zdGFydCxsYWJlbCQxLmtpbmQ9a2luZDtlbHNlIGJyZWFrfXJldHVybiB0aGlzLmxhYmVscy5wdXNoKHtuYW1lOm1heWJlTmFtZSxraW5kLHN0YXRlbWVudFN0YXJ0OnRoaXMuc3RhcnR9KSxub2RlLmJvZHk9dGhpcy5wYXJzZVN0YXRlbWVudChjb250ZXh0P2NvbnRleHQuaW5kZXhPZihcImxhYmVsXCIpPT09LTE/Y29udGV4dCtcImxhYmVsXCI6Y29udGV4dDpcImxhYmVsXCIpLHRoaXMubGFiZWxzLnBvcCgpLG5vZGUubGFiZWw9ZXhwcix0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkxhYmVsZWRTdGF0ZW1lbnRcIil9O3BwJDEucGFyc2VFeHByZXNzaW9uU3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUsZXhwcil7cmV0dXJuIG5vZGUuZXhwcmVzc2lvbj1leHByLHRoaXMuc2VtaWNvbG9uKCksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJFeHByZXNzaW9uU3RhdGVtZW50XCIpfTtwcCQxLnBhcnNlQmxvY2s9ZnVuY3Rpb24oY3JlYXRlTmV3TGV4aWNhbFNjb3BlLG5vZGUsZXhpdFN0cmljdCl7Zm9yKGNyZWF0ZU5ld0xleGljYWxTY29wZT09PXZvaWQgMCYmKGNyZWF0ZU5ld0xleGljYWxTY29wZT0hMCksbm9kZT09PXZvaWQgMCYmKG5vZGU9dGhpcy5zdGFydE5vZGUoKSksbm9kZS5ib2R5PVtdLHRoaXMuZXhwZWN0KHR5cGVzLmJyYWNlTCksY3JlYXRlTmV3TGV4aWNhbFNjb3BlJiZ0aGlzLmVudGVyU2NvcGUoMCk7dGhpcy50eXBlIT09dHlwZXMuYnJhY2VSOyl7dmFyIHN0bXQ9dGhpcy5wYXJzZVN0YXRlbWVudChudWxsKTtub2RlLmJvZHkucHVzaChzdG10KTt9cmV0dXJuIGV4aXRTdHJpY3QmJih0aGlzLnN0cmljdD0hMSksdGhpcy5uZXh0KCksY3JlYXRlTmV3TGV4aWNhbFNjb3BlJiZ0aGlzLmV4aXRTY29wZSgpLHRoaXMuZmluaXNoTm9kZShub2RlLFwiQmxvY2tTdGF0ZW1lbnRcIil9O3BwJDEucGFyc2VGb3I9ZnVuY3Rpb24obm9kZSxpbml0KXtyZXR1cm4gbm9kZS5pbml0PWluaXQsdGhpcy5leHBlY3QodHlwZXMuc2VtaSksbm9kZS50ZXN0PXRoaXMudHlwZT09PXR5cGVzLnNlbWk/bnVsbDp0aGlzLnBhcnNlRXhwcmVzc2lvbigpLHRoaXMuZXhwZWN0KHR5cGVzLnNlbWkpLG5vZGUudXBkYXRlPXRoaXMudHlwZT09PXR5cGVzLnBhcmVuUj9udWxsOnRoaXMucGFyc2VFeHByZXNzaW9uKCksdGhpcy5leHBlY3QodHlwZXMucGFyZW5SKSxub2RlLmJvZHk9dGhpcy5wYXJzZVN0YXRlbWVudChcImZvclwiKSx0aGlzLmV4aXRTY29wZSgpLHRoaXMubGFiZWxzLnBvcCgpLHRoaXMuZmluaXNoTm9kZShub2RlLFwiRm9yU3RhdGVtZW50XCIpfTtwcCQxLnBhcnNlRm9ySW49ZnVuY3Rpb24obm9kZSxpbml0KXt2YXIgaXNGb3JJbj10aGlzLnR5cGU9PT10eXBlcy5faW47cmV0dXJuIHRoaXMubmV4dCgpLGluaXQudHlwZT09PVwiVmFyaWFibGVEZWNsYXJhdGlvblwiJiZpbml0LmRlY2xhcmF0aW9uc1swXS5pbml0IT1udWxsJiYoIWlzRm9ySW58fHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbjw4fHx0aGlzLnN0cmljdHx8aW5pdC5raW5kIT09XCJ2YXJcInx8aW5pdC5kZWNsYXJhdGlvbnNbMF0uaWQudHlwZSE9PVwiSWRlbnRpZmllclwiKT90aGlzLnJhaXNlKGluaXQuc3RhcnQsKGlzRm9ySW4/XCJmb3ItaW5cIjpcImZvci1vZlwiKStcIiBsb29wIHZhcmlhYmxlIGRlY2xhcmF0aW9uIG1heSBub3QgaGF2ZSBhbiBpbml0aWFsaXplclwiKTppbml0LnR5cGU9PT1cIkFzc2lnbm1lbnRQYXR0ZXJuXCImJnRoaXMucmFpc2UoaW5pdC5zdGFydCxcIkludmFsaWQgbGVmdC1oYW5kIHNpZGUgaW4gZm9yLWxvb3BcIiksbm9kZS5sZWZ0PWluaXQsbm9kZS5yaWdodD1pc0ZvckluP3RoaXMucGFyc2VFeHByZXNzaW9uKCk6dGhpcy5wYXJzZU1heWJlQXNzaWduKCksdGhpcy5leHBlY3QodHlwZXMucGFyZW5SKSxub2RlLmJvZHk9dGhpcy5wYXJzZVN0YXRlbWVudChcImZvclwiKSx0aGlzLmV4aXRTY29wZSgpLHRoaXMubGFiZWxzLnBvcCgpLHRoaXMuZmluaXNoTm9kZShub2RlLGlzRm9ySW4/XCJGb3JJblN0YXRlbWVudFwiOlwiRm9yT2ZTdGF0ZW1lbnRcIil9O3BwJDEucGFyc2VWYXI9ZnVuY3Rpb24obm9kZSxpc0ZvcixraW5kKXtmb3Iobm9kZS5kZWNsYXJhdGlvbnM9W10sbm9kZS5raW5kPWtpbmQ7Oyl7dmFyIGRlY2w9dGhpcy5zdGFydE5vZGUoKTtpZih0aGlzLnBhcnNlVmFySWQoZGVjbCxraW5kKSx0aGlzLmVhdCh0eXBlcy5lcSk/ZGVjbC5pbml0PXRoaXMucGFyc2VNYXliZUFzc2lnbihpc0Zvcik6a2luZD09PVwiY29uc3RcIiYmISh0aGlzLnR5cGU9PT10eXBlcy5faW58fHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49NiYmdGhpcy5pc0NvbnRleHR1YWwoXCJvZlwiKSk/dGhpcy51bmV4cGVjdGVkKCk6ZGVjbC5pZC50eXBlIT09XCJJZGVudGlmaWVyXCImJiEoaXNGb3ImJih0aGlzLnR5cGU9PT10eXBlcy5faW58fHRoaXMuaXNDb250ZXh0dWFsKFwib2ZcIikpKT90aGlzLnJhaXNlKHRoaXMubGFzdFRva0VuZCxcIkNvbXBsZXggYmluZGluZyBwYXR0ZXJucyByZXF1aXJlIGFuIGluaXRpYWxpemF0aW9uIHZhbHVlXCIpOmRlY2wuaW5pdD1udWxsLG5vZGUuZGVjbGFyYXRpb25zLnB1c2godGhpcy5maW5pc2hOb2RlKGRlY2wsXCJWYXJpYWJsZURlY2xhcmF0b3JcIikpLCF0aGlzLmVhdCh0eXBlcy5jb21tYSkpYnJlYWt9cmV0dXJuIG5vZGV9O3BwJDEucGFyc2VWYXJJZD1mdW5jdGlvbihkZWNsLGtpbmQpe2RlY2wuaWQ9dGhpcy5wYXJzZUJpbmRpbmdBdG9tKCksdGhpcy5jaGVja0xWYWwoZGVjbC5pZCxraW5kPT09XCJ2YXJcIj9CSU5EX1ZBUjpCSU5EX0xFWElDQUwsITEpO307RlVOQ19TVEFURU1FTlQ9MSxGVU5DX0hBTkdJTkdfU1RBVEVNRU5UPTIsRlVOQ19OVUxMQUJMRV9JRD00O3BwJDEucGFyc2VGdW5jdGlvbj1mdW5jdGlvbihub2RlLHN0YXRlbWVudCxhbGxvd0V4cHJlc3Npb25Cb2R5LGlzQXN5bmMpe3RoaXMuaW5pdEZ1bmN0aW9uKG5vZGUpLCh0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTl8fHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49NiYmIWlzQXN5bmMpJiYodGhpcy50eXBlPT09dHlwZXMuc3RhciYmc3RhdGVtZW50JkZVTkNfSEFOR0lOR19TVEFURU1FTlQmJnRoaXMudW5leHBlY3RlZCgpLG5vZGUuZ2VuZXJhdG9yPXRoaXMuZWF0KHR5cGVzLnN0YXIpKSx0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTgmJihub2RlLmFzeW5jPSEhaXNBc3luYyksc3RhdGVtZW50JkZVTkNfU1RBVEVNRU5UJiYobm9kZS5pZD1zdGF0ZW1lbnQmRlVOQ19OVUxMQUJMRV9JRCYmdGhpcy50eXBlIT09dHlwZXMubmFtZT9udWxsOnRoaXMucGFyc2VJZGVudCgpLG5vZGUuaWQmJiEoc3RhdGVtZW50JkZVTkNfSEFOR0lOR19TVEFURU1FTlQpJiZ0aGlzLmNoZWNrTFZhbChub2RlLmlkLHRoaXMuc3RyaWN0fHxub2RlLmdlbmVyYXRvcnx8bm9kZS5hc3luYz90aGlzLnRyZWF0RnVuY3Rpb25zQXNWYXI/QklORF9WQVI6QklORF9MRVhJQ0FMOkJJTkRfRlVOQ1RJT04pKTt2YXIgb2xkWWllbGRQb3M9dGhpcy55aWVsZFBvcyxvbGRBd2FpdFBvcz10aGlzLmF3YWl0UG9zLG9sZEF3YWl0SWRlbnRQb3M9dGhpcy5hd2FpdElkZW50UG9zO3JldHVybiB0aGlzLnlpZWxkUG9zPTAsdGhpcy5hd2FpdFBvcz0wLHRoaXMuYXdhaXRJZGVudFBvcz0wLHRoaXMuZW50ZXJTY29wZShmdW5jdGlvbkZsYWdzKG5vZGUuYXN5bmMsbm9kZS5nZW5lcmF0b3IpKSxzdGF0ZW1lbnQmRlVOQ19TVEFURU1FTlR8fChub2RlLmlkPXRoaXMudHlwZT09PXR5cGVzLm5hbWU/dGhpcy5wYXJzZUlkZW50KCk6bnVsbCksdGhpcy5wYXJzZUZ1bmN0aW9uUGFyYW1zKG5vZGUpLHRoaXMucGFyc2VGdW5jdGlvbkJvZHkobm9kZSxhbGxvd0V4cHJlc3Npb25Cb2R5LCExKSx0aGlzLnlpZWxkUG9zPW9sZFlpZWxkUG9zLHRoaXMuYXdhaXRQb3M9b2xkQXdhaXRQb3MsdGhpcy5hd2FpdElkZW50UG9zPW9sZEF3YWl0SWRlbnRQb3MsdGhpcy5maW5pc2hOb2RlKG5vZGUsc3RhdGVtZW50JkZVTkNfU1RBVEVNRU5UP1wiRnVuY3Rpb25EZWNsYXJhdGlvblwiOlwiRnVuY3Rpb25FeHByZXNzaW9uXCIpfTtwcCQxLnBhcnNlRnVuY3Rpb25QYXJhbXM9ZnVuY3Rpb24obm9kZSl7dGhpcy5leHBlY3QodHlwZXMucGFyZW5MKSxub2RlLnBhcmFtcz10aGlzLnBhcnNlQmluZGluZ0xpc3QodHlwZXMucGFyZW5SLCExLHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OCksdGhpcy5jaGVja1lpZWxkQXdhaXRJbkRlZmF1bHRQYXJhbXMoKTt9O3BwJDEucGFyc2VDbGFzcz1mdW5jdGlvbihub2RlLGlzU3RhdGVtZW50KXt0aGlzLm5leHQoKTt2YXIgb2xkU3RyaWN0PXRoaXMuc3RyaWN0O3RoaXMuc3RyaWN0PSEwLHRoaXMucGFyc2VDbGFzc0lkKG5vZGUsaXNTdGF0ZW1lbnQpLHRoaXMucGFyc2VDbGFzc1N1cGVyKG5vZGUpO3ZhciBjbGFzc0JvZHk9dGhpcy5zdGFydE5vZGUoKSxoYWRDb25zdHJ1Y3Rvcj0hMTtmb3IoY2xhc3NCb2R5LmJvZHk9W10sdGhpcy5leHBlY3QodHlwZXMuYnJhY2VMKTt0aGlzLnR5cGUhPT10eXBlcy5icmFjZVI7KXt2YXIgZWxlbWVudD10aGlzLnBhcnNlQ2xhc3NFbGVtZW50KG5vZGUuc3VwZXJDbGFzcyE9PW51bGwpO2VsZW1lbnQmJihjbGFzc0JvZHkuYm9keS5wdXNoKGVsZW1lbnQpLGVsZW1lbnQudHlwZT09PVwiTWV0aG9kRGVmaW5pdGlvblwiJiZlbGVtZW50LmtpbmQ9PT1cImNvbnN0cnVjdG9yXCImJihoYWRDb25zdHJ1Y3RvciYmdGhpcy5yYWlzZShlbGVtZW50LnN0YXJ0LFwiRHVwbGljYXRlIGNvbnN0cnVjdG9yIGluIHRoZSBzYW1lIGNsYXNzXCIpLGhhZENvbnN0cnVjdG9yPSEwKSk7fXJldHVybiB0aGlzLnN0cmljdD1vbGRTdHJpY3QsdGhpcy5uZXh0KCksbm9kZS5ib2R5PXRoaXMuZmluaXNoTm9kZShjbGFzc0JvZHksXCJDbGFzc0JvZHlcIiksdGhpcy5maW5pc2hOb2RlKG5vZGUsaXNTdGF0ZW1lbnQ/XCJDbGFzc0RlY2xhcmF0aW9uXCI6XCJDbGFzc0V4cHJlc3Npb25cIil9O3BwJDEucGFyc2VDbGFzc0VsZW1lbnQ9ZnVuY3Rpb24oY29uc3RydWN0b3JBbGxvd3NTdXBlcil7dmFyIHRoaXMkMSQxPXRoaXM7aWYodGhpcy5lYXQodHlwZXMuc2VtaSkpcmV0dXJuIG51bGw7dmFyIG1ldGhvZD10aGlzLnN0YXJ0Tm9kZSgpLHRyeUNvbnRleHR1YWw9ZnVuY3Rpb24oayxub0xpbmVCcmVhayl7bm9MaW5lQnJlYWs9PT12b2lkIDAmJihub0xpbmVCcmVhaz0hMSk7dmFyIHN0YXJ0PXRoaXMkMSQxLnN0YXJ0LHN0YXJ0TG9jPXRoaXMkMSQxLnN0YXJ0TG9jO3JldHVybiB0aGlzJDEkMS5lYXRDb250ZXh0dWFsKGspP3RoaXMkMSQxLnR5cGUhPT10eXBlcy5wYXJlbkwmJighbm9MaW5lQnJlYWt8fCF0aGlzJDEkMS5jYW5JbnNlcnRTZW1pY29sb24oKSk/ITA6KG1ldGhvZC5rZXkmJnRoaXMkMSQxLnVuZXhwZWN0ZWQoKSxtZXRob2QuY29tcHV0ZWQ9ITEsbWV0aG9kLmtleT10aGlzJDEkMS5zdGFydE5vZGVBdChzdGFydCxzdGFydExvYyksbWV0aG9kLmtleS5uYW1lPWssdGhpcyQxJDEuZmluaXNoTm9kZShtZXRob2Qua2V5LFwiSWRlbnRpZmllclwiKSwhMSk6ITF9O21ldGhvZC5raW5kPVwibWV0aG9kXCIsbWV0aG9kLnN0YXRpYz10cnlDb250ZXh0dWFsKFwic3RhdGljXCIpO3ZhciBpc0dlbmVyYXRvcj10aGlzLmVhdCh0eXBlcy5zdGFyKSxpc0FzeW5jPSExO2lzR2VuZXJhdG9yfHwodGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj04JiZ0cnlDb250ZXh0dWFsKFwiYXN5bmNcIiwhMCk/KGlzQXN5bmM9ITAsaXNHZW5lcmF0b3I9dGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj05JiZ0aGlzLmVhdCh0eXBlcy5zdGFyKSk6dHJ5Q29udGV4dHVhbChcImdldFwiKT9tZXRob2Qua2luZD1cImdldFwiOnRyeUNvbnRleHR1YWwoXCJzZXRcIikmJihtZXRob2Qua2luZD1cInNldFwiKSksbWV0aG9kLmtleXx8dGhpcy5wYXJzZVByb3BlcnR5TmFtZShtZXRob2QpO3ZhciBrZXk9bWV0aG9kLmtleSxhbGxvd3NEaXJlY3RTdXBlcj0hMTtyZXR1cm4gIW1ldGhvZC5jb21wdXRlZCYmIW1ldGhvZC5zdGF0aWMmJihrZXkudHlwZT09PVwiSWRlbnRpZmllclwiJiZrZXkubmFtZT09PVwiY29uc3RydWN0b3JcInx8a2V5LnR5cGU9PT1cIkxpdGVyYWxcIiYma2V5LnZhbHVlPT09XCJjb25zdHJ1Y3RvclwiKT8obWV0aG9kLmtpbmQhPT1cIm1ldGhvZFwiJiZ0aGlzLnJhaXNlKGtleS5zdGFydCxcIkNvbnN0cnVjdG9yIGNhbid0IGhhdmUgZ2V0L3NldCBtb2RpZmllclwiKSxpc0dlbmVyYXRvciYmdGhpcy5yYWlzZShrZXkuc3RhcnQsXCJDb25zdHJ1Y3RvciBjYW4ndCBiZSBhIGdlbmVyYXRvclwiKSxpc0FzeW5jJiZ0aGlzLnJhaXNlKGtleS5zdGFydCxcIkNvbnN0cnVjdG9yIGNhbid0IGJlIGFuIGFzeW5jIG1ldGhvZFwiKSxtZXRob2Qua2luZD1cImNvbnN0cnVjdG9yXCIsYWxsb3dzRGlyZWN0U3VwZXI9Y29uc3RydWN0b3JBbGxvd3NTdXBlcik6bWV0aG9kLnN0YXRpYyYma2V5LnR5cGU9PT1cIklkZW50aWZpZXJcIiYma2V5Lm5hbWU9PT1cInByb3RvdHlwZVwiJiZ0aGlzLnJhaXNlKGtleS5zdGFydCxcIkNsYXNzZXMgbWF5IG5vdCBoYXZlIGEgc3RhdGljIHByb3BlcnR5IG5hbWVkIHByb3RvdHlwZVwiKSx0aGlzLnBhcnNlQ2xhc3NNZXRob2QobWV0aG9kLGlzR2VuZXJhdG9yLGlzQXN5bmMsYWxsb3dzRGlyZWN0U3VwZXIpLG1ldGhvZC5raW5kPT09XCJnZXRcIiYmbWV0aG9kLnZhbHVlLnBhcmFtcy5sZW5ndGghPT0wJiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUobWV0aG9kLnZhbHVlLnN0YXJ0LFwiZ2V0dGVyIHNob3VsZCBoYXZlIG5vIHBhcmFtc1wiKSxtZXRob2Qua2luZD09PVwic2V0XCImJm1ldGhvZC52YWx1ZS5wYXJhbXMubGVuZ3RoIT09MSYmdGhpcy5yYWlzZVJlY292ZXJhYmxlKG1ldGhvZC52YWx1ZS5zdGFydCxcInNldHRlciBzaG91bGQgaGF2ZSBleGFjdGx5IG9uZSBwYXJhbVwiKSxtZXRob2Qua2luZD09PVwic2V0XCImJm1ldGhvZC52YWx1ZS5wYXJhbXNbMF0udHlwZT09PVwiUmVzdEVsZW1lbnRcIiYmdGhpcy5yYWlzZVJlY292ZXJhYmxlKG1ldGhvZC52YWx1ZS5wYXJhbXNbMF0uc3RhcnQsXCJTZXR0ZXIgY2Fubm90IHVzZSByZXN0IHBhcmFtc1wiKSxtZXRob2R9O3BwJDEucGFyc2VDbGFzc01ldGhvZD1mdW5jdGlvbihtZXRob2QsaXNHZW5lcmF0b3IsaXNBc3luYyxhbGxvd3NEaXJlY3RTdXBlcil7cmV0dXJuIG1ldGhvZC52YWx1ZT10aGlzLnBhcnNlTWV0aG9kKGlzR2VuZXJhdG9yLGlzQXN5bmMsYWxsb3dzRGlyZWN0U3VwZXIpLHRoaXMuZmluaXNoTm9kZShtZXRob2QsXCJNZXRob2REZWZpbml0aW9uXCIpfTtwcCQxLnBhcnNlQ2xhc3NJZD1mdW5jdGlvbihub2RlLGlzU3RhdGVtZW50KXt0aGlzLnR5cGU9PT10eXBlcy5uYW1lPyhub2RlLmlkPXRoaXMucGFyc2VJZGVudCgpLGlzU3RhdGVtZW50JiZ0aGlzLmNoZWNrTFZhbChub2RlLmlkLEJJTkRfTEVYSUNBTCwhMSkpOihpc1N0YXRlbWVudD09PSEwJiZ0aGlzLnVuZXhwZWN0ZWQoKSxub2RlLmlkPW51bGwpO307cHAkMS5wYXJzZUNsYXNzU3VwZXI9ZnVuY3Rpb24obm9kZSl7bm9kZS5zdXBlckNsYXNzPXRoaXMuZWF0KHR5cGVzLl9leHRlbmRzKT90aGlzLnBhcnNlRXhwclN1YnNjcmlwdHMoKTpudWxsO307cHAkMS5wYXJzZUV4cG9ydD1mdW5jdGlvbihub2RlLGV4cG9ydHMpe2lmKHRoaXMubmV4dCgpLHRoaXMuZWF0KHR5cGVzLnN0YXIpKXJldHVybiB0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTExJiYodGhpcy5lYXRDb250ZXh0dWFsKFwiYXNcIik/KG5vZGUuZXhwb3J0ZWQ9dGhpcy5wYXJzZUlkZW50KCEwKSx0aGlzLmNoZWNrRXhwb3J0KGV4cG9ydHMsbm9kZS5leHBvcnRlZC5uYW1lLHRoaXMubGFzdFRva1N0YXJ0KSk6bm9kZS5leHBvcnRlZD1udWxsKSx0aGlzLmV4cGVjdENvbnRleHR1YWwoXCJmcm9tXCIpLHRoaXMudHlwZSE9PXR5cGVzLnN0cmluZyYmdGhpcy51bmV4cGVjdGVkKCksbm9kZS5zb3VyY2U9dGhpcy5wYXJzZUV4cHJBdG9tKCksdGhpcy5zZW1pY29sb24oKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkV4cG9ydEFsbERlY2xhcmF0aW9uXCIpO2lmKHRoaXMuZWF0KHR5cGVzLl9kZWZhdWx0KSl7dGhpcy5jaGVja0V4cG9ydChleHBvcnRzLFwiZGVmYXVsdFwiLHRoaXMubGFzdFRva1N0YXJ0KTt2YXIgaXNBc3luYztpZih0aGlzLnR5cGU9PT10eXBlcy5fZnVuY3Rpb258fChpc0FzeW5jPXRoaXMuaXNBc3luY0Z1bmN0aW9uKCkpKXt2YXIgZk5vZGU9dGhpcy5zdGFydE5vZGUoKTt0aGlzLm5leHQoKSxpc0FzeW5jJiZ0aGlzLm5leHQoKSxub2RlLmRlY2xhcmF0aW9uPXRoaXMucGFyc2VGdW5jdGlvbihmTm9kZSxGVU5DX1NUQVRFTUVOVHxGVU5DX05VTExBQkxFX0lELCExLGlzQXN5bmMpO31lbHNlIGlmKHRoaXMudHlwZT09PXR5cGVzLl9jbGFzcyl7dmFyIGNOb2RlPXRoaXMuc3RhcnROb2RlKCk7bm9kZS5kZWNsYXJhdGlvbj10aGlzLnBhcnNlQ2xhc3MoY05vZGUsXCJudWxsYWJsZUlEXCIpO31lbHNlIG5vZGUuZGVjbGFyYXRpb249dGhpcy5wYXJzZU1heWJlQXNzaWduKCksdGhpcy5zZW1pY29sb24oKTtyZXR1cm4gdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJFeHBvcnREZWZhdWx0RGVjbGFyYXRpb25cIil9aWYodGhpcy5zaG91bGRQYXJzZUV4cG9ydFN0YXRlbWVudCgpKW5vZGUuZGVjbGFyYXRpb249dGhpcy5wYXJzZVN0YXRlbWVudChudWxsKSxub2RlLmRlY2xhcmF0aW9uLnR5cGU9PT1cIlZhcmlhYmxlRGVjbGFyYXRpb25cIj90aGlzLmNoZWNrVmFyaWFibGVFeHBvcnQoZXhwb3J0cyxub2RlLmRlY2xhcmF0aW9uLmRlY2xhcmF0aW9ucyk6dGhpcy5jaGVja0V4cG9ydChleHBvcnRzLG5vZGUuZGVjbGFyYXRpb24uaWQubmFtZSxub2RlLmRlY2xhcmF0aW9uLmlkLnN0YXJ0KSxub2RlLnNwZWNpZmllcnM9W10sbm9kZS5zb3VyY2U9bnVsbDtlbHNlIHtpZihub2RlLmRlY2xhcmF0aW9uPW51bGwsbm9kZS5zcGVjaWZpZXJzPXRoaXMucGFyc2VFeHBvcnRTcGVjaWZpZXJzKGV4cG9ydHMpLHRoaXMuZWF0Q29udGV4dHVhbChcImZyb21cIikpdGhpcy50eXBlIT09dHlwZXMuc3RyaW5nJiZ0aGlzLnVuZXhwZWN0ZWQoKSxub2RlLnNvdXJjZT10aGlzLnBhcnNlRXhwckF0b20oKTtlbHNlIHtmb3IodmFyIGk9MCxsaXN0PW5vZGUuc3BlY2lmaWVycztpPGxpc3QubGVuZ3RoO2krPTEpe3ZhciBzcGVjPWxpc3RbaV07dGhpcy5jaGVja1VucmVzZXJ2ZWQoc3BlYy5sb2NhbCksdGhpcy5jaGVja0xvY2FsRXhwb3J0KHNwZWMubG9jYWwpO31ub2RlLnNvdXJjZT1udWxsO310aGlzLnNlbWljb2xvbigpO31yZXR1cm4gdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJFeHBvcnROYW1lZERlY2xhcmF0aW9uXCIpfTtwcCQxLmNoZWNrRXhwb3J0PWZ1bmN0aW9uKGV4cG9ydHMsbmFtZSxwb3Mpe2V4cG9ydHMmJihoYXMoZXhwb3J0cyxuYW1lKSYmdGhpcy5yYWlzZVJlY292ZXJhYmxlKHBvcyxcIkR1cGxpY2F0ZSBleHBvcnQgJ1wiK25hbWUrXCInXCIpLGV4cG9ydHNbbmFtZV09ITApO307cHAkMS5jaGVja1BhdHRlcm5FeHBvcnQ9ZnVuY3Rpb24oZXhwb3J0cyxwYXQpe3ZhciB0eXBlPXBhdC50eXBlO2lmKHR5cGU9PT1cIklkZW50aWZpZXJcIil0aGlzLmNoZWNrRXhwb3J0KGV4cG9ydHMscGF0Lm5hbWUscGF0LnN0YXJ0KTtlbHNlIGlmKHR5cGU9PT1cIk9iamVjdFBhdHRlcm5cIilmb3IodmFyIGk9MCxsaXN0PXBhdC5wcm9wZXJ0aWVzO2k8bGlzdC5sZW5ndGg7aSs9MSl7dmFyIHByb3A9bGlzdFtpXTt0aGlzLmNoZWNrUGF0dGVybkV4cG9ydChleHBvcnRzLHByb3ApO31lbHNlIGlmKHR5cGU9PT1cIkFycmF5UGF0dGVyblwiKWZvcih2YXIgaSQxPTAsbGlzdCQxPXBhdC5lbGVtZW50cztpJDE8bGlzdCQxLmxlbmd0aDtpJDErPTEpe3ZhciBlbHQ9bGlzdCQxW2kkMV07ZWx0JiZ0aGlzLmNoZWNrUGF0dGVybkV4cG9ydChleHBvcnRzLGVsdCk7fWVsc2UgdHlwZT09PVwiUHJvcGVydHlcIj90aGlzLmNoZWNrUGF0dGVybkV4cG9ydChleHBvcnRzLHBhdC52YWx1ZSk6dHlwZT09PVwiQXNzaWdubWVudFBhdHRlcm5cIj90aGlzLmNoZWNrUGF0dGVybkV4cG9ydChleHBvcnRzLHBhdC5sZWZ0KTp0eXBlPT09XCJSZXN0RWxlbWVudFwiP3RoaXMuY2hlY2tQYXR0ZXJuRXhwb3J0KGV4cG9ydHMscGF0LmFyZ3VtZW50KTp0eXBlPT09XCJQYXJlbnRoZXNpemVkRXhwcmVzc2lvblwiJiZ0aGlzLmNoZWNrUGF0dGVybkV4cG9ydChleHBvcnRzLHBhdC5leHByZXNzaW9uKTt9O3BwJDEuY2hlY2tWYXJpYWJsZUV4cG9ydD1mdW5jdGlvbihleHBvcnRzLGRlY2xzKXtpZihleHBvcnRzKWZvcih2YXIgaT0wLGxpc3Q9ZGVjbHM7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgZGVjbD1saXN0W2ldO3RoaXMuY2hlY2tQYXR0ZXJuRXhwb3J0KGV4cG9ydHMsZGVjbC5pZCk7fX07cHAkMS5zaG91bGRQYXJzZUV4cG9ydFN0YXRlbWVudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnR5cGUua2V5d29yZD09PVwidmFyXCJ8fHRoaXMudHlwZS5rZXl3b3JkPT09XCJjb25zdFwifHx0aGlzLnR5cGUua2V5d29yZD09PVwiY2xhc3NcInx8dGhpcy50eXBlLmtleXdvcmQ9PT1cImZ1bmN0aW9uXCJ8fHRoaXMuaXNMZXQoKXx8dGhpcy5pc0FzeW5jRnVuY3Rpb24oKX07cHAkMS5wYXJzZUV4cG9ydFNwZWNpZmllcnM9ZnVuY3Rpb24oZXhwb3J0cyl7dmFyIG5vZGVzPVtdLGZpcnN0PSEwO2Zvcih0aGlzLmV4cGVjdCh0eXBlcy5icmFjZUwpOyF0aGlzLmVhdCh0eXBlcy5icmFjZVIpOyl7aWYoZmlyc3QpZmlyc3Q9ITE7ZWxzZSBpZih0aGlzLmV4cGVjdCh0eXBlcy5jb21tYSksdGhpcy5hZnRlclRyYWlsaW5nQ29tbWEodHlwZXMuYnJhY2VSKSlicmVhazt2YXIgbm9kZT10aGlzLnN0YXJ0Tm9kZSgpO25vZGUubG9jYWw9dGhpcy5wYXJzZUlkZW50KCEwKSxub2RlLmV4cG9ydGVkPXRoaXMuZWF0Q29udGV4dHVhbChcImFzXCIpP3RoaXMucGFyc2VJZGVudCghMCk6bm9kZS5sb2NhbCx0aGlzLmNoZWNrRXhwb3J0KGV4cG9ydHMsbm9kZS5leHBvcnRlZC5uYW1lLG5vZGUuZXhwb3J0ZWQuc3RhcnQpLG5vZGVzLnB1c2godGhpcy5maW5pc2hOb2RlKG5vZGUsXCJFeHBvcnRTcGVjaWZpZXJcIikpO31yZXR1cm4gbm9kZXN9O3BwJDEucGFyc2VJbXBvcnQ9ZnVuY3Rpb24obm9kZSl7cmV0dXJuIHRoaXMubmV4dCgpLHRoaXMudHlwZT09PXR5cGVzLnN0cmluZz8obm9kZS5zcGVjaWZpZXJzPWVtcHR5LG5vZGUuc291cmNlPXRoaXMucGFyc2VFeHByQXRvbSgpKToobm9kZS5zcGVjaWZpZXJzPXRoaXMucGFyc2VJbXBvcnRTcGVjaWZpZXJzKCksdGhpcy5leHBlY3RDb250ZXh0dWFsKFwiZnJvbVwiKSxub2RlLnNvdXJjZT10aGlzLnR5cGU9PT10eXBlcy5zdHJpbmc/dGhpcy5wYXJzZUV4cHJBdG9tKCk6dGhpcy51bmV4cGVjdGVkKCkpLHRoaXMuc2VtaWNvbG9uKCksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJJbXBvcnREZWNsYXJhdGlvblwiKX07cHAkMS5wYXJzZUltcG9ydFNwZWNpZmllcnM9ZnVuY3Rpb24oKXt2YXIgbm9kZXM9W10sZmlyc3Q9ITA7aWYodGhpcy50eXBlPT09dHlwZXMubmFtZSl7dmFyIG5vZGU9dGhpcy5zdGFydE5vZGUoKTtpZihub2RlLmxvY2FsPXRoaXMucGFyc2VJZGVudCgpLHRoaXMuY2hlY2tMVmFsKG5vZGUubG9jYWwsQklORF9MRVhJQ0FMKSxub2Rlcy5wdXNoKHRoaXMuZmluaXNoTm9kZShub2RlLFwiSW1wb3J0RGVmYXVsdFNwZWNpZmllclwiKSksIXRoaXMuZWF0KHR5cGVzLmNvbW1hKSlyZXR1cm4gbm9kZXN9aWYodGhpcy50eXBlPT09dHlwZXMuc3Rhcil7dmFyIG5vZGUkMT10aGlzLnN0YXJ0Tm9kZSgpO3JldHVybiB0aGlzLm5leHQoKSx0aGlzLmV4cGVjdENvbnRleHR1YWwoXCJhc1wiKSxub2RlJDEubG9jYWw9dGhpcy5wYXJzZUlkZW50KCksdGhpcy5jaGVja0xWYWwobm9kZSQxLmxvY2FsLEJJTkRfTEVYSUNBTCksbm9kZXMucHVzaCh0aGlzLmZpbmlzaE5vZGUobm9kZSQxLFwiSW1wb3J0TmFtZXNwYWNlU3BlY2lmaWVyXCIpKSxub2Rlc31mb3IodGhpcy5leHBlY3QodHlwZXMuYnJhY2VMKTshdGhpcy5lYXQodHlwZXMuYnJhY2VSKTspe2lmKGZpcnN0KWZpcnN0PSExO2Vsc2UgaWYodGhpcy5leHBlY3QodHlwZXMuY29tbWEpLHRoaXMuYWZ0ZXJUcmFpbGluZ0NvbW1hKHR5cGVzLmJyYWNlUikpYnJlYWs7dmFyIG5vZGUkMj10aGlzLnN0YXJ0Tm9kZSgpO25vZGUkMi5pbXBvcnRlZD10aGlzLnBhcnNlSWRlbnQoITApLHRoaXMuZWF0Q29udGV4dHVhbChcImFzXCIpP25vZGUkMi5sb2NhbD10aGlzLnBhcnNlSWRlbnQoKToodGhpcy5jaGVja1VucmVzZXJ2ZWQobm9kZSQyLmltcG9ydGVkKSxub2RlJDIubG9jYWw9bm9kZSQyLmltcG9ydGVkKSx0aGlzLmNoZWNrTFZhbChub2RlJDIubG9jYWwsQklORF9MRVhJQ0FMKSxub2Rlcy5wdXNoKHRoaXMuZmluaXNoTm9kZShub2RlJDIsXCJJbXBvcnRTcGVjaWZpZXJcIikpO31yZXR1cm4gbm9kZXN9O3BwJDEuYWRhcHREaXJlY3RpdmVQcm9sb2d1ZT1mdW5jdGlvbihzdGF0ZW1lbnRzKXtmb3IodmFyIGk9MDtpPHN0YXRlbWVudHMubGVuZ3RoJiZ0aGlzLmlzRGlyZWN0aXZlQ2FuZGlkYXRlKHN0YXRlbWVudHNbaV0pOysraSlzdGF0ZW1lbnRzW2ldLmRpcmVjdGl2ZT1zdGF0ZW1lbnRzW2ldLmV4cHJlc3Npb24ucmF3LnNsaWNlKDEsLTEpO307cHAkMS5pc0RpcmVjdGl2ZUNhbmRpZGF0ZT1mdW5jdGlvbihzdGF0ZW1lbnQpe3JldHVybiBzdGF0ZW1lbnQudHlwZT09PVwiRXhwcmVzc2lvblN0YXRlbWVudFwiJiZzdGF0ZW1lbnQuZXhwcmVzc2lvbi50eXBlPT09XCJMaXRlcmFsXCImJnR5cGVvZiBzdGF0ZW1lbnQuZXhwcmVzc2lvbi52YWx1ZT09XCJzdHJpbmdcIiYmKHRoaXMuaW5wdXRbc3RhdGVtZW50LnN0YXJ0XT09PSdcIid8fHRoaXMuaW5wdXRbc3RhdGVtZW50LnN0YXJ0XT09PVwiJ1wiKX07cHAkMj1QYXJzZXIucHJvdG90eXBlO3BwJDIudG9Bc3NpZ25hYmxlPWZ1bmN0aW9uKG5vZGUsaXNCaW5kaW5nLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpe2lmKHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49NiYmbm9kZSlzd2l0Y2gobm9kZS50eXBlKXtjYXNlXCJJZGVudGlmaWVyXCI6dGhpcy5pbkFzeW5jJiZub2RlLm5hbWU9PT1cImF3YWl0XCImJnRoaXMucmFpc2Uobm9kZS5zdGFydCxcIkNhbm5vdCB1c2UgJ2F3YWl0JyBhcyBpZGVudGlmaWVyIGluc2lkZSBhbiBhc3luYyBmdW5jdGlvblwiKTticmVhaztjYXNlXCJPYmplY3RQYXR0ZXJuXCI6Y2FzZVwiQXJyYXlQYXR0ZXJuXCI6Y2FzZVwiUmVzdEVsZW1lbnRcIjpicmVhaztjYXNlXCJPYmplY3RFeHByZXNzaW9uXCI6bm9kZS50eXBlPVwiT2JqZWN0UGF0dGVyblwiLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMmJnRoaXMuY2hlY2tQYXR0ZXJuRXJyb3JzKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMsITApO2Zvcih2YXIgaT0wLGxpc3Q9bm9kZS5wcm9wZXJ0aWVzO2k8bGlzdC5sZW5ndGg7aSs9MSl7dmFyIHByb3A9bGlzdFtpXTt0aGlzLnRvQXNzaWduYWJsZShwcm9wLGlzQmluZGluZykscHJvcC50eXBlPT09XCJSZXN0RWxlbWVudFwiJiYocHJvcC5hcmd1bWVudC50eXBlPT09XCJBcnJheVBhdHRlcm5cInx8cHJvcC5hcmd1bWVudC50eXBlPT09XCJPYmplY3RQYXR0ZXJuXCIpJiZ0aGlzLnJhaXNlKHByb3AuYXJndW1lbnQuc3RhcnQsXCJVbmV4cGVjdGVkIHRva2VuXCIpO31icmVhaztjYXNlXCJQcm9wZXJ0eVwiOm5vZGUua2luZCE9PVwiaW5pdFwiJiZ0aGlzLnJhaXNlKG5vZGUua2V5LnN0YXJ0LFwiT2JqZWN0IHBhdHRlcm4gY2FuJ3QgY29udGFpbiBnZXR0ZXIgb3Igc2V0dGVyXCIpLHRoaXMudG9Bc3NpZ25hYmxlKG5vZGUudmFsdWUsaXNCaW5kaW5nKTticmVhaztjYXNlXCJBcnJheUV4cHJlc3Npb25cIjpub2RlLnR5cGU9XCJBcnJheVBhdHRlcm5cIixyZWZEZXN0cnVjdHVyaW5nRXJyb3JzJiZ0aGlzLmNoZWNrUGF0dGVybkVycm9ycyhyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLCEwKSx0aGlzLnRvQXNzaWduYWJsZUxpc3Qobm9kZS5lbGVtZW50cyxpc0JpbmRpbmcpO2JyZWFrO2Nhc2VcIlNwcmVhZEVsZW1lbnRcIjpub2RlLnR5cGU9XCJSZXN0RWxlbWVudFwiLHRoaXMudG9Bc3NpZ25hYmxlKG5vZGUuYXJndW1lbnQsaXNCaW5kaW5nKSxub2RlLmFyZ3VtZW50LnR5cGU9PT1cIkFzc2lnbm1lbnRQYXR0ZXJuXCImJnRoaXMucmFpc2Uobm9kZS5hcmd1bWVudC5zdGFydCxcIlJlc3QgZWxlbWVudHMgY2Fubm90IGhhdmUgYSBkZWZhdWx0IHZhbHVlXCIpO2JyZWFrO2Nhc2VcIkFzc2lnbm1lbnRFeHByZXNzaW9uXCI6bm9kZS5vcGVyYXRvciE9PVwiPVwiJiZ0aGlzLnJhaXNlKG5vZGUubGVmdC5lbmQsXCJPbmx5ICc9JyBvcGVyYXRvciBjYW4gYmUgdXNlZCBmb3Igc3BlY2lmeWluZyBkZWZhdWx0IHZhbHVlLlwiKSxub2RlLnR5cGU9XCJBc3NpZ25tZW50UGF0dGVyblwiLGRlbGV0ZSBub2RlLm9wZXJhdG9yLHRoaXMudG9Bc3NpZ25hYmxlKG5vZGUubGVmdCxpc0JpbmRpbmcpO2Nhc2VcIkFzc2lnbm1lbnRQYXR0ZXJuXCI6YnJlYWs7Y2FzZVwiUGFyZW50aGVzaXplZEV4cHJlc3Npb25cIjp0aGlzLnRvQXNzaWduYWJsZShub2RlLmV4cHJlc3Npb24saXNCaW5kaW5nLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpO2JyZWFrO2Nhc2VcIkNoYWluRXhwcmVzc2lvblwiOnRoaXMucmFpc2VSZWNvdmVyYWJsZShub2RlLnN0YXJ0LFwiT3B0aW9uYWwgY2hhaW5pbmcgY2Fubm90IGFwcGVhciBpbiBsZWZ0LWhhbmQgc2lkZVwiKTticmVhaztjYXNlXCJNZW1iZXJFeHByZXNzaW9uXCI6aWYoIWlzQmluZGluZylicmVhaztkZWZhdWx0OnRoaXMucmFpc2Uobm9kZS5zdGFydCxcIkFzc2lnbmluZyB0byBydmFsdWVcIik7fWVsc2UgcmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyYmdGhpcy5jaGVja1BhdHRlcm5FcnJvcnMocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycywhMCk7cmV0dXJuIG5vZGV9O3BwJDIudG9Bc3NpZ25hYmxlTGlzdD1mdW5jdGlvbihleHByTGlzdCxpc0JpbmRpbmcpe2Zvcih2YXIgZW5kPWV4cHJMaXN0Lmxlbmd0aCxpPTA7aTxlbmQ7aSsrKXt2YXIgZWx0PWV4cHJMaXN0W2ldO2VsdCYmdGhpcy50b0Fzc2lnbmFibGUoZWx0LGlzQmluZGluZyk7fWlmKGVuZCl7dmFyIGxhc3Q9ZXhwckxpc3RbZW5kLTFdO3RoaXMub3B0aW9ucy5lY21hVmVyc2lvbj09PTYmJmlzQmluZGluZyYmbGFzdCYmbGFzdC50eXBlPT09XCJSZXN0RWxlbWVudFwiJiZsYXN0LmFyZ3VtZW50LnR5cGUhPT1cIklkZW50aWZpZXJcIiYmdGhpcy51bmV4cGVjdGVkKGxhc3QuYXJndW1lbnQuc3RhcnQpO31yZXR1cm4gZXhwckxpc3R9O3BwJDIucGFyc2VTcHJlYWQ9ZnVuY3Rpb24ocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyl7dmFyIG5vZGU9dGhpcy5zdGFydE5vZGUoKTtyZXR1cm4gdGhpcy5uZXh0KCksbm9kZS5hcmd1bWVudD10aGlzLnBhcnNlTWF5YmVBc3NpZ24oITEscmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJTcHJlYWRFbGVtZW50XCIpfTtwcCQyLnBhcnNlUmVzdEJpbmRpbmc9ZnVuY3Rpb24oKXt2YXIgbm9kZT10aGlzLnN0YXJ0Tm9kZSgpO3JldHVybiB0aGlzLm5leHQoKSx0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb249PT02JiZ0aGlzLnR5cGUhPT10eXBlcy5uYW1lJiZ0aGlzLnVuZXhwZWN0ZWQoKSxub2RlLmFyZ3VtZW50PXRoaXMucGFyc2VCaW5kaW5nQXRvbSgpLHRoaXMuZmluaXNoTm9kZShub2RlLFwiUmVzdEVsZW1lbnRcIil9O3BwJDIucGFyc2VCaW5kaW5nQXRvbT1mdW5jdGlvbigpe2lmKHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49Nilzd2l0Y2godGhpcy50eXBlKXtjYXNlIHR5cGVzLmJyYWNrZXRMOnZhciBub2RlPXRoaXMuc3RhcnROb2RlKCk7cmV0dXJuIHRoaXMubmV4dCgpLG5vZGUuZWxlbWVudHM9dGhpcy5wYXJzZUJpbmRpbmdMaXN0KHR5cGVzLmJyYWNrZXRSLCEwLCEwKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkFycmF5UGF0dGVyblwiKTtjYXNlIHR5cGVzLmJyYWNlTDpyZXR1cm4gdGhpcy5wYXJzZU9iaighMCl9cmV0dXJuIHRoaXMucGFyc2VJZGVudCgpfTtwcCQyLnBhcnNlQmluZGluZ0xpc3Q9ZnVuY3Rpb24oY2xvc2UsYWxsb3dFbXB0eSxhbGxvd1RyYWlsaW5nQ29tbWEpe2Zvcih2YXIgZWx0cz1bXSxmaXJzdD0hMDshdGhpcy5lYXQoY2xvc2UpOylpZihmaXJzdD9maXJzdD0hMTp0aGlzLmV4cGVjdCh0eXBlcy5jb21tYSksYWxsb3dFbXB0eSYmdGhpcy50eXBlPT09dHlwZXMuY29tbWEpZWx0cy5wdXNoKG51bGwpO2Vsc2Uge2lmKGFsbG93VHJhaWxpbmdDb21tYSYmdGhpcy5hZnRlclRyYWlsaW5nQ29tbWEoY2xvc2UpKWJyZWFrO2lmKHRoaXMudHlwZT09PXR5cGVzLmVsbGlwc2lzKXt2YXIgcmVzdD10aGlzLnBhcnNlUmVzdEJpbmRpbmcoKTt0aGlzLnBhcnNlQmluZGluZ0xpc3RJdGVtKHJlc3QpLGVsdHMucHVzaChyZXN0KSx0aGlzLnR5cGU9PT10eXBlcy5jb21tYSYmdGhpcy5yYWlzZSh0aGlzLnN0YXJ0LFwiQ29tbWEgaXMgbm90IHBlcm1pdHRlZCBhZnRlciB0aGUgcmVzdCBlbGVtZW50XCIpLHRoaXMuZXhwZWN0KGNsb3NlKTticmVha31lbHNlIHt2YXIgZWxlbT10aGlzLnBhcnNlTWF5YmVEZWZhdWx0KHRoaXMuc3RhcnQsdGhpcy5zdGFydExvYyk7dGhpcy5wYXJzZUJpbmRpbmdMaXN0SXRlbShlbGVtKSxlbHRzLnB1c2goZWxlbSk7fX1yZXR1cm4gZWx0c307cHAkMi5wYXJzZUJpbmRpbmdMaXN0SXRlbT1mdW5jdGlvbihwYXJhbSl7cmV0dXJuIHBhcmFtfTtwcCQyLnBhcnNlTWF5YmVEZWZhdWx0PWZ1bmN0aW9uKHN0YXJ0UG9zLHN0YXJ0TG9jLGxlZnQpe2lmKGxlZnQ9bGVmdHx8dGhpcy5wYXJzZUJpbmRpbmdBdG9tKCksdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPDZ8fCF0aGlzLmVhdCh0eXBlcy5lcSkpcmV0dXJuIGxlZnQ7dmFyIG5vZGU9dGhpcy5zdGFydE5vZGVBdChzdGFydFBvcyxzdGFydExvYyk7cmV0dXJuIG5vZGUubGVmdD1sZWZ0LG5vZGUucmlnaHQ9dGhpcy5wYXJzZU1heWJlQXNzaWduKCksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJBc3NpZ25tZW50UGF0dGVyblwiKX07cHAkMi5jaGVja0xWYWw9ZnVuY3Rpb24oZXhwcixiaW5kaW5nVHlwZSxjaGVja0NsYXNoZXMpe3N3aXRjaChiaW5kaW5nVHlwZT09PXZvaWQgMCYmKGJpbmRpbmdUeXBlPUJJTkRfTk9ORSksZXhwci50eXBlKXtjYXNlXCJJZGVudGlmaWVyXCI6YmluZGluZ1R5cGU9PT1CSU5EX0xFWElDQUwmJmV4cHIubmFtZT09PVwibGV0XCImJnRoaXMucmFpc2VSZWNvdmVyYWJsZShleHByLnN0YXJ0LFwibGV0IGlzIGRpc2FsbG93ZWQgYXMgYSBsZXhpY2FsbHkgYm91bmQgbmFtZVwiKSx0aGlzLnN0cmljdCYmdGhpcy5yZXNlcnZlZFdvcmRzU3RyaWN0QmluZC50ZXN0KGV4cHIubmFtZSkmJnRoaXMucmFpc2VSZWNvdmVyYWJsZShleHByLnN0YXJ0LChiaW5kaW5nVHlwZT9cIkJpbmRpbmcgXCI6XCJBc3NpZ25pbmcgdG8gXCIpK2V4cHIubmFtZStcIiBpbiBzdHJpY3QgbW9kZVwiKSxjaGVja0NsYXNoZXMmJihoYXMoY2hlY2tDbGFzaGVzLGV4cHIubmFtZSkmJnRoaXMucmFpc2VSZWNvdmVyYWJsZShleHByLnN0YXJ0LFwiQXJndW1lbnQgbmFtZSBjbGFzaFwiKSxjaGVja0NsYXNoZXNbZXhwci5uYW1lXT0hMCksYmluZGluZ1R5cGUhPT1CSU5EX05PTkUmJmJpbmRpbmdUeXBlIT09QklORF9PVVRTSURFJiZ0aGlzLmRlY2xhcmVOYW1lKGV4cHIubmFtZSxiaW5kaW5nVHlwZSxleHByLnN0YXJ0KTticmVhaztjYXNlXCJDaGFpbkV4cHJlc3Npb25cIjp0aGlzLnJhaXNlUmVjb3ZlcmFibGUoZXhwci5zdGFydCxcIk9wdGlvbmFsIGNoYWluaW5nIGNhbm5vdCBhcHBlYXIgaW4gbGVmdC1oYW5kIHNpZGVcIik7YnJlYWs7Y2FzZVwiTWVtYmVyRXhwcmVzc2lvblwiOmJpbmRpbmdUeXBlJiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUoZXhwci5zdGFydCxcIkJpbmRpbmcgbWVtYmVyIGV4cHJlc3Npb25cIik7YnJlYWs7Y2FzZVwiT2JqZWN0UGF0dGVyblwiOmZvcih2YXIgaT0wLGxpc3Q9ZXhwci5wcm9wZXJ0aWVzO2k8bGlzdC5sZW5ndGg7aSs9MSl7dmFyIHByb3A9bGlzdFtpXTt0aGlzLmNoZWNrTFZhbChwcm9wLGJpbmRpbmdUeXBlLGNoZWNrQ2xhc2hlcyk7fWJyZWFrO2Nhc2VcIlByb3BlcnR5XCI6dGhpcy5jaGVja0xWYWwoZXhwci52YWx1ZSxiaW5kaW5nVHlwZSxjaGVja0NsYXNoZXMpO2JyZWFrO2Nhc2VcIkFycmF5UGF0dGVyblwiOmZvcih2YXIgaSQxPTAsbGlzdCQxPWV4cHIuZWxlbWVudHM7aSQxPGxpc3QkMS5sZW5ndGg7aSQxKz0xKXt2YXIgZWxlbT1saXN0JDFbaSQxXTtlbGVtJiZ0aGlzLmNoZWNrTFZhbChlbGVtLGJpbmRpbmdUeXBlLGNoZWNrQ2xhc2hlcyk7fWJyZWFrO2Nhc2VcIkFzc2lnbm1lbnRQYXR0ZXJuXCI6dGhpcy5jaGVja0xWYWwoZXhwci5sZWZ0LGJpbmRpbmdUeXBlLGNoZWNrQ2xhc2hlcyk7YnJlYWs7Y2FzZVwiUmVzdEVsZW1lbnRcIjp0aGlzLmNoZWNrTFZhbChleHByLmFyZ3VtZW50LGJpbmRpbmdUeXBlLGNoZWNrQ2xhc2hlcyk7YnJlYWs7Y2FzZVwiUGFyZW50aGVzaXplZEV4cHJlc3Npb25cIjp0aGlzLmNoZWNrTFZhbChleHByLmV4cHJlc3Npb24sYmluZGluZ1R5cGUsY2hlY2tDbGFzaGVzKTticmVhaztkZWZhdWx0OnRoaXMucmFpc2UoZXhwci5zdGFydCwoYmluZGluZ1R5cGU/XCJCaW5kaW5nXCI6XCJBc3NpZ25pbmcgdG9cIikrXCIgcnZhbHVlXCIpO319O3BwJDM9UGFyc2VyLnByb3RvdHlwZTtwcCQzLmNoZWNrUHJvcENsYXNoPWZ1bmN0aW9uKHByb3AscHJvcEhhc2gscmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyl7aWYoISh0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTkmJnByb3AudHlwZT09PVwiU3ByZWFkRWxlbWVudFwiKSYmISh0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTYmJihwcm9wLmNvbXB1dGVkfHxwcm9wLm1ldGhvZHx8cHJvcC5zaG9ydGhhbmQpKSl7dmFyIGtleT1wcm9wLmtleSxuYW1lO3N3aXRjaChrZXkudHlwZSl7Y2FzZVwiSWRlbnRpZmllclwiOm5hbWU9a2V5Lm5hbWU7YnJlYWs7Y2FzZVwiTGl0ZXJhbFwiOm5hbWU9U3RyaW5nKGtleS52YWx1ZSk7YnJlYWs7ZGVmYXVsdDpyZXR1cm59dmFyIGtpbmQ9cHJvcC5raW5kO2lmKHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49Nil7bmFtZT09PVwiX19wcm90b19fXCImJmtpbmQ9PT1cImluaXRcIiYmKHByb3BIYXNoLnByb3RvJiYocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycz9yZWZEZXN0cnVjdHVyaW5nRXJyb3JzLmRvdWJsZVByb3RvPDAmJihyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLmRvdWJsZVByb3RvPWtleS5zdGFydCk6dGhpcy5yYWlzZVJlY292ZXJhYmxlKGtleS5zdGFydCxcIlJlZGVmaW5pdGlvbiBvZiBfX3Byb3RvX18gcHJvcGVydHlcIikpLHByb3BIYXNoLnByb3RvPSEwKTtyZXR1cm59bmFtZT1cIiRcIituYW1lO3ZhciBvdGhlcj1wcm9wSGFzaFtuYW1lXTtpZihvdGhlcil7dmFyIHJlZGVmaW5pdGlvbjtraW5kPT09XCJpbml0XCI/cmVkZWZpbml0aW9uPXRoaXMuc3RyaWN0JiZvdGhlci5pbml0fHxvdGhlci5nZXR8fG90aGVyLnNldDpyZWRlZmluaXRpb249b3RoZXIuaW5pdHx8b3RoZXJba2luZF0scmVkZWZpbml0aW9uJiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUoa2V5LnN0YXJ0LFwiUmVkZWZpbml0aW9uIG9mIHByb3BlcnR5XCIpO31lbHNlIG90aGVyPXByb3BIYXNoW25hbWVdPXtpbml0OiExLGdldDohMSxzZXQ6ITF9O290aGVyW2tpbmRdPSEwO319O3BwJDMucGFyc2VFeHByZXNzaW9uPWZ1bmN0aW9uKG5vSW4scmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyl7dmFyIHN0YXJ0UG9zPXRoaXMuc3RhcnQsc3RhcnRMb2M9dGhpcy5zdGFydExvYyxleHByPXRoaXMucGFyc2VNYXliZUFzc2lnbihub0luLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpO2lmKHRoaXMudHlwZT09PXR5cGVzLmNvbW1hKXt2YXIgbm9kZT10aGlzLnN0YXJ0Tm9kZUF0KHN0YXJ0UG9zLHN0YXJ0TG9jKTtmb3Iobm9kZS5leHByZXNzaW9ucz1bZXhwcl07dGhpcy5lYXQodHlwZXMuY29tbWEpOylub2RlLmV4cHJlc3Npb25zLnB1c2godGhpcy5wYXJzZU1heWJlQXNzaWduKG5vSW4scmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycykpO3JldHVybiB0aGlzLmZpbmlzaE5vZGUobm9kZSxcIlNlcXVlbmNlRXhwcmVzc2lvblwiKX1yZXR1cm4gZXhwcn07cHAkMy5wYXJzZU1heWJlQXNzaWduPWZ1bmN0aW9uKG5vSW4scmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyxhZnRlckxlZnRQYXJzZSl7aWYodGhpcy5pc0NvbnRleHR1YWwoXCJ5aWVsZFwiKSl7aWYodGhpcy5pbkdlbmVyYXRvcilyZXR1cm4gdGhpcy5wYXJzZVlpZWxkKG5vSW4pO3RoaXMuZXhwckFsbG93ZWQ9ITE7fXZhciBvd25EZXN0cnVjdHVyaW5nRXJyb3JzPSExLG9sZFBhcmVuQXNzaWduPS0xLG9sZFRyYWlsaW5nQ29tbWE9LTE7cmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycz8ob2xkUGFyZW5Bc3NpZ249cmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycy5wYXJlbnRoZXNpemVkQXNzaWduLG9sZFRyYWlsaW5nQ29tbWE9cmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycy50cmFpbGluZ0NvbW1hLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMucGFyZW50aGVzaXplZEFzc2lnbj1yZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnRyYWlsaW5nQ29tbWE9LTEpOihyZWZEZXN0cnVjdHVyaW5nRXJyb3JzPW5ldyBEZXN0cnVjdHVyaW5nRXJyb3JzLG93bkRlc3RydWN0dXJpbmdFcnJvcnM9ITApO3ZhciBzdGFydFBvcz10aGlzLnN0YXJ0LHN0YXJ0TG9jPXRoaXMuc3RhcnRMb2M7KHRoaXMudHlwZT09PXR5cGVzLnBhcmVuTHx8dGhpcy50eXBlPT09dHlwZXMubmFtZSkmJih0aGlzLnBvdGVudGlhbEFycm93QXQ9dGhpcy5zdGFydCk7dmFyIGxlZnQ9dGhpcy5wYXJzZU1heWJlQ29uZGl0aW9uYWwobm9JbixyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKTtpZihhZnRlckxlZnRQYXJzZSYmKGxlZnQ9YWZ0ZXJMZWZ0UGFyc2UuY2FsbCh0aGlzLGxlZnQsc3RhcnRQb3Msc3RhcnRMb2MpKSx0aGlzLnR5cGUuaXNBc3NpZ24pe3ZhciBub2RlPXRoaXMuc3RhcnROb2RlQXQoc3RhcnRQb3Msc3RhcnRMb2MpO3JldHVybiBub2RlLm9wZXJhdG9yPXRoaXMudmFsdWUsbm9kZS5sZWZ0PXRoaXMudHlwZT09PXR5cGVzLmVxP3RoaXMudG9Bc3NpZ25hYmxlKGxlZnQsITEscmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyk6bGVmdCxvd25EZXN0cnVjdHVyaW5nRXJyb3JzfHwocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycy5wYXJlbnRoZXNpemVkQXNzaWduPXJlZkRlc3RydWN0dXJpbmdFcnJvcnMudHJhaWxpbmdDb21tYT1yZWZEZXN0cnVjdHVyaW5nRXJyb3JzLmRvdWJsZVByb3RvPS0xKSxyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnNob3J0aGFuZEFzc2lnbj49bm9kZS5sZWZ0LnN0YXJ0JiYocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycy5zaG9ydGhhbmRBc3NpZ249LTEpLHRoaXMuY2hlY2tMVmFsKGxlZnQpLHRoaXMubmV4dCgpLG5vZGUucmlnaHQ9dGhpcy5wYXJzZU1heWJlQXNzaWduKG5vSW4pLHRoaXMuZmluaXNoTm9kZShub2RlLFwiQXNzaWdubWVudEV4cHJlc3Npb25cIil9ZWxzZSBvd25EZXN0cnVjdHVyaW5nRXJyb3JzJiZ0aGlzLmNoZWNrRXhwcmVzc2lvbkVycm9ycyhyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLCEwKTtyZXR1cm4gb2xkUGFyZW5Bc3NpZ24+LTEmJihyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnBhcmVudGhlc2l6ZWRBc3NpZ249b2xkUGFyZW5Bc3NpZ24pLG9sZFRyYWlsaW5nQ29tbWE+LTEmJihyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnRyYWlsaW5nQ29tbWE9b2xkVHJhaWxpbmdDb21tYSksbGVmdH07cHAkMy5wYXJzZU1heWJlQ29uZGl0aW9uYWw9ZnVuY3Rpb24obm9JbixyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKXt2YXIgc3RhcnRQb3M9dGhpcy5zdGFydCxzdGFydExvYz10aGlzLnN0YXJ0TG9jLGV4cHI9dGhpcy5wYXJzZUV4cHJPcHMobm9JbixyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKTtpZih0aGlzLmNoZWNrRXhwcmVzc2lvbkVycm9ycyhyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKSlyZXR1cm4gZXhwcjtpZih0aGlzLmVhdCh0eXBlcy5xdWVzdGlvbikpe3ZhciBub2RlPXRoaXMuc3RhcnROb2RlQXQoc3RhcnRQb3Msc3RhcnRMb2MpO3JldHVybiBub2RlLnRlc3Q9ZXhwcixub2RlLmNvbnNlcXVlbnQ9dGhpcy5wYXJzZU1heWJlQXNzaWduKCksdGhpcy5leHBlY3QodHlwZXMuY29sb24pLG5vZGUuYWx0ZXJuYXRlPXRoaXMucGFyc2VNYXliZUFzc2lnbihub0luKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkNvbmRpdGlvbmFsRXhwcmVzc2lvblwiKX1yZXR1cm4gZXhwcn07cHAkMy5wYXJzZUV4cHJPcHM9ZnVuY3Rpb24obm9JbixyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKXt2YXIgc3RhcnRQb3M9dGhpcy5zdGFydCxzdGFydExvYz10aGlzLnN0YXJ0TG9jLGV4cHI9dGhpcy5wYXJzZU1heWJlVW5hcnkocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycywhMSk7cmV0dXJuIHRoaXMuY2hlY2tFeHByZXNzaW9uRXJyb3JzKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpfHxleHByLnN0YXJ0PT09c3RhcnRQb3MmJmV4cHIudHlwZT09PVwiQXJyb3dGdW5jdGlvbkV4cHJlc3Npb25cIj9leHByOnRoaXMucGFyc2VFeHByT3AoZXhwcixzdGFydFBvcyxzdGFydExvYywtMSxub0luKX07cHAkMy5wYXJzZUV4cHJPcD1mdW5jdGlvbihsZWZ0LGxlZnRTdGFydFBvcyxsZWZ0U3RhcnRMb2MsbWluUHJlYyxub0luKXt2YXIgcHJlYz10aGlzLnR5cGUuYmlub3A7aWYocHJlYyE9bnVsbCYmKCFub0lufHx0aGlzLnR5cGUhPT10eXBlcy5faW4pJiZwcmVjPm1pblByZWMpe3ZhciBsb2dpY2FsPXRoaXMudHlwZT09PXR5cGVzLmxvZ2ljYWxPUnx8dGhpcy50eXBlPT09dHlwZXMubG9naWNhbEFORCxjb2FsZXNjZT10aGlzLnR5cGU9PT10eXBlcy5jb2FsZXNjZTtjb2FsZXNjZSYmKHByZWM9dHlwZXMubG9naWNhbEFORC5iaW5vcCk7dmFyIG9wPXRoaXMudmFsdWU7dGhpcy5uZXh0KCk7dmFyIHN0YXJ0UG9zPXRoaXMuc3RhcnQsc3RhcnRMb2M9dGhpcy5zdGFydExvYyxyaWdodD10aGlzLnBhcnNlRXhwck9wKHRoaXMucGFyc2VNYXliZVVuYXJ5KG51bGwsITEpLHN0YXJ0UG9zLHN0YXJ0TG9jLHByZWMsbm9Jbiksbm9kZT10aGlzLmJ1aWxkQmluYXJ5KGxlZnRTdGFydFBvcyxsZWZ0U3RhcnRMb2MsbGVmdCxyaWdodCxvcCxsb2dpY2FsfHxjb2FsZXNjZSk7cmV0dXJuIChsb2dpY2FsJiZ0aGlzLnR5cGU9PT10eXBlcy5jb2FsZXNjZXx8Y29hbGVzY2UmJih0aGlzLnR5cGU9PT10eXBlcy5sb2dpY2FsT1J8fHRoaXMudHlwZT09PXR5cGVzLmxvZ2ljYWxBTkQpKSYmdGhpcy5yYWlzZVJlY292ZXJhYmxlKHRoaXMuc3RhcnQsXCJMb2dpY2FsIGV4cHJlc3Npb25zIGFuZCBjb2FsZXNjZSBleHByZXNzaW9ucyBjYW5ub3QgYmUgbWl4ZWQuIFdyYXAgZWl0aGVyIGJ5IHBhcmVudGhlc2VzXCIpLHRoaXMucGFyc2VFeHByT3Aobm9kZSxsZWZ0U3RhcnRQb3MsbGVmdFN0YXJ0TG9jLG1pblByZWMsbm9Jbil9cmV0dXJuIGxlZnR9O3BwJDMuYnVpbGRCaW5hcnk9ZnVuY3Rpb24oc3RhcnRQb3Msc3RhcnRMb2MsbGVmdCxyaWdodCxvcCxsb2dpY2FsKXt2YXIgbm9kZT10aGlzLnN0YXJ0Tm9kZUF0KHN0YXJ0UG9zLHN0YXJ0TG9jKTtyZXR1cm4gbm9kZS5sZWZ0PWxlZnQsbm9kZS5vcGVyYXRvcj1vcCxub2RlLnJpZ2h0PXJpZ2h0LHRoaXMuZmluaXNoTm9kZShub2RlLGxvZ2ljYWw/XCJMb2dpY2FsRXhwcmVzc2lvblwiOlwiQmluYXJ5RXhwcmVzc2lvblwiKX07cHAkMy5wYXJzZU1heWJlVW5hcnk9ZnVuY3Rpb24ocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyxzYXdVbmFyeSl7dmFyIHN0YXJ0UG9zPXRoaXMuc3RhcnQsc3RhcnRMb2M9dGhpcy5zdGFydExvYyxleHByO2lmKHRoaXMuaXNDb250ZXh0dWFsKFwiYXdhaXRcIikmJih0aGlzLmluQXN5bmN8fCF0aGlzLmluRnVuY3Rpb24mJnRoaXMub3B0aW9ucy5hbGxvd0F3YWl0T3V0c2lkZUZ1bmN0aW9uKSlleHByPXRoaXMucGFyc2VBd2FpdCgpLHNhd1VuYXJ5PSEwO2Vsc2UgaWYodGhpcy50eXBlLnByZWZpeCl7dmFyIG5vZGU9dGhpcy5zdGFydE5vZGUoKSx1cGRhdGU9dGhpcy50eXBlPT09dHlwZXMuaW5jRGVjO25vZGUub3BlcmF0b3I9dGhpcy52YWx1ZSxub2RlLnByZWZpeD0hMCx0aGlzLm5leHQoKSxub2RlLmFyZ3VtZW50PXRoaXMucGFyc2VNYXliZVVuYXJ5KG51bGwsITApLHRoaXMuY2hlY2tFeHByZXNzaW9uRXJyb3JzKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMsITApLHVwZGF0ZT90aGlzLmNoZWNrTFZhbChub2RlLmFyZ3VtZW50KTp0aGlzLnN0cmljdCYmbm9kZS5vcGVyYXRvcj09PVwiZGVsZXRlXCImJm5vZGUuYXJndW1lbnQudHlwZT09PVwiSWRlbnRpZmllclwiP3RoaXMucmFpc2VSZWNvdmVyYWJsZShub2RlLnN0YXJ0LFwiRGVsZXRpbmcgbG9jYWwgdmFyaWFibGUgaW4gc3RyaWN0IG1vZGVcIik6c2F3VW5hcnk9ITAsZXhwcj10aGlzLmZpbmlzaE5vZGUobm9kZSx1cGRhdGU/XCJVcGRhdGVFeHByZXNzaW9uXCI6XCJVbmFyeUV4cHJlc3Npb25cIik7fWVsc2Uge2lmKGV4cHI9dGhpcy5wYXJzZUV4cHJTdWJzY3JpcHRzKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpLHRoaXMuY2hlY2tFeHByZXNzaW9uRXJyb3JzKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpKXJldHVybiBleHByO2Zvcig7dGhpcy50eXBlLnBvc3RmaXgmJiF0aGlzLmNhbkluc2VydFNlbWljb2xvbigpOyl7dmFyIG5vZGUkMT10aGlzLnN0YXJ0Tm9kZUF0KHN0YXJ0UG9zLHN0YXJ0TG9jKTtub2RlJDEub3BlcmF0b3I9dGhpcy52YWx1ZSxub2RlJDEucHJlZml4PSExLG5vZGUkMS5hcmd1bWVudD1leHByLHRoaXMuY2hlY2tMVmFsKGV4cHIpLHRoaXMubmV4dCgpLGV4cHI9dGhpcy5maW5pc2hOb2RlKG5vZGUkMSxcIlVwZGF0ZUV4cHJlc3Npb25cIik7fX1yZXR1cm4gIXNhd1VuYXJ5JiZ0aGlzLmVhdCh0eXBlcy5zdGFyc3Rhcik/dGhpcy5idWlsZEJpbmFyeShzdGFydFBvcyxzdGFydExvYyxleHByLHRoaXMucGFyc2VNYXliZVVuYXJ5KG51bGwsITEpLFwiKipcIiwhMSk6ZXhwcn07cHAkMy5wYXJzZUV4cHJTdWJzY3JpcHRzPWZ1bmN0aW9uKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpe3ZhciBzdGFydFBvcz10aGlzLnN0YXJ0LHN0YXJ0TG9jPXRoaXMuc3RhcnRMb2MsZXhwcj10aGlzLnBhcnNlRXhwckF0b20ocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyk7aWYoZXhwci50eXBlPT09XCJBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvblwiJiZ0aGlzLmlucHV0LnNsaWNlKHRoaXMubGFzdFRva1N0YXJ0LHRoaXMubGFzdFRva0VuZCkhPT1cIilcIilyZXR1cm4gZXhwcjt2YXIgcmVzdWx0PXRoaXMucGFyc2VTdWJzY3JpcHRzKGV4cHIsc3RhcnRQb3Msc3RhcnRMb2MpO3JldHVybiByZWZEZXN0cnVjdHVyaW5nRXJyb3JzJiZyZXN1bHQudHlwZT09PVwiTWVtYmVyRXhwcmVzc2lvblwiJiYocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycy5wYXJlbnRoZXNpemVkQXNzaWduPj1yZXN1bHQuc3RhcnQmJihyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnBhcmVudGhlc2l6ZWRBc3NpZ249LTEpLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMucGFyZW50aGVzaXplZEJpbmQ+PXJlc3VsdC5zdGFydCYmKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMucGFyZW50aGVzaXplZEJpbmQ9LTEpKSxyZXN1bHR9O3BwJDMucGFyc2VTdWJzY3JpcHRzPWZ1bmN0aW9uKGJhc2UyLHN0YXJ0UG9zLHN0YXJ0TG9jLG5vQ2FsbHMpe2Zvcih2YXIgbWF5YmVBc3luY0Fycm93PXRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OCYmYmFzZTIudHlwZT09PVwiSWRlbnRpZmllclwiJiZiYXNlMi5uYW1lPT09XCJhc3luY1wiJiZ0aGlzLmxhc3RUb2tFbmQ9PT1iYXNlMi5lbmQmJiF0aGlzLmNhbkluc2VydFNlbWljb2xvbigpJiZiYXNlMi5lbmQtYmFzZTIuc3RhcnQ9PT01JiZ0aGlzLnBvdGVudGlhbEFycm93QXQ9PT1iYXNlMi5zdGFydCxvcHRpb25hbENoYWluZWQ9ITE7Oyl7dmFyIGVsZW1lbnQ9dGhpcy5wYXJzZVN1YnNjcmlwdChiYXNlMixzdGFydFBvcyxzdGFydExvYyxub0NhbGxzLG1heWJlQXN5bmNBcnJvdyxvcHRpb25hbENoYWluZWQpO2lmKGVsZW1lbnQub3B0aW9uYWwmJihvcHRpb25hbENoYWluZWQ9ITApLGVsZW1lbnQ9PT1iYXNlMnx8ZWxlbWVudC50eXBlPT09XCJBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvblwiKXtpZihvcHRpb25hbENoYWluZWQpe3ZhciBjaGFpbk5vZGU9dGhpcy5zdGFydE5vZGVBdChzdGFydFBvcyxzdGFydExvYyk7Y2hhaW5Ob2RlLmV4cHJlc3Npb249ZWxlbWVudCxlbGVtZW50PXRoaXMuZmluaXNoTm9kZShjaGFpbk5vZGUsXCJDaGFpbkV4cHJlc3Npb25cIik7fXJldHVybiBlbGVtZW50fWJhc2UyPWVsZW1lbnQ7fX07cHAkMy5wYXJzZVN1YnNjcmlwdD1mdW5jdGlvbihiYXNlMixzdGFydFBvcyxzdGFydExvYyxub0NhbGxzLG1heWJlQXN5bmNBcnJvdyxvcHRpb25hbENoYWluZWQpe3ZhciBvcHRpb25hbFN1cHBvcnRlZD10aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTExLG9wdGlvbmFsPW9wdGlvbmFsU3VwcG9ydGVkJiZ0aGlzLmVhdCh0eXBlcy5xdWVzdGlvbkRvdCk7bm9DYWxscyYmb3B0aW9uYWwmJnRoaXMucmFpc2UodGhpcy5sYXN0VG9rU3RhcnQsXCJPcHRpb25hbCBjaGFpbmluZyBjYW5ub3QgYXBwZWFyIGluIHRoZSBjYWxsZWUgb2YgbmV3IGV4cHJlc3Npb25zXCIpO3ZhciBjb21wdXRlZD10aGlzLmVhdCh0eXBlcy5icmFja2V0TCk7aWYoY29tcHV0ZWR8fG9wdGlvbmFsJiZ0aGlzLnR5cGUhPT10eXBlcy5wYXJlbkwmJnRoaXMudHlwZSE9PXR5cGVzLmJhY2tRdW90ZXx8dGhpcy5lYXQodHlwZXMuZG90KSl7dmFyIG5vZGU9dGhpcy5zdGFydE5vZGVBdChzdGFydFBvcyxzdGFydExvYyk7bm9kZS5vYmplY3Q9YmFzZTIsbm9kZS5wcm9wZXJ0eT1jb21wdXRlZD90aGlzLnBhcnNlRXhwcmVzc2lvbigpOnRoaXMucGFyc2VJZGVudCh0aGlzLm9wdGlvbnMuYWxsb3dSZXNlcnZlZCE9PVwibmV2ZXJcIiksbm9kZS5jb21wdXRlZD0hIWNvbXB1dGVkLGNvbXB1dGVkJiZ0aGlzLmV4cGVjdCh0eXBlcy5icmFja2V0Uiksb3B0aW9uYWxTdXBwb3J0ZWQmJihub2RlLm9wdGlvbmFsPW9wdGlvbmFsKSxiYXNlMj10aGlzLmZpbmlzaE5vZGUobm9kZSxcIk1lbWJlckV4cHJlc3Npb25cIik7fWVsc2UgaWYoIW5vQ2FsbHMmJnRoaXMuZWF0KHR5cGVzLnBhcmVuTCkpe3ZhciByZWZEZXN0cnVjdHVyaW5nRXJyb3JzPW5ldyBEZXN0cnVjdHVyaW5nRXJyb3JzLG9sZFlpZWxkUG9zPXRoaXMueWllbGRQb3Msb2xkQXdhaXRQb3M9dGhpcy5hd2FpdFBvcyxvbGRBd2FpdElkZW50UG9zPXRoaXMuYXdhaXRJZGVudFBvczt0aGlzLnlpZWxkUG9zPTAsdGhpcy5hd2FpdFBvcz0wLHRoaXMuYXdhaXRJZGVudFBvcz0wO3ZhciBleHByTGlzdD10aGlzLnBhcnNlRXhwckxpc3QodHlwZXMucGFyZW5SLHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OCwhMSxyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKTtpZihtYXliZUFzeW5jQXJyb3cmJiFvcHRpb25hbCYmIXRoaXMuY2FuSW5zZXJ0U2VtaWNvbG9uKCkmJnRoaXMuZWF0KHR5cGVzLmFycm93KSlyZXR1cm4gdGhpcy5jaGVja1BhdHRlcm5FcnJvcnMocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycywhMSksdGhpcy5jaGVja1lpZWxkQXdhaXRJbkRlZmF1bHRQYXJhbXMoKSx0aGlzLmF3YWl0SWRlbnRQb3M+MCYmdGhpcy5yYWlzZSh0aGlzLmF3YWl0SWRlbnRQb3MsXCJDYW5ub3QgdXNlICdhd2FpdCcgYXMgaWRlbnRpZmllciBpbnNpZGUgYW4gYXN5bmMgZnVuY3Rpb25cIiksdGhpcy55aWVsZFBvcz1vbGRZaWVsZFBvcyx0aGlzLmF3YWl0UG9zPW9sZEF3YWl0UG9zLHRoaXMuYXdhaXRJZGVudFBvcz1vbGRBd2FpdElkZW50UG9zLHRoaXMucGFyc2VBcnJvd0V4cHJlc3Npb24odGhpcy5zdGFydE5vZGVBdChzdGFydFBvcyxzdGFydExvYyksZXhwckxpc3QsITApO3RoaXMuY2hlY2tFeHByZXNzaW9uRXJyb3JzKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMsITApLHRoaXMueWllbGRQb3M9b2xkWWllbGRQb3N8fHRoaXMueWllbGRQb3MsdGhpcy5hd2FpdFBvcz1vbGRBd2FpdFBvc3x8dGhpcy5hd2FpdFBvcyx0aGlzLmF3YWl0SWRlbnRQb3M9b2xkQXdhaXRJZGVudFBvc3x8dGhpcy5hd2FpdElkZW50UG9zO3ZhciBub2RlJDE9dGhpcy5zdGFydE5vZGVBdChzdGFydFBvcyxzdGFydExvYyk7bm9kZSQxLmNhbGxlZT1iYXNlMixub2RlJDEuYXJndW1lbnRzPWV4cHJMaXN0LG9wdGlvbmFsU3VwcG9ydGVkJiYobm9kZSQxLm9wdGlvbmFsPW9wdGlvbmFsKSxiYXNlMj10aGlzLmZpbmlzaE5vZGUobm9kZSQxLFwiQ2FsbEV4cHJlc3Npb25cIik7fWVsc2UgaWYodGhpcy50eXBlPT09dHlwZXMuYmFja1F1b3RlKXsob3B0aW9uYWx8fG9wdGlvbmFsQ2hhaW5lZCkmJnRoaXMucmFpc2UodGhpcy5zdGFydCxcIk9wdGlvbmFsIGNoYWluaW5nIGNhbm5vdCBhcHBlYXIgaW4gdGhlIHRhZyBvZiB0YWdnZWQgdGVtcGxhdGUgZXhwcmVzc2lvbnNcIik7dmFyIG5vZGUkMj10aGlzLnN0YXJ0Tm9kZUF0KHN0YXJ0UG9zLHN0YXJ0TG9jKTtub2RlJDIudGFnPWJhc2UyLG5vZGUkMi5xdWFzaT10aGlzLnBhcnNlVGVtcGxhdGUoe2lzVGFnZ2VkOiEwfSksYmFzZTI9dGhpcy5maW5pc2hOb2RlKG5vZGUkMixcIlRhZ2dlZFRlbXBsYXRlRXhwcmVzc2lvblwiKTt9cmV0dXJuIGJhc2UyfTtwcCQzLnBhcnNlRXhwckF0b209ZnVuY3Rpb24ocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyl7dGhpcy50eXBlPT09dHlwZXMuc2xhc2gmJnRoaXMucmVhZFJlZ2V4cCgpO3ZhciBub2RlLGNhbkJlQXJyb3c9dGhpcy5wb3RlbnRpYWxBcnJvd0F0PT09dGhpcy5zdGFydDtzd2l0Y2godGhpcy50eXBlKXtjYXNlIHR5cGVzLl9zdXBlcjpyZXR1cm4gdGhpcy5hbGxvd1N1cGVyfHx0aGlzLnJhaXNlKHRoaXMuc3RhcnQsXCInc3VwZXInIGtleXdvcmQgb3V0c2lkZSBhIG1ldGhvZFwiKSxub2RlPXRoaXMuc3RhcnROb2RlKCksdGhpcy5uZXh0KCksdGhpcy50eXBlPT09dHlwZXMucGFyZW5MJiYhdGhpcy5hbGxvd0RpcmVjdFN1cGVyJiZ0aGlzLnJhaXNlKG5vZGUuc3RhcnQsXCJzdXBlcigpIGNhbGwgb3V0c2lkZSBjb25zdHJ1Y3RvciBvZiBhIHN1YmNsYXNzXCIpLHRoaXMudHlwZSE9PXR5cGVzLmRvdCYmdGhpcy50eXBlIT09dHlwZXMuYnJhY2tldEwmJnRoaXMudHlwZSE9PXR5cGVzLnBhcmVuTCYmdGhpcy51bmV4cGVjdGVkKCksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJTdXBlclwiKTtjYXNlIHR5cGVzLl90aGlzOnJldHVybiBub2RlPXRoaXMuc3RhcnROb2RlKCksdGhpcy5uZXh0KCksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJUaGlzRXhwcmVzc2lvblwiKTtjYXNlIHR5cGVzLm5hbWU6dmFyIHN0YXJ0UG9zPXRoaXMuc3RhcnQsc3RhcnRMb2M9dGhpcy5zdGFydExvYyxjb250YWluc0VzYz10aGlzLmNvbnRhaW5zRXNjLGlkPXRoaXMucGFyc2VJZGVudCghMSk7aWYodGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj04JiYhY29udGFpbnNFc2MmJmlkLm5hbWU9PT1cImFzeW5jXCImJiF0aGlzLmNhbkluc2VydFNlbWljb2xvbigpJiZ0aGlzLmVhdCh0eXBlcy5fZnVuY3Rpb24pKXJldHVybiB0aGlzLnBhcnNlRnVuY3Rpb24odGhpcy5zdGFydE5vZGVBdChzdGFydFBvcyxzdGFydExvYyksMCwhMSwhMCk7aWYoY2FuQmVBcnJvdyYmIXRoaXMuY2FuSW5zZXJ0U2VtaWNvbG9uKCkpe2lmKHRoaXMuZWF0KHR5cGVzLmFycm93KSlyZXR1cm4gdGhpcy5wYXJzZUFycm93RXhwcmVzc2lvbih0aGlzLnN0YXJ0Tm9kZUF0KHN0YXJ0UG9zLHN0YXJ0TG9jKSxbaWRdLCExKTtpZih0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTgmJmlkLm5hbWU9PT1cImFzeW5jXCImJnRoaXMudHlwZT09PXR5cGVzLm5hbWUmJiFjb250YWluc0VzYylyZXR1cm4gaWQ9dGhpcy5wYXJzZUlkZW50KCExKSwodGhpcy5jYW5JbnNlcnRTZW1pY29sb24oKXx8IXRoaXMuZWF0KHR5cGVzLmFycm93KSkmJnRoaXMudW5leHBlY3RlZCgpLHRoaXMucGFyc2VBcnJvd0V4cHJlc3Npb24odGhpcy5zdGFydE5vZGVBdChzdGFydFBvcyxzdGFydExvYyksW2lkXSwhMCl9cmV0dXJuIGlkO2Nhc2UgdHlwZXMucmVnZXhwOnZhciB2YWx1ZT10aGlzLnZhbHVlO3JldHVybiBub2RlPXRoaXMucGFyc2VMaXRlcmFsKHZhbHVlLnZhbHVlKSxub2RlLnJlZ2V4PXtwYXR0ZXJuOnZhbHVlLnBhdHRlcm4sZmxhZ3M6dmFsdWUuZmxhZ3N9LG5vZGU7Y2FzZSB0eXBlcy5udW06Y2FzZSB0eXBlcy5zdHJpbmc6cmV0dXJuIHRoaXMucGFyc2VMaXRlcmFsKHRoaXMudmFsdWUpO2Nhc2UgdHlwZXMuX251bGw6Y2FzZSB0eXBlcy5fdHJ1ZTpjYXNlIHR5cGVzLl9mYWxzZTpyZXR1cm4gbm9kZT10aGlzLnN0YXJ0Tm9kZSgpLG5vZGUudmFsdWU9dGhpcy50eXBlPT09dHlwZXMuX251bGw/bnVsbDp0aGlzLnR5cGU9PT10eXBlcy5fdHJ1ZSxub2RlLnJhdz10aGlzLnR5cGUua2V5d29yZCx0aGlzLm5leHQoKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkxpdGVyYWxcIik7Y2FzZSB0eXBlcy5wYXJlbkw6dmFyIHN0YXJ0PXRoaXMuc3RhcnQsZXhwcj10aGlzLnBhcnNlUGFyZW5BbmREaXN0aW5ndWlzaEV4cHJlc3Npb24oY2FuQmVBcnJvdyk7cmV0dXJuIHJlZkRlc3RydWN0dXJpbmdFcnJvcnMmJihyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnBhcmVudGhlc2l6ZWRBc3NpZ248MCYmIXRoaXMuaXNTaW1wbGVBc3NpZ25UYXJnZXQoZXhwcikmJihyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnBhcmVudGhlc2l6ZWRBc3NpZ249c3RhcnQpLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMucGFyZW50aGVzaXplZEJpbmQ8MCYmKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMucGFyZW50aGVzaXplZEJpbmQ9c3RhcnQpKSxleHByO2Nhc2UgdHlwZXMuYnJhY2tldEw6cmV0dXJuIG5vZGU9dGhpcy5zdGFydE5vZGUoKSx0aGlzLm5leHQoKSxub2RlLmVsZW1lbnRzPXRoaXMucGFyc2VFeHByTGlzdCh0eXBlcy5icmFja2V0UiwhMCwhMCxyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkFycmF5RXhwcmVzc2lvblwiKTtjYXNlIHR5cGVzLmJyYWNlTDpyZXR1cm4gdGhpcy5wYXJzZU9iaighMSxyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKTtjYXNlIHR5cGVzLl9mdW5jdGlvbjpyZXR1cm4gbm9kZT10aGlzLnN0YXJ0Tm9kZSgpLHRoaXMubmV4dCgpLHRoaXMucGFyc2VGdW5jdGlvbihub2RlLDApO2Nhc2UgdHlwZXMuX2NsYXNzOnJldHVybiB0aGlzLnBhcnNlQ2xhc3ModGhpcy5zdGFydE5vZGUoKSwhMSk7Y2FzZSB0eXBlcy5fbmV3OnJldHVybiB0aGlzLnBhcnNlTmV3KCk7Y2FzZSB0eXBlcy5iYWNrUXVvdGU6cmV0dXJuIHRoaXMucGFyc2VUZW1wbGF0ZSgpO2Nhc2UgdHlwZXMuX2ltcG9ydDpyZXR1cm4gdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj0xMT90aGlzLnBhcnNlRXhwckltcG9ydCgpOnRoaXMudW5leHBlY3RlZCgpO2RlZmF1bHQ6dGhpcy51bmV4cGVjdGVkKCk7fX07cHAkMy5wYXJzZUV4cHJJbXBvcnQ9ZnVuY3Rpb24oKXt2YXIgbm9kZT10aGlzLnN0YXJ0Tm9kZSgpO3RoaXMuY29udGFpbnNFc2MmJnRoaXMucmFpc2VSZWNvdmVyYWJsZSh0aGlzLnN0YXJ0LFwiRXNjYXBlIHNlcXVlbmNlIGluIGtleXdvcmQgaW1wb3J0XCIpO3ZhciBtZXRhPXRoaXMucGFyc2VJZGVudCghMCk7c3dpdGNoKHRoaXMudHlwZSl7Y2FzZSB0eXBlcy5wYXJlbkw6cmV0dXJuIHRoaXMucGFyc2VEeW5hbWljSW1wb3J0KG5vZGUpO2Nhc2UgdHlwZXMuZG90OnJldHVybiBub2RlLm1ldGE9bWV0YSx0aGlzLnBhcnNlSW1wb3J0TWV0YShub2RlKTtkZWZhdWx0OnRoaXMudW5leHBlY3RlZCgpO319O3BwJDMucGFyc2VEeW5hbWljSW1wb3J0PWZ1bmN0aW9uKG5vZGUpe2lmKHRoaXMubmV4dCgpLG5vZGUuc291cmNlPXRoaXMucGFyc2VNYXliZUFzc2lnbigpLCF0aGlzLmVhdCh0eXBlcy5wYXJlblIpKXt2YXIgZXJyb3JQb3M9dGhpcy5zdGFydDt0aGlzLmVhdCh0eXBlcy5jb21tYSkmJnRoaXMuZWF0KHR5cGVzLnBhcmVuUik/dGhpcy5yYWlzZVJlY292ZXJhYmxlKGVycm9yUG9zLFwiVHJhaWxpbmcgY29tbWEgaXMgbm90IGFsbG93ZWQgaW4gaW1wb3J0KClcIik6dGhpcy51bmV4cGVjdGVkKGVycm9yUG9zKTt9cmV0dXJuIHRoaXMuZmluaXNoTm9kZShub2RlLFwiSW1wb3J0RXhwcmVzc2lvblwiKX07cHAkMy5wYXJzZUltcG9ydE1ldGE9ZnVuY3Rpb24obm9kZSl7dGhpcy5uZXh0KCk7dmFyIGNvbnRhaW5zRXNjPXRoaXMuY29udGFpbnNFc2M7cmV0dXJuIG5vZGUucHJvcGVydHk9dGhpcy5wYXJzZUlkZW50KCEwKSxub2RlLnByb3BlcnR5Lm5hbWUhPT1cIm1ldGFcIiYmdGhpcy5yYWlzZVJlY292ZXJhYmxlKG5vZGUucHJvcGVydHkuc3RhcnQsXCJUaGUgb25seSB2YWxpZCBtZXRhIHByb3BlcnR5IGZvciBpbXBvcnQgaXMgJ2ltcG9ydC5tZXRhJ1wiKSxjb250YWluc0VzYyYmdGhpcy5yYWlzZVJlY292ZXJhYmxlKG5vZGUuc3RhcnQsXCInaW1wb3J0Lm1ldGEnIG11c3Qgbm90IGNvbnRhaW4gZXNjYXBlZCBjaGFyYWN0ZXJzXCIpLHRoaXMub3B0aW9ucy5zb3VyY2VUeXBlIT09XCJtb2R1bGVcIiYmdGhpcy5yYWlzZVJlY292ZXJhYmxlKG5vZGUuc3RhcnQsXCJDYW5ub3QgdXNlICdpbXBvcnQubWV0YScgb3V0c2lkZSBhIG1vZHVsZVwiKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIk1ldGFQcm9wZXJ0eVwiKX07cHAkMy5wYXJzZUxpdGVyYWw9ZnVuY3Rpb24odmFsdWUpe3ZhciBub2RlPXRoaXMuc3RhcnROb2RlKCk7cmV0dXJuIG5vZGUudmFsdWU9dmFsdWUsbm9kZS5yYXc9dGhpcy5pbnB1dC5zbGljZSh0aGlzLnN0YXJ0LHRoaXMuZW5kKSxub2RlLnJhdy5jaGFyQ29kZUF0KG5vZGUucmF3Lmxlbmd0aC0xKT09PTExMCYmKG5vZGUuYmlnaW50PW5vZGUucmF3LnNsaWNlKDAsLTEpLnJlcGxhY2UoL18vZyxcIlwiKSksdGhpcy5uZXh0KCksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJMaXRlcmFsXCIpfTtwcCQzLnBhcnNlUGFyZW5FeHByZXNzaW9uPWZ1bmN0aW9uKCl7dGhpcy5leHBlY3QodHlwZXMucGFyZW5MKTt2YXIgdmFsPXRoaXMucGFyc2VFeHByZXNzaW9uKCk7cmV0dXJuIHRoaXMuZXhwZWN0KHR5cGVzLnBhcmVuUiksdmFsfTtwcCQzLnBhcnNlUGFyZW5BbmREaXN0aW5ndWlzaEV4cHJlc3Npb249ZnVuY3Rpb24oY2FuQmVBcnJvdyl7dmFyIHN0YXJ0UG9zPXRoaXMuc3RhcnQsc3RhcnRMb2M9dGhpcy5zdGFydExvYyx2YWwsYWxsb3dUcmFpbGluZ0NvbW1hPXRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49ODtpZih0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTYpe3RoaXMubmV4dCgpO3ZhciBpbm5lclN0YXJ0UG9zPXRoaXMuc3RhcnQsaW5uZXJTdGFydExvYz10aGlzLnN0YXJ0TG9jLGV4cHJMaXN0PVtdLGZpcnN0PSEwLGxhc3RJc0NvbW1hPSExLHJlZkRlc3RydWN0dXJpbmdFcnJvcnM9bmV3IERlc3RydWN0dXJpbmdFcnJvcnMsb2xkWWllbGRQb3M9dGhpcy55aWVsZFBvcyxvbGRBd2FpdFBvcz10aGlzLmF3YWl0UG9zLHNwcmVhZFN0YXJ0O2Zvcih0aGlzLnlpZWxkUG9zPTAsdGhpcy5hd2FpdFBvcz0wO3RoaXMudHlwZSE9PXR5cGVzLnBhcmVuUjspaWYoZmlyc3Q/Zmlyc3Q9ITE6dGhpcy5leHBlY3QodHlwZXMuY29tbWEpLGFsbG93VHJhaWxpbmdDb21tYSYmdGhpcy5hZnRlclRyYWlsaW5nQ29tbWEodHlwZXMucGFyZW5SLCEwKSl7bGFzdElzQ29tbWE9ITA7YnJlYWt9ZWxzZSBpZih0aGlzLnR5cGU9PT10eXBlcy5lbGxpcHNpcyl7c3ByZWFkU3RhcnQ9dGhpcy5zdGFydCxleHByTGlzdC5wdXNoKHRoaXMucGFyc2VQYXJlbkl0ZW0odGhpcy5wYXJzZVJlc3RCaW5kaW5nKCkpKSx0aGlzLnR5cGU9PT10eXBlcy5jb21tYSYmdGhpcy5yYWlzZSh0aGlzLnN0YXJ0LFwiQ29tbWEgaXMgbm90IHBlcm1pdHRlZCBhZnRlciB0aGUgcmVzdCBlbGVtZW50XCIpO2JyZWFrfWVsc2UgZXhwckxpc3QucHVzaCh0aGlzLnBhcnNlTWF5YmVBc3NpZ24oITEscmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyx0aGlzLnBhcnNlUGFyZW5JdGVtKSk7dmFyIGlubmVyRW5kUG9zPXRoaXMuc3RhcnQsaW5uZXJFbmRMb2M9dGhpcy5zdGFydExvYztpZih0aGlzLmV4cGVjdCh0eXBlcy5wYXJlblIpLGNhbkJlQXJyb3cmJiF0aGlzLmNhbkluc2VydFNlbWljb2xvbigpJiZ0aGlzLmVhdCh0eXBlcy5hcnJvdykpcmV0dXJuIHRoaXMuY2hlY2tQYXR0ZXJuRXJyb3JzKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMsITEpLHRoaXMuY2hlY2tZaWVsZEF3YWl0SW5EZWZhdWx0UGFyYW1zKCksdGhpcy55aWVsZFBvcz1vbGRZaWVsZFBvcyx0aGlzLmF3YWl0UG9zPW9sZEF3YWl0UG9zLHRoaXMucGFyc2VQYXJlbkFycm93TGlzdChzdGFydFBvcyxzdGFydExvYyxleHByTGlzdCk7KCFleHByTGlzdC5sZW5ndGh8fGxhc3RJc0NvbW1hKSYmdGhpcy51bmV4cGVjdGVkKHRoaXMubGFzdFRva1N0YXJ0KSxzcHJlYWRTdGFydCYmdGhpcy51bmV4cGVjdGVkKHNwcmVhZFN0YXJ0KSx0aGlzLmNoZWNrRXhwcmVzc2lvbkVycm9ycyhyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLCEwKSx0aGlzLnlpZWxkUG9zPW9sZFlpZWxkUG9zfHx0aGlzLnlpZWxkUG9zLHRoaXMuYXdhaXRQb3M9b2xkQXdhaXRQb3N8fHRoaXMuYXdhaXRQb3MsZXhwckxpc3QubGVuZ3RoPjE/KHZhbD10aGlzLnN0YXJ0Tm9kZUF0KGlubmVyU3RhcnRQb3MsaW5uZXJTdGFydExvYyksdmFsLmV4cHJlc3Npb25zPWV4cHJMaXN0LHRoaXMuZmluaXNoTm9kZUF0KHZhbCxcIlNlcXVlbmNlRXhwcmVzc2lvblwiLGlubmVyRW5kUG9zLGlubmVyRW5kTG9jKSk6dmFsPWV4cHJMaXN0WzBdO31lbHNlIHZhbD10aGlzLnBhcnNlUGFyZW5FeHByZXNzaW9uKCk7aWYodGhpcy5vcHRpb25zLnByZXNlcnZlUGFyZW5zKXt2YXIgcGFyPXRoaXMuc3RhcnROb2RlQXQoc3RhcnRQb3Msc3RhcnRMb2MpO3JldHVybiBwYXIuZXhwcmVzc2lvbj12YWwsdGhpcy5maW5pc2hOb2RlKHBhcixcIlBhcmVudGhlc2l6ZWRFeHByZXNzaW9uXCIpfWVsc2UgcmV0dXJuIHZhbH07cHAkMy5wYXJzZVBhcmVuSXRlbT1mdW5jdGlvbihpdGVtKXtyZXR1cm4gaXRlbX07cHAkMy5wYXJzZVBhcmVuQXJyb3dMaXN0PWZ1bmN0aW9uKHN0YXJ0UG9zLHN0YXJ0TG9jLGV4cHJMaXN0KXtyZXR1cm4gdGhpcy5wYXJzZUFycm93RXhwcmVzc2lvbih0aGlzLnN0YXJ0Tm9kZUF0KHN0YXJ0UG9zLHN0YXJ0TG9jKSxleHByTGlzdCl9O2VtcHR5JDE9W107cHAkMy5wYXJzZU5ldz1mdW5jdGlvbigpe3RoaXMuY29udGFpbnNFc2MmJnRoaXMucmFpc2VSZWNvdmVyYWJsZSh0aGlzLnN0YXJ0LFwiRXNjYXBlIHNlcXVlbmNlIGluIGtleXdvcmQgbmV3XCIpO3ZhciBub2RlPXRoaXMuc3RhcnROb2RlKCksbWV0YT10aGlzLnBhcnNlSWRlbnQoITApO2lmKHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49NiYmdGhpcy5lYXQodHlwZXMuZG90KSl7bm9kZS5tZXRhPW1ldGE7dmFyIGNvbnRhaW5zRXNjPXRoaXMuY29udGFpbnNFc2M7cmV0dXJuIG5vZGUucHJvcGVydHk9dGhpcy5wYXJzZUlkZW50KCEwKSxub2RlLnByb3BlcnR5Lm5hbWUhPT1cInRhcmdldFwiJiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUobm9kZS5wcm9wZXJ0eS5zdGFydCxcIlRoZSBvbmx5IHZhbGlkIG1ldGEgcHJvcGVydHkgZm9yIG5ldyBpcyAnbmV3LnRhcmdldCdcIiksY29udGFpbnNFc2MmJnRoaXMucmFpc2VSZWNvdmVyYWJsZShub2RlLnN0YXJ0LFwiJ25ldy50YXJnZXQnIG11c3Qgbm90IGNvbnRhaW4gZXNjYXBlZCBjaGFyYWN0ZXJzXCIpLHRoaXMuaW5Ob25BcnJvd0Z1bmN0aW9uKCl8fHRoaXMucmFpc2VSZWNvdmVyYWJsZShub2RlLnN0YXJ0LFwiJ25ldy50YXJnZXQnIGNhbiBvbmx5IGJlIHVzZWQgaW4gZnVuY3Rpb25zXCIpLHRoaXMuZmluaXNoTm9kZShub2RlLFwiTWV0YVByb3BlcnR5XCIpfXZhciBzdGFydFBvcz10aGlzLnN0YXJ0LHN0YXJ0TG9jPXRoaXMuc3RhcnRMb2MsaXNJbXBvcnQ9dGhpcy50eXBlPT09dHlwZXMuX2ltcG9ydDtyZXR1cm4gbm9kZS5jYWxsZWU9dGhpcy5wYXJzZVN1YnNjcmlwdHModGhpcy5wYXJzZUV4cHJBdG9tKCksc3RhcnRQb3Msc3RhcnRMb2MsITApLGlzSW1wb3J0JiZub2RlLmNhbGxlZS50eXBlPT09XCJJbXBvcnRFeHByZXNzaW9uXCImJnRoaXMucmFpc2Uoc3RhcnRQb3MsXCJDYW5ub3QgdXNlIG5ldyB3aXRoIGltcG9ydCgpXCIpLHRoaXMuZWF0KHR5cGVzLnBhcmVuTCk/bm9kZS5hcmd1bWVudHM9dGhpcy5wYXJzZUV4cHJMaXN0KHR5cGVzLnBhcmVuUix0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTgsITEpOm5vZGUuYXJndW1lbnRzPWVtcHR5JDEsdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJOZXdFeHByZXNzaW9uXCIpfTtwcCQzLnBhcnNlVGVtcGxhdGVFbGVtZW50PWZ1bmN0aW9uKHJlZjIpe3ZhciBpc1RhZ2dlZD1yZWYyLmlzVGFnZ2VkLGVsZW09dGhpcy5zdGFydE5vZGUoKTtyZXR1cm4gdGhpcy50eXBlPT09dHlwZXMuaW52YWxpZFRlbXBsYXRlPyhpc1RhZ2dlZHx8dGhpcy5yYWlzZVJlY292ZXJhYmxlKHRoaXMuc3RhcnQsXCJCYWQgZXNjYXBlIHNlcXVlbmNlIGluIHVudGFnZ2VkIHRlbXBsYXRlIGxpdGVyYWxcIiksZWxlbS52YWx1ZT17cmF3OnRoaXMudmFsdWUsY29va2VkOm51bGx9KTplbGVtLnZhbHVlPXtyYXc6dGhpcy5pbnB1dC5zbGljZSh0aGlzLnN0YXJ0LHRoaXMuZW5kKS5yZXBsYWNlKC9cXHJcXG4/L2csYFxuYCksY29va2VkOnRoaXMudmFsdWV9LHRoaXMubmV4dCgpLGVsZW0udGFpbD10aGlzLnR5cGU9PT10eXBlcy5iYWNrUXVvdGUsdGhpcy5maW5pc2hOb2RlKGVsZW0sXCJUZW1wbGF0ZUVsZW1lbnRcIil9O3BwJDMucGFyc2VUZW1wbGF0ZT1mdW5jdGlvbihyZWYyKXtyZWYyPT09dm9pZCAwJiYocmVmMj17fSk7dmFyIGlzVGFnZ2VkPXJlZjIuaXNUYWdnZWQ7aXNUYWdnZWQ9PT12b2lkIDAmJihpc1RhZ2dlZD0hMSk7dmFyIG5vZGU9dGhpcy5zdGFydE5vZGUoKTt0aGlzLm5leHQoKSxub2RlLmV4cHJlc3Npb25zPVtdO3ZhciBjdXJFbHQ9dGhpcy5wYXJzZVRlbXBsYXRlRWxlbWVudCh7aXNUYWdnZWR9KTtmb3Iobm9kZS5xdWFzaXM9W2N1ckVsdF07IWN1ckVsdC50YWlsOyl0aGlzLnR5cGU9PT10eXBlcy5lb2YmJnRoaXMucmFpc2UodGhpcy5wb3MsXCJVbnRlcm1pbmF0ZWQgdGVtcGxhdGUgbGl0ZXJhbFwiKSx0aGlzLmV4cGVjdCh0eXBlcy5kb2xsYXJCcmFjZUwpLG5vZGUuZXhwcmVzc2lvbnMucHVzaCh0aGlzLnBhcnNlRXhwcmVzc2lvbigpKSx0aGlzLmV4cGVjdCh0eXBlcy5icmFjZVIpLG5vZGUucXVhc2lzLnB1c2goY3VyRWx0PXRoaXMucGFyc2VUZW1wbGF0ZUVsZW1lbnQoe2lzVGFnZ2VkfSkpO3JldHVybiB0aGlzLm5leHQoKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIlRlbXBsYXRlTGl0ZXJhbFwiKX07cHAkMy5pc0FzeW5jUHJvcD1mdW5jdGlvbihwcm9wKXtyZXR1cm4gIXByb3AuY29tcHV0ZWQmJnByb3Aua2V5LnR5cGU9PT1cIklkZW50aWZpZXJcIiYmcHJvcC5rZXkubmFtZT09PVwiYXN5bmNcIiYmKHRoaXMudHlwZT09PXR5cGVzLm5hbWV8fHRoaXMudHlwZT09PXR5cGVzLm51bXx8dGhpcy50eXBlPT09dHlwZXMuc3RyaW5nfHx0aGlzLnR5cGU9PT10eXBlcy5icmFja2V0THx8dGhpcy50eXBlLmtleXdvcmR8fHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OSYmdGhpcy50eXBlPT09dHlwZXMuc3RhcikmJiFsaW5lQnJlYWsudGVzdCh0aGlzLmlucHV0LnNsaWNlKHRoaXMubGFzdFRva0VuZCx0aGlzLnN0YXJ0KSl9O3BwJDMucGFyc2VPYmo9ZnVuY3Rpb24oaXNQYXR0ZXJuLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpe3ZhciBub2RlPXRoaXMuc3RhcnROb2RlKCksZmlyc3Q9ITAscHJvcEhhc2g9e307Zm9yKG5vZGUucHJvcGVydGllcz1bXSx0aGlzLm5leHQoKTshdGhpcy5lYXQodHlwZXMuYnJhY2VSKTspe2lmKGZpcnN0KWZpcnN0PSExO2Vsc2UgaWYodGhpcy5leHBlY3QodHlwZXMuY29tbWEpLHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49NSYmdGhpcy5hZnRlclRyYWlsaW5nQ29tbWEodHlwZXMuYnJhY2VSKSlicmVhazt2YXIgcHJvcD10aGlzLnBhcnNlUHJvcGVydHkoaXNQYXR0ZXJuLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpO2lzUGF0dGVybnx8dGhpcy5jaGVja1Byb3BDbGFzaChwcm9wLHByb3BIYXNoLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpLG5vZGUucHJvcGVydGllcy5wdXNoKHByb3ApO31yZXR1cm4gdGhpcy5maW5pc2hOb2RlKG5vZGUsaXNQYXR0ZXJuP1wiT2JqZWN0UGF0dGVyblwiOlwiT2JqZWN0RXhwcmVzc2lvblwiKX07cHAkMy5wYXJzZVByb3BlcnR5PWZ1bmN0aW9uKGlzUGF0dGVybixyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKXt2YXIgcHJvcD10aGlzLnN0YXJ0Tm9kZSgpLGlzR2VuZXJhdG9yLGlzQXN5bmMsc3RhcnRQb3Msc3RhcnRMb2M7aWYodGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj05JiZ0aGlzLmVhdCh0eXBlcy5lbGxpcHNpcykpcmV0dXJuIGlzUGF0dGVybj8ocHJvcC5hcmd1bWVudD10aGlzLnBhcnNlSWRlbnQoITEpLHRoaXMudHlwZT09PXR5cGVzLmNvbW1hJiZ0aGlzLnJhaXNlKHRoaXMuc3RhcnQsXCJDb21tYSBpcyBub3QgcGVybWl0dGVkIGFmdGVyIHRoZSByZXN0IGVsZW1lbnRcIiksdGhpcy5maW5pc2hOb2RlKHByb3AsXCJSZXN0RWxlbWVudFwiKSk6KHRoaXMudHlwZT09PXR5cGVzLnBhcmVuTCYmcmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyYmKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMucGFyZW50aGVzaXplZEFzc2lnbjwwJiYocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycy5wYXJlbnRoZXNpemVkQXNzaWduPXRoaXMuc3RhcnQpLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMucGFyZW50aGVzaXplZEJpbmQ8MCYmKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMucGFyZW50aGVzaXplZEJpbmQ9dGhpcy5zdGFydCkpLHByb3AuYXJndW1lbnQ9dGhpcy5wYXJzZU1heWJlQXNzaWduKCExLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpLHRoaXMudHlwZT09PXR5cGVzLmNvbW1hJiZyZWZEZXN0cnVjdHVyaW5nRXJyb3JzJiZyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnRyYWlsaW5nQ29tbWE8MCYmKHJlZkRlc3RydWN0dXJpbmdFcnJvcnMudHJhaWxpbmdDb21tYT10aGlzLnN0YXJ0KSx0aGlzLmZpbmlzaE5vZGUocHJvcCxcIlNwcmVhZEVsZW1lbnRcIikpO3RoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49NiYmKHByb3AubWV0aG9kPSExLHByb3Auc2hvcnRoYW5kPSExLChpc1BhdHRlcm58fHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpJiYoc3RhcnRQb3M9dGhpcy5zdGFydCxzdGFydExvYz10aGlzLnN0YXJ0TG9jKSxpc1BhdHRlcm58fChpc0dlbmVyYXRvcj10aGlzLmVhdCh0eXBlcy5zdGFyKSkpO3ZhciBjb250YWluc0VzYz10aGlzLmNvbnRhaW5zRXNjO3JldHVybiB0aGlzLnBhcnNlUHJvcGVydHlOYW1lKHByb3ApLCFpc1BhdHRlcm4mJiFjb250YWluc0VzYyYmdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj04JiYhaXNHZW5lcmF0b3ImJnRoaXMuaXNBc3luY1Byb3AocHJvcCk/KGlzQXN5bmM9ITAsaXNHZW5lcmF0b3I9dGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj05JiZ0aGlzLmVhdCh0eXBlcy5zdGFyKSx0aGlzLnBhcnNlUHJvcGVydHlOYW1lKHByb3AscmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycykpOmlzQXN5bmM9ITEsdGhpcy5wYXJzZVByb3BlcnR5VmFsdWUocHJvcCxpc1BhdHRlcm4saXNHZW5lcmF0b3IsaXNBc3luYyxzdGFydFBvcyxzdGFydExvYyxyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLGNvbnRhaW5zRXNjKSx0aGlzLmZpbmlzaE5vZGUocHJvcCxcIlByb3BlcnR5XCIpfTtwcCQzLnBhcnNlUHJvcGVydHlWYWx1ZT1mdW5jdGlvbihwcm9wLGlzUGF0dGVybixpc0dlbmVyYXRvcixpc0FzeW5jLHN0YXJ0UG9zLHN0YXJ0TG9jLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMsY29udGFpbnNFc2Mpe2lmKChpc0dlbmVyYXRvcnx8aXNBc3luYykmJnRoaXMudHlwZT09PXR5cGVzLmNvbG9uJiZ0aGlzLnVuZXhwZWN0ZWQoKSx0aGlzLmVhdCh0eXBlcy5jb2xvbikpcHJvcC52YWx1ZT1pc1BhdHRlcm4/dGhpcy5wYXJzZU1heWJlRGVmYXVsdCh0aGlzLnN0YXJ0LHRoaXMuc3RhcnRMb2MpOnRoaXMucGFyc2VNYXliZUFzc2lnbighMSxyZWZEZXN0cnVjdHVyaW5nRXJyb3JzKSxwcm9wLmtpbmQ9XCJpbml0XCI7ZWxzZSBpZih0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTYmJnRoaXMudHlwZT09PXR5cGVzLnBhcmVuTClpc1BhdHRlcm4mJnRoaXMudW5leHBlY3RlZCgpLHByb3Aua2luZD1cImluaXRcIixwcm9wLm1ldGhvZD0hMCxwcm9wLnZhbHVlPXRoaXMucGFyc2VNZXRob2QoaXNHZW5lcmF0b3IsaXNBc3luYyk7ZWxzZSBpZighaXNQYXR0ZXJuJiYhY29udGFpbnNFc2MmJnRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49NSYmIXByb3AuY29tcHV0ZWQmJnByb3Aua2V5LnR5cGU9PT1cIklkZW50aWZpZXJcIiYmKHByb3Aua2V5Lm5hbWU9PT1cImdldFwifHxwcm9wLmtleS5uYW1lPT09XCJzZXRcIikmJnRoaXMudHlwZSE9PXR5cGVzLmNvbW1hJiZ0aGlzLnR5cGUhPT10eXBlcy5icmFjZVImJnRoaXMudHlwZSE9PXR5cGVzLmVxKXsoaXNHZW5lcmF0b3J8fGlzQXN5bmMpJiZ0aGlzLnVuZXhwZWN0ZWQoKSxwcm9wLmtpbmQ9cHJvcC5rZXkubmFtZSx0aGlzLnBhcnNlUHJvcGVydHlOYW1lKHByb3ApLHByb3AudmFsdWU9dGhpcy5wYXJzZU1ldGhvZCghMSk7dmFyIHBhcmFtQ291bnQ9cHJvcC5raW5kPT09XCJnZXRcIj8wOjE7aWYocHJvcC52YWx1ZS5wYXJhbXMubGVuZ3RoIT09cGFyYW1Db3VudCl7dmFyIHN0YXJ0PXByb3AudmFsdWUuc3RhcnQ7cHJvcC5raW5kPT09XCJnZXRcIj90aGlzLnJhaXNlUmVjb3ZlcmFibGUoc3RhcnQsXCJnZXR0ZXIgc2hvdWxkIGhhdmUgbm8gcGFyYW1zXCIpOnRoaXMucmFpc2VSZWNvdmVyYWJsZShzdGFydCxcInNldHRlciBzaG91bGQgaGF2ZSBleGFjdGx5IG9uZSBwYXJhbVwiKTt9ZWxzZSBwcm9wLmtpbmQ9PT1cInNldFwiJiZwcm9wLnZhbHVlLnBhcmFtc1swXS50eXBlPT09XCJSZXN0RWxlbWVudFwiJiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUocHJvcC52YWx1ZS5wYXJhbXNbMF0uc3RhcnQsXCJTZXR0ZXIgY2Fubm90IHVzZSByZXN0IHBhcmFtc1wiKTt9ZWxzZSB0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTYmJiFwcm9wLmNvbXB1dGVkJiZwcm9wLmtleS50eXBlPT09XCJJZGVudGlmaWVyXCI/KChpc0dlbmVyYXRvcnx8aXNBc3luYykmJnRoaXMudW5leHBlY3RlZCgpLHRoaXMuY2hlY2tVbnJlc2VydmVkKHByb3Aua2V5KSxwcm9wLmtleS5uYW1lPT09XCJhd2FpdFwiJiYhdGhpcy5hd2FpdElkZW50UG9zJiYodGhpcy5hd2FpdElkZW50UG9zPXN0YXJ0UG9zKSxwcm9wLmtpbmQ9XCJpbml0XCIsaXNQYXR0ZXJuP3Byb3AudmFsdWU9dGhpcy5wYXJzZU1heWJlRGVmYXVsdChzdGFydFBvcyxzdGFydExvYyxwcm9wLmtleSk6dGhpcy50eXBlPT09dHlwZXMuZXEmJnJlZkRlc3RydWN0dXJpbmdFcnJvcnM/KHJlZkRlc3RydWN0dXJpbmdFcnJvcnMuc2hvcnRoYW5kQXNzaWduPDAmJihyZWZEZXN0cnVjdHVyaW5nRXJyb3JzLnNob3J0aGFuZEFzc2lnbj10aGlzLnN0YXJ0KSxwcm9wLnZhbHVlPXRoaXMucGFyc2VNYXliZURlZmF1bHQoc3RhcnRQb3Msc3RhcnRMb2MscHJvcC5rZXkpKTpwcm9wLnZhbHVlPXByb3Aua2V5LHByb3Auc2hvcnRoYW5kPSEwKTp0aGlzLnVuZXhwZWN0ZWQoKTt9O3BwJDMucGFyc2VQcm9wZXJ0eU5hbWU9ZnVuY3Rpb24ocHJvcCl7aWYodGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj02KXtpZih0aGlzLmVhdCh0eXBlcy5icmFja2V0TCkpcmV0dXJuIHByb3AuY29tcHV0ZWQ9ITAscHJvcC5rZXk9dGhpcy5wYXJzZU1heWJlQXNzaWduKCksdGhpcy5leHBlY3QodHlwZXMuYnJhY2tldFIpLHByb3Aua2V5O3Byb3AuY29tcHV0ZWQ9ITE7fXJldHVybiBwcm9wLmtleT10aGlzLnR5cGU9PT10eXBlcy5udW18fHRoaXMudHlwZT09PXR5cGVzLnN0cmluZz90aGlzLnBhcnNlRXhwckF0b20oKTp0aGlzLnBhcnNlSWRlbnQodGhpcy5vcHRpb25zLmFsbG93UmVzZXJ2ZWQhPT1cIm5ldmVyXCIpfTtwcCQzLmluaXRGdW5jdGlvbj1mdW5jdGlvbihub2RlKXtub2RlLmlkPW51bGwsdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj02JiYobm9kZS5nZW5lcmF0b3I9bm9kZS5leHByZXNzaW9uPSExKSx0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTgmJihub2RlLmFzeW5jPSExKTt9O3BwJDMucGFyc2VNZXRob2Q9ZnVuY3Rpb24oaXNHZW5lcmF0b3IsaXNBc3luYyxhbGxvd0RpcmVjdFN1cGVyKXt2YXIgbm9kZT10aGlzLnN0YXJ0Tm9kZSgpLG9sZFlpZWxkUG9zPXRoaXMueWllbGRQb3Msb2xkQXdhaXRQb3M9dGhpcy5hd2FpdFBvcyxvbGRBd2FpdElkZW50UG9zPXRoaXMuYXdhaXRJZGVudFBvcztyZXR1cm4gdGhpcy5pbml0RnVuY3Rpb24obm9kZSksdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj02JiYobm9kZS5nZW5lcmF0b3I9aXNHZW5lcmF0b3IpLHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OCYmKG5vZGUuYXN5bmM9ISFpc0FzeW5jKSx0aGlzLnlpZWxkUG9zPTAsdGhpcy5hd2FpdFBvcz0wLHRoaXMuYXdhaXRJZGVudFBvcz0wLHRoaXMuZW50ZXJTY29wZShmdW5jdGlvbkZsYWdzKGlzQXN5bmMsbm9kZS5nZW5lcmF0b3IpfFNDT1BFX1NVUEVSfChhbGxvd0RpcmVjdFN1cGVyP1NDT1BFX0RJUkVDVF9TVVBFUjowKSksdGhpcy5leHBlY3QodHlwZXMucGFyZW5MKSxub2RlLnBhcmFtcz10aGlzLnBhcnNlQmluZGluZ0xpc3QodHlwZXMucGFyZW5SLCExLHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OCksdGhpcy5jaGVja1lpZWxkQXdhaXRJbkRlZmF1bHRQYXJhbXMoKSx0aGlzLnBhcnNlRnVuY3Rpb25Cb2R5KG5vZGUsITEsITApLHRoaXMueWllbGRQb3M9b2xkWWllbGRQb3MsdGhpcy5hd2FpdFBvcz1vbGRBd2FpdFBvcyx0aGlzLmF3YWl0SWRlbnRQb3M9b2xkQXdhaXRJZGVudFBvcyx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkZ1bmN0aW9uRXhwcmVzc2lvblwiKX07cHAkMy5wYXJzZUFycm93RXhwcmVzc2lvbj1mdW5jdGlvbihub2RlLHBhcmFtcyxpc0FzeW5jKXt2YXIgb2xkWWllbGRQb3M9dGhpcy55aWVsZFBvcyxvbGRBd2FpdFBvcz10aGlzLmF3YWl0UG9zLG9sZEF3YWl0SWRlbnRQb3M9dGhpcy5hd2FpdElkZW50UG9zO3JldHVybiB0aGlzLmVudGVyU2NvcGUoZnVuY3Rpb25GbGFncyhpc0FzeW5jLCExKXxTQ09QRV9BUlJPVyksdGhpcy5pbml0RnVuY3Rpb24obm9kZSksdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj04JiYobm9kZS5hc3luYz0hIWlzQXN5bmMpLHRoaXMueWllbGRQb3M9MCx0aGlzLmF3YWl0UG9zPTAsdGhpcy5hd2FpdElkZW50UG9zPTAsbm9kZS5wYXJhbXM9dGhpcy50b0Fzc2lnbmFibGVMaXN0KHBhcmFtcywhMCksdGhpcy5wYXJzZUZ1bmN0aW9uQm9keShub2RlLCEwLCExKSx0aGlzLnlpZWxkUG9zPW9sZFlpZWxkUG9zLHRoaXMuYXdhaXRQb3M9b2xkQXdhaXRQb3MsdGhpcy5hd2FpdElkZW50UG9zPW9sZEF3YWl0SWRlbnRQb3MsdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJBcnJvd0Z1bmN0aW9uRXhwcmVzc2lvblwiKX07cHAkMy5wYXJzZUZ1bmN0aW9uQm9keT1mdW5jdGlvbihub2RlLGlzQXJyb3dGdW5jdGlvbixpc01ldGhvZCl7dmFyIGlzRXhwcmVzc2lvbj1pc0Fycm93RnVuY3Rpb24mJnRoaXMudHlwZSE9PXR5cGVzLmJyYWNlTCxvbGRTdHJpY3Q9dGhpcy5zdHJpY3QsdXNlU3RyaWN0PSExO2lmKGlzRXhwcmVzc2lvbilub2RlLmJvZHk9dGhpcy5wYXJzZU1heWJlQXNzaWduKCksbm9kZS5leHByZXNzaW9uPSEwLHRoaXMuY2hlY2tQYXJhbXMobm9kZSwhMSk7ZWxzZSB7dmFyIG5vblNpbXBsZT10aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTcmJiF0aGlzLmlzU2ltcGxlUGFyYW1MaXN0KG5vZGUucGFyYW1zKTsoIW9sZFN0cmljdHx8bm9uU2ltcGxlKSYmKHVzZVN0cmljdD10aGlzLnN0cmljdERpcmVjdGl2ZSh0aGlzLmVuZCksdXNlU3RyaWN0JiZub25TaW1wbGUmJnRoaXMucmFpc2VSZWNvdmVyYWJsZShub2RlLnN0YXJ0LFwiSWxsZWdhbCAndXNlIHN0cmljdCcgZGlyZWN0aXZlIGluIGZ1bmN0aW9uIHdpdGggbm9uLXNpbXBsZSBwYXJhbWV0ZXIgbGlzdFwiKSk7dmFyIG9sZExhYmVscz10aGlzLmxhYmVsczt0aGlzLmxhYmVscz1bXSx1c2VTdHJpY3QmJih0aGlzLnN0cmljdD0hMCksdGhpcy5jaGVja1BhcmFtcyhub2RlLCFvbGRTdHJpY3QmJiF1c2VTdHJpY3QmJiFpc0Fycm93RnVuY3Rpb24mJiFpc01ldGhvZCYmdGhpcy5pc1NpbXBsZVBhcmFtTGlzdChub2RlLnBhcmFtcykpLHRoaXMuc3RyaWN0JiZub2RlLmlkJiZ0aGlzLmNoZWNrTFZhbChub2RlLmlkLEJJTkRfT1VUU0lERSksbm9kZS5ib2R5PXRoaXMucGFyc2VCbG9jayghMSx2b2lkIDAsdXNlU3RyaWN0JiYhb2xkU3RyaWN0KSxub2RlLmV4cHJlc3Npb249ITEsdGhpcy5hZGFwdERpcmVjdGl2ZVByb2xvZ3VlKG5vZGUuYm9keS5ib2R5KSx0aGlzLmxhYmVscz1vbGRMYWJlbHM7fXRoaXMuZXhpdFNjb3BlKCk7fTtwcCQzLmlzU2ltcGxlUGFyYW1MaXN0PWZ1bmN0aW9uKHBhcmFtcyl7Zm9yKHZhciBpPTAsbGlzdD1wYXJhbXM7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgcGFyYW09bGlzdFtpXTtpZihwYXJhbS50eXBlIT09XCJJZGVudGlmaWVyXCIpcmV0dXJuICExfXJldHVybiAhMH07cHAkMy5jaGVja1BhcmFtcz1mdW5jdGlvbihub2RlLGFsbG93RHVwbGljYXRlcyl7Zm9yKHZhciBuYW1lSGFzaD17fSxpPTAsbGlzdD1ub2RlLnBhcmFtcztpPGxpc3QubGVuZ3RoO2krPTEpe3ZhciBwYXJhbT1saXN0W2ldO3RoaXMuY2hlY2tMVmFsKHBhcmFtLEJJTkRfVkFSLGFsbG93RHVwbGljYXRlcz9udWxsOm5hbWVIYXNoKTt9fTtwcCQzLnBhcnNlRXhwckxpc3Q9ZnVuY3Rpb24oY2xvc2UsYWxsb3dUcmFpbGluZ0NvbW1hLGFsbG93RW1wdHkscmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyl7Zm9yKHZhciBlbHRzPVtdLGZpcnN0PSEwOyF0aGlzLmVhdChjbG9zZSk7KXtpZihmaXJzdClmaXJzdD0hMTtlbHNlIGlmKHRoaXMuZXhwZWN0KHR5cGVzLmNvbW1hKSxhbGxvd1RyYWlsaW5nQ29tbWEmJnRoaXMuYWZ0ZXJUcmFpbGluZ0NvbW1hKGNsb3NlKSlicmVhazt2YXIgZWx0PXZvaWQgMDthbGxvd0VtcHR5JiZ0aGlzLnR5cGU9PT10eXBlcy5jb21tYT9lbHQ9bnVsbDp0aGlzLnR5cGU9PT10eXBlcy5lbGxpcHNpcz8oZWx0PXRoaXMucGFyc2VTcHJlYWQocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycykscmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycyYmdGhpcy50eXBlPT09dHlwZXMuY29tbWEmJnJlZkRlc3RydWN0dXJpbmdFcnJvcnMudHJhaWxpbmdDb21tYTwwJiYocmVmRGVzdHJ1Y3R1cmluZ0Vycm9ycy50cmFpbGluZ0NvbW1hPXRoaXMuc3RhcnQpKTplbHQ9dGhpcy5wYXJzZU1heWJlQXNzaWduKCExLHJlZkRlc3RydWN0dXJpbmdFcnJvcnMpLGVsdHMucHVzaChlbHQpO31yZXR1cm4gZWx0c307cHAkMy5jaGVja1VucmVzZXJ2ZWQ9ZnVuY3Rpb24ocmVmMil7dmFyIHN0YXJ0PXJlZjIuc3RhcnQsZW5kPXJlZjIuZW5kLG5hbWU9cmVmMi5uYW1lO2lmKHRoaXMuaW5HZW5lcmF0b3ImJm5hbWU9PT1cInlpZWxkXCImJnRoaXMucmFpc2VSZWNvdmVyYWJsZShzdGFydCxcIkNhbm5vdCB1c2UgJ3lpZWxkJyBhcyBpZGVudGlmaWVyIGluc2lkZSBhIGdlbmVyYXRvclwiKSx0aGlzLmluQXN5bmMmJm5hbWU9PT1cImF3YWl0XCImJnRoaXMucmFpc2VSZWNvdmVyYWJsZShzdGFydCxcIkNhbm5vdCB1c2UgJ2F3YWl0JyBhcyBpZGVudGlmaWVyIGluc2lkZSBhbiBhc3luYyBmdW5jdGlvblwiKSx0aGlzLmtleXdvcmRzLnRlc3QobmFtZSkmJnRoaXMucmFpc2Uoc3RhcnQsXCJVbmV4cGVjdGVkIGtleXdvcmQgJ1wiK25hbWUrXCInXCIpLCEodGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPDYmJnRoaXMuaW5wdXQuc2xpY2Uoc3RhcnQsZW5kKS5pbmRleE9mKFwiXFxcXFwiKSE9PS0xKSl7dmFyIHJlPXRoaXMuc3RyaWN0P3RoaXMucmVzZXJ2ZWRXb3Jkc1N0cmljdDp0aGlzLnJlc2VydmVkV29yZHM7cmUudGVzdChuYW1lKSYmKCF0aGlzLmluQXN5bmMmJm5hbWU9PT1cImF3YWl0XCImJnRoaXMucmFpc2VSZWNvdmVyYWJsZShzdGFydCxcIkNhbm5vdCB1c2Uga2V5d29yZCAnYXdhaXQnIG91dHNpZGUgYW4gYXN5bmMgZnVuY3Rpb25cIiksdGhpcy5yYWlzZVJlY292ZXJhYmxlKHN0YXJ0LFwiVGhlIGtleXdvcmQgJ1wiK25hbWUrXCInIGlzIHJlc2VydmVkXCIpKTt9fTtwcCQzLnBhcnNlSWRlbnQ9ZnVuY3Rpb24obGliZXJhbCxpc0JpbmRpbmcpe3ZhciBub2RlPXRoaXMuc3RhcnROb2RlKCk7cmV0dXJuIHRoaXMudHlwZT09PXR5cGVzLm5hbWU/bm9kZS5uYW1lPXRoaXMudmFsdWU6dGhpcy50eXBlLmtleXdvcmQ/KG5vZGUubmFtZT10aGlzLnR5cGUua2V5d29yZCwobm9kZS5uYW1lPT09XCJjbGFzc1wifHxub2RlLm5hbWU9PT1cImZ1bmN0aW9uXCIpJiYodGhpcy5sYXN0VG9rRW5kIT09dGhpcy5sYXN0VG9rU3RhcnQrMXx8dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMubGFzdFRva1N0YXJ0KSE9PTQ2KSYmdGhpcy5jb250ZXh0LnBvcCgpKTp0aGlzLnVuZXhwZWN0ZWQoKSx0aGlzLm5leHQoISFsaWJlcmFsKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIklkZW50aWZpZXJcIiksbGliZXJhbHx8KHRoaXMuY2hlY2tVbnJlc2VydmVkKG5vZGUpLG5vZGUubmFtZT09PVwiYXdhaXRcIiYmIXRoaXMuYXdhaXRJZGVudFBvcyYmKHRoaXMuYXdhaXRJZGVudFBvcz1ub2RlLnN0YXJ0KSksbm9kZX07cHAkMy5wYXJzZVlpZWxkPWZ1bmN0aW9uKG5vSW4pe3RoaXMueWllbGRQb3N8fCh0aGlzLnlpZWxkUG9zPXRoaXMuc3RhcnQpO3ZhciBub2RlPXRoaXMuc3RhcnROb2RlKCk7cmV0dXJuIHRoaXMubmV4dCgpLHRoaXMudHlwZT09PXR5cGVzLnNlbWl8fHRoaXMuY2FuSW5zZXJ0U2VtaWNvbG9uKCl8fHRoaXMudHlwZSE9PXR5cGVzLnN0YXImJiF0aGlzLnR5cGUuc3RhcnRzRXhwcj8obm9kZS5kZWxlZ2F0ZT0hMSxub2RlLmFyZ3VtZW50PW51bGwpOihub2RlLmRlbGVnYXRlPXRoaXMuZWF0KHR5cGVzLnN0YXIpLG5vZGUuYXJndW1lbnQ9dGhpcy5wYXJzZU1heWJlQXNzaWduKG5vSW4pKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIllpZWxkRXhwcmVzc2lvblwiKX07cHAkMy5wYXJzZUF3YWl0PWZ1bmN0aW9uKCl7dGhpcy5hd2FpdFBvc3x8KHRoaXMuYXdhaXRQb3M9dGhpcy5zdGFydCk7dmFyIG5vZGU9dGhpcy5zdGFydE5vZGUoKTtyZXR1cm4gdGhpcy5uZXh0KCksbm9kZS5hcmd1bWVudD10aGlzLnBhcnNlTWF5YmVVbmFyeShudWxsLCExKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkF3YWl0RXhwcmVzc2lvblwiKX07cHAkND1QYXJzZXIucHJvdG90eXBlO3BwJDQucmFpc2U9ZnVuY3Rpb24ocG9zLG1lc3NhZ2Upe3ZhciBsb2M9Z2V0TGluZUluZm8odGhpcy5pbnB1dCxwb3MpO21lc3NhZ2UrPVwiIChcIitsb2MubGluZStcIjpcIitsb2MuY29sdW1uK1wiKVwiO3ZhciBlcnI9bmV3IFN5bnRheEVycm9yKG1lc3NhZ2UpO3Rocm93IGVyci5wb3M9cG9zLGVyci5sb2M9bG9jLGVyci5yYWlzZWRBdD10aGlzLnBvcyxlcnJ9O3BwJDQucmFpc2VSZWNvdmVyYWJsZT1wcCQ0LnJhaXNlO3BwJDQuY3VyUG9zaXRpb249ZnVuY3Rpb24oKXtpZih0aGlzLm9wdGlvbnMubG9jYXRpb25zKXJldHVybiBuZXcgUG9zaXRpb24odGhpcy5jdXJMaW5lLHRoaXMucG9zLXRoaXMubGluZVN0YXJ0KX07cHAkNT1QYXJzZXIucHJvdG90eXBlLFNjb3BlPWZ1bmN0aW9uKGZsYWdzKXt0aGlzLmZsYWdzPWZsYWdzLHRoaXMudmFyPVtdLHRoaXMubGV4aWNhbD1bXSx0aGlzLmZ1bmN0aW9ucz1bXTt9O3BwJDUuZW50ZXJTY29wZT1mdW5jdGlvbihmbGFncyl7dGhpcy5zY29wZVN0YWNrLnB1c2gobmV3IFNjb3BlKGZsYWdzKSk7fTtwcCQ1LmV4aXRTY29wZT1mdW5jdGlvbigpe3RoaXMuc2NvcGVTdGFjay5wb3AoKTt9O3BwJDUudHJlYXRGdW5jdGlvbnNBc1ZhckluU2NvcGU9ZnVuY3Rpb24oc2NvcGUpe3JldHVybiBzY29wZS5mbGFncyZTQ09QRV9GVU5DVElPTnx8IXRoaXMuaW5Nb2R1bGUmJnNjb3BlLmZsYWdzJlNDT1BFX1RPUH07cHAkNS5kZWNsYXJlTmFtZT1mdW5jdGlvbihuYW1lLGJpbmRpbmdUeXBlLHBvcyl7dmFyIHJlZGVjbGFyZWQ9ITE7aWYoYmluZGluZ1R5cGU9PT1CSU5EX0xFWElDQUwpe3ZhciBzY29wZT10aGlzLmN1cnJlbnRTY29wZSgpO3JlZGVjbGFyZWQ9c2NvcGUubGV4aWNhbC5pbmRleE9mKG5hbWUpPi0xfHxzY29wZS5mdW5jdGlvbnMuaW5kZXhPZihuYW1lKT4tMXx8c2NvcGUudmFyLmluZGV4T2YobmFtZSk+LTEsc2NvcGUubGV4aWNhbC5wdXNoKG5hbWUpLHRoaXMuaW5Nb2R1bGUmJnNjb3BlLmZsYWdzJlNDT1BFX1RPUCYmZGVsZXRlIHRoaXMudW5kZWZpbmVkRXhwb3J0c1tuYW1lXTt9ZWxzZSBpZihiaW5kaW5nVHlwZT09PUJJTkRfU0lNUExFX0NBVENIKXt2YXIgc2NvcGUkMT10aGlzLmN1cnJlbnRTY29wZSgpO3Njb3BlJDEubGV4aWNhbC5wdXNoKG5hbWUpO31lbHNlIGlmKGJpbmRpbmdUeXBlPT09QklORF9GVU5DVElPTil7dmFyIHNjb3BlJDI9dGhpcy5jdXJyZW50U2NvcGUoKTt0aGlzLnRyZWF0RnVuY3Rpb25zQXNWYXI/cmVkZWNsYXJlZD1zY29wZSQyLmxleGljYWwuaW5kZXhPZihuYW1lKT4tMTpyZWRlY2xhcmVkPXNjb3BlJDIubGV4aWNhbC5pbmRleE9mKG5hbWUpPi0xfHxzY29wZSQyLnZhci5pbmRleE9mKG5hbWUpPi0xLHNjb3BlJDIuZnVuY3Rpb25zLnB1c2gobmFtZSk7fWVsc2UgZm9yKHZhciBpPXRoaXMuc2NvcGVTdGFjay5sZW5ndGgtMTtpPj0wOy0taSl7dmFyIHNjb3BlJDM9dGhpcy5zY29wZVN0YWNrW2ldO2lmKHNjb3BlJDMubGV4aWNhbC5pbmRleE9mKG5hbWUpPi0xJiYhKHNjb3BlJDMuZmxhZ3MmU0NPUEVfU0lNUExFX0NBVENIJiZzY29wZSQzLmxleGljYWxbMF09PT1uYW1lKXx8IXRoaXMudHJlYXRGdW5jdGlvbnNBc1ZhckluU2NvcGUoc2NvcGUkMykmJnNjb3BlJDMuZnVuY3Rpb25zLmluZGV4T2YobmFtZSk+LTEpe3JlZGVjbGFyZWQ9ITA7YnJlYWt9aWYoc2NvcGUkMy52YXIucHVzaChuYW1lKSx0aGlzLmluTW9kdWxlJiZzY29wZSQzLmZsYWdzJlNDT1BFX1RPUCYmZGVsZXRlIHRoaXMudW5kZWZpbmVkRXhwb3J0c1tuYW1lXSxzY29wZSQzLmZsYWdzJlNDT1BFX1ZBUilicmVha31yZWRlY2xhcmVkJiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUocG9zLFwiSWRlbnRpZmllciAnXCIrbmFtZStcIicgaGFzIGFscmVhZHkgYmVlbiBkZWNsYXJlZFwiKTt9O3BwJDUuY2hlY2tMb2NhbEV4cG9ydD1mdW5jdGlvbihpZCl7dGhpcy5zY29wZVN0YWNrWzBdLmxleGljYWwuaW5kZXhPZihpZC5uYW1lKT09PS0xJiZ0aGlzLnNjb3BlU3RhY2tbMF0udmFyLmluZGV4T2YoaWQubmFtZSk9PT0tMSYmKHRoaXMudW5kZWZpbmVkRXhwb3J0c1tpZC5uYW1lXT1pZCk7fTtwcCQ1LmN1cnJlbnRTY29wZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNjb3BlU3RhY2tbdGhpcy5zY29wZVN0YWNrLmxlbmd0aC0xXX07cHAkNS5jdXJyZW50VmFyU2NvcGU9ZnVuY3Rpb24oKXtmb3IodmFyIGk9dGhpcy5zY29wZVN0YWNrLmxlbmd0aC0xOztpLS0pe3ZhciBzY29wZT10aGlzLnNjb3BlU3RhY2tbaV07aWYoc2NvcGUuZmxhZ3MmU0NPUEVfVkFSKXJldHVybiBzY29wZX19O3BwJDUuY3VycmVudFRoaXNTY29wZT1mdW5jdGlvbigpe2Zvcih2YXIgaT10aGlzLnNjb3BlU3RhY2subGVuZ3RoLTE7O2ktLSl7dmFyIHNjb3BlPXRoaXMuc2NvcGVTdGFja1tpXTtpZihzY29wZS5mbGFncyZTQ09QRV9WQVImJiEoc2NvcGUuZmxhZ3MmU0NPUEVfQVJST1cpKXJldHVybiBzY29wZX19O05vZGU9ZnVuY3Rpb24ocGFyc2VyLHBvcyxsb2Mpe3RoaXMudHlwZT1cIlwiLHRoaXMuc3RhcnQ9cG9zLHRoaXMuZW5kPTAscGFyc2VyLm9wdGlvbnMubG9jYXRpb25zJiYodGhpcy5sb2M9bmV3IFNvdXJjZUxvY2F0aW9uKHBhcnNlcixsb2MpKSxwYXJzZXIub3B0aW9ucy5kaXJlY3RTb3VyY2VGaWxlJiYodGhpcy5zb3VyY2VGaWxlPXBhcnNlci5vcHRpb25zLmRpcmVjdFNvdXJjZUZpbGUpLHBhcnNlci5vcHRpb25zLnJhbmdlcyYmKHRoaXMucmFuZ2U9W3BvcywwXSk7fSxwcCQ2PVBhcnNlci5wcm90b3R5cGU7cHAkNi5zdGFydE5vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IE5vZGUodGhpcyx0aGlzLnN0YXJ0LHRoaXMuc3RhcnRMb2MpfTtwcCQ2LnN0YXJ0Tm9kZUF0PWZ1bmN0aW9uKHBvcyxsb2Mpe3JldHVybiBuZXcgTm9kZSh0aGlzLHBvcyxsb2MpfTtwcCQ2LmZpbmlzaE5vZGU9ZnVuY3Rpb24obm9kZSx0eXBlKXtyZXR1cm4gZmluaXNoTm9kZUF0LmNhbGwodGhpcyxub2RlLHR5cGUsdGhpcy5sYXN0VG9rRW5kLHRoaXMubGFzdFRva0VuZExvYyl9O3BwJDYuZmluaXNoTm9kZUF0PWZ1bmN0aW9uKG5vZGUsdHlwZSxwb3MsbG9jKXtyZXR1cm4gZmluaXNoTm9kZUF0LmNhbGwodGhpcyxub2RlLHR5cGUscG9zLGxvYyl9O1Rva0NvbnRleHQ9ZnVuY3Rpb24odG9rZW4saXNFeHByLHByZXNlcnZlU3BhY2Usb3ZlcnJpZGUsZ2VuZXJhdG9yKXt0aGlzLnRva2VuPXRva2VuLHRoaXMuaXNFeHByPSEhaXNFeHByLHRoaXMucHJlc2VydmVTcGFjZT0hIXByZXNlcnZlU3BhY2UsdGhpcy5vdmVycmlkZT1vdmVycmlkZSx0aGlzLmdlbmVyYXRvcj0hIWdlbmVyYXRvcjt9LHR5cGVzJDE9e2Jfc3RhdDpuZXcgVG9rQ29udGV4dChcIntcIiwhMSksYl9leHByOm5ldyBUb2tDb250ZXh0KFwie1wiLCEwKSxiX3RtcGw6bmV3IFRva0NvbnRleHQoXCIke1wiLCExKSxwX3N0YXQ6bmV3IFRva0NvbnRleHQoXCIoXCIsITEpLHBfZXhwcjpuZXcgVG9rQ29udGV4dChcIihcIiwhMCkscV90bXBsOm5ldyBUb2tDb250ZXh0KFwiYFwiLCEwLCEwLGZ1bmN0aW9uKHApe3JldHVybiBwLnRyeVJlYWRUZW1wbGF0ZVRva2VuKCl9KSxmX3N0YXQ6bmV3IFRva0NvbnRleHQoXCJmdW5jdGlvblwiLCExKSxmX2V4cHI6bmV3IFRva0NvbnRleHQoXCJmdW5jdGlvblwiLCEwKSxmX2V4cHJfZ2VuOm5ldyBUb2tDb250ZXh0KFwiZnVuY3Rpb25cIiwhMCwhMSxudWxsLCEwKSxmX2dlbjpuZXcgVG9rQ29udGV4dChcImZ1bmN0aW9uXCIsITEsITEsbnVsbCwhMCl9LHBwJDc9UGFyc2VyLnByb3RvdHlwZTtwcCQ3LmluaXRpYWxDb250ZXh0PWZ1bmN0aW9uKCl7cmV0dXJuIFt0eXBlcyQxLmJfc3RhdF19O3BwJDcuYnJhY2VJc0Jsb2NrPWZ1bmN0aW9uKHByZXZUeXBlKXt2YXIgcGFyZW50PXRoaXMuY3VyQ29udGV4dCgpO3JldHVybiBwYXJlbnQ9PT10eXBlcyQxLmZfZXhwcnx8cGFyZW50PT09dHlwZXMkMS5mX3N0YXQ/ITA6cHJldlR5cGU9PT10eXBlcy5jb2xvbiYmKHBhcmVudD09PXR5cGVzJDEuYl9zdGF0fHxwYXJlbnQ9PT10eXBlcyQxLmJfZXhwcik/IXBhcmVudC5pc0V4cHI6cHJldlR5cGU9PT10eXBlcy5fcmV0dXJufHxwcmV2VHlwZT09PXR5cGVzLm5hbWUmJnRoaXMuZXhwckFsbG93ZWQ/bGluZUJyZWFrLnRlc3QodGhpcy5pbnB1dC5zbGljZSh0aGlzLmxhc3RUb2tFbmQsdGhpcy5zdGFydCkpOnByZXZUeXBlPT09dHlwZXMuX2Vsc2V8fHByZXZUeXBlPT09dHlwZXMuc2VtaXx8cHJldlR5cGU9PT10eXBlcy5lb2Z8fHByZXZUeXBlPT09dHlwZXMucGFyZW5SfHxwcmV2VHlwZT09PXR5cGVzLmFycm93PyEwOnByZXZUeXBlPT09dHlwZXMuYnJhY2VMP3BhcmVudD09PXR5cGVzJDEuYl9zdGF0OnByZXZUeXBlPT09dHlwZXMuX3Zhcnx8cHJldlR5cGU9PT10eXBlcy5fY29uc3R8fHByZXZUeXBlPT09dHlwZXMubmFtZT8hMTohdGhpcy5leHByQWxsb3dlZH07cHAkNy5pbkdlbmVyYXRvckNvbnRleHQ9ZnVuY3Rpb24oKXtmb3IodmFyIGk9dGhpcy5jb250ZXh0Lmxlbmd0aC0xO2k+PTE7aS0tKXt2YXIgY29udGV4dD10aGlzLmNvbnRleHRbaV07aWYoY29udGV4dC50b2tlbj09PVwiZnVuY3Rpb25cIilyZXR1cm4gY29udGV4dC5nZW5lcmF0b3J9cmV0dXJuICExfTtwcCQ3LnVwZGF0ZUNvbnRleHQ9ZnVuY3Rpb24ocHJldlR5cGUpe3ZhciB1cGRhdGUsdHlwZT10aGlzLnR5cGU7dHlwZS5rZXl3b3JkJiZwcmV2VHlwZT09PXR5cGVzLmRvdD90aGlzLmV4cHJBbGxvd2VkPSExOih1cGRhdGU9dHlwZS51cGRhdGVDb250ZXh0KT91cGRhdGUuY2FsbCh0aGlzLHByZXZUeXBlKTp0aGlzLmV4cHJBbGxvd2VkPXR5cGUuYmVmb3JlRXhwcjt9O3R5cGVzLnBhcmVuUi51cGRhdGVDb250ZXh0PXR5cGVzLmJyYWNlUi51cGRhdGVDb250ZXh0PWZ1bmN0aW9uKCl7aWYodGhpcy5jb250ZXh0Lmxlbmd0aD09PTEpe3RoaXMuZXhwckFsbG93ZWQ9ITA7cmV0dXJufXZhciBvdXQ9dGhpcy5jb250ZXh0LnBvcCgpO291dD09PXR5cGVzJDEuYl9zdGF0JiZ0aGlzLmN1ckNvbnRleHQoKS50b2tlbj09PVwiZnVuY3Rpb25cIiYmKG91dD10aGlzLmNvbnRleHQucG9wKCkpLHRoaXMuZXhwckFsbG93ZWQ9IW91dC5pc0V4cHI7fTt0eXBlcy5icmFjZUwudXBkYXRlQ29udGV4dD1mdW5jdGlvbihwcmV2VHlwZSl7dGhpcy5jb250ZXh0LnB1c2godGhpcy5icmFjZUlzQmxvY2socHJldlR5cGUpP3R5cGVzJDEuYl9zdGF0OnR5cGVzJDEuYl9leHByKSx0aGlzLmV4cHJBbGxvd2VkPSEwO307dHlwZXMuZG9sbGFyQnJhY2VMLnVwZGF0ZUNvbnRleHQ9ZnVuY3Rpb24oKXt0aGlzLmNvbnRleHQucHVzaCh0eXBlcyQxLmJfdG1wbCksdGhpcy5leHByQWxsb3dlZD0hMDt9O3R5cGVzLnBhcmVuTC51cGRhdGVDb250ZXh0PWZ1bmN0aW9uKHByZXZUeXBlKXt2YXIgc3RhdGVtZW50UGFyZW5zPXByZXZUeXBlPT09dHlwZXMuX2lmfHxwcmV2VHlwZT09PXR5cGVzLl9mb3J8fHByZXZUeXBlPT09dHlwZXMuX3dpdGh8fHByZXZUeXBlPT09dHlwZXMuX3doaWxlO3RoaXMuY29udGV4dC5wdXNoKHN0YXRlbWVudFBhcmVucz90eXBlcyQxLnBfc3RhdDp0eXBlcyQxLnBfZXhwciksdGhpcy5leHByQWxsb3dlZD0hMDt9O3R5cGVzLmluY0RlYy51cGRhdGVDb250ZXh0PWZ1bmN0aW9uKCl7fTt0eXBlcy5fZnVuY3Rpb24udXBkYXRlQ29udGV4dD10eXBlcy5fY2xhc3MudXBkYXRlQ29udGV4dD1mdW5jdGlvbihwcmV2VHlwZSl7cHJldlR5cGUuYmVmb3JlRXhwciYmcHJldlR5cGUhPT10eXBlcy5zZW1pJiZwcmV2VHlwZSE9PXR5cGVzLl9lbHNlJiYhKHByZXZUeXBlPT09dHlwZXMuX3JldHVybiYmbGluZUJyZWFrLnRlc3QodGhpcy5pbnB1dC5zbGljZSh0aGlzLmxhc3RUb2tFbmQsdGhpcy5zdGFydCkpKSYmISgocHJldlR5cGU9PT10eXBlcy5jb2xvbnx8cHJldlR5cGU9PT10eXBlcy5icmFjZUwpJiZ0aGlzLmN1ckNvbnRleHQoKT09PXR5cGVzJDEuYl9zdGF0KT90aGlzLmNvbnRleHQucHVzaCh0eXBlcyQxLmZfZXhwcik6dGhpcy5jb250ZXh0LnB1c2godHlwZXMkMS5mX3N0YXQpLHRoaXMuZXhwckFsbG93ZWQ9ITE7fTt0eXBlcy5iYWNrUXVvdGUudXBkYXRlQ29udGV4dD1mdW5jdGlvbigpe3RoaXMuY3VyQ29udGV4dCgpPT09dHlwZXMkMS5xX3RtcGw/dGhpcy5jb250ZXh0LnBvcCgpOnRoaXMuY29udGV4dC5wdXNoKHR5cGVzJDEucV90bXBsKSx0aGlzLmV4cHJBbGxvd2VkPSExO307dHlwZXMuc3Rhci51cGRhdGVDb250ZXh0PWZ1bmN0aW9uKHByZXZUeXBlKXtpZihwcmV2VHlwZT09PXR5cGVzLl9mdW5jdGlvbil7dmFyIGluZGV4PXRoaXMuY29udGV4dC5sZW5ndGgtMTt0aGlzLmNvbnRleHRbaW5kZXhdPT09dHlwZXMkMS5mX2V4cHI/dGhpcy5jb250ZXh0W2luZGV4XT10eXBlcyQxLmZfZXhwcl9nZW46dGhpcy5jb250ZXh0W2luZGV4XT10eXBlcyQxLmZfZ2VuO310aGlzLmV4cHJBbGxvd2VkPSEwO307dHlwZXMubmFtZS51cGRhdGVDb250ZXh0PWZ1bmN0aW9uKHByZXZUeXBlKXt2YXIgYWxsb3dlZD0hMTt0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTYmJnByZXZUeXBlIT09dHlwZXMuZG90JiYodGhpcy52YWx1ZT09PVwib2ZcIiYmIXRoaXMuZXhwckFsbG93ZWR8fHRoaXMudmFsdWU9PT1cInlpZWxkXCImJnRoaXMuaW5HZW5lcmF0b3JDb250ZXh0KCkpJiYoYWxsb3dlZD0hMCksdGhpcy5leHByQWxsb3dlZD1hbGxvd2VkO307ZWNtYTlCaW5hcnlQcm9wZXJ0aWVzPVwiQVNDSUkgQVNDSUlfSGV4X0RpZ2l0IEFIZXggQWxwaGFiZXRpYyBBbHBoYSBBbnkgQXNzaWduZWQgQmlkaV9Db250cm9sIEJpZGlfQyBCaWRpX01pcnJvcmVkIEJpZGlfTSBDYXNlX0lnbm9yYWJsZSBDSSBDYXNlZCBDaGFuZ2VzX1doZW5fQ2FzZWZvbGRlZCBDV0NGIENoYW5nZXNfV2hlbl9DYXNlbWFwcGVkIENXQ00gQ2hhbmdlc19XaGVuX0xvd2VyY2FzZWQgQ1dMIENoYW5nZXNfV2hlbl9ORktDX0Nhc2Vmb2xkZWQgQ1dLQ0YgQ2hhbmdlc19XaGVuX1RpdGxlY2FzZWQgQ1dUIENoYW5nZXNfV2hlbl9VcHBlcmNhc2VkIENXVSBEYXNoIERlZmF1bHRfSWdub3JhYmxlX0NvZGVfUG9pbnQgREkgRGVwcmVjYXRlZCBEZXAgRGlhY3JpdGljIERpYSBFbW9qaSBFbW9qaV9Db21wb25lbnQgRW1vamlfTW9kaWZpZXIgRW1vamlfTW9kaWZpZXJfQmFzZSBFbW9qaV9QcmVzZW50YXRpb24gRXh0ZW5kZXIgRXh0IEdyYXBoZW1lX0Jhc2UgR3JfQmFzZSBHcmFwaGVtZV9FeHRlbmQgR3JfRXh0IEhleF9EaWdpdCBIZXggSURTX0JpbmFyeV9PcGVyYXRvciBJRFNCIElEU19UcmluYXJ5X09wZXJhdG9yIElEU1QgSURfQ29udGludWUgSURDIElEX1N0YXJ0IElEUyBJZGVvZ3JhcGhpYyBJZGVvIEpvaW5fQ29udHJvbCBKb2luX0MgTG9naWNhbF9PcmRlcl9FeGNlcHRpb24gTE9FIExvd2VyY2FzZSBMb3dlciBNYXRoIE5vbmNoYXJhY3Rlcl9Db2RlX1BvaW50IE5DaGFyIFBhdHRlcm5fU3ludGF4IFBhdF9TeW4gUGF0dGVybl9XaGl0ZV9TcGFjZSBQYXRfV1MgUXVvdGF0aW9uX01hcmsgUU1hcmsgUmFkaWNhbCBSZWdpb25hbF9JbmRpY2F0b3IgUkkgU2VudGVuY2VfVGVybWluYWwgU1Rlcm0gU29mdF9Eb3R0ZWQgU0QgVGVybWluYWxfUHVuY3R1YXRpb24gVGVybSBVbmlmaWVkX0lkZW9ncmFwaCBVSWRlbyBVcHBlcmNhc2UgVXBwZXIgVmFyaWF0aW9uX1NlbGVjdG9yIFZTIFdoaXRlX1NwYWNlIHNwYWNlIFhJRF9Db250aW51ZSBYSURDIFhJRF9TdGFydCBYSURTXCIsZWNtYTEwQmluYXJ5UHJvcGVydGllcz1lY21hOUJpbmFyeVByb3BlcnRpZXMrXCIgRXh0ZW5kZWRfUGljdG9ncmFwaGljXCIsZWNtYTExQmluYXJ5UHJvcGVydGllcz1lY21hMTBCaW5hcnlQcm9wZXJ0aWVzLHVuaWNvZGVCaW5hcnlQcm9wZXJ0aWVzPXs5OmVjbWE5QmluYXJ5UHJvcGVydGllcywxMDplY21hMTBCaW5hcnlQcm9wZXJ0aWVzLDExOmVjbWExMUJpbmFyeVByb3BlcnRpZXN9LHVuaWNvZGVHZW5lcmFsQ2F0ZWdvcnlWYWx1ZXM9XCJDYXNlZF9MZXR0ZXIgTEMgQ2xvc2VfUHVuY3R1YXRpb24gUGUgQ29ubmVjdG9yX1B1bmN0dWF0aW9uIFBjIENvbnRyb2wgQ2MgY250cmwgQ3VycmVuY3lfU3ltYm9sIFNjIERhc2hfUHVuY3R1YXRpb24gUGQgRGVjaW1hbF9OdW1iZXIgTmQgZGlnaXQgRW5jbG9zaW5nX01hcmsgTWUgRmluYWxfUHVuY3R1YXRpb24gUGYgRm9ybWF0IENmIEluaXRpYWxfUHVuY3R1YXRpb24gUGkgTGV0dGVyIEwgTGV0dGVyX051bWJlciBObCBMaW5lX1NlcGFyYXRvciBabCBMb3dlcmNhc2VfTGV0dGVyIExsIE1hcmsgTSBDb21iaW5pbmdfTWFyayBNYXRoX1N5bWJvbCBTbSBNb2RpZmllcl9MZXR0ZXIgTG0gTW9kaWZpZXJfU3ltYm9sIFNrIE5vbnNwYWNpbmdfTWFyayBNbiBOdW1iZXIgTiBPcGVuX1B1bmN0dWF0aW9uIFBzIE90aGVyIEMgT3RoZXJfTGV0dGVyIExvIE90aGVyX051bWJlciBObyBPdGhlcl9QdW5jdHVhdGlvbiBQbyBPdGhlcl9TeW1ib2wgU28gUGFyYWdyYXBoX1NlcGFyYXRvciBacCBQcml2YXRlX1VzZSBDbyBQdW5jdHVhdGlvbiBQIHB1bmN0IFNlcGFyYXRvciBaIFNwYWNlX1NlcGFyYXRvciBacyBTcGFjaW5nX01hcmsgTWMgU3Vycm9nYXRlIENzIFN5bWJvbCBTIFRpdGxlY2FzZV9MZXR0ZXIgTHQgVW5hc3NpZ25lZCBDbiBVcHBlcmNhc2VfTGV0dGVyIEx1XCIsZWNtYTlTY3JpcHRWYWx1ZXM9XCJBZGxhbSBBZGxtIEFob20gQWhvbSBBbmF0b2xpYW5fSGllcm9nbHlwaHMgSGx1dyBBcmFiaWMgQXJhYiBBcm1lbmlhbiBBcm1uIEF2ZXN0YW4gQXZzdCBCYWxpbmVzZSBCYWxpIEJhbXVtIEJhbXUgQmFzc2FfVmFoIEJhc3MgQmF0YWsgQmF0ayBCZW5nYWxpIEJlbmcgQmhhaWtzdWtpIEJoa3MgQm9wb21vZm8gQm9wbyBCcmFobWkgQnJhaCBCcmFpbGxlIEJyYWkgQnVnaW5lc2UgQnVnaSBCdWhpZCBCdWhkIENhbmFkaWFuX0Fib3JpZ2luYWwgQ2FucyBDYXJpYW4gQ2FyaSBDYXVjYXNpYW5fQWxiYW5pYW4gQWdoYiBDaGFrbWEgQ2FrbSBDaGFtIENoYW0gQ2hlcm9rZWUgQ2hlciBDb21tb24gWnl5eSBDb3B0aWMgQ29wdCBRYWFjIEN1bmVpZm9ybSBYc3V4IEN5cHJpb3QgQ3BydCBDeXJpbGxpYyBDeXJsIERlc2VyZXQgRHNydCBEZXZhbmFnYXJpIERldmEgRHVwbG95YW4gRHVwbCBFZ3lwdGlhbl9IaWVyb2dseXBocyBFZ3lwIEVsYmFzYW4gRWxiYSBFdGhpb3BpYyBFdGhpIEdlb3JnaWFuIEdlb3IgR2xhZ29saXRpYyBHbGFnIEdvdGhpYyBHb3RoIEdyYW50aGEgR3JhbiBHcmVlayBHcmVrIEd1amFyYXRpIEd1anIgR3VybXVraGkgR3VydSBIYW4gSGFuaSBIYW5ndWwgSGFuZyBIYW51bm9vIEhhbm8gSGF0cmFuIEhhdHIgSGVicmV3IEhlYnIgSGlyYWdhbmEgSGlyYSBJbXBlcmlhbF9BcmFtYWljIEFybWkgSW5oZXJpdGVkIFppbmggUWFhaSBJbnNjcmlwdGlvbmFsX1BhaGxhdmkgUGhsaSBJbnNjcmlwdGlvbmFsX1BhcnRoaWFuIFBydGkgSmF2YW5lc2UgSmF2YSBLYWl0aGkgS3RoaSBLYW5uYWRhIEtuZGEgS2F0YWthbmEgS2FuYSBLYXlhaF9MaSBLYWxpIEtoYXJvc2h0aGkgS2hhciBLaG1lciBLaG1yIEtob2praSBLaG9qIEtodWRhd2FkaSBTaW5kIExhbyBMYW9vIExhdGluIExhdG4gTGVwY2hhIExlcGMgTGltYnUgTGltYiBMaW5lYXJfQSBMaW5hIExpbmVhcl9CIExpbmIgTGlzdSBMaXN1IEx5Y2lhbiBMeWNpIEx5ZGlhbiBMeWRpIE1haGFqYW5pIE1haGogTWFsYXlhbGFtIE1seW0gTWFuZGFpYyBNYW5kIE1hbmljaGFlYW4gTWFuaSBNYXJjaGVuIE1hcmMgTWFzYXJhbV9Hb25kaSBHb25tIE1lZXRlaV9NYXllayBNdGVpIE1lbmRlX0tpa2FrdWkgTWVuZCBNZXJvaXRpY19DdXJzaXZlIE1lcmMgTWVyb2l0aWNfSGllcm9nbHlwaHMgTWVybyBNaWFvIFBscmQgTW9kaSBNb2RpIE1vbmdvbGlhbiBNb25nIE1ybyBNcm9vIE11bHRhbmkgTXVsdCBNeWFubWFyIE15bXIgTmFiYXRhZWFuIE5iYXQgTmV3X1RhaV9MdWUgVGFsdSBOZXdhIE5ld2EgTmtvIE5rb28gTnVzaHUgTnNodSBPZ2hhbSBPZ2FtIE9sX0NoaWtpIE9sY2sgT2xkX0h1bmdhcmlhbiBIdW5nIE9sZF9JdGFsaWMgSXRhbCBPbGRfTm9ydGhfQXJhYmlhbiBOYXJiIE9sZF9QZXJtaWMgUGVybSBPbGRfUGVyc2lhbiBYcGVvIE9sZF9Tb3V0aF9BcmFiaWFuIFNhcmIgT2xkX1R1cmtpYyBPcmtoIE9yaXlhIE9yeWEgT3NhZ2UgT3NnZSBPc21hbnlhIE9zbWEgUGFoYXdoX0htb25nIEhtbmcgUGFsbXlyZW5lIFBhbG0gUGF1X0Npbl9IYXUgUGF1YyBQaGFnc19QYSBQaGFnIFBob2VuaWNpYW4gUGhueCBQc2FsdGVyX1BhaGxhdmkgUGhscCBSZWphbmcgUmpuZyBSdW5pYyBSdW5yIFNhbWFyaXRhbiBTYW1yIFNhdXJhc2h0cmEgU2F1ciBTaGFyYWRhIFNocmQgU2hhdmlhbiBTaGF3IFNpZGRoYW0gU2lkZCBTaWduV3JpdGluZyBTZ253IFNpbmhhbGEgU2luaCBTb3JhX1NvbXBlbmcgU29yYSBTb3lvbWJvIFNveW8gU3VuZGFuZXNlIFN1bmQgU3lsb3RpX05hZ3JpIFN5bG8gU3lyaWFjIFN5cmMgVGFnYWxvZyBUZ2xnIFRhZ2JhbndhIFRhZ2IgVGFpX0xlIFRhbGUgVGFpX1RoYW0gTGFuYSBUYWlfVmlldCBUYXZ0IFRha3JpIFRha3IgVGFtaWwgVGFtbCBUYW5ndXQgVGFuZyBUZWx1Z3UgVGVsdSBUaGFhbmEgVGhhYSBUaGFpIFRoYWkgVGliZXRhbiBUaWJ0IFRpZmluYWdoIFRmbmcgVGlyaHV0YSBUaXJoIFVnYXJpdGljIFVnYXIgVmFpIFZhaWkgV2FyYW5nX0NpdGkgV2FyYSBZaSBZaWlpIFphbmFiYXphcl9TcXVhcmUgWmFuYlwiLGVjbWExMFNjcmlwdFZhbHVlcz1lY21hOVNjcmlwdFZhbHVlcytcIiBEb2dyYSBEb2dyIEd1bmphbGFfR29uZGkgR29uZyBIYW5pZmlfUm9oaW5neWEgUm9oZyBNYWthc2FyIE1ha2EgTWVkZWZhaWRyaW4gTWVkZiBPbGRfU29nZGlhbiBTb2dvIFNvZ2RpYW4gU29nZFwiLGVjbWExMVNjcmlwdFZhbHVlcz1lY21hMTBTY3JpcHRWYWx1ZXMrXCIgRWx5bWFpYyBFbHltIE5hbmRpbmFnYXJpIE5hbmQgTnlpYWtlbmdfUHVhY2h1ZV9IbW9uZyBIbW5wIFdhbmNobyBXY2hvXCIsdW5pY29kZVNjcmlwdFZhbHVlcz17OTplY21hOVNjcmlwdFZhbHVlcywxMDplY21hMTBTY3JpcHRWYWx1ZXMsMTE6ZWNtYTExU2NyaXB0VmFsdWVzfSxkYXRhPXt9O2J1aWxkVW5pY29kZURhdGEoOSk7YnVpbGRVbmljb2RlRGF0YSgxMCk7YnVpbGRVbmljb2RlRGF0YSgxMSk7cHAkOD1QYXJzZXIucHJvdG90eXBlLFJlZ0V4cFZhbGlkYXRpb25TdGF0ZT1mdW5jdGlvbihwYXJzZXIpe3RoaXMucGFyc2VyPXBhcnNlcix0aGlzLnZhbGlkRmxhZ3M9XCJnaW1cIisocGFyc2VyLm9wdGlvbnMuZWNtYVZlcnNpb24+PTY/XCJ1eVwiOlwiXCIpKyhwYXJzZXIub3B0aW9ucy5lY21hVmVyc2lvbj49OT9cInNcIjpcIlwiKSx0aGlzLnVuaWNvZGVQcm9wZXJ0aWVzPWRhdGFbcGFyc2VyLm9wdGlvbnMuZWNtYVZlcnNpb24+PTExPzExOnBhcnNlci5vcHRpb25zLmVjbWFWZXJzaW9uXSx0aGlzLnNvdXJjZT1cIlwiLHRoaXMuZmxhZ3M9XCJcIix0aGlzLnN0YXJ0PTAsdGhpcy5zd2l0Y2hVPSExLHRoaXMuc3dpdGNoTj0hMSx0aGlzLnBvcz0wLHRoaXMubGFzdEludFZhbHVlPTAsdGhpcy5sYXN0U3RyaW5nVmFsdWU9XCJcIix0aGlzLmxhc3RBc3NlcnRpb25Jc1F1YW50aWZpYWJsZT0hMSx0aGlzLm51bUNhcHR1cmluZ1BhcmVucz0wLHRoaXMubWF4QmFja1JlZmVyZW5jZT0wLHRoaXMuZ3JvdXBOYW1lcz1bXSx0aGlzLmJhY2tSZWZlcmVuY2VOYW1lcz1bXTt9O1JlZ0V4cFZhbGlkYXRpb25TdGF0ZS5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oc3RhcnQscGF0dGVybixmbGFncyl7dmFyIHVuaWNvZGU9ZmxhZ3MuaW5kZXhPZihcInVcIikhPT0tMTt0aGlzLnN0YXJ0PXN0YXJ0fDAsdGhpcy5zb3VyY2U9cGF0dGVybitcIlwiLHRoaXMuZmxhZ3M9ZmxhZ3MsdGhpcy5zd2l0Y2hVPXVuaWNvZGUmJnRoaXMucGFyc2VyLm9wdGlvbnMuZWNtYVZlcnNpb24+PTYsdGhpcy5zd2l0Y2hOPXVuaWNvZGUmJnRoaXMucGFyc2VyLm9wdGlvbnMuZWNtYVZlcnNpb24+PTk7fTtSZWdFeHBWYWxpZGF0aW9uU3RhdGUucHJvdG90eXBlLnJhaXNlPWZ1bmN0aW9uKG1lc3NhZ2Upe3RoaXMucGFyc2VyLnJhaXNlUmVjb3ZlcmFibGUodGhpcy5zdGFydCxcIkludmFsaWQgcmVndWxhciBleHByZXNzaW9uOiAvXCIrdGhpcy5zb3VyY2UrXCIvOiBcIittZXNzYWdlKTt9O1JlZ0V4cFZhbGlkYXRpb25TdGF0ZS5wcm90b3R5cGUuYXQ9ZnVuY3Rpb24oaSxmb3JjZVUpe2ZvcmNlVT09PXZvaWQgMCYmKGZvcmNlVT0hMSk7dmFyIHM9dGhpcy5zb3VyY2UsbD1zLmxlbmd0aDtpZihpPj1sKXJldHVybiAtMTt2YXIgYz1zLmNoYXJDb2RlQXQoaSk7aWYoIShmb3JjZVV8fHRoaXMuc3dpdGNoVSl8fGM8PTU1Mjk1fHxjPj01NzM0NHx8aSsxPj1sKXJldHVybiBjO3ZhciBuZXh0PXMuY2hhckNvZGVBdChpKzEpO3JldHVybiBuZXh0Pj01NjMyMCYmbmV4dDw9NTczNDM/KGM8PDEwKStuZXh0LTU2NjEzODg4OmN9O1JlZ0V4cFZhbGlkYXRpb25TdGF0ZS5wcm90b3R5cGUubmV4dEluZGV4PWZ1bmN0aW9uKGksZm9yY2VVKXtmb3JjZVU9PT12b2lkIDAmJihmb3JjZVU9ITEpO3ZhciBzPXRoaXMuc291cmNlLGw9cy5sZW5ndGg7aWYoaT49bClyZXR1cm4gbDt2YXIgYz1zLmNoYXJDb2RlQXQoaSksbmV4dDtyZXR1cm4gIShmb3JjZVV8fHRoaXMuc3dpdGNoVSl8fGM8PTU1Mjk1fHxjPj01NzM0NHx8aSsxPj1sfHwobmV4dD1zLmNoYXJDb2RlQXQoaSsxKSk8NTYzMjB8fG5leHQ+NTczNDM/aSsxOmkrMn07UmVnRXhwVmFsaWRhdGlvblN0YXRlLnByb3RvdHlwZS5jdXJyZW50PWZ1bmN0aW9uKGZvcmNlVSl7cmV0dXJuIGZvcmNlVT09PXZvaWQgMCYmKGZvcmNlVT0hMSksdGhpcy5hdCh0aGlzLnBvcyxmb3JjZVUpfTtSZWdFeHBWYWxpZGF0aW9uU3RhdGUucHJvdG90eXBlLmxvb2thaGVhZD1mdW5jdGlvbihmb3JjZVUpe3JldHVybiBmb3JjZVU9PT12b2lkIDAmJihmb3JjZVU9ITEpLHRoaXMuYXQodGhpcy5uZXh0SW5kZXgodGhpcy5wb3MsZm9yY2VVKSxmb3JjZVUpfTtSZWdFeHBWYWxpZGF0aW9uU3RhdGUucHJvdG90eXBlLmFkdmFuY2U9ZnVuY3Rpb24oZm9yY2VVKXtmb3JjZVU9PT12b2lkIDAmJihmb3JjZVU9ITEpLHRoaXMucG9zPXRoaXMubmV4dEluZGV4KHRoaXMucG9zLGZvcmNlVSk7fTtSZWdFeHBWYWxpZGF0aW9uU3RhdGUucHJvdG90eXBlLmVhdD1mdW5jdGlvbihjaCxmb3JjZVUpe3JldHVybiBmb3JjZVU9PT12b2lkIDAmJihmb3JjZVU9ITEpLHRoaXMuY3VycmVudChmb3JjZVUpPT09Y2g/KHRoaXMuYWR2YW5jZShmb3JjZVUpLCEwKTohMX07cHAkOC52YWxpZGF0ZVJlZ0V4cEZsYWdzPWZ1bmN0aW9uKHN0YXRlKXtmb3IodmFyIHZhbGlkRmxhZ3M9c3RhdGUudmFsaWRGbGFncyxmbGFncz1zdGF0ZS5mbGFncyxpPTA7aTxmbGFncy5sZW5ndGg7aSsrKXt2YXIgZmxhZz1mbGFncy5jaGFyQXQoaSk7dmFsaWRGbGFncy5pbmRleE9mKGZsYWcpPT09LTEmJnRoaXMucmFpc2Uoc3RhdGUuc3RhcnQsXCJJbnZhbGlkIHJlZ3VsYXIgZXhwcmVzc2lvbiBmbGFnXCIpLGZsYWdzLmluZGV4T2YoZmxhZyxpKzEpPi0xJiZ0aGlzLnJhaXNlKHN0YXRlLnN0YXJ0LFwiRHVwbGljYXRlIHJlZ3VsYXIgZXhwcmVzc2lvbiBmbGFnXCIpO319O3BwJDgudmFsaWRhdGVSZWdFeHBQYXR0ZXJuPWZ1bmN0aW9uKHN0YXRlKXt0aGlzLnJlZ2V4cF9wYXR0ZXJuKHN0YXRlKSwhc3RhdGUuc3dpdGNoTiYmdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj05JiZzdGF0ZS5ncm91cE5hbWVzLmxlbmd0aD4wJiYoc3RhdGUuc3dpdGNoTj0hMCx0aGlzLnJlZ2V4cF9wYXR0ZXJuKHN0YXRlKSk7fTtwcCQ4LnJlZ2V4cF9wYXR0ZXJuPWZ1bmN0aW9uKHN0YXRlKXtzdGF0ZS5wb3M9MCxzdGF0ZS5sYXN0SW50VmFsdWU9MCxzdGF0ZS5sYXN0U3RyaW5nVmFsdWU9XCJcIixzdGF0ZS5sYXN0QXNzZXJ0aW9uSXNRdWFudGlmaWFibGU9ITEsc3RhdGUubnVtQ2FwdHVyaW5nUGFyZW5zPTAsc3RhdGUubWF4QmFja1JlZmVyZW5jZT0wLHN0YXRlLmdyb3VwTmFtZXMubGVuZ3RoPTAsc3RhdGUuYmFja1JlZmVyZW5jZU5hbWVzLmxlbmd0aD0wLHRoaXMucmVnZXhwX2Rpc2p1bmN0aW9uKHN0YXRlKSxzdGF0ZS5wb3MhPT1zdGF0ZS5zb3VyY2UubGVuZ3RoJiYoc3RhdGUuZWF0KDQxKSYmc3RhdGUucmFpc2UoXCJVbm1hdGNoZWQgJyknXCIpLChzdGF0ZS5lYXQoOTMpfHxzdGF0ZS5lYXQoMTI1KSkmJnN0YXRlLnJhaXNlKFwiTG9uZSBxdWFudGlmaWVyIGJyYWNrZXRzXCIpKSxzdGF0ZS5tYXhCYWNrUmVmZXJlbmNlPnN0YXRlLm51bUNhcHR1cmluZ1BhcmVucyYmc3RhdGUucmFpc2UoXCJJbnZhbGlkIGVzY2FwZVwiKTtmb3IodmFyIGk9MCxsaXN0PXN0YXRlLmJhY2tSZWZlcmVuY2VOYW1lcztpPGxpc3QubGVuZ3RoO2krPTEpe3ZhciBuYW1lPWxpc3RbaV07c3RhdGUuZ3JvdXBOYW1lcy5pbmRleE9mKG5hbWUpPT09LTEmJnN0YXRlLnJhaXNlKFwiSW52YWxpZCBuYW1lZCBjYXB0dXJlIHJlZmVyZW5jZWRcIik7fX07cHAkOC5yZWdleHBfZGlzanVuY3Rpb249ZnVuY3Rpb24oc3RhdGUpe2Zvcih0aGlzLnJlZ2V4cF9hbHRlcm5hdGl2ZShzdGF0ZSk7c3RhdGUuZWF0KDEyNCk7KXRoaXMucmVnZXhwX2FsdGVybmF0aXZlKHN0YXRlKTt0aGlzLnJlZ2V4cF9lYXRRdWFudGlmaWVyKHN0YXRlLCEwKSYmc3RhdGUucmFpc2UoXCJOb3RoaW5nIHRvIHJlcGVhdFwiKSxzdGF0ZS5lYXQoMTIzKSYmc3RhdGUucmFpc2UoXCJMb25lIHF1YW50aWZpZXIgYnJhY2tldHNcIik7fTtwcCQ4LnJlZ2V4cF9hbHRlcm5hdGl2ZT1mdW5jdGlvbihzdGF0ZSl7Zm9yKDtzdGF0ZS5wb3M8c3RhdGUuc291cmNlLmxlbmd0aCYmdGhpcy5yZWdleHBfZWF0VGVybShzdGF0ZSk7KTt9O3BwJDgucmVnZXhwX2VhdFRlcm09ZnVuY3Rpb24oc3RhdGUpe3JldHVybiB0aGlzLnJlZ2V4cF9lYXRBc3NlcnRpb24oc3RhdGUpPyhzdGF0ZS5sYXN0QXNzZXJ0aW9uSXNRdWFudGlmaWFibGUmJnRoaXMucmVnZXhwX2VhdFF1YW50aWZpZXIoc3RhdGUpJiZzdGF0ZS5zd2l0Y2hVJiZzdGF0ZS5yYWlzZShcIkludmFsaWQgcXVhbnRpZmllclwiKSwhMCk6KHN0YXRlLnN3aXRjaFU/dGhpcy5yZWdleHBfZWF0QXRvbShzdGF0ZSk6dGhpcy5yZWdleHBfZWF0RXh0ZW5kZWRBdG9tKHN0YXRlKSk/KHRoaXMucmVnZXhwX2VhdFF1YW50aWZpZXIoc3RhdGUpLCEwKTohMX07cHAkOC5yZWdleHBfZWF0QXNzZXJ0aW9uPWZ1bmN0aW9uKHN0YXRlKXt2YXIgc3RhcnQ9c3RhdGUucG9zO2lmKHN0YXRlLmxhc3RBc3NlcnRpb25Jc1F1YW50aWZpYWJsZT0hMSxzdGF0ZS5lYXQoOTQpfHxzdGF0ZS5lYXQoMzYpKXJldHVybiAhMDtpZihzdGF0ZS5lYXQoOTIpKXtpZihzdGF0ZS5lYXQoNjYpfHxzdGF0ZS5lYXQoOTgpKXJldHVybiAhMDtzdGF0ZS5wb3M9c3RhcnQ7fWlmKHN0YXRlLmVhdCg0MCkmJnN0YXRlLmVhdCg2Mykpe3ZhciBsb29rYmVoaW5kPSExO2lmKHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OSYmKGxvb2tiZWhpbmQ9c3RhdGUuZWF0KDYwKSksc3RhdGUuZWF0KDYxKXx8c3RhdGUuZWF0KDMzKSlyZXR1cm4gdGhpcy5yZWdleHBfZGlzanVuY3Rpb24oc3RhdGUpLHN0YXRlLmVhdCg0MSl8fHN0YXRlLnJhaXNlKFwiVW50ZXJtaW5hdGVkIGdyb3VwXCIpLHN0YXRlLmxhc3RBc3NlcnRpb25Jc1F1YW50aWZpYWJsZT0hbG9va2JlaGluZCwhMH1yZXR1cm4gc3RhdGUucG9zPXN0YXJ0LCExfTtwcCQ4LnJlZ2V4cF9lYXRRdWFudGlmaWVyPWZ1bmN0aW9uKHN0YXRlLG5vRXJyb3Ipe3JldHVybiBub0Vycm9yPT09dm9pZCAwJiYobm9FcnJvcj0hMSksdGhpcy5yZWdleHBfZWF0UXVhbnRpZmllclByZWZpeChzdGF0ZSxub0Vycm9yKT8oc3RhdGUuZWF0KDYzKSwhMCk6ITF9O3BwJDgucmVnZXhwX2VhdFF1YW50aWZpZXJQcmVmaXg9ZnVuY3Rpb24oc3RhdGUsbm9FcnJvcil7cmV0dXJuIHN0YXRlLmVhdCg0Mil8fHN0YXRlLmVhdCg0Myl8fHN0YXRlLmVhdCg2Myl8fHRoaXMucmVnZXhwX2VhdEJyYWNlZFF1YW50aWZpZXIoc3RhdGUsbm9FcnJvcil9O3BwJDgucmVnZXhwX2VhdEJyYWNlZFF1YW50aWZpZXI9ZnVuY3Rpb24oc3RhdGUsbm9FcnJvcil7dmFyIHN0YXJ0PXN0YXRlLnBvcztpZihzdGF0ZS5lYXQoMTIzKSl7dmFyIG1pbj0wLG1heD0tMTtpZih0aGlzLnJlZ2V4cF9lYXREZWNpbWFsRGlnaXRzKHN0YXRlKSYmKG1pbj1zdGF0ZS5sYXN0SW50VmFsdWUsc3RhdGUuZWF0KDQ0KSYmdGhpcy5yZWdleHBfZWF0RGVjaW1hbERpZ2l0cyhzdGF0ZSkmJihtYXg9c3RhdGUubGFzdEludFZhbHVlKSxzdGF0ZS5lYXQoMTI1KSkpcmV0dXJuIG1heCE9PS0xJiZtYXg8bWluJiYhbm9FcnJvciYmc3RhdGUucmFpc2UoXCJudW1iZXJzIG91dCBvZiBvcmRlciBpbiB7fSBxdWFudGlmaWVyXCIpLCEwO3N0YXRlLnN3aXRjaFUmJiFub0Vycm9yJiZzdGF0ZS5yYWlzZShcIkluY29tcGxldGUgcXVhbnRpZmllclwiKSxzdGF0ZS5wb3M9c3RhcnQ7fXJldHVybiAhMX07cHAkOC5yZWdleHBfZWF0QXRvbT1mdW5jdGlvbihzdGF0ZSl7cmV0dXJuIHRoaXMucmVnZXhwX2VhdFBhdHRlcm5DaGFyYWN0ZXJzKHN0YXRlKXx8c3RhdGUuZWF0KDQ2KXx8dGhpcy5yZWdleHBfZWF0UmV2ZXJzZVNvbGlkdXNBdG9tRXNjYXBlKHN0YXRlKXx8dGhpcy5yZWdleHBfZWF0Q2hhcmFjdGVyQ2xhc3Moc3RhdGUpfHx0aGlzLnJlZ2V4cF9lYXRVbmNhcHR1cmluZ0dyb3VwKHN0YXRlKXx8dGhpcy5yZWdleHBfZWF0Q2FwdHVyaW5nR3JvdXAoc3RhdGUpfTtwcCQ4LnJlZ2V4cF9lYXRSZXZlcnNlU29saWR1c0F0b21Fc2NhcGU9ZnVuY3Rpb24oc3RhdGUpe3ZhciBzdGFydD1zdGF0ZS5wb3M7aWYoc3RhdGUuZWF0KDkyKSl7aWYodGhpcy5yZWdleHBfZWF0QXRvbUVzY2FwZShzdGF0ZSkpcmV0dXJuICEwO3N0YXRlLnBvcz1zdGFydDt9cmV0dXJuICExfTtwcCQ4LnJlZ2V4cF9lYXRVbmNhcHR1cmluZ0dyb3VwPWZ1bmN0aW9uKHN0YXRlKXt2YXIgc3RhcnQ9c3RhdGUucG9zO2lmKHN0YXRlLmVhdCg0MCkpe2lmKHN0YXRlLmVhdCg2MykmJnN0YXRlLmVhdCg1OCkpe2lmKHRoaXMucmVnZXhwX2Rpc2p1bmN0aW9uKHN0YXRlKSxzdGF0ZS5lYXQoNDEpKXJldHVybiAhMDtzdGF0ZS5yYWlzZShcIlVudGVybWluYXRlZCBncm91cFwiKTt9c3RhdGUucG9zPXN0YXJ0O31yZXR1cm4gITF9O3BwJDgucmVnZXhwX2VhdENhcHR1cmluZ0dyb3VwPWZ1bmN0aW9uKHN0YXRlKXtpZihzdGF0ZS5lYXQoNDApKXtpZih0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTk/dGhpcy5yZWdleHBfZ3JvdXBTcGVjaWZpZXIoc3RhdGUpOnN0YXRlLmN1cnJlbnQoKT09PTYzJiZzdGF0ZS5yYWlzZShcIkludmFsaWQgZ3JvdXBcIiksdGhpcy5yZWdleHBfZGlzanVuY3Rpb24oc3RhdGUpLHN0YXRlLmVhdCg0MSkpcmV0dXJuIHN0YXRlLm51bUNhcHR1cmluZ1BhcmVucys9MSwhMDtzdGF0ZS5yYWlzZShcIlVudGVybWluYXRlZCBncm91cFwiKTt9cmV0dXJuICExfTtwcCQ4LnJlZ2V4cF9lYXRFeHRlbmRlZEF0b209ZnVuY3Rpb24oc3RhdGUpe3JldHVybiBzdGF0ZS5lYXQoNDYpfHx0aGlzLnJlZ2V4cF9lYXRSZXZlcnNlU29saWR1c0F0b21Fc2NhcGUoc3RhdGUpfHx0aGlzLnJlZ2V4cF9lYXRDaGFyYWN0ZXJDbGFzcyhzdGF0ZSl8fHRoaXMucmVnZXhwX2VhdFVuY2FwdHVyaW5nR3JvdXAoc3RhdGUpfHx0aGlzLnJlZ2V4cF9lYXRDYXB0dXJpbmdHcm91cChzdGF0ZSl8fHRoaXMucmVnZXhwX2VhdEludmFsaWRCcmFjZWRRdWFudGlmaWVyKHN0YXRlKXx8dGhpcy5yZWdleHBfZWF0RXh0ZW5kZWRQYXR0ZXJuQ2hhcmFjdGVyKHN0YXRlKX07cHAkOC5yZWdleHBfZWF0SW52YWxpZEJyYWNlZFF1YW50aWZpZXI9ZnVuY3Rpb24oc3RhdGUpe3JldHVybiB0aGlzLnJlZ2V4cF9lYXRCcmFjZWRRdWFudGlmaWVyKHN0YXRlLCEwKSYmc3RhdGUucmFpc2UoXCJOb3RoaW5nIHRvIHJlcGVhdFwiKSwhMX07cHAkOC5yZWdleHBfZWF0U3ludGF4Q2hhcmFjdGVyPWZ1bmN0aW9uKHN0YXRlKXt2YXIgY2g9c3RhdGUuY3VycmVudCgpO3JldHVybiBpc1N5bnRheENoYXJhY3RlcihjaCk/KHN0YXRlLmxhc3RJbnRWYWx1ZT1jaCxzdGF0ZS5hZHZhbmNlKCksITApOiExfTtwcCQ4LnJlZ2V4cF9lYXRQYXR0ZXJuQ2hhcmFjdGVycz1mdW5jdGlvbihzdGF0ZSl7Zm9yKHZhciBzdGFydD1zdGF0ZS5wb3MsY2g9MDsoY2g9c3RhdGUuY3VycmVudCgpKSE9PS0xJiYhaXNTeW50YXhDaGFyYWN0ZXIoY2gpOylzdGF0ZS5hZHZhbmNlKCk7cmV0dXJuIHN0YXRlLnBvcyE9PXN0YXJ0fTtwcCQ4LnJlZ2V4cF9lYXRFeHRlbmRlZFBhdHRlcm5DaGFyYWN0ZXI9ZnVuY3Rpb24oc3RhdGUpe3ZhciBjaD1zdGF0ZS5jdXJyZW50KCk7cmV0dXJuIGNoIT09LTEmJmNoIT09MzYmJiEoY2g+PTQwJiZjaDw9NDMpJiZjaCE9PTQ2JiZjaCE9PTYzJiZjaCE9PTkxJiZjaCE9PTk0JiZjaCE9PTEyND8oc3RhdGUuYWR2YW5jZSgpLCEwKTohMX07cHAkOC5yZWdleHBfZ3JvdXBTcGVjaWZpZXI9ZnVuY3Rpb24oc3RhdGUpe2lmKHN0YXRlLmVhdCg2Mykpe2lmKHRoaXMucmVnZXhwX2VhdEdyb3VwTmFtZShzdGF0ZSkpe3N0YXRlLmdyb3VwTmFtZXMuaW5kZXhPZihzdGF0ZS5sYXN0U3RyaW5nVmFsdWUpIT09LTEmJnN0YXRlLnJhaXNlKFwiRHVwbGljYXRlIGNhcHR1cmUgZ3JvdXAgbmFtZVwiKSxzdGF0ZS5ncm91cE5hbWVzLnB1c2goc3RhdGUubGFzdFN0cmluZ1ZhbHVlKTtyZXR1cm59c3RhdGUucmFpc2UoXCJJbnZhbGlkIGdyb3VwXCIpO319O3BwJDgucmVnZXhwX2VhdEdyb3VwTmFtZT1mdW5jdGlvbihzdGF0ZSl7aWYoc3RhdGUubGFzdFN0cmluZ1ZhbHVlPVwiXCIsc3RhdGUuZWF0KDYwKSl7aWYodGhpcy5yZWdleHBfZWF0UmVnRXhwSWRlbnRpZmllck5hbWUoc3RhdGUpJiZzdGF0ZS5lYXQoNjIpKXJldHVybiAhMDtzdGF0ZS5yYWlzZShcIkludmFsaWQgY2FwdHVyZSBncm91cCBuYW1lXCIpO31yZXR1cm4gITF9O3BwJDgucmVnZXhwX2VhdFJlZ0V4cElkZW50aWZpZXJOYW1lPWZ1bmN0aW9uKHN0YXRlKXtpZihzdGF0ZS5sYXN0U3RyaW5nVmFsdWU9XCJcIix0aGlzLnJlZ2V4cF9lYXRSZWdFeHBJZGVudGlmaWVyU3RhcnQoc3RhdGUpKXtmb3Ioc3RhdGUubGFzdFN0cmluZ1ZhbHVlKz1jb2RlUG9pbnRUb1N0cmluZyhzdGF0ZS5sYXN0SW50VmFsdWUpO3RoaXMucmVnZXhwX2VhdFJlZ0V4cElkZW50aWZpZXJQYXJ0KHN0YXRlKTspc3RhdGUubGFzdFN0cmluZ1ZhbHVlKz1jb2RlUG9pbnRUb1N0cmluZyhzdGF0ZS5sYXN0SW50VmFsdWUpO3JldHVybiAhMH1yZXR1cm4gITF9O3BwJDgucmVnZXhwX2VhdFJlZ0V4cElkZW50aWZpZXJTdGFydD1mdW5jdGlvbihzdGF0ZSl7dmFyIHN0YXJ0PXN0YXRlLnBvcyxmb3JjZVU9dGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj0xMSxjaD1zdGF0ZS5jdXJyZW50KGZvcmNlVSk7cmV0dXJuIHN0YXRlLmFkdmFuY2UoZm9yY2VVKSxjaD09PTkyJiZ0aGlzLnJlZ2V4cF9lYXRSZWdFeHBVbmljb2RlRXNjYXBlU2VxdWVuY2Uoc3RhdGUsZm9yY2VVKSYmKGNoPXN0YXRlLmxhc3RJbnRWYWx1ZSksaXNSZWdFeHBJZGVudGlmaWVyU3RhcnQoY2gpPyhzdGF0ZS5sYXN0SW50VmFsdWU9Y2gsITApOihzdGF0ZS5wb3M9c3RhcnQsITEpfTtwcCQ4LnJlZ2V4cF9lYXRSZWdFeHBJZGVudGlmaWVyUGFydD1mdW5jdGlvbihzdGF0ZSl7dmFyIHN0YXJ0PXN0YXRlLnBvcyxmb3JjZVU9dGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj0xMSxjaD1zdGF0ZS5jdXJyZW50KGZvcmNlVSk7cmV0dXJuIHN0YXRlLmFkdmFuY2UoZm9yY2VVKSxjaD09PTkyJiZ0aGlzLnJlZ2V4cF9lYXRSZWdFeHBVbmljb2RlRXNjYXBlU2VxdWVuY2Uoc3RhdGUsZm9yY2VVKSYmKGNoPXN0YXRlLmxhc3RJbnRWYWx1ZSksaXNSZWdFeHBJZGVudGlmaWVyUGFydChjaCk/KHN0YXRlLmxhc3RJbnRWYWx1ZT1jaCwhMCk6KHN0YXRlLnBvcz1zdGFydCwhMSl9O3BwJDgucmVnZXhwX2VhdEF0b21Fc2NhcGU9ZnVuY3Rpb24oc3RhdGUpe3JldHVybiB0aGlzLnJlZ2V4cF9lYXRCYWNrUmVmZXJlbmNlKHN0YXRlKXx8dGhpcy5yZWdleHBfZWF0Q2hhcmFjdGVyQ2xhc3NFc2NhcGUoc3RhdGUpfHx0aGlzLnJlZ2V4cF9lYXRDaGFyYWN0ZXJFc2NhcGUoc3RhdGUpfHxzdGF0ZS5zd2l0Y2hOJiZ0aGlzLnJlZ2V4cF9lYXRLR3JvdXBOYW1lKHN0YXRlKT8hMDooc3RhdGUuc3dpdGNoVSYmKHN0YXRlLmN1cnJlbnQoKT09PTk5JiZzdGF0ZS5yYWlzZShcIkludmFsaWQgdW5pY29kZSBlc2NhcGVcIiksc3RhdGUucmFpc2UoXCJJbnZhbGlkIGVzY2FwZVwiKSksITEpfTtwcCQ4LnJlZ2V4cF9lYXRCYWNrUmVmZXJlbmNlPWZ1bmN0aW9uKHN0YXRlKXt2YXIgc3RhcnQ9c3RhdGUucG9zO2lmKHRoaXMucmVnZXhwX2VhdERlY2ltYWxFc2NhcGUoc3RhdGUpKXt2YXIgbj1zdGF0ZS5sYXN0SW50VmFsdWU7aWYoc3RhdGUuc3dpdGNoVSlyZXR1cm4gbj5zdGF0ZS5tYXhCYWNrUmVmZXJlbmNlJiYoc3RhdGUubWF4QmFja1JlZmVyZW5jZT1uKSwhMDtpZihuPD1zdGF0ZS5udW1DYXB0dXJpbmdQYXJlbnMpcmV0dXJuICEwO3N0YXRlLnBvcz1zdGFydDt9cmV0dXJuICExfTtwcCQ4LnJlZ2V4cF9lYXRLR3JvdXBOYW1lPWZ1bmN0aW9uKHN0YXRlKXtpZihzdGF0ZS5lYXQoMTA3KSl7aWYodGhpcy5yZWdleHBfZWF0R3JvdXBOYW1lKHN0YXRlKSlyZXR1cm4gc3RhdGUuYmFja1JlZmVyZW5jZU5hbWVzLnB1c2goc3RhdGUubGFzdFN0cmluZ1ZhbHVlKSwhMDtzdGF0ZS5yYWlzZShcIkludmFsaWQgbmFtZWQgcmVmZXJlbmNlXCIpO31yZXR1cm4gITF9O3BwJDgucmVnZXhwX2VhdENoYXJhY3RlckVzY2FwZT1mdW5jdGlvbihzdGF0ZSl7cmV0dXJuIHRoaXMucmVnZXhwX2VhdENvbnRyb2xFc2NhcGUoc3RhdGUpfHx0aGlzLnJlZ2V4cF9lYXRDQ29udHJvbExldHRlcihzdGF0ZSl8fHRoaXMucmVnZXhwX2VhdFplcm8oc3RhdGUpfHx0aGlzLnJlZ2V4cF9lYXRIZXhFc2NhcGVTZXF1ZW5jZShzdGF0ZSl8fHRoaXMucmVnZXhwX2VhdFJlZ0V4cFVuaWNvZGVFc2NhcGVTZXF1ZW5jZShzdGF0ZSwhMSl8fCFzdGF0ZS5zd2l0Y2hVJiZ0aGlzLnJlZ2V4cF9lYXRMZWdhY3lPY3RhbEVzY2FwZVNlcXVlbmNlKHN0YXRlKXx8dGhpcy5yZWdleHBfZWF0SWRlbnRpdHlFc2NhcGUoc3RhdGUpfTtwcCQ4LnJlZ2V4cF9lYXRDQ29udHJvbExldHRlcj1mdW5jdGlvbihzdGF0ZSl7dmFyIHN0YXJ0PXN0YXRlLnBvcztpZihzdGF0ZS5lYXQoOTkpKXtpZih0aGlzLnJlZ2V4cF9lYXRDb250cm9sTGV0dGVyKHN0YXRlKSlyZXR1cm4gITA7c3RhdGUucG9zPXN0YXJ0O31yZXR1cm4gITF9O3BwJDgucmVnZXhwX2VhdFplcm89ZnVuY3Rpb24oc3RhdGUpe3JldHVybiBzdGF0ZS5jdXJyZW50KCk9PT00OCYmIWlzRGVjaW1hbERpZ2l0KHN0YXRlLmxvb2thaGVhZCgpKT8oc3RhdGUubGFzdEludFZhbHVlPTAsc3RhdGUuYWR2YW5jZSgpLCEwKTohMX07cHAkOC5yZWdleHBfZWF0Q29udHJvbEVzY2FwZT1mdW5jdGlvbihzdGF0ZSl7dmFyIGNoPXN0YXRlLmN1cnJlbnQoKTtyZXR1cm4gY2g9PT0xMTY/KHN0YXRlLmxhc3RJbnRWYWx1ZT05LHN0YXRlLmFkdmFuY2UoKSwhMCk6Y2g9PT0xMTA/KHN0YXRlLmxhc3RJbnRWYWx1ZT0xMCxzdGF0ZS5hZHZhbmNlKCksITApOmNoPT09MTE4PyhzdGF0ZS5sYXN0SW50VmFsdWU9MTEsc3RhdGUuYWR2YW5jZSgpLCEwKTpjaD09PTEwMj8oc3RhdGUubGFzdEludFZhbHVlPTEyLHN0YXRlLmFkdmFuY2UoKSwhMCk6Y2g9PT0xMTQ/KHN0YXRlLmxhc3RJbnRWYWx1ZT0xMyxzdGF0ZS5hZHZhbmNlKCksITApOiExfTtwcCQ4LnJlZ2V4cF9lYXRDb250cm9sTGV0dGVyPWZ1bmN0aW9uKHN0YXRlKXt2YXIgY2g9c3RhdGUuY3VycmVudCgpO3JldHVybiBpc0NvbnRyb2xMZXR0ZXIoY2gpPyhzdGF0ZS5sYXN0SW50VmFsdWU9Y2glMzIsc3RhdGUuYWR2YW5jZSgpLCEwKTohMX07cHAkOC5yZWdleHBfZWF0UmVnRXhwVW5pY29kZUVzY2FwZVNlcXVlbmNlPWZ1bmN0aW9uKHN0YXRlLGZvcmNlVSl7Zm9yY2VVPT09dm9pZCAwJiYoZm9yY2VVPSExKTt2YXIgc3RhcnQ9c3RhdGUucG9zLHN3aXRjaFU9Zm9yY2VVfHxzdGF0ZS5zd2l0Y2hVO2lmKHN0YXRlLmVhdCgxMTcpKXtpZih0aGlzLnJlZ2V4cF9lYXRGaXhlZEhleERpZ2l0cyhzdGF0ZSw0KSl7dmFyIGxlYWQ9c3RhdGUubGFzdEludFZhbHVlO2lmKHN3aXRjaFUmJmxlYWQ+PTU1Mjk2JiZsZWFkPD01NjMxOSl7dmFyIGxlYWRTdXJyb2dhdGVFbmQ9c3RhdGUucG9zO2lmKHN0YXRlLmVhdCg5MikmJnN0YXRlLmVhdCgxMTcpJiZ0aGlzLnJlZ2V4cF9lYXRGaXhlZEhleERpZ2l0cyhzdGF0ZSw0KSl7dmFyIHRyYWlsPXN0YXRlLmxhc3RJbnRWYWx1ZTtpZih0cmFpbD49NTYzMjAmJnRyYWlsPD01NzM0MylyZXR1cm4gc3RhdGUubGFzdEludFZhbHVlPShsZWFkLTU1Mjk2KSoxMDI0Kyh0cmFpbC01NjMyMCkrNjU1MzYsITB9c3RhdGUucG9zPWxlYWRTdXJyb2dhdGVFbmQsc3RhdGUubGFzdEludFZhbHVlPWxlYWQ7fXJldHVybiAhMH1pZihzd2l0Y2hVJiZzdGF0ZS5lYXQoMTIzKSYmdGhpcy5yZWdleHBfZWF0SGV4RGlnaXRzKHN0YXRlKSYmc3RhdGUuZWF0KDEyNSkmJmlzVmFsaWRVbmljb2RlKHN0YXRlLmxhc3RJbnRWYWx1ZSkpcmV0dXJuICEwO3N3aXRjaFUmJnN0YXRlLnJhaXNlKFwiSW52YWxpZCB1bmljb2RlIGVzY2FwZVwiKSxzdGF0ZS5wb3M9c3RhcnQ7fXJldHVybiAhMX07cHAkOC5yZWdleHBfZWF0SWRlbnRpdHlFc2NhcGU9ZnVuY3Rpb24oc3RhdGUpe2lmKHN0YXRlLnN3aXRjaFUpcmV0dXJuIHRoaXMucmVnZXhwX2VhdFN5bnRheENoYXJhY3RlcihzdGF0ZSk/ITA6c3RhdGUuZWF0KDQ3KT8oc3RhdGUubGFzdEludFZhbHVlPTQ3LCEwKTohMTt2YXIgY2g9c3RhdGUuY3VycmVudCgpO3JldHVybiBjaCE9PTk5JiYoIXN0YXRlLnN3aXRjaE58fGNoIT09MTA3KT8oc3RhdGUubGFzdEludFZhbHVlPWNoLHN0YXRlLmFkdmFuY2UoKSwhMCk6ITF9O3BwJDgucmVnZXhwX2VhdERlY2ltYWxFc2NhcGU9ZnVuY3Rpb24oc3RhdGUpe3N0YXRlLmxhc3RJbnRWYWx1ZT0wO3ZhciBjaD1zdGF0ZS5jdXJyZW50KCk7aWYoY2g+PTQ5JiZjaDw9NTcpe2RvIHN0YXRlLmxhc3RJbnRWYWx1ZT0xMCpzdGF0ZS5sYXN0SW50VmFsdWUrKGNoLTQ4KSxzdGF0ZS5hZHZhbmNlKCk7d2hpbGUoKGNoPXN0YXRlLmN1cnJlbnQoKSk+PTQ4JiZjaDw9NTcpO3JldHVybiAhMH1yZXR1cm4gITF9O3BwJDgucmVnZXhwX2VhdENoYXJhY3RlckNsYXNzRXNjYXBlPWZ1bmN0aW9uKHN0YXRlKXt2YXIgY2g9c3RhdGUuY3VycmVudCgpO2lmKGlzQ2hhcmFjdGVyQ2xhc3NFc2NhcGUoY2gpKXJldHVybiBzdGF0ZS5sYXN0SW50VmFsdWU9LTEsc3RhdGUuYWR2YW5jZSgpLCEwO2lmKHN0YXRlLnN3aXRjaFUmJnRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OSYmKGNoPT09ODB8fGNoPT09MTEyKSl7aWYoc3RhdGUubGFzdEludFZhbHVlPS0xLHN0YXRlLmFkdmFuY2UoKSxzdGF0ZS5lYXQoMTIzKSYmdGhpcy5yZWdleHBfZWF0VW5pY29kZVByb3BlcnR5VmFsdWVFeHByZXNzaW9uKHN0YXRlKSYmc3RhdGUuZWF0KDEyNSkpcmV0dXJuICEwO3N0YXRlLnJhaXNlKFwiSW52YWxpZCBwcm9wZXJ0eSBuYW1lXCIpO31yZXR1cm4gITF9O3BwJDgucmVnZXhwX2VhdFVuaWNvZGVQcm9wZXJ0eVZhbHVlRXhwcmVzc2lvbj1mdW5jdGlvbihzdGF0ZSl7dmFyIHN0YXJ0PXN0YXRlLnBvcztpZih0aGlzLnJlZ2V4cF9lYXRVbmljb2RlUHJvcGVydHlOYW1lKHN0YXRlKSYmc3RhdGUuZWF0KDYxKSl7dmFyIG5hbWU9c3RhdGUubGFzdFN0cmluZ1ZhbHVlO2lmKHRoaXMucmVnZXhwX2VhdFVuaWNvZGVQcm9wZXJ0eVZhbHVlKHN0YXRlKSl7dmFyIHZhbHVlPXN0YXRlLmxhc3RTdHJpbmdWYWx1ZTtyZXR1cm4gdGhpcy5yZWdleHBfdmFsaWRhdGVVbmljb2RlUHJvcGVydHlOYW1lQW5kVmFsdWUoc3RhdGUsbmFtZSx2YWx1ZSksITB9fWlmKHN0YXRlLnBvcz1zdGFydCx0aGlzLnJlZ2V4cF9lYXRMb25lVW5pY29kZVByb3BlcnR5TmFtZU9yVmFsdWUoc3RhdGUpKXt2YXIgbmFtZU9yVmFsdWU9c3RhdGUubGFzdFN0cmluZ1ZhbHVlO3JldHVybiB0aGlzLnJlZ2V4cF92YWxpZGF0ZVVuaWNvZGVQcm9wZXJ0eU5hbWVPclZhbHVlKHN0YXRlLG5hbWVPclZhbHVlKSwhMH1yZXR1cm4gITF9O3BwJDgucmVnZXhwX3ZhbGlkYXRlVW5pY29kZVByb3BlcnR5TmFtZUFuZFZhbHVlPWZ1bmN0aW9uKHN0YXRlLG5hbWUsdmFsdWUpe2hhcyhzdGF0ZS51bmljb2RlUHJvcGVydGllcy5ub25CaW5hcnksbmFtZSl8fHN0YXRlLnJhaXNlKFwiSW52YWxpZCBwcm9wZXJ0eSBuYW1lXCIpLHN0YXRlLnVuaWNvZGVQcm9wZXJ0aWVzLm5vbkJpbmFyeVtuYW1lXS50ZXN0KHZhbHVlKXx8c3RhdGUucmFpc2UoXCJJbnZhbGlkIHByb3BlcnR5IHZhbHVlXCIpO307cHAkOC5yZWdleHBfdmFsaWRhdGVVbmljb2RlUHJvcGVydHlOYW1lT3JWYWx1ZT1mdW5jdGlvbihzdGF0ZSxuYW1lT3JWYWx1ZSl7c3RhdGUudW5pY29kZVByb3BlcnRpZXMuYmluYXJ5LnRlc3QobmFtZU9yVmFsdWUpfHxzdGF0ZS5yYWlzZShcIkludmFsaWQgcHJvcGVydHkgbmFtZVwiKTt9O3BwJDgucmVnZXhwX2VhdFVuaWNvZGVQcm9wZXJ0eU5hbWU9ZnVuY3Rpb24oc3RhdGUpe3ZhciBjaD0wO2ZvcihzdGF0ZS5sYXN0U3RyaW5nVmFsdWU9XCJcIjtpc1VuaWNvZGVQcm9wZXJ0eU5hbWVDaGFyYWN0ZXIoY2g9c3RhdGUuY3VycmVudCgpKTspc3RhdGUubGFzdFN0cmluZ1ZhbHVlKz1jb2RlUG9pbnRUb1N0cmluZyhjaCksc3RhdGUuYWR2YW5jZSgpO3JldHVybiBzdGF0ZS5sYXN0U3RyaW5nVmFsdWUhPT1cIlwifTtwcCQ4LnJlZ2V4cF9lYXRVbmljb2RlUHJvcGVydHlWYWx1ZT1mdW5jdGlvbihzdGF0ZSl7dmFyIGNoPTA7Zm9yKHN0YXRlLmxhc3RTdHJpbmdWYWx1ZT1cIlwiO2lzVW5pY29kZVByb3BlcnR5VmFsdWVDaGFyYWN0ZXIoY2g9c3RhdGUuY3VycmVudCgpKTspc3RhdGUubGFzdFN0cmluZ1ZhbHVlKz1jb2RlUG9pbnRUb1N0cmluZyhjaCksc3RhdGUuYWR2YW5jZSgpO3JldHVybiBzdGF0ZS5sYXN0U3RyaW5nVmFsdWUhPT1cIlwifTtwcCQ4LnJlZ2V4cF9lYXRMb25lVW5pY29kZVByb3BlcnR5TmFtZU9yVmFsdWU9ZnVuY3Rpb24oc3RhdGUpe3JldHVybiB0aGlzLnJlZ2V4cF9lYXRVbmljb2RlUHJvcGVydHlWYWx1ZShzdGF0ZSl9O3BwJDgucmVnZXhwX2VhdENoYXJhY3RlckNsYXNzPWZ1bmN0aW9uKHN0YXRlKXtpZihzdGF0ZS5lYXQoOTEpKXtpZihzdGF0ZS5lYXQoOTQpLHRoaXMucmVnZXhwX2NsYXNzUmFuZ2VzKHN0YXRlKSxzdGF0ZS5lYXQoOTMpKXJldHVybiAhMDtzdGF0ZS5yYWlzZShcIlVudGVybWluYXRlZCBjaGFyYWN0ZXIgY2xhc3NcIik7fXJldHVybiAhMX07cHAkOC5yZWdleHBfY2xhc3NSYW5nZXM9ZnVuY3Rpb24oc3RhdGUpe2Zvcig7dGhpcy5yZWdleHBfZWF0Q2xhc3NBdG9tKHN0YXRlKTspe3ZhciBsZWZ0PXN0YXRlLmxhc3RJbnRWYWx1ZTtpZihzdGF0ZS5lYXQoNDUpJiZ0aGlzLnJlZ2V4cF9lYXRDbGFzc0F0b20oc3RhdGUpKXt2YXIgcmlnaHQ9c3RhdGUubGFzdEludFZhbHVlO3N0YXRlLnN3aXRjaFUmJihsZWZ0PT09LTF8fHJpZ2h0PT09LTEpJiZzdGF0ZS5yYWlzZShcIkludmFsaWQgY2hhcmFjdGVyIGNsYXNzXCIpLGxlZnQhPT0tMSYmcmlnaHQhPT0tMSYmbGVmdD5yaWdodCYmc3RhdGUucmFpc2UoXCJSYW5nZSBvdXQgb2Ygb3JkZXIgaW4gY2hhcmFjdGVyIGNsYXNzXCIpO319fTtwcCQ4LnJlZ2V4cF9lYXRDbGFzc0F0b209ZnVuY3Rpb24oc3RhdGUpe3ZhciBzdGFydD1zdGF0ZS5wb3M7aWYoc3RhdGUuZWF0KDkyKSl7aWYodGhpcy5yZWdleHBfZWF0Q2xhc3NFc2NhcGUoc3RhdGUpKXJldHVybiAhMDtpZihzdGF0ZS5zd2l0Y2hVKXt2YXIgY2gkMT1zdGF0ZS5jdXJyZW50KCk7KGNoJDE9PT05OXx8aXNPY3RhbERpZ2l0KGNoJDEpKSYmc3RhdGUucmFpc2UoXCJJbnZhbGlkIGNsYXNzIGVzY2FwZVwiKSxzdGF0ZS5yYWlzZShcIkludmFsaWQgZXNjYXBlXCIpO31zdGF0ZS5wb3M9c3RhcnQ7fXZhciBjaD1zdGF0ZS5jdXJyZW50KCk7cmV0dXJuIGNoIT09OTM/KHN0YXRlLmxhc3RJbnRWYWx1ZT1jaCxzdGF0ZS5hZHZhbmNlKCksITApOiExfTtwcCQ4LnJlZ2V4cF9lYXRDbGFzc0VzY2FwZT1mdW5jdGlvbihzdGF0ZSl7dmFyIHN0YXJ0PXN0YXRlLnBvcztpZihzdGF0ZS5lYXQoOTgpKXJldHVybiBzdGF0ZS5sYXN0SW50VmFsdWU9OCwhMDtpZihzdGF0ZS5zd2l0Y2hVJiZzdGF0ZS5lYXQoNDUpKXJldHVybiBzdGF0ZS5sYXN0SW50VmFsdWU9NDUsITA7aWYoIXN0YXRlLnN3aXRjaFUmJnN0YXRlLmVhdCg5OSkpe2lmKHRoaXMucmVnZXhwX2VhdENsYXNzQ29udHJvbExldHRlcihzdGF0ZSkpcmV0dXJuICEwO3N0YXRlLnBvcz1zdGFydDt9cmV0dXJuIHRoaXMucmVnZXhwX2VhdENoYXJhY3RlckNsYXNzRXNjYXBlKHN0YXRlKXx8dGhpcy5yZWdleHBfZWF0Q2hhcmFjdGVyRXNjYXBlKHN0YXRlKX07cHAkOC5yZWdleHBfZWF0Q2xhc3NDb250cm9sTGV0dGVyPWZ1bmN0aW9uKHN0YXRlKXt2YXIgY2g9c3RhdGUuY3VycmVudCgpO3JldHVybiBpc0RlY2ltYWxEaWdpdChjaCl8fGNoPT09OTU/KHN0YXRlLmxhc3RJbnRWYWx1ZT1jaCUzMixzdGF0ZS5hZHZhbmNlKCksITApOiExfTtwcCQ4LnJlZ2V4cF9lYXRIZXhFc2NhcGVTZXF1ZW5jZT1mdW5jdGlvbihzdGF0ZSl7dmFyIHN0YXJ0PXN0YXRlLnBvcztpZihzdGF0ZS5lYXQoMTIwKSl7aWYodGhpcy5yZWdleHBfZWF0Rml4ZWRIZXhEaWdpdHMoc3RhdGUsMikpcmV0dXJuICEwO3N0YXRlLnN3aXRjaFUmJnN0YXRlLnJhaXNlKFwiSW52YWxpZCBlc2NhcGVcIiksc3RhdGUucG9zPXN0YXJ0O31yZXR1cm4gITF9O3BwJDgucmVnZXhwX2VhdERlY2ltYWxEaWdpdHM9ZnVuY3Rpb24oc3RhdGUpe3ZhciBzdGFydD1zdGF0ZS5wb3MsY2g9MDtmb3Ioc3RhdGUubGFzdEludFZhbHVlPTA7aXNEZWNpbWFsRGlnaXQoY2g9c3RhdGUuY3VycmVudCgpKTspc3RhdGUubGFzdEludFZhbHVlPTEwKnN0YXRlLmxhc3RJbnRWYWx1ZSsoY2gtNDgpLHN0YXRlLmFkdmFuY2UoKTtyZXR1cm4gc3RhdGUucG9zIT09c3RhcnR9O3BwJDgucmVnZXhwX2VhdEhleERpZ2l0cz1mdW5jdGlvbihzdGF0ZSl7dmFyIHN0YXJ0PXN0YXRlLnBvcyxjaD0wO2ZvcihzdGF0ZS5sYXN0SW50VmFsdWU9MDtpc0hleERpZ2l0KGNoPXN0YXRlLmN1cnJlbnQoKSk7KXN0YXRlLmxhc3RJbnRWYWx1ZT0xNipzdGF0ZS5sYXN0SW50VmFsdWUraGV4VG9JbnQoY2gpLHN0YXRlLmFkdmFuY2UoKTtyZXR1cm4gc3RhdGUucG9zIT09c3RhcnR9O3BwJDgucmVnZXhwX2VhdExlZ2FjeU9jdGFsRXNjYXBlU2VxdWVuY2U9ZnVuY3Rpb24oc3RhdGUpe2lmKHRoaXMucmVnZXhwX2VhdE9jdGFsRGlnaXQoc3RhdGUpKXt2YXIgbjE9c3RhdGUubGFzdEludFZhbHVlO2lmKHRoaXMucmVnZXhwX2VhdE9jdGFsRGlnaXQoc3RhdGUpKXt2YXIgbjI9c3RhdGUubGFzdEludFZhbHVlO24xPD0zJiZ0aGlzLnJlZ2V4cF9lYXRPY3RhbERpZ2l0KHN0YXRlKT9zdGF0ZS5sYXN0SW50VmFsdWU9bjEqNjQrbjIqOCtzdGF0ZS5sYXN0SW50VmFsdWU6c3RhdGUubGFzdEludFZhbHVlPW4xKjgrbjI7fWVsc2Ugc3RhdGUubGFzdEludFZhbHVlPW4xO3JldHVybiAhMH1yZXR1cm4gITF9O3BwJDgucmVnZXhwX2VhdE9jdGFsRGlnaXQ9ZnVuY3Rpb24oc3RhdGUpe3ZhciBjaD1zdGF0ZS5jdXJyZW50KCk7cmV0dXJuIGlzT2N0YWxEaWdpdChjaCk/KHN0YXRlLmxhc3RJbnRWYWx1ZT1jaC00OCxzdGF0ZS5hZHZhbmNlKCksITApOihzdGF0ZS5sYXN0SW50VmFsdWU9MCwhMSl9O3BwJDgucmVnZXhwX2VhdEZpeGVkSGV4RGlnaXRzPWZ1bmN0aW9uKHN0YXRlLGxlbmd0aCl7dmFyIHN0YXJ0PXN0YXRlLnBvcztzdGF0ZS5sYXN0SW50VmFsdWU9MDtmb3IodmFyIGk9MDtpPGxlbmd0aDsrK2kpe3ZhciBjaD1zdGF0ZS5jdXJyZW50KCk7aWYoIWlzSGV4RGlnaXQoY2gpKXJldHVybiBzdGF0ZS5wb3M9c3RhcnQsITE7c3RhdGUubGFzdEludFZhbHVlPTE2KnN0YXRlLmxhc3RJbnRWYWx1ZStoZXhUb0ludChjaCksc3RhdGUuYWR2YW5jZSgpO31yZXR1cm4gITB9O1Rva2VuPWZ1bmN0aW9uKHApe3RoaXMudHlwZT1wLnR5cGUsdGhpcy52YWx1ZT1wLnZhbHVlLHRoaXMuc3RhcnQ9cC5zdGFydCx0aGlzLmVuZD1wLmVuZCxwLm9wdGlvbnMubG9jYXRpb25zJiYodGhpcy5sb2M9bmV3IFNvdXJjZUxvY2F0aW9uKHAscC5zdGFydExvYyxwLmVuZExvYykpLHAub3B0aW9ucy5yYW5nZXMmJih0aGlzLnJhbmdlPVtwLnN0YXJ0LHAuZW5kXSk7fSxwcCQ5PVBhcnNlci5wcm90b3R5cGU7cHAkOS5uZXh0PWZ1bmN0aW9uKGlnbm9yZUVzY2FwZVNlcXVlbmNlSW5LZXl3b3JkKXshaWdub3JlRXNjYXBlU2VxdWVuY2VJbktleXdvcmQmJnRoaXMudHlwZS5rZXl3b3JkJiZ0aGlzLmNvbnRhaW5zRXNjJiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUodGhpcy5zdGFydCxcIkVzY2FwZSBzZXF1ZW5jZSBpbiBrZXl3b3JkIFwiK3RoaXMudHlwZS5rZXl3b3JkKSx0aGlzLm9wdGlvbnMub25Ub2tlbiYmdGhpcy5vcHRpb25zLm9uVG9rZW4obmV3IFRva2VuKHRoaXMpKSx0aGlzLmxhc3RUb2tFbmQ9dGhpcy5lbmQsdGhpcy5sYXN0VG9rU3RhcnQ9dGhpcy5zdGFydCx0aGlzLmxhc3RUb2tFbmRMb2M9dGhpcy5lbmRMb2MsdGhpcy5sYXN0VG9rU3RhcnRMb2M9dGhpcy5zdGFydExvYyx0aGlzLm5leHRUb2tlbigpO307cHAkOS5nZXRUb2tlbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5leHQoKSxuZXcgVG9rZW4odGhpcyl9O3R5cGVvZiBTeW1ib2w8XCJ1XCImJihwcCQ5W1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXt2YXIgdGhpcyQxJDE9dGhpcztyZXR1cm4ge25leHQ6ZnVuY3Rpb24oKXt2YXIgdG9rZW49dGhpcyQxJDEuZ2V0VG9rZW4oKTtyZXR1cm4ge2RvbmU6dG9rZW4udHlwZT09PXR5cGVzLmVvZix2YWx1ZTp0b2tlbn19fX0pO3BwJDkuY3VyQ29udGV4dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNvbnRleHRbdGhpcy5jb250ZXh0Lmxlbmd0aC0xXX07cHAkOS5uZXh0VG9rZW49ZnVuY3Rpb24oKXt2YXIgY3VyQ29udGV4dD10aGlzLmN1ckNvbnRleHQoKTtpZigoIWN1ckNvbnRleHR8fCFjdXJDb250ZXh0LnByZXNlcnZlU3BhY2UpJiZ0aGlzLnNraXBTcGFjZSgpLHRoaXMuc3RhcnQ9dGhpcy5wb3MsdGhpcy5vcHRpb25zLmxvY2F0aW9ucyYmKHRoaXMuc3RhcnRMb2M9dGhpcy5jdXJQb3NpdGlvbigpKSx0aGlzLnBvcz49dGhpcy5pbnB1dC5sZW5ndGgpcmV0dXJuIHRoaXMuZmluaXNoVG9rZW4odHlwZXMuZW9mKTtpZihjdXJDb250ZXh0Lm92ZXJyaWRlKXJldHVybiBjdXJDb250ZXh0Lm92ZXJyaWRlKHRoaXMpO3RoaXMucmVhZFRva2VuKHRoaXMuZnVsbENoYXJDb2RlQXRQb3MoKSk7fTtwcCQ5LnJlYWRUb2tlbj1mdW5jdGlvbihjb2RlKXtyZXR1cm4gaXNJZGVudGlmaWVyU3RhcnQoY29kZSx0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTYpfHxjb2RlPT09OTI/dGhpcy5yZWFkV29yZCgpOnRoaXMuZ2V0VG9rZW5Gcm9tQ29kZShjb2RlKX07cHAkOS5mdWxsQ2hhckNvZGVBdFBvcz1mdW5jdGlvbigpe3ZhciBjb2RlPXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcyk7aWYoY29kZTw9NTUyOTV8fGNvZGU+PTU3MzQ0KXJldHVybiBjb2RlO3ZhciBuZXh0PXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysxKTtyZXR1cm4gKGNvZGU8PDEwKStuZXh0LTU2NjEzODg4fTtwcCQ5LnNraXBCbG9ja0NvbW1lbnQ9ZnVuY3Rpb24oKXt2YXIgc3RhcnRMb2M9dGhpcy5vcHRpb25zLm9uQ29tbWVudCYmdGhpcy5jdXJQb3NpdGlvbigpLHN0YXJ0PXRoaXMucG9zLGVuZD10aGlzLmlucHV0LmluZGV4T2YoXCIqL1wiLHRoaXMucG9zKz0yKTtpZihlbmQ9PT0tMSYmdGhpcy5yYWlzZSh0aGlzLnBvcy0yLFwiVW50ZXJtaW5hdGVkIGNvbW1lbnRcIiksdGhpcy5wb3M9ZW5kKzIsdGhpcy5vcHRpb25zLmxvY2F0aW9ucyl7bGluZUJyZWFrRy5sYXN0SW5kZXg9c3RhcnQ7Zm9yKHZhciBtYXRjaDsobWF0Y2g9bGluZUJyZWFrRy5leGVjKHRoaXMuaW5wdXQpKSYmbWF0Y2guaW5kZXg8dGhpcy5wb3M7KSsrdGhpcy5jdXJMaW5lLHRoaXMubGluZVN0YXJ0PW1hdGNoLmluZGV4K21hdGNoWzBdLmxlbmd0aDt9dGhpcy5vcHRpb25zLm9uQ29tbWVudCYmdGhpcy5vcHRpb25zLm9uQ29tbWVudCghMCx0aGlzLmlucHV0LnNsaWNlKHN0YXJ0KzIsZW5kKSxzdGFydCx0aGlzLnBvcyxzdGFydExvYyx0aGlzLmN1clBvc2l0aW9uKCkpO307cHAkOS5za2lwTGluZUNvbW1lbnQ9ZnVuY3Rpb24oc3RhcnRTa2lwKXtmb3IodmFyIHN0YXJ0PXRoaXMucG9zLHN0YXJ0TG9jPXRoaXMub3B0aW9ucy5vbkNvbW1lbnQmJnRoaXMuY3VyUG9zaXRpb24oKSxjaD10aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MrPXN0YXJ0U2tpcCk7dGhpcy5wb3M8dGhpcy5pbnB1dC5sZW5ndGgmJiFpc05ld0xpbmUoY2gpOyljaD10aGlzLmlucHV0LmNoYXJDb2RlQXQoKyt0aGlzLnBvcyk7dGhpcy5vcHRpb25zLm9uQ29tbWVudCYmdGhpcy5vcHRpb25zLm9uQ29tbWVudCghMSx0aGlzLmlucHV0LnNsaWNlKHN0YXJ0K3N0YXJ0U2tpcCx0aGlzLnBvcyksc3RhcnQsdGhpcy5wb3Msc3RhcnRMb2MsdGhpcy5jdXJQb3NpdGlvbigpKTt9O3BwJDkuc2tpcFNwYWNlPWZ1bmN0aW9uKCl7bG9vcDpmb3IoO3RoaXMucG9zPHRoaXMuaW5wdXQubGVuZ3RoOyl7dmFyIGNoPXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcyk7c3dpdGNoKGNoKXtjYXNlIDMyOmNhc2UgMTYwOisrdGhpcy5wb3M7YnJlYWs7Y2FzZSAxMzp0aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MrMSk9PT0xMCYmKyt0aGlzLnBvcztjYXNlIDEwOmNhc2UgODIzMjpjYXNlIDgyMzM6Kyt0aGlzLnBvcyx0aGlzLm9wdGlvbnMubG9jYXRpb25zJiYoKyt0aGlzLmN1ckxpbmUsdGhpcy5saW5lU3RhcnQ9dGhpcy5wb3MpO2JyZWFrO2Nhc2UgNDc6c3dpdGNoKHRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysxKSl7Y2FzZSA0Mjp0aGlzLnNraXBCbG9ja0NvbW1lbnQoKTticmVhaztjYXNlIDQ3OnRoaXMuc2tpcExpbmVDb21tZW50KDIpO2JyZWFrO2RlZmF1bHQ6YnJlYWsgbG9vcH1icmVhaztkZWZhdWx0OmlmKGNoPjgmJmNoPDE0fHxjaD49NTc2MCYmbm9uQVNDSUl3aGl0ZXNwYWNlLnRlc3QoU3RyaW5nLmZyb21DaGFyQ29kZShjaCkpKSsrdGhpcy5wb3M7ZWxzZSBicmVhayBsb29wfX19O3BwJDkuZmluaXNoVG9rZW49ZnVuY3Rpb24odHlwZSx2YWwpe3RoaXMuZW5kPXRoaXMucG9zLHRoaXMub3B0aW9ucy5sb2NhdGlvbnMmJih0aGlzLmVuZExvYz10aGlzLmN1clBvc2l0aW9uKCkpO3ZhciBwcmV2VHlwZT10aGlzLnR5cGU7dGhpcy50eXBlPXR5cGUsdGhpcy52YWx1ZT12YWwsdGhpcy51cGRhdGVDb250ZXh0KHByZXZUeXBlKTt9O3BwJDkucmVhZFRva2VuX2RvdD1mdW5jdGlvbigpe3ZhciBuZXh0PXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysxKTtpZihuZXh0Pj00OCYmbmV4dDw9NTcpcmV0dXJuIHRoaXMucmVhZE51bWJlcighMCk7dmFyIG5leHQyPXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysyKTtyZXR1cm4gdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj02JiZuZXh0PT09NDYmJm5leHQyPT09NDY/KHRoaXMucG9zKz0zLHRoaXMuZmluaXNoVG9rZW4odHlwZXMuZWxsaXBzaXMpKTooKyt0aGlzLnBvcyx0aGlzLmZpbmlzaFRva2VuKHR5cGVzLmRvdCkpfTtwcCQ5LnJlYWRUb2tlbl9zbGFzaD1mdW5jdGlvbigpe3ZhciBuZXh0PXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysxKTtyZXR1cm4gdGhpcy5leHByQWxsb3dlZD8oKyt0aGlzLnBvcyx0aGlzLnJlYWRSZWdleHAoKSk6bmV4dD09PTYxP3RoaXMuZmluaXNoT3AodHlwZXMuYXNzaWduLDIpOnRoaXMuZmluaXNoT3AodHlwZXMuc2xhc2gsMSl9O3BwJDkucmVhZFRva2VuX211bHRfbW9kdWxvX2V4cD1mdW5jdGlvbihjb2RlKXt2YXIgbmV4dD10aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MrMSksc2l6ZT0xLHRva2VudHlwZT1jb2RlPT09NDI/dHlwZXMuc3Rhcjp0eXBlcy5tb2R1bG87cmV0dXJuIHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49NyYmY29kZT09PTQyJiZuZXh0PT09NDImJigrK3NpemUsdG9rZW50eXBlPXR5cGVzLnN0YXJzdGFyLG5leHQ9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKzIpKSxuZXh0PT09NjE/dGhpcy5maW5pc2hPcCh0eXBlcy5hc3NpZ24sc2l6ZSsxKTp0aGlzLmZpbmlzaE9wKHRva2VudHlwZSxzaXplKX07cHAkOS5yZWFkVG9rZW5fcGlwZV9hbXA9ZnVuY3Rpb24oY29kZSl7dmFyIG5leHQ9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKzEpO2lmKG5leHQ9PT1jb2RlKXtpZih0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTEyKXt2YXIgbmV4dDI9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKzIpO2lmKG5leHQyPT09NjEpcmV0dXJuIHRoaXMuZmluaXNoT3AodHlwZXMuYXNzaWduLDMpfXJldHVybiB0aGlzLmZpbmlzaE9wKGNvZGU9PT0xMjQ/dHlwZXMubG9naWNhbE9SOnR5cGVzLmxvZ2ljYWxBTkQsMil9cmV0dXJuIG5leHQ9PT02MT90aGlzLmZpbmlzaE9wKHR5cGVzLmFzc2lnbiwyKTp0aGlzLmZpbmlzaE9wKGNvZGU9PT0xMjQ/dHlwZXMuYml0d2lzZU9SOnR5cGVzLmJpdHdpc2VBTkQsMSl9O3BwJDkucmVhZFRva2VuX2NhcmV0PWZ1bmN0aW9uKCl7dmFyIG5leHQ9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKzEpO3JldHVybiBuZXh0PT09NjE/dGhpcy5maW5pc2hPcCh0eXBlcy5hc3NpZ24sMik6dGhpcy5maW5pc2hPcCh0eXBlcy5iaXR3aXNlWE9SLDEpfTtwcCQ5LnJlYWRUb2tlbl9wbHVzX21pbj1mdW5jdGlvbihjb2RlKXt2YXIgbmV4dD10aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MrMSk7cmV0dXJuIG5leHQ9PT1jb2RlP25leHQ9PT00NSYmIXRoaXMuaW5Nb2R1bGUmJnRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysyKT09PTYyJiYodGhpcy5sYXN0VG9rRW5kPT09MHx8bGluZUJyZWFrLnRlc3QodGhpcy5pbnB1dC5zbGljZSh0aGlzLmxhc3RUb2tFbmQsdGhpcy5wb3MpKSk/KHRoaXMuc2tpcExpbmVDb21tZW50KDMpLHRoaXMuc2tpcFNwYWNlKCksdGhpcy5uZXh0VG9rZW4oKSk6dGhpcy5maW5pc2hPcCh0eXBlcy5pbmNEZWMsMik6bmV4dD09PTYxP3RoaXMuZmluaXNoT3AodHlwZXMuYXNzaWduLDIpOnRoaXMuZmluaXNoT3AodHlwZXMucGx1c01pbiwxKX07cHAkOS5yZWFkVG9rZW5fbHRfZ3Q9ZnVuY3Rpb24oY29kZSl7dmFyIG5leHQ9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKzEpLHNpemU9MTtyZXR1cm4gbmV4dD09PWNvZGU/KHNpemU9Y29kZT09PTYyJiZ0aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MrMik9PT02Mj8zOjIsdGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zK3NpemUpPT09NjE/dGhpcy5maW5pc2hPcCh0eXBlcy5hc3NpZ24sc2l6ZSsxKTp0aGlzLmZpbmlzaE9wKHR5cGVzLmJpdFNoaWZ0LHNpemUpKTpuZXh0PT09MzMmJmNvZGU9PT02MCYmIXRoaXMuaW5Nb2R1bGUmJnRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysyKT09PTQ1JiZ0aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MrMyk9PT00NT8odGhpcy5za2lwTGluZUNvbW1lbnQoNCksdGhpcy5za2lwU3BhY2UoKSx0aGlzLm5leHRUb2tlbigpKToobmV4dD09PTYxJiYoc2l6ZT0yKSx0aGlzLmZpbmlzaE9wKHR5cGVzLnJlbGF0aW9uYWwsc2l6ZSkpfTtwcCQ5LnJlYWRUb2tlbl9lcV9leGNsPWZ1bmN0aW9uKGNvZGUpe3ZhciBuZXh0PXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysxKTtyZXR1cm4gbmV4dD09PTYxP3RoaXMuZmluaXNoT3AodHlwZXMuZXF1YWxpdHksdGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKzIpPT09NjE/MzoyKTpjb2RlPT09NjEmJm5leHQ9PT02MiYmdGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj02Pyh0aGlzLnBvcys9Mix0aGlzLmZpbmlzaFRva2VuKHR5cGVzLmFycm93KSk6dGhpcy5maW5pc2hPcChjb2RlPT09NjE/dHlwZXMuZXE6dHlwZXMucHJlZml4LDEpfTtwcCQ5LnJlYWRUb2tlbl9xdWVzdGlvbj1mdW5jdGlvbigpe3ZhciBlY21hVmVyc2lvbj10aGlzLm9wdGlvbnMuZWNtYVZlcnNpb247aWYoZWNtYVZlcnNpb24+PTExKXt2YXIgbmV4dD10aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MrMSk7aWYobmV4dD09PTQ2KXt2YXIgbmV4dDI9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKzIpO2lmKG5leHQyPDQ4fHxuZXh0Mj41NylyZXR1cm4gdGhpcy5maW5pc2hPcCh0eXBlcy5xdWVzdGlvbkRvdCwyKX1pZihuZXh0PT09NjMpe2lmKGVjbWFWZXJzaW9uPj0xMil7dmFyIG5leHQyJDE9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKzIpO2lmKG5leHQyJDE9PT02MSlyZXR1cm4gdGhpcy5maW5pc2hPcCh0eXBlcy5hc3NpZ24sMyl9cmV0dXJuIHRoaXMuZmluaXNoT3AodHlwZXMuY29hbGVzY2UsMil9fXJldHVybiB0aGlzLmZpbmlzaE9wKHR5cGVzLnF1ZXN0aW9uLDEpfTtwcCQ5LmdldFRva2VuRnJvbUNvZGU9ZnVuY3Rpb24oY29kZSl7c3dpdGNoKGNvZGUpe2Nhc2UgNDY6cmV0dXJuIHRoaXMucmVhZFRva2VuX2RvdCgpO2Nhc2UgNDA6cmV0dXJuICsrdGhpcy5wb3MsdGhpcy5maW5pc2hUb2tlbih0eXBlcy5wYXJlbkwpO2Nhc2UgNDE6cmV0dXJuICsrdGhpcy5wb3MsdGhpcy5maW5pc2hUb2tlbih0eXBlcy5wYXJlblIpO2Nhc2UgNTk6cmV0dXJuICsrdGhpcy5wb3MsdGhpcy5maW5pc2hUb2tlbih0eXBlcy5zZW1pKTtjYXNlIDQ0OnJldHVybiArK3RoaXMucG9zLHRoaXMuZmluaXNoVG9rZW4odHlwZXMuY29tbWEpO2Nhc2UgOTE6cmV0dXJuICsrdGhpcy5wb3MsdGhpcy5maW5pc2hUb2tlbih0eXBlcy5icmFja2V0TCk7Y2FzZSA5MzpyZXR1cm4gKyt0aGlzLnBvcyx0aGlzLmZpbmlzaFRva2VuKHR5cGVzLmJyYWNrZXRSKTtjYXNlIDEyMzpyZXR1cm4gKyt0aGlzLnBvcyx0aGlzLmZpbmlzaFRva2VuKHR5cGVzLmJyYWNlTCk7Y2FzZSAxMjU6cmV0dXJuICsrdGhpcy5wb3MsdGhpcy5maW5pc2hUb2tlbih0eXBlcy5icmFjZVIpO2Nhc2UgNTg6cmV0dXJuICsrdGhpcy5wb3MsdGhpcy5maW5pc2hUb2tlbih0eXBlcy5jb2xvbik7Y2FzZSA5NjppZih0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb248NilicmVhaztyZXR1cm4gKyt0aGlzLnBvcyx0aGlzLmZpbmlzaFRva2VuKHR5cGVzLmJhY2tRdW90ZSk7Y2FzZSA0ODp2YXIgbmV4dD10aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MrMSk7aWYobmV4dD09PTEyMHx8bmV4dD09PTg4KXJldHVybiB0aGlzLnJlYWRSYWRpeE51bWJlcigxNik7aWYodGhpcy5vcHRpb25zLmVjbWFWZXJzaW9uPj02KXtpZihuZXh0PT09MTExfHxuZXh0PT09NzkpcmV0dXJuIHRoaXMucmVhZFJhZGl4TnVtYmVyKDgpO2lmKG5leHQ9PT05OHx8bmV4dD09PTY2KXJldHVybiB0aGlzLnJlYWRSYWRpeE51bWJlcigyKX1jYXNlIDQ5OmNhc2UgNTA6Y2FzZSA1MTpjYXNlIDUyOmNhc2UgNTM6Y2FzZSA1NDpjYXNlIDU1OmNhc2UgNTY6Y2FzZSA1NzpyZXR1cm4gdGhpcy5yZWFkTnVtYmVyKCExKTtjYXNlIDM0OmNhc2UgMzk6cmV0dXJuIHRoaXMucmVhZFN0cmluZyhjb2RlKTtjYXNlIDQ3OnJldHVybiB0aGlzLnJlYWRUb2tlbl9zbGFzaCgpO2Nhc2UgMzc6Y2FzZSA0MjpyZXR1cm4gdGhpcy5yZWFkVG9rZW5fbXVsdF9tb2R1bG9fZXhwKGNvZGUpO2Nhc2UgMTI0OmNhc2UgMzg6cmV0dXJuIHRoaXMucmVhZFRva2VuX3BpcGVfYW1wKGNvZGUpO2Nhc2UgOTQ6cmV0dXJuIHRoaXMucmVhZFRva2VuX2NhcmV0KCk7Y2FzZSA0MzpjYXNlIDQ1OnJldHVybiB0aGlzLnJlYWRUb2tlbl9wbHVzX21pbihjb2RlKTtjYXNlIDYwOmNhc2UgNjI6cmV0dXJuIHRoaXMucmVhZFRva2VuX2x0X2d0KGNvZGUpO2Nhc2UgNjE6Y2FzZSAzMzpyZXR1cm4gdGhpcy5yZWFkVG9rZW5fZXFfZXhjbChjb2RlKTtjYXNlIDYzOnJldHVybiB0aGlzLnJlYWRUb2tlbl9xdWVzdGlvbigpO2Nhc2UgMTI2OnJldHVybiB0aGlzLmZpbmlzaE9wKHR5cGVzLnByZWZpeCwxKX10aGlzLnJhaXNlKHRoaXMucG9zLFwiVW5leHBlY3RlZCBjaGFyYWN0ZXIgJ1wiK2NvZGVQb2ludFRvU3RyaW5nJDEoY29kZSkrXCInXCIpO307cHAkOS5maW5pc2hPcD1mdW5jdGlvbih0eXBlLHNpemUpe3ZhciBzdHI9dGhpcy5pbnB1dC5zbGljZSh0aGlzLnBvcyx0aGlzLnBvcytzaXplKTtyZXR1cm4gdGhpcy5wb3MrPXNpemUsdGhpcy5maW5pc2hUb2tlbih0eXBlLHN0cil9O3BwJDkucmVhZFJlZ2V4cD1mdW5jdGlvbigpe2Zvcih2YXIgZXNjYXBlZCxpbkNsYXNzLHN0YXJ0PXRoaXMucG9zOzspe3RoaXMucG9zPj10aGlzLmlucHV0Lmxlbmd0aCYmdGhpcy5yYWlzZShzdGFydCxcIlVudGVybWluYXRlZCByZWd1bGFyIGV4cHJlc3Npb25cIik7dmFyIGNoPXRoaXMuaW5wdXQuY2hhckF0KHRoaXMucG9zKTtpZihsaW5lQnJlYWsudGVzdChjaCkmJnRoaXMucmFpc2Uoc3RhcnQsXCJVbnRlcm1pbmF0ZWQgcmVndWxhciBleHByZXNzaW9uXCIpLGVzY2FwZWQpZXNjYXBlZD0hMTtlbHNlIHtpZihjaD09PVwiW1wiKWluQ2xhc3M9ITA7ZWxzZSBpZihjaD09PVwiXVwiJiZpbkNsYXNzKWluQ2xhc3M9ITE7ZWxzZSBpZihjaD09PVwiL1wiJiYhaW5DbGFzcylicmVhaztlc2NhcGVkPWNoPT09XCJcXFxcXCI7fSsrdGhpcy5wb3M7fXZhciBwYXR0ZXJuPXRoaXMuaW5wdXQuc2xpY2Uoc3RhcnQsdGhpcy5wb3MpOysrdGhpcy5wb3M7dmFyIGZsYWdzU3RhcnQ9dGhpcy5wb3MsZmxhZ3M9dGhpcy5yZWFkV29yZDEoKTt0aGlzLmNvbnRhaW5zRXNjJiZ0aGlzLnVuZXhwZWN0ZWQoZmxhZ3NTdGFydCk7dmFyIHN0YXRlPXRoaXMucmVnZXhwU3RhdGV8fCh0aGlzLnJlZ2V4cFN0YXRlPW5ldyBSZWdFeHBWYWxpZGF0aW9uU3RhdGUodGhpcykpO3N0YXRlLnJlc2V0KHN0YXJ0LHBhdHRlcm4sZmxhZ3MpLHRoaXMudmFsaWRhdGVSZWdFeHBGbGFncyhzdGF0ZSksdGhpcy52YWxpZGF0ZVJlZ0V4cFBhdHRlcm4oc3RhdGUpO3ZhciB2YWx1ZT1udWxsO3RyeXt2YWx1ZT1uZXcgUmVnRXhwKHBhdHRlcm4sZmxhZ3MpO31jYXRjaHt9cmV0dXJuIHRoaXMuZmluaXNoVG9rZW4odHlwZXMucmVnZXhwLHtwYXR0ZXJuLGZsYWdzLHZhbHVlfSl9O3BwJDkucmVhZEludD1mdW5jdGlvbihyYWRpeCxsZW4sbWF5YmVMZWdhY3lPY3RhbE51bWVyaWNMaXRlcmFsKXtmb3IodmFyIGFsbG93U2VwYXJhdG9ycz10aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTEyJiZsZW49PT12b2lkIDAsaXNMZWdhY3lPY3RhbE51bWVyaWNMaXRlcmFsPW1heWJlTGVnYWN5T2N0YWxOdW1lcmljTGl0ZXJhbCYmdGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKT09PTQ4LHN0YXJ0PXRoaXMucG9zLHRvdGFsPTAsbGFzdENvZGU9MCxpPTAsZT1sZW4/PzEvMDtpPGU7KytpLCsrdGhpcy5wb3Mpe3ZhciBjb2RlPXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcyksdmFsPXZvaWQgMDtpZihhbGxvd1NlcGFyYXRvcnMmJmNvZGU9PT05NSl7aXNMZWdhY3lPY3RhbE51bWVyaWNMaXRlcmFsJiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUodGhpcy5wb3MsXCJOdW1lcmljIHNlcGFyYXRvciBpcyBub3QgYWxsb3dlZCBpbiBsZWdhY3kgb2N0YWwgbnVtZXJpYyBsaXRlcmFsc1wiKSxsYXN0Q29kZT09PTk1JiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUodGhpcy5wb3MsXCJOdW1lcmljIHNlcGFyYXRvciBtdXN0IGJlIGV4YWN0bHkgb25lIHVuZGVyc2NvcmVcIiksaT09PTAmJnRoaXMucmFpc2VSZWNvdmVyYWJsZSh0aGlzLnBvcyxcIk51bWVyaWMgc2VwYXJhdG9yIGlzIG5vdCBhbGxvd2VkIGF0IHRoZSBmaXJzdCBvZiBkaWdpdHNcIiksbGFzdENvZGU9Y29kZTtjb250aW51ZX1pZihjb2RlPj05Nz92YWw9Y29kZS05NysxMDpjb2RlPj02NT92YWw9Y29kZS02NSsxMDpjb2RlPj00OCYmY29kZTw9NTc/dmFsPWNvZGUtNDg6dmFsPTEvMCx2YWw+PXJhZGl4KWJyZWFrO2xhc3RDb2RlPWNvZGUsdG90YWw9dG90YWwqcmFkaXgrdmFsO31yZXR1cm4gYWxsb3dTZXBhcmF0b3JzJiZsYXN0Q29kZT09PTk1JiZ0aGlzLnJhaXNlUmVjb3ZlcmFibGUodGhpcy5wb3MtMSxcIk51bWVyaWMgc2VwYXJhdG9yIGlzIG5vdCBhbGxvd2VkIGF0IHRoZSBsYXN0IG9mIGRpZ2l0c1wiKSx0aGlzLnBvcz09PXN0YXJ0fHxsZW4hPW51bGwmJnRoaXMucG9zLXN0YXJ0IT09bGVuP251bGw6dG90YWx9O3BwJDkucmVhZFJhZGl4TnVtYmVyPWZ1bmN0aW9uKHJhZGl4KXt2YXIgc3RhcnQ9dGhpcy5wb3M7dGhpcy5wb3MrPTI7dmFyIHZhbD10aGlzLnJlYWRJbnQocmFkaXgpO3JldHVybiB2YWw9PW51bGwmJnRoaXMucmFpc2UodGhpcy5zdGFydCsyLFwiRXhwZWN0ZWQgbnVtYmVyIGluIHJhZGl4IFwiK3JhZGl4KSx0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTExJiZ0aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MpPT09MTEwPyh2YWw9c3RyaW5nVG9CaWdJbnQodGhpcy5pbnB1dC5zbGljZShzdGFydCx0aGlzLnBvcykpLCsrdGhpcy5wb3MpOmlzSWRlbnRpZmllclN0YXJ0KHRoaXMuZnVsbENoYXJDb2RlQXRQb3MoKSkmJnRoaXMucmFpc2UodGhpcy5wb3MsXCJJZGVudGlmaWVyIGRpcmVjdGx5IGFmdGVyIG51bWJlclwiKSx0aGlzLmZpbmlzaFRva2VuKHR5cGVzLm51bSx2YWwpfTtwcCQ5LnJlYWROdW1iZXI9ZnVuY3Rpb24oc3RhcnRzV2l0aERvdCl7dmFyIHN0YXJ0PXRoaXMucG9zOyFzdGFydHNXaXRoRG90JiZ0aGlzLnJlYWRJbnQoMTAsdm9pZCAwLCEwKT09PW51bGwmJnRoaXMucmFpc2Uoc3RhcnQsXCJJbnZhbGlkIG51bWJlclwiKTt2YXIgb2N0YWw9dGhpcy5wb3Mtc3RhcnQ+PTImJnRoaXMuaW5wdXQuY2hhckNvZGVBdChzdGFydCk9PT00ODtvY3RhbCYmdGhpcy5zdHJpY3QmJnRoaXMucmFpc2Uoc3RhcnQsXCJJbnZhbGlkIG51bWJlclwiKTt2YXIgbmV4dD10aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MpO2lmKCFvY3RhbCYmIXN0YXJ0c1dpdGhEb3QmJnRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49MTEmJm5leHQ9PT0xMTApe3ZhciB2YWwkMT1zdHJpbmdUb0JpZ0ludCh0aGlzLmlucHV0LnNsaWNlKHN0YXJ0LHRoaXMucG9zKSk7cmV0dXJuICsrdGhpcy5wb3MsaXNJZGVudGlmaWVyU3RhcnQodGhpcy5mdWxsQ2hhckNvZGVBdFBvcygpKSYmdGhpcy5yYWlzZSh0aGlzLnBvcyxcIklkZW50aWZpZXIgZGlyZWN0bHkgYWZ0ZXIgbnVtYmVyXCIpLHRoaXMuZmluaXNoVG9rZW4odHlwZXMubnVtLHZhbCQxKX1vY3RhbCYmL1s4OV0vLnRlc3QodGhpcy5pbnB1dC5zbGljZShzdGFydCx0aGlzLnBvcykpJiYob2N0YWw9ITEpLG5leHQ9PT00NiYmIW9jdGFsJiYoKyt0aGlzLnBvcyx0aGlzLnJlYWRJbnQoMTApLG5leHQ9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKSksKG5leHQ9PT02OXx8bmV4dD09PTEwMSkmJiFvY3RhbCYmKG5leHQ9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KCsrdGhpcy5wb3MpLChuZXh0PT09NDN8fG5leHQ9PT00NSkmJisrdGhpcy5wb3MsdGhpcy5yZWFkSW50KDEwKT09PW51bGwmJnRoaXMucmFpc2Uoc3RhcnQsXCJJbnZhbGlkIG51bWJlclwiKSksaXNJZGVudGlmaWVyU3RhcnQodGhpcy5mdWxsQ2hhckNvZGVBdFBvcygpKSYmdGhpcy5yYWlzZSh0aGlzLnBvcyxcIklkZW50aWZpZXIgZGlyZWN0bHkgYWZ0ZXIgbnVtYmVyXCIpO3ZhciB2YWw9c3RyaW5nVG9OdW1iZXIodGhpcy5pbnB1dC5zbGljZShzdGFydCx0aGlzLnBvcyksb2N0YWwpO3JldHVybiB0aGlzLmZpbmlzaFRva2VuKHR5cGVzLm51bSx2YWwpfTtwcCQ5LnJlYWRDb2RlUG9pbnQ9ZnVuY3Rpb24oKXt2YXIgY2g9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKSxjb2RlO2lmKGNoPT09MTIzKXt0aGlzLm9wdGlvbnMuZWNtYVZlcnNpb248NiYmdGhpcy51bmV4cGVjdGVkKCk7dmFyIGNvZGVQb3M9Kyt0aGlzLnBvcztjb2RlPXRoaXMucmVhZEhleENoYXIodGhpcy5pbnB1dC5pbmRleE9mKFwifVwiLHRoaXMucG9zKS10aGlzLnBvcyksKyt0aGlzLnBvcyxjb2RlPjExMTQxMTEmJnRoaXMuaW52YWxpZFN0cmluZ1Rva2VuKGNvZGVQb3MsXCJDb2RlIHBvaW50IG91dCBvZiBib3VuZHNcIik7fWVsc2UgY29kZT10aGlzLnJlYWRIZXhDaGFyKDQpO3JldHVybiBjb2RlfTtwcCQ5LnJlYWRTdHJpbmc9ZnVuY3Rpb24ocXVvdGUpe2Zvcih2YXIgb3V0PVwiXCIsY2h1bmtTdGFydD0rK3RoaXMucG9zOzspe3RoaXMucG9zPj10aGlzLmlucHV0Lmxlbmd0aCYmdGhpcy5yYWlzZSh0aGlzLnN0YXJ0LFwiVW50ZXJtaW5hdGVkIHN0cmluZyBjb25zdGFudFwiKTt2YXIgY2g9dGhpcy5pbnB1dC5jaGFyQ29kZUF0KHRoaXMucG9zKTtpZihjaD09PXF1b3RlKWJyZWFrO2NoPT09OTI/KG91dCs9dGhpcy5pbnB1dC5zbGljZShjaHVua1N0YXJ0LHRoaXMucG9zKSxvdXQrPXRoaXMucmVhZEVzY2FwZWRDaGFyKCExKSxjaHVua1N0YXJ0PXRoaXMucG9zKTooaXNOZXdMaW5lKGNoLHRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49MTApJiZ0aGlzLnJhaXNlKHRoaXMuc3RhcnQsXCJVbnRlcm1pbmF0ZWQgc3RyaW5nIGNvbnN0YW50XCIpLCsrdGhpcy5wb3MpO31yZXR1cm4gb3V0Kz10aGlzLmlucHV0LnNsaWNlKGNodW5rU3RhcnQsdGhpcy5wb3MrKyksdGhpcy5maW5pc2hUb2tlbih0eXBlcy5zdHJpbmcsb3V0KX07SU5WQUxJRF9URU1QTEFURV9FU0NBUEVfRVJST1I9e307cHAkOS50cnlSZWFkVGVtcGxhdGVUb2tlbj1mdW5jdGlvbigpe3RoaXMuaW5UZW1wbGF0ZUVsZW1lbnQ9ITA7dHJ5e3RoaXMucmVhZFRtcGxUb2tlbigpO31jYXRjaChlcnIpe2lmKGVycj09PUlOVkFMSURfVEVNUExBVEVfRVNDQVBFX0VSUk9SKXRoaXMucmVhZEludmFsaWRUZW1wbGF0ZVRva2VuKCk7ZWxzZSB0aHJvdyBlcnJ9dGhpcy5pblRlbXBsYXRlRWxlbWVudD0hMTt9O3BwJDkuaW52YWxpZFN0cmluZ1Rva2VuPWZ1bmN0aW9uKHBvc2l0aW9uLG1lc3NhZ2Upe2lmKHRoaXMuaW5UZW1wbGF0ZUVsZW1lbnQmJnRoaXMub3B0aW9ucy5lY21hVmVyc2lvbj49OSl0aHJvdyBJTlZBTElEX1RFTVBMQVRFX0VTQ0FQRV9FUlJPUjt0aGlzLnJhaXNlKHBvc2l0aW9uLG1lc3NhZ2UpO307cHAkOS5yZWFkVG1wbFRva2VuPWZ1bmN0aW9uKCl7Zm9yKHZhciBvdXQ9XCJcIixjaHVua1N0YXJ0PXRoaXMucG9zOzspe3RoaXMucG9zPj10aGlzLmlucHV0Lmxlbmd0aCYmdGhpcy5yYWlzZSh0aGlzLnN0YXJ0LFwiVW50ZXJtaW5hdGVkIHRlbXBsYXRlXCIpO3ZhciBjaD10aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MpO2lmKGNoPT09OTZ8fGNoPT09MzYmJnRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysxKT09PTEyMylyZXR1cm4gdGhpcy5wb3M9PT10aGlzLnN0YXJ0JiYodGhpcy50eXBlPT09dHlwZXMudGVtcGxhdGV8fHRoaXMudHlwZT09PXR5cGVzLmludmFsaWRUZW1wbGF0ZSk/Y2g9PT0zNj8odGhpcy5wb3MrPTIsdGhpcy5maW5pc2hUb2tlbih0eXBlcy5kb2xsYXJCcmFjZUwpKTooKyt0aGlzLnBvcyx0aGlzLmZpbmlzaFRva2VuKHR5cGVzLmJhY2tRdW90ZSkpOihvdXQrPXRoaXMuaW5wdXQuc2xpY2UoY2h1bmtTdGFydCx0aGlzLnBvcyksdGhpcy5maW5pc2hUb2tlbih0eXBlcy50ZW1wbGF0ZSxvdXQpKTtpZihjaD09PTkyKW91dCs9dGhpcy5pbnB1dC5zbGljZShjaHVua1N0YXJ0LHRoaXMucG9zKSxvdXQrPXRoaXMucmVhZEVzY2FwZWRDaGFyKCEwKSxjaHVua1N0YXJ0PXRoaXMucG9zO2Vsc2UgaWYoaXNOZXdMaW5lKGNoKSl7c3dpdGNoKG91dCs9dGhpcy5pbnB1dC5zbGljZShjaHVua1N0YXJ0LHRoaXMucG9zKSwrK3RoaXMucG9zLGNoKXtjYXNlIDEzOnRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcyk9PT0xMCYmKyt0aGlzLnBvcztjYXNlIDEwOm91dCs9YFxuYDticmVhaztkZWZhdWx0Om91dCs9U3RyaW5nLmZyb21DaGFyQ29kZShjaCk7YnJlYWt9dGhpcy5vcHRpb25zLmxvY2F0aW9ucyYmKCsrdGhpcy5jdXJMaW5lLHRoaXMubGluZVN0YXJ0PXRoaXMucG9zKSxjaHVua1N0YXJ0PXRoaXMucG9zO31lbHNlICsrdGhpcy5wb3M7fX07cHAkOS5yZWFkSW52YWxpZFRlbXBsYXRlVG9rZW49ZnVuY3Rpb24oKXtmb3IoO3RoaXMucG9zPHRoaXMuaW5wdXQubGVuZ3RoO3RoaXMucG9zKyspc3dpdGNoKHRoaXMuaW5wdXRbdGhpcy5wb3NdKXtjYXNlXCJcXFxcXCI6Kyt0aGlzLnBvczticmVhaztjYXNlXCIkXCI6aWYodGhpcy5pbnB1dFt0aGlzLnBvcysxXSE9PVwie1wiKWJyZWFrO2Nhc2VcImBcIjpyZXR1cm4gdGhpcy5maW5pc2hUb2tlbih0eXBlcy5pbnZhbGlkVGVtcGxhdGUsdGhpcy5pbnB1dC5zbGljZSh0aGlzLnN0YXJ0LHRoaXMucG9zKSl9dGhpcy5yYWlzZSh0aGlzLnN0YXJ0LFwiVW50ZXJtaW5hdGVkIHRlbXBsYXRlXCIpO307cHAkOS5yZWFkRXNjYXBlZENoYXI9ZnVuY3Rpb24oaW5UZW1wbGF0ZSl7dmFyIGNoPXRoaXMuaW5wdXQuY2hhckNvZGVBdCgrK3RoaXMucG9zKTtzd2l0Y2goKyt0aGlzLnBvcyxjaCl7Y2FzZSAxMTA6cmV0dXJuIGBcbmA7Y2FzZSAxMTQ6cmV0dXJuIFwiXFxyXCI7Y2FzZSAxMjA6cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUodGhpcy5yZWFkSGV4Q2hhcigyKSk7Y2FzZSAxMTc6cmV0dXJuIGNvZGVQb2ludFRvU3RyaW5nJDEodGhpcy5yZWFkQ29kZVBvaW50KCkpO2Nhc2UgMTE2OnJldHVybiBcIlx0XCI7Y2FzZSA5ODpyZXR1cm4gXCJcXGJcIjtjYXNlIDExODpyZXR1cm4gXCJcXHZcIjtjYXNlIDEwMjpyZXR1cm4gXCJcXGZcIjtjYXNlIDEzOnRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcyk9PT0xMCYmKyt0aGlzLnBvcztjYXNlIDEwOnJldHVybiB0aGlzLm9wdGlvbnMubG9jYXRpb25zJiYodGhpcy5saW5lU3RhcnQ9dGhpcy5wb3MsKyt0aGlzLmN1ckxpbmUpLFwiXCI7Y2FzZSA1NjpjYXNlIDU3OmlmKGluVGVtcGxhdGUpe3ZhciBjb2RlUG9zPXRoaXMucG9zLTE7cmV0dXJuIHRoaXMuaW52YWxpZFN0cmluZ1Rva2VuKGNvZGVQb3MsXCJJbnZhbGlkIGVzY2FwZSBzZXF1ZW5jZSBpbiB0ZW1wbGF0ZSBzdHJpbmdcIiksbnVsbH1kZWZhdWx0OmlmKGNoPj00OCYmY2g8PTU1KXt2YXIgb2N0YWxTdHI9dGhpcy5pbnB1dC5zdWJzdHIodGhpcy5wb3MtMSwzKS5tYXRjaCgvXlswLTddKy8pWzBdLG9jdGFsPXBhcnNlSW50KG9jdGFsU3RyLDgpO3JldHVybiBvY3RhbD4yNTUmJihvY3RhbFN0cj1vY3RhbFN0ci5zbGljZSgwLC0xKSxvY3RhbD1wYXJzZUludChvY3RhbFN0ciw4KSksdGhpcy5wb3MrPW9jdGFsU3RyLmxlbmd0aC0xLGNoPXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcyksKG9jdGFsU3RyIT09XCIwXCJ8fGNoPT09NTZ8fGNoPT09NTcpJiYodGhpcy5zdHJpY3R8fGluVGVtcGxhdGUpJiZ0aGlzLmludmFsaWRTdHJpbmdUb2tlbih0aGlzLnBvcy0xLW9jdGFsU3RyLmxlbmd0aCxpblRlbXBsYXRlP1wiT2N0YWwgbGl0ZXJhbCBpbiB0ZW1wbGF0ZSBzdHJpbmdcIjpcIk9jdGFsIGxpdGVyYWwgaW4gc3RyaWN0IG1vZGVcIiksU3RyaW5nLmZyb21DaGFyQ29kZShvY3RhbCl9cmV0dXJuIGlzTmV3TGluZShjaCk/XCJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGNoKX19O3BwJDkucmVhZEhleENoYXI9ZnVuY3Rpb24obGVuKXt2YXIgY29kZVBvcz10aGlzLnBvcyxuPXRoaXMucmVhZEludCgxNixsZW4pO3JldHVybiBuPT09bnVsbCYmdGhpcy5pbnZhbGlkU3RyaW5nVG9rZW4oY29kZVBvcyxcIkJhZCBjaGFyYWN0ZXIgZXNjYXBlIHNlcXVlbmNlXCIpLG59O3BwJDkucmVhZFdvcmQxPWZ1bmN0aW9uKCl7dGhpcy5jb250YWluc0VzYz0hMTtmb3IodmFyIHdvcmQ9XCJcIixmaXJzdD0hMCxjaHVua1N0YXJ0PXRoaXMucG9zLGFzdHJhbD10aGlzLm9wdGlvbnMuZWNtYVZlcnNpb24+PTY7dGhpcy5wb3M8dGhpcy5pbnB1dC5sZW5ndGg7KXt2YXIgY2g9dGhpcy5mdWxsQ2hhckNvZGVBdFBvcygpO2lmKGlzSWRlbnRpZmllckNoYXIoY2gsYXN0cmFsKSl0aGlzLnBvcys9Y2g8PTY1NTM1PzE6MjtlbHNlIGlmKGNoPT09OTIpe3RoaXMuY29udGFpbnNFc2M9ITAsd29yZCs9dGhpcy5pbnB1dC5zbGljZShjaHVua1N0YXJ0LHRoaXMucG9zKTt2YXIgZXNjU3RhcnQ9dGhpcy5wb3M7dGhpcy5pbnB1dC5jaGFyQ29kZUF0KCsrdGhpcy5wb3MpIT09MTE3JiZ0aGlzLmludmFsaWRTdHJpbmdUb2tlbih0aGlzLnBvcyxcIkV4cGVjdGluZyBVbmljb2RlIGVzY2FwZSBzZXF1ZW5jZSBcXFxcdVhYWFhcIiksKyt0aGlzLnBvczt2YXIgZXNjPXRoaXMucmVhZENvZGVQb2ludCgpOyhmaXJzdD9pc0lkZW50aWZpZXJTdGFydDppc0lkZW50aWZpZXJDaGFyKShlc2MsYXN0cmFsKXx8dGhpcy5pbnZhbGlkU3RyaW5nVG9rZW4oZXNjU3RhcnQsXCJJbnZhbGlkIFVuaWNvZGUgZXNjYXBlXCIpLHdvcmQrPWNvZGVQb2ludFRvU3RyaW5nJDEoZXNjKSxjaHVua1N0YXJ0PXRoaXMucG9zO31lbHNlIGJyZWFrO2ZpcnN0PSExO31yZXR1cm4gd29yZCt0aGlzLmlucHV0LnNsaWNlKGNodW5rU3RhcnQsdGhpcy5wb3MpfTtwcCQ5LnJlYWRXb3JkPWZ1bmN0aW9uKCl7dmFyIHdvcmQ9dGhpcy5yZWFkV29yZDEoKSx0eXBlPXR5cGVzLm5hbWU7cmV0dXJuIHRoaXMua2V5d29yZHMudGVzdCh3b3JkKSYmKHR5cGU9a2V5d29yZHMkMVt3b3JkXSksdGhpcy5maW5pc2hUb2tlbih0eXBlLHdvcmQpfTt2ZXJzaW9uPVwiNy40LjFcIjtQYXJzZXIuYWNvcm49e1BhcnNlcix2ZXJzaW9uLGRlZmF1bHRPcHRpb25zLFBvc2l0aW9uLFNvdXJjZUxvY2F0aW9uLGdldExpbmVJbmZvLE5vZGUsVG9rZW5UeXBlLHRva1R5cGVzOnR5cGVzLGtleXdvcmRUeXBlczprZXl3b3JkcyQxLFRva0NvbnRleHQsdG9rQ29udGV4dHM6dHlwZXMkMSxpc0lkZW50aWZpZXJDaGFyLGlzSWRlbnRpZmllclN0YXJ0LFRva2VuLGlzTmV3TGluZSxsaW5lQnJlYWssbGluZUJyZWFrRyxub25BU0NJSXdoaXRlc3BhY2V9O319KTt2YXIgcmVxdWlyZV94aHRtbD1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9hY29ybi1qc3gveGh0bWwuanNcIihleHBvcnRzLG1vZHVsZSl7bW9kdWxlLmV4cG9ydHM9e3F1b3Q6J1wiJyxhbXA6XCImXCIsYXBvczpcIidcIixsdDpcIjxcIixndDpcIj5cIixuYnNwOlwiXFx4QTBcIixpZXhjbDpcIlxceEExXCIsY2VudDpcIlxceEEyXCIscG91bmQ6XCJcXHhBM1wiLGN1cnJlbjpcIlxceEE0XCIseWVuOlwiXFx4QTVcIixicnZiYXI6XCJcXHhBNlwiLHNlY3Q6XCJcXHhBN1wiLHVtbDpcIlxceEE4XCIsY29weTpcIlxceEE5XCIsb3JkZjpcIlxceEFBXCIsbGFxdW86XCJcXHhBQlwiLG5vdDpcIlxceEFDXCIsc2h5OlwiXFx4QURcIixyZWc6XCJcXHhBRVwiLG1hY3I6XCJcXHhBRlwiLGRlZzpcIlxceEIwXCIscGx1c21uOlwiXFx4QjFcIixzdXAyOlwiXFx4QjJcIixzdXAzOlwiXFx4QjNcIixhY3V0ZTpcIlxceEI0XCIsbWljcm86XCJcXHhCNVwiLHBhcmE6XCJcXHhCNlwiLG1pZGRvdDpcIlxceEI3XCIsY2VkaWw6XCJcXHhCOFwiLHN1cDE6XCJcXHhCOVwiLG9yZG06XCJcXHhCQVwiLHJhcXVvOlwiXFx4QkJcIixmcmFjMTQ6XCJcXHhCQ1wiLGZyYWMxMjpcIlxceEJEXCIsZnJhYzM0OlwiXFx4QkVcIixpcXVlc3Q6XCJcXHhCRlwiLEFncmF2ZTpcIlxceEMwXCIsQWFjdXRlOlwiXFx4QzFcIixBY2lyYzpcIlxceEMyXCIsQXRpbGRlOlwiXFx4QzNcIixBdW1sOlwiXFx4QzRcIixBcmluZzpcIlxceEM1XCIsQUVsaWc6XCJcXHhDNlwiLENjZWRpbDpcIlxceEM3XCIsRWdyYXZlOlwiXFx4QzhcIixFYWN1dGU6XCJcXHhDOVwiLEVjaXJjOlwiXFx4Q0FcIixFdW1sOlwiXFx4Q0JcIixJZ3JhdmU6XCJcXHhDQ1wiLElhY3V0ZTpcIlxceENEXCIsSWNpcmM6XCJcXHhDRVwiLEl1bWw6XCJcXHhDRlwiLEVUSDpcIlxceEQwXCIsTnRpbGRlOlwiXFx4RDFcIixPZ3JhdmU6XCJcXHhEMlwiLE9hY3V0ZTpcIlxceEQzXCIsT2NpcmM6XCJcXHhENFwiLE90aWxkZTpcIlxceEQ1XCIsT3VtbDpcIlxceEQ2XCIsdGltZXM6XCJcXHhEN1wiLE9zbGFzaDpcIlxceEQ4XCIsVWdyYXZlOlwiXFx4RDlcIixVYWN1dGU6XCJcXHhEQVwiLFVjaXJjOlwiXFx4REJcIixVdW1sOlwiXFx4RENcIixZYWN1dGU6XCJcXHhERFwiLFRIT1JOOlwiXFx4REVcIixzemxpZzpcIlxceERGXCIsYWdyYXZlOlwiXFx4RTBcIixhYWN1dGU6XCJcXHhFMVwiLGFjaXJjOlwiXFx4RTJcIixhdGlsZGU6XCJcXHhFM1wiLGF1bWw6XCJcXHhFNFwiLGFyaW5nOlwiXFx4RTVcIixhZWxpZzpcIlxceEU2XCIsY2NlZGlsOlwiXFx4RTdcIixlZ3JhdmU6XCJcXHhFOFwiLGVhY3V0ZTpcIlxceEU5XCIsZWNpcmM6XCJcXHhFQVwiLGV1bWw6XCJcXHhFQlwiLGlncmF2ZTpcIlxceEVDXCIsaWFjdXRlOlwiXFx4RURcIixpY2lyYzpcIlxceEVFXCIsaXVtbDpcIlxceEVGXCIsZXRoOlwiXFx4RjBcIixudGlsZGU6XCJcXHhGMVwiLG9ncmF2ZTpcIlxceEYyXCIsb2FjdXRlOlwiXFx4RjNcIixvY2lyYzpcIlxceEY0XCIsb3RpbGRlOlwiXFx4RjVcIixvdW1sOlwiXFx4RjZcIixkaXZpZGU6XCJcXHhGN1wiLG9zbGFzaDpcIlxceEY4XCIsdWdyYXZlOlwiXFx4RjlcIix1YWN1dGU6XCJcXHhGQVwiLHVjaXJjOlwiXFx4RkJcIix1dW1sOlwiXFx4RkNcIix5YWN1dGU6XCJcXHhGRFwiLHRob3JuOlwiXFx4RkVcIix5dW1sOlwiXFx4RkZcIixPRWxpZzpcIlxcdTAxNTJcIixvZWxpZzpcIlxcdTAxNTNcIixTY2Fyb246XCJcXHUwMTYwXCIsc2Nhcm9uOlwiXFx1MDE2MVwiLFl1bWw6XCJcXHUwMTc4XCIsZm5vZjpcIlxcdTAxOTJcIixjaXJjOlwiXFx1MDJDNlwiLHRpbGRlOlwiXFx1MDJEQ1wiLEFscGhhOlwiXFx1MDM5MVwiLEJldGE6XCJcXHUwMzkyXCIsR2FtbWE6XCJcXHUwMzkzXCIsRGVsdGE6XCJcXHUwMzk0XCIsRXBzaWxvbjpcIlxcdTAzOTVcIixaZXRhOlwiXFx1MDM5NlwiLEV0YTpcIlxcdTAzOTdcIixUaGV0YTpcIlxcdTAzOThcIixJb3RhOlwiXFx1MDM5OVwiLEthcHBhOlwiXFx1MDM5QVwiLExhbWJkYTpcIlxcdTAzOUJcIixNdTpcIlxcdTAzOUNcIixOdTpcIlxcdTAzOURcIixYaTpcIlxcdTAzOUVcIixPbWljcm9uOlwiXFx1MDM5RlwiLFBpOlwiXFx1MDNBMFwiLFJobzpcIlxcdTAzQTFcIixTaWdtYTpcIlxcdTAzQTNcIixUYXU6XCJcXHUwM0E0XCIsVXBzaWxvbjpcIlxcdTAzQTVcIixQaGk6XCJcXHUwM0E2XCIsQ2hpOlwiXFx1MDNBN1wiLFBzaTpcIlxcdTAzQThcIixPbWVnYTpcIlxcdTAzQTlcIixhbHBoYTpcIlxcdTAzQjFcIixiZXRhOlwiXFx1MDNCMlwiLGdhbW1hOlwiXFx1MDNCM1wiLGRlbHRhOlwiXFx1MDNCNFwiLGVwc2lsb246XCJcXHUwM0I1XCIsemV0YTpcIlxcdTAzQjZcIixldGE6XCJcXHUwM0I3XCIsdGhldGE6XCJcXHUwM0I4XCIsaW90YTpcIlxcdTAzQjlcIixrYXBwYTpcIlxcdTAzQkFcIixsYW1iZGE6XCJcXHUwM0JCXCIsbXU6XCJcXHUwM0JDXCIsbnU6XCJcXHUwM0JEXCIseGk6XCJcXHUwM0JFXCIsb21pY3JvbjpcIlxcdTAzQkZcIixwaTpcIlxcdTAzQzBcIixyaG86XCJcXHUwM0MxXCIsc2lnbWFmOlwiXFx1MDNDMlwiLHNpZ21hOlwiXFx1MDNDM1wiLHRhdTpcIlxcdTAzQzRcIix1cHNpbG9uOlwiXFx1MDNDNVwiLHBoaTpcIlxcdTAzQzZcIixjaGk6XCJcXHUwM0M3XCIscHNpOlwiXFx1MDNDOFwiLG9tZWdhOlwiXFx1MDNDOVwiLHRoZXRhc3ltOlwiXFx1MDNEMVwiLHVwc2loOlwiXFx1MDNEMlwiLHBpdjpcIlxcdTAzRDZcIixlbnNwOlwiXFx1MjAwMlwiLGVtc3A6XCJcXHUyMDAzXCIsdGhpbnNwOlwiXFx1MjAwOVwiLHp3bmo6XCJcXHUyMDBDXCIsendqOlwiXFx1MjAwRFwiLGxybTpcIlxcdTIwMEVcIixybG06XCJcXHUyMDBGXCIsbmRhc2g6XCJcXHUyMDEzXCIsbWRhc2g6XCJcXHUyMDE0XCIsbHNxdW86XCJcXHUyMDE4XCIscnNxdW86XCJcXHUyMDE5XCIsc2JxdW86XCJcXHUyMDFBXCIsbGRxdW86XCJcXHUyMDFDXCIscmRxdW86XCJcXHUyMDFEXCIsYmRxdW86XCJcXHUyMDFFXCIsZGFnZ2VyOlwiXFx1MjAyMFwiLERhZ2dlcjpcIlxcdTIwMjFcIixidWxsOlwiXFx1MjAyMlwiLGhlbGxpcDpcIlxcdTIwMjZcIixwZXJtaWw6XCJcXHUyMDMwXCIscHJpbWU6XCJcXHUyMDMyXCIsUHJpbWU6XCJcXHUyMDMzXCIsbHNhcXVvOlwiXFx1MjAzOVwiLHJzYXF1bzpcIlxcdTIwM0FcIixvbGluZTpcIlxcdTIwM0VcIixmcmFzbDpcIlxcdTIwNDRcIixldXJvOlwiXFx1MjBBQ1wiLGltYWdlOlwiXFx1MjExMVwiLHdlaWVycDpcIlxcdTIxMThcIixyZWFsOlwiXFx1MjExQ1wiLHRyYWRlOlwiXFx1MjEyMlwiLGFsZWZzeW06XCJcXHUyMTM1XCIsbGFycjpcIlxcdTIxOTBcIix1YXJyOlwiXFx1MjE5MVwiLHJhcnI6XCJcXHUyMTkyXCIsZGFycjpcIlxcdTIxOTNcIixoYXJyOlwiXFx1MjE5NFwiLGNyYXJyOlwiXFx1MjFCNVwiLGxBcnI6XCJcXHUyMUQwXCIsdUFycjpcIlxcdTIxRDFcIixyQXJyOlwiXFx1MjFEMlwiLGRBcnI6XCJcXHUyMUQzXCIsaEFycjpcIlxcdTIxRDRcIixmb3JhbGw6XCJcXHUyMjAwXCIscGFydDpcIlxcdTIyMDJcIixleGlzdDpcIlxcdTIyMDNcIixlbXB0eTpcIlxcdTIyMDVcIixuYWJsYTpcIlxcdTIyMDdcIixpc2luOlwiXFx1MjIwOFwiLG5vdGluOlwiXFx1MjIwOVwiLG5pOlwiXFx1MjIwQlwiLHByb2Q6XCJcXHUyMjBGXCIsc3VtOlwiXFx1MjIxMVwiLG1pbnVzOlwiXFx1MjIxMlwiLGxvd2FzdDpcIlxcdTIyMTdcIixyYWRpYzpcIlxcdTIyMUFcIixwcm9wOlwiXFx1MjIxRFwiLGluZmluOlwiXFx1MjIxRVwiLGFuZzpcIlxcdTIyMjBcIixhbmQ6XCJcXHUyMjI3XCIsb3I6XCJcXHUyMjI4XCIsY2FwOlwiXFx1MjIyOVwiLGN1cDpcIlxcdTIyMkFcIixpbnQ6XCJcXHUyMjJCXCIsdGhlcmU0OlwiXFx1MjIzNFwiLHNpbTpcIlxcdTIyM0NcIixjb25nOlwiXFx1MjI0NVwiLGFzeW1wOlwiXFx1MjI0OFwiLG5lOlwiXFx1MjI2MFwiLGVxdWl2OlwiXFx1MjI2MVwiLGxlOlwiXFx1MjI2NFwiLGdlOlwiXFx1MjI2NVwiLHN1YjpcIlxcdTIyODJcIixzdXA6XCJcXHUyMjgzXCIsbnN1YjpcIlxcdTIyODRcIixzdWJlOlwiXFx1MjI4NlwiLHN1cGU6XCJcXHUyMjg3XCIsb3BsdXM6XCJcXHUyMjk1XCIsb3RpbWVzOlwiXFx1MjI5N1wiLHBlcnA6XCJcXHUyMkE1XCIsc2RvdDpcIlxcdTIyQzVcIixsY2VpbDpcIlxcdTIzMDhcIixyY2VpbDpcIlxcdTIzMDlcIixsZmxvb3I6XCJcXHUyMzBBXCIscmZsb29yOlwiXFx1MjMwQlwiLGxhbmc6XCJcXHUyMzI5XCIscmFuZzpcIlxcdTIzMkFcIixsb3o6XCJcXHUyNUNBXCIsc3BhZGVzOlwiXFx1MjY2MFwiLGNsdWJzOlwiXFx1MjY2M1wiLGhlYXJ0czpcIlxcdTI2NjVcIixkaWFtczpcIlxcdTI2NjZcIn07fX0pO3ZhciByZXF1aXJlX2Fjb3JuX2pzeD1fX2NvbW1vbkpTKHtcIi4uLy4uL25vZGVfbW9kdWxlcy9hY29ybi1qc3gvaW5kZXguanNcIihleHBvcnRzLG1vZHVsZSl7dmFyIFhIVE1MRW50aXRpZXM9cmVxdWlyZV94aHRtbCgpLGhleE51bWJlcj0vXltcXGRhLWZBLUZdKyQvLGRlY2ltYWxOdW1iZXI9L15cXGQrJC8sYWNvcm5Kc3hNYXA9bmV3IFdlYWtNYXA7ZnVuY3Rpb24gZ2V0SnN4VG9rZW5zKGFjb3JuKXthY29ybj1hY29ybi5QYXJzZXIuYWNvcm58fGFjb3JuO2xldCBhY29ybkpzeD1hY29ybkpzeE1hcC5nZXQoYWNvcm4pO2lmKCFhY29ybkpzeCl7bGV0IHR0PWFjb3JuLnRva1R5cGVzLFRva0NvbnRleHQzPWFjb3JuLlRva0NvbnRleHQsVG9rZW5UeXBlMz1hY29ybi5Ub2tlblR5cGUsdGNfb1RhZz1uZXcgVG9rQ29udGV4dDMoXCI8dGFnXCIsITEpLHRjX2NUYWc9bmV3IFRva0NvbnRleHQzKFwiPC90YWdcIiwhMSksdGNfZXhwcj1uZXcgVG9rQ29udGV4dDMoXCI8dGFnPi4uLjwvdGFnPlwiLCEwLCEwKSx0b2tDb250ZXh0cz17dGNfb1RhZyx0Y19jVGFnLHRjX2V4cHJ9LHRva1R5cGVzPXtqc3hOYW1lOm5ldyBUb2tlblR5cGUzKFwianN4TmFtZVwiKSxqc3hUZXh0Om5ldyBUb2tlblR5cGUzKFwianN4VGV4dFwiLHtiZWZvcmVFeHByOiEwfSksanN4VGFnU3RhcnQ6bmV3IFRva2VuVHlwZTMoXCJqc3hUYWdTdGFydFwiLHtzdGFydHNFeHByOiEwfSksanN4VGFnRW5kOm5ldyBUb2tlblR5cGUzKFwianN4VGFnRW5kXCIpfTt0b2tUeXBlcy5qc3hUYWdTdGFydC51cGRhdGVDb250ZXh0PWZ1bmN0aW9uKCl7dGhpcy5jb250ZXh0LnB1c2godGNfZXhwciksdGhpcy5jb250ZXh0LnB1c2godGNfb1RhZyksdGhpcy5leHByQWxsb3dlZD0hMTt9LHRva1R5cGVzLmpzeFRhZ0VuZC51cGRhdGVDb250ZXh0PWZ1bmN0aW9uKHByZXZUeXBlKXtsZXQgb3V0PXRoaXMuY29udGV4dC5wb3AoKTtvdXQ9PT10Y19vVGFnJiZwcmV2VHlwZT09PXR0LnNsYXNofHxvdXQ9PT10Y19jVGFnPyh0aGlzLmNvbnRleHQucG9wKCksdGhpcy5leHByQWxsb3dlZD10aGlzLmN1ckNvbnRleHQoKT09PXRjX2V4cHIpOnRoaXMuZXhwckFsbG93ZWQ9ITA7fSxhY29ybkpzeD17dG9rQ29udGV4dHMsdG9rVHlwZXN9LGFjb3JuSnN4TWFwLnNldChhY29ybixhY29ybkpzeCk7fXJldHVybiBhY29ybkpzeH1mdW5jdGlvbiBnZXRRdWFsaWZpZWRKU1hOYW1lKG9iamVjdCl7aWYoIW9iamVjdClyZXR1cm4gb2JqZWN0O2lmKG9iamVjdC50eXBlPT09XCJKU1hJZGVudGlmaWVyXCIpcmV0dXJuIG9iamVjdC5uYW1lO2lmKG9iamVjdC50eXBlPT09XCJKU1hOYW1lc3BhY2VkTmFtZVwiKXJldHVybiBvYmplY3QubmFtZXNwYWNlLm5hbWUrXCI6XCIrb2JqZWN0Lm5hbWUubmFtZTtpZihvYmplY3QudHlwZT09PVwiSlNYTWVtYmVyRXhwcmVzc2lvblwiKXJldHVybiBnZXRRdWFsaWZpZWRKU1hOYW1lKG9iamVjdC5vYmplY3QpK1wiLlwiK2dldFF1YWxpZmllZEpTWE5hbWUob2JqZWN0LnByb3BlcnR5KX1tb2R1bGUuZXhwb3J0cz1mdW5jdGlvbihvcHRpb25zKXtyZXR1cm4gb3B0aW9ucz1vcHRpb25zfHx7fSxmdW5jdGlvbihQYXJzZXIzKXtyZXR1cm4gcGx1Z2luKHthbGxvd05hbWVzcGFjZXM6b3B0aW9ucy5hbGxvd05hbWVzcGFjZXMhPT0hMSxhbGxvd05hbWVzcGFjZWRPYmplY3RzOiEhb3B0aW9ucy5hbGxvd05hbWVzcGFjZWRPYmplY3RzfSxQYXJzZXIzKX19O09iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUuZXhwb3J0cyxcInRva1R5cGVzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBnZXRKc3hUb2tlbnMoKGluaXRfYWNvcm4oKSxfX3RvQ29tbW9uSlMoYWNvcm5fZXhwb3J0cykpKS50b2tUeXBlc30sY29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITB9KTtmdW5jdGlvbiBwbHVnaW4ob3B0aW9ucyxQYXJzZXIzKXtsZXQgYWNvcm49UGFyc2VyMy5hY29ybnx8KGluaXRfYWNvcm4oKSxfX3RvQ29tbW9uSlMoYWNvcm5fZXhwb3J0cykpLGFjb3JuSnN4PWdldEpzeFRva2VucyhhY29ybiksdHQ9YWNvcm4udG9rVHlwZXMsdG9rPWFjb3JuSnN4LnRva1R5cGVzLHRva0NvbnRleHRzPWFjb3JuLnRva0NvbnRleHRzLHRjX29UYWc9YWNvcm5Kc3gudG9rQ29udGV4dHMudGNfb1RhZyx0Y19jVGFnPWFjb3JuSnN4LnRva0NvbnRleHRzLnRjX2NUYWcsdGNfZXhwcj1hY29ybkpzeC50b2tDb250ZXh0cy50Y19leHByLGlzTmV3TGluZTI9YWNvcm4uaXNOZXdMaW5lLGlzSWRlbnRpZmllclN0YXJ0Mj1hY29ybi5pc0lkZW50aWZpZXJTdGFydCxpc0lkZW50aWZpZXJDaGFyMj1hY29ybi5pc0lkZW50aWZpZXJDaGFyO3JldHVybiBjbGFzcyBleHRlbmRzIFBhcnNlcjN7c3RhdGljIGdldCBhY29ybkpzeCgpe3JldHVybiBhY29ybkpzeH1qc3hfcmVhZFRva2VuKCl7bGV0IG91dD1cIlwiLGNodW5rU3RhcnQ9dGhpcy5wb3M7Zm9yKDs7KXt0aGlzLnBvcz49dGhpcy5pbnB1dC5sZW5ndGgmJnRoaXMucmFpc2UodGhpcy5zdGFydCxcIlVudGVybWluYXRlZCBKU1ggY29udGVudHNcIik7bGV0IGNoPXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcyk7c3dpdGNoKGNoKXtjYXNlIDYwOmNhc2UgMTIzOnJldHVybiB0aGlzLnBvcz09PXRoaXMuc3RhcnQ/Y2g9PT02MCYmdGhpcy5leHByQWxsb3dlZD8oKyt0aGlzLnBvcyx0aGlzLmZpbmlzaFRva2VuKHRvay5qc3hUYWdTdGFydCkpOnRoaXMuZ2V0VG9rZW5Gcm9tQ29kZShjaCk6KG91dCs9dGhpcy5pbnB1dC5zbGljZShjaHVua1N0YXJ0LHRoaXMucG9zKSx0aGlzLmZpbmlzaFRva2VuKHRvay5qc3hUZXh0LG91dCkpO2Nhc2UgMzg6b3V0Kz10aGlzLmlucHV0LnNsaWNlKGNodW5rU3RhcnQsdGhpcy5wb3MpLG91dCs9dGhpcy5qc3hfcmVhZEVudGl0eSgpLGNodW5rU3RhcnQ9dGhpcy5wb3M7YnJlYWs7Y2FzZSA2MjpjYXNlIDEyNTp0aGlzLnJhaXNlKHRoaXMucG9zLFwiVW5leHBlY3RlZCB0b2tlbiBgXCIrdGhpcy5pbnB1dFt0aGlzLnBvc10rXCJgLiBEaWQgeW91IG1lYW4gYFwiKyhjaD09PTYyP1wiJmd0O1wiOlwiJnJicmFjZTtcIikrJ2Agb3IgYHtcIicrdGhpcy5pbnB1dFt0aGlzLnBvc10rJ1wifWA/Jyk7ZGVmYXVsdDppc05ld0xpbmUyKGNoKT8ob3V0Kz10aGlzLmlucHV0LnNsaWNlKGNodW5rU3RhcnQsdGhpcy5wb3MpLG91dCs9dGhpcy5qc3hfcmVhZE5ld0xpbmUoITApLGNodW5rU3RhcnQ9dGhpcy5wb3MpOisrdGhpcy5wb3M7fX19anN4X3JlYWROZXdMaW5lKG5vcm1hbGl6ZUNSTEYpe2xldCBjaD10aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MpLG91dDtyZXR1cm4gKyt0aGlzLnBvcyxjaD09PTEzJiZ0aGlzLmlucHV0LmNoYXJDb2RlQXQodGhpcy5wb3MpPT09MTA/KCsrdGhpcy5wb3Msb3V0PW5vcm1hbGl6ZUNSTEY/YFxuYDpgXFxyXG5gKTpvdXQ9U3RyaW5nLmZyb21DaGFyQ29kZShjaCksdGhpcy5vcHRpb25zLmxvY2F0aW9ucyYmKCsrdGhpcy5jdXJMaW5lLHRoaXMubGluZVN0YXJ0PXRoaXMucG9zKSxvdXR9anN4X3JlYWRTdHJpbmcocXVvdGUpe2xldCBvdXQ9XCJcIixjaHVua1N0YXJ0PSsrdGhpcy5wb3M7Zm9yKDs7KXt0aGlzLnBvcz49dGhpcy5pbnB1dC5sZW5ndGgmJnRoaXMucmFpc2UodGhpcy5zdGFydCxcIlVudGVybWluYXRlZCBzdHJpbmcgY29uc3RhbnRcIik7bGV0IGNoPXRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcyk7aWYoY2g9PT1xdW90ZSlicmVhaztjaD09PTM4PyhvdXQrPXRoaXMuaW5wdXQuc2xpY2UoY2h1bmtTdGFydCx0aGlzLnBvcyksb3V0Kz10aGlzLmpzeF9yZWFkRW50aXR5KCksY2h1bmtTdGFydD10aGlzLnBvcyk6aXNOZXdMaW5lMihjaCk/KG91dCs9dGhpcy5pbnB1dC5zbGljZShjaHVua1N0YXJ0LHRoaXMucG9zKSxvdXQrPXRoaXMuanN4X3JlYWROZXdMaW5lKCExKSxjaHVua1N0YXJ0PXRoaXMucG9zKTorK3RoaXMucG9zO31yZXR1cm4gb3V0Kz10aGlzLmlucHV0LnNsaWNlKGNodW5rU3RhcnQsdGhpcy5wb3MrKyksdGhpcy5maW5pc2hUb2tlbih0dC5zdHJpbmcsb3V0KX1qc3hfcmVhZEVudGl0eSgpe2xldCBzdHI9XCJcIixjb3VudD0wLGVudGl0eSxjaD10aGlzLmlucHV0W3RoaXMucG9zXTtjaCE9PVwiJlwiJiZ0aGlzLnJhaXNlKHRoaXMucG9zLFwiRW50aXR5IG11c3Qgc3RhcnQgd2l0aCBhbiBhbXBlcnNhbmRcIik7bGV0IHN0YXJ0UG9zPSsrdGhpcy5wb3M7Zm9yKDt0aGlzLnBvczx0aGlzLmlucHV0Lmxlbmd0aCYmY291bnQrKzwxMDspe2lmKGNoPXRoaXMuaW5wdXRbdGhpcy5wb3MrK10sY2g9PT1cIjtcIil7c3RyWzBdPT09XCIjXCI/c3RyWzFdPT09XCJ4XCI/KHN0cj1zdHIuc3Vic3RyKDIpLGhleE51bWJlci50ZXN0KHN0cikmJihlbnRpdHk9U3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChzdHIsMTYpKSkpOihzdHI9c3RyLnN1YnN0cigxKSxkZWNpbWFsTnVtYmVyLnRlc3Qoc3RyKSYmKGVudGl0eT1TdHJpbmcuZnJvbUNoYXJDb2RlKHBhcnNlSW50KHN0ciwxMCkpKSk6ZW50aXR5PVhIVE1MRW50aXRpZXNbc3RyXTticmVha31zdHIrPWNoO31yZXR1cm4gZW50aXR5fHwodGhpcy5wb3M9c3RhcnRQb3MsXCImXCIpfWpzeF9yZWFkV29yZCgpe2xldCBjaCxzdGFydD10aGlzLnBvcztkbyBjaD10aGlzLmlucHV0LmNoYXJDb2RlQXQoKyt0aGlzLnBvcyk7d2hpbGUoaXNJZGVudGlmaWVyQ2hhcjIoY2gpfHxjaD09PTQ1KTtyZXR1cm4gdGhpcy5maW5pc2hUb2tlbih0b2suanN4TmFtZSx0aGlzLmlucHV0LnNsaWNlKHN0YXJ0LHRoaXMucG9zKSl9anN4X3BhcnNlSWRlbnRpZmllcigpe2xldCBub2RlPXRoaXMuc3RhcnROb2RlKCk7cmV0dXJuIHRoaXMudHlwZT09PXRvay5qc3hOYW1lP25vZGUubmFtZT10aGlzLnZhbHVlOnRoaXMudHlwZS5rZXl3b3JkP25vZGUubmFtZT10aGlzLnR5cGUua2V5d29yZDp0aGlzLnVuZXhwZWN0ZWQoKSx0aGlzLm5leHQoKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkpTWElkZW50aWZpZXJcIil9anN4X3BhcnNlTmFtZXNwYWNlZE5hbWUoKXtsZXQgc3RhcnRQb3M9dGhpcy5zdGFydCxzdGFydExvYz10aGlzLnN0YXJ0TG9jLG5hbWU9dGhpcy5qc3hfcGFyc2VJZGVudGlmaWVyKCk7aWYoIW9wdGlvbnMuYWxsb3dOYW1lc3BhY2VzfHwhdGhpcy5lYXQodHQuY29sb24pKXJldHVybiBuYW1lO3ZhciBub2RlPXRoaXMuc3RhcnROb2RlQXQoc3RhcnRQb3Msc3RhcnRMb2MpO3JldHVybiBub2RlLm5hbWVzcGFjZT1uYW1lLG5vZGUubmFtZT10aGlzLmpzeF9wYXJzZUlkZW50aWZpZXIoKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkpTWE5hbWVzcGFjZWROYW1lXCIpfWpzeF9wYXJzZUVsZW1lbnROYW1lKCl7aWYodGhpcy50eXBlPT09dG9rLmpzeFRhZ0VuZClyZXR1cm4gXCJcIjtsZXQgc3RhcnRQb3M9dGhpcy5zdGFydCxzdGFydExvYz10aGlzLnN0YXJ0TG9jLG5vZGU9dGhpcy5qc3hfcGFyc2VOYW1lc3BhY2VkTmFtZSgpO2Zvcih0aGlzLnR5cGU9PT10dC5kb3QmJm5vZGUudHlwZT09PVwiSlNYTmFtZXNwYWNlZE5hbWVcIiYmIW9wdGlvbnMuYWxsb3dOYW1lc3BhY2VkT2JqZWN0cyYmdGhpcy51bmV4cGVjdGVkKCk7dGhpcy5lYXQodHQuZG90KTspe2xldCBuZXdOb2RlPXRoaXMuc3RhcnROb2RlQXQoc3RhcnRQb3Msc3RhcnRMb2MpO25ld05vZGUub2JqZWN0PW5vZGUsbmV3Tm9kZS5wcm9wZXJ0eT10aGlzLmpzeF9wYXJzZUlkZW50aWZpZXIoKSxub2RlPXRoaXMuZmluaXNoTm9kZShuZXdOb2RlLFwiSlNYTWVtYmVyRXhwcmVzc2lvblwiKTt9cmV0dXJuIG5vZGV9anN4X3BhcnNlQXR0cmlidXRlVmFsdWUoKXtzd2l0Y2godGhpcy50eXBlKXtjYXNlIHR0LmJyYWNlTDpsZXQgbm9kZT10aGlzLmpzeF9wYXJzZUV4cHJlc3Npb25Db250YWluZXIoKTtyZXR1cm4gbm9kZS5leHByZXNzaW9uLnR5cGU9PT1cIkpTWEVtcHR5RXhwcmVzc2lvblwiJiZ0aGlzLnJhaXNlKG5vZGUuc3RhcnQsXCJKU1ggYXR0cmlidXRlcyBtdXN0IG9ubHkgYmUgYXNzaWduZWQgYSBub24tZW1wdHkgZXhwcmVzc2lvblwiKSxub2RlO2Nhc2UgdG9rLmpzeFRhZ1N0YXJ0OmNhc2UgdHQuc3RyaW5nOnJldHVybiB0aGlzLnBhcnNlRXhwckF0b20oKTtkZWZhdWx0OnRoaXMucmFpc2UodGhpcy5zdGFydCxcIkpTWCB2YWx1ZSBzaG91bGQgYmUgZWl0aGVyIGFuIGV4cHJlc3Npb24gb3IgYSBxdW90ZWQgSlNYIHRleHRcIik7fX1qc3hfcGFyc2VFbXB0eUV4cHJlc3Npb24oKXtsZXQgbm9kZT10aGlzLnN0YXJ0Tm9kZUF0KHRoaXMubGFzdFRva0VuZCx0aGlzLmxhc3RUb2tFbmRMb2MpO3JldHVybiB0aGlzLmZpbmlzaE5vZGVBdChub2RlLFwiSlNYRW1wdHlFeHByZXNzaW9uXCIsdGhpcy5zdGFydCx0aGlzLnN0YXJ0TG9jKX1qc3hfcGFyc2VFeHByZXNzaW9uQ29udGFpbmVyKCl7bGV0IG5vZGU9dGhpcy5zdGFydE5vZGUoKTtyZXR1cm4gdGhpcy5uZXh0KCksbm9kZS5leHByZXNzaW9uPXRoaXMudHlwZT09PXR0LmJyYWNlUj90aGlzLmpzeF9wYXJzZUVtcHR5RXhwcmVzc2lvbigpOnRoaXMucGFyc2VFeHByZXNzaW9uKCksdGhpcy5leHBlY3QodHQuYnJhY2VSKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkpTWEV4cHJlc3Npb25Db250YWluZXJcIil9anN4X3BhcnNlQXR0cmlidXRlKCl7bGV0IG5vZGU9dGhpcy5zdGFydE5vZGUoKTtyZXR1cm4gdGhpcy5lYXQodHQuYnJhY2VMKT8odGhpcy5leHBlY3QodHQuZWxsaXBzaXMpLG5vZGUuYXJndW1lbnQ9dGhpcy5wYXJzZU1heWJlQXNzaWduKCksdGhpcy5leHBlY3QodHQuYnJhY2VSKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxcIkpTWFNwcmVhZEF0dHJpYnV0ZVwiKSk6KG5vZGUubmFtZT10aGlzLmpzeF9wYXJzZU5hbWVzcGFjZWROYW1lKCksbm9kZS52YWx1ZT10aGlzLmVhdCh0dC5lcSk/dGhpcy5qc3hfcGFyc2VBdHRyaWJ1dGVWYWx1ZSgpOm51bGwsdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJKU1hBdHRyaWJ1dGVcIikpfWpzeF9wYXJzZU9wZW5pbmdFbGVtZW50QXQoc3RhcnRQb3Msc3RhcnRMb2Mpe2xldCBub2RlPXRoaXMuc3RhcnROb2RlQXQoc3RhcnRQb3Msc3RhcnRMb2MpO25vZGUuYXR0cmlidXRlcz1bXTtsZXQgbm9kZU5hbWU9dGhpcy5qc3hfcGFyc2VFbGVtZW50TmFtZSgpO2Zvcihub2RlTmFtZSYmKG5vZGUubmFtZT1ub2RlTmFtZSk7dGhpcy50eXBlIT09dHQuc2xhc2gmJnRoaXMudHlwZSE9PXRvay5qc3hUYWdFbmQ7KW5vZGUuYXR0cmlidXRlcy5wdXNoKHRoaXMuanN4X3BhcnNlQXR0cmlidXRlKCkpO3JldHVybiBub2RlLnNlbGZDbG9zaW5nPXRoaXMuZWF0KHR0LnNsYXNoKSx0aGlzLmV4cGVjdCh0b2suanN4VGFnRW5kKSx0aGlzLmZpbmlzaE5vZGUobm9kZSxub2RlTmFtZT9cIkpTWE9wZW5pbmdFbGVtZW50XCI6XCJKU1hPcGVuaW5nRnJhZ21lbnRcIil9anN4X3BhcnNlQ2xvc2luZ0VsZW1lbnRBdChzdGFydFBvcyxzdGFydExvYyl7bGV0IG5vZGU9dGhpcy5zdGFydE5vZGVBdChzdGFydFBvcyxzdGFydExvYyksbm9kZU5hbWU9dGhpcy5qc3hfcGFyc2VFbGVtZW50TmFtZSgpO3JldHVybiBub2RlTmFtZSYmKG5vZGUubmFtZT1ub2RlTmFtZSksdGhpcy5leHBlY3QodG9rLmpzeFRhZ0VuZCksdGhpcy5maW5pc2hOb2RlKG5vZGUsbm9kZU5hbWU/XCJKU1hDbG9zaW5nRWxlbWVudFwiOlwiSlNYQ2xvc2luZ0ZyYWdtZW50XCIpfWpzeF9wYXJzZUVsZW1lbnRBdChzdGFydFBvcyxzdGFydExvYyl7bGV0IG5vZGU9dGhpcy5zdGFydE5vZGVBdChzdGFydFBvcyxzdGFydExvYyksY2hpbGRyZW49W10sb3BlbmluZ0VsZW1lbnQ9dGhpcy5qc3hfcGFyc2VPcGVuaW5nRWxlbWVudEF0KHN0YXJ0UG9zLHN0YXJ0TG9jKSxjbG9zaW5nRWxlbWVudD1udWxsO2lmKCFvcGVuaW5nRWxlbWVudC5zZWxmQ2xvc2luZyl7Y29udGVudHM6Zm9yKDs7KXN3aXRjaCh0aGlzLnR5cGUpe2Nhc2UgdG9rLmpzeFRhZ1N0YXJ0OmlmKHN0YXJ0UG9zPXRoaXMuc3RhcnQsc3RhcnRMb2M9dGhpcy5zdGFydExvYyx0aGlzLm5leHQoKSx0aGlzLmVhdCh0dC5zbGFzaCkpe2Nsb3NpbmdFbGVtZW50PXRoaXMuanN4X3BhcnNlQ2xvc2luZ0VsZW1lbnRBdChzdGFydFBvcyxzdGFydExvYyk7YnJlYWsgY29udGVudHN9Y2hpbGRyZW4ucHVzaCh0aGlzLmpzeF9wYXJzZUVsZW1lbnRBdChzdGFydFBvcyxzdGFydExvYykpO2JyZWFrO2Nhc2UgdG9rLmpzeFRleHQ6Y2hpbGRyZW4ucHVzaCh0aGlzLnBhcnNlRXhwckF0b20oKSk7YnJlYWs7Y2FzZSB0dC5icmFjZUw6Y2hpbGRyZW4ucHVzaCh0aGlzLmpzeF9wYXJzZUV4cHJlc3Npb25Db250YWluZXIoKSk7YnJlYWs7ZGVmYXVsdDp0aGlzLnVuZXhwZWN0ZWQoKTt9Z2V0UXVhbGlmaWVkSlNYTmFtZShjbG9zaW5nRWxlbWVudC5uYW1lKSE9PWdldFF1YWxpZmllZEpTWE5hbWUob3BlbmluZ0VsZW1lbnQubmFtZSkmJnRoaXMucmFpc2UoY2xvc2luZ0VsZW1lbnQuc3RhcnQsXCJFeHBlY3RlZCBjb3JyZXNwb25kaW5nIEpTWCBjbG9zaW5nIHRhZyBmb3IgPFwiK2dldFF1YWxpZmllZEpTWE5hbWUob3BlbmluZ0VsZW1lbnQubmFtZSkrXCI+XCIpO31sZXQgZnJhZ21lbnRPckVsZW1lbnQ9b3BlbmluZ0VsZW1lbnQubmFtZT9cIkVsZW1lbnRcIjpcIkZyYWdtZW50XCI7cmV0dXJuIG5vZGVbXCJvcGVuaW5nXCIrZnJhZ21lbnRPckVsZW1lbnRdPW9wZW5pbmdFbGVtZW50LG5vZGVbXCJjbG9zaW5nXCIrZnJhZ21lbnRPckVsZW1lbnRdPWNsb3NpbmdFbGVtZW50LG5vZGUuY2hpbGRyZW49Y2hpbGRyZW4sdGhpcy50eXBlPT09dHQucmVsYXRpb25hbCYmdGhpcy52YWx1ZT09PVwiPFwiJiZ0aGlzLnJhaXNlKHRoaXMuc3RhcnQsXCJBZGphY2VudCBKU1ggZWxlbWVudHMgbXVzdCBiZSB3cmFwcGVkIGluIGFuIGVuY2xvc2luZyB0YWdcIiksdGhpcy5maW5pc2hOb2RlKG5vZGUsXCJKU1hcIitmcmFnbWVudE9yRWxlbWVudCl9anN4X3BhcnNlVGV4dCgpe2xldCBub2RlPXRoaXMucGFyc2VMaXRlcmFsKHRoaXMudmFsdWUpO3JldHVybiBub2RlLnR5cGU9XCJKU1hUZXh0XCIsbm9kZX1qc3hfcGFyc2VFbGVtZW50KCl7bGV0IHN0YXJ0UG9zPXRoaXMuc3RhcnQsc3RhcnRMb2M9dGhpcy5zdGFydExvYztyZXR1cm4gdGhpcy5uZXh0KCksdGhpcy5qc3hfcGFyc2VFbGVtZW50QXQoc3RhcnRQb3Msc3RhcnRMb2MpfXBhcnNlRXhwckF0b20ocmVmU2hvcnRIYW5kRGVmYXVsdFBvcyl7cmV0dXJuIHRoaXMudHlwZT09PXRvay5qc3hUZXh0P3RoaXMuanN4X3BhcnNlVGV4dCgpOnRoaXMudHlwZT09PXRvay5qc3hUYWdTdGFydD90aGlzLmpzeF9wYXJzZUVsZW1lbnQoKTpzdXBlci5wYXJzZUV4cHJBdG9tKHJlZlNob3J0SGFuZERlZmF1bHRQb3MpfXJlYWRUb2tlbihjb2RlKXtsZXQgY29udGV4dD10aGlzLmN1ckNvbnRleHQoKTtpZihjb250ZXh0PT09dGNfZXhwcilyZXR1cm4gdGhpcy5qc3hfcmVhZFRva2VuKCk7aWYoY29udGV4dD09PXRjX29UYWd8fGNvbnRleHQ9PT10Y19jVGFnKXtpZihpc0lkZW50aWZpZXJTdGFydDIoY29kZSkpcmV0dXJuIHRoaXMuanN4X3JlYWRXb3JkKCk7aWYoY29kZT09NjIpcmV0dXJuICsrdGhpcy5wb3MsdGhpcy5maW5pc2hUb2tlbih0b2suanN4VGFnRW5kKTtpZigoY29kZT09PTM0fHxjb2RlPT09MzkpJiZjb250ZXh0PT10Y19vVGFnKXJldHVybiB0aGlzLmpzeF9yZWFkU3RyaW5nKGNvZGUpfXJldHVybiBjb2RlPT09NjAmJnRoaXMuZXhwckFsbG93ZWQmJnRoaXMuaW5wdXQuY2hhckNvZGVBdCh0aGlzLnBvcysxKSE9PTMzPygrK3RoaXMucG9zLHRoaXMuZmluaXNoVG9rZW4odG9rLmpzeFRhZ1N0YXJ0KSk6c3VwZXIucmVhZFRva2VuKGNvZGUpfXVwZGF0ZUNvbnRleHQocHJldlR5cGUpe2lmKHRoaXMudHlwZT09dHQuYnJhY2VMKXt2YXIgY3VyQ29udGV4dD10aGlzLmN1ckNvbnRleHQoKTtjdXJDb250ZXh0PT10Y19vVGFnP3RoaXMuY29udGV4dC5wdXNoKHRva0NvbnRleHRzLmJfZXhwcik6Y3VyQ29udGV4dD09dGNfZXhwcj90aGlzLmNvbnRleHQucHVzaCh0b2tDb250ZXh0cy5iX3RtcGwpOnN1cGVyLnVwZGF0ZUNvbnRleHQocHJldlR5cGUpLHRoaXMuZXhwckFsbG93ZWQ9ITA7fWVsc2UgaWYodGhpcy50eXBlPT09dHQuc2xhc2gmJnByZXZUeXBlPT09dG9rLmpzeFRhZ1N0YXJ0KXRoaXMuY29udGV4dC5sZW5ndGgtPTIsdGhpcy5jb250ZXh0LnB1c2godGNfY1RhZyksdGhpcy5leHByQWxsb3dlZD0hMTtlbHNlIHJldHVybiBzdXBlci51cGRhdGVDb250ZXh0KHByZXZUeXBlKX19fX19KTt2YXIgcmVxdWlyZV9kaXN0PV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL0BiYXNlMi9wcmV0dHktcHJpbnQtb2JqZWN0L2Rpc3QvaW5kZXguanNcIihleHBvcnRzKXt2YXIgX19hc3NpZ249ZXhwb3J0cyYmZXhwb3J0cy5fX2Fzc2lnbnx8ZnVuY3Rpb24oKXtyZXR1cm4gX19hc3NpZ249T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBzLGk9MSxuPWFyZ3VtZW50cy5sZW5ndGg7aTxuO2krKyl7cz1hcmd1bWVudHNbaV07Zm9yKHZhciBwIGluIHMpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMscCkmJih0W3BdPXNbcF0pO31yZXR1cm4gdH0sX19hc3NpZ24uYXBwbHkodGhpcyxhcmd1bWVudHMpfSxfX3NwcmVhZEFycmF5cz1leHBvcnRzJiZleHBvcnRzLl9fc3ByZWFkQXJyYXlzfHxmdW5jdGlvbigpe2Zvcih2YXIgcz0wLGk9MCxpbD1hcmd1bWVudHMubGVuZ3RoO2k8aWw7aSsrKXMrPWFyZ3VtZW50c1tpXS5sZW5ndGg7Zm9yKHZhciByPUFycmF5KHMpLGs9MCxpPTA7aTxpbDtpKyspZm9yKHZhciBhPWFyZ3VtZW50c1tpXSxqPTAsamw9YS5sZW5ndGg7ajxqbDtqKyssaysrKXJba109YVtqXTtyZXR1cm4gcn07T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIHNlZW49W107ZnVuY3Rpb24gaXNPYmoodmFsdWUpe3ZhciB0eXBlPXR5cGVvZiB2YWx1ZTtyZXR1cm4gdmFsdWUhPT1udWxsJiYodHlwZT09PVwib2JqZWN0XCJ8fHR5cGU9PT1cImZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGlzUmVnZXhwKHZhbHVlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKT09PVwiW29iamVjdCBSZWdFeHBdXCJ9ZnVuY3Rpb24gZ2V0T3duRW51bVByb3BTeW1ib2xzKG9iamVjdCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KS5maWx0ZXIoZnVuY3Rpb24oa2V5U3ltYm9sKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKG9iamVjdCxrZXlTeW1ib2wpfSl9ZnVuY3Rpb24gcHJldHR5UHJpbnQyKGlucHV0LG9wdGlvbnMscGFkKXtwYWQ9PT12b2lkIDAmJihwYWQ9XCJcIik7dmFyIGRlZmF1bHRPcHRpb25zMj17aW5kZW50OlwiXHRcIixzaW5nbGVRdW90ZXM6ITB9LGNvbWJpbmVkT3B0aW9ucz1fX2Fzc2lnbihfX2Fzc2lnbih7fSxkZWZhdWx0T3B0aW9uczIpLG9wdGlvbnMpLHRva2Vucztjb21iaW5lZE9wdGlvbnMuaW5saW5lQ2hhcmFjdGVyTGltaXQ9PT12b2lkIDA/dG9rZW5zPXtuZXdMaW5lOmBcbmAsbmV3TGluZU9yU3BhY2U6YFxuYCxwYWQsaW5kZW50OnBhZCtjb21iaW5lZE9wdGlvbnMuaW5kZW50fTp0b2tlbnM9e25ld0xpbmU6XCJAQF9fUFJFVFRZX1BSSU5UX05FV19MSU5FX19AQFwiLG5ld0xpbmVPclNwYWNlOlwiQEBfX1BSRVRUWV9QUklOVF9ORVdfTElORV9PUl9TUEFDRV9fQEBcIixwYWQ6XCJAQF9fUFJFVFRZX1BSSU5UX1BBRF9fQEBcIixpbmRlbnQ6XCJAQF9fUFJFVFRZX1BSSU5UX0lOREVOVF9fQEBcIn07dmFyIGV4cGFuZFdoaXRlU3BhY2U9ZnVuY3Rpb24oc3RyaW5nKXtpZihjb21iaW5lZE9wdGlvbnMuaW5saW5lQ2hhcmFjdGVyTGltaXQ9PT12b2lkIDApcmV0dXJuIHN0cmluZzt2YXIgb25lTGluZWQ9c3RyaW5nLnJlcGxhY2UobmV3IFJlZ0V4cCh0b2tlbnMubmV3TGluZSxcImdcIiksXCJcIikucmVwbGFjZShuZXcgUmVnRXhwKHRva2Vucy5uZXdMaW5lT3JTcGFjZSxcImdcIiksXCIgXCIpLnJlcGxhY2UobmV3IFJlZ0V4cCh0b2tlbnMucGFkK1wifFwiK3Rva2Vucy5pbmRlbnQsXCJnXCIpLFwiXCIpO3JldHVybiBvbmVMaW5lZC5sZW5ndGg8PWNvbWJpbmVkT3B0aW9ucy5pbmxpbmVDaGFyYWN0ZXJMaW1pdD9vbmVMaW5lZDpzdHJpbmcucmVwbGFjZShuZXcgUmVnRXhwKHRva2Vucy5uZXdMaW5lK1wifFwiK3Rva2Vucy5uZXdMaW5lT3JTcGFjZSxcImdcIiksYFxuYCkucmVwbGFjZShuZXcgUmVnRXhwKHRva2Vucy5wYWQsXCJnXCIpLHBhZCkucmVwbGFjZShuZXcgUmVnRXhwKHRva2Vucy5pbmRlbnQsXCJnXCIpLHBhZCtjb21iaW5lZE9wdGlvbnMuaW5kZW50KX07aWYoc2Vlbi5pbmRleE9mKGlucHV0KSE9PS0xKXJldHVybiAnXCJbQ2lyY3VsYXJdXCInO2lmKGlucHV0PT1udWxsfHx0eXBlb2YgaW5wdXQ9PVwibnVtYmVyXCJ8fHR5cGVvZiBpbnB1dD09XCJib29sZWFuXCJ8fHR5cGVvZiBpbnB1dD09XCJmdW5jdGlvblwifHx0eXBlb2YgaW5wdXQ9PVwic3ltYm9sXCJ8fGlzUmVnZXhwKGlucHV0KSlyZXR1cm4gU3RyaW5nKGlucHV0KTtpZihpbnB1dCBpbnN0YW5jZW9mIERhdGUpcmV0dXJuIFwibmV3IERhdGUoJ1wiK2lucHV0LnRvSVNPU3RyaW5nKCkrXCInKVwiO2lmKEFycmF5LmlzQXJyYXkoaW5wdXQpKXtpZihpbnB1dC5sZW5ndGg9PT0wKXJldHVybiBcIltdXCI7c2Vlbi5wdXNoKGlucHV0KTt2YXIgcmV0PVwiW1wiK3Rva2Vucy5uZXdMaW5lK2lucHV0Lm1hcChmdW5jdGlvbihlbCxpKXt2YXIgZW9sPWlucHV0Lmxlbmd0aC0xPT09aT90b2tlbnMubmV3TGluZTpcIixcIit0b2tlbnMubmV3TGluZU9yU3BhY2UsdmFsdWU9cHJldHR5UHJpbnQyKGVsLGNvbWJpbmVkT3B0aW9ucyxwYWQrY29tYmluZWRPcHRpb25zLmluZGVudCk7cmV0dXJuIGNvbWJpbmVkT3B0aW9ucy50cmFuc2Zvcm0mJih2YWx1ZT1jb21iaW5lZE9wdGlvbnMudHJhbnNmb3JtKGlucHV0LGksdmFsdWUpKSx0b2tlbnMuaW5kZW50K3ZhbHVlK2VvbH0pLmpvaW4oXCJcIikrdG9rZW5zLnBhZCtcIl1cIjtyZXR1cm4gc2Vlbi5wb3AoKSxleHBhbmRXaGl0ZVNwYWNlKHJldCl9aWYoaXNPYmooaW5wdXQpKXt2YXIgb2JqS2V5c18xPV9fc3ByZWFkQXJyYXlzKE9iamVjdC5rZXlzKGlucHV0KSxnZXRPd25FbnVtUHJvcFN5bWJvbHMoaW5wdXQpKTtpZihjb21iaW5lZE9wdGlvbnMuZmlsdGVyJiYob2JqS2V5c18xPW9iaktleXNfMS5maWx0ZXIoZnVuY3Rpb24oZWwpe3JldHVybiBjb21iaW5lZE9wdGlvbnMuZmlsdGVyJiZjb21iaW5lZE9wdGlvbnMuZmlsdGVyKGlucHV0LGVsKX0pKSxvYmpLZXlzXzEubGVuZ3RoPT09MClyZXR1cm4gXCJ7fVwiO3NlZW4ucHVzaChpbnB1dCk7dmFyIHJldD1cIntcIit0b2tlbnMubmV3TGluZStvYmpLZXlzXzEubWFwKGZ1bmN0aW9uKGVsLGkpe3ZhciBlb2w9b2JqS2V5c18xLmxlbmd0aC0xPT09aT90b2tlbnMubmV3TGluZTpcIixcIit0b2tlbnMubmV3TGluZU9yU3BhY2UsaXNTeW1ib2w9dHlwZW9mIGVsPT1cInN5bWJvbFwiLGlzQ2xhc3NpYz0haXNTeW1ib2wmJi9eW2EteiRfXVthLXokXzAtOV0qJC9pLnRlc3QoZWwudG9TdHJpbmcoKSksa2V5PWlzU3ltYm9sfHxpc0NsYXNzaWM/ZWw6cHJldHR5UHJpbnQyKGVsLGNvbWJpbmVkT3B0aW9ucyksdmFsdWU9cHJldHR5UHJpbnQyKGlucHV0W2VsXSxjb21iaW5lZE9wdGlvbnMscGFkK2NvbWJpbmVkT3B0aW9ucy5pbmRlbnQpO3JldHVybiBjb21iaW5lZE9wdGlvbnMudHJhbnNmb3JtJiYodmFsdWU9Y29tYmluZWRPcHRpb25zLnRyYW5zZm9ybShpbnB1dCxlbCx2YWx1ZSkpLHRva2Vucy5pbmRlbnQrU3RyaW5nKGtleSkrXCI6IFwiK3ZhbHVlK2VvbH0pLmpvaW4oXCJcIikrdG9rZW5zLnBhZCtcIn1cIjtyZXR1cm4gc2Vlbi5wb3AoKSxleHBhbmRXaGl0ZVNwYWNlKHJldCl9cmV0dXJuIGlucHV0PVN0cmluZyhpbnB1dCkucmVwbGFjZSgvW1xcclxcbl0vZyxmdW5jdGlvbih4KXtyZXR1cm4geD09PWBcbmA/XCJcXFxcblwiOlwiXFxcXHJcIn0pLGNvbWJpbmVkT3B0aW9ucy5zaW5nbGVRdW90ZXM/KGlucHV0PWlucHV0LnJlcGxhY2UoL1xcXFw/Jy9nLFwiXFxcXCdcIiksXCInXCIraW5wdXQrXCInXCIpOihpbnB1dD1pbnB1dC5yZXBsYWNlKC9cIi9nLCdcXFxcXCInKSwnXCInK2lucHV0KydcIicpfWV4cG9ydHMucHJldHR5UHJpbnQ9cHJldHR5UHJpbnQyO319KTt2YXIgcmVxdWlyZV9yZWFjdF9pc19wcm9kdWN0aW9uX21pbjI9X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtZWxlbWVudC10by1qc3gtc3RyaW5nL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcIihleHBvcnRzKXt2YXIgYj1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSxjPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIiksZD1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIiksZT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksZj1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksZz1TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIiksaD1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxrPVN5bWJvbC5mb3IoXCJyZWFjdC5zZXJ2ZXJfY29udGV4dFwiKSxsPVN5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKSxtPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKSxuPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLHA9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIikscT1TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKSx0PVN5bWJvbC5mb3IoXCJyZWFjdC5vZmZzY3JlZW5cIiksdTt1PVN5bWJvbC5mb3IoXCJyZWFjdC5tb2R1bGUucmVmZXJlbmNlXCIpO2Z1bmN0aW9uIHYoYSl7aWYodHlwZW9mIGE9PVwib2JqZWN0XCImJmEhPT1udWxsKXt2YXIgcj1hLiQkdHlwZW9mO3N3aXRjaChyKXtjYXNlIGI6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgZDpjYXNlIGY6Y2FzZSBlOmNhc2UgbTpjYXNlIG46cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIGg6Y2FzZSBsOmNhc2UgcTpjYXNlIHA6Y2FzZSBnOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHJ9fWNhc2UgYzpyZXR1cm4gcn19fWV4cG9ydHMuQ29udGV4dENvbnN1bWVyPWg7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9ZztleHBvcnRzLkVsZW1lbnQ9YjtleHBvcnRzLkZvcndhcmRSZWY9bDtleHBvcnRzLkZyYWdtZW50PWQ7ZXhwb3J0cy5MYXp5PXE7ZXhwb3J0cy5NZW1vPXA7ZXhwb3J0cy5Qb3J0YWw9YztleHBvcnRzLlByb2ZpbGVyPWY7ZXhwb3J0cy5TdHJpY3RNb2RlPWU7ZXhwb3J0cy5TdXNwZW5zZT1tO2V4cG9ydHMuU3VzcGVuc2VMaXN0PW47ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbigpe3JldHVybiAhMX07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPWZ1bmN0aW9uKCl7cmV0dXJuICExfTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09aH07ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWd9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB0eXBlb2YgYT09XCJvYmplY3RcIiYmYSE9PW51bGwmJmEuJCR0eXBlb2Y9PT1ifTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWx9O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4gdihhKT09PWR9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09cX07ZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1wfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09Y307ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09Zn07ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1lfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHYoYSk9PT1tfTtleHBvcnRzLmlzU3VzcGVuc2VMaXN0PWZ1bmN0aW9uKGEpe3JldHVybiB2KGEpPT09bn07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHR5cGVvZiBhPT1cInN0cmluZ1wifHx0eXBlb2YgYT09XCJmdW5jdGlvblwifHxhPT09ZHx8YT09PWZ8fGE9PT1lfHxhPT09bXx8YT09PW58fGE9PT10fHx0eXBlb2YgYT09XCJvYmplY3RcIiYmYSE9PW51bGwmJihhLiQkdHlwZW9mPT09cXx8YS4kJHR5cGVvZj09PXB8fGEuJCR0eXBlb2Y9PT1nfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWx8fGEuJCR0eXBlb2Y9PT11fHxhLmdldE1vZHVsZUlkIT09dm9pZCAwKX07ZXhwb3J0cy50eXBlT2Y9djt9fSk7dmFyIHJlcXVpcmVfcmVhY3RfaXNfZGV2ZWxvcG1lbnQyPV9fY29tbW9uSlMoe1wiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWVsZW1lbnQtdG8tanN4LXN0cmluZy9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzXCIoZXhwb3J0cyl7cHJvY2Vzcy5lbnYuTk9ERV9FTlYhPT1cInByb2R1Y3Rpb25cIiYmZnVuY3Rpb24oKXt2YXIgZW5hYmxlU2NvcGVBUEk9ITEsZW5hYmxlQ2FjaGVFbGVtZW50PSExLGVuYWJsZVRyYW5zaXRpb25UcmFjaW5nPSExLGVuYWJsZUxlZ2FjeUhpZGRlbj0hMSxlbmFibGVEZWJ1Z1RyYWNpbmc9ITEsUkVBQ1RfRUxFTUVOVF9UWVBFPVN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpLFJFQUNUX1BPUlRBTF9UWVBFPVN5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIiksUkVBQ1RfRlJBR01FTlRfVFlQRT1TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIiksUkVBQ1RfU1RSSUNUX01PREVfVFlQRT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksUkVBQ1RfUFJPRklMRVJfVFlQRT1TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIiksUkVBQ1RfUFJPVklERVJfVFlQRT1TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIiksUkVBQ1RfQ09OVEVYVF9UWVBFPVN5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpLFJFQUNUX1NFUlZFUl9DT05URVhUX1RZUEU9U3ltYm9sLmZvcihcInJlYWN0LnNlcnZlcl9jb250ZXh0XCIpLFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU9U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpLFJFQUNUX1NVU1BFTlNFX1RZUEU9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRT1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKSxSRUFDVF9NRU1PX1RZUEU9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIiksUkVBQ1RfTEFaWV9UWVBFPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpLFJFQUNUX09GRlNDUkVFTl9UWVBFPVN5bWJvbC5mb3IoXCJyZWFjdC5vZmZzY3JlZW5cIiksUkVBQ1RfTU9EVUxFX1JFRkVSRU5DRTtSRUFDVF9NT0RVTEVfUkVGRVJFTkNFPVN5bWJvbC5mb3IoXCJyZWFjdC5tb2R1bGUucmVmZXJlbmNlXCIpO2Z1bmN0aW9uIGlzVmFsaWRFbGVtZW50VHlwZSh0eXBlKXtyZXR1cm4gISEodHlwZW9mIHR5cGU9PVwic3RyaW5nXCJ8fHR5cGVvZiB0eXBlPT1cImZ1bmN0aW9uXCJ8fHR5cGU9PT1SRUFDVF9GUkFHTUVOVF9UWVBFfHx0eXBlPT09UkVBQ1RfUFJPRklMRVJfVFlQRXx8ZW5hYmxlRGVidWdUcmFjaW5nfHx0eXBlPT09UkVBQ1RfU1RSSUNUX01PREVfVFlQRXx8dHlwZT09PVJFQUNUX1NVU1BFTlNFX1RZUEV8fHR5cGU9PT1SRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEV8fGVuYWJsZUxlZ2FjeUhpZGRlbnx8dHlwZT09PVJFQUNUX09GRlNDUkVFTl9UWVBFfHxlbmFibGVTY29wZUFQSXx8ZW5hYmxlQ2FjaGVFbGVtZW50fHxlbmFibGVUcmFuc2l0aW9uVHJhY2luZ3x8dHlwZW9mIHR5cGU9PVwib2JqZWN0XCImJnR5cGUhPT1udWxsJiYodHlwZS4kJHR5cGVvZj09PVJFQUNUX0xBWllfVFlQRXx8dHlwZS4kJHR5cGVvZj09PVJFQUNUX01FTU9fVFlQRXx8dHlwZS4kJHR5cGVvZj09PVJFQUNUX1BST1ZJREVSX1RZUEV8fHR5cGUuJCR0eXBlb2Y9PT1SRUFDVF9DT05URVhUX1RZUEV8fHR5cGUuJCR0eXBlb2Y9PT1SRUFDVF9GT1JXQVJEX1JFRl9UWVBFfHx0eXBlLiQkdHlwZW9mPT09UkVBQ1RfTU9EVUxFX1JFRkVSRU5DRXx8dHlwZS5nZXRNb2R1bGVJZCE9PXZvaWQgMCkpfWZ1bmN0aW9uIHR5cGVPZihvYmplY3Qpe2lmKHR5cGVvZiBvYmplY3Q9PVwib2JqZWN0XCImJm9iamVjdCE9PW51bGwpe3ZhciAkJHR5cGVvZj1vYmplY3QuJCR0eXBlb2Y7c3dpdGNoKCQkdHlwZW9mKXtjYXNlIFJFQUNUX0VMRU1FTlRfVFlQRTp2YXIgdHlwZT1vYmplY3QudHlwZTtzd2l0Y2godHlwZSl7Y2FzZSBSRUFDVF9GUkFHTUVOVF9UWVBFOmNhc2UgUkVBQ1RfUFJPRklMRVJfVFlQRTpjYXNlIFJFQUNUX1NUUklDVF9NT0RFX1RZUEU6Y2FzZSBSRUFDVF9TVVNQRU5TRV9UWVBFOmNhc2UgUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFOnJldHVybiB0eXBlO2RlZmF1bHQ6dmFyICQkdHlwZW9mVHlwZT10eXBlJiZ0eXBlLiQkdHlwZW9mO3N3aXRjaCgkJHR5cGVvZlR5cGUpe2Nhc2UgUkVBQ1RfU0VSVkVSX0NPTlRFWFRfVFlQRTpjYXNlIFJFQUNUX0NPTlRFWFRfVFlQRTpjYXNlIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEU6Y2FzZSBSRUFDVF9MQVpZX1RZUEU6Y2FzZSBSRUFDVF9NRU1PX1RZUEU6Y2FzZSBSRUFDVF9QUk9WSURFUl9UWVBFOnJldHVybiAkJHR5cGVvZlR5cGU7ZGVmYXVsdDpyZXR1cm4gJCR0eXBlb2Z9fWNhc2UgUkVBQ1RfUE9SVEFMX1RZUEU6cmV0dXJuICQkdHlwZW9mfX19dmFyIENvbnRleHRDb25zdW1lcj1SRUFDVF9DT05URVhUX1RZUEUsQ29udGV4dFByb3ZpZGVyPVJFQUNUX1BST1ZJREVSX1RZUEUsRWxlbWVudD1SRUFDVF9FTEVNRU5UX1RZUEUsRm9yd2FyZFJlZjI9UkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSxGcmFnbWVudDI9UkVBQ1RfRlJBR01FTlRfVFlQRSxMYXp5PVJFQUNUX0xBWllfVFlQRSxNZW1vMj1SRUFDVF9NRU1PX1RZUEUsUG9ydGFsPVJFQUNUX1BPUlRBTF9UWVBFLFByb2ZpbGVyPVJFQUNUX1BST0ZJTEVSX1RZUEUsU3RyaWN0TW9kZT1SRUFDVF9TVFJJQ1RfTU9ERV9UWVBFLFN1c3BlbnNlPVJFQUNUX1NVU1BFTlNFX1RZUEUsU3VzcGVuc2VMaXN0PVJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSxoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0FzeW5jTW9kZT0hMSxoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0NvbmN1cnJlbnRNb2RlPSExO2Z1bmN0aW9uIGlzQXN5bmNNb2RlKG9iamVjdCl7cmV0dXJuIGhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlfHwoaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNBc3luY01vZGU9ITAsY29uc29sZS53YXJuKFwiVGhlIFJlYWN0SXMuaXNBc3luY01vZGUoKSBhbGlhcyBoYXMgYmVlbiBkZXByZWNhdGVkLCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIFJlYWN0IDE4Ky5cIikpLCExfWZ1bmN0aW9uIGlzQ29uY3VycmVudE1vZGUob2JqZWN0KXtyZXR1cm4gaGFzV2FybmVkQWJvdXREZXByZWNhdGVkSXNDb25jdXJyZW50TW9kZXx8KGhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQ29uY3VycmVudE1vZGU9ITAsY29uc29sZS53YXJuKFwiVGhlIFJlYWN0SXMuaXNDb25jdXJyZW50TW9kZSgpIGFsaWFzIGhhcyBiZWVuIGRlcHJlY2F0ZWQsIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gUmVhY3QgMTgrLlwiKSksITF9ZnVuY3Rpb24gaXNDb250ZXh0Q29uc3VtZXIyKG9iamVjdCl7cmV0dXJuIHR5cGVPZihvYmplY3QpPT09UkVBQ1RfQ09OVEVYVF9UWVBFfWZ1bmN0aW9uIGlzQ29udGV4dFByb3ZpZGVyMihvYmplY3Qpe3JldHVybiB0eXBlT2Yob2JqZWN0KT09PVJFQUNUX1BST1ZJREVSX1RZUEV9ZnVuY3Rpb24gaXNFbGVtZW50KG9iamVjdCl7cmV0dXJuIHR5cGVvZiBvYmplY3Q9PVwib2JqZWN0XCImJm9iamVjdCE9PW51bGwmJm9iamVjdC4kJHR5cGVvZj09PVJFQUNUX0VMRU1FTlRfVFlQRX1mdW5jdGlvbiBpc0ZvcndhcmRSZWYzKG9iamVjdCl7cmV0dXJuIHR5cGVPZihvYmplY3QpPT09UkVBQ1RfRk9SV0FSRF9SRUZfVFlQRX1mdW5jdGlvbiBpc0ZyYWdtZW50KG9iamVjdCl7cmV0dXJuIHR5cGVPZihvYmplY3QpPT09UkVBQ1RfRlJBR01FTlRfVFlQRX1mdW5jdGlvbiBpc0xhenkyKG9iamVjdCl7cmV0dXJuIHR5cGVPZihvYmplY3QpPT09UkVBQ1RfTEFaWV9UWVBFfWZ1bmN0aW9uIGlzTWVtbzMob2JqZWN0KXtyZXR1cm4gdHlwZU9mKG9iamVjdCk9PT1SRUFDVF9NRU1PX1RZUEV9ZnVuY3Rpb24gaXNQb3J0YWwob2JqZWN0KXtyZXR1cm4gdHlwZU9mKG9iamVjdCk9PT1SRUFDVF9QT1JUQUxfVFlQRX1mdW5jdGlvbiBpc1Byb2ZpbGVyMihvYmplY3Qpe3JldHVybiB0eXBlT2Yob2JqZWN0KT09PVJFQUNUX1BST0ZJTEVSX1RZUEV9ZnVuY3Rpb24gaXNTdHJpY3RNb2RlMihvYmplY3Qpe3JldHVybiB0eXBlT2Yob2JqZWN0KT09PVJFQUNUX1NUUklDVF9NT0RFX1RZUEV9ZnVuY3Rpb24gaXNTdXNwZW5zZTIob2JqZWN0KXtyZXR1cm4gdHlwZU9mKG9iamVjdCk9PT1SRUFDVF9TVVNQRU5TRV9UWVBFfWZ1bmN0aW9uIGlzU3VzcGVuc2VMaXN0KG9iamVjdCl7cmV0dXJuIHR5cGVPZihvYmplY3QpPT09UkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFfWV4cG9ydHMuQ29udGV4dENvbnN1bWVyPUNvbnRleHRDb25zdW1lcixleHBvcnRzLkNvbnRleHRQcm92aWRlcj1Db250ZXh0UHJvdmlkZXIsZXhwb3J0cy5FbGVtZW50PUVsZW1lbnQsZXhwb3J0cy5Gb3J3YXJkUmVmPUZvcndhcmRSZWYyLGV4cG9ydHMuRnJhZ21lbnQ9RnJhZ21lbnQyLGV4cG9ydHMuTGF6eT1MYXp5LGV4cG9ydHMuTWVtbz1NZW1vMixleHBvcnRzLlBvcnRhbD1Qb3J0YWwsZXhwb3J0cy5Qcm9maWxlcj1Qcm9maWxlcixleHBvcnRzLlN0cmljdE1vZGU9U3RyaWN0TW9kZSxleHBvcnRzLlN1c3BlbnNlPVN1c3BlbnNlLGV4cG9ydHMuU3VzcGVuc2VMaXN0PVN1c3BlbnNlTGlzdCxleHBvcnRzLmlzQXN5bmNNb2RlPWlzQXN5bmNNb2RlLGV4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1pc0NvbmN1cnJlbnRNb2RlLGV4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9aXNDb250ZXh0Q29uc3VtZXIyLGV4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9aXNDb250ZXh0UHJvdmlkZXIyLGV4cG9ydHMuaXNFbGVtZW50PWlzRWxlbWVudCxleHBvcnRzLmlzRm9yd2FyZFJlZj1pc0ZvcndhcmRSZWYzLGV4cG9ydHMuaXNGcmFnbWVudD1pc0ZyYWdtZW50LGV4cG9ydHMuaXNMYXp5PWlzTGF6eTIsZXhwb3J0cy5pc01lbW89aXNNZW1vMyxleHBvcnRzLmlzUG9ydGFsPWlzUG9ydGFsLGV4cG9ydHMuaXNQcm9maWxlcj1pc1Byb2ZpbGVyMixleHBvcnRzLmlzU3RyaWN0TW9kZT1pc1N0cmljdE1vZGUyLGV4cG9ydHMuaXNTdXNwZW5zZT1pc1N1c3BlbnNlMixleHBvcnRzLmlzU3VzcGVuc2VMaXN0PWlzU3VzcGVuc2VMaXN0LGV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWlzVmFsaWRFbGVtZW50VHlwZSxleHBvcnRzLnR5cGVPZj10eXBlT2Y7fSgpO319KTt2YXIgcmVxdWlyZV9yZWFjdF9pczI9X19jb21tb25KUyh7XCIuLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtZWxlbWVudC10by1qc3gtc3RyaW5nL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qc1wiKGV4cG9ydHMsbW9kdWxlKXtwcm9jZXNzLmVudi5OT0RFX0VOVj09PVwicHJvZHVjdGlvblwiP21vZHVsZS5leHBvcnRzPXJlcXVpcmVfcmVhY3RfaXNfcHJvZHVjdGlvbl9taW4yKCk6bW9kdWxlLmV4cG9ydHM9cmVxdWlyZV9yZWFjdF9pc19kZXZlbG9wbWVudDIoKTt9fSk7dmFyIGVudHJ5X3ByZXZpZXdfZG9jc19leHBvcnRzPXt9O19fZXhwb3J0KGVudHJ5X3ByZXZpZXdfZG9jc19leHBvcnRzLHthcHBseURlY29yYXRvcnM6KCk9PmFwcGx5RGVjb3JhdG9ycyxhcmdUeXBlc0VuaGFuY2VyczooKT0+YXJnVHlwZXNFbmhhbmNlcnMsZGVjb3JhdG9yczooKT0+ZGVjb3JhdG9ycyxwYXJhbWV0ZXJzOigpPT5wYXJhbWV0ZXJzfSk7dmFyIGltcG9ydF9wcm9wX3R5cGVzPV9fdG9FU00ocmVxdWlyZV9wcm9wX3R5cGVzKCkpO3ZhciBDVVNUT01fQ0FQVElPTj1cImN1c3RvbVwiLE9CSkVDVF9DQVBUSU9OPVwib2JqZWN0XCIsQVJSQVlfQ0FQVElPTj1cImFycmF5XCIsQ0xBU1NfQ0FQVElPTj1cImNsYXNzXCIsRlVOQ1RJT05fQ0FQVElPTj1cImZ1bmNcIixFTEVNRU5UX0NBUFRJT049XCJlbGVtZW50XCI7dmFyIGltcG9ydF9odG1sX3RhZ3M9X190b0VTTShyZXF1aXJlX2h0bWxfdGFnczIoKSk7ZnVuY3Rpb24gaXNIdG1sVGFnKHRhZ05hbWUpe3JldHVybiBpbXBvcnRfaHRtbF90YWdzLmRlZmF1bHQuaW5jbHVkZXModGFnTmFtZS50b0xvd2VyQ2FzZSgpKX12YXIgaW1wb3J0X2VzY29kZWdlbj1fX3RvRVNNKHJlcXVpcmVfZXNjb2RlZ2VuKCkpO2Z1bmN0aW9uIGRlZGVudCh0ZW1wbCl7Zm9yKHZhciB2YWx1ZXM9W10sX2k9MTtfaTxhcmd1bWVudHMubGVuZ3RoO19pKyspdmFsdWVzW19pLTFdPWFyZ3VtZW50c1tfaV07dmFyIHN0cmluZ3M9QXJyYXkuZnJvbSh0eXBlb2YgdGVtcGw9PVwic3RyaW5nXCI/W3RlbXBsXTp0ZW1wbCk7c3RyaW5nc1tzdHJpbmdzLmxlbmd0aC0xXT1zdHJpbmdzW3N0cmluZ3MubGVuZ3RoLTFdLnJlcGxhY2UoL1xccj9cXG4oW1xcdCBdKikkLyxcIlwiKTt2YXIgaW5kZW50TGVuZ3Rocz1zdHJpbmdzLnJlZHVjZShmdW5jdGlvbihhcnIsc3RyKXt2YXIgbWF0Y2hlcz1zdHIubWF0Y2goL1xcbihbXFx0IF0rfCg/IVxccykuKS9nKTtyZXR1cm4gbWF0Y2hlcz9hcnIuY29uY2F0KG1hdGNoZXMubWFwKGZ1bmN0aW9uKG1hdGNoKXt2YXIgX2EsX2I7cmV0dXJuIChfYj0oX2E9bWF0Y2gubWF0Y2goL1tcXHQgXS9nKSk9PT1udWxsfHxfYT09PXZvaWQgMD92b2lkIDA6X2EubGVuZ3RoKSE9PW51bGwmJl9iIT09dm9pZCAwP19iOjB9KSk6YXJyfSxbXSk7aWYoaW5kZW50TGVuZ3Rocy5sZW5ndGgpe3ZhciBwYXR0ZXJuXzE9bmV3IFJlZ0V4cChgXG5bXHQgXXtgK01hdGgubWluLmFwcGx5KE1hdGgsaW5kZW50TGVuZ3RocykrXCJ9XCIsXCJnXCIpO3N0cmluZ3M9c3RyaW5ncy5tYXAoZnVuY3Rpb24oc3RyKXtyZXR1cm4gc3RyLnJlcGxhY2UocGF0dGVybl8xLGBcbmApfSk7fXN0cmluZ3NbMF09c3RyaW5nc1swXS5yZXBsYWNlKC9eXFxyP1xcbi8sXCJcIik7dmFyIHN0cmluZz1zdHJpbmdzWzBdO3JldHVybiB2YWx1ZXMuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSxpKXt2YXIgZW5kZW50YXRpb25zPXN0cmluZy5tYXRjaCgvKD86XnxcXG4pKCAqKSQvKSxlbmRlbnRhdGlvbj1lbmRlbnRhdGlvbnM/ZW5kZW50YXRpb25zWzFdOlwiXCIsaW5kZW50ZWRWYWx1ZT12YWx1ZTt0eXBlb2YgdmFsdWU9PVwic3RyaW5nXCImJnZhbHVlLmluY2x1ZGVzKGBcbmApJiYoaW5kZW50ZWRWYWx1ZT1TdHJpbmcodmFsdWUpLnNwbGl0KGBcbmApLm1hcChmdW5jdGlvbihzdHIsaTIpe3JldHVybiBpMj09PTA/c3RyOlwiXCIrZW5kZW50YXRpb24rc3RyfSkuam9pbihgXG5gKSksc3RyaW5nKz1pbmRlbnRlZFZhbHVlK3N0cmluZ3NbaSsxXTt9KSxzdHJpbmd9dmFyIEJBU0lDX09QVElPTlM9e2Zvcm1hdDp7aW5kZW50OntzdHlsZTpcIiAgXCJ9LHNlbWljb2xvbnM6ITF9fSxDT01QQUNUX09QVElPTlM9ey4uLkJBU0lDX09QVElPTlMsZm9ybWF0OntuZXdsaW5lOlwiXCJ9fSxQUkVUVFlfT1BUSU9OUz17Li4uQkFTSUNfT1BUSU9OU307ZnVuY3Rpb24gZ2VuZXJhdGVDb2RlKGFzdCxjb21wYWN0PSExKXtyZXR1cm4gKDAsIGltcG9ydF9lc2NvZGVnZW4uZ2VuZXJhdGUpKGFzdCxjb21wYWN0P0NPTVBBQ1RfT1BUSU9OUzpQUkVUVFlfT1BUSU9OUyl9ZnVuY3Rpb24gZ2VuZXJhdGVPYmplY3RDb2RlKGFzdCxjb21wYWN0PSExKXtyZXR1cm4gY29tcGFjdD9nZW5lcmF0ZUNvbXBhY3RPYmplY3RDb2RlKGFzdCk6Z2VuZXJhdGVDb2RlKGFzdCl9ZnVuY3Rpb24gZ2VuZXJhdGVDb21wYWN0T2JqZWN0Q29kZShhc3Qpe2xldCByZXN1bHQ9Z2VuZXJhdGVDb2RlKGFzdCwhMCk7cmV0dXJuIHJlc3VsdC5lbmRzV2l0aChcIiB9XCIpfHwocmVzdWx0PWAke3Jlc3VsdC5zbGljZSgwLC0xKX0gfWApLHJlc3VsdH1mdW5jdGlvbiBnZW5lcmF0ZUFycmF5Q29kZShhc3QsY29tcGFjdD0hMSl7cmV0dXJuIGNvbXBhY3Q/Z2VuZXJhdGVDb21wYWN0QXJyYXlDb2RlKGFzdCk6Z2VuZXJhdGVNdWx0aWxpbmVBcnJheUNvZGUoYXN0KX1mdW5jdGlvbiBnZW5lcmF0ZU11bHRpbGluZUFycmF5Q29kZShhc3Qpe2xldCByZXN1bHQ9Z2VuZXJhdGVDb2RlKGFzdCk7cmV0dXJuIHJlc3VsdC5lbmRzV2l0aChcIiAgfV1cIikmJihyZXN1bHQ9ZGVkZW50KHJlc3VsdCkpLHJlc3VsdH1mdW5jdGlvbiBnZW5lcmF0ZUNvbXBhY3RBcnJheUNvZGUoYXN0KXtsZXQgcmVzdWx0PWdlbmVyYXRlQ29kZShhc3QsITApO3JldHVybiByZXN1bHQuc3RhcnRzV2l0aChcIlsgICAgXCIpJiYocmVzdWx0PXJlc3VsdC5yZXBsYWNlKFwiWyAgICBcIixcIltcIikpLHJlc3VsdH12YXIgaXNNZW1vPWNvbXBvbmVudD0+Y29tcG9uZW50LiQkdHlwZW9mPT09U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIiksaXNGb3J3YXJkUmVmPWNvbXBvbmVudD0+Y29tcG9uZW50LiQkdHlwZW9mPT09U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpO2luaXRfYWNvcm4oKTt2YXIgaW1wb3J0X2Fjb3JuX2pzeD1fX3RvRVNNKHJlcXVpcmVfYWNvcm5fanN4KCkpO2Z1bmN0aW9uIHNpbXBsZShub2RlLHZpc2l0b3JzLGJhc2VWaXNpdG9yLHN0YXRlLG92ZXJyaWRlKXtiYXNlVmlzaXRvcnx8KGJhc2VWaXNpdG9yPWJhc2UpLGZ1bmN0aW9uIGMobm9kZTIsc3Qsb3ZlcnJpZGUyKXt2YXIgdHlwZT1vdmVycmlkZTJ8fG5vZGUyLnR5cGUsZm91bmQ9dmlzaXRvcnNbdHlwZV07YmFzZVZpc2l0b3JbdHlwZV0obm9kZTIsc3QsYyksZm91bmQmJmZvdW5kKG5vZGUyLHN0KTt9KG5vZGUsc3RhdGUsb3ZlcnJpZGUpO31mdW5jdGlvbiBhbmNlc3Rvcihub2RlLHZpc2l0b3JzLGJhc2VWaXNpdG9yLHN0YXRlLG92ZXJyaWRlKXt2YXIgYW5jZXN0b3JzPVtdO2Jhc2VWaXNpdG9yfHwoYmFzZVZpc2l0b3I9YmFzZSksZnVuY3Rpb24gYyhub2RlMixzdCxvdmVycmlkZTIpe3ZhciB0eXBlPW92ZXJyaWRlMnx8bm9kZTIudHlwZSxmb3VuZD12aXNpdG9yc1t0eXBlXSxpc05ldz1ub2RlMiE9PWFuY2VzdG9yc1thbmNlc3RvcnMubGVuZ3RoLTFdO2lzTmV3JiZhbmNlc3RvcnMucHVzaChub2RlMiksYmFzZVZpc2l0b3JbdHlwZV0obm9kZTIsc3QsYyksZm91bmQmJmZvdW5kKG5vZGUyLHN0fHxhbmNlc3RvcnMsYW5jZXN0b3JzKSxpc05ldyYmYW5jZXN0b3JzLnBvcCgpO30obm9kZSxzdGF0ZSxvdmVycmlkZSk7fWZ1bmN0aW9uIHNraXBUaHJvdWdoKG5vZGUsc3QsYyl7Yyhub2RlLHN0KTt9ZnVuY3Rpb24gaWdub3JlKF9ub2RlLF9zdCxfYyl7fXZhciBiYXNlPXt9O2Jhc2UuUHJvZ3JhbT1iYXNlLkJsb2NrU3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUsc3QsYyl7Zm9yKHZhciBpPTAsbGlzdD1ub2RlLmJvZHk7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgc3RtdD1saXN0W2ldO2Moc3RtdCxzdCxcIlN0YXRlbWVudFwiKTt9fTtiYXNlLlN0YXRlbWVudD1za2lwVGhyb3VnaDtiYXNlLkVtcHR5U3RhdGVtZW50PWlnbm9yZTtiYXNlLkV4cHJlc3Npb25TdGF0ZW1lbnQ9YmFzZS5QYXJlbnRoZXNpemVkRXhwcmVzc2lvbj1iYXNlLkNoYWluRXhwcmVzc2lvbj1mdW5jdGlvbihub2RlLHN0LGMpe3JldHVybiBjKG5vZGUuZXhwcmVzc2lvbixzdCxcIkV4cHJlc3Npb25cIil9O2Jhc2UuSWZTdGF0ZW1lbnQ9ZnVuY3Rpb24obm9kZSxzdCxjKXtjKG5vZGUudGVzdCxzdCxcIkV4cHJlc3Npb25cIiksYyhub2RlLmNvbnNlcXVlbnQsc3QsXCJTdGF0ZW1lbnRcIiksbm9kZS5hbHRlcm5hdGUmJmMobm9kZS5hbHRlcm5hdGUsc3QsXCJTdGF0ZW1lbnRcIik7fTtiYXNlLkxhYmVsZWRTdGF0ZW1lbnQ9ZnVuY3Rpb24obm9kZSxzdCxjKXtyZXR1cm4gYyhub2RlLmJvZHksc3QsXCJTdGF0ZW1lbnRcIil9O2Jhc2UuQnJlYWtTdGF0ZW1lbnQ9YmFzZS5Db250aW51ZVN0YXRlbWVudD1pZ25vcmU7YmFzZS5XaXRoU3RhdGVtZW50PWZ1bmN0aW9uKG5vZGUsc3QsYyl7Yyhub2RlLm9iamVjdCxzdCxcIkV4cHJlc3Npb25cIiksYyhub2RlLmJvZHksc3QsXCJTdGF0ZW1lbnRcIik7fTtiYXNlLlN3aXRjaFN0YXRlbWVudD1mdW5jdGlvbihub2RlLHN0LGMpe2Mobm9kZS5kaXNjcmltaW5hbnQsc3QsXCJFeHByZXNzaW9uXCIpO2Zvcih2YXIgaSQxPTAsbGlzdCQxPW5vZGUuY2FzZXM7aSQxPGxpc3QkMS5sZW5ndGg7aSQxKz0xKXt2YXIgY3M9bGlzdCQxW2kkMV07Y3MudGVzdCYmYyhjcy50ZXN0LHN0LFwiRXhwcmVzc2lvblwiKTtmb3IodmFyIGk9MCxsaXN0PWNzLmNvbnNlcXVlbnQ7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgY29ucz1saXN0W2ldO2MoY29ucyxzdCxcIlN0YXRlbWVudFwiKTt9fX07YmFzZS5Td2l0Y2hDYXNlPWZ1bmN0aW9uKG5vZGUsc3QsYyl7bm9kZS50ZXN0JiZjKG5vZGUudGVzdCxzdCxcIkV4cHJlc3Npb25cIik7Zm9yKHZhciBpPTAsbGlzdD1ub2RlLmNvbnNlcXVlbnQ7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgY29ucz1saXN0W2ldO2MoY29ucyxzdCxcIlN0YXRlbWVudFwiKTt9fTtiYXNlLlJldHVyblN0YXRlbWVudD1iYXNlLllpZWxkRXhwcmVzc2lvbj1iYXNlLkF3YWl0RXhwcmVzc2lvbj1mdW5jdGlvbihub2RlLHN0LGMpe25vZGUuYXJndW1lbnQmJmMobm9kZS5hcmd1bWVudCxzdCxcIkV4cHJlc3Npb25cIik7fTtiYXNlLlRocm93U3RhdGVtZW50PWJhc2UuU3ByZWFkRWxlbWVudD1mdW5jdGlvbihub2RlLHN0LGMpe3JldHVybiBjKG5vZGUuYXJndW1lbnQsc3QsXCJFeHByZXNzaW9uXCIpfTtiYXNlLlRyeVN0YXRlbWVudD1mdW5jdGlvbihub2RlLHN0LGMpe2Mobm9kZS5ibG9jayxzdCxcIlN0YXRlbWVudFwiKSxub2RlLmhhbmRsZXImJmMobm9kZS5oYW5kbGVyLHN0KSxub2RlLmZpbmFsaXplciYmYyhub2RlLmZpbmFsaXplcixzdCxcIlN0YXRlbWVudFwiKTt9O2Jhc2UuQ2F0Y2hDbGF1c2U9ZnVuY3Rpb24obm9kZSxzdCxjKXtub2RlLnBhcmFtJiZjKG5vZGUucGFyYW0sc3QsXCJQYXR0ZXJuXCIpLGMobm9kZS5ib2R5LHN0LFwiU3RhdGVtZW50XCIpO307YmFzZS5XaGlsZVN0YXRlbWVudD1iYXNlLkRvV2hpbGVTdGF0ZW1lbnQ9ZnVuY3Rpb24obm9kZSxzdCxjKXtjKG5vZGUudGVzdCxzdCxcIkV4cHJlc3Npb25cIiksYyhub2RlLmJvZHksc3QsXCJTdGF0ZW1lbnRcIik7fTtiYXNlLkZvclN0YXRlbWVudD1mdW5jdGlvbihub2RlLHN0LGMpe25vZGUuaW5pdCYmYyhub2RlLmluaXQsc3QsXCJGb3JJbml0XCIpLG5vZGUudGVzdCYmYyhub2RlLnRlc3Qsc3QsXCJFeHByZXNzaW9uXCIpLG5vZGUudXBkYXRlJiZjKG5vZGUudXBkYXRlLHN0LFwiRXhwcmVzc2lvblwiKSxjKG5vZGUuYm9keSxzdCxcIlN0YXRlbWVudFwiKTt9O2Jhc2UuRm9ySW5TdGF0ZW1lbnQ9YmFzZS5Gb3JPZlN0YXRlbWVudD1mdW5jdGlvbihub2RlLHN0LGMpe2Mobm9kZS5sZWZ0LHN0LFwiRm9ySW5pdFwiKSxjKG5vZGUucmlnaHQsc3QsXCJFeHByZXNzaW9uXCIpLGMobm9kZS5ib2R5LHN0LFwiU3RhdGVtZW50XCIpO307YmFzZS5Gb3JJbml0PWZ1bmN0aW9uKG5vZGUsc3QsYyl7bm9kZS50eXBlPT09XCJWYXJpYWJsZURlY2xhcmF0aW9uXCI/Yyhub2RlLHN0KTpjKG5vZGUsc3QsXCJFeHByZXNzaW9uXCIpO307YmFzZS5EZWJ1Z2dlclN0YXRlbWVudD1pZ25vcmU7YmFzZS5GdW5jdGlvbkRlY2xhcmF0aW9uPWZ1bmN0aW9uKG5vZGUsc3QsYyl7cmV0dXJuIGMobm9kZSxzdCxcIkZ1bmN0aW9uXCIpfTtiYXNlLlZhcmlhYmxlRGVjbGFyYXRpb249ZnVuY3Rpb24obm9kZSxzdCxjKXtmb3IodmFyIGk9MCxsaXN0PW5vZGUuZGVjbGFyYXRpb25zO2k8bGlzdC5sZW5ndGg7aSs9MSl7dmFyIGRlY2w9bGlzdFtpXTtjKGRlY2wsc3QpO319O2Jhc2UuVmFyaWFibGVEZWNsYXJhdG9yPWZ1bmN0aW9uKG5vZGUsc3QsYyl7Yyhub2RlLmlkLHN0LFwiUGF0dGVyblwiKSxub2RlLmluaXQmJmMobm9kZS5pbml0LHN0LFwiRXhwcmVzc2lvblwiKTt9O2Jhc2UuRnVuY3Rpb249ZnVuY3Rpb24obm9kZSxzdCxjKXtub2RlLmlkJiZjKG5vZGUuaWQsc3QsXCJQYXR0ZXJuXCIpO2Zvcih2YXIgaT0wLGxpc3Q9bm9kZS5wYXJhbXM7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgcGFyYW09bGlzdFtpXTtjKHBhcmFtLHN0LFwiUGF0dGVyblwiKTt9Yyhub2RlLmJvZHksc3Qsbm9kZS5leHByZXNzaW9uP1wiRXhwcmVzc2lvblwiOlwiU3RhdGVtZW50XCIpO307YmFzZS5QYXR0ZXJuPWZ1bmN0aW9uKG5vZGUsc3QsYyl7bm9kZS50eXBlPT09XCJJZGVudGlmaWVyXCI/Yyhub2RlLHN0LFwiVmFyaWFibGVQYXR0ZXJuXCIpOm5vZGUudHlwZT09PVwiTWVtYmVyRXhwcmVzc2lvblwiP2Mobm9kZSxzdCxcIk1lbWJlclBhdHRlcm5cIik6Yyhub2RlLHN0KTt9O2Jhc2UuVmFyaWFibGVQYXR0ZXJuPWlnbm9yZTtiYXNlLk1lbWJlclBhdHRlcm49c2tpcFRocm91Z2g7YmFzZS5SZXN0RWxlbWVudD1mdW5jdGlvbihub2RlLHN0LGMpe3JldHVybiBjKG5vZGUuYXJndW1lbnQsc3QsXCJQYXR0ZXJuXCIpfTtiYXNlLkFycmF5UGF0dGVybj1mdW5jdGlvbihub2RlLHN0LGMpe2Zvcih2YXIgaT0wLGxpc3Q9bm9kZS5lbGVtZW50cztpPGxpc3QubGVuZ3RoO2krPTEpe3ZhciBlbHQ9bGlzdFtpXTtlbHQmJmMoZWx0LHN0LFwiUGF0dGVyblwiKTt9fTtiYXNlLk9iamVjdFBhdHRlcm49ZnVuY3Rpb24obm9kZSxzdCxjKXtmb3IodmFyIGk9MCxsaXN0PW5vZGUucHJvcGVydGllcztpPGxpc3QubGVuZ3RoO2krPTEpe3ZhciBwcm9wPWxpc3RbaV07cHJvcC50eXBlPT09XCJQcm9wZXJ0eVwiPyhwcm9wLmNvbXB1dGVkJiZjKHByb3Aua2V5LHN0LFwiRXhwcmVzc2lvblwiKSxjKHByb3AudmFsdWUsc3QsXCJQYXR0ZXJuXCIpKTpwcm9wLnR5cGU9PT1cIlJlc3RFbGVtZW50XCImJmMocHJvcC5hcmd1bWVudCxzdCxcIlBhdHRlcm5cIik7fX07YmFzZS5FeHByZXNzaW9uPXNraXBUaHJvdWdoO2Jhc2UuVGhpc0V4cHJlc3Npb249YmFzZS5TdXBlcj1iYXNlLk1ldGFQcm9wZXJ0eT1pZ25vcmU7YmFzZS5BcnJheUV4cHJlc3Npb249ZnVuY3Rpb24obm9kZSxzdCxjKXtmb3IodmFyIGk9MCxsaXN0PW5vZGUuZWxlbWVudHM7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgZWx0PWxpc3RbaV07ZWx0JiZjKGVsdCxzdCxcIkV4cHJlc3Npb25cIik7fX07YmFzZS5PYmplY3RFeHByZXNzaW9uPWZ1bmN0aW9uKG5vZGUsc3QsYyl7Zm9yKHZhciBpPTAsbGlzdD1ub2RlLnByb3BlcnRpZXM7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgcHJvcD1saXN0W2ldO2MocHJvcCxzdCk7fX07YmFzZS5GdW5jdGlvbkV4cHJlc3Npb249YmFzZS5BcnJvd0Z1bmN0aW9uRXhwcmVzc2lvbj1iYXNlLkZ1bmN0aW9uRGVjbGFyYXRpb247YmFzZS5TZXF1ZW5jZUV4cHJlc3Npb249ZnVuY3Rpb24obm9kZSxzdCxjKXtmb3IodmFyIGk9MCxsaXN0PW5vZGUuZXhwcmVzc2lvbnM7aTxsaXN0Lmxlbmd0aDtpKz0xKXt2YXIgZXhwcj1saXN0W2ldO2MoZXhwcixzdCxcIkV4cHJlc3Npb25cIik7fX07YmFzZS5UZW1wbGF0ZUxpdGVyYWw9ZnVuY3Rpb24obm9kZSxzdCxjKXtmb3IodmFyIGk9MCxsaXN0PW5vZGUucXVhc2lzO2k8bGlzdC5sZW5ndGg7aSs9MSl7dmFyIHF1YXNpPWxpc3RbaV07YyhxdWFzaSxzdCk7fWZvcih2YXIgaSQxPTAsbGlzdCQxPW5vZGUuZXhwcmVzc2lvbnM7aSQxPGxpc3QkMS5sZW5ndGg7aSQxKz0xKXt2YXIgZXhwcj1saXN0JDFbaSQxXTtjKGV4cHIsc3QsXCJFeHByZXNzaW9uXCIpO319O2Jhc2UuVGVtcGxhdGVFbGVtZW50PWlnbm9yZTtiYXNlLlVuYXJ5RXhwcmVzc2lvbj1iYXNlLlVwZGF0ZUV4cHJlc3Npb249ZnVuY3Rpb24obm9kZSxzdCxjKXtjKG5vZGUuYXJndW1lbnQsc3QsXCJFeHByZXNzaW9uXCIpO307YmFzZS5CaW5hcnlFeHByZXNzaW9uPWJhc2UuTG9naWNhbEV4cHJlc3Npb249ZnVuY3Rpb24obm9kZSxzdCxjKXtjKG5vZGUubGVmdCxzdCxcIkV4cHJlc3Npb25cIiksYyhub2RlLnJpZ2h0LHN0LFwiRXhwcmVzc2lvblwiKTt9O2Jhc2UuQXNzaWdubWVudEV4cHJlc3Npb249YmFzZS5Bc3NpZ25tZW50UGF0dGVybj1mdW5jdGlvbihub2RlLHN0LGMpe2Mobm9kZS5sZWZ0LHN0LFwiUGF0dGVyblwiKSxjKG5vZGUucmlnaHQsc3QsXCJFeHByZXNzaW9uXCIpO307YmFzZS5Db25kaXRpb25hbEV4cHJlc3Npb249ZnVuY3Rpb24obm9kZSxzdCxjKXtjKG5vZGUudGVzdCxzdCxcIkV4cHJlc3Npb25cIiksYyhub2RlLmNvbnNlcXVlbnQsc3QsXCJFeHByZXNzaW9uXCIpLGMobm9kZS5hbHRlcm5hdGUsc3QsXCJFeHByZXNzaW9uXCIpO307YmFzZS5OZXdFeHByZXNzaW9uPWJhc2UuQ2FsbEV4cHJlc3Npb249ZnVuY3Rpb24obm9kZSxzdCxjKXtpZihjKG5vZGUuY2FsbGVlLHN0LFwiRXhwcmVzc2lvblwiKSxub2RlLmFyZ3VtZW50cylmb3IodmFyIGk9MCxsaXN0PW5vZGUuYXJndW1lbnRzO2k8bGlzdC5sZW5ndGg7aSs9MSl7dmFyIGFyZz1saXN0W2ldO2MoYXJnLHN0LFwiRXhwcmVzc2lvblwiKTt9fTtiYXNlLk1lbWJlckV4cHJlc3Npb249ZnVuY3Rpb24obm9kZSxzdCxjKXtjKG5vZGUub2JqZWN0LHN0LFwiRXhwcmVzc2lvblwiKSxub2RlLmNvbXB1dGVkJiZjKG5vZGUucHJvcGVydHksc3QsXCJFeHByZXNzaW9uXCIpO307YmFzZS5FeHBvcnROYW1lZERlY2xhcmF0aW9uPWJhc2UuRXhwb3J0RGVmYXVsdERlY2xhcmF0aW9uPWZ1bmN0aW9uKG5vZGUsc3QsYyl7bm9kZS5kZWNsYXJhdGlvbiYmYyhub2RlLmRlY2xhcmF0aW9uLHN0LG5vZGUudHlwZT09PVwiRXhwb3J0TmFtZWREZWNsYXJhdGlvblwifHxub2RlLmRlY2xhcmF0aW9uLmlkP1wiU3RhdGVtZW50XCI6XCJFeHByZXNzaW9uXCIpLG5vZGUuc291cmNlJiZjKG5vZGUuc291cmNlLHN0LFwiRXhwcmVzc2lvblwiKTt9O2Jhc2UuRXhwb3J0QWxsRGVjbGFyYXRpb249ZnVuY3Rpb24obm9kZSxzdCxjKXtub2RlLmV4cG9ydGVkJiZjKG5vZGUuZXhwb3J0ZWQsc3QpLGMobm9kZS5zb3VyY2Usc3QsXCJFeHByZXNzaW9uXCIpO307YmFzZS5JbXBvcnREZWNsYXJhdGlvbj1mdW5jdGlvbihub2RlLHN0LGMpe2Zvcih2YXIgaT0wLGxpc3Q9bm9kZS5zcGVjaWZpZXJzO2k8bGlzdC5sZW5ndGg7aSs9MSl7dmFyIHNwZWM9bGlzdFtpXTtjKHNwZWMsc3QpO31jKG5vZGUuc291cmNlLHN0LFwiRXhwcmVzc2lvblwiKTt9O2Jhc2UuSW1wb3J0RXhwcmVzc2lvbj1mdW5jdGlvbihub2RlLHN0LGMpe2Mobm9kZS5zb3VyY2Usc3QsXCJFeHByZXNzaW9uXCIpO307YmFzZS5JbXBvcnRTcGVjaWZpZXI9YmFzZS5JbXBvcnREZWZhdWx0U3BlY2lmaWVyPWJhc2UuSW1wb3J0TmFtZXNwYWNlU3BlY2lmaWVyPWJhc2UuSWRlbnRpZmllcj1iYXNlLkxpdGVyYWw9aWdub3JlO2Jhc2UuVGFnZ2VkVGVtcGxhdGVFeHByZXNzaW9uPWZ1bmN0aW9uKG5vZGUsc3QsYyl7Yyhub2RlLnRhZyxzdCxcIkV4cHJlc3Npb25cIiksYyhub2RlLnF1YXNpLHN0LFwiRXhwcmVzc2lvblwiKTt9O2Jhc2UuQ2xhc3NEZWNsYXJhdGlvbj1iYXNlLkNsYXNzRXhwcmVzc2lvbj1mdW5jdGlvbihub2RlLHN0LGMpe3JldHVybiBjKG5vZGUsc3QsXCJDbGFzc1wiKX07YmFzZS5DbGFzcz1mdW5jdGlvbihub2RlLHN0LGMpe25vZGUuaWQmJmMobm9kZS5pZCxzdCxcIlBhdHRlcm5cIiksbm9kZS5zdXBlckNsYXNzJiZjKG5vZGUuc3VwZXJDbGFzcyxzdCxcIkV4cHJlc3Npb25cIiksYyhub2RlLmJvZHksc3QpO307YmFzZS5DbGFzc0JvZHk9ZnVuY3Rpb24obm9kZSxzdCxjKXtmb3IodmFyIGk9MCxsaXN0PW5vZGUuYm9keTtpPGxpc3QubGVuZ3RoO2krPTEpe3ZhciBlbHQ9bGlzdFtpXTtjKGVsdCxzdCk7fX07YmFzZS5NZXRob2REZWZpbml0aW9uPWJhc2UuUHJvcGVydHk9ZnVuY3Rpb24obm9kZSxzdCxjKXtub2RlLmNvbXB1dGVkJiZjKG5vZGUua2V5LHN0LFwiRXhwcmVzc2lvblwiKSxjKG5vZGUudmFsdWUsc3QsXCJFeHByZXNzaW9uXCIpO307dmFyIEFDT1JOX1dBTEtfVklTSVRPUlM9ey4uLmJhc2UsSlNYRWxlbWVudDooKT0+e319LGFjb3JuUGFyc2VyPVBhcnNlci5leHRlbmQoKDAsIGltcG9ydF9hY29ybl9qc3guZGVmYXVsdCkoKSk7ZnVuY3Rpb24gZXh0cmFjdElkZW50aWZpZXJOYW1lKGlkZW50aWZpZXJOb2RlKXtyZXR1cm4gaWRlbnRpZmllck5vZGUhPW51bGw/aWRlbnRpZmllck5vZGUubmFtZTpudWxsfWZ1bmN0aW9uIGZpbHRlckFuY2VzdG9ycyhhbmNlc3RvcnMpe3JldHVybiBhbmNlc3RvcnMuZmlsdGVyKHg9PngudHlwZT09PVwiT2JqZWN0RXhwcmVzc2lvblwifHx4LnR5cGU9PT1cIkFycmF5RXhwcmVzc2lvblwiKX1mdW5jdGlvbiBjYWxjdWxhdGVOb2RlRGVwdGgobm9kZSl7bGV0IGRlcHRocz1bXTtyZXR1cm4gYW5jZXN0b3Iobm9kZSx7T2JqZWN0RXhwcmVzc2lvbihfLGFuY2VzdG9ycyl7ZGVwdGhzLnB1c2goZmlsdGVyQW5jZXN0b3JzKGFuY2VzdG9ycykubGVuZ3RoKTt9LEFycmF5RXhwcmVzc2lvbihfLGFuY2VzdG9ycyl7ZGVwdGhzLnB1c2goZmlsdGVyQW5jZXN0b3JzKGFuY2VzdG9ycykubGVuZ3RoKTt9fSxBQ09STl9XQUxLX1ZJU0lUT1JTKSxNYXRoLm1heCguLi5kZXB0aHMpfWZ1bmN0aW9uIHBhcnNlSWRlbnRpZmllcihpZGVudGlmaWVyTm9kZSl7cmV0dXJuIHtpbmZlcnJlZFR5cGU6e3R5cGU6XCJJZGVudGlmaWVyXCIsaWRlbnRpZmllcjpleHRyYWN0SWRlbnRpZmllck5hbWUoaWRlbnRpZmllck5vZGUpfSxhc3Q6aWRlbnRpZmllck5vZGV9fWZ1bmN0aW9uIHBhcnNlTGl0ZXJhbChsaXRlcmFsTm9kZSl7cmV0dXJuIHtpbmZlcnJlZFR5cGU6e3R5cGU6XCJMaXRlcmFsXCJ9LGFzdDpsaXRlcmFsTm9kZX19ZnVuY3Rpb24gcGFyc2VGdW5jdGlvbihmdW5jTm9kZSl7bGV0IGlubmVySnN4RWxlbWVudE5vZGU7c2ltcGxlKGZ1bmNOb2RlLmJvZHkse0pTWEVsZW1lbnQobm9kZSl7aW5uZXJKc3hFbGVtZW50Tm9kZT1ub2RlO319LEFDT1JOX1dBTEtfVklTSVRPUlMpO2xldCBpbmZlcnJlZFR5cGU9e3R5cGU6aW5uZXJKc3hFbGVtZW50Tm9kZSE9bnVsbD9cIkVsZW1lbnRcIjpcIkZ1bmN0aW9uXCIscGFyYW1zOmZ1bmNOb2RlLnBhcmFtcyxoYXNQYXJhbXM6ZnVuY05vZGUucGFyYW1zLmxlbmd0aCE9PTB9LGlkZW50aWZpZXJOYW1lPWV4dHJhY3RJZGVudGlmaWVyTmFtZShmdW5jTm9kZS5pZCk7cmV0dXJuIGlkZW50aWZpZXJOYW1lIT1udWxsJiYoaW5mZXJyZWRUeXBlLmlkZW50aWZpZXI9aWRlbnRpZmllck5hbWUpLHtpbmZlcnJlZFR5cGUsYXN0OmZ1bmNOb2RlfX1mdW5jdGlvbiBwYXJzZUNsYXNzKGNsYXNzTm9kZSl7bGV0IGlubmVySnN4RWxlbWVudE5vZGU7cmV0dXJuIHNpbXBsZShjbGFzc05vZGUuYm9keSx7SlNYRWxlbWVudChub2RlKXtpbm5lckpzeEVsZW1lbnROb2RlPW5vZGU7fX0sQUNPUk5fV0FMS19WSVNJVE9SUykse2luZmVycmVkVHlwZTp7dHlwZTppbm5lckpzeEVsZW1lbnROb2RlIT1udWxsP1wiRWxlbWVudFwiOlwiQ2xhc3NcIixpZGVudGlmaWVyOmV4dHJhY3RJZGVudGlmaWVyTmFtZShjbGFzc05vZGUuaWQpfSxhc3Q6Y2xhc3NOb2RlfX1mdW5jdGlvbiBwYXJzZUpzeEVsZW1lbnQoanN4RWxlbWVudE5vZGUpe2xldCBpbmZlcnJlZFR5cGU9e3R5cGU6XCJFbGVtZW50XCJ9LGlkZW50aWZpZXJOYW1lPWV4dHJhY3RJZGVudGlmaWVyTmFtZShqc3hFbGVtZW50Tm9kZS5vcGVuaW5nRWxlbWVudC5uYW1lKTtyZXR1cm4gaWRlbnRpZmllck5hbWUhPW51bGwmJihpbmZlcnJlZFR5cGUuaWRlbnRpZmllcj1pZGVudGlmaWVyTmFtZSkse2luZmVycmVkVHlwZSxhc3Q6anN4RWxlbWVudE5vZGV9fWZ1bmN0aW9uIHBhcnNlQ2FsbChjYWxsTm9kZSl7bGV0IGlkZW50aWZpZXJOb2RlPWNhbGxOb2RlLmNhbGxlZS50eXBlPT09XCJNZW1iZXJFeHByZXNzaW9uXCI/Y2FsbE5vZGUuY2FsbGVlLnByb3BlcnR5OmNhbGxOb2RlLmNhbGxlZTtyZXR1cm4gZXh0cmFjdElkZW50aWZpZXJOYW1lKGlkZW50aWZpZXJOb2RlKT09PVwic2hhcGVcIj9wYXJzZU9iamVjdChjYWxsTm9kZS5hcmd1bWVudHNbMF0pOm51bGx9ZnVuY3Rpb24gcGFyc2VPYmplY3Qob2JqZWN0Tm9kZSl7cmV0dXJuIHtpbmZlcnJlZFR5cGU6e3R5cGU6XCJPYmplY3RcIixkZXB0aDpjYWxjdWxhdGVOb2RlRGVwdGgob2JqZWN0Tm9kZSl9LGFzdDpvYmplY3ROb2RlfX1mdW5jdGlvbiBwYXJzZUFycmF5KGFycmF5Tm9kZSl7cmV0dXJuIHtpbmZlcnJlZFR5cGU6e3R5cGU6XCJBcnJheVwiLGRlcHRoOmNhbGN1bGF0ZU5vZGVEZXB0aChhcnJheU5vZGUpfSxhc3Q6YXJyYXlOb2RlfX1mdW5jdGlvbiBwYXJzZUV4cHJlc3Npb24oZXhwcmVzc2lvbil7c3dpdGNoKGV4cHJlc3Npb24udHlwZSl7Y2FzZVwiSWRlbnRpZmllclwiOnJldHVybiBwYXJzZUlkZW50aWZpZXIoZXhwcmVzc2lvbik7Y2FzZVwiTGl0ZXJhbFwiOnJldHVybiBwYXJzZUxpdGVyYWwoZXhwcmVzc2lvbik7Y2FzZVwiRnVuY3Rpb25FeHByZXNzaW9uXCI6Y2FzZVwiQXJyb3dGdW5jdGlvbkV4cHJlc3Npb25cIjpyZXR1cm4gcGFyc2VGdW5jdGlvbihleHByZXNzaW9uKTtjYXNlXCJDbGFzc0V4cHJlc3Npb25cIjpyZXR1cm4gcGFyc2VDbGFzcyhleHByZXNzaW9uKTtjYXNlXCJKU1hFbGVtZW50XCI6cmV0dXJuIHBhcnNlSnN4RWxlbWVudChleHByZXNzaW9uKTtjYXNlXCJDYWxsRXhwcmVzc2lvblwiOnJldHVybiBwYXJzZUNhbGwoZXhwcmVzc2lvbik7Y2FzZVwiT2JqZWN0RXhwcmVzc2lvblwiOnJldHVybiBwYXJzZU9iamVjdChleHByZXNzaW9uKTtjYXNlXCJBcnJheUV4cHJlc3Npb25cIjpyZXR1cm4gcGFyc2VBcnJheShleHByZXNzaW9uKTtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBwYXJzZTQodmFsdWUpe2xldCBhc3Q9YWNvcm5QYXJzZXIucGFyc2UoYCgke3ZhbHVlfSlgLHtlY21hVmVyc2lvbjoyMDIwfSkscGFyc2luZ1Jlc3VsdD17aW5mZXJyZWRUeXBlOnt0eXBlOlwiVW5rbm93blwifSxhc3R9O2lmKGFzdC5ib2R5WzBdIT1udWxsKXtsZXQgcm9vdE5vZGU9YXN0LmJvZHlbMF07c3dpdGNoKHJvb3ROb2RlLnR5cGUpe2Nhc2VcIkV4cHJlc3Npb25TdGF0ZW1lbnRcIjp7bGV0IGV4cHJlc3Npb25SZXN1bHQ9cGFyc2VFeHByZXNzaW9uKHJvb3ROb2RlLmV4cHJlc3Npb24pO2V4cHJlc3Npb25SZXN1bHQhPW51bGwmJihwYXJzaW5nUmVzdWx0PWV4cHJlc3Npb25SZXN1bHQpO2JyZWFrfX19cmV0dXJuIHBhcnNpbmdSZXN1bHR9ZnVuY3Rpb24gaW5zcGVjdFZhbHVlKHZhbHVlKXt0cnl7cmV0dXJuIHsuLi5wYXJzZTQodmFsdWUpfX1jYXRjaHt9cmV0dXJuIHtpbmZlcnJlZFR5cGU6e3R5cGU6XCJVbmtub3duXCJ9fX1mdW5jdGlvbiBnZW5lcmF0ZUFycmF5KHtpbmZlcnJlZFR5cGUsYXN0fSl7bGV0e2RlcHRofT1pbmZlcnJlZFR5cGU7aWYoZGVwdGg8PTIpe2xldCBjb21wYWN0QXJyYXk9Z2VuZXJhdGVBcnJheUNvZGUoYXN0LCEwKTtpZighaXNUb29Mb25nRm9yRGVmYXVsdFZhbHVlU3VtbWFyeShjb21wYWN0QXJyYXkpKXJldHVybiBjcmVhdGVTdW1tYXJ5VmFsdWUoY29tcGFjdEFycmF5KX1yZXR1cm4gY3JlYXRlU3VtbWFyeVZhbHVlKEFSUkFZX0NBUFRJT04sZ2VuZXJhdGVBcnJheUNvZGUoYXN0KSl9ZnVuY3Rpb24gZ2VuZXJhdGVPYmplY3Qoe2luZmVycmVkVHlwZSxhc3R9KXtsZXR7ZGVwdGh9PWluZmVycmVkVHlwZTtpZihkZXB0aD09PTEpe2xldCBjb21wYWN0T2JqZWN0PWdlbmVyYXRlT2JqZWN0Q29kZShhc3QsITApO2lmKCFpc1Rvb0xvbmdGb3JEZWZhdWx0VmFsdWVTdW1tYXJ5KGNvbXBhY3RPYmplY3QpKXJldHVybiBjcmVhdGVTdW1tYXJ5VmFsdWUoY29tcGFjdE9iamVjdCl9cmV0dXJuIGNyZWF0ZVN1bW1hcnlWYWx1ZShPQkpFQ1RfQ0FQVElPTixnZW5lcmF0ZU9iamVjdENvZGUoYXN0KSl9ZnVuY3Rpb24gZ2V0UHJldHR5RnVuY0lkZW50aWZpZXIoaWRlbnRpZmllcixoYXNBcmd1bWVudHMpe3JldHVybiBoYXNBcmd1bWVudHM/YCR7aWRlbnRpZmllcn0oIC4uLiApYDpgJHtpZGVudGlmaWVyfSgpYH1mdW5jdGlvbiBnZXRQcmV0dHlFbGVtZW50SWRlbnRpZmllcihpZGVudGlmaWVyKXtyZXR1cm4gYDwke2lkZW50aWZpZXJ9IC8+YH1mdW5jdGlvbiBnZXRQcmV0dHlJZGVudGlmaWVyKGluZmVycmVkVHlwZSl7bGV0e3R5cGUsaWRlbnRpZmllcn09aW5mZXJyZWRUeXBlO3N3aXRjaCh0eXBlKXtjYXNlXCJGdW5jdGlvblwiOnJldHVybiBnZXRQcmV0dHlGdW5jSWRlbnRpZmllcihpZGVudGlmaWVyLGluZmVycmVkVHlwZS5oYXNQYXJhbXMpO2Nhc2VcIkVsZW1lbnRcIjpyZXR1cm4gZ2V0UHJldHR5RWxlbWVudElkZW50aWZpZXIoaWRlbnRpZmllcik7ZGVmYXVsdDpyZXR1cm4gaWRlbnRpZmllcn19ZnVuY3Rpb24gZ2VuZXJhdGVGdW5jKHtpbmZlcnJlZFR5cGUsYXN0fSl7bGV0e2lkZW50aWZpZXJ9PWluZmVycmVkVHlwZTtpZihpZGVudGlmaWVyIT1udWxsKXJldHVybiBjcmVhdGVTdW1tYXJ5VmFsdWUoZ2V0UHJldHR5SWRlbnRpZmllcihpbmZlcnJlZFR5cGUpLGdlbmVyYXRlQ29kZShhc3QpKTtsZXQgcHJldHR5Q2FwdGlvbj1nZW5lcmF0ZUNvZGUoYXN0LCEwKTtyZXR1cm4gaXNUb29Mb25nRm9yRGVmYXVsdFZhbHVlU3VtbWFyeShwcmV0dHlDYXB0aW9uKT9jcmVhdGVTdW1tYXJ5VmFsdWUoRlVOQ1RJT05fQ0FQVElPTixnZW5lcmF0ZUNvZGUoYXN0KSk6Y3JlYXRlU3VtbWFyeVZhbHVlKHByZXR0eUNhcHRpb24pfWZ1bmN0aW9uIGdlbmVyYXRlRWxlbWVudChkZWZhdWx0VmFsdWUsaW5zcGVjdGlvblJlc3VsdCl7bGV0e2luZmVycmVkVHlwZX09aW5zcGVjdGlvblJlc3VsdCx7aWRlbnRpZmllcn09aW5mZXJyZWRUeXBlO2lmKGlkZW50aWZpZXIhPW51bGwmJiFpc0h0bWxUYWcoaWRlbnRpZmllcikpe2xldCBwcmV0dHlJZGVudGlmaWVyPWdldFByZXR0eUlkZW50aWZpZXIoaW5mZXJyZWRUeXBlKTtyZXR1cm4gY3JlYXRlU3VtbWFyeVZhbHVlKHByZXR0eUlkZW50aWZpZXIsZGVmYXVsdFZhbHVlKX1yZXR1cm4gaXNUb29Mb25nRm9yRGVmYXVsdFZhbHVlU3VtbWFyeShkZWZhdWx0VmFsdWUpP2NyZWF0ZVN1bW1hcnlWYWx1ZShFTEVNRU5UX0NBUFRJT04sZGVmYXVsdFZhbHVlKTpjcmVhdGVTdW1tYXJ5VmFsdWUoZGVmYXVsdFZhbHVlKX1mdW5jdGlvbiBjcmVhdGVEZWZhdWx0VmFsdWUoZGVmYXVsdFZhbHVlKXt0cnl7bGV0IGluc3BlY3Rpb25SZXN1bHQ9aW5zcGVjdFZhbHVlKGRlZmF1bHRWYWx1ZSk7c3dpdGNoKGluc3BlY3Rpb25SZXN1bHQuaW5mZXJyZWRUeXBlLnR5cGUpe2Nhc2VcIk9iamVjdFwiOnJldHVybiBnZW5lcmF0ZU9iamVjdChpbnNwZWN0aW9uUmVzdWx0KTtjYXNlXCJGdW5jdGlvblwiOnJldHVybiBnZW5lcmF0ZUZ1bmMoaW5zcGVjdGlvblJlc3VsdCk7Y2FzZVwiRWxlbWVudFwiOnJldHVybiBnZW5lcmF0ZUVsZW1lbnQoZGVmYXVsdFZhbHVlLGluc3BlY3Rpb25SZXN1bHQpO2Nhc2VcIkFycmF5XCI6cmV0dXJuIGdlbmVyYXRlQXJyYXkoaW5zcGVjdGlvblJlc3VsdCk7ZGVmYXVsdDpyZXR1cm4gbnVsbH19Y2F0Y2goZSl7Y29uc29sZS5lcnJvcihlKTt9cmV0dXJuIG51bGx9ZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSl7cmV0dXJuIHR5cGVvZiB2YWx1ZT09XCJmdW5jdGlvblwifWZ1bmN0aW9uIGlzU3RyaW5nKHZhbHVlKXtyZXR1cm4gdHlwZW9mIHZhbHVlPT1cInN0cmluZ1wifHx2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZ31mdW5jdGlvbiBpc1BsYWluT2JqZWN0KG9iamVjdCl7aWYodHlwZW9mIG9iamVjdCE9XCJvYmplY3RcInx8b2JqZWN0PT1udWxsKXJldHVybiAhMTtpZihPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KT09PW51bGwpcmV0dXJuICEwO2lmKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmplY3QpIT09XCJbb2JqZWN0IE9iamVjdF1cIil7bGV0IHRhZz1vYmplY3RbU3ltYm9sLnRvU3RyaW5nVGFnXTtyZXR1cm4gdGFnPT1udWxsfHwhT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsU3ltYm9sLnRvU3RyaW5nVGFnKT8ud3JpdGFibGU/ITE6b2JqZWN0LnRvU3RyaW5nKCk9PT1gW29iamVjdCAke3RhZ31dYH1sZXQgcHJvdG89b2JqZWN0O2Zvcig7T2JqZWN0LmdldFByb3RvdHlwZU9mKHByb3RvKSE9PW51bGw7KXByb3RvPU9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7cmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpPT09cHJvdG99ZnVuY3Rpb24gaXNPYmplY3Qobyl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKT09PVwiW29iamVjdCBPYmplY3RdXCJ9ZnVuY3Rpb24gaXNQbGFpbk9iamVjdDIobyl7dmFyIGN0b3IscHJvdDtyZXR1cm4gaXNPYmplY3Qobyk9PT0hMT8hMTooY3Rvcj1vLmNvbnN0cnVjdG9yLGN0b3I9PT12b2lkIDA/ITA6KHByb3Q9Y3Rvci5wcm90b3R5cGUsIShpc09iamVjdChwcm90KT09PSExfHxwcm90Lmhhc093blByb3BlcnR5KFwiaXNQcm90b3R5cGVPZlwiKT09PSExKSkpfXZhciBpbXBvcnRfcHJldHR5X3ByaW50X29iamVjdD1fX3RvRVNNKHJlcXVpcmVfZGlzdCgpKSxpbXBvcnRfcmVhY3RfaXM9X190b0VTTShyZXF1aXJlX3JlYWN0X2lzMigpKTt2YXIgc3BhY2VyPWZ1bmN0aW9uKHRpbWVzLHRhYlN0b3Ape3JldHVybiB0aW1lcz09PTA/XCJcIjpuZXcgQXJyYXkodGltZXMqdGFiU3RvcCkuZmlsbChcIiBcIikuam9pbihcIlwiKX07ZnVuY3Rpb24gX3R5cGVvZihvYmope1wiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtyZXR1cm4gX3R5cGVvZj10eXBlb2YgU3ltYm9sPT1cImZ1bmN0aW9uXCImJnR5cGVvZiBTeW1ib2wuaXRlcmF0b3I9PVwic3ltYm9sXCI/ZnVuY3Rpb24ob2JqMil7cmV0dXJuIHR5cGVvZiBvYmoyfTpmdW5jdGlvbihvYmoyKXtyZXR1cm4gb2JqMiYmdHlwZW9mIFN5bWJvbD09XCJmdW5jdGlvblwiJiZvYmoyLmNvbnN0cnVjdG9yPT09U3ltYm9sJiZvYmoyIT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiBvYmoyfSxfdHlwZW9mKG9iail9ZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycil7cmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpfHxfaXRlcmFibGVUb0FycmF5KGFycil8fF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIpfHxfbm9uSXRlcmFibGVTcHJlYWQoKX1mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKXtpZihBcnJheS5pc0FycmF5KGFycikpcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycil9ZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKXtpZih0eXBlb2YgU3ltYm9sPFwidVwiJiZpdGVyW1N5bWJvbC5pdGVyYXRvcl0hPW51bGx8fGl0ZXJbXCJAQGl0ZXJhdG9yXCJdIT1udWxsKXJldHVybiBBcnJheS5mcm9tKGl0ZXIpfWZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLG1pbkxlbil7aWYobyl7aWYodHlwZW9mIG89PVwic3RyaW5nXCIpcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sbWluTGVuKTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwtMSk7aWYobj09PVwiT2JqZWN0XCImJm8uY29uc3RydWN0b3ImJihuPW8uY29uc3RydWN0b3IubmFtZSksbj09PVwiTWFwXCJ8fG49PT1cIlNldFwiKXJldHVybiBBcnJheS5mcm9tKG8pO2lmKG49PT1cIkFyZ3VtZW50c1wifHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSlyZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobyxtaW5MZW4pfX1mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsbGVuKXsobGVuPT1udWxsfHxsZW4+YXJyLmxlbmd0aCkmJihsZW49YXJyLmxlbmd0aCk7Zm9yKHZhciBpPTAsYXJyMj1uZXcgQXJyYXkobGVuKTtpPGxlbjtpKyspYXJyMltpXT1hcnJbaV07cmV0dXJuIGFycjJ9ZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihgSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuYCl9ZnVuY3Rpb24gc2FmZVNvcnRPYmplY3QodmFsdWUsc2Vlbil7cmV0dXJuIHZhbHVlPT09bnVsbHx8X3R5cGVvZih2YWx1ZSkhPT1cIm9iamVjdFwifHx2YWx1ZSBpbnN0YW5jZW9mIERhdGV8fHZhbHVlIGluc3RhbmNlb2YgUmVnRXhwfHxSZWFjdDIuaXNWYWxpZEVsZW1lbnQodmFsdWUpP3ZhbHVlOihzZWVuLmFkZCh2YWx1ZSksQXJyYXkuaXNBcnJheSh2YWx1ZSk/dmFsdWUubWFwKGZ1bmN0aW9uKHYpe3JldHVybiBzYWZlU29ydE9iamVjdCh2LHNlZW4pfSk6T2JqZWN0LmtleXModmFsdWUpLnNvcnQoKS5yZWR1Y2UoZnVuY3Rpb24ocmVzdWx0LGtleSl7cmV0dXJuIGtleT09PVwiX293bmVyXCJ8fChrZXk9PT1cImN1cnJlbnRcInx8c2Vlbi5oYXModmFsdWVba2V5XSk/cmVzdWx0W2tleV09XCJbQ2lyY3VsYXJdXCI6cmVzdWx0W2tleV09c2FmZVNvcnRPYmplY3QodmFsdWVba2V5XSxzZWVuKSkscmVzdWx0fSx7fSkpfWZ1bmN0aW9uIHNvcnRPYmplY3QodmFsdWUpe3JldHVybiBzYWZlU29ydE9iamVjdCh2YWx1ZSxuZXcgV2Vha1NldCl9dmFyIGNyZWF0ZVN0cmluZ1RyZWVOb2RlPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4ge3R5cGU6XCJzdHJpbmdcIix2YWx1ZX19LGNyZWF0ZU51bWJlclRyZWVOb2RlPWZ1bmN0aW9uKHZhbHVlKXtyZXR1cm4ge3R5cGU6XCJudW1iZXJcIix2YWx1ZX19LGNyZWF0ZVJlYWN0RWxlbWVudFRyZWVOb2RlPWZ1bmN0aW9uKGRpc3BsYXlOYW1lLHByb3BzLGRlZmF1bHRQcm9wcyxjaGlsZHJlbnMpe3JldHVybiB7dHlwZTpcIlJlYWN0RWxlbWVudFwiLGRpc3BsYXlOYW1lLHByb3BzLGRlZmF1bHRQcm9wcyxjaGlsZHJlbnN9fSxjcmVhdGVSZWFjdEZyYWdtZW50VHJlZU5vZGU9ZnVuY3Rpb24oa2V5LGNoaWxkcmVucyl7cmV0dXJuIHt0eXBlOlwiUmVhY3RGcmFnbWVudFwiLGtleSxjaGlsZHJlbnN9fSxzdXBwb3J0RnJhZ21lbnQ9ISFGcmFnbWVudCxnZXRGdW5jdGlvblR5cGVOYW1lPWZ1bmN0aW9uKGZ1bmN0aW9uVHlwZSl7cmV0dXJuICFmdW5jdGlvblR5cGUubmFtZXx8ZnVuY3Rpb25UeXBlLm5hbWU9PT1cIl9kZWZhdWx0XCI/XCJObyBEaXNwbGF5IE5hbWVcIjpmdW5jdGlvblR5cGUubmFtZX0sZ2V0V3JhcHBlZENvbXBvbmVudERpc3BsYXlOYW1lPWZ1bmN0aW9uIGdldFdyYXBwZWRDb21wb25lbnREaXNwbGF5TmFtZTIoQ29tcG9uZW50KXtzd2l0Y2goITApe2Nhc2UhIUNvbXBvbmVudC5kaXNwbGF5TmFtZTpyZXR1cm4gQ29tcG9uZW50LmRpc3BsYXlOYW1lO2Nhc2UgQ29tcG9uZW50LiQkdHlwZW9mPT09aW1wb3J0X3JlYWN0X2lzLk1lbW86cmV0dXJuIGdldFdyYXBwZWRDb21wb25lbnREaXNwbGF5TmFtZTIoQ29tcG9uZW50LnR5cGUpO2Nhc2UgQ29tcG9uZW50LiQkdHlwZW9mPT09aW1wb3J0X3JlYWN0X2lzLkZvcndhcmRSZWY6cmV0dXJuIGdldFdyYXBwZWRDb21wb25lbnREaXNwbGF5TmFtZTIoQ29tcG9uZW50LnJlbmRlcik7ZGVmYXVsdDpyZXR1cm4gZ2V0RnVuY3Rpb25UeXBlTmFtZShDb21wb25lbnQpfX0sZ2V0UmVhY3RFbGVtZW50RGlzcGxheU5hbWU9ZnVuY3Rpb24oZWxlbWVudCl7c3dpdGNoKCEwKXtjYXNlIHR5cGVvZiBlbGVtZW50LnR5cGU9PVwic3RyaW5nXCI6cmV0dXJuIGVsZW1lbnQudHlwZTtjYXNlIHR5cGVvZiBlbGVtZW50LnR5cGU9PVwiZnVuY3Rpb25cIjpyZXR1cm4gZWxlbWVudC50eXBlLmRpc3BsYXlOYW1lP2VsZW1lbnQudHlwZS5kaXNwbGF5TmFtZTpnZXRGdW5jdGlvblR5cGVOYW1lKGVsZW1lbnQudHlwZSk7Y2FzZSgwLCBpbXBvcnRfcmVhY3RfaXMuaXNGb3J3YXJkUmVmKShlbGVtZW50KTpjYXNlKDAsIGltcG9ydF9yZWFjdF9pcy5pc01lbW8pKGVsZW1lbnQpOnJldHVybiBnZXRXcmFwcGVkQ29tcG9uZW50RGlzcGxheU5hbWUoZWxlbWVudC50eXBlKTtjYXNlKDAsIGltcG9ydF9yZWFjdF9pcy5pc0NvbnRleHRDb25zdW1lcikoZWxlbWVudCk6cmV0dXJuIFwiXCIuY29uY2F0KGVsZW1lbnQudHlwZS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIsXCIuQ29uc3VtZXJcIik7Y2FzZSgwLCBpbXBvcnRfcmVhY3RfaXMuaXNDb250ZXh0UHJvdmlkZXIpKGVsZW1lbnQpOnJldHVybiBcIlwiLmNvbmNhdChlbGVtZW50LnR5cGUuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiLFwiLlByb3ZpZGVyXCIpO2Nhc2UoMCwgaW1wb3J0X3JlYWN0X2lzLmlzTGF6eSkoZWxlbWVudCk6cmV0dXJuIFwiTGF6eVwiO2Nhc2UoMCwgaW1wb3J0X3JlYWN0X2lzLmlzUHJvZmlsZXIpKGVsZW1lbnQpOnJldHVybiBcIlByb2ZpbGVyXCI7Y2FzZSgwLCBpbXBvcnRfcmVhY3RfaXMuaXNTdHJpY3RNb2RlKShlbGVtZW50KTpyZXR1cm4gXCJTdHJpY3RNb2RlXCI7Y2FzZSgwLCBpbXBvcnRfcmVhY3RfaXMuaXNTdXNwZW5zZSkoZWxlbWVudCk6cmV0dXJuIFwiU3VzcGVuc2VcIjtkZWZhdWx0OnJldHVybiBcIlVua25vd25FbGVtZW50VHlwZVwifX0sbm9DaGlsZHJlbj1mdW5jdGlvbihwcm9wc1ZhbHVlLHByb3BOYW1lKXtyZXR1cm4gcHJvcE5hbWUhPT1cImNoaWxkcmVuXCJ9LG9ubHlNZWFuaW5nZnVsQ2hpbGRyZW49ZnVuY3Rpb24oY2hpbGRyZW4pe3JldHVybiBjaGlsZHJlbiE9PSEwJiZjaGlsZHJlbiE9PSExJiZjaGlsZHJlbiE9PW51bGwmJmNoaWxkcmVuIT09XCJcIn0sZmlsdGVyUHJvcHM9ZnVuY3Rpb24ob3JpZ2luYWxQcm9wcyxjYil7dmFyIGZpbHRlcmVkUHJvcHM9e307cmV0dXJuIE9iamVjdC5rZXlzKG9yaWdpbmFsUHJvcHMpLmZpbHRlcihmdW5jdGlvbihrZXkpe3JldHVybiBjYihvcmlnaW5hbFByb3BzW2tleV0sa2V5KX0pLmZvckVhY2goZnVuY3Rpb24oa2V5KXtyZXR1cm4gZmlsdGVyZWRQcm9wc1trZXldPW9yaWdpbmFsUHJvcHNba2V5XX0pLGZpbHRlcmVkUHJvcHN9LHBhcnNlUmVhY3RFbGVtZW50PWZ1bmN0aW9uIHBhcnNlUmVhY3RFbGVtZW50MihlbGVtZW50LG9wdGlvbnMpe3ZhciBfb3B0aW9ucyRkaXNwbGF5TmFtZT1vcHRpb25zLmRpc3BsYXlOYW1lLGRpc3BsYXlOYW1lRm49X29wdGlvbnMkZGlzcGxheU5hbWU9PT12b2lkIDA/Z2V0UmVhY3RFbGVtZW50RGlzcGxheU5hbWU6X29wdGlvbnMkZGlzcGxheU5hbWU7aWYodHlwZW9mIGVsZW1lbnQ9PVwic3RyaW5nXCIpcmV0dXJuIGNyZWF0ZVN0cmluZ1RyZWVOb2RlKGVsZW1lbnQpO2lmKHR5cGVvZiBlbGVtZW50PT1cIm51bWJlclwiKXJldHVybiBjcmVhdGVOdW1iZXJUcmVlTm9kZShlbGVtZW50KTtpZighUmVhY3QyX19kZWZhdWx0LmlzVmFsaWRFbGVtZW50KGVsZW1lbnQpKXRocm93IG5ldyBFcnJvcihcInJlYWN0LWVsZW1lbnQtdG8tanN4LXN0cmluZzogRXhwZWN0ZWQgYSBSZWFjdC5FbGVtZW50LCBnb3QgYFwiLmNvbmNhdChfdHlwZW9mKGVsZW1lbnQpLFwiYFwiKSk7dmFyIGRpc3BsYXlOYW1lPWRpc3BsYXlOYW1lRm4oZWxlbWVudCkscHJvcHM9ZmlsdGVyUHJvcHMoZWxlbWVudC5wcm9wcyxub0NoaWxkcmVuKTtlbGVtZW50LnJlZiE9PW51bGwmJihwcm9wcy5yZWY9ZWxlbWVudC5yZWYpO3ZhciBrZXk9ZWxlbWVudC5rZXk7dHlwZW9mIGtleT09XCJzdHJpbmdcIiYma2V5LnNlYXJjaCgvXlxcLi8pJiYocHJvcHMua2V5PWtleSk7dmFyIGRlZmF1bHRQcm9wcz1maWx0ZXJQcm9wcyhlbGVtZW50LnR5cGUuZGVmYXVsdFByb3BzfHx7fSxub0NoaWxkcmVuKSxjaGlsZHJlbnM9UmVhY3QyX19kZWZhdWx0LkNoaWxkcmVuLnRvQXJyYXkoZWxlbWVudC5wcm9wcy5jaGlsZHJlbikuZmlsdGVyKG9ubHlNZWFuaW5nZnVsQ2hpbGRyZW4pLm1hcChmdW5jdGlvbihjaGlsZCl7cmV0dXJuIHBhcnNlUmVhY3RFbGVtZW50MihjaGlsZCxvcHRpb25zKX0pO3JldHVybiBzdXBwb3J0RnJhZ21lbnQmJmVsZW1lbnQudHlwZT09PUZyYWdtZW50P2NyZWF0ZVJlYWN0RnJhZ21lbnRUcmVlTm9kZShrZXksY2hpbGRyZW5zKTpjcmVhdGVSZWFjdEVsZW1lbnRUcmVlTm9kZShkaXNwbGF5TmFtZSxwcm9wcyxkZWZhdWx0UHJvcHMsY2hpbGRyZW5zKX07ZnVuY3Rpb24gbm9SZWZDaGVjaygpe312YXIgaW5saW5lRnVuY3Rpb249ZnVuY3Rpb24oZm4pe3JldHVybiBmbi50b1N0cmluZygpLnNwbGl0KGBcbmApLm1hcChmdW5jdGlvbihsaW5lKXtyZXR1cm4gbGluZS50cmltKCl9KS5qb2luKFwiXCIpfTt2YXIgZGVmYXVsdEZ1bmN0aW9uVmFsdWU9aW5saW5lRnVuY3Rpb24sZm9ybWF0RnVuY3Rpb249ZnVuY3Rpb24oZm4sb3B0aW9ucyl7dmFyIF9vcHRpb25zJGZ1bmN0aW9uVmFsdT1vcHRpb25zLmZ1bmN0aW9uVmFsdWUsZnVuY3Rpb25WYWx1ZT1fb3B0aW9ucyRmdW5jdGlvblZhbHU9PT12b2lkIDA/ZGVmYXVsdEZ1bmN0aW9uVmFsdWU6X29wdGlvbnMkZnVuY3Rpb25WYWx1LHNob3dGdW5jdGlvbnM9b3B0aW9ucy5zaG93RnVuY3Rpb25zO3JldHVybiBmdW5jdGlvblZhbHVlKCFzaG93RnVuY3Rpb25zJiZmdW5jdGlvblZhbHVlPT09ZGVmYXVsdEZ1bmN0aW9uVmFsdWU/bm9SZWZDaGVjazpmbil9LGZvcm1hdENvbXBsZXhEYXRhU3RydWN0dXJlPWZ1bmN0aW9uKHZhbHVlLGlubGluZSxsdmwsb3B0aW9ucyl7dmFyIG5vcm1hbGl6ZWRWYWx1ZT1zb3J0T2JqZWN0KHZhbHVlKSxzdHJpbmdpZmllZFZhbHVlPSgwLCBpbXBvcnRfcHJldHR5X3ByaW50X29iamVjdC5wcmV0dHlQcmludCkobm9ybWFsaXplZFZhbHVlLHt0cmFuc2Zvcm06ZnVuY3Rpb24oY3VycmVudE9iaixwcm9wLG9yaWdpbmFsUmVzdWx0KXt2YXIgY3VycmVudFZhbHVlPWN1cnJlbnRPYmpbcHJvcF07cmV0dXJuIGN1cnJlbnRWYWx1ZSYmaXNWYWxpZEVsZW1lbnQoY3VycmVudFZhbHVlKT9mb3JtYXRUcmVlTm9kZShwYXJzZVJlYWN0RWxlbWVudChjdXJyZW50VmFsdWUsb3B0aW9ucyksITAsbHZsLG9wdGlvbnMpOnR5cGVvZiBjdXJyZW50VmFsdWU9PVwiZnVuY3Rpb25cIj9mb3JtYXRGdW5jdGlvbihjdXJyZW50VmFsdWUsb3B0aW9ucyk6b3JpZ2luYWxSZXN1bHR9fSk7cmV0dXJuIGlubGluZT9zdHJpbmdpZmllZFZhbHVlLnJlcGxhY2UoL1xccysvZyxcIiBcIikucmVwbGFjZSgveyAvZyxcIntcIikucmVwbGFjZSgvIH0vZyxcIn1cIikucmVwbGFjZSgvXFxbIC9nLFwiW1wiKS5yZXBsYWNlKC8gXS9nLFwiXVwiKTpzdHJpbmdpZmllZFZhbHVlLnJlcGxhY2UoL1xcdC9nLHNwYWNlcigxLG9wdGlvbnMudGFiU3RvcCkpLnJlcGxhY2UoL1xcbihbXiRdKS9nLGBcbmAuY29uY2F0KHNwYWNlcihsdmwrMSxvcHRpb25zLnRhYlN0b3ApLFwiJDFcIikpfSxlc2NhcGUkMT1mdW5jdGlvbihzKXtyZXR1cm4gcy5yZXBsYWNlKC9cIi9nLFwiJnF1b3Q7XCIpfSxmb3JtYXRQcm9wVmFsdWU9ZnVuY3Rpb24ocHJvcFZhbHVlLGlubGluZSxsdmwsb3B0aW9ucyl7aWYodHlwZW9mIHByb3BWYWx1ZT09XCJudW1iZXJcIilyZXR1cm4gXCJ7XCIuY29uY2F0KFN0cmluZyhwcm9wVmFsdWUpLFwifVwiKTtpZih0eXBlb2YgcHJvcFZhbHVlPT1cInN0cmluZ1wiKXJldHVybiAnXCInLmNvbmNhdChlc2NhcGUkMShwcm9wVmFsdWUpLCdcIicpO2lmKF90eXBlb2YocHJvcFZhbHVlKT09PVwic3ltYm9sXCIpe3ZhciBzeW1ib2xEZXNjcmlwdGlvbj1wcm9wVmFsdWUudmFsdWVPZigpLnRvU3RyaW5nKCkucmVwbGFjZSgvU3ltYm9sXFwoKC4qKVxcKS8sXCIkMVwiKTtyZXR1cm4gc3ltYm9sRGVzY3JpcHRpb24/XCJ7U3ltYm9sKCdcIi5jb25jYXQoc3ltYm9sRGVzY3JpcHRpb24sXCInKX1cIik6XCJ7U3ltYm9sKCl9XCJ9cmV0dXJuIHR5cGVvZiBwcm9wVmFsdWU9PVwiZnVuY3Rpb25cIj9cIntcIi5jb25jYXQoZm9ybWF0RnVuY3Rpb24ocHJvcFZhbHVlLG9wdGlvbnMpLFwifVwiKTppc1ZhbGlkRWxlbWVudChwcm9wVmFsdWUpP1wie1wiLmNvbmNhdChmb3JtYXRUcmVlTm9kZShwYXJzZVJlYWN0RWxlbWVudChwcm9wVmFsdWUsb3B0aW9ucyksITAsbHZsLG9wdGlvbnMpLFwifVwiKTpwcm9wVmFsdWUgaW5zdGFuY2VvZiBEYXRlP2lzTmFOKHByb3BWYWx1ZS52YWx1ZU9mKCkpP1wie25ldyBEYXRlKE5hTil9XCI6J3tuZXcgRGF0ZShcIicuY29uY2F0KHByb3BWYWx1ZS50b0lTT1N0cmluZygpLCdcIil9Jyk6aXNQbGFpbk9iamVjdDIocHJvcFZhbHVlKXx8QXJyYXkuaXNBcnJheShwcm9wVmFsdWUpP1wie1wiLmNvbmNhdChmb3JtYXRDb21wbGV4RGF0YVN0cnVjdHVyZShwcm9wVmFsdWUsaW5saW5lLGx2bCxvcHRpb25zKSxcIn1cIik6XCJ7XCIuY29uY2F0KFN0cmluZyhwcm9wVmFsdWUpLFwifVwiKX0sZm9ybWF0UHJvcD1mdW5jdGlvbihuYW1lLGhhc1ZhbHVlLHZhbHVlLGhhc0RlZmF1bHRWYWx1ZSxkZWZhdWx0VmFsdWUsaW5saW5lLGx2bCxvcHRpb25zKXtpZighaGFzVmFsdWUmJiFoYXNEZWZhdWx0VmFsdWUpdGhyb3cgbmV3IEVycm9yKCdUaGUgcHJvcCBcIicuY29uY2F0KG5hbWUsJ1wiIGhhcyBubyB2YWx1ZSBhbmQgbm8gZGVmYXVsdDogY291bGQgbm90IGJlIGZvcm1hdHRlZCcpKTt2YXIgdXNlZFZhbHVlPWhhc1ZhbHVlP3ZhbHVlOmRlZmF1bHRWYWx1ZSx1c2VCb29sZWFuU2hvcnRoYW5kU3ludGF4PW9wdGlvbnMudXNlQm9vbGVhblNob3J0aGFuZFN5bnRheCx0YWJTdG9wPW9wdGlvbnMudGFiU3RvcCxmb3JtYXR0ZWRQcm9wVmFsdWU9Zm9ybWF0UHJvcFZhbHVlKHVzZWRWYWx1ZSxpbmxpbmUsbHZsLG9wdGlvbnMpLGF0dHJpYnV0ZUZvcm1hdHRlZElubGluZT1cIiBcIixhdHRyaWJ1dGVGb3JtYXR0ZWRNdWx0aWxpbmU9YFxuYC5jb25jYXQoc3BhY2VyKGx2bCsxLHRhYlN0b3ApKSxpc011bHRpbGluZUF0dHJpYnV0ZT1mb3JtYXR0ZWRQcm9wVmFsdWUuaW5jbHVkZXMoYFxuYCk7cmV0dXJuIHVzZUJvb2xlYW5TaG9ydGhhbmRTeW50YXgmJmZvcm1hdHRlZFByb3BWYWx1ZT09PVwie2ZhbHNlfVwiJiYhaGFzRGVmYXVsdFZhbHVlPyhhdHRyaWJ1dGVGb3JtYXR0ZWRJbmxpbmU9XCJcIixhdHRyaWJ1dGVGb3JtYXR0ZWRNdWx0aWxpbmU9XCJcIik6dXNlQm9vbGVhblNob3J0aGFuZFN5bnRheCYmZm9ybWF0dGVkUHJvcFZhbHVlPT09XCJ7dHJ1ZX1cIj8oYXR0cmlidXRlRm9ybWF0dGVkSW5saW5lKz1cIlwiLmNvbmNhdChuYW1lKSxhdHRyaWJ1dGVGb3JtYXR0ZWRNdWx0aWxpbmUrPVwiXCIuY29uY2F0KG5hbWUpKTooYXR0cmlidXRlRm9ybWF0dGVkSW5saW5lKz1cIlwiLmNvbmNhdChuYW1lLFwiPVwiKS5jb25jYXQoZm9ybWF0dGVkUHJvcFZhbHVlKSxhdHRyaWJ1dGVGb3JtYXR0ZWRNdWx0aWxpbmUrPVwiXCIuY29uY2F0KG5hbWUsXCI9XCIpLmNvbmNhdChmb3JtYXR0ZWRQcm9wVmFsdWUpKSx7YXR0cmlidXRlRm9ybWF0dGVkSW5saW5lLGF0dHJpYnV0ZUZvcm1hdHRlZE11bHRpbGluZSxpc011bHRpbGluZUF0dHJpYnV0ZX19LG1lcmdlU2libGluZ1BsYWluU3RyaW5nQ2hpbGRyZW5SZWR1Y2VyPWZ1bmN0aW9uKHByZXZpb3VzTm9kZXMsY3VycmVudE5vZGUpe3ZhciBub2Rlcz1wcmV2aW91c05vZGVzLnNsaWNlKDAscHJldmlvdXNOb2Rlcy5sZW5ndGg+MD9wcmV2aW91c05vZGVzLmxlbmd0aC0xOjApLHByZXZpb3VzTm9kZT1wcmV2aW91c05vZGVzW3ByZXZpb3VzTm9kZXMubGVuZ3RoLTFdO3JldHVybiBwcmV2aW91c05vZGUmJihjdXJyZW50Tm9kZS50eXBlPT09XCJzdHJpbmdcInx8Y3VycmVudE5vZGUudHlwZT09PVwibnVtYmVyXCIpJiYocHJldmlvdXNOb2RlLnR5cGU9PT1cInN0cmluZ1wifHxwcmV2aW91c05vZGUudHlwZT09PVwibnVtYmVyXCIpP25vZGVzLnB1c2goY3JlYXRlU3RyaW5nVHJlZU5vZGUoU3RyaW5nKHByZXZpb3VzTm9kZS52YWx1ZSkrU3RyaW5nKGN1cnJlbnROb2RlLnZhbHVlKSkpOihwcmV2aW91c05vZGUmJm5vZGVzLnB1c2gocHJldmlvdXNOb2RlKSxub2Rlcy5wdXNoKGN1cnJlbnROb2RlKSksbm9kZXN9LGlzS2V5T3JSZWZQcm9wcz1mdW5jdGlvbihwcm9wTmFtZSl7cmV0dXJuIFtcImtleVwiLFwicmVmXCJdLmluY2x1ZGVzKHByb3BOYW1lKX0sc29ydFByb3BzQnlOYW1lcz1mdW5jdGlvbihzaG91bGRTb3J0VXNlclByb3BzKXtyZXR1cm4gZnVuY3Rpb24ocHJvcHMpe3ZhciBoYXZlS2V5UHJvcD1wcm9wcy5pbmNsdWRlcyhcImtleVwiKSxoYXZlUmVmUHJvcD1wcm9wcy5pbmNsdWRlcyhcInJlZlwiKSx1c2VyUHJvcHNPbmx5PXByb3BzLmZpbHRlcihmdW5jdGlvbihvbmVQcm9wKXtyZXR1cm4gIWlzS2V5T3JSZWZQcm9wcyhvbmVQcm9wKX0pLHNvcnRlZFByb3BzPV90b0NvbnN1bWFibGVBcnJheShzaG91bGRTb3J0VXNlclByb3BzP3VzZXJQcm9wc09ubHkuc29ydCgpOnVzZXJQcm9wc09ubHkpO3JldHVybiBoYXZlUmVmUHJvcCYmc29ydGVkUHJvcHMudW5zaGlmdChcInJlZlwiKSxoYXZlS2V5UHJvcCYmc29ydGVkUHJvcHMudW5zaGlmdChcImtleVwiKSxzb3J0ZWRQcm9wc319O2Z1bmN0aW9uIGNyZWF0ZVByb3BGaWx0ZXIocHJvcHMsZmlsdGVyKXtyZXR1cm4gQXJyYXkuaXNBcnJheShmaWx0ZXIpP2Z1bmN0aW9uKGtleSl7cmV0dXJuIGZpbHRlci5pbmRleE9mKGtleSk9PT0tMX06ZnVuY3Rpb24oa2V5KXtyZXR1cm4gZmlsdGVyKHByb3BzW2tleV0sa2V5KX19dmFyIGNvbXBlbnNhdGVNdWx0aWxpbmVTdHJpbmdFbGVtZW50SW5kZW50YXRpb249ZnVuY3Rpb24oZWxlbWVudCxmb3JtYXR0ZWRFbGVtZW50LGlubGluZSxsdmwsb3B0aW9ucyl7dmFyIHRhYlN0b3A9b3B0aW9ucy50YWJTdG9wO3JldHVybiBlbGVtZW50LnR5cGU9PT1cInN0cmluZ1wiP2Zvcm1hdHRlZEVsZW1lbnQuc3BsaXQoYFxuYCkubWFwKGZ1bmN0aW9uKGxpbmUsb2Zmc2V0Mil7cmV0dXJuIG9mZnNldDI9PT0wP2xpbmU6XCJcIi5jb25jYXQoc3BhY2VyKGx2bCx0YWJTdG9wKSkuY29uY2F0KGxpbmUpfSkuam9pbihgXG5gKTpmb3JtYXR0ZWRFbGVtZW50fSxmb3JtYXRPbmVDaGlsZHJlbj1mdW5jdGlvbihpbmxpbmUsbHZsLG9wdGlvbnMpe3JldHVybiBmdW5jdGlvbihlbGVtZW50KXtyZXR1cm4gY29tcGVuc2F0ZU11bHRpbGluZVN0cmluZ0VsZW1lbnRJbmRlbnRhdGlvbihlbGVtZW50LGZvcm1hdFRyZWVOb2RlKGVsZW1lbnQsaW5saW5lLGx2bCxvcHRpb25zKSxpbmxpbmUsbHZsLG9wdGlvbnMpfX0sb25seVByb3BzV2l0aE9yaWdpbmFsVmFsdWU9ZnVuY3Rpb24oZGVmYXVsdFByb3BzLHByb3BzKXtyZXR1cm4gZnVuY3Rpb24ocHJvcE5hbWUpe3ZhciBoYXZlRGVmYXVsdFZhbHVlPU9iamVjdC5rZXlzKGRlZmF1bHRQcm9wcykuaW5jbHVkZXMocHJvcE5hbWUpO3JldHVybiAhaGF2ZURlZmF1bHRWYWx1ZXx8aGF2ZURlZmF1bHRWYWx1ZSYmZGVmYXVsdFByb3BzW3Byb3BOYW1lXSE9PXByb3BzW3Byb3BOYW1lXX19LGlzSW5saW5lQXR0cmlidXRlVG9vTG9uZz1mdW5jdGlvbihhdHRyaWJ1dGVzLGlubGluZUF0dHJpYnV0ZVN0cmluZyxsdmwsdGFiU3RvcCxtYXhJbmxpbmVBdHRyaWJ1dGVzTGluZUxlbmd0aCl7cmV0dXJuIG1heElubGluZUF0dHJpYnV0ZXNMaW5lTGVuZ3RoP3NwYWNlcihsdmwsdGFiU3RvcCkubGVuZ3RoK2lubGluZUF0dHJpYnV0ZVN0cmluZy5sZW5ndGg+bWF4SW5saW5lQXR0cmlidXRlc0xpbmVMZW5ndGg6YXR0cmlidXRlcy5sZW5ndGg+MX0sc2hvdWxkUmVuZGVyTXVsdGlsaW5lQXR0cj1mdW5jdGlvbihhdHRyaWJ1dGVzLGlubGluZUF0dHJpYnV0ZVN0cmluZyxjb250YWluc011bHRpbGluZUF0dHIsaW5saW5lLGx2bCx0YWJTdG9wLG1heElubGluZUF0dHJpYnV0ZXNMaW5lTGVuZ3RoKXtyZXR1cm4gKGlzSW5saW5lQXR0cmlidXRlVG9vTG9uZyhhdHRyaWJ1dGVzLGlubGluZUF0dHJpYnV0ZVN0cmluZyxsdmwsdGFiU3RvcCxtYXhJbmxpbmVBdHRyaWJ1dGVzTGluZUxlbmd0aCl8fGNvbnRhaW5zTXVsdGlsaW5lQXR0cikmJiFpbmxpbmV9LGZvcm1hdFJlYWN0RWxlbWVudE5vZGU9ZnVuY3Rpb24obm9kZSxpbmxpbmUsbHZsLG9wdGlvbnMpe3ZhciB0eXBlPW5vZGUudHlwZSxfbm9kZSRkaXNwbGF5TmFtZT1ub2RlLmRpc3BsYXlOYW1lLGRpc3BsYXlOYW1lPV9ub2RlJGRpc3BsYXlOYW1lPT09dm9pZCAwP1wiXCI6X25vZGUkZGlzcGxheU5hbWUsY2hpbGRyZW5zPW5vZGUuY2hpbGRyZW5zLF9ub2RlJHByb3BzPW5vZGUucHJvcHMscHJvcHM9X25vZGUkcHJvcHM9PT12b2lkIDA/e306X25vZGUkcHJvcHMsX25vZGUkZGVmYXVsdFByb3BzPW5vZGUuZGVmYXVsdFByb3BzLGRlZmF1bHRQcm9wcz1fbm9kZSRkZWZhdWx0UHJvcHM9PT12b2lkIDA/e306X25vZGUkZGVmYXVsdFByb3BzO2lmKHR5cGUhPT1cIlJlYWN0RWxlbWVudFwiKXRocm93IG5ldyBFcnJvcignVGhlIFwiZm9ybWF0UmVhY3RFbGVtZW50Tm9kZVwiIGZ1bmN0aW9uIGNvdWxkIG9ubHkgZm9ybWF0IG5vZGUgb2YgdHlwZSBcIlJlYWN0RWxlbWVudFwiLiBHaXZlbjogICcuY29uY2F0KHR5cGUpKTt2YXIgZmlsdGVyUHJvcHMzPW9wdGlvbnMuZmlsdGVyUHJvcHMsbWF4SW5saW5lQXR0cmlidXRlc0xpbmVMZW5ndGg9b3B0aW9ucy5tYXhJbmxpbmVBdHRyaWJ1dGVzTGluZUxlbmd0aCxzaG93RGVmYXVsdFByb3BzPW9wdGlvbnMuc2hvd0RlZmF1bHRQcm9wcyxzb3J0UHJvcHM9b3B0aW9ucy5zb3J0UHJvcHMsdGFiU3RvcD1vcHRpb25zLnRhYlN0b3Asb3V0PVwiPFwiLmNvbmNhdChkaXNwbGF5TmFtZSksb3V0SW5saW5lQXR0cj1vdXQsb3V0TXVsdGlsaW5lQXR0cj1vdXQsY29udGFpbnNNdWx0aWxpbmVBdHRyPSExLHZpc2libGVBdHRyaWJ1dGVOYW1lcz1bXSxwcm9wRmlsdGVyPWNyZWF0ZVByb3BGaWx0ZXIocHJvcHMsZmlsdGVyUHJvcHMzKTtPYmplY3Qua2V5cyhwcm9wcykuZmlsdGVyKHByb3BGaWx0ZXIpLmZpbHRlcihvbmx5UHJvcHNXaXRoT3JpZ2luYWxWYWx1ZShkZWZhdWx0UHJvcHMscHJvcHMpKS5mb3JFYWNoKGZ1bmN0aW9uKHByb3BOYW1lKXtyZXR1cm4gdmlzaWJsZUF0dHJpYnV0ZU5hbWVzLnB1c2gocHJvcE5hbWUpfSksT2JqZWN0LmtleXMoZGVmYXVsdFByb3BzKS5maWx0ZXIocHJvcEZpbHRlcikuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIHNob3dEZWZhdWx0UHJvcHN9KS5maWx0ZXIoZnVuY3Rpb24oZGVmYXVsdFByb3BOYW1lKXtyZXR1cm4gIXZpc2libGVBdHRyaWJ1dGVOYW1lcy5pbmNsdWRlcyhkZWZhdWx0UHJvcE5hbWUpfSkuZm9yRWFjaChmdW5jdGlvbihkZWZhdWx0UHJvcE5hbWUpe3JldHVybiB2aXNpYmxlQXR0cmlidXRlTmFtZXMucHVzaChkZWZhdWx0UHJvcE5hbWUpfSk7dmFyIGF0dHJpYnV0ZXM9c29ydFByb3BzQnlOYW1lcyhzb3J0UHJvcHMpKHZpc2libGVBdHRyaWJ1dGVOYW1lcyk7aWYoYXR0cmlidXRlcy5mb3JFYWNoKGZ1bmN0aW9uKGF0dHJpYnV0ZU5hbWUpe3ZhciBfZm9ybWF0UHJvcD1mb3JtYXRQcm9wKGF0dHJpYnV0ZU5hbWUsT2JqZWN0LmtleXMocHJvcHMpLmluY2x1ZGVzKGF0dHJpYnV0ZU5hbWUpLHByb3BzW2F0dHJpYnV0ZU5hbWVdLE9iamVjdC5rZXlzKGRlZmF1bHRQcm9wcykuaW5jbHVkZXMoYXR0cmlidXRlTmFtZSksZGVmYXVsdFByb3BzW2F0dHJpYnV0ZU5hbWVdLGlubGluZSxsdmwsb3B0aW9ucyksYXR0cmlidXRlRm9ybWF0dGVkSW5saW5lPV9mb3JtYXRQcm9wLmF0dHJpYnV0ZUZvcm1hdHRlZElubGluZSxhdHRyaWJ1dGVGb3JtYXR0ZWRNdWx0aWxpbmU9X2Zvcm1hdFByb3AuYXR0cmlidXRlRm9ybWF0dGVkTXVsdGlsaW5lLGlzTXVsdGlsaW5lQXR0cmlidXRlPV9mb3JtYXRQcm9wLmlzTXVsdGlsaW5lQXR0cmlidXRlO2lzTXVsdGlsaW5lQXR0cmlidXRlJiYoY29udGFpbnNNdWx0aWxpbmVBdHRyPSEwKSxvdXRJbmxpbmVBdHRyKz1hdHRyaWJ1dGVGb3JtYXR0ZWRJbmxpbmUsb3V0TXVsdGlsaW5lQXR0cis9YXR0cmlidXRlRm9ybWF0dGVkTXVsdGlsaW5lO30pLG91dE11bHRpbGluZUF0dHIrPWBcbmAuY29uY2F0KHNwYWNlcihsdmwsdGFiU3RvcCkpLHNob3VsZFJlbmRlck11bHRpbGluZUF0dHIoYXR0cmlidXRlcyxvdXRJbmxpbmVBdHRyLGNvbnRhaW5zTXVsdGlsaW5lQXR0cixpbmxpbmUsbHZsLHRhYlN0b3AsbWF4SW5saW5lQXR0cmlidXRlc0xpbmVMZW5ndGgpP291dD1vdXRNdWx0aWxpbmVBdHRyOm91dD1vdXRJbmxpbmVBdHRyLGNoaWxkcmVucyYmY2hpbGRyZW5zLmxlbmd0aD4wKXt2YXIgbmV3THZsPWx2bCsxO291dCs9XCI+XCIsaW5saW5lfHwob3V0Kz1gXG5gLG91dCs9c3BhY2VyKG5ld0x2bCx0YWJTdG9wKSksb3V0Kz1jaGlsZHJlbnMucmVkdWNlKG1lcmdlU2libGluZ1BsYWluU3RyaW5nQ2hpbGRyZW5SZWR1Y2VyLFtdKS5tYXAoZm9ybWF0T25lQ2hpbGRyZW4oaW5saW5lLG5ld0x2bCxvcHRpb25zKSkuam9pbihpbmxpbmU/XCJcIjpgXG5gLmNvbmNhdChzcGFjZXIobmV3THZsLHRhYlN0b3ApKSksaW5saW5lfHwob3V0Kz1gXG5gLG91dCs9c3BhY2VyKG5ld0x2bC0xLHRhYlN0b3ApKSxvdXQrPVwiPC9cIi5jb25jYXQoZGlzcGxheU5hbWUsXCI+XCIpO31lbHNlIGlzSW5saW5lQXR0cmlidXRlVG9vTG9uZyhhdHRyaWJ1dGVzLG91dElubGluZUF0dHIsbHZsLHRhYlN0b3AsbWF4SW5saW5lQXR0cmlidXRlc0xpbmVMZW5ndGgpfHwob3V0Kz1cIiBcIiksb3V0Kz1cIi8+XCI7cmV0dXJuIG91dH0sUkVBQ1RfRlJBR01FTlRfVEFHX05BTUVfU0hPUlRfU1lOVEFYPVwiXCIsUkVBQ1RfRlJBR01FTlRfVEFHX05BTUVfRVhQTElDSVRfU1lOVEFYPVwiUmVhY3QuRnJhZ21lbnRcIix0b1JlYWN0RWxlbWVudFRyZWVOb2RlPWZ1bmN0aW9uKGRpc3BsYXlOYW1lLGtleSxjaGlsZHJlbnMpe3ZhciBwcm9wcz17fTtyZXR1cm4ga2V5JiYocHJvcHM9e2tleX0pLHt0eXBlOlwiUmVhY3RFbGVtZW50XCIsZGlzcGxheU5hbWUscHJvcHMsZGVmYXVsdFByb3BzOnt9LGNoaWxkcmVuc319LGlzS2V5ZWRGcmFnbWVudD1mdW5jdGlvbihfcmVmKXt2YXIga2V5PV9yZWYua2V5O3JldHVybiAhIWtleX0saGFzTm9DaGlsZHJlbj1mdW5jdGlvbihfcmVmMil7dmFyIGNoaWxkcmVucz1fcmVmMi5jaGlsZHJlbnM7cmV0dXJuIGNoaWxkcmVucy5sZW5ndGg9PT0wfSxmb3JtYXRSZWFjdEZyYWdtZW50Tm9kZT1mdW5jdGlvbihub2RlLGlubGluZSxsdmwsb3B0aW9ucyl7dmFyIHR5cGU9bm9kZS50eXBlLGtleT1ub2RlLmtleSxjaGlsZHJlbnM9bm9kZS5jaGlsZHJlbnM7aWYodHlwZSE9PVwiUmVhY3RGcmFnbWVudFwiKXRocm93IG5ldyBFcnJvcignVGhlIFwiZm9ybWF0UmVhY3RGcmFnbWVudE5vZGVcIiBmdW5jdGlvbiBjb3VsZCBvbmx5IGZvcm1hdCBub2RlIG9mIHR5cGUgXCJSZWFjdEZyYWdtZW50XCIuIEdpdmVuOiAnLmNvbmNhdCh0eXBlKSk7dmFyIHVzZUZyYWdtZW50U2hvcnRTeW50YXg9b3B0aW9ucy51c2VGcmFnbWVudFNob3J0U3ludGF4LGRpc3BsYXlOYW1lO3JldHVybiB1c2VGcmFnbWVudFNob3J0U3ludGF4P2hhc05vQ2hpbGRyZW4obm9kZSl8fGlzS2V5ZWRGcmFnbWVudChub2RlKT9kaXNwbGF5TmFtZT1SRUFDVF9GUkFHTUVOVF9UQUdfTkFNRV9FWFBMSUNJVF9TWU5UQVg6ZGlzcGxheU5hbWU9UkVBQ1RfRlJBR01FTlRfVEFHX05BTUVfU0hPUlRfU1lOVEFYOmRpc3BsYXlOYW1lPVJFQUNUX0ZSQUdNRU5UX1RBR19OQU1FX0VYUExJQ0lUX1NZTlRBWCxmb3JtYXRSZWFjdEVsZW1lbnROb2RlKHRvUmVhY3RFbGVtZW50VHJlZU5vZGUoZGlzcGxheU5hbWUsa2V5LGNoaWxkcmVucyksaW5saW5lLGx2bCxvcHRpb25zKX0sanN4U3RvcENoYXJzPVtcIjxcIixcIj5cIixcIntcIixcIn1cIl0sc2hvdWxkQmVFc2NhcGVkPWZ1bmN0aW9uKHMpe3JldHVybiBqc3hTdG9wQ2hhcnMuc29tZShmdW5jdGlvbihqc3hTdG9wQ2hhcil7cmV0dXJuIHMuaW5jbHVkZXMoanN4U3RvcENoYXIpfSl9LGVzY2FwZTI9ZnVuY3Rpb24ocyl7cmV0dXJuIHNob3VsZEJlRXNjYXBlZChzKT9cIntgXCIuY29uY2F0KHMsXCJgfVwiKTpzfSxwcmVzZXJ2ZVRyYWlsaW5nU3BhY2U9ZnVuY3Rpb24ocyl7dmFyIHJlc3VsdD1zO3JldHVybiByZXN1bHQuZW5kc1dpdGgoXCIgXCIpJiYocmVzdWx0PXJlc3VsdC5yZXBsYWNlKC9eKC4qPykoXFxzKykkLyxcIiQxeyckMid9XCIpKSxyZXN1bHQuc3RhcnRzV2l0aChcIiBcIikmJihyZXN1bHQ9cmVzdWx0LnJlcGxhY2UoL14oXFxzKykoLiopJC8sXCJ7JyQxJ30kMlwiKSkscmVzdWx0fSxmb3JtYXRUcmVlTm9kZT1mdW5jdGlvbihub2RlLGlubGluZSxsdmwsb3B0aW9ucyl7aWYobm9kZS50eXBlPT09XCJudW1iZXJcIilyZXR1cm4gU3RyaW5nKG5vZGUudmFsdWUpO2lmKG5vZGUudHlwZT09PVwic3RyaW5nXCIpcmV0dXJuIG5vZGUudmFsdWU/XCJcIi5jb25jYXQocHJlc2VydmVUcmFpbGluZ1NwYWNlKGVzY2FwZTIoU3RyaW5nKG5vZGUudmFsdWUpKSkpOlwiXCI7aWYobm9kZS50eXBlPT09XCJSZWFjdEVsZW1lbnRcIilyZXR1cm4gZm9ybWF0UmVhY3RFbGVtZW50Tm9kZShub2RlLGlubGluZSxsdmwsb3B0aW9ucyk7aWYobm9kZS50eXBlPT09XCJSZWFjdEZyYWdtZW50XCIpcmV0dXJuIGZvcm1hdFJlYWN0RnJhZ21lbnROb2RlKG5vZGUsaW5saW5lLGx2bCxvcHRpb25zKTt0aHJvdyBuZXcgVHlwZUVycm9yKCdVbmtub3cgZm9ybWF0IHR5cGUgXCInLmNvbmNhdChub2RlLnR5cGUsJ1wiJykpfSxmb3JtYXRUcmVlPWZ1bmN0aW9uKG5vZGUsb3B0aW9ucyl7cmV0dXJuIGZvcm1hdFRyZWVOb2RlKG5vZGUsITEsMCxvcHRpb25zKX0scmVhY3RFbGVtZW50VG9Kc3hTdHJpbmc9ZnVuY3Rpb24oZWxlbWVudCl7dmFyIF9yZWY9YXJndW1lbnRzLmxlbmd0aD4xJiZhcmd1bWVudHNbMV0hPT12b2lkIDA/YXJndW1lbnRzWzFdOnt9LF9yZWYkZmlsdGVyUHJvcHM9X3JlZi5maWx0ZXJQcm9wcyxmaWx0ZXJQcm9wczM9X3JlZiRmaWx0ZXJQcm9wcz09PXZvaWQgMD9bXTpfcmVmJGZpbHRlclByb3BzLF9yZWYkc2hvd0RlZmF1bHRQcm9wcz1fcmVmLnNob3dEZWZhdWx0UHJvcHMsc2hvd0RlZmF1bHRQcm9wcz1fcmVmJHNob3dEZWZhdWx0UHJvcHM9PT12b2lkIDA/ITA6X3JlZiRzaG93RGVmYXVsdFByb3BzLF9yZWYkc2hvd0Z1bmN0aW9ucz1fcmVmLnNob3dGdW5jdGlvbnMsc2hvd0Z1bmN0aW9ucz1fcmVmJHNob3dGdW5jdGlvbnM9PT12b2lkIDA/ITE6X3JlZiRzaG93RnVuY3Rpb25zLGZ1bmN0aW9uVmFsdWU9X3JlZi5mdW5jdGlvblZhbHVlLF9yZWYkdGFiU3RvcD1fcmVmLnRhYlN0b3AsdGFiU3RvcD1fcmVmJHRhYlN0b3A9PT12b2lkIDA/MjpfcmVmJHRhYlN0b3AsX3JlZiR1c2VCb29sZWFuU2hvcnRoPV9yZWYudXNlQm9vbGVhblNob3J0aGFuZFN5bnRheCx1c2VCb29sZWFuU2hvcnRoYW5kU3ludGF4PV9yZWYkdXNlQm9vbGVhblNob3J0aD09PXZvaWQgMD8hMDpfcmVmJHVzZUJvb2xlYW5TaG9ydGgsX3JlZiR1c2VGcmFnbWVudFNob3J0PV9yZWYudXNlRnJhZ21lbnRTaG9ydFN5bnRheCx1c2VGcmFnbWVudFNob3J0U3ludGF4PV9yZWYkdXNlRnJhZ21lbnRTaG9ydD09PXZvaWQgMD8hMDpfcmVmJHVzZUZyYWdtZW50U2hvcnQsX3JlZiRzb3J0UHJvcHM9X3JlZi5zb3J0UHJvcHMsc29ydFByb3BzPV9yZWYkc29ydFByb3BzPT09dm9pZCAwPyEwOl9yZWYkc29ydFByb3BzLG1heElubGluZUF0dHJpYnV0ZXNMaW5lTGVuZ3RoPV9yZWYubWF4SW5saW5lQXR0cmlidXRlc0xpbmVMZW5ndGgsZGlzcGxheU5hbWU9X3JlZi5kaXNwbGF5TmFtZTtpZighZWxlbWVudCl0aHJvdyBuZXcgRXJyb3IoXCJyZWFjdC1lbGVtZW50LXRvLWpzeC1zdHJpbmc6IEV4cGVjdGVkIGEgUmVhY3RFbGVtZW50XCIpO3ZhciBvcHRpb25zPXtmaWx0ZXJQcm9wczpmaWx0ZXJQcm9wczMsc2hvd0RlZmF1bHRQcm9wcyxzaG93RnVuY3Rpb25zLGZ1bmN0aW9uVmFsdWUsdGFiU3RvcCx1c2VCb29sZWFuU2hvcnRoYW5kU3ludGF4LHVzZUZyYWdtZW50U2hvcnRTeW50YXgsc29ydFByb3BzLG1heElubGluZUF0dHJpYnV0ZXNMaW5lTGVuZ3RoLGRpc3BsYXlOYW1lfTtyZXR1cm4gZm9ybWF0VHJlZShwYXJzZVJlYWN0RWxlbWVudChlbGVtZW50LG9wdGlvbnMpLG9wdGlvbnMpfTt2YXIgcmVhY3RFbGVtZW50VG9KU1hTdHJpbmc9cmVhY3RFbGVtZW50VG9Kc3hTdHJpbmc7ZnVuY3Rpb24gaXNSZWFjdEVsZW1lbnQoZWxlbWVudCl7cmV0dXJuIGVsZW1lbnQuJCR0eXBlb2YhPW51bGx9ZnVuY3Rpb24gZXh0cmFjdEZ1bmN0aW9uTmFtZShmdW5jLHByb3BOYW1lKXtsZXR7bmFtZX09ZnVuYztyZXR1cm4gbmFtZSE9PVwiXCImJm5hbWUhPT1cImFub255bW91c1wiJiZuYW1lIT09cHJvcE5hbWU/bmFtZTpudWxsfXZhciBzdHJpbmdSZXNvbHZlcj1yYXdEZWZhdWx0UHJvcD0+Y3JlYXRlU3VtbWFyeVZhbHVlKEpTT04uc3RyaW5naWZ5KHJhd0RlZmF1bHRQcm9wKSk7ZnVuY3Rpb24gZ2VuZXJhdGVSZWFjdE9iamVjdChyYXdEZWZhdWx0UHJvcCl7bGV0e3R5cGV9PXJhd0RlZmF1bHRQcm9wLHtkaXNwbGF5TmFtZX09dHlwZSxqc3gyPXJlYWN0RWxlbWVudFRvSlNYU3RyaW5nKHJhd0RlZmF1bHRQcm9wLHt9KTtpZihkaXNwbGF5TmFtZSE9bnVsbCl7bGV0IHByZXR0eUlkZW50aWZpZXI9Z2V0UHJldHR5RWxlbWVudElkZW50aWZpZXIoZGlzcGxheU5hbWUpO3JldHVybiBjcmVhdGVTdW1tYXJ5VmFsdWUocHJldHR5SWRlbnRpZmllcixqc3gyKX1pZihpc1N0cmluZyh0eXBlKSYmaXNIdG1sVGFnKHR5cGUpKXtsZXQganN4U3VtbWFyeT1yZWFjdEVsZW1lbnRUb0pTWFN0cmluZyhyYXdEZWZhdWx0UHJvcCx7dGFiU3RvcDowfSkucmVwbGFjZSgvXFxyP1xcbnxcXHIvZyxcIlwiKTtpZighaXNUb29Mb25nRm9yRGVmYXVsdFZhbHVlU3VtbWFyeShqc3hTdW1tYXJ5KSlyZXR1cm4gY3JlYXRlU3VtbWFyeVZhbHVlKGpzeFN1bW1hcnkpfXJldHVybiBjcmVhdGVTdW1tYXJ5VmFsdWUoRUxFTUVOVF9DQVBUSU9OLGpzeDIpfXZhciBvYmplY3RSZXNvbHZlcj1yYXdEZWZhdWx0UHJvcD0+e2lmKGlzUmVhY3RFbGVtZW50KHJhd0RlZmF1bHRQcm9wKSYmcmF3RGVmYXVsdFByb3AudHlwZSE9bnVsbClyZXR1cm4gZ2VuZXJhdGVSZWFjdE9iamVjdChyYXdEZWZhdWx0UHJvcCk7aWYoaXNQbGFpbk9iamVjdChyYXdEZWZhdWx0UHJvcCkpe2xldCBpbnNwZWN0aW9uUmVzdWx0PWluc3BlY3RWYWx1ZShKU09OLnN0cmluZ2lmeShyYXdEZWZhdWx0UHJvcCkpO3JldHVybiBnZW5lcmF0ZU9iamVjdChpbnNwZWN0aW9uUmVzdWx0KX1pZihBcnJheS5pc0FycmF5KHJhd0RlZmF1bHRQcm9wKSl7bGV0IGluc3BlY3Rpb25SZXN1bHQ9aW5zcGVjdFZhbHVlKEpTT04uc3RyaW5naWZ5KHJhd0RlZmF1bHRQcm9wKSk7cmV0dXJuIGdlbmVyYXRlQXJyYXkoaW5zcGVjdGlvblJlc3VsdCl9cmV0dXJuIGNyZWF0ZVN1bW1hcnlWYWx1ZShPQkpFQ1RfQ0FQVElPTil9LGZ1bmN0aW9uUmVzb2x2ZXI9KHJhd0RlZmF1bHRQcm9wLHByb3BEZWYpPT57bGV0IGlzRWxlbWVudD0hMSxpbnNwZWN0aW9uUmVzdWx0O2lmKGlzRnVuY3Rpb24ocmF3RGVmYXVsdFByb3AucmVuZGVyKSlpc0VsZW1lbnQ9ITA7ZWxzZSBpZihyYXdEZWZhdWx0UHJvcC5wcm90b3R5cGUhPW51bGwmJmlzRnVuY3Rpb24ocmF3RGVmYXVsdFByb3AucHJvdG90eXBlLnJlbmRlcikpaXNFbGVtZW50PSEwO2Vsc2Uge2xldCBpbm5lckVsZW1lbnQ7dHJ5e2luc3BlY3Rpb25SZXN1bHQ9aW5zcGVjdFZhbHVlKHJhd0RlZmF1bHRQcm9wLnRvU3RyaW5nKCkpO2xldHtoYXNQYXJhbXMscGFyYW1zfT1pbnNwZWN0aW9uUmVzdWx0LmluZmVycmVkVHlwZTtoYXNQYXJhbXM/cGFyYW1zLmxlbmd0aD09PTEmJnBhcmFtc1swXS50eXBlPT09XCJPYmplY3RQYXR0ZXJuXCImJihpbm5lckVsZW1lbnQ9cmF3RGVmYXVsdFByb3Aoe30pKTppbm5lckVsZW1lbnQ9cmF3RGVmYXVsdFByb3AoKSxpbm5lckVsZW1lbnQhPW51bGwmJmlzUmVhY3RFbGVtZW50KGlubmVyRWxlbWVudCkmJihpc0VsZW1lbnQ9ITApO31jYXRjaHt9fWxldCBmdW5jTmFtZT1leHRyYWN0RnVuY3Rpb25OYW1lKHJhd0RlZmF1bHRQcm9wLHByb3BEZWYubmFtZSk7aWYoZnVuY05hbWUhPW51bGwpe2lmKGlzRWxlbWVudClyZXR1cm4gY3JlYXRlU3VtbWFyeVZhbHVlKGdldFByZXR0eUVsZW1lbnRJZGVudGlmaWVyKGZ1bmNOYW1lKSk7aW5zcGVjdGlvblJlc3VsdCE9bnVsbCYmKGluc3BlY3Rpb25SZXN1bHQ9aW5zcGVjdFZhbHVlKHJhd0RlZmF1bHRQcm9wLnRvU3RyaW5nKCkpKTtsZXR7aGFzUGFyYW1zfT1pbnNwZWN0aW9uUmVzdWx0LmluZmVycmVkVHlwZTtyZXR1cm4gY3JlYXRlU3VtbWFyeVZhbHVlKGdldFByZXR0eUZ1bmNJZGVudGlmaWVyKGZ1bmNOYW1lLGhhc1BhcmFtcykpfXJldHVybiBjcmVhdGVTdW1tYXJ5VmFsdWUoaXNFbGVtZW50P0VMRU1FTlRfQ0FQVElPTjpGVU5DVElPTl9DQVBUSU9OKX0sZGVmYXVsdFJlc29sdmVyPXJhd0RlZmF1bHRQcm9wPT5jcmVhdGVTdW1tYXJ5VmFsdWUocmF3RGVmYXVsdFByb3AudG9TdHJpbmcoKSksREVGQVVMVF9UWVBFX1JFU09MVkVSUz17c3RyaW5nOnN0cmluZ1Jlc29sdmVyLG9iamVjdDpvYmplY3RSZXNvbHZlcixmdW5jdGlvbjpmdW5jdGlvblJlc29sdmVyLGRlZmF1bHQ6ZGVmYXVsdFJlc29sdmVyfTtmdW5jdGlvbiBjcmVhdGVUeXBlUmVzb2x2ZXJzKGN1c3RvbVJlc29sdmVycz17fSl7cmV0dXJuIHsuLi5ERUZBVUxUX1RZUEVfUkVTT0xWRVJTLC4uLmN1c3RvbVJlc29sdmVyc319ZnVuY3Rpb24gY3JlYXRlRGVmYXVsdFZhbHVlRnJvbVJhd0RlZmF1bHRQcm9wKHJhd0RlZmF1bHRQcm9wLHByb3BEZWYsdHlwZVJlc29sdmVycz1ERUZBVUxUX1RZUEVfUkVTT0xWRVJTKXt0cnl7c3dpdGNoKHR5cGVvZiByYXdEZWZhdWx0UHJvcCl7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIHR5cGVSZXNvbHZlcnMuc3RyaW5nKHJhd0RlZmF1bHRQcm9wLHByb3BEZWYpO2Nhc2VcIm9iamVjdFwiOnJldHVybiB0eXBlUmVzb2x2ZXJzLm9iamVjdChyYXdEZWZhdWx0UHJvcCxwcm9wRGVmKTtjYXNlXCJmdW5jdGlvblwiOnJldHVybiB0eXBlUmVzb2x2ZXJzLmZ1bmN0aW9uKHJhd0RlZmF1bHRQcm9wLHByb3BEZWYpO2RlZmF1bHQ6cmV0dXJuIHR5cGVSZXNvbHZlcnMuZGVmYXVsdChyYXdEZWZhdWx0UHJvcCxwcm9wRGVmKX19Y2F0Y2goZSl7Y29uc29sZS5lcnJvcihlKTt9cmV0dXJuIG51bGx9ZnVuY3Rpb24gZ2VuZXJhdGVGdW5jU2lnbmF0dXJlKHBhcmFtcyxyZXR1cm5zKXtsZXQgaGFzUGFyYW1zPXBhcmFtcyE9bnVsbCxoYXNSZXR1cm5zPXJldHVybnMhPW51bGw7aWYoIWhhc1BhcmFtcyYmIWhhc1JldHVybnMpcmV0dXJuIFwiXCI7bGV0IGZ1bmNQYXJ0cz1bXTtpZihoYXNQYXJhbXMpe2xldCBmdW5jUGFyYW1zPXBhcmFtcy5tYXAoeD0+e2xldCBwcmV0dHlOYW1lPXguZ2V0UHJldHR5TmFtZSgpLHR5cGVOYW1lPXguZ2V0VHlwZU5hbWUoKTtyZXR1cm4gdHlwZU5hbWUhPW51bGw/YCR7cHJldHR5TmFtZX06ICR7dHlwZU5hbWV9YDpwcmV0dHlOYW1lfSk7ZnVuY1BhcnRzLnB1c2goYCgke2Z1bmNQYXJhbXMuam9pbihcIiwgXCIpfSlgKTt9ZWxzZSBmdW5jUGFydHMucHVzaChcIigpXCIpO3JldHVybiBoYXNSZXR1cm5zJiZmdW5jUGFydHMucHVzaChgPT4gJHtyZXR1cm5zLmdldFR5cGVOYW1lKCl9YCksZnVuY1BhcnRzLmpvaW4oXCIgXCIpfWZ1bmN0aW9uIGdlbmVyYXRlU2hvcnRGdW5jU2lnbmF0dXJlKHBhcmFtcyxyZXR1cm5zKXtsZXQgaGFzUGFyYW1zPXBhcmFtcyE9bnVsbCxoYXNSZXR1cm5zPXJldHVybnMhPW51bGw7aWYoIWhhc1BhcmFtcyYmIWhhc1JldHVybnMpcmV0dXJuIFwiXCI7bGV0IGZ1bmNQYXJ0cz1bXTtyZXR1cm4gaGFzUGFyYW1zP2Z1bmNQYXJ0cy5wdXNoKFwiKCAuLi4gKVwiKTpmdW5jUGFydHMucHVzaChcIigpXCIpLGhhc1JldHVybnMmJmZ1bmNQYXJ0cy5wdXNoKGA9PiAke3JldHVybnMuZ2V0VHlwZU5hbWUoKX1gKSxmdW5jUGFydHMuam9pbihcIiBcIil9ZnVuY3Rpb24gdG9NdWx0aWxpbmVTaWduYXR1cmUoc2lnbmF0dXJlKXtyZXR1cm4gc2lnbmF0dXJlLnJlcGxhY2UoLywvZyxgLFxcclxuYCl9dmFyIE1BWF9GVU5DX0xFTkdUSD0xNTA7ZnVuY3Rpb24gY3JlYXRlVHlwZURlZih7bmFtZSxzaG9ydCxjb21wYWN0LGZ1bGwsaW5mZXJyZWRUeXBlfSl7cmV0dXJuIHtuYW1lLHNob3J0LGNvbXBhY3QsZnVsbDpmdWxsPz9zaG9ydCxpbmZlcnJlZFR5cGV9fWZ1bmN0aW9uIGNsZWFuUHJvcFR5cGVzKHZhbHVlKXtyZXR1cm4gdmFsdWUucmVwbGFjZSgvUHJvcFR5cGVzLi9nLFwiXCIpLnJlcGxhY2UoLy5pc1JlcXVpcmVkL2csXCJcIil9ZnVuY3Rpb24gc3BsaXRJbnRvTGluZXModmFsdWUpe3JldHVybiB2YWx1ZS5zcGxpdCgvXFxyP1xcbi8pfWZ1bmN0aW9uIHByZXR0eU9iamVjdChhc3QsY29tcGFjdD0hMSl7cmV0dXJuIGNsZWFuUHJvcFR5cGVzKGdlbmVyYXRlT2JqZWN0Q29kZShhc3QsY29tcGFjdCkpfWZ1bmN0aW9uIHByZXR0eUFycmF5KGFzdCxjb21wYWN0PSExKXtyZXR1cm4gY2xlYW5Qcm9wVHlwZXMoZ2VuZXJhdGVDb2RlKGFzdCxjb21wYWN0KSl9ZnVuY3Rpb24gZ2V0Q2FwdGlvbkZvckluc3BlY3Rpb25UeXBlKHR5cGUpe3N3aXRjaCh0eXBlKXtjYXNlXCJPYmplY3RcIjpyZXR1cm4gT0JKRUNUX0NBUFRJT047Y2FzZVwiQXJyYXlcIjpyZXR1cm4gQVJSQVlfQ0FQVElPTjtjYXNlXCJDbGFzc1wiOnJldHVybiBDTEFTU19DQVBUSU9OO2Nhc2VcIkZ1bmN0aW9uXCI6cmV0dXJuIEZVTkNUSU9OX0NBUFRJT047Y2FzZVwiRWxlbWVudFwiOnJldHVybiBFTEVNRU5UX0NBUFRJT047ZGVmYXVsdDpyZXR1cm4gQ1VTVE9NX0NBUFRJT059fWZ1bmN0aW9uIGdlbmVyYXRlVHlwZUZyb21TdHJpbmcodmFsdWUsb3JpZ2luYWxUeXBlTmFtZSl7bGV0e2luZmVycmVkVHlwZSxhc3R9PWluc3BlY3RWYWx1ZSh2YWx1ZSkse3R5cGV9PWluZmVycmVkVHlwZSxzaG9ydCxjb21wYWN0LGZ1bGw7c3dpdGNoKHR5cGUpe2Nhc2VcIklkZW50aWZpZXJcIjpjYXNlXCJMaXRlcmFsXCI6c2hvcnQ9dmFsdWUsY29tcGFjdD12YWx1ZTticmVhaztjYXNlXCJPYmplY3RcIjp7bGV0e2RlcHRofT1pbmZlcnJlZFR5cGU7c2hvcnQ9T0JKRUNUX0NBUFRJT04sY29tcGFjdD1kZXB0aD09PTE/cHJldHR5T2JqZWN0KGFzdCwhMCk6bnVsbCxmdWxsPXByZXR0eU9iamVjdChhc3QpO2JyZWFrfWNhc2VcIkVsZW1lbnRcIjp7bGV0e2lkZW50aWZpZXJ9PWluZmVycmVkVHlwZTtzaG9ydD1pZGVudGlmaWVyIT1udWxsJiYhaXNIdG1sVGFnKGlkZW50aWZpZXIpP2lkZW50aWZpZXI6RUxFTUVOVF9DQVBUSU9OLGNvbXBhY3Q9c3BsaXRJbnRvTGluZXModmFsdWUpLmxlbmd0aD09PTE/dmFsdWU6bnVsbCxmdWxsPXZhbHVlO2JyZWFrfWNhc2VcIkFycmF5XCI6e2xldHtkZXB0aH09aW5mZXJyZWRUeXBlO3Nob3J0PUFSUkFZX0NBUFRJT04sY29tcGFjdD1kZXB0aDw9Mj9wcmV0dHlBcnJheShhc3QsITApOm51bGwsZnVsbD1wcmV0dHlBcnJheShhc3QpO2JyZWFrfWRlZmF1bHQ6c2hvcnQ9Z2V0Q2FwdGlvbkZvckluc3BlY3Rpb25UeXBlKHR5cGUpLGNvbXBhY3Q9c3BsaXRJbnRvTGluZXModmFsdWUpLmxlbmd0aD09PTE/dmFsdWU6bnVsbCxmdWxsPXZhbHVlO2JyZWFrfXJldHVybiBjcmVhdGVUeXBlRGVmKHtuYW1lOm9yaWdpbmFsVHlwZU5hbWUsc2hvcnQsY29tcGFjdCxmdWxsLGluZmVycmVkVHlwZTp0eXBlfSl9ZnVuY3Rpb24gZ2VuZXJhdGVDdXN0b20oe3Jhd30pe3JldHVybiByYXchPW51bGw/Z2VuZXJhdGVUeXBlRnJvbVN0cmluZyhyYXcsXCJjdXN0b21cIik6Y3JlYXRlVHlwZURlZih7bmFtZTpcImN1c3RvbVwiLHNob3J0OkNVU1RPTV9DQVBUSU9OLGNvbXBhY3Q6Q1VTVE9NX0NBUFRJT059KX1mdW5jdGlvbiBnZW5lcmF0ZUZ1bmMyKGV4dHJhY3RlZFByb3Ape2xldHtqc0RvY1RhZ3N9PWV4dHJhY3RlZFByb3A7cmV0dXJuIGpzRG9jVGFncyE9bnVsbCYmKGpzRG9jVGFncy5wYXJhbXMhPW51bGx8fGpzRG9jVGFncy5yZXR1cm5zIT1udWxsKT9jcmVhdGVUeXBlRGVmKHtuYW1lOlwiZnVuY1wiLHNob3J0OmdlbmVyYXRlU2hvcnRGdW5jU2lnbmF0dXJlKGpzRG9jVGFncy5wYXJhbXMsanNEb2NUYWdzLnJldHVybnMpLGNvbXBhY3Q6bnVsbCxmdWxsOmdlbmVyYXRlRnVuY1NpZ25hdHVyZShqc0RvY1RhZ3MucGFyYW1zLGpzRG9jVGFncy5yZXR1cm5zKX0pOmNyZWF0ZVR5cGVEZWYoe25hbWU6XCJmdW5jXCIsc2hvcnQ6RlVOQ1RJT05fQ0FQVElPTixjb21wYWN0OkZVTkNUSU9OX0NBUFRJT059KX1mdW5jdGlvbiBnZW5lcmF0ZVNoYXBlKHR5cGUsZXh0cmFjdGVkUHJvcCl7bGV0IGZpZWxkcz1PYmplY3Qua2V5cyh0eXBlLnZhbHVlKS5tYXAoa2V5PT5gJHtrZXl9OiAke2dlbmVyYXRlVHlwZSh0eXBlLnZhbHVlW2tleV0sZXh0cmFjdGVkUHJvcCkuZnVsbH1gKS5qb2luKFwiLCBcIikse2luZmVycmVkVHlwZSxhc3R9PWluc3BlY3RWYWx1ZShgeyAke2ZpZWxkc30gfWApLHtkZXB0aH09aW5mZXJyZWRUeXBlO3JldHVybiBjcmVhdGVUeXBlRGVmKHtuYW1lOlwic2hhcGVcIixzaG9ydDpPQkpFQ1RfQ0FQVElPTixjb21wYWN0OmRlcHRoPT09MSYmYXN0P3ByZXR0eU9iamVjdChhc3QsITApOm51bGwsZnVsbDphc3Q/cHJldHR5T2JqZWN0KGFzdCk6bnVsbH0pfWZ1bmN0aW9uIG9iamVjdE9mKG9mKXtyZXR1cm4gYG9iamVjdE9mKCR7b2Z9KWB9ZnVuY3Rpb24gZ2VuZXJhdGVPYmplY3RPZih0eXBlLGV4dHJhY3RlZFByb3Ape2xldHtzaG9ydCxjb21wYWN0LGZ1bGx9PWdlbmVyYXRlVHlwZSh0eXBlLnZhbHVlLGV4dHJhY3RlZFByb3ApO3JldHVybiBjcmVhdGVUeXBlRGVmKHtuYW1lOlwib2JqZWN0T2ZcIixzaG9ydDpvYmplY3RPZihzaG9ydCksY29tcGFjdDpjb21wYWN0IT1udWxsP29iamVjdE9mKGNvbXBhY3QpOm51bGwsZnVsbDpmdWxsJiZvYmplY3RPZihmdWxsKX0pfWZ1bmN0aW9uIGdlbmVyYXRlVW5pb24odHlwZSxleHRyYWN0ZWRQcm9wKXtpZihBcnJheS5pc0FycmF5KHR5cGUudmFsdWUpKXtsZXQgdmFsdWVzPXR5cGUudmFsdWUucmVkdWNlKChhY2Msdik9PntsZXR7c2hvcnQsY29tcGFjdCxmdWxsfT1nZW5lcmF0ZVR5cGUodixleHRyYWN0ZWRQcm9wKTtyZXR1cm4gYWNjLnNob3J0LnB1c2goc2hvcnQpLGFjYy5jb21wYWN0LnB1c2goY29tcGFjdCksYWNjLmZ1bGwucHVzaChmdWxsKSxhY2N9LHtzaG9ydDpbXSxjb21wYWN0OltdLGZ1bGw6W119KTtyZXR1cm4gY3JlYXRlVHlwZURlZih7bmFtZTpcInVuaW9uXCIsc2hvcnQ6dmFsdWVzLnNob3J0LmpvaW4oXCIgfCBcIiksY29tcGFjdDp2YWx1ZXMuY29tcGFjdC5ldmVyeSh4PT54IT1udWxsKT92YWx1ZXMuY29tcGFjdC5qb2luKFwiIHwgXCIpOm51bGwsZnVsbDp2YWx1ZXMuZnVsbC5qb2luKFwiIHwgXCIpfSl9cmV0dXJuIGNyZWF0ZVR5cGVEZWYoe25hbWU6XCJ1bmlvblwiLHNob3J0OnR5cGUudmFsdWUsY29tcGFjdDpudWxsfSl9ZnVuY3Rpb24gZ2VuZXJhdGVFbnVtVmFsdWUoe3ZhbHVlLGNvbXB1dGVkfSl7cmV0dXJuIGNvbXB1dGVkP2dlbmVyYXRlVHlwZUZyb21TdHJpbmcodmFsdWUsXCJlbnVtdmFsdWVcIik6Y3JlYXRlVHlwZURlZih7bmFtZTpcImVudW12YWx1ZVwiLHNob3J0OnZhbHVlLGNvbXBhY3Q6dmFsdWV9KX1mdW5jdGlvbiBnZW5lcmF0ZUVudW0odHlwZSl7aWYoQXJyYXkuaXNBcnJheSh0eXBlLnZhbHVlKSl7bGV0IHZhbHVlcz10eXBlLnZhbHVlLnJlZHVjZSgoYWNjLHYpPT57bGV0e3Nob3J0LGNvbXBhY3QsZnVsbH09Z2VuZXJhdGVFbnVtVmFsdWUodik7cmV0dXJuIGFjYy5zaG9ydC5wdXNoKHNob3J0KSxhY2MuY29tcGFjdC5wdXNoKGNvbXBhY3QpLGFjYy5mdWxsLnB1c2goZnVsbCksYWNjfSx7c2hvcnQ6W10sY29tcGFjdDpbXSxmdWxsOltdfSk7cmV0dXJuIGNyZWF0ZVR5cGVEZWYoe25hbWU6XCJlbnVtXCIsc2hvcnQ6dmFsdWVzLnNob3J0LmpvaW4oXCIgfCBcIiksY29tcGFjdDp2YWx1ZXMuY29tcGFjdC5ldmVyeSh4PT54IT1udWxsKT92YWx1ZXMuY29tcGFjdC5qb2luKFwiIHwgXCIpOm51bGwsZnVsbDp2YWx1ZXMuZnVsbC5qb2luKFwiIHwgXCIpfSl9cmV0dXJuIGNyZWF0ZVR5cGVEZWYoe25hbWU6XCJlbnVtXCIsc2hvcnQ6dHlwZS52YWx1ZSxjb21wYWN0OnR5cGUudmFsdWV9KX1mdW5jdGlvbiBicmFjZUFmdGVyKG9mKXtyZXR1cm4gYCR7b2Z9W11gfWZ1bmN0aW9uIGJyYWNlQXJvdW5kKG9mKXtyZXR1cm4gYFske29mfV1gfWZ1bmN0aW9uIGNyZWF0ZUFycmF5T2ZPYmplY3RUeXBlRGVmKHNob3J0LGNvbXBhY3QsZnVsbCl7cmV0dXJuIGNyZWF0ZVR5cGVEZWYoe25hbWU6XCJhcnJheU9mXCIsc2hvcnQ6YnJhY2VBZnRlcihzaG9ydCksY29tcGFjdDpjb21wYWN0IT1udWxsP2JyYWNlQXJvdW5kKGNvbXBhY3QpOm51bGwsZnVsbDpmdWxsJiZicmFjZUFyb3VuZChmdWxsKX0pfWZ1bmN0aW9uIGdlbmVyYXRlQXJyYXkyKHR5cGUsZXh0cmFjdGVkUHJvcCl7bGV0e25hbWUsc2hvcnQsY29tcGFjdCxmdWxsLGluZmVycmVkVHlwZX09Z2VuZXJhdGVUeXBlKHR5cGUudmFsdWUsZXh0cmFjdGVkUHJvcCk7aWYobmFtZT09PVwiY3VzdG9tXCIpe2lmKGluZmVycmVkVHlwZT09PVwiT2JqZWN0XCIpcmV0dXJuIGNyZWF0ZUFycmF5T2ZPYmplY3RUeXBlRGVmKHNob3J0LGNvbXBhY3QsZnVsbCl9ZWxzZSBpZihuYW1lPT09XCJzaGFwZVwiKXJldHVybiBjcmVhdGVBcnJheU9mT2JqZWN0VHlwZURlZihzaG9ydCxjb21wYWN0LGZ1bGwpO3JldHVybiBjcmVhdGVUeXBlRGVmKHtuYW1lOlwiYXJyYXlPZlwiLHNob3J0OmJyYWNlQWZ0ZXIoc2hvcnQpLGNvbXBhY3Q6YnJhY2VBZnRlcihzaG9ydCl9KX1mdW5jdGlvbiBnZW5lcmF0ZVR5cGUodHlwZSxleHRyYWN0ZWRQcm9wKXt0cnl7c3dpdGNoKHR5cGUubmFtZSl7Y2FzZVwiY3VzdG9tXCI6cmV0dXJuIGdlbmVyYXRlQ3VzdG9tKHR5cGUpO2Nhc2VcImZ1bmNcIjpyZXR1cm4gZ2VuZXJhdGVGdW5jMihleHRyYWN0ZWRQcm9wKTtjYXNlXCJzaGFwZVwiOnJldHVybiBnZW5lcmF0ZVNoYXBlKHR5cGUsZXh0cmFjdGVkUHJvcCk7Y2FzZVwiaW5zdGFuY2VPZlwiOnJldHVybiBjcmVhdGVUeXBlRGVmKHtuYW1lOlwiaW5zdGFuY2VPZlwiLHNob3J0OnR5cGUudmFsdWUsY29tcGFjdDp0eXBlLnZhbHVlfSk7Y2FzZVwib2JqZWN0T2ZcIjpyZXR1cm4gZ2VuZXJhdGVPYmplY3RPZih0eXBlLGV4dHJhY3RlZFByb3ApO2Nhc2VcInVuaW9uXCI6cmV0dXJuIGdlbmVyYXRlVW5pb24odHlwZSxleHRyYWN0ZWRQcm9wKTtjYXNlXCJlbnVtXCI6cmV0dXJuIGdlbmVyYXRlRW51bSh0eXBlKTtjYXNlXCJhcnJheU9mXCI6cmV0dXJuIGdlbmVyYXRlQXJyYXkyKHR5cGUsZXh0cmFjdGVkUHJvcCk7ZGVmYXVsdDpyZXR1cm4gY3JlYXRlVHlwZURlZih7bmFtZTp0eXBlLm5hbWUsc2hvcnQ6dHlwZS5uYW1lLGNvbXBhY3Q6dHlwZS5uYW1lfSl9fWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IoZSk7fXJldHVybiBjcmVhdGVUeXBlRGVmKHtuYW1lOlwidW5rbm93blwiLHNob3J0OlwidW5rbm93blwiLGNvbXBhY3Q6XCJ1bmtub3duXCJ9KX1mdW5jdGlvbiBjcmVhdGVUeXBlKGV4dHJhY3RlZFByb3Ape2xldHt0eXBlfT1leHRyYWN0ZWRQcm9wLmRvY2dlbkluZm87aWYodHlwZT09bnVsbClyZXR1cm4gbnVsbDt0cnl7c3dpdGNoKHR5cGUubmFtZSl7Y2FzZVwiY3VzdG9tXCI6Y2FzZVwic2hhcGVcIjpjYXNlXCJpbnN0YW5jZU9mXCI6Y2FzZVwib2JqZWN0T2ZcIjpjYXNlXCJ1bmlvblwiOmNhc2VcImVudW1cIjpjYXNlXCJhcnJheU9mXCI6e2xldHtzaG9ydCxjb21wYWN0LGZ1bGx9PWdlbmVyYXRlVHlwZSh0eXBlLGV4dHJhY3RlZFByb3ApO3JldHVybiBjb21wYWN0IT1udWxsJiYhaXNUb29Mb25nRm9yVHlwZVN1bW1hcnkoY29tcGFjdCk/Y3JlYXRlU3VtbWFyeVZhbHVlKGNvbXBhY3QpOmZ1bGw/Y3JlYXRlU3VtbWFyeVZhbHVlKHNob3J0LGZ1bGwpOmNyZWF0ZVN1bW1hcnlWYWx1ZShzaG9ydCl9Y2FzZVwiZnVuY1wiOntsZXR7c2hvcnQsZnVsbH09Z2VuZXJhdGVUeXBlKHR5cGUsZXh0cmFjdGVkUHJvcCksc3VtbWFyeT1zaG9ydCxkZXRhaWw7cmV0dXJuIGZ1bGwmJmZ1bGwubGVuZ3RoPE1BWF9GVU5DX0xFTkdUSD9zdW1tYXJ5PWZ1bGw6ZnVsbCYmKGRldGFpbD10b011bHRpbGluZVNpZ25hdHVyZShmdWxsKSksY3JlYXRlU3VtbWFyeVZhbHVlKHN1bW1hcnksZGV0YWlsKX1kZWZhdWx0OnJldHVybiBudWxsfX1jYXRjaChlKXtjb25zb2xlLmVycm9yKGUpO31yZXR1cm4gbnVsbH12YXIgZnVuY1Jlc29sdmVyPShyYXdEZWZhdWx0UHJvcCx7bmFtZSx0eXBlfSk9PntsZXQgaXNFbGVtZW50PXR5cGU/LnN1bW1hcnk9PT1cImVsZW1lbnRcInx8dHlwZT8uc3VtbWFyeT09PVwiZWxlbWVudFR5cGVcIixmdW5jTmFtZT1leHRyYWN0RnVuY3Rpb25OYW1lKHJhd0RlZmF1bHRQcm9wLG5hbWUpO2lmKGZ1bmNOYW1lIT1udWxsKXtpZihpc0VsZW1lbnQpcmV0dXJuIGNyZWF0ZVN1bW1hcnlWYWx1ZShnZXRQcmV0dHlFbGVtZW50SWRlbnRpZmllcihmdW5jTmFtZSkpO2xldHtoYXNQYXJhbXN9PWluc3BlY3RWYWx1ZShyYXdEZWZhdWx0UHJvcC50b1N0cmluZygpKS5pbmZlcnJlZFR5cGU7cmV0dXJuIGNyZWF0ZVN1bW1hcnlWYWx1ZShnZXRQcmV0dHlGdW5jSWRlbnRpZmllcihmdW5jTmFtZSxoYXNQYXJhbXMpKX1yZXR1cm4gY3JlYXRlU3VtbWFyeVZhbHVlKGlzRWxlbWVudD9FTEVNRU5UX0NBUFRJT046RlVOQ1RJT05fQ0FQVElPTil9LHJhd0RlZmF1bHRQcm9wVHlwZVJlc29sdmVycz1jcmVhdGVUeXBlUmVzb2x2ZXJzKHtmdW5jdGlvbjpmdW5jUmVzb2x2ZXJ9KTtmdW5jdGlvbiBrZWVwT3JpZ2luYWxEZWZpbml0aW9uT3JkZXIoZXh0cmFjdGVkUHJvcHMsY29tcG9uZW50KXtsZXR7cHJvcFR5cGVzfT1jb21wb25lbnQ7cmV0dXJuIHByb3BUeXBlcyE9bnVsbD9PYmplY3Qua2V5cyhwcm9wVHlwZXMpLm1hcCh4PT5leHRyYWN0ZWRQcm9wcy5maW5kKHk9PnkubmFtZT09PXgpKS5maWx0ZXIoQm9vbGVhbik6ZXh0cmFjdGVkUHJvcHN9ZnVuY3Rpb24gZW5oYW5jZVByb3BUeXBlc1Byb3AoZXh0cmFjdGVkUHJvcCxyYXdEZWZhdWx0UHJvcCl7bGV0e3Byb3BEZWZ9PWV4dHJhY3RlZFByb3AsbmV3dHlwZT1jcmVhdGVUeXBlKGV4dHJhY3RlZFByb3ApO25ld3R5cGUhPW51bGwmJihwcm9wRGVmLnR5cGU9bmV3dHlwZSk7bGV0e2RlZmF1bHRWYWx1ZX09ZXh0cmFjdGVkUHJvcC5kb2NnZW5JbmZvO2lmKGRlZmF1bHRWYWx1ZSE9bnVsbCYmZGVmYXVsdFZhbHVlLnZhbHVlIT1udWxsKXtsZXQgbmV3RGVmYXVsdFZhbHVlPWNyZWF0ZURlZmF1bHRWYWx1ZShkZWZhdWx0VmFsdWUudmFsdWUpO25ld0RlZmF1bHRWYWx1ZSE9bnVsbCYmKHByb3BEZWYuZGVmYXVsdFZhbHVlPW5ld0RlZmF1bHRWYWx1ZSk7fWVsc2UgaWYocmF3RGVmYXVsdFByb3AhPW51bGwpe2xldCBuZXdEZWZhdWx0VmFsdWU9Y3JlYXRlRGVmYXVsdFZhbHVlRnJvbVJhd0RlZmF1bHRQcm9wKHJhd0RlZmF1bHRQcm9wLHByb3BEZWYscmF3RGVmYXVsdFByb3BUeXBlUmVzb2x2ZXJzKTtuZXdEZWZhdWx0VmFsdWUhPW51bGwmJihwcm9wRGVmLmRlZmF1bHRWYWx1ZT1uZXdEZWZhdWx0VmFsdWUpO31yZXR1cm4gcHJvcERlZn1mdW5jdGlvbiBlbmhhbmNlUHJvcFR5cGVzUHJvcHMoZXh0cmFjdGVkUHJvcHMsY29tcG9uZW50KXtsZXQgcmF3RGVmYXVsdFByb3BzPWNvbXBvbmVudC5kZWZhdWx0UHJvcHMhPW51bGw/Y29tcG9uZW50LmRlZmF1bHRQcm9wczp7fSxlbmhhbmNlZFByb3BzPWV4dHJhY3RlZFByb3BzLm1hcCh4PT5lbmhhbmNlUHJvcFR5cGVzUHJvcCh4LHJhd0RlZmF1bHRQcm9wc1t4LnByb3BEZWYubmFtZV0pKTtyZXR1cm4ga2VlcE9yaWdpbmFsRGVmaW5pdGlvbk9yZGVyKGVuaGFuY2VkUHJvcHMsY29tcG9uZW50KX1mdW5jdGlvbiBlbmhhbmNlVHlwZVNjcmlwdFByb3AoZXh0cmFjdGVkUHJvcCxyYXdEZWZhdWx0UHJvcCl7bGV0e3Byb3BEZWZ9PWV4dHJhY3RlZFByb3Ase2RlZmF1bHRWYWx1ZX09ZXh0cmFjdGVkUHJvcC5kb2NnZW5JbmZvO2lmKGRlZmF1bHRWYWx1ZSE9bnVsbCYmZGVmYXVsdFZhbHVlLnZhbHVlIT1udWxsKXtsZXQgbmV3RGVmYXVsdFZhbHVlPWNyZWF0ZURlZmF1bHRWYWx1ZShkZWZhdWx0VmFsdWUudmFsdWUpO25ld0RlZmF1bHRWYWx1ZSE9bnVsbCYmKHByb3BEZWYuZGVmYXVsdFZhbHVlPW5ld0RlZmF1bHRWYWx1ZSk7fWVsc2UgaWYocmF3RGVmYXVsdFByb3AhPW51bGwpe2xldCBuZXdEZWZhdWx0VmFsdWU9Y3JlYXRlRGVmYXVsdFZhbHVlRnJvbVJhd0RlZmF1bHRQcm9wKHJhd0RlZmF1bHRQcm9wLHByb3BEZWYpO25ld0RlZmF1bHRWYWx1ZSE9bnVsbCYmKHByb3BEZWYuZGVmYXVsdFZhbHVlPW5ld0RlZmF1bHRWYWx1ZSk7fXJldHVybiBwcm9wRGVmfWZ1bmN0aW9uIGVuaGFuY2VUeXBlU2NyaXB0UHJvcHMoZXh0cmFjdGVkUHJvcHMpe3JldHVybiBleHRyYWN0ZWRQcm9wcy5tYXAocHJvcD0+ZW5oYW5jZVR5cGVTY3JpcHRQcm9wKHByb3ApKX12YXIgcHJvcFR5cGVzTWFwPW5ldyBNYXA7T2JqZWN0LmtleXMoaW1wb3J0X3Byb3BfdHlwZXMuZGVmYXVsdCkuZm9yRWFjaCh0eXBlTmFtZT0+e2xldCB0eXBlPWltcG9ydF9wcm9wX3R5cGVzLmRlZmF1bHRbdHlwZU5hbWVdO3Byb3BUeXBlc01hcC5zZXQodHlwZSx0eXBlTmFtZSkscHJvcFR5cGVzTWFwLnNldCh0eXBlLmlzUmVxdWlyZWQsdHlwZU5hbWUpO30pO2Z1bmN0aW9uIGdldFByb3BEZWZzKGNvbXBvbmVudCxzZWN0aW9uKXtsZXQgcHJvY2Vzc2VkQ29tcG9uZW50PWNvbXBvbmVudDshaGFzRG9jZ2VuKGNvbXBvbmVudCkmJiFjb21wb25lbnQucHJvcFR5cGVzJiZpc01lbW8oY29tcG9uZW50KSYmKHByb2Nlc3NlZENvbXBvbmVudD1jb21wb25lbnQudHlwZSk7bGV0IGV4dHJhY3RlZFByb3BzPWV4dHJhY3RDb21wb25lbnRQcm9wcyhwcm9jZXNzZWRDb21wb25lbnQsc2VjdGlvbik7aWYoZXh0cmFjdGVkUHJvcHMubGVuZ3RoPT09MClyZXR1cm4gW107c3dpdGNoKGV4dHJhY3RlZFByb3BzWzBdLnR5cGVTeXN0ZW0pe2Nhc2UgVHlwZVN5c3RlbS5KQVZBU0NSSVBUOnJldHVybiBlbmhhbmNlUHJvcFR5cGVzUHJvcHMoZXh0cmFjdGVkUHJvcHMsY29tcG9uZW50KTtjYXNlIFR5cGVTeXN0ZW0uVFlQRVNDUklQVDpyZXR1cm4gZW5oYW5jZVR5cGVTY3JpcHRQcm9wcyhleHRyYWN0ZWRQcm9wcyk7ZGVmYXVsdDpyZXR1cm4gZXh0cmFjdGVkUHJvcHMubWFwKHg9PngucHJvcERlZil9fXZhciBleHRyYWN0UHJvcHM9Y29tcG9uZW50PT4oe3Jvd3M6Z2V0UHJvcERlZnMoY29tcG9uZW50LFwicHJvcHNcIil9KTt2YXIgZXh0cmFjdEFyZ1R5cGVzPWNvbXBvbmVudD0+e2lmKGNvbXBvbmVudCl7bGV0e3Jvd3N9PWV4dHJhY3RQcm9wcyhjb21wb25lbnQpO2lmKHJvd3MpcmV0dXJuIHJvd3MucmVkdWNlKChhY2Mscm93KT0+e2xldHtuYW1lLGRlc2NyaXB0aW9uLHR5cGUsc2JUeXBlLGRlZmF1bHRWYWx1ZTpkZWZhdWx0U3VtbWFyeSxqc0RvY1RhZ3MscmVxdWlyZWR9PXJvdztyZXR1cm4gYWNjW25hbWVdPXtuYW1lLGRlc2NyaXB0aW9uLHR5cGU6e3JlcXVpcmVkLC4uLnNiVHlwZX0sdGFibGU6e3R5cGU6dHlwZT8/dm9pZCAwLGpzRG9jVGFncyxkZWZhdWx0VmFsdWU6ZGVmYXVsdFN1bW1hcnk/P3ZvaWQgMH19LGFjY30se30pfXJldHVybiBudWxsfTt2YXIgcmVhY3RFbGVtZW50VG9KU1hTdHJpbmcyPXJlYWN0RWxlbWVudFRvSnN4U3RyaW5nLHRvUGFzY2FsQ2FzZT1zdHI9PnN0ci5jaGFyQXQoMCkudG9VcHBlckNhc2UoKStzdHIuc2xpY2UoMSksZ2V0UmVhY3RTeW1ib2xOYW1lPWVsZW1lbnRUeXBlPT4oZWxlbWVudFR5cGUuJCR0eXBlb2Z8fGVsZW1lbnRUeXBlKS50b1N0cmluZygpLnJlcGxhY2UoL15TeW1ib2xcXCgoLiopXFwpJC8sXCIkMVwiKS5zcGxpdChcIi5cIikubWFwKHNlZ21lbnQ9PnNlZ21lbnQuc3BsaXQoXCJfXCIpLm1hcCh0b1Bhc2NhbENhc2UpLmpvaW4oXCJcIikpLmpvaW4oXCIuXCIpO2Z1bmN0aW9uIHNpbXBsaWZ5Tm9kZUZvclN0cmluZ2lmeShub2RlKXtpZihpc1ZhbGlkRWxlbWVudChub2RlKSl7bGV0IHByb3BzPU9iamVjdC5rZXlzKG5vZGUucHJvcHMpLnJlZHVjZSgoYWNjLGN1cik9PihhY2NbY3VyXT1zaW1wbGlmeU5vZGVGb3JTdHJpbmdpZnkobm9kZS5wcm9wc1tjdXJdKSxhY2MpLHt9KTtyZXR1cm4gey4uLm5vZGUscHJvcHMsX293bmVyOm51bGx9fXJldHVybiBBcnJheS5pc0FycmF5KG5vZGUpP25vZGUubWFwKHNpbXBsaWZ5Tm9kZUZvclN0cmluZ2lmeSk6bm9kZX12YXIgcmVuZGVySnN4PShjb2RlLG9wdGlvbnMpPT57aWYodHlwZW9mIGNvZGU+XCJ1XCIpcmV0dXJuIGxvZ2dlci53YXJuKFwiVG9vIG1hbnkgc2tpcCBvciB1bmRlZmluZWQgY29tcG9uZW50XCIpLG51bGw7bGV0IHJlbmRlcmVkSlNYPWNvZGUsVHlwZT1yZW5kZXJlZEpTWC50eXBlO2ZvcihsZXQgaT0wO2k8b3B0aW9ucz8uc2tpcDtpKz0xKXtpZih0eXBlb2YgcmVuZGVyZWRKU1g+XCJ1XCIpcmV0dXJuIGxvZ2dlci53YXJuKFwiQ2Fubm90IHNraXAgdW5kZWZpbmVkIGVsZW1lbnRcIiksbnVsbDtpZihSZWFjdDJfX2RlZmF1bHQuQ2hpbGRyZW4uY291bnQocmVuZGVyZWRKU1gpPjEpcmV0dXJuIGxvZ2dlci53YXJuKFwiVHJ5aW5nIHRvIHNraXAgYW4gYXJyYXkgb2YgZWxlbWVudHNcIiksbnVsbDt0eXBlb2YgcmVuZGVyZWRKU1gucHJvcHMuY2hpbGRyZW4+XCJ1XCI/KGxvZ2dlci53YXJuKFwiTm90IGVub3VnaCBjaGlsZHJlbiB0byBza2lwIGVsZW1lbnRzLlwiKSx0eXBlb2YgcmVuZGVyZWRKU1gudHlwZT09XCJmdW5jdGlvblwiJiZyZW5kZXJlZEpTWC50eXBlLm5hbWU9PT1cIlwiJiYocmVuZGVyZWRKU1g9UmVhY3QyX19kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoVHlwZSx7Li4ucmVuZGVyZWRKU1gucHJvcHN9KSkpOnR5cGVvZiByZW5kZXJlZEpTWC5wcm9wcy5jaGlsZHJlbj09XCJmdW5jdGlvblwiP3JlbmRlcmVkSlNYPXJlbmRlcmVkSlNYLnByb3BzLmNoaWxkcmVuKCk6cmVuZGVyZWRKU1g9cmVuZGVyZWRKU1gucHJvcHMuY2hpbGRyZW47fWxldCBkaXNwbGF5TmFtZURlZmF1bHRzO3R5cGVvZiBvcHRpb25zPy5kaXNwbGF5TmFtZT09XCJzdHJpbmdcIj9kaXNwbGF5TmFtZURlZmF1bHRzPXtzaG93RnVuY3Rpb25zOiEwLGRpc3BsYXlOYW1lOigpPT5vcHRpb25zLmRpc3BsYXlOYW1lfTpkaXNwbGF5TmFtZURlZmF1bHRzPXtkaXNwbGF5TmFtZTplbD0+ZWwudHlwZS5kaXNwbGF5TmFtZT9lbC50eXBlLmRpc3BsYXlOYW1lOmdldERvY2dlblNlY3Rpb24oZWwudHlwZSxcImRpc3BsYXlOYW1lXCIpP2dldERvY2dlblNlY3Rpb24oZWwudHlwZSxcImRpc3BsYXlOYW1lXCIpOmVsLnR5cGUucmVuZGVyPy5kaXNwbGF5TmFtZT9lbC50eXBlLnJlbmRlci5kaXNwbGF5TmFtZTp0eXBlb2YgZWwudHlwZT09XCJzeW1ib2xcInx8ZWwudHlwZS4kJHR5cGVvZiYmdHlwZW9mIGVsLnR5cGUuJCR0eXBlb2Y9PVwic3ltYm9sXCI/Z2V0UmVhY3RTeW1ib2xOYW1lKGVsLnR5cGUpOmVsLnR5cGUubmFtZSYmZWwudHlwZS5uYW1lIT09XCJfZGVmYXVsdFwiP2VsLnR5cGUubmFtZTp0eXBlb2YgZWwudHlwZT09XCJmdW5jdGlvblwiP1wiTm8gRGlzcGxheSBOYW1lXCI6aXNGb3J3YXJkUmVmKGVsLnR5cGUpP2VsLnR5cGUucmVuZGVyLm5hbWU6aXNNZW1vKGVsLnR5cGUpP2VsLnR5cGUudHlwZS5uYW1lOmVsLnR5cGV9O2xldCBvcHRzPXsuLi5kaXNwbGF5TmFtZURlZmF1bHRzLC4uLntmaWx0ZXJQcm9wczoodmFsdWUsa2V5KT0+dmFsdWUhPT12b2lkIDB9LC4uLm9wdGlvbnN9O3JldHVybiBSZWFjdDJfX2RlZmF1bHQuQ2hpbGRyZW4ubWFwKGNvZGUsYz0+e2xldCBjaGlsZD10eXBlb2YgYz09XCJudW1iZXJcIj9jLnRvU3RyaW5nKCk6YyxzdHJpbmc9KHR5cGVvZiByZWFjdEVsZW1lbnRUb0pTWFN0cmluZzI9PVwiZnVuY3Rpb25cIj9yZWFjdEVsZW1lbnRUb0pTWFN0cmluZzI6cmVhY3RFbGVtZW50VG9KU1hTdHJpbmcyLmRlZmF1bHQpKHNpbXBsaWZ5Tm9kZUZvclN0cmluZ2lmeShjaGlsZCksb3B0cyk7aWYoc3RyaW5nLmluZGV4T2YoXCImcXVvdDtcIik+LTEpe2xldCBtYXRjaGVzPXN0cmluZy5tYXRjaCgvXFxTKz1cXFxcXCIoW15cIl0qKVxcXFxcIi9nKTttYXRjaGVzJiZtYXRjaGVzLmZvckVhY2gobWF0Y2g9PntzdHJpbmc9c3RyaW5nLnJlcGxhY2UobWF0Y2gsbWF0Y2gucmVwbGFjZSgvJnF1b3Q7L2csXCInXCIpKTt9KTt9cmV0dXJuIHN0cmluZ30pLmpvaW4oYFxuYCkucmVwbGFjZSgvZnVuY3Rpb25cXHMrbm9SZWZDaGVja1xcKFxcKVxccypcXHtcXH0vZyxcIigpID0+IHt9XCIpfSxkZWZhdWx0T3B0cz17c2tpcDowLHNob3dGdW5jdGlvbnM6ITEsZW5hYmxlQmVhdXRpZnk6ITAsc2hvd0RlZmF1bHRQcm9wczohMX0sc2tpcEpzeFJlbmRlcj1jb250ZXh0PT57bGV0IHNvdXJjZVBhcmFtcz1jb250ZXh0Py5wYXJhbWV0ZXJzLmRvY3M/LnNvdXJjZSxpc0FyZ3NTdG9yeT1jb250ZXh0Py5wYXJhbWV0ZXJzLl9faXNBcmdzU3Rvcnk7cmV0dXJuIHNvdXJjZVBhcmFtcz8udHlwZT09PVNvdXJjZVR5cGUuRFlOQU1JQz8hMTohaXNBcmdzU3Rvcnl8fHNvdXJjZVBhcmFtcz8uY29kZXx8c291cmNlUGFyYW1zPy50eXBlPT09U291cmNlVHlwZS5DT0RFfSxpc01keD1ub2RlPT5ub2RlLnR5cGU/LmRpc3BsYXlOYW1lPT09XCJNRFhDcmVhdGVFbGVtZW50XCImJiEhbm9kZS5wcm9wcz8ubWR4VHlwZSxtZHhUb0pzeD1ub2RlPT57aWYoIWlzTWR4KG5vZGUpKXJldHVybiBub2RlO2xldHttZHhUeXBlLG9yaWdpbmFsVHlwZSxjaGlsZHJlbiwuLi5yZXN0fT1ub2RlLnByb3BzLGpzeENoaWxkcmVuPVtdO3JldHVybiBjaGlsZHJlbiYmKGpzeENoaWxkcmVuPShBcnJheS5pc0FycmF5KGNoaWxkcmVuKT9jaGlsZHJlbjpbY2hpbGRyZW5dKS5tYXAobWR4VG9Kc3gpKSxjcmVhdGVFbGVtZW50KG9yaWdpbmFsVHlwZSxyZXN0LC4uLmpzeENoaWxkcmVuKX0sanN4RGVjb3JhdG9yPShzdG9yeUZuLGNvbnRleHQpPT57bGV0IGNoYW5uZWw9YWRkb25zLmdldENoYW5uZWwoKSxza2lwPXNraXBKc3hSZW5kZXIoY29udGV4dCksanN4Mj1cIlwiO3VzZUVmZmVjdCgoKT0+e2lmKCFza2lwKXtsZXR7aWQsdW5tYXBwZWRBcmdzfT1jb250ZXh0O2NoYW5uZWwuZW1pdChTTklQUEVUX1JFTkRFUkVELHtpZCxzb3VyY2U6anN4MixhcmdzOnVubWFwcGVkQXJnc30pO319KTtsZXQgc3Rvcnk9c3RvcnlGbigpO2lmKHNraXApcmV0dXJuIHN0b3J5O2xldCBvcHRpb25zPXsuLi5kZWZhdWx0T3B0cywuLi5jb250ZXh0Py5wYXJhbWV0ZXJzLmpzeHx8e319LHN0b3J5SnN4PWNvbnRleHQ/LnBhcmFtZXRlcnMuZG9jcz8uc291cmNlPy5leGNsdWRlRGVjb3JhdG9ycz9jb250ZXh0Lm9yaWdpbmFsU3RvcnlGbihjb250ZXh0LmFyZ3MsY29udGV4dCk6c3Rvcnksc291cmNlSnN4PW1keFRvSnN4KHN0b3J5SnN4KSxyZW5kZXJlZD1yZW5kZXJKc3goc291cmNlSnN4LG9wdGlvbnMpO3JldHVybiByZW5kZXJlZCYmKGpzeDI9cmVuZGVyZWQpLHN0b3J5fTt2YXIgYXBwbHlEZWNvcmF0b3JzPShzdG9yeUZuLGRlY29yYXRvcnMyKT0+e2xldCBqc3hJbmRleD1kZWNvcmF0b3JzMi5maW5kSW5kZXgoZD0+ZC5vcmlnaW5hbEZuPT09anN4RGVjb3JhdG9yKSxyZW9yZGVyZWREZWNvcmF0b3JzPWpzeEluZGV4PT09LTE/ZGVjb3JhdG9yczI6Wy4uLmRlY29yYXRvcnMyLnNwbGljZShqc3hJbmRleCwxKSwuLi5kZWNvcmF0b3JzMl07cmV0dXJuIGRlZmF1bHREZWNvcmF0ZVN0b3J5KHN0b3J5Rm4scmVvcmRlcmVkRGVjb3JhdG9ycyl9O3ZhciBwYXJhbWV0ZXJzPXtkb2NzOntzdG9yeTp7aW5saW5lOiEwfSxleHRyYWN0QXJnVHlwZXMsZXh0cmFjdENvbXBvbmVudERlc2NyaXB0aW9ufX0sZGVjb3JhdG9ycz1banN4RGVjb3JhdG9yXSxhcmdUeXBlc0VuaGFuY2Vycz1bZW5oYW5jZUFyZ1R5cGVzXTtcblxuZXhwb3J0IHsgYXBwbHlEZWNvcmF0b3JzLCBhcmdUeXBlc0VuaGFuY2VycywgZGVjb3JhdG9ycywgZW50cnlfcHJldmlld19kb2NzX2V4cG9ydHMsIHBhcmFtZXRlcnMgfTtcbiIsImV4cG9ydCB7IGFwcGx5RGVjb3JhdG9ycywgYXJnVHlwZXNFbmhhbmNlcnMsIGRlY29yYXRvcnMsIHBhcmFtZXRlcnMgfSBmcm9tICcuL2NodW5rLUVXSVU2TEhULm1qcyc7XG5pbXBvcnQgJy4vY2h1bmstWFA1SFlHWFMubWpzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/entry-preview-docs.mjs\n')},"../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/entry-preview.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  beforeAll: () => (/* reexport */ beforeAll),\n  decorators: () => (/* reexport */ decorators),\n  mount: () => (/* reexport */ mount),\n  parameters: () => (/* reexport */ parameters),\n  render: () => (/* reexport */ render),\n  renderToCanvas: () => (/* reexport */ renderToCanvas)\n});\n\n// EXTERNAL MODULE: ../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/chunk-XP5HYGXS.mjs\nvar chunk_XP5HYGXS = __webpack_require__("../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/chunk-XP5HYGXS.mjs");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js\nvar react = __webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js");\nvar react_namespaceObject = /*#__PURE__*/__webpack_require__.t(react, 2);\n// EXTERNAL MODULE: external "__STORYBOOK_MODULE_GLOBAL__"\nvar external_STORYBOOK_MODULE_GLOBAL_ = __webpack_require__("@storybook/global");\n;// ../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/chunk-TENYCC3B.mjs\n/* provided dependency */ var process = __webpack_require__("../../node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");\n\n\n\n\n\nvar require_constants=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/internal/constants.js"(exports,module){var SEMVER_SPEC_VERSION="2.0.0",MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991,MAX_SAFE_COMPONENT_LENGTH=16,MAX_SAFE_BUILD_LENGTH=250,RELEASE_TYPES=["major","premajor","minor","preminor","patch","prepatch","prerelease"];module.exports={MAX_LENGTH:256,MAX_SAFE_COMPONENT_LENGTH,MAX_SAFE_BUILD_LENGTH,MAX_SAFE_INTEGER,RELEASE_TYPES,SEMVER_SPEC_VERSION,FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2};}});var require_debug=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/internal/debug.js"(exports,module){var debug=typeof process=="object"&&process.env&&process.env.NODE_DEBUG&&/\\bsemver\\b/i.test(process.env.NODE_DEBUG)?(...args)=>console.error("SEMVER",...args):()=>{};module.exports=debug;}});var require_re=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/internal/re.js"(exports,module){var{MAX_SAFE_COMPONENT_LENGTH,MAX_SAFE_BUILD_LENGTH,MAX_LENGTH}=require_constants(),debug=require_debug();exports=module.exports={};var re=exports.re=[],safeRe=exports.safeRe=[],src=exports.src=[],safeSrc=exports.safeSrc=[],t=exports.t={},R=0,LETTERDASHNUMBER="[a-zA-Z0-9-]",safeRegexReplacements=[["\\\\s",1],["\\\\d",MAX_LENGTH],[LETTERDASHNUMBER,MAX_SAFE_BUILD_LENGTH]],makeSafeRegex=value=>{for(let[token,max]of safeRegexReplacements)value=value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);return value},createToken=(name,value,isGlobal)=>{let safe=makeSafeRegex(value),index=R++;debug(name,index,value),t[name]=index,src[index]=value,safeSrc[index]=safe,re[index]=new RegExp(value,isGlobal?"g":void 0),safeRe[index]=new RegExp(safe,isGlobal?"g":void 0);};createToken("NUMERICIDENTIFIER","0|[1-9]\\\\d*");createToken("NUMERICIDENTIFIERLOOSE","\\\\d+");createToken("NONNUMERICIDENTIFIER",`\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);createToken("MAINVERSION",`(${src[t.NUMERICIDENTIFIER]})\\\\.(${src[t.NUMERICIDENTIFIER]})\\\\.(${src[t.NUMERICIDENTIFIER]})`);createToken("MAINVERSIONLOOSE",`(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.(${src[t.NUMERICIDENTIFIERLOOSE]})`);createToken("PRERELEASEIDENTIFIER",`(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`);createToken("PRERELEASEIDENTIFIERLOOSE",`(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`);createToken("PRERELEASE",`(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`);createToken("PRERELEASELOOSE",`(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);createToken("BUILDIDENTIFIER",`${LETTERDASHNUMBER}+`);createToken("BUILD",`(?:\\\\+(${src[t.BUILDIDENTIFIER]}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`);createToken("FULLPLAIN",`v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);createToken("FULL",`^${src[t.FULLPLAIN]}$`);createToken("LOOSEPLAIN",`[v=\\\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);createToken("LOOSE",`^${src[t.LOOSEPLAIN]}$`);createToken("GTLT","((?:<|>)?=?)");createToken("XRANGEIDENTIFIERLOOSE",`${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`);createToken("XRANGEIDENTIFIER",`${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`);createToken("XRANGEPLAIN",`[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})(?:\\\\.(${src[t.XRANGEIDENTIFIER]})(?:\\\\.(${src[t.XRANGEIDENTIFIER]})(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?)?)?`);createToken("XRANGEPLAINLOOSE",`[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?)?)?`);createToken("XRANGE",`^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`);createToken("XRANGELOOSE",`^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`);createToken("COERCEPLAIN",`(^|[^\\\\d])(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}})(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`);createToken("COERCE",`${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`);createToken("COERCEFULL",src[t.COERCEPLAIN]+`(?:${src[t.PRERELEASE]})?(?:${src[t.BUILD]})?(?:$|[^\\\\d])`);createToken("COERCERTL",src[t.COERCE],!0);createToken("COERCERTLFULL",src[t.COERCEFULL],!0);createToken("LONETILDE","(?:~>?)");createToken("TILDETRIM",`(\\\\s*)${src[t.LONETILDE]}\\\\s+`,!0);exports.tildeTrimReplace="$1~";createToken("TILDE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);createToken("TILDELOOSE",`^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);createToken("LONECARET","(?:\\\\^)");createToken("CARETTRIM",`(\\\\s*)${src[t.LONECARET]}\\\\s+`,!0);exports.caretTrimReplace="$1^";createToken("CARET",`^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);createToken("CARETLOOSE",`^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);createToken("COMPARATORLOOSE",`^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`);createToken("COMPARATOR",`^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`);createToken("COMPARATORTRIM",`(\\\\s*)${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`,!0);exports.comparatorTrimReplace="$1$2$3";createToken("HYPHENRANGE",`^\\\\s*(${src[t.XRANGEPLAIN]})\\\\s+-\\\\s+(${src[t.XRANGEPLAIN]})\\\\s*$`);createToken("HYPHENRANGELOOSE",`^\\\\s*(${src[t.XRANGEPLAINLOOSE]})\\\\s+-\\\\s+(${src[t.XRANGEPLAINLOOSE]})\\\\s*$`);createToken("STAR","(<|>)?=?\\\\s*\\\\*");createToken("GTE0","^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$");createToken("GTE0PRE","^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$");}});var require_parse_options=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/internal/parse-options.js"(exports,module){var looseOption=Object.freeze({loose:!0}),emptyOpts=Object.freeze({}),parseOptions=options=>options?typeof options!="object"?looseOption:options:emptyOpts;module.exports=parseOptions;}});var require_identifiers=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/internal/identifiers.js"(exports,module){var numeric=/^[0-9]+$/,compareIdentifiers=(a,b)=>{let anum=numeric.test(a),bnum=numeric.test(b);return anum&&bnum&&(a=+a,b=+b),a===b?0:anum&&!bnum?-1:bnum&&!anum?1:a<b?-1:1},rcompareIdentifiers=(a,b)=>compareIdentifiers(b,a);module.exports={compareIdentifiers,rcompareIdentifiers};}});var require_semver=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/classes/semver.js"(exports,module){var debug=require_debug(),{MAX_LENGTH,MAX_SAFE_INTEGER}=require_constants(),{safeRe:re,safeSrc:src,t}=require_re(),parseOptions=require_parse_options(),{compareIdentifiers}=require_identifiers(),SemVer=class _SemVer{constructor(version2,options){if(options=parseOptions(options),version2 instanceof _SemVer){if(version2.loose===!!options.loose&&version2.includePrerelease===!!options.includePrerelease)return version2;version2=version2.version;}else if(typeof version2!="string")throw new TypeError(`Invalid version. Must be a string. Got type "${typeof version2}".`);if(version2.length>MAX_LENGTH)throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);debug("SemVer",version2,options),this.options=options,this.loose=!!options.loose,this.includePrerelease=!!options.includePrerelease;let m=version2.trim().match(options.loose?re[t.LOOSE]:re[t.FULL]);if(!m)throw new TypeError(`Invalid Version: ${version2}`);if(this.raw=version2,this.major=+m[1],this.minor=+m[2],this.patch=+m[3],this.major>MAX_SAFE_INTEGER||this.major<0)throw new TypeError("Invalid major version");if(this.minor>MAX_SAFE_INTEGER||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>MAX_SAFE_INTEGER||this.patch<0)throw new TypeError("Invalid patch version");m[4]?this.prerelease=m[4].split(".").map(id=>{if(/^[0-9]+$/.test(id)){let num=+id;if(num>=0&&num<MAX_SAFE_INTEGER)return num}return id}):this.prerelease=[],this.build=m[5]?m[5].split("."):[],this.format();}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(other){if(debug("SemVer.compare",this.version,this.options,other),!(other instanceof _SemVer)){if(typeof other=="string"&&other===this.version)return 0;other=new _SemVer(other,this.options);}return other.version===this.version?0:this.compareMain(other)||this.comparePre(other)}compareMain(other){return other instanceof _SemVer||(other=new _SemVer(other,this.options)),compareIdentifiers(this.major,other.major)||compareIdentifiers(this.minor,other.minor)||compareIdentifiers(this.patch,other.patch)}comparePre(other){if(other instanceof _SemVer||(other=new _SemVer(other,this.options)),this.prerelease.length&&!other.prerelease.length)return -1;if(!this.prerelease.length&&other.prerelease.length)return 1;if(!this.prerelease.length&&!other.prerelease.length)return 0;let i=0;do{let a=this.prerelease[i],b=other.prerelease[i];if(debug("prerelease compare",i,a,b),a===void 0&&b===void 0)return 0;if(b===void 0)return 1;if(a===void 0)return -1;if(a===b)continue;return compareIdentifiers(a,b)}while(++i)}compareBuild(other){other instanceof _SemVer||(other=new _SemVer(other,this.options));let i=0;do{let a=this.build[i],b=other.build[i];if(debug("build compare",i,a,b),a===void 0&&b===void 0)return 0;if(b===void 0)return 1;if(a===void 0)return -1;if(a===b)continue;return compareIdentifiers(a,b)}while(++i)}inc(release,identifier,identifierBase){if(release.startsWith("pre")){if(!identifier&&identifierBase===!1)throw new Error("invalid increment argument: identifier is empty");if(identifier){let r=new RegExp(`^${this.options.loose?src[t.PRERELEASELOOSE]:src[t.PRERELEASE]}$`),match=`-${identifier}`.match(r);if(!match||match[1]!==identifier)throw new Error(`invalid identifier: ${identifier}`)}}switch(release){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",identifier,identifierBase);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",identifier,identifierBase);break;case"prepatch":this.prerelease.length=0,this.inc("patch",identifier,identifierBase),this.inc("pre",identifier,identifierBase);break;case"prerelease":this.prerelease.length===0&&this.inc("patch",identifier,identifierBase),this.inc("pre",identifier,identifierBase);break;case"release":if(this.prerelease.length===0)throw new Error(`version ${this.raw} is not a prerelease`);this.prerelease.length=0;break;case"major":(this.minor!==0||this.patch!==0||this.prerelease.length===0)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(this.patch!==0||this.prerelease.length===0)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":this.prerelease.length===0&&this.patch++,this.prerelease=[];break;case"pre":{let base=Number(identifierBase)?1:0;if(this.prerelease.length===0)this.prerelease=[base];else {let i=this.prerelease.length;for(;--i>=0;)typeof this.prerelease[i]=="number"&&(this.prerelease[i]++,i=-2);if(i===-1){if(identifier===this.prerelease.join(".")&&identifierBase===!1)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(base);}}if(identifier){let prerelease=[identifier,base];identifierBase===!1&&(prerelease=[identifier]),compareIdentifiers(this.prerelease[0],identifier)===0?isNaN(this.prerelease[1])&&(this.prerelease=prerelease):this.prerelease=prerelease;}break}default:throw new Error(`invalid increment argument: ${release}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}};module.exports=SemVer;}});var require_parse=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/parse.js"(exports,module){var SemVer=require_semver(),parse=(version2,options,throwErrors=!1)=>{if(version2 instanceof SemVer)return version2;try{return new SemVer(version2,options)}catch(er){if(!throwErrors)return null;throw er}};module.exports=parse;}});var require_valid=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/valid.js"(exports,module){var parse=require_parse(),valid=(version2,options)=>{let v=parse(version2,options);return v?v.version:null};module.exports=valid;}});var require_clean=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/clean.js"(exports,module){var parse=require_parse(),clean=(version2,options)=>{let s=parse(version2.trim().replace(/^[=v]+/,""),options);return s?s.version:null};module.exports=clean;}});var require_inc=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/inc.js"(exports,module){var SemVer=require_semver(),inc=(version2,release,options,identifier,identifierBase)=>{typeof options=="string"&&(identifierBase=identifier,identifier=options,options=void 0);try{return new SemVer(version2 instanceof SemVer?version2.version:version2,options).inc(release,identifier,identifierBase).version}catch{return null}};module.exports=inc;}});var require_diff=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/diff.js"(exports,module){var parse=require_parse(),diff=(version1,version2)=>{let v1=parse(version1,null,!0),v2=parse(version2,null,!0),comparison=v1.compare(v2);if(comparison===0)return null;let v1Higher=comparison>0,highVersion=v1Higher?v1:v2,lowVersion=v1Higher?v2:v1,highHasPre=!!highVersion.prerelease.length;if(!!lowVersion.prerelease.length&&!highHasPre){if(!lowVersion.patch&&!lowVersion.minor)return "major";if(lowVersion.compareMain(highVersion)===0)return lowVersion.minor&&!lowVersion.patch?"minor":"patch"}let prefix=highHasPre?"pre":"";return v1.major!==v2.major?prefix+"major":v1.minor!==v2.minor?prefix+"minor":v1.patch!==v2.patch?prefix+"patch":"prerelease"};module.exports=diff;}});var require_major=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/major.js"(exports,module){var SemVer=require_semver(),major=(a,loose)=>new SemVer(a,loose).major;module.exports=major;}});var require_minor=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/minor.js"(exports,module){var SemVer=require_semver(),minor=(a,loose)=>new SemVer(a,loose).minor;module.exports=minor;}});var require_patch=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/patch.js"(exports,module){var SemVer=require_semver(),patch=(a,loose)=>new SemVer(a,loose).patch;module.exports=patch;}});var require_prerelease=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/prerelease.js"(exports,module){var parse=require_parse(),prerelease=(version2,options)=>{let parsed=parse(version2,options);return parsed&&parsed.prerelease.length?parsed.prerelease:null};module.exports=prerelease;}});var require_compare=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/compare.js"(exports,module){var SemVer=require_semver(),compare=(a,b,loose)=>new SemVer(a,loose).compare(new SemVer(b,loose));module.exports=compare;}});var require_rcompare=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/rcompare.js"(exports,module){var compare=require_compare(),rcompare=(a,b,loose)=>compare(b,a,loose);module.exports=rcompare;}});var require_compare_loose=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/compare-loose.js"(exports,module){var compare=require_compare(),compareLoose=(a,b)=>compare(a,b,!0);module.exports=compareLoose;}});var require_compare_build=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/compare-build.js"(exports,module){var SemVer=require_semver(),compareBuild=(a,b,loose)=>{let versionA=new SemVer(a,loose),versionB=new SemVer(b,loose);return versionA.compare(versionB)||versionA.compareBuild(versionB)};module.exports=compareBuild;}});var require_sort=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/sort.js"(exports,module){var compareBuild=require_compare_build(),sort=(list,loose)=>list.sort((a,b)=>compareBuild(a,b,loose));module.exports=sort;}});var require_rsort=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/rsort.js"(exports,module){var compareBuild=require_compare_build(),rsort=(list,loose)=>list.sort((a,b)=>compareBuild(b,a,loose));module.exports=rsort;}});var require_gt=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/gt.js"(exports,module){var compare=require_compare(),gt=(a,b,loose)=>compare(a,b,loose)>0;module.exports=gt;}});var require_lt=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/lt.js"(exports,module){var compare=require_compare(),lt=(a,b,loose)=>compare(a,b,loose)<0;module.exports=lt;}});var require_eq=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/eq.js"(exports,module){var compare=require_compare(),eq=(a,b,loose)=>compare(a,b,loose)===0;module.exports=eq;}});var require_neq=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/neq.js"(exports,module){var compare=require_compare(),neq=(a,b,loose)=>compare(a,b,loose)!==0;module.exports=neq;}});var require_gte=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/gte.js"(exports,module){var compare=require_compare(),gte=(a,b,loose)=>compare(a,b,loose)>=0;module.exports=gte;}});var require_lte=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/lte.js"(exports,module){var compare=require_compare(),lte=(a,b,loose)=>compare(a,b,loose)<=0;module.exports=lte;}});var require_cmp=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/cmp.js"(exports,module){var eq=require_eq(),neq=require_neq(),gt=require_gt(),gte=require_gte(),lt=require_lt(),lte=require_lte(),cmp=(a,op,b,loose)=>{switch(op){case"===":return typeof a=="object"&&(a=a.version),typeof b=="object"&&(b=b.version),a===b;case"!==":return typeof a=="object"&&(a=a.version),typeof b=="object"&&(b=b.version),a!==b;case"":case"=":case"==":return eq(a,b,loose);case"!=":return neq(a,b,loose);case">":return gt(a,b,loose);case">=":return gte(a,b,loose);case"<":return lt(a,b,loose);case"<=":return lte(a,b,loose);default:throw new TypeError(`Invalid operator: ${op}`)}};module.exports=cmp;}});var require_coerce=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/coerce.js"(exports,module){var SemVer=require_semver(),parse=require_parse(),{safeRe:re,t}=require_re(),coerce=(version2,options)=>{if(version2 instanceof SemVer)return version2;if(typeof version2=="number"&&(version2=String(version2)),typeof version2!="string")return null;options=options||{};let match=null;if(!options.rtl)match=version2.match(options.includePrerelease?re[t.COERCEFULL]:re[t.COERCE]);else {let coerceRtlRegex=options.includePrerelease?re[t.COERCERTLFULL]:re[t.COERCERTL],next;for(;(next=coerceRtlRegex.exec(version2))&&(!match||match.index+match[0].length!==version2.length);)(!match||next.index+next[0].length!==match.index+match[0].length)&&(match=next),coerceRtlRegex.lastIndex=next.index+next[1].length+next[2].length;coerceRtlRegex.lastIndex=-1;}if(match===null)return null;let major=match[2],minor=match[3]||"0",patch=match[4]||"0",prerelease=options.includePrerelease&&match[5]?`-${match[5]}`:"",build=options.includePrerelease&&match[6]?`+${match[6]}`:"";return parse(`${major}.${minor}.${patch}${prerelease}${build}`,options)};module.exports=coerce;}});var require_lrucache=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/internal/lrucache.js"(exports,module){var LRUCache=class{constructor(){this.max=1e3,this.map=new Map;}get(key){let value=this.map.get(key);if(value!==void 0)return this.map.delete(key),this.map.set(key,value),value}delete(key){return this.map.delete(key)}set(key,value){if(!this.delete(key)&&value!==void 0){if(this.map.size>=this.max){let firstKey=this.map.keys().next().value;this.delete(firstKey);}this.map.set(key,value);}return this}};module.exports=LRUCache;}});var require_range=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/classes/range.js"(exports,module){var SPACE_CHARACTERS=/\\s+/g,Range=class _Range{constructor(range,options){if(options=parseOptions(options),range instanceof _Range)return range.loose===!!options.loose&&range.includePrerelease===!!options.includePrerelease?range:new _Range(range.raw,options);if(range instanceof Comparator)return this.raw=range.value,this.set=[[range]],this.formatted=void 0,this;if(this.options=options,this.loose=!!options.loose,this.includePrerelease=!!options.includePrerelease,this.raw=range.trim().replace(SPACE_CHARACTERS," "),this.set=this.raw.split("||").map(r=>this.parseRange(r.trim())).filter(c=>c.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){let first=this.set[0];if(this.set=this.set.filter(c=>!isNullSet(c[0])),this.set.length===0)this.set=[first];else if(this.set.length>1){for(let c of this.set)if(c.length===1&&isAny(c[0])){this.set=[c];break}}}this.formatted=void 0;}get range(){if(this.formatted===void 0){this.formatted="";for(let i=0;i<this.set.length;i++){i>0&&(this.formatted+="||");let comps=this.set[i];for(let k=0;k<comps.length;k++)k>0&&(this.formatted+=" "),this.formatted+=comps[k].toString().trim();}}return this.formatted}format(){return this.range}toString(){return this.range}parseRange(range){let memoKey=((this.options.includePrerelease&&FLAG_INCLUDE_PRERELEASE)|(this.options.loose&&FLAG_LOOSE))+":"+range,cached=cache.get(memoKey);if(cached)return cached;let loose=this.options.loose,hr=loose?re[t.HYPHENRANGELOOSE]:re[t.HYPHENRANGE];range=range.replace(hr,hyphenReplace(this.options.includePrerelease)),debug("hyphen replace",range),range=range.replace(re[t.COMPARATORTRIM],comparatorTrimReplace),debug("comparator trim",range),range=range.replace(re[t.TILDETRIM],tildeTrimReplace),debug("tilde trim",range),range=range.replace(re[t.CARETTRIM],caretTrimReplace),debug("caret trim",range);let rangeList=range.split(" ").map(comp=>parseComparator(comp,this.options)).join(" ").split(/\\s+/).map(comp=>replaceGTE0(comp,this.options));loose&&(rangeList=rangeList.filter(comp=>(debug("loose invalid filter",comp,this.options),!!comp.match(re[t.COMPARATORLOOSE])))),debug("range list",rangeList);let rangeMap=new Map,comparators=rangeList.map(comp=>new Comparator(comp,this.options));for(let comp of comparators){if(isNullSet(comp))return [comp];rangeMap.set(comp.value,comp);}rangeMap.size>1&&rangeMap.has("")&&rangeMap.delete("");let result=[...rangeMap.values()];return cache.set(memoKey,result),result}intersects(range,options){if(!(range instanceof _Range))throw new TypeError("a Range is required");return this.set.some(thisComparators=>isSatisfiable(thisComparators,options)&&range.set.some(rangeComparators=>isSatisfiable(rangeComparators,options)&&thisComparators.every(thisComparator=>rangeComparators.every(rangeComparator=>thisComparator.intersects(rangeComparator,options)))))}test(version2){if(!version2)return !1;if(typeof version2=="string")try{version2=new SemVer(version2,this.options);}catch{return !1}for(let i=0;i<this.set.length;i++)if(testSet(this.set[i],version2,this.options))return !0;return !1}};module.exports=Range;var LRU=require_lrucache(),cache=new LRU,parseOptions=require_parse_options(),Comparator=require_comparator(),debug=require_debug(),SemVer=require_semver(),{safeRe:re,t,comparatorTrimReplace,tildeTrimReplace,caretTrimReplace}=require_re(),{FLAG_INCLUDE_PRERELEASE,FLAG_LOOSE}=require_constants(),isNullSet=c=>c.value==="<0.0.0-0",isAny=c=>c.value==="",isSatisfiable=(comparators,options)=>{let result=!0,remainingComparators=comparators.slice(),testComparator=remainingComparators.pop();for(;result&&remainingComparators.length;)result=remainingComparators.every(otherComparator=>testComparator.intersects(otherComparator,options)),testComparator=remainingComparators.pop();return result},parseComparator=(comp,options)=>(debug("comp",comp,options),comp=replaceCarets(comp,options),debug("caret",comp),comp=replaceTildes(comp,options),debug("tildes",comp),comp=replaceXRanges(comp,options),debug("xrange",comp),comp=replaceStars(comp,options),debug("stars",comp),comp),isX=id=>!id||id.toLowerCase()==="x"||id==="*",replaceTildes=(comp,options)=>comp.trim().split(/\\s+/).map(c=>replaceTilde(c,options)).join(" "),replaceTilde=(comp,options)=>{let r=options.loose?re[t.TILDELOOSE]:re[t.TILDE];return comp.replace(r,(_,M,m,p,pr)=>{debug("tilde",comp,_,M,m,p,pr);let ret;return isX(M)?ret="":isX(m)?ret=`>=${M}.0.0 <${+M+1}.0.0-0`:isX(p)?ret=`>=${M}.${m}.0 <${M}.${+m+1}.0-0`:pr?(debug("replaceTilde pr",pr),ret=`>=${M}.${m}.${p}-${pr} <${M}.${+m+1}.0-0`):ret=`>=${M}.${m}.${p} <${M}.${+m+1}.0-0`,debug("tilde return",ret),ret})},replaceCarets=(comp,options)=>comp.trim().split(/\\s+/).map(c=>replaceCaret(c,options)).join(" "),replaceCaret=(comp,options)=>{debug("caret",comp,options);let r=options.loose?re[t.CARETLOOSE]:re[t.CARET],z=options.includePrerelease?"-0":"";return comp.replace(r,(_,M,m,p,pr)=>{debug("caret",comp,_,M,m,p,pr);let ret;return isX(M)?ret="":isX(m)?ret=`>=${M}.0.0${z} <${+M+1}.0.0-0`:isX(p)?M==="0"?ret=`>=${M}.${m}.0${z} <${M}.${+m+1}.0-0`:ret=`>=${M}.${m}.0${z} <${+M+1}.0.0-0`:pr?(debug("replaceCaret pr",pr),M==="0"?m==="0"?ret=`>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p+1}-0`:ret=`>=${M}.${m}.${p}-${pr} <${M}.${+m+1}.0-0`:ret=`>=${M}.${m}.${p}-${pr} <${+M+1}.0.0-0`):(debug("no pr"),M==="0"?m==="0"?ret=`>=${M}.${m}.${p}${z} <${M}.${m}.${+p+1}-0`:ret=`>=${M}.${m}.${p}${z} <${M}.${+m+1}.0-0`:ret=`>=${M}.${m}.${p} <${+M+1}.0.0-0`),debug("caret return",ret),ret})},replaceXRanges=(comp,options)=>(debug("replaceXRanges",comp,options),comp.split(/\\s+/).map(c=>replaceXRange(c,options)).join(" ")),replaceXRange=(comp,options)=>{comp=comp.trim();let r=options.loose?re[t.XRANGELOOSE]:re[t.XRANGE];return comp.replace(r,(ret,gtlt,M,m,p,pr)=>{debug("xRange",comp,ret,gtlt,M,m,p,pr);let xM=isX(M),xm=xM||isX(m),xp=xm||isX(p),anyX=xp;return gtlt==="="&&anyX&&(gtlt=""),pr=options.includePrerelease?"-0":"",xM?gtlt===">"||gtlt==="<"?ret="<0.0.0-0":ret="*":gtlt&&anyX?(xm&&(m=0),p=0,gtlt===">"?(gtlt=">=",xm?(M=+M+1,m=0,p=0):(m=+m+1,p=0)):gtlt==="<="&&(gtlt="<",xm?M=+M+1:m=+m+1),gtlt==="<"&&(pr="-0"),ret=`${gtlt+M}.${m}.${p}${pr}`):xm?ret=`>=${M}.0.0${pr} <${+M+1}.0.0-0`:xp&&(ret=`>=${M}.${m}.0${pr} <${M}.${+m+1}.0-0`),debug("xRange return",ret),ret})},replaceStars=(comp,options)=>(debug("replaceStars",comp,options),comp.trim().replace(re[t.STAR],"")),replaceGTE0=(comp,options)=>(debug("replaceGTE0",comp,options),comp.trim().replace(re[options.includePrerelease?t.GTE0PRE:t.GTE0],"")),hyphenReplace=incPr=>($0,from,fM,fm,fp,fpr,fb,to,tM,tm,tp,tpr)=>(isX(fM)?from="":isX(fm)?from=`>=${fM}.0.0${incPr?"-0":""}`:isX(fp)?from=`>=${fM}.${fm}.0${incPr?"-0":""}`:fpr?from=`>=${from}`:from=`>=${from}${incPr?"-0":""}`,isX(tM)?to="":isX(tm)?to=`<${+tM+1}.0.0-0`:isX(tp)?to=`<${tM}.${+tm+1}.0-0`:tpr?to=`<=${tM}.${tm}.${tp}-${tpr}`:incPr?to=`<${tM}.${tm}.${+tp+1}-0`:to=`<=${to}`,`${from} ${to}`.trim()),testSet=(set,version2,options)=>{for(let i=0;i<set.length;i++)if(!set[i].test(version2))return !1;if(version2.prerelease.length&&!options.includePrerelease){for(let i=0;i<set.length;i++)if(debug(set[i].semver),set[i].semver!==Comparator.ANY&&set[i].semver.prerelease.length>0){let allowed=set[i].semver;if(allowed.major===version2.major&&allowed.minor===version2.minor&&allowed.patch===version2.patch)return !0}return !1}return !0};}});var require_comparator=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/classes/comparator.js"(exports,module){var ANY=Symbol("SemVer ANY"),Comparator=class _Comparator{static get ANY(){return ANY}constructor(comp,options){if(options=parseOptions(options),comp instanceof _Comparator){if(comp.loose===!!options.loose)return comp;comp=comp.value;}comp=comp.trim().split(/\\s+/).join(" "),debug("comparator",comp,options),this.options=options,this.loose=!!options.loose,this.parse(comp),this.semver===ANY?this.value="":this.value=this.operator+this.semver.version,debug("comp",this);}parse(comp){let r=this.options.loose?re[t.COMPARATORLOOSE]:re[t.COMPARATOR],m=comp.match(r);if(!m)throw new TypeError(`Invalid comparator: ${comp}`);this.operator=m[1]!==void 0?m[1]:"",this.operator==="="&&(this.operator=""),m[2]?this.semver=new SemVer(m[2],this.options.loose):this.semver=ANY;}toString(){return this.value}test(version2){if(debug("Comparator.test",version2,this.options.loose),this.semver===ANY||version2===ANY)return !0;if(typeof version2=="string")try{version2=new SemVer(version2,this.options);}catch{return !1}return cmp(version2,this.operator,this.semver,this.options)}intersects(comp,options){if(!(comp instanceof _Comparator))throw new TypeError("a Comparator is required");return this.operator===""?this.value===""?!0:new Range(comp.value,options).test(this.value):comp.operator===""?comp.value===""?!0:new Range(this.value,options).test(comp.semver):(options=parseOptions(options),options.includePrerelease&&(this.value==="<0.0.0-0"||comp.value==="<0.0.0-0")||!options.includePrerelease&&(this.value.startsWith("<0.0.0")||comp.value.startsWith("<0.0.0"))?!1:!!(this.operator.startsWith(">")&&comp.operator.startsWith(">")||this.operator.startsWith("<")&&comp.operator.startsWith("<")||this.semver.version===comp.semver.version&&this.operator.includes("=")&&comp.operator.includes("=")||cmp(this.semver,"<",comp.semver,options)&&this.operator.startsWith(">")&&comp.operator.startsWith("<")||cmp(this.semver,">",comp.semver,options)&&this.operator.startsWith("<")&&comp.operator.startsWith(">")))}};module.exports=Comparator;var parseOptions=require_parse_options(),{safeRe:re,t}=require_re(),cmp=require_cmp(),debug=require_debug(),SemVer=require_semver(),Range=require_range();}});var require_satisfies=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/functions/satisfies.js"(exports,module){var Range=require_range(),satisfies=(version2,range,options)=>{try{range=new Range(range,options);}catch{return !1}return range.test(version2)};module.exports=satisfies;}});var require_to_comparators=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/to-comparators.js"(exports,module){var Range=require_range(),toComparators=(range,options)=>new Range(range,options).set.map(comp=>comp.map(c=>c.value).join(" ").trim().split(" "));module.exports=toComparators;}});var require_max_satisfying=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/max-satisfying.js"(exports,module){var SemVer=require_semver(),Range=require_range(),maxSatisfying=(versions,range,options)=>{let max=null,maxSV=null,rangeObj=null;try{rangeObj=new Range(range,options);}catch{return null}return versions.forEach(v=>{rangeObj.test(v)&&(!max||maxSV.compare(v)===-1)&&(max=v,maxSV=new SemVer(max,options));}),max};module.exports=maxSatisfying;}});var require_min_satisfying=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/min-satisfying.js"(exports,module){var SemVer=require_semver(),Range=require_range(),minSatisfying=(versions,range,options)=>{let min=null,minSV=null,rangeObj=null;try{rangeObj=new Range(range,options);}catch{return null}return versions.forEach(v=>{rangeObj.test(v)&&(!min||minSV.compare(v)===1)&&(min=v,minSV=new SemVer(min,options));}),min};module.exports=minSatisfying;}});var require_min_version=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/min-version.js"(exports,module){var SemVer=require_semver(),Range=require_range(),gt=require_gt(),minVersion=(range,loose)=>{range=new Range(range,loose);let minver=new SemVer("0.0.0");if(range.test(minver)||(minver=new SemVer("0.0.0-0"),range.test(minver)))return minver;minver=null;for(let i=0;i<range.set.length;++i){let comparators=range.set[i],setMin=null;comparators.forEach(comparator=>{let compver=new SemVer(comparator.semver.version);switch(comparator.operator){case">":compver.prerelease.length===0?compver.patch++:compver.prerelease.push(0),compver.raw=compver.format();case"":case">=":(!setMin||gt(compver,setMin))&&(setMin=compver);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${comparator.operator}`)}}),setMin&&(!minver||gt(minver,setMin))&&(minver=setMin);}return minver&&range.test(minver)?minver:null};module.exports=minVersion;}});var require_valid2=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/valid.js"(exports,module){var Range=require_range(),validRange=(range,options)=>{try{return new Range(range,options).range||"*"}catch{return null}};module.exports=validRange;}});var require_outside=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/outside.js"(exports,module){var SemVer=require_semver(),Comparator=require_comparator(),{ANY}=Comparator,Range=require_range(),satisfies=require_satisfies(),gt=require_gt(),lt=require_lt(),lte=require_lte(),gte=require_gte(),outside=(version2,range,hilo,options)=>{version2=new SemVer(version2,options),range=new Range(range,options);let gtfn,ltefn,ltfn,comp,ecomp;switch(hilo){case">":gtfn=gt,ltefn=lte,ltfn=lt,comp=">",ecomp=">=";break;case"<":gtfn=lt,ltefn=gte,ltfn=gt,comp="<",ecomp="<=";break;default:throw new TypeError(\'Must provide a hilo val of "<" or ">"\')}if(satisfies(version2,range,options))return !1;for(let i=0;i<range.set.length;++i){let comparators=range.set[i],high=null,low=null;if(comparators.forEach(comparator=>{comparator.semver===ANY&&(comparator=new Comparator(">=0.0.0")),high=high||comparator,low=low||comparator,gtfn(comparator.semver,high.semver,options)?high=comparator:ltfn(comparator.semver,low.semver,options)&&(low=comparator);}),high.operator===comp||high.operator===ecomp||(!low.operator||low.operator===comp)&&ltefn(version2,low.semver))return !1;if(low.operator===ecomp&&ltfn(version2,low.semver))return !1}return !0};module.exports=outside;}});var require_gtr=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/gtr.js"(exports,module){var outside=require_outside(),gtr=(version2,range,options)=>outside(version2,range,">",options);module.exports=gtr;}});var require_ltr=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/ltr.js"(exports,module){var outside=require_outside(),ltr=(version2,range,options)=>outside(version2,range,"<",options);module.exports=ltr;}});var require_intersects=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/intersects.js"(exports,module){var Range=require_range(),intersects=(r1,r2,options)=>(r1=new Range(r1,options),r2=new Range(r2,options),r1.intersects(r2,options));module.exports=intersects;}});var require_simplify=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/simplify.js"(exports,module){var satisfies=require_satisfies(),compare=require_compare();module.exports=(versions,range,options)=>{let set=[],first=null,prev=null,v=versions.sort((a,b)=>compare(a,b,options));for(let version2 of v)satisfies(version2,range,options)?(prev=version2,first||(first=version2)):(prev&&set.push([first,prev]),prev=null,first=null);first&&set.push([first,null]);let ranges=[];for(let[min,max]of set)min===max?ranges.push(min):!max&&min===v[0]?ranges.push("*"):max?min===v[0]?ranges.push(`<=${max}`):ranges.push(`${min} - ${max}`):ranges.push(`>=${min}`);let simplified=ranges.join(" || "),original=typeof range.raw=="string"?range.raw:String(range);return simplified.length<original.length?simplified:range};}});var require_subset=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/ranges/subset.js"(exports,module){var Range=require_range(),Comparator=require_comparator(),{ANY}=Comparator,satisfies=require_satisfies(),compare=require_compare(),subset=(sub,dom,options={})=>{if(sub===dom)return !0;sub=new Range(sub,options),dom=new Range(dom,options);let sawNonNull=!1;OUTER:for(let simpleSub of sub.set){for(let simpleDom of dom.set){let isSub=simpleSubset(simpleSub,simpleDom,options);if(sawNonNull=sawNonNull||isSub!==null,isSub)continue OUTER}if(sawNonNull)return !1}return !0},minimumVersionWithPreRelease=[new Comparator(">=0.0.0-0")],minimumVersion=[new Comparator(">=0.0.0")],simpleSubset=(sub,dom,options)=>{if(sub===dom)return !0;if(sub.length===1&&sub[0].semver===ANY){if(dom.length===1&&dom[0].semver===ANY)return !0;options.includePrerelease?sub=minimumVersionWithPreRelease:sub=minimumVersion;}if(dom.length===1&&dom[0].semver===ANY){if(options.includePrerelease)return !0;dom=minimumVersion;}let eqSet=new Set,gt,lt;for(let c of sub)c.operator===">"||c.operator===">="?gt=higherGT(gt,c,options):c.operator==="<"||c.operator==="<="?lt=lowerLT(lt,c,options):eqSet.add(c.semver);if(eqSet.size>1)return null;let gtltComp;if(gt&&lt){if(gtltComp=compare(gt.semver,lt.semver,options),gtltComp>0)return null;if(gtltComp===0&&(gt.operator!==">="||lt.operator!=="<="))return null}for(let eq of eqSet){if(gt&&!satisfies(eq,String(gt),options)||lt&&!satisfies(eq,String(lt),options))return null;for(let c of dom)if(!satisfies(eq,String(c),options))return !1;return !0}let higher,lower,hasDomLT,hasDomGT,needDomLTPre=lt&&!options.includePrerelease&&lt.semver.prerelease.length?lt.semver:!1,needDomGTPre=gt&&!options.includePrerelease&&gt.semver.prerelease.length?gt.semver:!1;needDomLTPre&&needDomLTPre.prerelease.length===1&&lt.operator==="<"&&needDomLTPre.prerelease[0]===0&&(needDomLTPre=!1);for(let c of dom){if(hasDomGT=hasDomGT||c.operator===">"||c.operator===">=",hasDomLT=hasDomLT||c.operator==="<"||c.operator==="<=",gt){if(needDomGTPre&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===needDomGTPre.major&&c.semver.minor===needDomGTPre.minor&&c.semver.patch===needDomGTPre.patch&&(needDomGTPre=!1),c.operator===">"||c.operator===">="){if(higher=higherGT(gt,c,options),higher===c&&higher!==gt)return !1}else if(gt.operator===">="&&!satisfies(gt.semver,String(c),options))return !1}if(lt){if(needDomLTPre&&c.semver.prerelease&&c.semver.prerelease.length&&c.semver.major===needDomLTPre.major&&c.semver.minor===needDomLTPre.minor&&c.semver.patch===needDomLTPre.patch&&(needDomLTPre=!1),c.operator==="<"||c.operator==="<="){if(lower=lowerLT(lt,c,options),lower===c&&lower!==lt)return !1}else if(lt.operator==="<="&&!satisfies(lt.semver,String(c),options))return !1}if(!c.operator&&(lt||gt)&&gtltComp!==0)return !1}return !(gt&&hasDomLT&&!lt&&gtltComp!==0||lt&&hasDomGT&&!gt&&gtltComp!==0||needDomGTPre||needDomLTPre)},higherGT=(a,b,options)=>{if(!a)return b;let comp=compare(a.semver,b.semver,options);return comp>0?a:comp<0||b.operator===">"&&a.operator===">="?b:a},lowerLT=(a,b,options)=>{if(!a)return b;let comp=compare(a.semver,b.semver,options);return comp<0?a:comp>0||b.operator==="<"&&a.operator==="<="?b:a};module.exports=subset;}});var require_semver2=(0,chunk_XP5HYGXS/* __commonJS */.P$)({"../../node_modules/semver/index.js"(exports,module){var internalRe=require_re(),constants=require_constants(),SemVer=require_semver(),identifiers=require_identifiers(),parse=require_parse(),valid=require_valid(),clean=require_clean(),inc=require_inc(),diff=require_diff(),major=require_major(),minor=require_minor(),patch=require_patch(),prerelease=require_prerelease(),compare=require_compare(),rcompare=require_rcompare(),compareLoose=require_compare_loose(),compareBuild=require_compare_build(),sort=require_sort(),rsort=require_rsort(),gt=require_gt(),lt=require_lt(),eq=require_eq(),neq=require_neq(),gte=require_gte(),lte=require_lte(),cmp=require_cmp(),coerce=require_coerce(),Comparator=require_comparator(),Range=require_range(),satisfies=require_satisfies(),toComparators=require_to_comparators(),maxSatisfying=require_max_satisfying(),minSatisfying=require_min_satisfying(),minVersion=require_min_version(),validRange=require_valid2(),outside=require_outside(),gtr=require_gtr(),ltr=require_ltr(),intersects=require_intersects(),simplifyRange=require_simplify(),subset=require_subset();module.exports={parse,valid,clean,inc,diff,major,minor,patch,prerelease,compare,rcompare,compareLoose,compareBuild,sort,rsort,gt,lt,eq,neq,gte,lte,cmp,coerce,Comparator,Range,satisfies,toComparators,maxSatisfying,minSatisfying,minVersion,validRange,outside,gtr,ltr,intersects,simplifyRange,subset,SemVer,re:internalRe.re,src:internalRe.src,tokens:internalRe.t,SEMVER_SPEC_VERSION:constants.SEMVER_SPEC_VERSION,RELEASE_TYPES:constants.RELEASE_TYPES,compareIdentifiers:identifiers.compareIdentifiers,rcompareIdentifiers:identifiers.rcompareIdentifiers};}});var entry_preview_exports={};(0,chunk_XP5HYGXS/* __export */.VA)(entry_preview_exports,{beforeAll:()=>beforeAll,decorators:()=>decorators,mount:()=>mount,parameters:()=>parameters,render:()=>render,renderToCanvas:()=>renderToCanvas});var import_semver=(0,chunk_XP5HYGXS/* __toESM */.f1)(require_semver2());var clonedReact={...react_namespaceObject};function setReactActEnvironment(isReactActEnvironment){globalThis.IS_REACT_ACT_ENVIRONMENT=isReactActEnvironment;}function getReactActEnvironment(){return globalThis.IS_REACT_ACT_ENVIRONMENT}function withGlobalActEnvironment(actImplementation){return callback=>{let previousActEnvironment=getReactActEnvironment();setReactActEnvironment(!0);try{let callbackNeedsToBeAwaited=!1,actResult=actImplementation(()=>{let result=callback();return result!==null&&typeof result=="object"&&typeof result.then=="function"&&(callbackNeedsToBeAwaited=!0),result});if(callbackNeedsToBeAwaited){let thenable=actResult;return {then:(resolve,reject)=>{thenable.then(returnValue=>{setReactActEnvironment(previousActEnvironment),resolve(returnValue);},error=>{setReactActEnvironment(previousActEnvironment),reject(error);});}}}else return setReactActEnvironment(previousActEnvironment),actResult}catch(error){throw setReactActEnvironment(previousActEnvironment),error}}}var getAct=async()=>{let reactAct;if(typeof clonedReact.act=="function")reactAct=clonedReact.act;else {let deprecatedTestUtils=await __webpack_require__.e(/* import() */ 690).then(__webpack_require__.t.bind(__webpack_require__, "../../node_modules/.pnpm/react-dom@19.1.0_react@19.1.0/node_modules/react-dom/test-utils.js", 19));reactAct=deprecatedTestUtils?.default?.act??deprecatedTestUtils.act;}return  true?cb=>cb():0};var render=(args,context)=>{let{id,component:Component}=context;if(!Component)throw new Error(`Unable to render story ${id} as the component annotation is missing from the default export`);return react.createElement(Component,{...args})};var{FRAMEWORK_OPTIONS}=external_STORYBOOK_MODULE_GLOBAL_.global,ErrorBoundary=class extends react.Component{constructor(){super(...arguments);this.state={hasError:!1};}static getDerivedStateFromError(){return {hasError:!0}}componentDidMount(){let{hasError}=this.state,{showMain}=this.props;hasError||showMain();}componentDidCatch(err){let{showException}=this.props;showException(err);}render(){let{hasError}=this.state,{children}=this.props;return hasError?null:children}},Wrapper=FRAMEWORK_OPTIONS?.strictMode?react.StrictMode:react.Fragment,actQueue=[],isActing=!1,processActQueue=async()=>{if(isActing||actQueue.length===0)return;isActing=!0;let actTask=actQueue.shift();actTask&&await actTask(),isActing=!1,processActQueue();};async function renderToCanvas({storyContext,unboundStoryFn,showMain,showException,forceRemount},canvasElement){let{renderElement,unmountElement}=await __webpack_require__.e(/* import() */ 619).then(__webpack_require__.bind(__webpack_require__, "../../node_modules/.pnpm/@storybook+react-dom-shim@8.6.12_react-dom@19.1.0_react@19.1.0__react@19.1.0_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/react-dom-shim/dist/react-18.mjs")),Story=unboundStoryFn,content=storyContext.parameters.__isPortableStory?react.createElement(Story,{...storyContext}):react.createElement(ErrorBoundary,{showMain,showException},react.createElement(Story,{...storyContext})),element=Wrapper?react.createElement(Wrapper,null,content):content;forceRemount&&unmountElement(canvasElement);let act=await getAct();return await new Promise(async(resolve,reject)=>{actQueue.push(async()=>{try{await act(async()=>{await renderElement(element,canvasElement,storyContext?.parameters?.react?.rootOptions);}),resolve();}catch(e){reject(e);}}),processActQueue();}),async()=>{await act(()=>{unmountElement(canvasElement);});}}var mount=context=>async ui=>(ui!=null&&(context.originalStoryFn=()=>ui),await context.renderToCanvas(),context.canvas);var parameters={renderer:"react"},decorators=[(story,context)=>{if(!context.parameters?.react?.rsc)return story();let major=import_semver.default.major(react.version),minor=import_semver.default.minor(react.version);if(major<18||major===18&&minor<3)throw new Error("React Server Components require React >= 18.3");return react.createElement(react.Suspense,null,story())}],beforeAll=async()=>{try{let{configure}=await Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, "../../node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/test/dist/index.mjs")),act=await getAct();configure({unstable_advanceTimersWrapper:cb=>act(cb),asyncWrapper:async cb=>{let previousActEnvironment=getReactActEnvironment();setReactActEnvironment(!1);try{let result=await cb();return await new Promise(resolve=>{setTimeout(()=>{resolve();},0),jestFakeTimersAreEnabled()&&jest.advanceTimersByTime(0);}),result}finally{setReactActEnvironment(previousActEnvironment);}},eventWrapper:cb=>{let result;return act(()=>(result=cb(),result)),result}});}catch{}};function jestFakeTimersAreEnabled(){return typeof jest<"u"&&jest!==null?setTimeout._isMockFunction===!0||Object.prototype.hasOwnProperty.call(setTimeout,"clock"):!1}\n\n\n\n;// ../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/entry-preview.mjs\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+react@8.6.12_@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3___react-_0dce2990fd91a9582b3985a6785997ca/node_modules/@storybook/react/dist/entry-preview.mjs\n')},"../../node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/test/dist/index.mjs":(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E3: () => (/* binding */ expect3),\n/* harmony export */   Q4: () => (/* binding */ userEvent2),\n/* harmony export */   configure: () => (/* binding */ configure2),\n/* harmony export */   ux: () => (/* binding */ within)\n/* harmony export */ });\n/* unused harmony exports buildQueries, clearAllMocks, createEvent, findAllByAltText, findAllByDisplayValue, findAllByLabelText, findAllByPlaceholderText, findAllByRole, findAllByTestId, findAllByText, findAllByTitle, findByAltText, findByDisplayValue, findByLabelText, findByPlaceholderText, findByRole, findByTestId, findByText, findByTitle, fireEvent, fn, getAllByAltText, getAllByDisplayValue, getAllByLabelText, getAllByPlaceholderText, getAllByRole, getAllByTestId, getAllByText, getAllByTitle, getByAltText, getByDisplayValue, getByLabelText, getByPlaceholderText, getByRole, getByTestId, getByText, getByTitle, getConfig, getDefaultNormalizer, getElementError, getNodeText, getQueriesForElement, getRoles, getSuggestedQuery, isInaccessible, isMockFunction, logDOM, logRoles, mocked, mocks, onMockCall, prettyDOM, prettyFormat, queries, queryAllByAltText, queryAllByAttribute, queryAllByDisplayValue, queryAllByLabelText, queryAllByPlaceholderText, queryAllByRole, queryAllByTestId, queryAllByText, queryAllByTitle, queryByAltText, queryByAttribute, queryByDisplayValue, queryByLabelText, queryByPlaceholderText, queryByRole, queryByTestId, queryByText, queryByTitle, queryHelpers, resetAllMocks, restoreAllMocks, screen, spyOn, traverseArgs, waitFor, waitForElementToBeRemoved */\n/* harmony import */ var _storybook_global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@storybook/global");\n/* harmony import */ var _storybook_global__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_storybook_global__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _storybook_instrumenter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../../node_modules/.pnpm/@storybook+instrumenter@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/instrumenter/dist/index.mjs");\n/* harmony import */ var storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("storybook/internal/client-logger");\n/* harmony import */ var storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_1__);\n/* module decorator */ module = __webpack_require__.hmd(module);\n/* provided dependency */ var process = __webpack_require__("../../node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");\n\n\n\n\nvar __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __require=(x2=> true?__webpack_require__("../../node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/test/dist sync recursive"):0)(function(x2){if(true)return __webpack_require__("../../node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/test/dist sync recursive").apply(this,arguments);throw Error(\'Dynamic require of "\'+x2+\'" is not supported\')});var __commonJS=(cb,mod)=>function(){return mod||(0, cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports};var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0});},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod));var require_min_indent=__commonJS({"../../node_modules/min-indent/index.js"(exports,module2){module2.exports=string=>{let match=string.match(/^[ \\t]*(?=\\S)/gm);return match?match.reduce((r,a2)=>Math.min(r,a2.length),1/0):0};}});var require_strip_indent=__commonJS({"../../node_modules/strip-indent/index.js"(exports,module2){var minIndent=require_min_indent();module2.exports=string=>{let indent=minIndent(string);if(indent===0)return string;let regex=new RegExp(`^[ \\\\t]{${indent}}`,"gm");return string.replace(regex,"")};}});var require_indent_string=__commonJS({"../../node_modules/indent-string/index.js"(exports,module2){module2.exports=(string,count=1,options)=>{if(options={indent:" ",includeEmptyLines:!1,...options},typeof string!="string")throw new TypeError(`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``);if(typeof count!="number")throw new TypeError(`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``);if(typeof options.indent!="string")throw new TypeError(`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``);if(count===0)return string;let regex=options.includeEmptyLines?/^/gm:/^(?!\\s*$)/gm;return string.replace(regex,options.indent.repeat(count))};}});var require_redent=__commonJS({"../../node_modules/redent/index.js"(exports,module2){var stripIndent=require_strip_indent(),indentString=require_indent_string();module2.exports=(string,count=0,options)=>indentString(stripIndent(string),count,options);}});var require_iteratorProxy=__commonJS({"../../node_modules/aria-query/lib/util/iteratorProxy.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;function iteratorProxy(){var values=this,index=0,iter={"@@iterator":function(){return iter},next:function(){if(index<values.length){var value=values[index];return index=index+1,{done:!1,value}}else return {done:!0}}};return iter}exports.default=iteratorProxy;}});var require_iterationDecorator=__commonJS({"../../node_modules/aria-query/lib/util/iterationDecorator.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=iterationDecorator;var _iteratorProxy=_interopRequireDefault(require_iteratorProxy());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _typeof5(o){"@babel/helpers - typeof";return _typeof5=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(o2){return typeof o2}:function(o2){return o2&&typeof Symbol=="function"&&o2.constructor===Symbol&&o2!==Symbol.prototype?"symbol":typeof o2},_typeof5(o)}function iterationDecorator(collection,entries){return typeof Symbol=="function"&&_typeof5(Symbol.iterator)==="symbol"&&Object.defineProperty(collection,Symbol.iterator,{value:_iteratorProxy.default.bind(entries)}),collection}}});var require_ariaPropsMap=__commonJS({"../../node_modules/aria-query/lib/ariaPropsMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _iterationDecorator=_interopRequireDefault(require_iterationDecorator());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_unsupportedIterableToArray(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _unsupportedIterableToArray(r,a2){if(r){if(typeof r=="string")return _arrayLikeToArray(r,a2);var t={}.toString.call(r).slice(8,-1);return t==="Object"&&r.constructor&&(t=r.constructor.name),t==="Map"||t==="Set"?Array.from(r):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a2):void 0}}function _arrayLikeToArray(r,a2){(a2==null||a2>r.length)&&(a2=r.length);for(var e=0,n=Array(a2);e<a2;e++)n[e]=r[e];return n}function _iterableToArrayLimit(r,l2){var t=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(t!=null){var e,n,i,u2,a2=[],f4=!0,o=!1;try{if(i=(t=t.call(r)).next,l2===0){if(Object(t)!==t)return;f4=!1;}else for(;!(f4=(e=i.call(t)).done)&&(a2.push(e.value),a2.length!==l2);f4=!0);}catch(r2){o=!0,n=r2;}finally{try{if(!f4&&t.return!=null&&(u2=t.return(),Object(u2)!==u2))return}finally{if(o)throw n}}return a2}}function _arrayWithHoles(r){if(Array.isArray(r))return r}var properties=[["aria-activedescendant",{type:"id"}],["aria-atomic",{type:"boolean"}],["aria-autocomplete",{type:"token",values:["inline","list","both","none"]}],["aria-braillelabel",{type:"string"}],["aria-brailleroledescription",{type:"string"}],["aria-busy",{type:"boolean"}],["aria-checked",{type:"tristate"}],["aria-colcount",{type:"integer"}],["aria-colindex",{type:"integer"}],["aria-colspan",{type:"integer"}],["aria-controls",{type:"idlist"}],["aria-current",{type:"token",values:["page","step","location","date","time",!0,!1]}],["aria-describedby",{type:"idlist"}],["aria-description",{type:"string"}],["aria-details",{type:"id"}],["aria-disabled",{type:"boolean"}],["aria-dropeffect",{type:"tokenlist",values:["copy","execute","link","move","none","popup"]}],["aria-errormessage",{type:"id"}],["aria-expanded",{type:"boolean",allowundefined:!0}],["aria-flowto",{type:"idlist"}],["aria-grabbed",{type:"boolean",allowundefined:!0}],["aria-haspopup",{type:"token",values:[!1,!0,"menu","listbox","tree","grid","dialog"]}],["aria-hidden",{type:"boolean",allowundefined:!0}],["aria-invalid",{type:"token",values:["grammar",!1,"spelling",!0]}],["aria-keyshortcuts",{type:"string"}],["aria-label",{type:"string"}],["aria-labelledby",{type:"idlist"}],["aria-level",{type:"integer"}],["aria-live",{type:"token",values:["assertive","off","polite"]}],["aria-modal",{type:"boolean"}],["aria-multiline",{type:"boolean"}],["aria-multiselectable",{type:"boolean"}],["aria-orientation",{type:"token",values:["vertical","undefined","horizontal"]}],["aria-owns",{type:"idlist"}],["aria-placeholder",{type:"string"}],["aria-posinset",{type:"integer"}],["aria-pressed",{type:"tristate"}],["aria-readonly",{type:"boolean"}],["aria-relevant",{type:"tokenlist",values:["additions","all","removals","text"]}],["aria-required",{type:"boolean"}],["aria-roledescription",{type:"string"}],["aria-rowcount",{type:"integer"}],["aria-rowindex",{type:"integer"}],["aria-rowspan",{type:"integer"}],["aria-selected",{type:"boolean",allowundefined:!0}],["aria-setsize",{type:"integer"}],["aria-sort",{type:"token",values:["ascending","descending","none","other"]}],["aria-valuemax",{type:"number"}],["aria-valuemin",{type:"number"}],["aria-valuenow",{type:"number"}],["aria-valuetext",{type:"string"}]],ariaPropsMap={entries:function(){return properties},forEach:function(fn3){for(var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_i=0,_properties=properties;_i<_properties.length;_i++){var _properties$_i=_slicedToArray(_properties[_i],2),key=_properties$_i[0],values=_properties$_i[1];fn3.call(thisArg,values,key,properties);}},get:function(key){var item=properties.filter(function(tuple){return tuple[0]===key})[0];return item&&item[1]},has:function(key){return !!ariaPropsMap.get(key)},keys:function(){return properties.map(function(_ref){var _ref2=_slicedToArray(_ref,1),key=_ref2[0];return key})},values:function(){return properties.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),values2=_ref4[1];return values2})}};exports.default=(0, _iterationDecorator.default)(ariaPropsMap,ariaPropsMap.entries());}});var require_domMap=__commonJS({"../../node_modules/aria-query/lib/domMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _iterationDecorator=_interopRequireDefault(require_iterationDecorator());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_unsupportedIterableToArray(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _unsupportedIterableToArray(r,a2){if(r){if(typeof r=="string")return _arrayLikeToArray(r,a2);var t={}.toString.call(r).slice(8,-1);return t==="Object"&&r.constructor&&(t=r.constructor.name),t==="Map"||t==="Set"?Array.from(r):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a2):void 0}}function _arrayLikeToArray(r,a2){(a2==null||a2>r.length)&&(a2=r.length);for(var e=0,n=Array(a2);e<a2;e++)n[e]=r[e];return n}function _iterableToArrayLimit(r,l2){var t=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(t!=null){var e,n,i,u2,a2=[],f4=!0,o=!1;try{if(i=(t=t.call(r)).next,l2===0){if(Object(t)!==t)return;f4=!1;}else for(;!(f4=(e=i.call(t)).done)&&(a2.push(e.value),a2.length!==l2);f4=!0);}catch(r2){o=!0,n=r2;}finally{try{if(!f4&&t.return!=null&&(u2=t.return(),Object(u2)!==u2))return}finally{if(o)throw n}}return a2}}function _arrayWithHoles(r){if(Array.isArray(r))return r}var dom=[["a",{reserved:!1}],["abbr",{reserved:!1}],["acronym",{reserved:!1}],["address",{reserved:!1}],["applet",{reserved:!1}],["area",{reserved:!1}],["article",{reserved:!1}],["aside",{reserved:!1}],["audio",{reserved:!1}],["b",{reserved:!1}],["base",{reserved:!0}],["bdi",{reserved:!1}],["bdo",{reserved:!1}],["big",{reserved:!1}],["blink",{reserved:!1}],["blockquote",{reserved:!1}],["body",{reserved:!1}],["br",{reserved:!1}],["button",{reserved:!1}],["canvas",{reserved:!1}],["caption",{reserved:!1}],["center",{reserved:!1}],["cite",{reserved:!1}],["code",{reserved:!1}],["col",{reserved:!0}],["colgroup",{reserved:!0}],["content",{reserved:!1}],["data",{reserved:!1}],["datalist",{reserved:!1}],["dd",{reserved:!1}],["del",{reserved:!1}],["details",{reserved:!1}],["dfn",{reserved:!1}],["dialog",{reserved:!1}],["dir",{reserved:!1}],["div",{reserved:!1}],["dl",{reserved:!1}],["dt",{reserved:!1}],["em",{reserved:!1}],["embed",{reserved:!1}],["fieldset",{reserved:!1}],["figcaption",{reserved:!1}],["figure",{reserved:!1}],["font",{reserved:!1}],["footer",{reserved:!1}],["form",{reserved:!1}],["frame",{reserved:!1}],["frameset",{reserved:!1}],["h1",{reserved:!1}],["h2",{reserved:!1}],["h3",{reserved:!1}],["h4",{reserved:!1}],["h5",{reserved:!1}],["h6",{reserved:!1}],["head",{reserved:!0}],["header",{reserved:!1}],["hgroup",{reserved:!1}],["hr",{reserved:!1}],["html",{reserved:!0}],["i",{reserved:!1}],["iframe",{reserved:!1}],["img",{reserved:!1}],["input",{reserved:!1}],["ins",{reserved:!1}],["kbd",{reserved:!1}],["keygen",{reserved:!1}],["label",{reserved:!1}],["legend",{reserved:!1}],["li",{reserved:!1}],["link",{reserved:!0}],["main",{reserved:!1}],["map",{reserved:!1}],["mark",{reserved:!1}],["marquee",{reserved:!1}],["menu",{reserved:!1}],["menuitem",{reserved:!1}],["meta",{reserved:!0}],["meter",{reserved:!1}],["nav",{reserved:!1}],["noembed",{reserved:!0}],["noscript",{reserved:!0}],["object",{reserved:!1}],["ol",{reserved:!1}],["optgroup",{reserved:!1}],["option",{reserved:!1}],["output",{reserved:!1}],["p",{reserved:!1}],["param",{reserved:!0}],["picture",{reserved:!0}],["pre",{reserved:!1}],["progress",{reserved:!1}],["q",{reserved:!1}],["rp",{reserved:!1}],["rt",{reserved:!1}],["rtc",{reserved:!1}],["ruby",{reserved:!1}],["s",{reserved:!1}],["samp",{reserved:!1}],["script",{reserved:!0}],["section",{reserved:!1}],["select",{reserved:!1}],["small",{reserved:!1}],["source",{reserved:!0}],["spacer",{reserved:!1}],["span",{reserved:!1}],["strike",{reserved:!1}],["strong",{reserved:!1}],["style",{reserved:!0}],["sub",{reserved:!1}],["summary",{reserved:!1}],["sup",{reserved:!1}],["table",{reserved:!1}],["tbody",{reserved:!1}],["td",{reserved:!1}],["textarea",{reserved:!1}],["tfoot",{reserved:!1}],["th",{reserved:!1}],["thead",{reserved:!1}],["time",{reserved:!1}],["title",{reserved:!0}],["tr",{reserved:!1}],["track",{reserved:!0}],["tt",{reserved:!1}],["u",{reserved:!1}],["ul",{reserved:!1}],["var",{reserved:!1}],["video",{reserved:!1}],["wbr",{reserved:!1}],["xmp",{reserved:!1}]],domMap={entries:function(){return dom},forEach:function(fn3){for(var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_i=0,_dom=dom;_i<_dom.length;_i++){var _dom$_i=_slicedToArray(_dom[_i],2),key=_dom$_i[0],values=_dom$_i[1];fn3.call(thisArg,values,key,dom);}},get:function(key){var item=dom.filter(function(tuple){return tuple[0]===key})[0];return item&&item[1]},has:function(key){return !!domMap.get(key)},keys:function(){return dom.map(function(_ref){var _ref2=_slicedToArray(_ref,1),key=_ref2[0];return key})},values:function(){return dom.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),values2=_ref4[1];return values2})}};exports.default=(0, _iterationDecorator.default)(domMap,domMap.entries());}});var require_commandRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/commandRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var commandRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget"]]};exports.default=commandRole;}});var require_compositeRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var compositeRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-disabled":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget"]]};exports.default=compositeRole;}});var require_inputRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/inputRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var inputRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null},relatedConcepts:[{concept:{name:"input"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget"]]};exports.default=inputRole;}});var require_landmarkRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var landmarkRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=landmarkRole;}});var require_rangeRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var rangeRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-valuemax":null,"aria-valuemin":null,"aria-valuenow":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]};exports.default=rangeRole;}});var require_roletypeRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var roletypeRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{"aria-atomic":null,"aria-busy":null,"aria-controls":null,"aria-current":null,"aria-describedby":null,"aria-details":null,"aria-dropeffect":null,"aria-flowto":null,"aria-grabbed":null,"aria-hidden":null,"aria-keyshortcuts":null,"aria-label":null,"aria-labelledby":null,"aria-live":null,"aria-owns":null,"aria-relevant":null,"aria-roledescription":null},relatedConcepts:[{concept:{name:"role"},module:"XHTML"},{concept:{name:"type"},module:"Dublin Core"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[]};exports.default=roletypeRole;}});var require_sectionRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var sectionRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"frontmatter"},module:"DTB"},{concept:{name:"level"},module:"DTB"},{concept:{name:"level"},module:"SMIL"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]};exports.default=sectionRole;}});var require_sectionheadRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var sectionheadRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]};exports.default=sectionheadRole;}});var require_selectRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/selectRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var selectRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-orientation":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","composite"],["roletype","structure","section","group"]]};exports.default=selectRole;}});var require_structureRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/structureRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var structureRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype"]]};exports.default=structureRole;}});var require_widgetRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var widgetRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype"]]};exports.default=widgetRole;}});var require_windowRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/abstract/windowRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var windowRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-modal":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype"]]};exports.default=windowRole;}});var require_ariaAbstractRoles=__commonJS({"../../node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _commandRole=_interopRequireDefault(require_commandRole()),_compositeRole=_interopRequireDefault(require_compositeRole()),_inputRole=_interopRequireDefault(require_inputRole()),_landmarkRole=_interopRequireDefault(require_landmarkRole()),_rangeRole=_interopRequireDefault(require_rangeRole()),_roletypeRole=_interopRequireDefault(require_roletypeRole()),_sectionRole=_interopRequireDefault(require_sectionRole()),_sectionheadRole=_interopRequireDefault(require_sectionheadRole()),_selectRole=_interopRequireDefault(require_selectRole()),_structureRole=_interopRequireDefault(require_structureRole()),_widgetRole=_interopRequireDefault(require_widgetRole()),_windowRole=_interopRequireDefault(require_windowRole());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var ariaAbstractRoles=[["command",_commandRole.default],["composite",_compositeRole.default],["input",_inputRole.default],["landmark",_landmarkRole.default],["range",_rangeRole.default],["roletype",_roletypeRole.default],["section",_sectionRole.default],["sectionhead",_sectionheadRole.default],["select",_selectRole.default],["structure",_structureRole.default],["widget",_widgetRole.default],["window",_windowRole.default]];exports.default=ariaAbstractRoles;}});var require_alertRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/alertRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var alertRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-atomic":"true","aria-live":"assertive"},relatedConcepts:[{concept:{name:"alert"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=alertRole;}});var require_alertdialogRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var alertdialogRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"alert"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","alert"],["roletype","window","dialog"]]};exports.default=alertdialogRole;}});var require_applicationRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/applicationRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var applicationRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"Device Independence Delivery Unit"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]};exports.default=applicationRole;}});var require_articleRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/articleRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var articleRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-posinset":null,"aria-setsize":null},relatedConcepts:[{concept:{name:"article"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","document"]]};exports.default=articleRole;}});var require_bannerRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/bannerRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var bannerRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{constraints:["scoped to the body element"],name:"header"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=bannerRole;}});var require_blockquoteRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var blockquoteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"blockquote"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=blockquoteRole;}});var require_buttonRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/buttonRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var buttonRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-expanded":null,"aria-haspopup":null,"aria-pressed":null},relatedConcepts:[{concept:{attributes:[{name:"type",value:"button"}],name:"input"},module:"HTML"},{concept:{attributes:[{name:"type",value:"image"}],name:"input"},module:"HTML"},{concept:{attributes:[{name:"type",value:"reset"}],name:"input"},module:"HTML"},{concept:{attributes:[{name:"type",value:"submit"}],name:"input"},module:"HTML"},{concept:{name:"button"},module:"HTML"},{concept:{name:"trigger"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command"]]};exports.default=buttonRole;}});var require_captionRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/captionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var captionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"caption"},module:"HTML"}],requireContextRole:["figure","grid","table"],requiredContextRole:["figure","grid","table"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=captionRole;}});var require_cellRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/cellRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var cellRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-colindex":null,"aria-colspan":null,"aria-rowindex":null,"aria-rowspan":null},relatedConcepts:[{concept:{constraints:["ancestor table element has table role"],name:"td"},module:"HTML"}],requireContextRole:["row"],requiredContextRole:["row"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=cellRole;}});var require_checkboxRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var checkboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-checked":null,"aria-errormessage":null,"aria-expanded":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null},relatedConcepts:[{concept:{attributes:[{name:"type",value:"checkbox"}],name:"input"},module:"HTML"},{concept:{name:"option"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input"]]};exports.default=checkboxRole;}});var require_codeRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/codeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var codeRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"code"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=codeRole;}});var require_columnheaderRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var columnheaderRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-sort":null},relatedConcepts:[{concept:{name:"th"},module:"HTML"},{concept:{attributes:[{name:"scope",value:"col"}],name:"th"},module:"HTML"},{concept:{attributes:[{name:"scope",value:"colgroup"}],name:"th"},module:"HTML"}],requireContextRole:["row"],requiredContextRole:["row"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","cell"],["roletype","structure","section","cell","gridcell"],["roletype","widget","gridcell"],["roletype","structure","sectionhead"]]};exports.default=columnheaderRole;}});var require_comboboxRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var comboboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-autocomplete":null,"aria-errormessage":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null,"aria-expanded":"false","aria-haspopup":"listbox"},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"email"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"search"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"tel"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"text"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"url"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"url"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"multiple"},{constraints:["undefined"],name:"size"}],constraints:["the multiple attribute is not set and the size attribute does not have a value greater than 1"],name:"select"},module:"HTML"},{concept:{name:"select"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-controls":null,"aria-expanded":"false"},superClass:[["roletype","widget","input"]]};exports.default=comboboxRole;}});var require_complementaryRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var complementaryRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{constraints:["scoped to the body element","scoped to the main element"],name:"aside"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"aria-label"}],constraints:["scoped to a sectioning content element","scoped to a sectioning root element other than body"],name:"aside"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"aria-labelledby"}],constraints:["scoped to a sectioning content element","scoped to a sectioning root element other than body"],name:"aside"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=complementaryRole;}});var require_contentinfoRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var contentinfoRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{constraints:["scoped to the body element"],name:"footer"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=contentinfoRole;}});var require_definitionRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/definitionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var definitionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"dd"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=definitionRole;}});var require_deletionRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/deletionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var deletionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"del"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=deletionRole;}});var require_dialogRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/dialogRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var dialogRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"dialog"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","window"]]};exports.default=dialogRole;}});var require_directoryRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/directoryRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var directoryRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{module:"DAISY Guide"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","list"]]};exports.default=directoryRole;}});var require_documentRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/documentRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var documentRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"Device Independence Delivery Unit"}},{concept:{name:"html"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]};exports.default=documentRole;}});var require_emphasisRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var emphasisRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"em"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=emphasisRole;}});var require_feedRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/feedRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var feedRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["article"]],requiredProps:{},superClass:[["roletype","structure","section","list"]]};exports.default=feedRole;}});var require_figureRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/figureRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var figureRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"figure"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=figureRole;}});var require_formRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/formRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var formRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"aria-label"}],name:"form"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"aria-labelledby"}],name:"form"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"name"}],name:"form"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=formRole;}});var require_genericRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/genericRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var genericRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"a"},module:"HTML"},{concept:{name:"area"},module:"HTML"},{concept:{name:"aside"},module:"HTML"},{concept:{name:"b"},module:"HTML"},{concept:{name:"bdo"},module:"HTML"},{concept:{name:"body"},module:"HTML"},{concept:{name:"data"},module:"HTML"},{concept:{name:"div"},module:"HTML"},{concept:{constraints:["scoped to the main element","scoped to a sectioning content element","scoped to a sectioning root element other than body"],name:"footer"},module:"HTML"},{concept:{constraints:["scoped to the main element","scoped to a sectioning content element","scoped to a sectioning root element other than body"],name:"header"},module:"HTML"},{concept:{name:"hgroup"},module:"HTML"},{concept:{name:"i"},module:"HTML"},{concept:{name:"pre"},module:"HTML"},{concept:{name:"q"},module:"HTML"},{concept:{name:"samp"},module:"HTML"},{concept:{name:"section"},module:"HTML"},{concept:{name:"small"},module:"HTML"},{concept:{name:"span"},module:"HTML"},{concept:{name:"u"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]};exports.default=genericRole;}});var require_gridRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/gridRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var gridRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-multiselectable":null,"aria-readonly":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["row"],["row","rowgroup"]],requiredProps:{},superClass:[["roletype","widget","composite"],["roletype","structure","section","table"]]};exports.default=gridRole;}});var require_gridcellRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var gridcellRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null,"aria-selected":null},relatedConcepts:[{concept:{constraints:["ancestor table element has grid role","ancestor table element has treegrid role"],name:"td"},module:"HTML"}],requireContextRole:["row"],requiredContextRole:["row"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","cell"],["roletype","widget"]]};exports.default=gridcellRole;}});var require_groupRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/groupRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var groupRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-disabled":null},relatedConcepts:[{concept:{name:"details"},module:"HTML"},{concept:{name:"fieldset"},module:"HTML"},{concept:{name:"optgroup"},module:"HTML"},{concept:{name:"address"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=groupRole;}});var require_headingRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/headingRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var headingRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-level":"2"},relatedConcepts:[{concept:{name:"h1"},module:"HTML"},{concept:{name:"h2"},module:"HTML"},{concept:{name:"h3"},module:"HTML"},{concept:{name:"h4"},module:"HTML"},{concept:{name:"h5"},module:"HTML"},{concept:{name:"h6"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-level":"2"},superClass:[["roletype","structure","sectionhead"]]};exports.default=headingRole;}});var require_imgRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/imgRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var imgRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"alt"}],name:"img"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"alt"}],name:"img"},module:"HTML"},{concept:{name:"imggroup"},module:"DTB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=imgRole;}});var require_insertionRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/insertionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var insertionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"ins"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=insertionRole;}});var require_linkRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/linkRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var linkRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-expanded":null,"aria-haspopup":null},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"href"}],name:"a"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"href"}],name:"area"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command"]]};exports.default=linkRole;}});var require_listRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/listRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var listRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"menu"},module:"HTML"},{concept:{name:"ol"},module:"HTML"},{concept:{name:"ul"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["listitem"]],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=listRole;}});var require_listboxRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/listboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var listboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-expanded":null,"aria-invalid":null,"aria-multiselectable":null,"aria-readonly":null,"aria-required":null,"aria-orientation":"vertical"},relatedConcepts:[{concept:{attributes:[{constraints:[">1"],name:"size"}],constraints:["the size attribute value is greater than 1"],name:"select"},module:"HTML"},{concept:{attributes:[{name:"multiple"}],name:"select"},module:"HTML"},{concept:{name:"datalist"},module:"HTML"},{concept:{name:"list"},module:"ARIA"},{concept:{name:"select"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["option","group"],["option"]],requiredProps:{},superClass:[["roletype","widget","composite","select"],["roletype","structure","section","group","select"]]};exports.default=listboxRole;}});var require_listitemRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/listitemRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var listitemRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-level":null,"aria-posinset":null,"aria-setsize":null},relatedConcepts:[{concept:{constraints:["direct descendant of ol","direct descendant of ul","direct descendant of menu"],name:"li"},module:"HTML"},{concept:{name:"item"},module:"XForms"}],requireContextRole:["directory","list"],requiredContextRole:["directory","list"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=listitemRole;}});var require_logRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/logRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var logRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-live":"polite"},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=logRole;}});var require_mainRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/mainRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var mainRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"main"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=mainRole;}});var require_markRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/markRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var markRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:[],props:{"aria-braillelabel":null,"aria-brailleroledescription":null,"aria-description":null},relatedConcepts:[{concept:{name:"mark"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=markRole;}});var require_marqueeRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var marqueeRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=marqueeRole;}});var require_mathRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/mathRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var mathRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"math"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=mathRole;}});var require_menuRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/menuRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menuRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-orientation":"vertical"},relatedConcepts:[{concept:{name:"MENU"},module:"JAPI"},{concept:{name:"list"},module:"ARIA"},{concept:{name:"select"},module:"XForms"},{concept:{name:"sidebar"},module:"DTB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["menuitem","group"],["menuitemradio","group"],["menuitemcheckbox","group"],["menuitem"],["menuitemcheckbox"],["menuitemradio"]],requiredProps:{},superClass:[["roletype","widget","composite","select"],["roletype","structure","section","group","select"]]};exports.default=menuRole;}});var require_menubarRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/menubarRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menubarRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-orientation":"horizontal"},relatedConcepts:[{concept:{name:"toolbar"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["menuitem","group"],["menuitemradio","group"],["menuitemcheckbox","group"],["menuitem"],["menuitemcheckbox"],["menuitemradio"]],requiredProps:{},superClass:[["roletype","widget","composite","select","menu"],["roletype","structure","section","group","select","menu"]]};exports.default=menubarRole;}});var require_menuitemRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menuitemRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-expanded":null,"aria-haspopup":null,"aria-posinset":null,"aria-setsize":null},relatedConcepts:[{concept:{name:"MENU_ITEM"},module:"JAPI"},{concept:{name:"listitem"},module:"ARIA"},{concept:{name:"option"},module:"ARIA"}],requireContextRole:["group","menu","menubar"],requiredContextRole:["group","menu","menubar"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command"]]};exports.default=menuitemRole;}});var require_menuitemcheckboxRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menuitemcheckboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"menuitem"},module:"ARIA"}],requireContextRole:["group","menu","menubar"],requiredContextRole:["group","menu","menubar"],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input","checkbox"],["roletype","widget","command","menuitem"]]};exports.default=menuitemcheckboxRole;}});var require_menuitemradioRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menuitemradioRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"menuitem"},module:"ARIA"}],requireContextRole:["group","menu","menubar"],requiredContextRole:["group","menu","menubar"],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input","checkbox","menuitemcheckbox"],["roletype","widget","command","menuitem","menuitemcheckbox"],["roletype","widget","input","radio"]]};exports.default=menuitemradioRole;}});var require_meterRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/meterRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var meterRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-valuetext":null,"aria-valuemax":"100","aria-valuemin":"0"},relatedConcepts:[{concept:{name:"meter"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-valuenow":null},superClass:[["roletype","structure","range"]]};exports.default=meterRole;}});var require_navigationRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/navigationRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var navigationRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"nav"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=navigationRole;}});var require_noneRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/noneRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var noneRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[]};exports.default=noneRole;}});var require_noteRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/noteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var noteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=noteRole;}});var require_optionRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/optionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var optionRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-checked":null,"aria-posinset":null,"aria-setsize":null,"aria-selected":"false"},relatedConcepts:[{concept:{name:"item"},module:"XForms"},{concept:{name:"listitem"},module:"ARIA"},{concept:{name:"option"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-selected":"false"},superClass:[["roletype","widget","input"]]};exports.default=optionRole;}});var require_paragraphRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var paragraphRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"p"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=paragraphRole;}});var require_presentationRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/presentationRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var presentationRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{attributes:[{name:"alt",value:""}],name:"img"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]};exports.default=presentationRole;}});var require_progressbarRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var progressbarRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-valuetext":null},relatedConcepts:[{concept:{name:"progress"},module:"HTML"},{concept:{name:"status"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","range"],["roletype","widget"]]};exports.default=progressbarRole;}});var require_radioRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/radioRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var radioRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-checked":null,"aria-posinset":null,"aria-setsize":null},relatedConcepts:[{concept:{attributes:[{name:"type",value:"radio"}],name:"input"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input"]]};exports.default=radioRole;}});var require_radiogroupRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var radiogroupRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null},relatedConcepts:[{concept:{name:"list"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["radio"]],requiredProps:{},superClass:[["roletype","widget","composite","select"],["roletype","structure","section","group","select"]]};exports.default=radiogroupRole;}});var require_regionRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/regionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var regionRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"aria-label"}],name:"section"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"aria-labelledby"}],name:"section"},module:"HTML"},{concept:{name:"Device Independence Glossart perceivable unit"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=regionRole;}});var require_rowRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/rowRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var rowRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-colindex":null,"aria-expanded":null,"aria-level":null,"aria-posinset":null,"aria-rowindex":null,"aria-selected":null,"aria-setsize":null},relatedConcepts:[{concept:{name:"tr"},module:"HTML"}],requireContextRole:["grid","rowgroup","table","treegrid"],requiredContextRole:["grid","rowgroup","table","treegrid"],requiredOwnedElements:[["cell"],["columnheader"],["gridcell"],["rowheader"]],requiredProps:{},superClass:[["roletype","structure","section","group"],["roletype","widget"]]};exports.default=rowRole;}});var require_rowgroupRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var rowgroupRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"tbody"},module:"HTML"},{concept:{name:"tfoot"},module:"HTML"},{concept:{name:"thead"},module:"HTML"}],requireContextRole:["grid","table","treegrid"],requiredContextRole:["grid","table","treegrid"],requiredOwnedElements:[["row"]],requiredProps:{},superClass:[["roletype","structure"]]};exports.default=rowgroupRole;}});var require_rowheaderRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var rowheaderRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-sort":null},relatedConcepts:[{concept:{attributes:[{name:"scope",value:"row"}],name:"th"},module:"HTML"},{concept:{attributes:[{name:"scope",value:"rowgroup"}],name:"th"},module:"HTML"}],requireContextRole:["row","rowgroup"],requiredContextRole:["row","rowgroup"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","cell"],["roletype","structure","section","cell","gridcell"],["roletype","widget","gridcell"],["roletype","structure","sectionhead"]]};exports.default=rowheaderRole;}});var require_scrollbarRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var scrollbarRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-valuetext":null,"aria-orientation":"vertical","aria-valuemax":"100","aria-valuemin":"0"},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-controls":null,"aria-valuenow":null},superClass:[["roletype","structure","range"],["roletype","widget"]]};exports.default=scrollbarRole;}});var require_searchRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/searchRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var searchRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=searchRole;}});var require_searchboxRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var searchboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"search"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","input","textbox"]]};exports.default=searchboxRole;}});var require_separatorRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/separatorRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var separatorRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-orientation":"horizontal","aria-valuemax":"100","aria-valuemin":"0","aria-valuenow":null,"aria-valuetext":null},relatedConcepts:[{concept:{name:"hr"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]};exports.default=separatorRole;}});var require_sliderRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/sliderRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var sliderRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-haspopup":null,"aria-invalid":null,"aria-readonly":null,"aria-valuetext":null,"aria-orientation":"horizontal","aria-valuemax":"100","aria-valuemin":"0"},relatedConcepts:[{concept:{attributes:[{name:"type",value:"range"}],name:"input"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-valuenow":null},superClass:[["roletype","widget","input"],["roletype","structure","range"]]};exports.default=sliderRole;}});var require_spinbuttonRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var spinbuttonRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null,"aria-valuetext":null,"aria-valuenow":"0"},relatedConcepts:[{concept:{attributes:[{name:"type",value:"number"}],name:"input"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","composite"],["roletype","widget","input"],["roletype","structure","range"]]};exports.default=spinbuttonRole;}});var require_statusRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/statusRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var statusRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-atomic":"true","aria-live":"polite"},relatedConcepts:[{concept:{name:"output"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=statusRole;}});var require_strongRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/strongRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var strongRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"strong"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=strongRole;}});var require_subscriptRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var subscriptRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"sub"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=subscriptRole;}});var require_superscriptRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var superscriptRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"sup"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=superscriptRole;}});var require_switchRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/switchRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var switchRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"button"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input","checkbox"]]};exports.default=switchRole;}});var require_tabRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/tabRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tabRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-expanded":null,"aria-haspopup":null,"aria-posinset":null,"aria-setsize":null,"aria-selected":"false"},relatedConcepts:[],requireContextRole:["tablist"],requiredContextRole:["tablist"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","sectionhead"],["roletype","widget"]]};exports.default=tabRole;}});var require_tableRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/tableRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tableRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-colcount":null,"aria-rowcount":null},relatedConcepts:[{concept:{name:"table"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["row"],["row","rowgroup"]],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=tableRole;}});var require_tablistRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/tablistRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tablistRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-level":null,"aria-multiselectable":null,"aria-orientation":"horizontal"},relatedConcepts:[{module:"DAISY",concept:{name:"guide"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["tab"]],requiredProps:{},superClass:[["roletype","widget","composite"]]};exports.default=tablistRole;}});var require_tabpanelRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tabpanelRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=tabpanelRole;}});var require_termRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/termRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var termRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"dfn"},module:"HTML"},{concept:{name:"dt"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=termRole;}});var require_textboxRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/textboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var textboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-autocomplete":null,"aria-errormessage":null,"aria-haspopup":null,"aria-invalid":null,"aria-multiline":null,"aria-placeholder":null,"aria-readonly":null,"aria-required":null},relatedConcepts:[{concept:{attributes:[{constraints:["undefined"],name:"type"},{constraints:["undefined"],name:"list"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"email"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"tel"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"text"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"url"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{name:"input"},module:"XForms"},{concept:{name:"textarea"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","input"]]};exports.default=textboxRole;}});var require_timeRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/timeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var timeRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"time"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=timeRole;}});var require_timerRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/timerRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var timerRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","status"]]};exports.default=timerRole;}});var require_toolbarRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var toolbarRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-orientation":"horizontal"},relatedConcepts:[{concept:{name:"menubar"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","group"]]};exports.default=toolbarRole;}});var require_tooltipRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tooltipRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=tooltipRole;}});var require_treeRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/treeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var treeRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null,"aria-multiselectable":null,"aria-required":null,"aria-orientation":"vertical"},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["treeitem","group"],["treeitem"]],requiredProps:{},superClass:[["roletype","widget","composite","select"],["roletype","structure","section","group","select"]]};exports.default=treeRole;}});var require_treegridRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/treegridRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var treegridRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["row"],["row","rowgroup"]],requiredProps:{},superClass:[["roletype","widget","composite","grid"],["roletype","structure","section","table","grid"],["roletype","widget","composite","select","tree"],["roletype","structure","section","group","select","tree"]]};exports.default=treegridRole;}});var require_treeitemRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var treeitemRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-expanded":null,"aria-haspopup":null},relatedConcepts:[],requireContextRole:["group","tree"],requiredContextRole:["group","tree"],requiredOwnedElements:[],requiredProps:{"aria-selected":null},superClass:[["roletype","structure","section","listitem"],["roletype","widget","input","option"]]};exports.default=treeitemRole;}});var require_ariaLiteralRoles=__commonJS({"../../node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _alertRole=_interopRequireDefault(require_alertRole()),_alertdialogRole=_interopRequireDefault(require_alertdialogRole()),_applicationRole=_interopRequireDefault(require_applicationRole()),_articleRole=_interopRequireDefault(require_articleRole()),_bannerRole=_interopRequireDefault(require_bannerRole()),_blockquoteRole=_interopRequireDefault(require_blockquoteRole()),_buttonRole=_interopRequireDefault(require_buttonRole()),_captionRole=_interopRequireDefault(require_captionRole()),_cellRole=_interopRequireDefault(require_cellRole()),_checkboxRole=_interopRequireDefault(require_checkboxRole()),_codeRole=_interopRequireDefault(require_codeRole()),_columnheaderRole=_interopRequireDefault(require_columnheaderRole()),_comboboxRole=_interopRequireDefault(require_comboboxRole()),_complementaryRole=_interopRequireDefault(require_complementaryRole()),_contentinfoRole=_interopRequireDefault(require_contentinfoRole()),_definitionRole=_interopRequireDefault(require_definitionRole()),_deletionRole=_interopRequireDefault(require_deletionRole()),_dialogRole=_interopRequireDefault(require_dialogRole()),_directoryRole=_interopRequireDefault(require_directoryRole()),_documentRole=_interopRequireDefault(require_documentRole()),_emphasisRole=_interopRequireDefault(require_emphasisRole()),_feedRole=_interopRequireDefault(require_feedRole()),_figureRole=_interopRequireDefault(require_figureRole()),_formRole=_interopRequireDefault(require_formRole()),_genericRole=_interopRequireDefault(require_genericRole()),_gridRole=_interopRequireDefault(require_gridRole()),_gridcellRole=_interopRequireDefault(require_gridcellRole()),_groupRole=_interopRequireDefault(require_groupRole()),_headingRole=_interopRequireDefault(require_headingRole()),_imgRole=_interopRequireDefault(require_imgRole()),_insertionRole=_interopRequireDefault(require_insertionRole()),_linkRole=_interopRequireDefault(require_linkRole()),_listRole=_interopRequireDefault(require_listRole()),_listboxRole=_interopRequireDefault(require_listboxRole()),_listitemRole=_interopRequireDefault(require_listitemRole()),_logRole=_interopRequireDefault(require_logRole()),_mainRole=_interopRequireDefault(require_mainRole()),_markRole=_interopRequireDefault(require_markRole()),_marqueeRole=_interopRequireDefault(require_marqueeRole()),_mathRole=_interopRequireDefault(require_mathRole()),_menuRole=_interopRequireDefault(require_menuRole()),_menubarRole=_interopRequireDefault(require_menubarRole()),_menuitemRole=_interopRequireDefault(require_menuitemRole()),_menuitemcheckboxRole=_interopRequireDefault(require_menuitemcheckboxRole()),_menuitemradioRole=_interopRequireDefault(require_menuitemradioRole()),_meterRole=_interopRequireDefault(require_meterRole()),_navigationRole=_interopRequireDefault(require_navigationRole()),_noneRole=_interopRequireDefault(require_noneRole()),_noteRole=_interopRequireDefault(require_noteRole()),_optionRole=_interopRequireDefault(require_optionRole()),_paragraphRole=_interopRequireDefault(require_paragraphRole()),_presentationRole=_interopRequireDefault(require_presentationRole()),_progressbarRole=_interopRequireDefault(require_progressbarRole()),_radioRole=_interopRequireDefault(require_radioRole()),_radiogroupRole=_interopRequireDefault(require_radiogroupRole()),_regionRole=_interopRequireDefault(require_regionRole()),_rowRole=_interopRequireDefault(require_rowRole()),_rowgroupRole=_interopRequireDefault(require_rowgroupRole()),_rowheaderRole=_interopRequireDefault(require_rowheaderRole()),_scrollbarRole=_interopRequireDefault(require_scrollbarRole()),_searchRole=_interopRequireDefault(require_searchRole()),_searchboxRole=_interopRequireDefault(require_searchboxRole()),_separatorRole=_interopRequireDefault(require_separatorRole()),_sliderRole=_interopRequireDefault(require_sliderRole()),_spinbuttonRole=_interopRequireDefault(require_spinbuttonRole()),_statusRole=_interopRequireDefault(require_statusRole()),_strongRole=_interopRequireDefault(require_strongRole()),_subscriptRole=_interopRequireDefault(require_subscriptRole()),_superscriptRole=_interopRequireDefault(require_superscriptRole()),_switchRole=_interopRequireDefault(require_switchRole()),_tabRole=_interopRequireDefault(require_tabRole()),_tableRole=_interopRequireDefault(require_tableRole()),_tablistRole=_interopRequireDefault(require_tablistRole()),_tabpanelRole=_interopRequireDefault(require_tabpanelRole()),_termRole=_interopRequireDefault(require_termRole()),_textboxRole=_interopRequireDefault(require_textboxRole()),_timeRole=_interopRequireDefault(require_timeRole()),_timerRole=_interopRequireDefault(require_timerRole()),_toolbarRole=_interopRequireDefault(require_toolbarRole()),_tooltipRole=_interopRequireDefault(require_tooltipRole()),_treeRole=_interopRequireDefault(require_treeRole()),_treegridRole=_interopRequireDefault(require_treegridRole()),_treeitemRole=_interopRequireDefault(require_treeitemRole());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var ariaLiteralRoles=[["alert",_alertRole.default],["alertdialog",_alertdialogRole.default],["application",_applicationRole.default],["article",_articleRole.default],["banner",_bannerRole.default],["blockquote",_blockquoteRole.default],["button",_buttonRole.default],["caption",_captionRole.default],["cell",_cellRole.default],["checkbox",_checkboxRole.default],["code",_codeRole.default],["columnheader",_columnheaderRole.default],["combobox",_comboboxRole.default],["complementary",_complementaryRole.default],["contentinfo",_contentinfoRole.default],["definition",_definitionRole.default],["deletion",_deletionRole.default],["dialog",_dialogRole.default],["directory",_directoryRole.default],["document",_documentRole.default],["emphasis",_emphasisRole.default],["feed",_feedRole.default],["figure",_figureRole.default],["form",_formRole.default],["generic",_genericRole.default],["grid",_gridRole.default],["gridcell",_gridcellRole.default],["group",_groupRole.default],["heading",_headingRole.default],["img",_imgRole.default],["insertion",_insertionRole.default],["link",_linkRole.default],["list",_listRole.default],["listbox",_listboxRole.default],["listitem",_listitemRole.default],["log",_logRole.default],["main",_mainRole.default],["mark",_markRole.default],["marquee",_marqueeRole.default],["math",_mathRole.default],["menu",_menuRole.default],["menubar",_menubarRole.default],["menuitem",_menuitemRole.default],["menuitemcheckbox",_menuitemcheckboxRole.default],["menuitemradio",_menuitemradioRole.default],["meter",_meterRole.default],["navigation",_navigationRole.default],["none",_noneRole.default],["note",_noteRole.default],["option",_optionRole.default],["paragraph",_paragraphRole.default],["presentation",_presentationRole.default],["progressbar",_progressbarRole.default],["radio",_radioRole.default],["radiogroup",_radiogroupRole.default],["region",_regionRole.default],["row",_rowRole.default],["rowgroup",_rowgroupRole.default],["rowheader",_rowheaderRole.default],["scrollbar",_scrollbarRole.default],["search",_searchRole.default],["searchbox",_searchboxRole.default],["separator",_separatorRole.default],["slider",_sliderRole.default],["spinbutton",_spinbuttonRole.default],["status",_statusRole.default],["strong",_strongRole.default],["subscript",_subscriptRole.default],["superscript",_superscriptRole.default],["switch",_switchRole.default],["tab",_tabRole.default],["table",_tableRole.default],["tablist",_tablistRole.default],["tabpanel",_tabpanelRole.default],["term",_termRole.default],["textbox",_textboxRole.default],["time",_timeRole.default],["timer",_timerRole.default],["toolbar",_toolbarRole.default],["tooltip",_tooltipRole.default],["tree",_treeRole.default],["treegrid",_treegridRole.default],["treeitem",_treeitemRole.default]];exports.default=ariaLiteralRoles;}});var require_docAbstractRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docAbstractRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"abstract [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docAbstractRole;}});var require_docAcknowledgmentsRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docAcknowledgmentsRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"acknowledgments [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docAcknowledgmentsRole;}});var require_docAfterwordRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docAfterwordRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"afterword [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docAfterwordRole;}});var require_docAppendixRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docAppendixRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"appendix [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docAppendixRole;}});var require_docBacklinkRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docBacklinkRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"referrer [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command","link"]]};exports.default=docBacklinkRole;}});var require_docBiblioentryRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docBiblioentryRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"EPUB biblioentry [EPUB-SSV]"},module:"EPUB"}],requireContextRole:["doc-bibliography"],requiredContextRole:["doc-bibliography"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","listitem"]]};exports.default=docBiblioentryRole;}});var require_docBibliographyRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docBibliographyRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"bibliography [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["doc-biblioentry"]],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docBibliographyRole;}});var require_docBibliorefRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docBibliorefRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"biblioref [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command","link"]]};exports.default=docBibliorefRole;}});var require_docChapterRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docChapterRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"chapter [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docChapterRole;}});var require_docColophonRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docColophonRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"colophon [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docColophonRole;}});var require_docConclusionRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docConclusionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"conclusion [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docConclusionRole;}});var require_docCoverRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docCoverRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"cover [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","img"]]};exports.default=docCoverRole;}});var require_docCreditRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docCreditRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"credit [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docCreditRole;}});var require_docCreditsRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docCreditsRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"credits [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docCreditsRole;}});var require_docDedicationRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docDedicationRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"dedication [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docDedicationRole;}});var require_docEndnoteRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docEndnoteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"rearnote [EPUB-SSV]"},module:"EPUB"}],requireContextRole:["doc-endnotes"],requiredContextRole:["doc-endnotes"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","listitem"]]};exports.default=docEndnoteRole;}});var require_docEndnotesRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docEndnotesRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"rearnotes [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["doc-endnote"]],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docEndnotesRole;}});var require_docEpigraphRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docEpigraphRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"epigraph [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docEpigraphRole;}});var require_docEpilogueRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docEpilogueRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"epilogue [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docEpilogueRole;}});var require_docErrataRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docErrataRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"errata [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docErrataRole;}});var require_docExampleRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docExampleRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docExampleRole;}});var require_docFootnoteRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docFootnoteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"footnote [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docFootnoteRole;}});var require_docForewordRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docForewordRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"foreword [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docForewordRole;}});var require_docGlossaryRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docGlossaryRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"glossary [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["definition"],["term"]],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docGlossaryRole;}});var require_docGlossrefRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docGlossrefRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"glossref [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command","link"]]};exports.default=docGlossrefRole;}});var require_docIndexRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docIndexRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"index [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark","navigation"]]};exports.default=docIndexRole;}});var require_docIntroductionRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docIntroductionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"introduction [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docIntroductionRole;}});var require_docNoterefRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docNoterefRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"noteref [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command","link"]]};exports.default=docNoterefRole;}});var require_docNoticeRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docNoticeRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"notice [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","note"]]};exports.default=docNoticeRole;}});var require_docPagebreakRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPagebreakRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"pagebreak [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","separator"]]};exports.default=docPagebreakRole;}});var require_docPagefooterRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docPagefooterRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPagefooterRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:[],props:{"aria-braillelabel":null,"aria-brailleroledescription":null,"aria-description":null,"aria-disabled":null,"aria-errormessage":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docPagefooterRole;}});var require_docPageheaderRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docPageheaderRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPageheaderRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:[],props:{"aria-braillelabel":null,"aria-brailleroledescription":null,"aria-description":null,"aria-disabled":null,"aria-errormessage":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docPageheaderRole;}});var require_docPagelistRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPagelistRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"page-list [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark","navigation"]]};exports.default=docPagelistRole;}});var require_docPartRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPartRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"part [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docPartRole;}});var require_docPrefaceRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPrefaceRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"preface [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docPrefaceRole;}});var require_docPrologueRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPrologueRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"prologue [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]};exports.default=docPrologueRole;}});var require_docPullquoteRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPullquoteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"pullquote [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["none"]]};exports.default=docPullquoteRole;}});var require_docQnaRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docQnaRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"qna [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]};exports.default=docQnaRole;}});var require_docSubtitleRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docSubtitleRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"subtitle [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","sectionhead"]]};exports.default=docSubtitleRole;}});var require_docTipRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docTipRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"help [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","note"]]};exports.default=docTipRole;}});var require_docTocRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docTocRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"toc [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark","navigation"]]};exports.default=docTocRole;}});var require_ariaDpubRoles=__commonJS({"../../node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _docAbstractRole=_interopRequireDefault(require_docAbstractRole()),_docAcknowledgmentsRole=_interopRequireDefault(require_docAcknowledgmentsRole()),_docAfterwordRole=_interopRequireDefault(require_docAfterwordRole()),_docAppendixRole=_interopRequireDefault(require_docAppendixRole()),_docBacklinkRole=_interopRequireDefault(require_docBacklinkRole()),_docBiblioentryRole=_interopRequireDefault(require_docBiblioentryRole()),_docBibliographyRole=_interopRequireDefault(require_docBibliographyRole()),_docBibliorefRole=_interopRequireDefault(require_docBibliorefRole()),_docChapterRole=_interopRequireDefault(require_docChapterRole()),_docColophonRole=_interopRequireDefault(require_docColophonRole()),_docConclusionRole=_interopRequireDefault(require_docConclusionRole()),_docCoverRole=_interopRequireDefault(require_docCoverRole()),_docCreditRole=_interopRequireDefault(require_docCreditRole()),_docCreditsRole=_interopRequireDefault(require_docCreditsRole()),_docDedicationRole=_interopRequireDefault(require_docDedicationRole()),_docEndnoteRole=_interopRequireDefault(require_docEndnoteRole()),_docEndnotesRole=_interopRequireDefault(require_docEndnotesRole()),_docEpigraphRole=_interopRequireDefault(require_docEpigraphRole()),_docEpilogueRole=_interopRequireDefault(require_docEpilogueRole()),_docErrataRole=_interopRequireDefault(require_docErrataRole()),_docExampleRole=_interopRequireDefault(require_docExampleRole()),_docFootnoteRole=_interopRequireDefault(require_docFootnoteRole()),_docForewordRole=_interopRequireDefault(require_docForewordRole()),_docGlossaryRole=_interopRequireDefault(require_docGlossaryRole()),_docGlossrefRole=_interopRequireDefault(require_docGlossrefRole()),_docIndexRole=_interopRequireDefault(require_docIndexRole()),_docIntroductionRole=_interopRequireDefault(require_docIntroductionRole()),_docNoterefRole=_interopRequireDefault(require_docNoterefRole()),_docNoticeRole=_interopRequireDefault(require_docNoticeRole()),_docPagebreakRole=_interopRequireDefault(require_docPagebreakRole()),_docPagefooterRole=_interopRequireDefault(require_docPagefooterRole()),_docPageheaderRole=_interopRequireDefault(require_docPageheaderRole()),_docPagelistRole=_interopRequireDefault(require_docPagelistRole()),_docPartRole=_interopRequireDefault(require_docPartRole()),_docPrefaceRole=_interopRequireDefault(require_docPrefaceRole()),_docPrologueRole=_interopRequireDefault(require_docPrologueRole()),_docPullquoteRole=_interopRequireDefault(require_docPullquoteRole()),_docQnaRole=_interopRequireDefault(require_docQnaRole()),_docSubtitleRole=_interopRequireDefault(require_docSubtitleRole()),_docTipRole=_interopRequireDefault(require_docTipRole()),_docTocRole=_interopRequireDefault(require_docTocRole());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var ariaDpubRoles=[["doc-abstract",_docAbstractRole.default],["doc-acknowledgments",_docAcknowledgmentsRole.default],["doc-afterword",_docAfterwordRole.default],["doc-appendix",_docAppendixRole.default],["doc-backlink",_docBacklinkRole.default],["doc-biblioentry",_docBiblioentryRole.default],["doc-bibliography",_docBibliographyRole.default],["doc-biblioref",_docBibliorefRole.default],["doc-chapter",_docChapterRole.default],["doc-colophon",_docColophonRole.default],["doc-conclusion",_docConclusionRole.default],["doc-cover",_docCoverRole.default],["doc-credit",_docCreditRole.default],["doc-credits",_docCreditsRole.default],["doc-dedication",_docDedicationRole.default],["doc-endnote",_docEndnoteRole.default],["doc-endnotes",_docEndnotesRole.default],["doc-epigraph",_docEpigraphRole.default],["doc-epilogue",_docEpilogueRole.default],["doc-errata",_docErrataRole.default],["doc-example",_docExampleRole.default],["doc-footnote",_docFootnoteRole.default],["doc-foreword",_docForewordRole.default],["doc-glossary",_docGlossaryRole.default],["doc-glossref",_docGlossrefRole.default],["doc-index",_docIndexRole.default],["doc-introduction",_docIntroductionRole.default],["doc-noteref",_docNoterefRole.default],["doc-notice",_docNoticeRole.default],["doc-pagebreak",_docPagebreakRole.default],["doc-pagefooter",_docPagefooterRole.default],["doc-pageheader",_docPageheaderRole.default],["doc-pagelist",_docPagelistRole.default],["doc-part",_docPartRole.default],["doc-preface",_docPrefaceRole.default],["doc-prologue",_docPrologueRole.default],["doc-pullquote",_docPullquoteRole.default],["doc-qna",_docQnaRole.default],["doc-subtitle",_docSubtitleRole.default],["doc-tip",_docTipRole.default],["doc-toc",_docTocRole.default]];exports.default=ariaDpubRoles;}});var require_graphicsDocumentRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/graphics/graphicsDocumentRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var graphicsDocumentRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{module:"GRAPHICS",concept:{name:"graphics-object"}},{module:"ARIA",concept:{name:"img"}},{module:"ARIA",concept:{name:"article"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","document"]]};exports.default=graphicsDocumentRole;}});var require_graphicsObjectRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/graphics/graphicsObjectRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var graphicsObjectRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{module:"GRAPHICS",concept:{name:"graphics-document"}},{module:"ARIA",concept:{name:"group"}},{module:"ARIA",concept:{name:"img"}},{module:"GRAPHICS",concept:{name:"graphics-symbol"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","group"]]};exports.default=graphicsObjectRole;}});var require_graphicsSymbolRole=__commonJS({"../../node_modules/aria-query/lib/etc/roles/graphics/graphicsSymbolRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var graphicsSymbolRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","img"]]};exports.default=graphicsSymbolRole;}});var require_ariaGraphicsRoles=__commonJS({"../../node_modules/aria-query/lib/etc/roles/ariaGraphicsRoles.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _graphicsDocumentRole=_interopRequireDefault(require_graphicsDocumentRole()),_graphicsObjectRole=_interopRequireDefault(require_graphicsObjectRole()),_graphicsSymbolRole=_interopRequireDefault(require_graphicsSymbolRole());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var ariaGraphicsRoles=[["graphics-document",_graphicsDocumentRole.default],["graphics-object",_graphicsObjectRole.default],["graphics-symbol",_graphicsSymbolRole.default]];exports.default=ariaGraphicsRoles;}});var require_rolesMap=__commonJS({"../../node_modules/aria-query/lib/rolesMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _ariaAbstractRoles=_interopRequireDefault(require_ariaAbstractRoles()),_ariaLiteralRoles=_interopRequireDefault(require_ariaLiteralRoles()),_ariaDpubRoles=_interopRequireDefault(require_ariaDpubRoles()),_ariaGraphicsRoles=_interopRequireDefault(require_ariaGraphicsRoles()),_iterationDecorator=_interopRequireDefault(require_iterationDecorator());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _createForOfIteratorHelper(r,e){var t=typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(!t){if(Array.isArray(r)||(t=_unsupportedIterableToArray(r))||e&&r&&typeof r.length=="number"){t&&(r=t);var _n=0,F=function(){};return {s:F,n:function(){return _n>=r.length?{done:!0}:{done:!1,value:r[_n++]}},e:function(r2){throw r2},f:F}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var o,a2=!0,u2=!1;return {s:function(){t=t.call(r);},n:function(){var r2=t.next();return a2=r2.done,r2},e:function(r2){u2=!0,o=r2;},f:function(){try{a2||t.return==null||t.return();}finally{if(u2)throw o}}}}function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_unsupportedIterableToArray(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _unsupportedIterableToArray(r,a2){if(r){if(typeof r=="string")return _arrayLikeToArray(r,a2);var t={}.toString.call(r).slice(8,-1);return t==="Object"&&r.constructor&&(t=r.constructor.name),t==="Map"||t==="Set"?Array.from(r):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a2):void 0}}function _arrayLikeToArray(r,a2){(a2==null||a2>r.length)&&(a2=r.length);for(var e=0,n=Array(a2);e<a2;e++)n[e]=r[e];return n}function _iterableToArrayLimit(r,l2){var t=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(t!=null){var e,n,i,u2,a2=[],f4=!0,o=!1;try{if(i=(t=t.call(r)).next,l2===0){if(Object(t)!==t)return;f4=!1;}else for(;!(f4=(e=i.call(t)).done)&&(a2.push(e.value),a2.length!==l2);f4=!0);}catch(r2){o=!0,n=r2;}finally{try{if(!f4&&t.return!=null&&(u2=t.return(),Object(u2)!==u2))return}finally{if(o)throw n}}return a2}}function _arrayWithHoles(r){if(Array.isArray(r))return r}var roles3=[].concat(_ariaAbstractRoles.default,_ariaLiteralRoles.default,_ariaDpubRoles.default,_ariaGraphicsRoles.default);roles3.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),roleDefinition=_ref2[1],_iterator=_createForOfIteratorHelper(roleDefinition.superClass),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var superClassIter=_step.value,_iterator2=_createForOfIteratorHelper(superClassIter),_step2;try{var _loop=function(){var superClassName=_step2.value,superClassRoleTuple=roles3.filter(function(_ref3){var _ref4=_slicedToArray(_ref3,1),name=_ref4[0];return name===superClassName})[0];if(superClassRoleTuple)for(var superClassDefinition=superClassRoleTuple[1],_i=0,_Object$keys=Object.keys(superClassDefinition.props);_i<_Object$keys.length;_i++){var prop=_Object$keys[_i];Object.prototype.hasOwnProperty.call(roleDefinition.props,prop)||(roleDefinition.props[prop]=superClassDefinition.props[prop]);}};for(_iterator2.s();!(_step2=_iterator2.n()).done;)_loop();}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}});var rolesMap={entries:function(){return roles3},forEach:function(fn3){var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_iterator3=_createForOfIteratorHelper(roles3),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _step3$value=_slicedToArray(_step3.value,2),key=_step3$value[0],values=_step3$value[1];fn3.call(thisArg,values,key,roles3);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}},get:function(key){var item=roles3.filter(function(tuple){return tuple[0]===key})[0];return item&&item[1]},has:function(key){return !!rolesMap.get(key)},keys:function(){return roles3.map(function(_ref5){var _ref6=_slicedToArray(_ref5,1),key=_ref6[0];return key})},values:function(){return roles3.map(function(_ref7){var _ref8=_slicedToArray(_ref7,2),values2=_ref8[1];return values2})}};exports.default=(0, _iterationDecorator.default)(rolesMap,rolesMap.entries());}});var require_elementRoleMap=__commonJS({"../../node_modules/aria-query/lib/elementRoleMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _iterationDecorator=_interopRequireDefault(require_iterationDecorator()),_rolesMap=_interopRequireDefault(require_rolesMap());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_unsupportedIterableToArray(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _unsupportedIterableToArray(r,a2){if(r){if(typeof r=="string")return _arrayLikeToArray(r,a2);var t={}.toString.call(r).slice(8,-1);return t==="Object"&&r.constructor&&(t=r.constructor.name),t==="Map"||t==="Set"?Array.from(r):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a2):void 0}}function _arrayLikeToArray(r,a2){(a2==null||a2>r.length)&&(a2=r.length);for(var e=0,n=Array(a2);e<a2;e++)n[e]=r[e];return n}function _iterableToArrayLimit(r,l2){var t=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(t!=null){var e,n,i2,u2,a2=[],f4=!0,o=!1;try{if(i2=(t=t.call(r)).next,l2===0){if(Object(t)!==t)return;f4=!1;}else for(;!(f4=(e=i2.call(t)).done)&&(a2.push(e.value),a2.length!==l2);f4=!0);}catch(r2){o=!0,n=r2;}finally{try{if(!f4&&t.return!=null&&(u2=t.return(),Object(u2)!==u2))return}finally{if(o)throw n}}return a2}}function _arrayWithHoles(r){if(Array.isArray(r))return r}var elementRoles3=[],keys2=_rolesMap.default.keys();for(i=0;i<keys2.length;i++)if(key=keys2[i],role=_rolesMap.default.get(key),role)for(concepts=[].concat(role.baseConcepts,role.relatedConcepts),_loop=function(){var relation=concepts[k2];if(relation.module==="HTML"){var concept=relation.concept;if(concept){var elementRoleRelation=elementRoles3.filter(function(relation2){return ariaRoleRelationConceptEquals(relation2[0],concept)})[0],roles3;elementRoleRelation?roles3=elementRoleRelation[1]:roles3=[];for(var isUnique=!0,_i=0;_i<roles3.length;_i++)if(roles3[_i]===key){isUnique=!1;break}isUnique&&roles3.push(key),elementRoleRelation||elementRoles3.push([concept,roles3]);}}},k2=0;k2<concepts.length;k2++)_loop();var key,role,concepts,_loop,k2,i,elementRoleMap={entries:function(){return elementRoles3},forEach:function(fn3){for(var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_i2=0,_elementRoles=elementRoles3;_i2<_elementRoles.length;_i2++){var _elementRoles$_i=_slicedToArray(_elementRoles[_i2],2),_key=_elementRoles$_i[0],values=_elementRoles$_i[1];fn3.call(thisArg,values,_key,elementRoles3);}},get:function(key2){var item=elementRoles3.filter(function(tuple){return key2.name===tuple[0].name&&ariaRoleRelationConceptAttributeEquals(key2.attributes,tuple[0].attributes)})[0];return item&&item[1]},has:function(key2){return !!elementRoleMap.get(key2)},keys:function(){return elementRoles3.map(function(_ref){var _ref2=_slicedToArray(_ref,1),key2=_ref2[0];return key2})},values:function(){return elementRoles3.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),values2=_ref4[1];return values2})}};function ariaRoleRelationConceptEquals(a2,b){return a2.name===b.name&&ariaRoleRelationConstraintsEquals(a2.constraints,b.constraints)&&ariaRoleRelationConceptAttributeEquals(a2.attributes,b.attributes)}function ariaRoleRelationConstraintsEquals(a2,b){if(a2===void 0&&b!==void 0||a2!==void 0&&b===void 0)return !1;if(a2!==void 0&&b!==void 0){if(a2.length!==b.length)return !1;for(var _i3=0;_i3<a2.length;_i3++)if(a2[_i3]!==b[_i3])return !1}return !0}function ariaRoleRelationConceptAttributeEquals(a2,b){if(a2===void 0&&b!==void 0||a2!==void 0&&b===void 0)return !1;if(a2!==void 0&&b!==void 0){if(a2.length!==b.length)return !1;for(var _i4=0;_i4<a2.length;_i4++){if(a2[_i4].name!==b[_i4].name||a2[_i4].value!==b[_i4].value||a2[_i4].constraints===void 0&&b[_i4].constraints!==void 0||a2[_i4].constraints!==void 0&&b[_i4].constraints===void 0)return !1;if(a2[_i4].constraints!==void 0&&b[_i4].constraints!==void 0){if(a2[_i4].constraints.length!==b[_i4].constraints.length)return !1;for(var j=0;j<a2[_i4].constraints.length;j++)if(a2[_i4].constraints[j]!==b[_i4].constraints[j])return !1}}}return !0}exports.default=(0, _iterationDecorator.default)(elementRoleMap,elementRoleMap.entries());}});var require_roleElementMap=__commonJS({"../../node_modules/aria-query/lib/roleElementMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _iterationDecorator=_interopRequireDefault(require_iterationDecorator()),_rolesMap=_interopRequireDefault(require_rolesMap());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_unsupportedIterableToArray(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _unsupportedIterableToArray(r,a2){if(r){if(typeof r=="string")return _arrayLikeToArray(r,a2);var t={}.toString.call(r).slice(8,-1);return t==="Object"&&r.constructor&&(t=r.constructor.name),t==="Map"||t==="Set"?Array.from(r):t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,a2):void 0}}function _arrayLikeToArray(r,a2){(a2==null||a2>r.length)&&(a2=r.length);for(var e=0,n=Array(a2);e<a2;e++)n[e]=r[e];return n}function _iterableToArrayLimit(r,l2){var t=r==null?null:typeof Symbol<"u"&&r[Symbol.iterator]||r["@@iterator"];if(t!=null){var e,n,i2,u2,a2=[],f4=!0,o=!1;try{if(i2=(t=t.call(r)).next,l2===0){if(Object(t)!==t)return;f4=!1;}else for(;!(f4=(e=i2.call(t)).done)&&(a2.push(e.value),a2.length!==l2);f4=!0);}catch(r2){o=!0,n=r2;}finally{try{if(!f4&&t.return!=null&&(u2=t.return(),Object(u2)!==u2))return}finally{if(o)throw n}}return a2}}function _arrayWithHoles(r){if(Array.isArray(r))return r}var roleElement=[],keys2=_rolesMap.default.keys();for(i=0;i<keys2.length;i++)if(key=keys2[i],role=_rolesMap.default.get(key),relationConcepts=[],role){for(concepts=[].concat(role.baseConcepts,role.relatedConcepts),k2=0;k2<concepts.length;k2++)relation=concepts[k2],relation.module==="HTML"&&(concept=relation.concept,concept!=null&&relationConcepts.push(concept));relationConcepts.length>0&&roleElement.push([key,relationConcepts]);}var key,role,relationConcepts,concepts,relation,concept,k2,i,roleElementMap={entries:function(){return roleElement},forEach:function(fn3){for(var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_i=0,_roleElement=roleElement;_i<_roleElement.length;_i++){var _roleElement$_i=_slicedToArray(_roleElement[_i],2),_key=_roleElement$_i[0],values=_roleElement$_i[1];fn3.call(thisArg,values,_key,roleElement);}},get:function(key2){var item=roleElement.filter(function(tuple){return tuple[0]===key2})[0];return item&&item[1]},has:function(key2){return !!roleElementMap.get(key2)},keys:function(){return roleElement.map(function(_ref){var _ref2=_slicedToArray(_ref,1),key2=_ref2[0];return key2})},values:function(){return roleElement.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),values2=_ref4[1];return values2})}};exports.default=(0, _iterationDecorator.default)(roleElementMap,roleElementMap.entries());}});var require_lib=__commonJS({"../../node_modules/aria-query/lib/index.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.roles=exports.roleElements=exports.elementRoles=exports.dom=exports.aria=void 0;var _ariaPropsMap=_interopRequireDefault(require_ariaPropsMap()),_domMap=_interopRequireDefault(require_domMap()),_rolesMap=_interopRequireDefault(require_rolesMap()),_elementRoleMap=_interopRequireDefault(require_elementRoleMap()),_roleElementMap=_interopRequireDefault(require_roleElementMap());function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}exports.aria=_ariaPropsMap.default;exports.dom=_domMap.default;exports.roles=_rolesMap.default;exports.elementRoles=_elementRoleMap.default;exports.roleElements=_roleElementMap.default;}});var require_color_name=__commonJS({"../../node_modules/color-name/index.js"(exports,module2){module2.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};}});var require_conversions=__commonJS({"../../node_modules/color-convert/conversions.js"(exports,module2){var cssKeywords=require_color_name(),reverseKeywords={};for(let key of Object.keys(cssKeywords))reverseKeywords[cssKeywords[key]]=key;var convert={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};module2.exports=convert;for(let model of Object.keys(convert)){if(!("channels"in convert[model]))throw new Error("missing channels property: "+model);if(!("labels"in convert[model]))throw new Error("missing channel labels property: "+model);if(convert[model].labels.length!==convert[model].channels)throw new Error("channel and label counts mismatch: "+model);let{channels,labels}=convert[model];delete convert[model].channels,delete convert[model].labels,Object.defineProperty(convert[model],"channels",{value:channels}),Object.defineProperty(convert[model],"labels",{value:labels});}convert.rgb.hsl=function(rgb){let r=rgb[0]/255,g2=rgb[1]/255,b=rgb[2]/255,min=Math.min(r,g2,b),max=Math.max(r,g2,b),delta=max-min,h2,s;max===min?h2=0:r===max?h2=(g2-b)/delta:g2===max?h2=2+(b-r)/delta:b===max&&(h2=4+(r-g2)/delta),h2=Math.min(h2*60,360),h2<0&&(h2+=360);let l2=(min+max)/2;return max===min?s=0:l2<=.5?s=delta/(max+min):s=delta/(2-max-min),[h2,s*100,l2*100]};convert.rgb.hsv=function(rgb){let rdif,gdif,bdif,h2,s,r=rgb[0]/255,g2=rgb[1]/255,b=rgb[2]/255,v=Math.max(r,g2,b),diff2=v-Math.min(r,g2,b),diffc=function(c){return (v-c)/6/diff2+1/2};return diff2===0?(h2=0,s=0):(s=diff2/v,rdif=diffc(r),gdif=diffc(g2),bdif=diffc(b),r===v?h2=bdif-gdif:g2===v?h2=1/3+rdif-bdif:b===v&&(h2=2/3+gdif-rdif),h2<0?h2+=1:h2>1&&(h2-=1)),[h2*360,s*100,v*100]};convert.rgb.hwb=function(rgb){let r=rgb[0],g2=rgb[1],b=rgb[2],h2=convert.rgb.hsl(rgb)[0],w2=1/255*Math.min(r,Math.min(g2,b));return b=1-1/255*Math.max(r,Math.max(g2,b)),[h2,w2*100,b*100]};convert.rgb.cmyk=function(rgb){let r=rgb[0]/255,g2=rgb[1]/255,b=rgb[2]/255,k2=Math.min(1-r,1-g2,1-b),c=(1-r-k2)/(1-k2)||0,m3=(1-g2-k2)/(1-k2)||0,y2=(1-b-k2)/(1-k2)||0;return [c*100,m3*100,y2*100,k2*100]};function comparativeDistance(x2,y2){return (x2[0]-y2[0])**2+(x2[1]-y2[1])**2+(x2[2]-y2[2])**2}convert.rgb.keyword=function(rgb){let reversed=reverseKeywords[rgb];if(reversed)return reversed;let currentClosestDistance=1/0,currentClosestKeyword;for(let keyword of Object.keys(cssKeywords)){let value=cssKeywords[keyword],distance=comparativeDistance(rgb,value);distance<currentClosestDistance&&(currentClosestDistance=distance,currentClosestKeyword=keyword);}return currentClosestKeyword};convert.keyword.rgb=function(keyword){return cssKeywords[keyword]};convert.rgb.xyz=function(rgb){let r=rgb[0]/255,g2=rgb[1]/255,b=rgb[2]/255;r=r>.04045?((r+.055)/1.055)**2.4:r/12.92,g2=g2>.04045?((g2+.055)/1.055)**2.4:g2/12.92,b=b>.04045?((b+.055)/1.055)**2.4:b/12.92;let x2=r*.4124+g2*.3576+b*.1805,y2=r*.2126+g2*.7152+b*.0722,z=r*.0193+g2*.1192+b*.9505;return [x2*100,y2*100,z*100]};convert.rgb.lab=function(rgb){let xyz=convert.rgb.xyz(rgb),x2=xyz[0],y2=xyz[1],z=xyz[2];x2/=95.047,y2/=100,z/=108.883,x2=x2>.008856?x2**(1/3):7.787*x2+16/116,y2=y2>.008856?y2**(1/3):7.787*y2+16/116,z=z>.008856?z**(1/3):7.787*z+16/116;let l2=116*y2-16,a2=500*(x2-y2),b=200*(y2-z);return [l2,a2,b]};convert.hsl.rgb=function(hsl){let h2=hsl[0]/360,s=hsl[1]/100,l2=hsl[2]/100,t2,t3,val;if(s===0)return val=l2*255,[val,val,val];l2<.5?t2=l2*(1+s):t2=l2+s-l2*s;let t1=2*l2-t2,rgb=[0,0,0];for(let i=0;i<3;i++)t3=h2+1/3*-(i-1),t3<0&&t3++,t3>1&&t3--,6*t3<1?val=t1+(t2-t1)*6*t3:2*t3<1?val=t2:3*t3<2?val=t1+(t2-t1)*(2/3-t3)*6:val=t1,rgb[i]=val*255;return rgb};convert.hsl.hsv=function(hsl){let h2=hsl[0],s=hsl[1]/100,l2=hsl[2]/100,smin=s,lmin=Math.max(l2,.01);l2*=2,s*=l2<=1?l2:2-l2,smin*=lmin<=1?lmin:2-lmin;let v=(l2+s)/2,sv=l2===0?2*smin/(lmin+smin):2*s/(l2+s);return [h2,sv*100,v*100]};convert.hsv.rgb=function(hsv){let h2=hsv[0]/60,s=hsv[1]/100,v=hsv[2]/100,hi=Math.floor(h2)%6,f4=h2-Math.floor(h2),p2=255*v*(1-s),q=255*v*(1-s*f4),t=255*v*(1-s*(1-f4));switch(v*=255,hi){case 0:return [v,t,p2];case 1:return [q,v,p2];case 2:return [p2,v,t];case 3:return [p2,q,v];case 4:return [t,p2,v];case 5:return [v,p2,q]}};convert.hsv.hsl=function(hsv){let h2=hsv[0],s=hsv[1]/100,v=hsv[2]/100,vmin=Math.max(v,.01),sl,l2;l2=(2-s)*v;let lmin=(2-s)*vmin;return sl=s*vmin,sl/=lmin<=1?lmin:2-lmin,sl=sl||0,l2/=2,[h2,sl*100,l2*100]};convert.hwb.rgb=function(hwb){let h2=hwb[0]/360,wh=hwb[1]/100,bl=hwb[2]/100,ratio=wh+bl,f4;ratio>1&&(wh/=ratio,bl/=ratio);let i=Math.floor(6*h2),v=1-bl;f4=6*h2-i,(i&1)!==0&&(f4=1-f4);let n=wh+f4*(v-wh),r,g2,b;switch(i){default:case 6:case 0:r=v,g2=n,b=wh;break;case 1:r=n,g2=v,b=wh;break;case 2:r=wh,g2=v,b=n;break;case 3:r=wh,g2=n,b=v;break;case 4:r=n,g2=wh,b=v;break;case 5:r=v,g2=wh,b=n;break}return [r*255,g2*255,b*255]};convert.cmyk.rgb=function(cmyk){let c=cmyk[0]/100,m3=cmyk[1]/100,y2=cmyk[2]/100,k2=cmyk[3]/100,r=1-Math.min(1,c*(1-k2)+k2),g2=1-Math.min(1,m3*(1-k2)+k2),b=1-Math.min(1,y2*(1-k2)+k2);return [r*255,g2*255,b*255]};convert.xyz.rgb=function(xyz){let x2=xyz[0]/100,y2=xyz[1]/100,z=xyz[2]/100,r,g2,b;return r=x2*3.2406+y2*-1.5372+z*-.4986,g2=x2*-.9689+y2*1.8758+z*.0415,b=x2*.0557+y2*-.204+z*1.057,r=r>.0031308?1.055*r**(1/2.4)-.055:r*12.92,g2=g2>.0031308?1.055*g2**(1/2.4)-.055:g2*12.92,b=b>.0031308?1.055*b**(1/2.4)-.055:b*12.92,r=Math.min(Math.max(0,r),1),g2=Math.min(Math.max(0,g2),1),b=Math.min(Math.max(0,b),1),[r*255,g2*255,b*255]};convert.xyz.lab=function(xyz){let x2=xyz[0],y2=xyz[1],z=xyz[2];x2/=95.047,y2/=100,z/=108.883,x2=x2>.008856?x2**(1/3):7.787*x2+16/116,y2=y2>.008856?y2**(1/3):7.787*y2+16/116,z=z>.008856?z**(1/3):7.787*z+16/116;let l2=116*y2-16,a2=500*(x2-y2),b=200*(y2-z);return [l2,a2,b]};convert.lab.xyz=function(lab){let l2=lab[0],a2=lab[1],b=lab[2],x2,y2,z;y2=(l2+16)/116,x2=a2/500+y2,z=y2-b/200;let y22=y2**3,x22=x2**3,z2=z**3;return y2=y22>.008856?y22:(y2-16/116)/7.787,x2=x22>.008856?x22:(x2-16/116)/7.787,z=z2>.008856?z2:(z-16/116)/7.787,x2*=95.047,y2*=100,z*=108.883,[x2,y2,z]};convert.lab.lch=function(lab){let l2=lab[0],a2=lab[1],b=lab[2],h2;h2=Math.atan2(b,a2)*360/2/Math.PI,h2<0&&(h2+=360);let c=Math.sqrt(a2*a2+b*b);return [l2,c,h2]};convert.lch.lab=function(lch){let l2=lch[0],c=lch[1],hr=lch[2]/360*2*Math.PI,a2=c*Math.cos(hr),b=c*Math.sin(hr);return [l2,a2,b]};convert.rgb.ansi16=function(args,saturation=null){let[r,g2,b]=args,value=saturation===null?convert.rgb.hsv(args)[2]:saturation;if(value=Math.round(value/50),value===0)return 30;let ansi=30+(Math.round(b/255)<<2|Math.round(g2/255)<<1|Math.round(r/255));return value===2&&(ansi+=60),ansi};convert.hsv.ansi16=function(args){return convert.rgb.ansi16(convert.hsv.rgb(args),args[2])};convert.rgb.ansi256=function(args){let r=args[0],g2=args[1],b=args[2];return r===g2&&g2===b?r<8?16:r>248?231:Math.round((r-8)/247*24)+232:16+36*Math.round(r/255*5)+6*Math.round(g2/255*5)+Math.round(b/255*5)};convert.ansi16.rgb=function(args){let color=args%10;if(color===0||color===7)return args>50&&(color+=3.5),color=color/10.5*255,[color,color,color];let mult=(~~(args>50)+1)*.5,r=(color&1)*mult*255,g2=(color>>1&1)*mult*255,b=(color>>2&1)*mult*255;return [r,g2,b]};convert.ansi256.rgb=function(args){if(args>=232){let c=(args-232)*10+8;return [c,c,c]}args-=16;let rem,r=Math.floor(args/36)/5*255,g2=Math.floor((rem=args%36)/6)/5*255,b=rem%6/5*255;return [r,g2,b]};convert.rgb.hex=function(args){let string=(((Math.round(args[0])&255)<<16)+((Math.round(args[1])&255)<<8)+(Math.round(args[2])&255)).toString(16).toUpperCase();return "000000".substring(string.length)+string};convert.hex.rgb=function(args){let match=args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!match)return [0,0,0];let colorString=match[0];match[0].length===3&&(colorString=colorString.split("").map(char=>char+char).join(""));let integer=parseInt(colorString,16),r=integer>>16&255,g2=integer>>8&255,b=integer&255;return [r,g2,b]};convert.rgb.hcg=function(rgb){let r=rgb[0]/255,g2=rgb[1]/255,b=rgb[2]/255,max=Math.max(Math.max(r,g2),b),min=Math.min(Math.min(r,g2),b),chroma=max-min,grayscale,hue;return chroma<1?grayscale=min/(1-chroma):grayscale=0,chroma<=0?hue=0:max===r?hue=(g2-b)/chroma%6:max===g2?hue=2+(b-r)/chroma:hue=4+(r-g2)/chroma,hue/=6,hue%=1,[hue*360,chroma*100,grayscale*100]};convert.hsl.hcg=function(hsl){let s=hsl[1]/100,l2=hsl[2]/100,c=l2<.5?2*s*l2:2*s*(1-l2),f4=0;return c<1&&(f4=(l2-.5*c)/(1-c)),[hsl[0],c*100,f4*100]};convert.hsv.hcg=function(hsv){let s=hsv[1]/100,v=hsv[2]/100,c=s*v,f4=0;return c<1&&(f4=(v-c)/(1-c)),[hsv[0],c*100,f4*100]};convert.hcg.rgb=function(hcg){let h2=hcg[0]/360,c=hcg[1]/100,g2=hcg[2]/100;if(c===0)return [g2*255,g2*255,g2*255];let pure=[0,0,0],hi=h2%1*6,v=hi%1,w2=1-v,mg=0;switch(Math.floor(hi)){case 0:pure[0]=1,pure[1]=v,pure[2]=0;break;case 1:pure[0]=w2,pure[1]=1,pure[2]=0;break;case 2:pure[0]=0,pure[1]=1,pure[2]=v;break;case 3:pure[0]=0,pure[1]=w2,pure[2]=1;break;case 4:pure[0]=v,pure[1]=0,pure[2]=1;break;default:pure[0]=1,pure[1]=0,pure[2]=w2;}return mg=(1-c)*g2,[(c*pure[0]+mg)*255,(c*pure[1]+mg)*255,(c*pure[2]+mg)*255]};convert.hcg.hsv=function(hcg){let c=hcg[1]/100,g2=hcg[2]/100,v=c+g2*(1-c),f4=0;return v>0&&(f4=c/v),[hcg[0],f4*100,v*100]};convert.hcg.hsl=function(hcg){let c=hcg[1]/100,l2=hcg[2]/100*(1-c)+.5*c,s=0;return l2>0&&l2<.5?s=c/(2*l2):l2>=.5&&l2<1&&(s=c/(2*(1-l2))),[hcg[0],s*100,l2*100]};convert.hcg.hwb=function(hcg){let c=hcg[1]/100,g2=hcg[2]/100,v=c+g2*(1-c);return [hcg[0],(v-c)*100,(1-v)*100]};convert.hwb.hcg=function(hwb){let w2=hwb[1]/100,v=1-hwb[2]/100,c=v-w2,g2=0;return c<1&&(g2=(v-c)/(1-c)),[hwb[0],c*100,g2*100]};convert.apple.rgb=function(apple){return [apple[0]/65535*255,apple[1]/65535*255,apple[2]/65535*255]};convert.rgb.apple=function(rgb){return [rgb[0]/255*65535,rgb[1]/255*65535,rgb[2]/255*65535]};convert.gray.rgb=function(args){return [args[0]/100*255,args[0]/100*255,args[0]/100*255]};convert.gray.hsl=function(args){return [0,0,args[0]]};convert.gray.hsv=convert.gray.hsl;convert.gray.hwb=function(gray){return [0,100,gray[0]]};convert.gray.cmyk=function(gray){return [0,0,0,gray[0]]};convert.gray.lab=function(gray){return [gray[0],0,0]};convert.gray.hex=function(gray){let val=Math.round(gray[0]/100*255)&255,string=((val<<16)+(val<<8)+val).toString(16).toUpperCase();return "000000".substring(string.length)+string};convert.rgb.gray=function(rgb){return [(rgb[0]+rgb[1]+rgb[2])/3/255*100]};}});var require_route=__commonJS({"../../node_modules/color-convert/route.js"(exports,module2){var conversions=require_conversions();function buildGraph(){let graph={},models=Object.keys(conversions);for(let len=models.length,i=0;i<len;i++)graph[models[i]]={distance:-1,parent:null};return graph}function deriveBFS(fromModel){let graph=buildGraph(),queue=[fromModel];for(graph[fromModel].distance=0;queue.length;){let current=queue.pop(),adjacents=Object.keys(conversions[current]);for(let len=adjacents.length,i=0;i<len;i++){let adjacent=adjacents[i],node=graph[adjacent];node.distance===-1&&(node.distance=graph[current].distance+1,node.parent=current,queue.unshift(adjacent));}}return graph}function link(from,to){return function(args){return to(from(args))}}function wrapConversion(toModel,graph){let path=[graph[toModel].parent,toModel],fn3=conversions[graph[toModel].parent][toModel],cur=graph[toModel].parent;for(;graph[cur].parent;)path.unshift(graph[cur].parent),fn3=link(conversions[graph[cur].parent][cur],fn3),cur=graph[cur].parent;return fn3.conversion=path,fn3}module2.exports=function(fromModel){let graph=deriveBFS(fromModel),conversion={},models=Object.keys(graph);for(let len=models.length,i=0;i<len;i++){let toModel=models[i];graph[toModel].parent!==null&&(conversion[toModel]=wrapConversion(toModel,graph));}return conversion};}});var require_color_convert=__commonJS({"../../node_modules/color-convert/index.js"(exports,module2){var conversions=require_conversions(),route=require_route(),convert={},models=Object.keys(conversions);function wrapRaw(fn3){let wrappedFn=function(...args){let arg0=args[0];return arg0==null?arg0:(arg0.length>1&&(args=arg0),fn3(args))};return "conversion"in fn3&&(wrappedFn.conversion=fn3.conversion),wrappedFn}function wrapRounded(fn3){let wrappedFn=function(...args){let arg0=args[0];if(arg0==null)return arg0;arg0.length>1&&(args=arg0);let result=fn3(args);if(typeof result=="object")for(let len=result.length,i=0;i<len;i++)result[i]=Math.round(result[i]);return result};return "conversion"in fn3&&(wrappedFn.conversion=fn3.conversion),wrappedFn}models.forEach(fromModel=>{convert[fromModel]={},Object.defineProperty(convert[fromModel],"channels",{value:conversions[fromModel].channels}),Object.defineProperty(convert[fromModel],"labels",{value:conversions[fromModel].labels});let routes=route(fromModel);Object.keys(routes).forEach(toModel=>{let fn3=routes[toModel];convert[fromModel][toModel]=wrapRounded(fn3),convert[fromModel][toModel].raw=wrapRaw(fn3);});});module2.exports=convert;}});var require_ansi_styles=__commonJS({"../../node_modules/ansi-styles/index.js"(exports,module2){var wrapAnsi16=(fn3,offset)=>(...args)=>`\\x1B[${fn3(...args)+offset}m`,wrapAnsi256=(fn3,offset)=>(...args)=>{let code=fn3(...args);return `\\x1B[${38+offset};5;${code}m`},wrapAnsi16m=(fn3,offset)=>(...args)=>{let rgb=fn3(...args);return `\\x1B[${38+offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`},ansi2ansi=n=>n,rgb2rgb=(r,g2,b)=>[r,g2,b],setLazyProperty=(object,property,get2)=>{Object.defineProperty(object,property,{get:()=>{let value=get2();return Object.defineProperty(object,property,{value,enumerable:!0,configurable:!0}),value},enumerable:!0,configurable:!0});},colorConvert,makeDynamicStyles=(wrap,targetSpace,identity,isBackground)=>{colorConvert===void 0&&(colorConvert=require_color_convert());let offset=isBackground?10:0,styles3={};for(let[sourceSpace,suite]of Object.entries(colorConvert)){let name=sourceSpace==="ansi16"?"ansi":sourceSpace;sourceSpace===targetSpace?styles3[name]=wrap(identity,offset):typeof suite=="object"&&(styles3[name]=wrap(suite[targetSpace],offset));}return styles3};function assembleStyles(){let codes=new Map,styles3={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};styles3.color.gray=styles3.color.blackBright,styles3.bgColor.bgGray=styles3.bgColor.bgBlackBright,styles3.color.grey=styles3.color.blackBright,styles3.bgColor.bgGrey=styles3.bgColor.bgBlackBright;for(let[groupName,group]of Object.entries(styles3)){for(let[styleName,style]of Object.entries(group))styles3[styleName]={open:`\\x1B[${style[0]}m`,close:`\\x1B[${style[1]}m`},group[styleName]=styles3[styleName],codes.set(style[0],style[1]);Object.defineProperty(styles3,groupName,{value:group,enumerable:!1});}return Object.defineProperty(styles3,"codes",{value:codes,enumerable:!1}),styles3.color.close="\\x1B[39m",styles3.bgColor.close="\\x1B[49m",setLazyProperty(styles3.color,"ansi",()=>makeDynamicStyles(wrapAnsi16,"ansi16",ansi2ansi,!1)),setLazyProperty(styles3.color,"ansi256",()=>makeDynamicStyles(wrapAnsi256,"ansi256",ansi2ansi,!1)),setLazyProperty(styles3.color,"ansi16m",()=>makeDynamicStyles(wrapAnsi16m,"rgb",rgb2rgb,!1)),setLazyProperty(styles3.bgColor,"ansi",()=>makeDynamicStyles(wrapAnsi16,"ansi16",ansi2ansi,!0)),setLazyProperty(styles3.bgColor,"ansi256",()=>makeDynamicStyles(wrapAnsi256,"ansi256",ansi2ansi,!0)),setLazyProperty(styles3.bgColor,"ansi16m",()=>makeDynamicStyles(wrapAnsi16m,"rgb",rgb2rgb,!0)),styles3}Object.defineProperty(module2,"exports",{enumerable:!0,get:assembleStyles});}});var require_browser=__commonJS({"../../node_modules/supports-color/browser.js"(exports,module2){module2.exports={stdout:!1,stderr:!1};}});var require_util2=__commonJS({"../../node_modules/@testing-library/jest-dom/node_modules/chalk/source/util.js"(exports,module2){var stringReplaceAll=(string,substring,replacer)=>{let index=string.indexOf(substring);if(index===-1)return string;let substringLength=substring.length,endIndex=0,returnValue="";do returnValue+=string.substr(endIndex,index-endIndex)+substring+replacer,endIndex=index+substringLength,index=string.indexOf(substring,endIndex);while(index!==-1);return returnValue+=string.substr(endIndex),returnValue},stringEncaseCRLFWithFirstIndex=(string,prefix,postfix,index)=>{let endIndex=0,returnValue="";do{let gotCR=string[index-1]==="\\r";returnValue+=string.substr(endIndex,(gotCR?index-1:index)-endIndex)+prefix+(gotCR?`\\r\n`:`\n`)+postfix,endIndex=index+1,index=string.indexOf(`\n`,endIndex);}while(index!==-1);return returnValue+=string.substr(endIndex),returnValue};module2.exports={stringReplaceAll,stringEncaseCRLFWithFirstIndex};}});var require_templates=__commonJS({"../../node_modules/@testing-library/jest-dom/node_modules/chalk/source/templates.js"(exports,module2){var TEMPLATE_REGEX=/(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi,STYLE_REGEX=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g,STRING_REGEX=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/,ESCAPE_REGEX=/\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.)|([^\\\\])/gi,ESCAPES=new Map([["n",`\n`],["r","\\r"],["t","\t"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e","\\x1B"],["a","\\x07"]]);function unescape(c){let u2=c[0]==="u",bracket=c[1]==="{";return u2&&!bracket&&c.length===5||c[0]==="x"&&c.length===3?String.fromCharCode(parseInt(c.slice(1),16)):u2&&bracket?String.fromCodePoint(parseInt(c.slice(2,-1),16)):ESCAPES.get(c)||c}function parseArguments(name,arguments_){let results=[],chunks=arguments_.trim().split(/\\s*,\\s*/g),matches3;for(let chunk of chunks){let number=Number(chunk);if(!Number.isNaN(number))results.push(number);else if(matches3=chunk.match(STRING_REGEX))results.push(matches3[2].replace(ESCAPE_REGEX,(m3,escape4,character)=>escape4?unescape(escape4):character));else throw new Error(`Invalid Chalk template style argument: ${chunk} (in style \'${name}\')`)}return results}function parseStyle(style){STYLE_REGEX.lastIndex=0;let results=[],matches3;for(;(matches3=STYLE_REGEX.exec(style))!==null;){let name=matches3[1];if(matches3[2]){let args=parseArguments(name,matches3[2]);results.push([name].concat(args));}else results.push([name]);}return results}function buildStyle(chalk3,styles3){let enabled={};for(let layer of styles3)for(let style of layer.styles)enabled[style[0]]=layer.inverse?null:style.slice(1);let current=chalk3;for(let[styleName,styles4]of Object.entries(enabled))if(Array.isArray(styles4)){if(!(styleName in current))throw new Error(`Unknown Chalk style: ${styleName}`);current=styles4.length>0?current[styleName](...styles4):current[styleName];}return current}module2.exports=(chalk3,temporary)=>{let styles3=[],chunks=[],chunk=[];if(temporary.replace(TEMPLATE_REGEX,(m3,escapeCharacter,inverse,style,close,character)=>{if(escapeCharacter)chunk.push(unescape(escapeCharacter));else if(style){let string=chunk.join("");chunk=[],chunks.push(styles3.length===0?string:buildStyle(chalk3,styles3)(string)),styles3.push({inverse,styles:parseStyle(style)});}else if(close){if(styles3.length===0)throw new Error("Found extraneous } in Chalk template literal");chunks.push(buildStyle(chalk3,styles3)(chunk.join(""))),chunk=[],styles3.pop();}else chunk.push(character);}),chunks.push(chunk.join("")),styles3.length>0){let errMsg=`Chalk template literal is missing ${styles3.length} closing bracket${styles3.length===1?"":"s"} (\\`}\\`)`;throw new Error(errMsg)}return chunks.join("")};}});var require_source=__commonJS({"../../node_modules/@testing-library/jest-dom/node_modules/chalk/source/index.js"(exports,module2){var ansiStyles=require_ansi_styles(),{stdout:stdoutColor,stderr:stderrColor}=require_browser(),{stringReplaceAll,stringEncaseCRLFWithFirstIndex}=require_util2(),levelMapping=["ansi","ansi","ansi256","ansi16m"],styles3=Object.create(null),applyOptions=(object,options={})=>{if(options.level>3||options.level<0)throw new Error("The `level` option should be an integer from 0 to 3");let colorLevel=stdoutColor?stdoutColor.level:0;object.level=options.level===void 0?colorLevel:options.level;},ChalkClass=class{constructor(options){return chalkFactory(options)}},chalkFactory=options=>{let chalk4={};return applyOptions(chalk4,options),chalk4.template=(...arguments_)=>chalkTag(chalk4.template,...arguments_),Object.setPrototypeOf(chalk4,Chalk.prototype),Object.setPrototypeOf(chalk4.template,chalk4),chalk4.template.constructor=()=>{throw new Error("`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.")},chalk4.template.Instance=ChalkClass,chalk4.template};function Chalk(options){return chalkFactory(options)}for(let[styleName,style]of Object.entries(ansiStyles))styles3[styleName]={get(){let builder=createBuilder(this,createStyler(style.open,style.close,this._styler),this._isEmpty);return Object.defineProperty(this,styleName,{value:builder}),builder}};styles3.visible={get(){let builder=createBuilder(this,this._styler,!0);return Object.defineProperty(this,"visible",{value:builder}),builder}};var usedModels=["rgb","hex","keyword","hsl","hsv","hwb","ansi","ansi256"];for(let model of usedModels)styles3[model]={get(){let{level}=this;return function(...arguments_){let styler=createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_),ansiStyles.color.close,this._styler);return createBuilder(this,styler,this._isEmpty)}}};for(let model of usedModels){let bgModel="bg"+model[0].toUpperCase()+model.slice(1);styles3[bgModel]={get(){let{level}=this;return function(...arguments_){let styler=createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_),ansiStyles.bgColor.close,this._styler);return createBuilder(this,styler,this._isEmpty)}}};}var proto=Object.defineProperties(()=>{},{...styles3,level:{enumerable:!0,get(){return this._generator.level},set(level){this._generator.level=level;}}}),createStyler=(open,close,parent)=>{let openAll,closeAll;return parent===void 0?(openAll=open,closeAll=close):(openAll=parent.openAll+open,closeAll=close+parent.closeAll),{open,close,openAll,closeAll,parent}},createBuilder=(self2,_styler,_isEmpty)=>{let builder=(...arguments_)=>applyStyle(builder,arguments_.length===1?""+arguments_[0]:arguments_.join(" "));return builder.__proto__=proto,builder._generator=self2,builder._styler=_styler,builder._isEmpty=_isEmpty,builder},applyStyle=(self2,string)=>{if(self2.level<=0||!string)return self2._isEmpty?"":string;let styler=self2._styler;if(styler===void 0)return string;let{openAll,closeAll}=styler;if(string.indexOf("\\x1B")!==-1)for(;styler!==void 0;)string=stringReplaceAll(string,styler.close,styler.open),styler=styler.parent;let lfIndex=string.indexOf(`\n`);return lfIndex!==-1&&(string=stringEncaseCRLFWithFirstIndex(string,closeAll,openAll,lfIndex)),openAll+string+closeAll},template,chalkTag=(chalk4,...strings)=>{let[firstString]=strings;if(!Array.isArray(firstString))return strings.join(" ");let arguments_=strings.slice(1),parts=[firstString.raw[0]];for(let i=1;i<firstString.length;i++)parts.push(String(arguments_[i-1]).replace(/[{}\\\\]/g,"\\\\$&"),String(firstString.raw[i]));return template===void 0&&(template=require_templates()),template(chalk4,parts.join(""))};Object.defineProperties(Chalk.prototype,styles3);var chalk3=Chalk();chalk3.supportsColor=stdoutColor;chalk3.stderr=Chalk({level:stderrColor?stderrColor.level:0});chalk3.stderr.supportsColor=stderrColor;chalk3.Level={None:0,Basic:1,Ansi256:2,TrueColor:3,0:"None",1:"Basic",2:"Ansi256",3:"TrueColor"};module2.exports=chalk3;}});var require_listCacheClear=__commonJS({"../../node_modules/lodash/_listCacheClear.js"(exports,module2){function listCacheClear(){this.__data__=[],this.size=0;}module2.exports=listCacheClear;}});var require_eq=__commonJS({"../../node_modules/lodash/eq.js"(exports,module2){function eq2(value,other){return value===other||value!==value&&other!==other}module2.exports=eq2;}});var require_assocIndexOf=__commonJS({"../../node_modules/lodash/_assocIndexOf.js"(exports,module2){var eq2=require_eq();function assocIndexOf(array,key){for(var length=array.length;length--;)if(eq2(array[length][0],key))return length;return -1}module2.exports=assocIndexOf;}});var require_listCacheDelete=__commonJS({"../../node_modules/lodash/_listCacheDelete.js"(exports,module2){var assocIndexOf=require_assocIndexOf(),arrayProto=Array.prototype,splice=arrayProto.splice;function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0)return !1;var lastIndex=data.length-1;return index==lastIndex?data.pop():splice.call(data,index,1),--this.size,!0}module2.exports=listCacheDelete;}});var require_listCacheGet=__commonJS({"../../node_modules/lodash/_listCacheGet.js"(exports,module2){var assocIndexOf=require_assocIndexOf();function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?void 0:data[index][1]}module2.exports=listCacheGet;}});var require_listCacheHas=__commonJS({"../../node_modules/lodash/_listCacheHas.js"(exports,module2){var assocIndexOf=require_assocIndexOf();function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1}module2.exports=listCacheHas;}});var require_listCacheSet=__commonJS({"../../node_modules/lodash/_listCacheSet.js"(exports,module2){var assocIndexOf=require_assocIndexOf();function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);return index<0?(++this.size,data.push([key,value])):data[index][1]=value,this}module2.exports=listCacheSet;}});var require_ListCache=__commonJS({"../../node_modules/lodash/_ListCache.js"(exports,module2){var listCacheClear=require_listCacheClear(),listCacheDelete=require_listCacheDelete(),listCacheGet=require_listCacheGet(),listCacheHas=require_listCacheHas(),listCacheSet=require_listCacheSet();function ListCache(entries){var index=-1,length=entries==null?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1]);}}ListCache.prototype.clear=listCacheClear;ListCache.prototype.delete=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;module2.exports=ListCache;}});var require_stackClear=__commonJS({"../../node_modules/lodash/_stackClear.js"(exports,module2){var ListCache=require_ListCache();function stackClear(){this.__data__=new ListCache,this.size=0;}module2.exports=stackClear;}});var require_stackDelete=__commonJS({"../../node_modules/lodash/_stackDelete.js"(exports,module2){function stackDelete(key){var data=this.__data__,result=data.delete(key);return this.size=data.size,result}module2.exports=stackDelete;}});var require_stackGet=__commonJS({"../../node_modules/lodash/_stackGet.js"(exports,module2){function stackGet(key){return this.__data__.get(key)}module2.exports=stackGet;}});var require_stackHas=__commonJS({"../../node_modules/lodash/_stackHas.js"(exports,module2){function stackHas(key){return this.__data__.has(key)}module2.exports=stackHas;}});var require_freeGlobal=__commonJS({"../../node_modules/lodash/_freeGlobal.js"(exports,module2){var freeGlobal=typeof __webpack_require__.g=="object"&&__webpack_require__.g&&__webpack_require__.g.Object===Object&&__webpack_require__.g;module2.exports=freeGlobal;}});var require_root=__commonJS({"../../node_modules/lodash/_root.js"(exports,module2){var freeGlobal=require_freeGlobal(),freeSelf=typeof self=="object"&&self&&self.Object===Object&&self,root=freeGlobal||freeSelf||Function("return this")();module2.exports=root;}});var require_Symbol=__commonJS({"../../node_modules/lodash/_Symbol.js"(exports,module2){var root=require_root(),Symbol2=root.Symbol;module2.exports=Symbol2;}});var require_getRawTag=__commonJS({"../../node_modules/lodash/_getRawTag.js"(exports,module2){var Symbol2=require_Symbol(),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,nativeObjectToString=objectProto.toString,symToStringTag=Symbol2?Symbol2.toStringTag:void 0;function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=void 0;var unmasked=!0;}catch{}var result=nativeObjectToString.call(value);return unmasked&&(isOwn?value[symToStringTag]=tag:delete value[symToStringTag]),result}module2.exports=getRawTag;}});var require_objectToString=__commonJS({"../../node_modules/lodash/_objectToString.js"(exports,module2){var objectProto=Object.prototype,nativeObjectToString=objectProto.toString;function objectToString(value){return nativeObjectToString.call(value)}module2.exports=objectToString;}});var require_baseGetTag=__commonJS({"../../node_modules/lodash/_baseGetTag.js"(exports,module2){var Symbol2=require_Symbol(),getRawTag=require_getRawTag(),objectToString=require_objectToString(),nullTag="[object Null]",undefinedTag="[object Undefined]",symToStringTag=Symbol2?Symbol2.toStringTag:void 0;function baseGetTag(value){return value==null?value===void 0?undefinedTag:nullTag:symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value)}module2.exports=baseGetTag;}});var require_isObject=__commonJS({"../../node_modules/lodash/isObject.js"(exports,module2){function isObject2(value){var type5=typeof value;return value!=null&&(type5=="object"||type5=="function")}module2.exports=isObject2;}});var require_isFunction=__commonJS({"../../node_modules/lodash/isFunction.js"(exports,module2){var baseGetTag=require_baseGetTag(),isObject2=require_isObject(),asyncTag="[object AsyncFunction]",funcTag="[object Function]",genTag="[object GeneratorFunction]",proxyTag="[object Proxy]";function isFunction(value){if(!isObject2(value))return !1;var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag}module2.exports=isFunction;}});var require_coreJsData=__commonJS({"../../node_modules/lodash/_coreJsData.js"(exports,module2){var root=require_root(),coreJsData=root["__core-js_shared__"];module2.exports=coreJsData;}});var require_isMasked=__commonJS({"../../node_modules/lodash/_isMasked.js"(exports,module2){var coreJsData=require_coreJsData(),maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||"");return uid?"Symbol(src)_1."+uid:""}();function isMasked(func){return !!maskSrcKey&&maskSrcKey in func}module2.exports=isMasked;}});var require_toSource=__commonJS({"../../node_modules/lodash/_toSource.js"(exports,module2){var funcProto=Function.prototype,funcToString=funcProto.toString;function toSource(func){if(func!=null){try{return funcToString.call(func)}catch{}try{return func+""}catch{}}return ""}module2.exports=toSource;}});var require_baseIsNative=__commonJS({"../../node_modules/lodash/_baseIsNative.js"(exports,module2){var isFunction=require_isFunction(),isMasked=require_isMasked(),isObject2=require_isObject(),toSource=require_toSource(),reRegExpChar=/[\\\\^$.*+?()[\\]{}|]/g,reIsHostCtor=/^\\[object .+?Constructor\\]$/,funcProto=Function.prototype,objectProto=Object.prototype,funcToString=funcProto.toString,hasOwnProperty=objectProto.hasOwnProperty,reIsNative=RegExp("^"+funcToString.call(hasOwnProperty).replace(reRegExpChar,"\\\\$&").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,"$1.*?")+"$");function baseIsNative(value){if(!isObject2(value)||isMasked(value))return !1;var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value))}module2.exports=baseIsNative;}});var require_getValue=__commonJS({"../../node_modules/lodash/_getValue.js"(exports,module2){function getValue(object,key){return object?.[key]}module2.exports=getValue;}});var require_getNative=__commonJS({"../../node_modules/lodash/_getNative.js"(exports,module2){var baseIsNative=require_baseIsNative(),getValue=require_getValue();function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:void 0}module2.exports=getNative;}});var require_Map=__commonJS({"../../node_modules/lodash/_Map.js"(exports,module2){var getNative=require_getNative(),root=require_root(),Map2=getNative(root,"Map");module2.exports=Map2;}});var require_nativeCreate=__commonJS({"../../node_modules/lodash/_nativeCreate.js"(exports,module2){var getNative=require_getNative(),nativeCreate=getNative(Object,"create");module2.exports=nativeCreate;}});var require_hashClear=__commonJS({"../../node_modules/lodash/_hashClear.js"(exports,module2){var nativeCreate=require_nativeCreate();function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{},this.size=0;}module2.exports=hashClear;}});var require_hashDelete=__commonJS({"../../node_modules/lodash/_hashDelete.js"(exports,module2){function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];return this.size-=result?1:0,result}module2.exports=hashDelete;}});var require_hashGet=__commonJS({"../../node_modules/lodash/_hashGet.js"(exports,module2){var nativeCreate=require_nativeCreate(),HASH_UNDEFINED="__lodash_hash_undefined__",objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?void 0:result}return hasOwnProperty.call(data,key)?data[key]:void 0}module2.exports=hashGet;}});var require_hashHas=__commonJS({"../../node_modules/lodash/_hashHas.js"(exports,module2){var nativeCreate=require_nativeCreate(),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==void 0:hasOwnProperty.call(data,key)}module2.exports=hashHas;}});var require_hashSet=__commonJS({"../../node_modules/lodash/_hashSet.js"(exports,module2){var nativeCreate=require_nativeCreate(),HASH_UNDEFINED="__lodash_hash_undefined__";function hashSet(key,value){var data=this.__data__;return this.size+=this.has(key)?0:1,data[key]=nativeCreate&&value===void 0?HASH_UNDEFINED:value,this}module2.exports=hashSet;}});var require_Hash=__commonJS({"../../node_modules/lodash/_Hash.js"(exports,module2){var hashClear=require_hashClear(),hashDelete=require_hashDelete(),hashGet=require_hashGet(),hashHas=require_hashHas(),hashSet=require_hashSet();function Hash(entries){var index=-1,length=entries==null?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1]);}}Hash.prototype.clear=hashClear;Hash.prototype.delete=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;module2.exports=Hash;}});var require_mapCacheClear=__commonJS({"../../node_modules/lodash/_mapCacheClear.js"(exports,module2){var Hash=require_Hash(),ListCache=require_ListCache(),Map2=require_Map();function mapCacheClear(){this.size=0,this.__data__={hash:new Hash,map:new(Map2||ListCache),string:new Hash};}module2.exports=mapCacheClear;}});var require_isKeyable=__commonJS({"../../node_modules/lodash/_isKeyable.js"(exports,module2){function isKeyable(value){var type5=typeof value;return type5=="string"||type5=="number"||type5=="symbol"||type5=="boolean"?value!=="__proto__":value===null}module2.exports=isKeyable;}});var require_getMapData=__commonJS({"../../node_modules/lodash/_getMapData.js"(exports,module2){var isKeyable=require_isKeyable();function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=="string"?"string":"hash"]:data.map}module2.exports=getMapData;}});var require_mapCacheDelete=__commonJS({"../../node_modules/lodash/_mapCacheDelete.js"(exports,module2){var getMapData=require_getMapData();function mapCacheDelete(key){var result=getMapData(this,key).delete(key);return this.size-=result?1:0,result}module2.exports=mapCacheDelete;}});var require_mapCacheGet=__commonJS({"../../node_modules/lodash/_mapCacheGet.js"(exports,module2){var getMapData=require_getMapData();function mapCacheGet(key){return getMapData(this,key).get(key)}module2.exports=mapCacheGet;}});var require_mapCacheHas=__commonJS({"../../node_modules/lodash/_mapCacheHas.js"(exports,module2){var getMapData=require_getMapData();function mapCacheHas(key){return getMapData(this,key).has(key)}module2.exports=mapCacheHas;}});var require_mapCacheSet=__commonJS({"../../node_modules/lodash/_mapCacheSet.js"(exports,module2){var getMapData=require_getMapData();function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;return data.set(key,value),this.size+=data.size==size?0:1,this}module2.exports=mapCacheSet;}});var require_MapCache=__commonJS({"../../node_modules/lodash/_MapCache.js"(exports,module2){var mapCacheClear=require_mapCacheClear(),mapCacheDelete=require_mapCacheDelete(),mapCacheGet=require_mapCacheGet(),mapCacheHas=require_mapCacheHas(),mapCacheSet=require_mapCacheSet();function MapCache(entries){var index=-1,length=entries==null?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1]);}}MapCache.prototype.clear=mapCacheClear;MapCache.prototype.delete=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;module2.exports=MapCache;}});var require_stackSet=__commonJS({"../../node_modules/lodash/_stackSet.js"(exports,module2){var ListCache=require_ListCache(),Map2=require_Map(),MapCache=require_MapCache(),LARGE_ARRAY_SIZE=200;function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map2||pairs.length<LARGE_ARRAY_SIZE-1)return pairs.push([key,value]),this.size=++data.size,this;data=this.__data__=new MapCache(pairs);}return data.set(key,value),this.size=data.size,this}module2.exports=stackSet;}});var require_Stack=__commonJS({"../../node_modules/lodash/_Stack.js"(exports,module2){var ListCache=require_ListCache(),stackClear=require_stackClear(),stackDelete=require_stackDelete(),stackGet=require_stackGet(),stackHas=require_stackHas(),stackSet=require_stackSet();function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}Stack.prototype.clear=stackClear;Stack.prototype.delete=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;module2.exports=Stack;}});var require_setCacheAdd=__commonJS({"../../node_modules/lodash/_setCacheAdd.js"(exports,module2){var HASH_UNDEFINED="__lodash_hash_undefined__";function setCacheAdd(value){return this.__data__.set(value,HASH_UNDEFINED),this}module2.exports=setCacheAdd;}});var require_setCacheHas=__commonJS({"../../node_modules/lodash/_setCacheHas.js"(exports,module2){function setCacheHas(value){return this.__data__.has(value)}module2.exports=setCacheHas;}});var require_SetCache=__commonJS({"../../node_modules/lodash/_SetCache.js"(exports,module2){var MapCache=require_MapCache(),setCacheAdd=require_setCacheAdd(),setCacheHas=require_setCacheHas();function SetCache(values){var index=-1,length=values==null?0:values.length;for(this.__data__=new MapCache;++index<length;)this.add(values[index]);}SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;module2.exports=SetCache;}});var require_arraySome=__commonJS({"../../node_modules/lodash/_arraySome.js"(exports,module2){function arraySome(array,predicate){for(var index=-1,length=array==null?0:array.length;++index<length;)if(predicate(array[index],index,array))return !0;return !1}module2.exports=arraySome;}});var require_cacheHas=__commonJS({"../../node_modules/lodash/_cacheHas.js"(exports,module2){function cacheHas(cache,key){return cache.has(key)}module2.exports=cacheHas;}});var require_equalArrays=__commonJS({"../../node_modules/lodash/_equalArrays.js"(exports,module2){var SetCache=require_SetCache(),arraySome=require_arraySome(),cacheHas=require_cacheHas(),COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength))return !1;var arrStacked=stack.get(array),othStacked=stack.get(other);if(arrStacked&&othStacked)return arrStacked==other&&othStacked==array;var index=-1,result=!0,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache:void 0;for(stack.set(array,other),stack.set(other,array);++index<arrLength;){var arrValue=array[index],othValue=other[index];if(customizer)var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);if(compared!==void 0){if(compared)continue;result=!1;break}if(seen){if(!arraySome(other,function(othValue2,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue2||equalFunc(arrValue,othValue2,bitmask,customizer,stack)))return seen.push(othIndex)})){result=!1;break}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=!1;break}}return stack.delete(array),stack.delete(other),result}module2.exports=equalArrays;}});var require_Uint8Array=__commonJS({"../../node_modules/lodash/_Uint8Array.js"(exports,module2){var root=require_root(),Uint8Array2=root.Uint8Array;module2.exports=Uint8Array2;}});var require_mapToArray=__commonJS({"../../node_modules/lodash/_mapToArray.js"(exports,module2){function mapToArray(map){var index=-1,result=Array(map.size);return map.forEach(function(value,key){result[++index]=[key,value];}),result}module2.exports=mapToArray;}});var require_setToArray=__commonJS({"../../node_modules/lodash/_setToArray.js"(exports,module2){function setToArray(set2){var index=-1,result=Array(set2.size);return set2.forEach(function(value){result[++index]=value;}),result}module2.exports=setToArray;}});var require_equalByTag=__commonJS({"../../node_modules/lodash/_equalByTag.js"(exports,module2){var Symbol2=require_Symbol(),Uint8Array2=require_Uint8Array(),eq2=require_eq(),equalArrays=require_equalArrays(),mapToArray=require_mapToArray(),setToArray=require_setToArray(),COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2,boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",mapTag="[object Map]",numberTag="[object Number]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",symbolProto=Symbol2?Symbol2.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0;function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset)return !1;object=object.buffer,other=other.buffer;case arrayBufferTag:return !(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array2(object),new Uint8Array2(other)));case boolTag:case dateTag:case numberTag:return eq2(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:return object==other+"";case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;if(convert||(convert=setToArray),object.size!=other.size&&!isPartial)return !1;var stacked=stack.get(object);if(stacked)return stacked==other;bitmask|=COMPARE_UNORDERED_FLAG,stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);return stack.delete(object),result;case symbolTag:if(symbolValueOf)return symbolValueOf.call(object)==symbolValueOf.call(other)}return !1}module2.exports=equalByTag;}});var require_arrayPush=__commonJS({"../../node_modules/lodash/_arrayPush.js"(exports,module2){function arrayPush(array,values){for(var index=-1,length=values.length,offset=array.length;++index<length;)array[offset+index]=values[index];return array}module2.exports=arrayPush;}});var require_isArray=__commonJS({"../../node_modules/lodash/isArray.js"(exports,module2){var isArray=Array.isArray;module2.exports=isArray;}});var require_baseGetAllKeys=__commonJS({"../../node_modules/lodash/_baseGetAllKeys.js"(exports,module2){var arrayPush=require_arrayPush(),isArray=require_isArray();function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object))}module2.exports=baseGetAllKeys;}});var require_arrayFilter=__commonJS({"../../node_modules/lodash/_arrayFilter.js"(exports,module2){function arrayFilter(array,predicate){for(var index=-1,length=array==null?0:array.length,resIndex=0,result=[];++index<length;){var value=array[index];predicate(value,index,array)&&(result[resIndex++]=value);}return result}module2.exports=arrayFilter;}});var require_stubArray=__commonJS({"../../node_modules/lodash/stubArray.js"(exports,module2){function stubArray(){return []}module2.exports=stubArray;}});var require_getSymbols=__commonJS({"../../node_modules/lodash/_getSymbols.js"(exports,module2){var arrayFilter=require_arrayFilter(),stubArray=require_stubArray(),objectProto=Object.prototype,propertyIsEnumerable=objectProto.propertyIsEnumerable,nativeGetSymbols=Object.getOwnPropertySymbols,getSymbols=nativeGetSymbols?function(object){return object==null?[]:(object=Object(object),arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol)}))}:stubArray;module2.exports=getSymbols;}});var require_baseTimes=__commonJS({"../../node_modules/lodash/_baseTimes.js"(exports,module2){function baseTimes(n,iteratee){for(var index=-1,result=Array(n);++index<n;)result[index]=iteratee(index);return result}module2.exports=baseTimes;}});var require_isObjectLike=__commonJS({"../../node_modules/lodash/isObjectLike.js"(exports,module2){function isObjectLike(value){return value!=null&&typeof value=="object"}module2.exports=isObjectLike;}});var require_baseIsArguments=__commonJS({"../../node_modules/lodash/_baseIsArguments.js"(exports,module2){var baseGetTag=require_baseGetTag(),isObjectLike=require_isObjectLike(),argsTag="[object Arguments]";function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag}module2.exports=baseIsArguments;}});var require_isArguments=__commonJS({"../../node_modules/lodash/isArguments.js"(exports,module2){var baseIsArguments=require_baseIsArguments(),isObjectLike=require_isObjectLike(),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty,propertyIsEnumerable=objectProto.propertyIsEnumerable,isArguments=baseIsArguments(function(){return arguments}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,"callee")&&!propertyIsEnumerable.call(value,"callee")};module2.exports=isArguments;}});var require_stubFalse=__commonJS({"../../node_modules/lodash/stubFalse.js"(exports,module2){function stubFalse(){return !1}module2.exports=stubFalse;}});var require_isBuffer=__commonJS({"../../node_modules/lodash/isBuffer.js"(exports,module2){var root=require_root(),stubFalse=require_stubFalse(),freeExports=typeof exports=="object"&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&typeof module2=="object"&&module2&&!module2.nodeType&&module2,moduleExports=freeModule&&freeModule.exports===freeExports,Buffer2=moduleExports?root.Buffer:void 0,nativeIsBuffer=Buffer2?Buffer2.isBuffer:void 0,isBuffer=nativeIsBuffer||stubFalse;module2.exports=isBuffer;}});var require_isIndex=__commonJS({"../../node_modules/lodash/_isIndex.js"(exports,module2){var MAX_SAFE_INTEGER=9007199254740991,reIsUint=/^(?:0|[1-9]\\d*)$/;function isIndex(value,length){var type5=typeof value;return length=length??MAX_SAFE_INTEGER,!!length&&(type5=="number"||type5!="symbol"&&reIsUint.test(value))&&value>-1&&value%1==0&&value<length}module2.exports=isIndex;}});var require_isLength=__commonJS({"../../node_modules/lodash/isLength.js"(exports,module2){var MAX_SAFE_INTEGER=9007199254740991;function isLength(value){return typeof value=="number"&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER}module2.exports=isLength;}});var require_baseIsTypedArray=__commonJS({"../../node_modules/lodash/_baseIsTypedArray.js"(exports,module2){var baseGetTag=require_baseGetTag(),isLength=require_isLength(),isObjectLike=require_isObjectLike(),argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",weakMapTag="[object WeakMap]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=!0;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=!1;function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)]}module2.exports=baseIsTypedArray;}});var require_baseUnary=__commonJS({"../../node_modules/lodash/_baseUnary.js"(exports,module2){function baseUnary(func){return function(value){return func(value)}}module2.exports=baseUnary;}});var require_nodeUtil=__commonJS({"../../node_modules/lodash/_nodeUtil.js"(exports,module2){var freeGlobal=require_freeGlobal(),freeExports=typeof exports=="object"&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&typeof module2=="object"&&module2&&!module2.nodeType&&module2,moduleExports=freeModule&&freeModule.exports===freeExports,freeProcess=moduleExports&&freeGlobal.process,nodeUtil=function(){try{var types=freeModule&&freeModule.require&&freeModule.require("util").types;return types||freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch{}}();module2.exports=nodeUtil;}});var require_isTypedArray=__commonJS({"../../node_modules/lodash/isTypedArray.js"(exports,module2){var baseIsTypedArray=require_baseIsTypedArray(),baseUnary=require_baseUnary(),nodeUtil=require_nodeUtil(),nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray,isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;module2.exports=isTypedArray;}});var require_arrayLikeKeys=__commonJS({"../../node_modules/lodash/_arrayLikeKeys.js"(exports,module2){var baseTimes=require_baseTimes(),isArguments=require_isArguments(),isArray=require_isArray(),isBuffer=require_isBuffer(),isIndex=require_isIndex(),isTypedArray=require_isTypedArray(),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value)(inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(key=="length"||isBuff&&(key=="offset"||key=="parent")||isType&&(key=="buffer"||key=="byteLength"||key=="byteOffset")||isIndex(key,length)))&&result.push(key);return result}module2.exports=arrayLikeKeys;}});var require_isPrototype=__commonJS({"../../node_modules/lodash/_isPrototype.js"(exports,module2){var objectProto=Object.prototype;function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=="function"&&Ctor.prototype||objectProto;return value===proto}module2.exports=isPrototype;}});var require_overArg=__commonJS({"../../node_modules/lodash/_overArg.js"(exports,module2){function overArg(func,transform){return function(arg){return func(transform(arg))}}module2.exports=overArg;}});var require_nativeKeys=__commonJS({"../../node_modules/lodash/_nativeKeys.js"(exports,module2){var overArg=require_overArg(),nativeKeys=overArg(Object.keys,Object);module2.exports=nativeKeys;}});var require_baseKeys=__commonJS({"../../node_modules/lodash/_baseKeys.js"(exports,module2){var isPrototype=require_isPrototype(),nativeKeys=require_nativeKeys(),objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;function baseKeys(object){if(!isPrototype(object))return nativeKeys(object);var result=[];for(var key in Object(object))hasOwnProperty.call(object,key)&&key!="constructor"&&result.push(key);return result}module2.exports=baseKeys;}});var require_isArrayLike=__commonJS({"../../node_modules/lodash/isArrayLike.js"(exports,module2){var isFunction=require_isFunction(),isLength=require_isLength();function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value)}module2.exports=isArrayLike;}});var require_keys=__commonJS({"../../node_modules/lodash/keys.js"(exports,module2){var arrayLikeKeys=require_arrayLikeKeys(),baseKeys=require_baseKeys(),isArrayLike=require_isArrayLike();function keys2(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object)}module2.exports=keys2;}});var require_getAllKeys=__commonJS({"../../node_modules/lodash/_getAllKeys.js"(exports,module2){var baseGetAllKeys=require_baseGetAllKeys(),getSymbols=require_getSymbols(),keys2=require_keys();function getAllKeys(object){return baseGetAllKeys(object,keys2,getSymbols)}module2.exports=getAllKeys;}});var require_equalObjects=__commonJS({"../../node_modules/lodash/_equalObjects.js"(exports,module2){var getAllKeys=require_getAllKeys(),COMPARE_PARTIAL_FLAG=1,objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial)return !1;for(var index=objLength;index--;){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key)))return !1}var objStacked=stack.get(object),othStacked=stack.get(other);if(objStacked&&othStacked)return objStacked==other&&othStacked==object;var result=!0;stack.set(object,other),stack.set(other,object);for(var skipCtor=isPartial;++index<objLength;){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer)var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);if(!(compared===void 0?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=!1;break}skipCtor||(skipCtor=key=="constructor");}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;objCtor!=othCtor&&"constructor"in object&&"constructor"in other&&!(typeof objCtor=="function"&&objCtor instanceof objCtor&&typeof othCtor=="function"&&othCtor instanceof othCtor)&&(result=!1);}return stack.delete(object),stack.delete(other),result}module2.exports=equalObjects;}});var require_DataView=__commonJS({"../../node_modules/lodash/_DataView.js"(exports,module2){var getNative=require_getNative(),root=require_root(),DataView2=getNative(root,"DataView");module2.exports=DataView2;}});var require_Promise=__commonJS({"../../node_modules/lodash/_Promise.js"(exports,module2){var getNative=require_getNative(),root=require_root(),Promise2=getNative(root,"Promise");module2.exports=Promise2;}});var require_Set=__commonJS({"../../node_modules/lodash/_Set.js"(exports,module2){var getNative=require_getNative(),root=require_root(),Set2=getNative(root,"Set");module2.exports=Set2;}});var require_WeakMap=__commonJS({"../../node_modules/lodash/_WeakMap.js"(exports,module2){var getNative=require_getNative(),root=require_root(),WeakMap2=getNative(root,"WeakMap");module2.exports=WeakMap2;}});var require_getTag=__commonJS({"../../node_modules/lodash/_getTag.js"(exports,module2){var DataView2=require_DataView(),Map2=require_Map(),Promise2=require_Promise(),Set2=require_Set(),WeakMap2=require_WeakMap(),baseGetTag=require_baseGetTag(),toSource=require_toSource(),mapTag="[object Map]",objectTag="[object Object]",promiseTag="[object Promise]",setTag="[object Set]",weakMapTag="[object WeakMap]",dataViewTag="[object DataView]",dataViewCtorString=toSource(DataView2),mapCtorString=toSource(Map2),promiseCtorString=toSource(Promise2),setCtorString=toSource(Set2),weakMapCtorString=toSource(WeakMap2),getTag2=baseGetTag;(DataView2&&getTag2(new DataView2(new ArrayBuffer(1)))!=dataViewTag||Map2&&getTag2(new Map2)!=mapTag||Promise2&&getTag2(Promise2.resolve())!=promiseTag||Set2&&getTag2(new Set2)!=setTag||WeakMap2&&getTag2(new WeakMap2)!=weakMapTag)&&(getTag2=function(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:void 0,ctorString=Ctor?toSource(Ctor):"";if(ctorString)switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag}return result});module2.exports=getTag2;}});var require_baseIsEqualDeep=__commonJS({"../../node_modules/lodash/_baseIsEqualDeep.js"(exports,module2){var Stack=require_Stack(),equalArrays=require_equalArrays(),equalByTag=require_equalByTag(),equalObjects=require_equalObjects(),getTag2=require_getTag(),isArray=require_isArray(),isBuffer=require_isBuffer(),isTypedArray=require_isTypedArray(),COMPARE_PARTIAL_FLAG=1,argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]",objectProto=Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag2(object),othTag=othIsArr?arrayTag:getTag2(other);objTag=objTag==argsTag?objectTag:objTag,othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other))return !1;objIsArr=!0,objIsObj=!1;}if(isSameTag&&!objIsObj)return stack||(stack=new Stack),objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,"__wrapped__"),othIsWrapped=othIsObj&&hasOwnProperty.call(other,"__wrapped__");if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;return stack||(stack=new Stack),equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack)}}return isSameTag?(stack||(stack=new Stack),equalObjects(object,other,bitmask,customizer,equalFunc,stack)):!1}module2.exports=baseIsEqualDeep;}});var require_baseIsEqual=__commonJS({"../../node_modules/lodash/_baseIsEqual.js"(exports,module2){var baseIsEqualDeep=require_baseIsEqualDeep(),isObjectLike=require_isObjectLike();function baseIsEqual(value,other,bitmask,customizer,stack){return value===other?!0:value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)?value!==value&&other!==other:baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack)}module2.exports=baseIsEqual;}});var require_isEqualWith=__commonJS({"../../node_modules/lodash/isEqualWith.js"(exports,module2){var baseIsEqual=require_baseIsEqual();function isEqualWith2(value,other,customizer){customizer=typeof customizer=="function"?customizer:void 0;var result=customizer?customizer(value,other):void 0;return result===void 0?baseIsEqual(value,other,void 0,customizer):!!result}module2.exports=isEqualWith2;}});var require_css_escape=__commonJS({"../../node_modules/css.escape/css.escape.js"(exports,module2){(function(root,factory){typeof exports=="object"?module2.exports=factory(root):typeof define=="function"&&__webpack_require__.amdO?define([],factory.bind(root,root)):factory(root);})(typeof __webpack_require__.g<"u"?__webpack_require__.g:exports,function(root){if(root.CSS&&root.CSS.escape)return root.CSS.escape;var cssEscape=function(value){if(arguments.length==0)throw new TypeError("`CSS.escape` requires an argument.");for(var string=String(value),length=string.length,index=-1,codeUnit,result="",firstCodeUnit=string.charCodeAt(0);++index<length;){if(codeUnit=string.charCodeAt(index),codeUnit==0){result+="\\uFFFD";continue}if(codeUnit>=1&&codeUnit<=31||codeUnit==127||index==0&&codeUnit>=48&&codeUnit<=57||index==1&&codeUnit>=48&&codeUnit<=57&&firstCodeUnit==45){result+="\\\\"+codeUnit.toString(16)+" ";continue}if(index==0&&length==1&&codeUnit==45){result+="\\\\"+string.charAt(index);continue}if(codeUnit>=128||codeUnit==45||codeUnit==95||codeUnit>=48&&codeUnit<=57||codeUnit>=65&&codeUnit<=90||codeUnit>=97&&codeUnit<=122){result+=string.charAt(index);continue}result+="\\\\"+string.charAt(index);}return result};return root.CSS||(root.CSS={}),root.CSS.escape=cssEscape,cssEscape});}});var require_ansi_styles2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/ansi-styles/index.js"(exports,module2){var wrapAnsi256=(offset=0)=>code=>`\\x1B[${38+offset};5;${code}m`,wrapAnsi16m=(offset=0)=>(red,green,blue)=>`\\x1B[${38+offset};2;${red};${green};${blue}m`;function assembleStyles(){let codes=new Map,styles3={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};styles3.color.gray=styles3.color.blackBright,styles3.bgColor.bgGray=styles3.bgColor.bgBlackBright,styles3.color.grey=styles3.color.blackBright,styles3.bgColor.bgGrey=styles3.bgColor.bgBlackBright;for(let[groupName,group]of Object.entries(styles3)){for(let[styleName,style]of Object.entries(group))styles3[styleName]={open:`\\x1B[${style[0]}m`,close:`\\x1B[${style[1]}m`},group[styleName]=styles3[styleName],codes.set(style[0],style[1]);Object.defineProperty(styles3,groupName,{value:group,enumerable:!1});}return Object.defineProperty(styles3,"codes",{value:codes,enumerable:!1}),styles3.color.close="\\x1B[39m",styles3.bgColor.close="\\x1B[49m",styles3.color.ansi256=wrapAnsi256(),styles3.color.ansi16m=wrapAnsi16m(),styles3.bgColor.ansi256=wrapAnsi256(10),styles3.bgColor.ansi16m=wrapAnsi16m(10),Object.defineProperties(styles3,{rgbToAnsi256:{value:(red,green,blue)=>red===green&&green===blue?red<8?16:red>248?231:Math.round((red-8)/247*24)+232:16+36*Math.round(red/255*5)+6*Math.round(green/255*5)+Math.round(blue/255*5),enumerable:!1},hexToRgb:{value:hex3=>{let matches3=/(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex3.toString(16));if(!matches3)return [0,0,0];let{colorString}=matches3.groups;colorString.length===3&&(colorString=colorString.split("").map(character=>character+character).join(""));let integer=Number.parseInt(colorString,16);return [integer>>16&255,integer>>8&255,integer&255]},enumerable:!1},hexToAnsi256:{value:hex3=>styles3.rgbToAnsi256(...styles3.hexToRgb(hex3)),enumerable:!1}}),styles3}Object.defineProperty(module2,"exports",{enumerable:!0,get:assembleStyles});}});var require_collections=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/collections.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.printIteratorEntries=printIteratorEntries2;exports.printIteratorValues=printIteratorValues2;exports.printListItems=printListItems2;exports.printObjectProperties=printObjectProperties2;var getKeysOfEnumerableProperties2=(object,compareKeys)=>{let keys2=Object.keys(object).sort(compareKeys);return Object.getOwnPropertySymbols&&Object.getOwnPropertySymbols(object).forEach(symbol=>{Object.getOwnPropertyDescriptor(object,symbol).enumerable&&keys2.push(symbol);}),keys2};function printIteratorEntries2(iterator,config3,indentation,depth,refs,printer2,separator=": "){let result="",current=iterator.next();if(!current.done){result+=config3.spacingOuter;let indentationNext=indentation+config3.indent;for(;!current.done;){let name=printer2(current.value[0],config3,indentationNext,depth,refs),value=printer2(current.value[1],config3,indentationNext,depth,refs);result+=indentationNext+name+separator+value,current=iterator.next(),current.done?config3.min||(result+=","):result+=","+config3.spacingInner;}result+=config3.spacingOuter+indentation;}return result}function printIteratorValues2(iterator,config3,indentation,depth,refs,printer2){let result="",current=iterator.next();if(!current.done){result+=config3.spacingOuter;let indentationNext=indentation+config3.indent;for(;!current.done;)result+=indentationNext+printer2(current.value,config3,indentationNext,depth,refs),current=iterator.next(),current.done?config3.min||(result+=","):result+=","+config3.spacingInner;result+=config3.spacingOuter+indentation;}return result}function printListItems2(list,config3,indentation,depth,refs,printer2){let result="";if(list.length){result+=config3.spacingOuter;let indentationNext=indentation+config3.indent;for(let i=0;i<list.length;i++)result+=indentationNext,i in list&&(result+=printer2(list[i],config3,indentationNext,depth,refs)),i<list.length-1?result+=","+config3.spacingInner:config3.min||(result+=",");result+=config3.spacingOuter+indentation;}return result}function printObjectProperties2(val,config3,indentation,depth,refs,printer2){let result="",keys2=getKeysOfEnumerableProperties2(val,config3.compareKeys);if(keys2.length){result+=config3.spacingOuter;let indentationNext=indentation+config3.indent;for(let i=0;i<keys2.length;i++){let key=keys2[i],name=printer2(key,config3,indentationNext,depth,refs),value=printer2(val[key],config3,indentationNext,depth,refs);result+=indentationNext+name+": "+value,i<keys2.length-1?result+=","+config3.spacingInner:config3.min||(result+=",");}result+=config3.spacingOuter+indentation;}return result}}});var require_AsymmetricMatcher=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/plugins/AsymmetricMatcher.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.test=exports.serialize=exports.default=void 0;var _collections=require_collections(),global3=function(){return typeof globalThis<"u"?globalThis:typeof global3<"u"?global3:typeof self<"u"?self:typeof window<"u"?window:Function("return this")()}(),Symbol2=global3["jest-symbol-do-not-touch"]||global3.Symbol,asymmetricMatcher2=typeof Symbol2=="function"&&Symbol2.for?Symbol2.for("jest.asymmetricMatcher"):1267621,SPACE2=" ",serialize2=(val,config3,indentation,depth,refs,printer2)=>{let stringedValue=val.toString();return stringedValue==="ArrayContaining"||stringedValue==="ArrayNotContaining"?++depth>config3.maxDepth?"["+stringedValue+"]":stringedValue+SPACE2+"["+(0, _collections.printListItems)(val.sample,config3,indentation,depth,refs,printer2)+"]":stringedValue==="ObjectContaining"||stringedValue==="ObjectNotContaining"?++depth>config3.maxDepth?"["+stringedValue+"]":stringedValue+SPACE2+"{"+(0, _collections.printObjectProperties)(val.sample,config3,indentation,depth,refs,printer2)+"}":stringedValue==="StringMatching"||stringedValue==="StringNotMatching"||stringedValue==="StringContaining"||stringedValue==="StringNotContaining"?stringedValue+SPACE2+printer2(val.sample,config3,indentation,depth,refs):val.toAsymmetricMatcher()};exports.serialize=serialize2;var test3=val=>val&&val.$$typeof===asymmetricMatcher2;exports.test=test3;var plugin2={serialize:serialize2,test:test3},_default2=plugin2;exports.default=_default2;}});var require_ansi_regex=__commonJS({"../../node_modules/@testing-library/dom/node_modules/ansi-regex/index.js"(exports,module2){module2.exports=({onlyFirst=!1}={})=>{let pattern=["[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)","(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))"].join("|");return new RegExp(pattern,onlyFirst?void 0:"g")};}});var require_ConvertAnsi=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/plugins/ConvertAnsi.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.test=exports.serialize=exports.default=void 0;var _ansiRegex=_interopRequireDefault(require_ansi_regex()),_ansiStyles=_interopRequireDefault(require_ansi_styles2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var toHumanReadableAnsi=text=>text.replace((0, _ansiRegex.default)(),match=>{switch(match){case _ansiStyles.default.red.close:case _ansiStyles.default.green.close:case _ansiStyles.default.cyan.close:case _ansiStyles.default.gray.close:case _ansiStyles.default.white.close:case _ansiStyles.default.yellow.close:case _ansiStyles.default.bgRed.close:case _ansiStyles.default.bgGreen.close:case _ansiStyles.default.bgYellow.close:case _ansiStyles.default.inverse.close:case _ansiStyles.default.dim.close:case _ansiStyles.default.bold.close:case _ansiStyles.default.reset.open:case _ansiStyles.default.reset.close:return "</>";case _ansiStyles.default.red.open:return "<red>";case _ansiStyles.default.green.open:return "<green>";case _ansiStyles.default.cyan.open:return "<cyan>";case _ansiStyles.default.gray.open:return "<gray>";case _ansiStyles.default.white.open:return "<white>";case _ansiStyles.default.yellow.open:return "<yellow>";case _ansiStyles.default.bgRed.open:return "<bgRed>";case _ansiStyles.default.bgGreen.open:return "<bgGreen>";case _ansiStyles.default.bgYellow.open:return "<bgYellow>";case _ansiStyles.default.inverse.open:return "<inverse>";case _ansiStyles.default.dim.open:return "<dim>";case _ansiStyles.default.bold.open:return "<bold>";default:return ""}}),test3=val=>typeof val=="string"&&!!val.match((0, _ansiRegex.default)());exports.test=test3;var serialize2=(val,config3,indentation,depth,refs,printer2)=>printer2(toHumanReadableAnsi(val),config3,indentation,depth,refs);exports.serialize=serialize2;var plugin2={serialize:serialize2,test:test3},_default2=plugin2;exports.default=_default2;}});var require_DOMCollection=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/plugins/DOMCollection.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.test=exports.serialize=exports.default=void 0;var _collections=require_collections(),SPACE2=" ",OBJECT_NAMES2=["DOMStringMap","NamedNodeMap"],ARRAY_REGEXP2=/^(HTML\\w*Collection|NodeList)$/,testName2=name=>OBJECT_NAMES2.indexOf(name)!==-1||ARRAY_REGEXP2.test(name),test3=val=>val&&val.constructor&&!!val.constructor.name&&testName2(val.constructor.name);exports.test=test3;var isNamedNodeMap2=collection=>collection.constructor.name==="NamedNodeMap",serialize2=(collection,config3,indentation,depth,refs,printer2)=>{let name=collection.constructor.name;return ++depth>config3.maxDepth?"["+name+"]":(config3.min?"":name+SPACE2)+(OBJECT_NAMES2.indexOf(name)!==-1?"{"+(0, _collections.printObjectProperties)(isNamedNodeMap2(collection)?Array.from(collection).reduce((props,attribute)=>(props[attribute.name]=attribute.value,props),{}):{...collection},config3,indentation,depth,refs,printer2)+"}":"["+(0, _collections.printListItems)(Array.from(collection),config3,indentation,depth,refs,printer2)+"]")};exports.serialize=serialize2;var plugin2={serialize:serialize2,test:test3},_default2=plugin2;exports.default=_default2;}});var require_escapeHTML=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/plugins/lib/escapeHTML.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=escapeHTML3;function escapeHTML3(str){return str.replace(/</g,"&lt;").replace(/>/g,"&gt;")}}});var require_markup=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/plugins/lib/markup.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.printText=exports.printProps=exports.printElementAsLeaf=exports.printElement=exports.printComment=exports.printChildren=void 0;var _escapeHTML=_interopRequireDefault(require_escapeHTML());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var printProps3=(keys2,props,config3,indentation,depth,refs,printer2)=>{let indentationNext=indentation+config3.indent,colors=config3.colors;return keys2.map(key=>{let value=props[key],printed=printer2(value,config3,indentationNext,depth,refs);return typeof value!="string"&&(printed.indexOf(`\n`)!==-1&&(printed=config3.spacingOuter+indentationNext+printed+config3.spacingOuter+indentation),printed="{"+printed+"}"),config3.spacingInner+indentation+colors.prop.open+key+colors.prop.close+"="+colors.value.open+printed+colors.value.close}).join("")};exports.printProps=printProps3;var printChildren3=(children,config3,indentation,depth,refs,printer2)=>children.map(child=>config3.spacingOuter+indentation+(typeof child=="string"?printText3(child,config3):printer2(child,config3,indentation,depth,refs))).join("");exports.printChildren=printChildren3;var printText3=(text,config3)=>{let contentColor=config3.colors.content;return contentColor.open+(0, _escapeHTML.default)(text)+contentColor.close};exports.printText=printText3;var printComment3=(comment,config3)=>{let commentColor=config3.colors.comment;return commentColor.open+"\x3c!--"+(0, _escapeHTML.default)(comment)+"--\x3e"+commentColor.close};exports.printComment=printComment3;var printElement3=(type5,printedProps,printedChildren,config3,indentation)=>{let tagColor=config3.colors.tag;return tagColor.open+"<"+type5+(printedProps&&tagColor.close+printedProps+config3.spacingOuter+indentation+tagColor.open)+(printedChildren?">"+tagColor.close+printedChildren+config3.spacingOuter+indentation+tagColor.open+"</"+type5:(printedProps&&!config3.min?"":" ")+"/")+">"+tagColor.close};exports.printElement=printElement3;var printElementAsLeaf3=(type5,config3)=>{let tagColor=config3.colors.tag;return tagColor.open+"<"+type5+tagColor.close+" \\u2026"+tagColor.open+" />"+tagColor.close};exports.printElementAsLeaf=printElementAsLeaf3;}});var require_DOMElement=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/plugins/DOMElement.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.test=exports.serialize=exports.default=void 0;var _markup=require_markup(),ELEMENT_NODE3=1,TEXT_NODE3=3,COMMENT_NODE3=8,FRAGMENT_NODE3=11,ELEMENT_REGEXP3=/^((HTML|SVG)\\w*)?Element$/,testHasAttribute2=val=>{try{return typeof val.hasAttribute=="function"&&val.hasAttribute("is")}catch{return !1}},testNode3=val=>{let constructorName=val.constructor.name,{nodeType,tagName}=val,isCustomElement3=typeof tagName=="string"&&tagName.includes("-")||testHasAttribute2(val);return nodeType===ELEMENT_NODE3&&(ELEMENT_REGEXP3.test(constructorName)||isCustomElement3)||nodeType===TEXT_NODE3&&constructorName==="Text"||nodeType===COMMENT_NODE3&&constructorName==="Comment"||nodeType===FRAGMENT_NODE3&&constructorName==="DocumentFragment"},test3=val=>{var _val$constructor;return (val==null||(_val$constructor=val.constructor)===null||_val$constructor===void 0?void 0:_val$constructor.name)&&testNode3(val)};exports.test=test3;function nodeIsText3(node){return node.nodeType===TEXT_NODE3}function nodeIsComment3(node){return node.nodeType===COMMENT_NODE3}function nodeIsFragment3(node){return node.nodeType===FRAGMENT_NODE3}var serialize2=(node,config3,indentation,depth,refs,printer2)=>{if(nodeIsText3(node))return (0, _markup.printText)(node.data,config3);if(nodeIsComment3(node))return (0, _markup.printComment)(node.data,config3);let type5=nodeIsFragment3(node)?"DocumentFragment":node.tagName.toLowerCase();return ++depth>config3.maxDepth?(0, _markup.printElementAsLeaf)(type5,config3):(0, _markup.printElement)(type5,(0, _markup.printProps)(nodeIsFragment3(node)?[]:Array.from(node.attributes).map(attr=>attr.name).sort(),nodeIsFragment3(node)?{}:Array.from(node.attributes).reduce((props,attribute)=>(props[attribute.name]=attribute.value,props),{}),config3,indentation+config3.indent,depth,refs,printer2),(0, _markup.printChildren)(Array.prototype.slice.call(node.childNodes||node.children),config3,indentation+config3.indent,depth,refs,printer2),config3,indentation)};exports.serialize=serialize2;var plugin2={serialize:serialize2,test:test3},_default2=plugin2;exports.default=_default2;}});var require_Immutable=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/plugins/Immutable.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.test=exports.serialize=exports.default=void 0;var _collections=require_collections(),IS_ITERABLE_SENTINEL2="@@__IMMUTABLE_ITERABLE__@@",IS_LIST_SENTINEL3="@@__IMMUTABLE_LIST__@@",IS_KEYED_SENTINEL3="@@__IMMUTABLE_KEYED__@@",IS_MAP_SENTINEL2="@@__IMMUTABLE_MAP__@@",IS_ORDERED_SENTINEL3="@@__IMMUTABLE_ORDERED__@@",IS_RECORD_SENTINEL2="@@__IMMUTABLE_RECORD__@@",IS_SEQ_SENTINEL2="@@__IMMUTABLE_SEQ__@@",IS_SET_SENTINEL3="@@__IMMUTABLE_SET__@@",IS_STACK_SENTINEL2="@@__IMMUTABLE_STACK__@@",getImmutableName2=name=>"Immutable."+name,printAsLeaf2=name=>"["+name+"]",SPACE2=" ",LAZY2="\\u2026",printImmutableEntries2=(val,config3,indentation,depth,refs,printer2,type5)=>++depth>config3.maxDepth?printAsLeaf2(getImmutableName2(type5)):getImmutableName2(type5)+SPACE2+"{"+(0, _collections.printIteratorEntries)(val.entries(),config3,indentation,depth,refs,printer2)+"}";function getRecordEntries2(val){let i=0;return {next(){if(i<val._keys.length){let key=val._keys[i++];return {done:!1,value:[key,val.get(key)]}}return {done:!0,value:void 0}}}}var printImmutableRecord2=(val,config3,indentation,depth,refs,printer2)=>{let name=getImmutableName2(val._name||"Record");return ++depth>config3.maxDepth?printAsLeaf2(name):name+SPACE2+"{"+(0, _collections.printIteratorEntries)(getRecordEntries2(val),config3,indentation,depth,refs,printer2)+"}"},printImmutableSeq2=(val,config3,indentation,depth,refs,printer2)=>{let name=getImmutableName2("Seq");return ++depth>config3.maxDepth?printAsLeaf2(name):val[IS_KEYED_SENTINEL3]?name+SPACE2+"{"+(val._iter||val._object?(0, _collections.printIteratorEntries)(val.entries(),config3,indentation,depth,refs,printer2):LAZY2)+"}":name+SPACE2+"["+(val._iter||val._array||val._collection||val._iterable?(0, _collections.printIteratorValues)(val.values(),config3,indentation,depth,refs,printer2):LAZY2)+"]"},printImmutableValues2=(val,config3,indentation,depth,refs,printer2,type5)=>++depth>config3.maxDepth?printAsLeaf2(getImmutableName2(type5)):getImmutableName2(type5)+SPACE2+"["+(0, _collections.printIteratorValues)(val.values(),config3,indentation,depth,refs,printer2)+"]",serialize2=(val,config3,indentation,depth,refs,printer2)=>val[IS_MAP_SENTINEL2]?printImmutableEntries2(val,config3,indentation,depth,refs,printer2,val[IS_ORDERED_SENTINEL3]?"OrderedMap":"Map"):val[IS_LIST_SENTINEL3]?printImmutableValues2(val,config3,indentation,depth,refs,printer2,"List"):val[IS_SET_SENTINEL3]?printImmutableValues2(val,config3,indentation,depth,refs,printer2,val[IS_ORDERED_SENTINEL3]?"OrderedSet":"Set"):val[IS_STACK_SENTINEL2]?printImmutableValues2(val,config3,indentation,depth,refs,printer2,"Stack"):val[IS_SEQ_SENTINEL2]?printImmutableSeq2(val,config3,indentation,depth,refs,printer2):printImmutableRecord2(val,config3,indentation,depth,refs,printer2);exports.serialize=serialize2;var test3=val=>val&&(val[IS_ITERABLE_SENTINEL2]===!0||val[IS_RECORD_SENTINEL2]===!0);exports.test=test3;var plugin2={serialize:serialize2,test:test3},_default2=plugin2;exports.default=_default2;}});var require_react_is_production_min=__commonJS({"../../node_modules/@testing-library/dom/node_modules/react-is/cjs/react-is.production.min.js"(exports){var b=60103,c=60106,d2=60107,e=60108,f4=60114,g2=60109,h2=60110,k2=60112,l2=60113,m3=60120,n=60115,p2=60116,q=60121,r=60122,u2=60117,v=60129,w2=60131;typeof Symbol=="function"&&Symbol.for&&(x2=Symbol.for,b=x2("react.element"),c=x2("react.portal"),d2=x2("react.fragment"),e=x2("react.strict_mode"),f4=x2("react.profiler"),g2=x2("react.provider"),h2=x2("react.context"),k2=x2("react.forward_ref"),l2=x2("react.suspense"),m3=x2("react.suspense_list"),n=x2("react.memo"),p2=x2("react.lazy"),q=x2("react.block"),r=x2("react.server.block"),u2=x2("react.fundamental"),v=x2("react.debug_trace_mode"),w2=x2("react.legacy_hidden"));var x2;function y2(a2){if(typeof a2=="object"&&a2!==null){var t=a2.$$typeof;switch(t){case b:switch(a2=a2.type,a2){case d2:case f4:case e:case l2:case m3:return a2;default:switch(a2=a2&&a2.$$typeof,a2){case h2:case k2:case p2:case n:case g2:return a2;default:return t}}case c:return t}}}var z=g2,A=b,B=k2,C3=d2,D=p2,E=n,F=c,G=f4,H=e,I=l2;exports.ContextConsumer=h2;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C3;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;exports.Suspense=I;exports.isAsyncMode=function(){return !1};exports.isConcurrentMode=function(){return !1};exports.isContextConsumer=function(a2){return y2(a2)===h2};exports.isContextProvider=function(a2){return y2(a2)===g2};exports.isElement=function(a2){return typeof a2=="object"&&a2!==null&&a2.$$typeof===b};exports.isForwardRef=function(a2){return y2(a2)===k2};exports.isFragment=function(a2){return y2(a2)===d2};exports.isLazy=function(a2){return y2(a2)===p2};exports.isMemo=function(a2){return y2(a2)===n};exports.isPortal=function(a2){return y2(a2)===c};exports.isProfiler=function(a2){return y2(a2)===f4};exports.isStrictMode=function(a2){return y2(a2)===e};exports.isSuspense=function(a2){return y2(a2)===l2};exports.isValidElementType=function(a2){return typeof a2=="string"||typeof a2=="function"||a2===d2||a2===f4||a2===v||a2===e||a2===l2||a2===m3||a2===w2||typeof a2=="object"&&a2!==null&&(a2.$$typeof===p2||a2.$$typeof===n||a2.$$typeof===g2||a2.$$typeof===h2||a2.$$typeof===k2||a2.$$typeof===u2||a2.$$typeof===q||a2[0]===r)};exports.typeOf=y2;}});var require_react_is_development=__commonJS({"../../node_modules/@testing-library/dom/node_modules/react-is/cjs/react-is.development.js"(exports){ false&&0;}});var require_react_is=__commonJS({"../../node_modules/@testing-library/dom/node_modules/react-is/index.js"(exports,module2){ true?module2.exports=require_react_is_production_min():0;}});var require_ReactElement=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/plugins/ReactElement.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.test=exports.serialize=exports.default=void 0;var ReactIs=_interopRequireWildcard(require_react_is()),_markup=require_markup();function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!="function")return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return (_getRequireWildcardCache=function(nodeInterop2){return nodeInterop2?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(obj===null||typeof obj!="object"&&typeof obj!="function")return {default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key];}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}var getChildren2=(arg,children=[])=>(Array.isArray(arg)?arg.forEach(item=>{getChildren2(item,children);}):arg!=null&&arg!==!1&&children.push(arg),children),getType4=element=>{let type5=element.type;if(typeof type5=="string")return type5;if(typeof type5=="function")return type5.displayName||type5.name||"Unknown";if(ReactIs.isFragment(element))return "React.Fragment";if(ReactIs.isSuspense(element))return "React.Suspense";if(typeof type5=="object"&&type5!==null){if(ReactIs.isContextProvider(element))return "Context.Provider";if(ReactIs.isContextConsumer(element))return "Context.Consumer";if(ReactIs.isForwardRef(element)){if(type5.displayName)return type5.displayName;let functionName=type5.render.displayName||type5.render.name||"";return functionName!==""?"ForwardRef("+functionName+")":"ForwardRef"}if(ReactIs.isMemo(element)){let functionName=type5.displayName||type5.type.displayName||type5.type.name||"";return functionName!==""?"Memo("+functionName+")":"Memo"}}return "UNDEFINED"},getPropKeys2=element=>{let{props}=element;return Object.keys(props).filter(key=>key!=="children"&&props[key]!==void 0).sort()},serialize2=(element,config3,indentation,depth,refs,printer2)=>++depth>config3.maxDepth?(0, _markup.printElementAsLeaf)(getType4(element),config3):(0, _markup.printElement)(getType4(element),(0, _markup.printProps)(getPropKeys2(element),element.props,config3,indentation+config3.indent,depth,refs,printer2),(0, _markup.printChildren)(getChildren2(element.props.children),config3,indentation+config3.indent,depth,refs,printer2),config3,indentation);exports.serialize=serialize2;var test3=val=>val!=null&&ReactIs.isElement(val);exports.test=test3;var plugin2={serialize:serialize2,test:test3},_default2=plugin2;exports.default=_default2;}});var require_ReactTestComponent=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/plugins/ReactTestComponent.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.test=exports.serialize=exports.default=void 0;var _markup=require_markup(),global3=function(){return typeof globalThis<"u"?globalThis:typeof global3<"u"?global3:typeof self<"u"?self:typeof window<"u"?window:Function("return this")()}(),Symbol2=global3["jest-symbol-do-not-touch"]||global3.Symbol,testSymbol2=typeof Symbol2=="function"&&Symbol2.for?Symbol2.for("react.test.json"):245830487,getPropKeys2=object=>{let{props}=object;return props?Object.keys(props).filter(key=>props[key]!==void 0).sort():[]},serialize2=(object,config3,indentation,depth,refs,printer2)=>++depth>config3.maxDepth?(0, _markup.printElementAsLeaf)(object.type,config3):(0, _markup.printElement)(object.type,object.props?(0, _markup.printProps)(getPropKeys2(object),object.props,config3,indentation+config3.indent,depth,refs,printer2):"",object.children?(0, _markup.printChildren)(object.children,config3,indentation+config3.indent,depth,refs,printer2):"",config3,indentation);exports.serialize=serialize2;var test3=val=>val&&val.$$typeof===testSymbol2;exports.test=test3;var plugin2={serialize:serialize2,test:test3},_default2=plugin2;exports.default=_default2;}});var require_build=__commonJS({"../../node_modules/@testing-library/dom/node_modules/pretty-format/build/index.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=exports.DEFAULT_OPTIONS=void 0;exports.format=format4;exports.plugins=void 0;var _ansiStyles=_interopRequireDefault(require_ansi_styles2()),_collections=require_collections(),_AsymmetricMatcher=_interopRequireDefault(require_AsymmetricMatcher()),_ConvertAnsi=_interopRequireDefault(require_ConvertAnsi()),_DOMCollection=_interopRequireDefault(require_DOMCollection()),_DOMElement=_interopRequireDefault(require_DOMElement()),_Immutable=_interopRequireDefault(require_Immutable()),_ReactElement=_interopRequireDefault(require_ReactElement()),_ReactTestComponent=_interopRequireDefault(require_ReactTestComponent());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var toString4=Object.prototype.toString,toISOString2=Date.prototype.toISOString,errorToString2=Error.prototype.toString,regExpToString2=RegExp.prototype.toString,getConstructorName3=val=>typeof val.constructor=="function"&&val.constructor.name||"Object",isWindow2=val=>typeof window<"u"&&val===window,SYMBOL_REGEXP2=/^Symbol\\((.*)\\)(.*)$/,NEWLINE_REGEXP2=/\\n/gi,PrettyFormatPluginError2=class extends Error{constructor(message,stack){super(message),this.stack=stack,this.name=this.constructor.name;}};function isToStringedArrayType2(toStringed){return toStringed==="[object Array]"||toStringed==="[object ArrayBuffer]"||toStringed==="[object DataView]"||toStringed==="[object Float32Array]"||toStringed==="[object Float64Array]"||toStringed==="[object Int8Array]"||toStringed==="[object Int16Array]"||toStringed==="[object Int32Array]"||toStringed==="[object Uint8Array]"||toStringed==="[object Uint8ClampedArray]"||toStringed==="[object Uint16Array]"||toStringed==="[object Uint32Array]"}function printNumber2(val){return Object.is(val,-0)?"-0":String(val)}function printBigInt2(val){return `${val}n`}function printFunction2(val,printFunctionName){return printFunctionName?"[Function "+(val.name||"anonymous")+"]":"[Function]"}function printSymbol2(val){return String(val).replace(SYMBOL_REGEXP2,"Symbol($1)")}function printError2(val){return "["+errorToString2.call(val)+"]"}function printBasicValue2(val,printFunctionName,escapeRegex,escapeString){if(val===!0||val===!1)return ""+val;if(val===void 0)return "undefined";if(val===null)return "null";let typeOf=typeof val;if(typeOf==="number")return printNumber2(val);if(typeOf==="bigint")return printBigInt2(val);if(typeOf==="string")return escapeString?\'"\'+val.replace(/"|\\\\/g,"\\\\$&")+\'"\':\'"\'+val+\'"\';if(typeOf==="function")return printFunction2(val,printFunctionName);if(typeOf==="symbol")return printSymbol2(val);let toStringed=toString4.call(val);return toStringed==="[object WeakMap]"?"WeakMap {}":toStringed==="[object WeakSet]"?"WeakSet {}":toStringed==="[object Function]"||toStringed==="[object GeneratorFunction]"?printFunction2(val,printFunctionName):toStringed==="[object Symbol]"?printSymbol2(val):toStringed==="[object Date]"?isNaN(+val)?"Date { NaN }":toISOString2.call(val):toStringed==="[object Error]"?printError2(val):toStringed==="[object RegExp]"?escapeRegex?regExpToString2.call(val).replace(/[\\\\^$*+?.()|[\\]{}]/g,"\\\\$&"):regExpToString2.call(val):val instanceof Error?printError2(val):null}function printComplexValue2(val,config3,indentation,depth,refs,hasCalledToJSON){if(refs.indexOf(val)!==-1)return "[Circular]";refs=refs.slice(),refs.push(val);let hitMaxDepth=++depth>config3.maxDepth,min=config3.min;if(config3.callToJSON&&!hitMaxDepth&&val.toJSON&&typeof val.toJSON=="function"&&!hasCalledToJSON)return printer2(val.toJSON(),config3,indentation,depth,refs,!0);let toStringed=toString4.call(val);return toStringed==="[object Arguments]"?hitMaxDepth?"[Arguments]":(min?"":"Arguments ")+"["+(0, _collections.printListItems)(val,config3,indentation,depth,refs,printer2)+"]":isToStringedArrayType2(toStringed)?hitMaxDepth?"["+val.constructor.name+"]":(min||!config3.printBasicPrototype&&val.constructor.name==="Array"?"":val.constructor.name+" ")+"["+(0, _collections.printListItems)(val,config3,indentation,depth,refs,printer2)+"]":toStringed==="[object Map]"?hitMaxDepth?"[Map]":"Map {"+(0, _collections.printIteratorEntries)(val.entries(),config3,indentation,depth,refs,printer2," => ")+"}":toStringed==="[object Set]"?hitMaxDepth?"[Set]":"Set {"+(0, _collections.printIteratorValues)(val.values(),config3,indentation,depth,refs,printer2)+"}":hitMaxDepth||isWindow2(val)?"["+getConstructorName3(val)+"]":(min||!config3.printBasicPrototype&&getConstructorName3(val)==="Object"?"":getConstructorName3(val)+" ")+"{"+(0, _collections.printObjectProperties)(val,config3,indentation,depth,refs,printer2)+"}"}function isNewPlugin2(plugin2){return plugin2.serialize!=null}function printPlugin2(plugin2,val,config3,indentation,depth,refs){let printed;try{printed=isNewPlugin2(plugin2)?plugin2.serialize(val,config3,indentation,depth,refs,printer2):plugin2.print(val,valChild=>printer2(valChild,config3,indentation,depth,refs),str=>{let indentationNext=indentation+config3.indent;return indentationNext+str.replace(NEWLINE_REGEXP2,`\n`+indentationNext)},{edgeSpacing:config3.spacingOuter,min:config3.min,spacing:config3.spacingInner},config3.colors);}catch(error){throw new PrettyFormatPluginError2(error.message,error.stack)}if(typeof printed!="string")throw new Error(`pretty-format: Plugin must return type "string" but instead returned "${typeof printed}".`);return printed}function findPlugin2(plugins4,val){for(let p2=0;p2<plugins4.length;p2++)try{if(plugins4[p2].test(val))return plugins4[p2]}catch(error){throw new PrettyFormatPluginError2(error.message,error.stack)}return null}function printer2(val,config3,indentation,depth,refs,hasCalledToJSON){let plugin2=findPlugin2(config3.plugins,val);if(plugin2!==null)return printPlugin2(plugin2,val,config3,indentation,depth,refs);let basicResult=printBasicValue2(val,config3.printFunctionName,config3.escapeRegex,config3.escapeString);return basicResult!==null?basicResult:printComplexValue2(val,config3,indentation,depth,refs,hasCalledToJSON)}var DEFAULT_THEME2={comment:"gray",content:"reset",prop:"yellow",tag:"cyan",value:"green"},DEFAULT_THEME_KEYS2=Object.keys(DEFAULT_THEME2),DEFAULT_OPTIONS2={callToJSON:!0,compareKeys:void 0,escapeRegex:!1,escapeString:!0,highlight:!1,indent:2,maxDepth:1/0,min:!1,plugins:[],printBasicPrototype:!0,printFunctionName:!0,theme:DEFAULT_THEME2};exports.DEFAULT_OPTIONS=DEFAULT_OPTIONS2;function validateOptions2(options){if(Object.keys(options).forEach(key=>{if(!DEFAULT_OPTIONS2.hasOwnProperty(key))throw new Error(`pretty-format: Unknown option "${key}".`)}),options.min&&options.indent!==void 0&&options.indent!==0)throw new Error(\'pretty-format: Options "min" and "indent" cannot be used together.\');if(options.theme!==void 0){if(options.theme===null)throw new Error(\'pretty-format: Option "theme" must not be null.\');if(typeof options.theme!="object")throw new Error(`pretty-format: Option "theme" must be of type "object" but instead received "${typeof options.theme}".`)}}var getColorsHighlight2=options=>DEFAULT_THEME_KEYS2.reduce((colors,key)=>{let value=options.theme&&options.theme[key]!==void 0?options.theme[key]:DEFAULT_THEME2[key],color=value&&_ansiStyles.default[value];if(color&&typeof color.close=="string"&&typeof color.open=="string")colors[key]=color;else throw new Error(`pretty-format: Option "theme" has a key "${key}" whose value "${value}" is undefined in ansi-styles.`);return colors},Object.create(null)),getColorsEmpty2=()=>DEFAULT_THEME_KEYS2.reduce((colors,key)=>(colors[key]={close:"",open:""},colors),Object.create(null)),getPrintFunctionName2=options=>options&&options.printFunctionName!==void 0?options.printFunctionName:DEFAULT_OPTIONS2.printFunctionName,getEscapeRegex2=options=>options&&options.escapeRegex!==void 0?options.escapeRegex:DEFAULT_OPTIONS2.escapeRegex,getEscapeString2=options=>options&&options.escapeString!==void 0?options.escapeString:DEFAULT_OPTIONS2.escapeString,getConfig4=options=>{var _options$printBasicPr;return {callToJSON:options&&options.callToJSON!==void 0?options.callToJSON:DEFAULT_OPTIONS2.callToJSON,colors:options&&options.highlight?getColorsHighlight2(options):getColorsEmpty2(),compareKeys:options&&typeof options.compareKeys=="function"?options.compareKeys:DEFAULT_OPTIONS2.compareKeys,escapeRegex:getEscapeRegex2(options),escapeString:getEscapeString2(options),indent:options&&options.min?"":createIndent2(options&&options.indent!==void 0?options.indent:DEFAULT_OPTIONS2.indent),maxDepth:options&&options.maxDepth!==void 0?options.maxDepth:DEFAULT_OPTIONS2.maxDepth,min:options&&options.min!==void 0?options.min:DEFAULT_OPTIONS2.min,plugins:options&&options.plugins!==void 0?options.plugins:DEFAULT_OPTIONS2.plugins,printBasicPrototype:(_options$printBasicPr=options?.printBasicPrototype)!==null&&_options$printBasicPr!==void 0?_options$printBasicPr:!0,printFunctionName:getPrintFunctionName2(options),spacingInner:options&&options.min?" ":`\n`,spacingOuter:options&&options.min?"":`\n`}};function createIndent2(indent){return new Array(indent+1).join(" ")}function format4(val,options){if(options&&(validateOptions2(options),options.plugins)){let plugin2=findPlugin2(options.plugins,val);if(plugin2!==null)return printPlugin2(plugin2,val,getConfig4(options),"",0,[])}let basicResult=printBasicValue2(val,getPrintFunctionName2(options),getEscapeRegex2(options),getEscapeString2(options));return basicResult!==null?basicResult:printComplexValue2(val,getConfig4(options),"",0,[])}var plugins3={AsymmetricMatcher:_AsymmetricMatcher.default,ConvertAnsi:_ConvertAnsi.default,DOMCollection:_DOMCollection.default,DOMElement:_DOMElement.default,Immutable:_Immutable.default,ReactElement:_ReactElement.default,ReactTestComponent:_ReactTestComponent.default};exports.plugins=plugins3;var _default2=format4;exports.default=_default2;}});var require_iteratorProxy2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/util/iteratorProxy.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;function iteratorProxy(){var values=this,index=0,iter={"@@iterator":function(){return iter},next:function(){if(index<values.length){var value=values[index];return index=index+1,{done:!1,value}}else return {done:!0}}};return iter}var _default2=iteratorProxy;exports.default=_default2;}});var require_iterationDecorator2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/util/iterationDecorator.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=iterationDecorator;var _iteratorProxy=_interopRequireDefault(require_iteratorProxy2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _typeof5(obj){"@babel/helpers - typeof";return _typeof5=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(obj2){return typeof obj2}:function(obj2){return obj2&&typeof Symbol=="function"&&obj2.constructor===Symbol&&obj2!==Symbol.prototype?"symbol":typeof obj2},_typeof5(obj)}function iterationDecorator(collection,entries){return typeof Symbol=="function"&&_typeof5(Symbol.iterator)==="symbol"&&Object.defineProperty(collection,Symbol.iterator,{value:_iteratorProxy.default.bind(entries)}),collection}}});var require_ariaPropsMap2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/ariaPropsMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _iterationDecorator=_interopRequireDefault(require_iterationDecorator2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol<"u"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i!=null){var _arr=[],_n=!0,_d=!1,_s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err;}finally{try{!_n&&_i.return!=null&&_i.return();}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol<"u"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length=="number"){it&&(o=it);var i=0,F=function(){};return {s:F,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e2){throw _e2},f:F}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var normalCompletion=!0,didErr=!1,err;return {s:function(){it=it.call(o);},n:function(){var step=it.next();return normalCompletion=step.done,step},e:function(_e3){didErr=!0,err=_e3;},f:function(){try{!normalCompletion&&it.return!=null&&it.return();}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(o){if(typeof o=="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor&&(n=o.constructor.name),n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){(len==null||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var properties=[["aria-activedescendant",{type:"id"}],["aria-atomic",{type:"boolean"}],["aria-autocomplete",{type:"token",values:["inline","list","both","none"]}],["aria-braillelabel",{type:"string"}],["aria-brailleroledescription",{type:"string"}],["aria-busy",{type:"boolean"}],["aria-checked",{type:"tristate"}],["aria-colcount",{type:"integer"}],["aria-colindex",{type:"integer"}],["aria-colspan",{type:"integer"}],["aria-controls",{type:"idlist"}],["aria-current",{type:"token",values:["page","step","location","date","time",!0,!1]}],["aria-describedby",{type:"idlist"}],["aria-description",{type:"string"}],["aria-details",{type:"id"}],["aria-disabled",{type:"boolean"}],["aria-dropeffect",{type:"tokenlist",values:["copy","execute","link","move","none","popup"]}],["aria-errormessage",{type:"id"}],["aria-expanded",{type:"boolean",allowundefined:!0}],["aria-flowto",{type:"idlist"}],["aria-grabbed",{type:"boolean",allowundefined:!0}],["aria-haspopup",{type:"token",values:[!1,!0,"menu","listbox","tree","grid","dialog"]}],["aria-hidden",{type:"boolean",allowundefined:!0}],["aria-invalid",{type:"token",values:["grammar",!1,"spelling",!0]}],["aria-keyshortcuts",{type:"string"}],["aria-label",{type:"string"}],["aria-labelledby",{type:"idlist"}],["aria-level",{type:"integer"}],["aria-live",{type:"token",values:["assertive","off","polite"]}],["aria-modal",{type:"boolean"}],["aria-multiline",{type:"boolean"}],["aria-multiselectable",{type:"boolean"}],["aria-orientation",{type:"token",values:["vertical","undefined","horizontal"]}],["aria-owns",{type:"idlist"}],["aria-placeholder",{type:"string"}],["aria-posinset",{type:"integer"}],["aria-pressed",{type:"tristate"}],["aria-readonly",{type:"boolean"}],["aria-relevant",{type:"tokenlist",values:["additions","all","removals","text"]}],["aria-required",{type:"boolean"}],["aria-roledescription",{type:"string"}],["aria-rowcount",{type:"integer"}],["aria-rowindex",{type:"integer"}],["aria-rowspan",{type:"integer"}],["aria-selected",{type:"boolean",allowundefined:!0}],["aria-setsize",{type:"integer"}],["aria-sort",{type:"token",values:["ascending","descending","none","other"]}],["aria-valuemax",{type:"number"}],["aria-valuemin",{type:"number"}],["aria-valuenow",{type:"number"}],["aria-valuetext",{type:"string"}]],ariaPropsMap={entries:function(){return properties},forEach:function(fn3){var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_iterator=_createForOfIteratorHelper(properties),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),key=_step$value[0],values=_step$value[1];fn3.call(thisArg,values,key,properties);}}catch(err){_iterator.e(err);}finally{_iterator.f();}},get:function(key){var item=properties.find(function(tuple){return tuple[0]===key});return item&&item[1]},has:function(key){return !!ariaPropsMap.get(key)},keys:function(){return properties.map(function(_ref){var _ref2=_slicedToArray(_ref,1),key=_ref2[0];return key})},values:function(){return properties.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),values2=_ref4[1];return values2})}},_default2=(0, _iterationDecorator.default)(ariaPropsMap,ariaPropsMap.entries());exports.default=_default2;}});var require_domMap2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/domMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _iterationDecorator=_interopRequireDefault(require_iterationDecorator2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol<"u"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i!=null){var _arr=[],_n=!0,_d=!1,_s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err;}finally{try{!_n&&_i.return!=null&&_i.return();}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol<"u"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length=="number"){it&&(o=it);var i=0,F=function(){};return {s:F,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e2){throw _e2},f:F}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var normalCompletion=!0,didErr=!1,err;return {s:function(){it=it.call(o);},n:function(){var step=it.next();return normalCompletion=step.done,step},e:function(_e3){didErr=!0,err=_e3;},f:function(){try{!normalCompletion&&it.return!=null&&it.return();}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(o){if(typeof o=="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor&&(n=o.constructor.name),n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){(len==null||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var dom=[["a",{reserved:!1}],["abbr",{reserved:!1}],["acronym",{reserved:!1}],["address",{reserved:!1}],["applet",{reserved:!1}],["area",{reserved:!1}],["article",{reserved:!1}],["aside",{reserved:!1}],["audio",{reserved:!1}],["b",{reserved:!1}],["base",{reserved:!0}],["bdi",{reserved:!1}],["bdo",{reserved:!1}],["big",{reserved:!1}],["blink",{reserved:!1}],["blockquote",{reserved:!1}],["body",{reserved:!1}],["br",{reserved:!1}],["button",{reserved:!1}],["canvas",{reserved:!1}],["caption",{reserved:!1}],["center",{reserved:!1}],["cite",{reserved:!1}],["code",{reserved:!1}],["col",{reserved:!0}],["colgroup",{reserved:!0}],["content",{reserved:!1}],["data",{reserved:!1}],["datalist",{reserved:!1}],["dd",{reserved:!1}],["del",{reserved:!1}],["details",{reserved:!1}],["dfn",{reserved:!1}],["dialog",{reserved:!1}],["dir",{reserved:!1}],["div",{reserved:!1}],["dl",{reserved:!1}],["dt",{reserved:!1}],["em",{reserved:!1}],["embed",{reserved:!1}],["fieldset",{reserved:!1}],["figcaption",{reserved:!1}],["figure",{reserved:!1}],["font",{reserved:!1}],["footer",{reserved:!1}],["form",{reserved:!1}],["frame",{reserved:!1}],["frameset",{reserved:!1}],["h1",{reserved:!1}],["h2",{reserved:!1}],["h3",{reserved:!1}],["h4",{reserved:!1}],["h5",{reserved:!1}],["h6",{reserved:!1}],["head",{reserved:!0}],["header",{reserved:!1}],["hgroup",{reserved:!1}],["hr",{reserved:!1}],["html",{reserved:!0}],["i",{reserved:!1}],["iframe",{reserved:!1}],["img",{reserved:!1}],["input",{reserved:!1}],["ins",{reserved:!1}],["kbd",{reserved:!1}],["keygen",{reserved:!1}],["label",{reserved:!1}],["legend",{reserved:!1}],["li",{reserved:!1}],["link",{reserved:!0}],["main",{reserved:!1}],["map",{reserved:!1}],["mark",{reserved:!1}],["marquee",{reserved:!1}],["menu",{reserved:!1}],["menuitem",{reserved:!1}],["meta",{reserved:!0}],["meter",{reserved:!1}],["nav",{reserved:!1}],["noembed",{reserved:!0}],["noscript",{reserved:!0}],["object",{reserved:!1}],["ol",{reserved:!1}],["optgroup",{reserved:!1}],["option",{reserved:!1}],["output",{reserved:!1}],["p",{reserved:!1}],["param",{reserved:!0}],["picture",{reserved:!0}],["pre",{reserved:!1}],["progress",{reserved:!1}],["q",{reserved:!1}],["rp",{reserved:!1}],["rt",{reserved:!1}],["rtc",{reserved:!1}],["ruby",{reserved:!1}],["s",{reserved:!1}],["samp",{reserved:!1}],["script",{reserved:!0}],["section",{reserved:!1}],["select",{reserved:!1}],["small",{reserved:!1}],["source",{reserved:!0}],["spacer",{reserved:!1}],["span",{reserved:!1}],["strike",{reserved:!1}],["strong",{reserved:!1}],["style",{reserved:!0}],["sub",{reserved:!1}],["summary",{reserved:!1}],["sup",{reserved:!1}],["table",{reserved:!1}],["tbody",{reserved:!1}],["td",{reserved:!1}],["textarea",{reserved:!1}],["tfoot",{reserved:!1}],["th",{reserved:!1}],["thead",{reserved:!1}],["time",{reserved:!1}],["title",{reserved:!0}],["tr",{reserved:!1}],["track",{reserved:!0}],["tt",{reserved:!1}],["u",{reserved:!1}],["ul",{reserved:!1}],["var",{reserved:!1}],["video",{reserved:!1}],["wbr",{reserved:!1}],["xmp",{reserved:!1}]],domMap={entries:function(){return dom},forEach:function(fn3){var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_iterator=_createForOfIteratorHelper(dom),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),key=_step$value[0],values=_step$value[1];fn3.call(thisArg,values,key,dom);}}catch(err){_iterator.e(err);}finally{_iterator.f();}},get:function(key){var item=dom.find(function(tuple){return tuple[0]===key});return item&&item[1]},has:function(key){return !!domMap.get(key)},keys:function(){return dom.map(function(_ref){var _ref2=_slicedToArray(_ref,1),key=_ref2[0];return key})},values:function(){return dom.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),values2=_ref4[1];return values2})}},_default2=(0, _iterationDecorator.default)(domMap,domMap.entries());exports.default=_default2;}});var require_commandRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/commandRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var commandRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget"]]},_default2=commandRole;exports.default=_default2;}});var require_compositeRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/compositeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var compositeRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-disabled":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget"]]},_default2=compositeRole;exports.default=_default2;}});var require_inputRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/inputRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var inputRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null},relatedConcepts:[{concept:{name:"input"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget"]]},_default2=inputRole;exports.default=_default2;}});var require_landmarkRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/landmarkRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var landmarkRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=landmarkRole;exports.default=_default2;}});var require_rangeRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/rangeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var rangeRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-valuemax":null,"aria-valuemin":null,"aria-valuenow":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]},_default2=rangeRole;exports.default=_default2;}});var require_roletypeRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/roletypeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var roletypeRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{"aria-atomic":null,"aria-busy":null,"aria-controls":null,"aria-current":null,"aria-describedby":null,"aria-details":null,"aria-dropeffect":null,"aria-flowto":null,"aria-grabbed":null,"aria-hidden":null,"aria-keyshortcuts":null,"aria-label":null,"aria-labelledby":null,"aria-live":null,"aria-owns":null,"aria-relevant":null,"aria-roledescription":null},relatedConcepts:[{concept:{name:"role"},module:"XHTML"},{concept:{name:"type"},module:"Dublin Core"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[]},_default2=roletypeRole;exports.default=_default2;}});var require_sectionRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/sectionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var sectionRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"frontmatter"},module:"DTB"},{concept:{name:"level"},module:"DTB"},{concept:{name:"level"},module:"SMIL"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]},_default2=sectionRole;exports.default=_default2;}});var require_sectionheadRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/sectionheadRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var sectionheadRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]},_default2=sectionheadRole;exports.default=_default2;}});var require_selectRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/selectRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var selectRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-orientation":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","composite"],["roletype","structure","section","group"]]},_default2=selectRole;exports.default=_default2;}});var require_structureRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/structureRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var structureRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype"]]},_default2=structureRole;exports.default=_default2;}});var require_widgetRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/widgetRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var widgetRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype"]]},_default2=widgetRole;exports.default=_default2;}});var require_windowRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/abstract/windowRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var windowRole={abstract:!0,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-modal":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype"]]},_default2=windowRole;exports.default=_default2;}});var require_ariaAbstractRoles2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/ariaAbstractRoles.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _commandRole=_interopRequireDefault(require_commandRole2()),_compositeRole=_interopRequireDefault(require_compositeRole2()),_inputRole=_interopRequireDefault(require_inputRole2()),_landmarkRole=_interopRequireDefault(require_landmarkRole2()),_rangeRole=_interopRequireDefault(require_rangeRole2()),_roletypeRole=_interopRequireDefault(require_roletypeRole2()),_sectionRole=_interopRequireDefault(require_sectionRole2()),_sectionheadRole=_interopRequireDefault(require_sectionheadRole2()),_selectRole=_interopRequireDefault(require_selectRole2()),_structureRole=_interopRequireDefault(require_structureRole2()),_widgetRole=_interopRequireDefault(require_widgetRole2()),_windowRole=_interopRequireDefault(require_windowRole2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ariaAbstractRoles=[["command",_commandRole.default],["composite",_compositeRole.default],["input",_inputRole.default],["landmark",_landmarkRole.default],["range",_rangeRole.default],["roletype",_roletypeRole.default],["section",_sectionRole.default],["sectionhead",_sectionheadRole.default],["select",_selectRole.default],["structure",_structureRole.default],["widget",_widgetRole.default],["window",_windowRole.default]],_default2=ariaAbstractRoles;exports.default=_default2;}});var require_alertRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/alertRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var alertRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-atomic":"true","aria-live":"assertive"},relatedConcepts:[{concept:{name:"alert"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=alertRole;exports.default=_default2;}});var require_alertdialogRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/alertdialogRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var alertdialogRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"alert"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","alert"],["roletype","window","dialog"]]},_default2=alertdialogRole;exports.default=_default2;}});var require_applicationRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/applicationRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var applicationRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"Device Independence Delivery Unit"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]},_default2=applicationRole;exports.default=_default2;}});var require_articleRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/articleRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var articleRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-posinset":null,"aria-setsize":null},relatedConcepts:[{concept:{name:"article"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","document"]]},_default2=articleRole;exports.default=_default2;}});var require_bannerRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/bannerRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var bannerRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{constraints:["scoped to the body element"],name:"header"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=bannerRole;exports.default=_default2;}});var require_blockquoteRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/blockquoteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var blockquoteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"blockquote"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=blockquoteRole;exports.default=_default2;}});var require_buttonRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/buttonRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var buttonRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-expanded":null,"aria-haspopup":null,"aria-pressed":null},relatedConcepts:[{concept:{attributes:[{name:"type",value:"button"}],name:"input"},module:"HTML"},{concept:{attributes:[{name:"type",value:"image"}],name:"input"},module:"HTML"},{concept:{attributes:[{name:"type",value:"reset"}],name:"input"},module:"HTML"},{concept:{attributes:[{name:"type",value:"submit"}],name:"input"},module:"HTML"},{concept:{name:"button"},module:"HTML"},{concept:{name:"trigger"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command"]]},_default2=buttonRole;exports.default=_default2;}});var require_captionRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/captionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var captionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"caption"},module:"HTML"}],requireContextRole:["figure","grid","table"],requiredContextRole:["figure","grid","table"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=captionRole;exports.default=_default2;}});var require_cellRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/cellRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var cellRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-colindex":null,"aria-colspan":null,"aria-rowindex":null,"aria-rowspan":null},relatedConcepts:[{concept:{constraints:["ancestor table element has table role"],name:"td"},module:"HTML"}],requireContextRole:["row"],requiredContextRole:["row"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=cellRole;exports.default=_default2;}});var require_checkboxRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/checkboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var checkboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-checked":null,"aria-errormessage":null,"aria-expanded":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null},relatedConcepts:[{concept:{attributes:[{name:"type",value:"checkbox"}],name:"input"},module:"HTML"},{concept:{name:"option"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input"]]},_default2=checkboxRole;exports.default=_default2;}});var require_codeRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/codeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var codeRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"code"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=codeRole;exports.default=_default2;}});var require_columnheaderRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/columnheaderRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var columnheaderRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-sort":null},relatedConcepts:[{concept:{name:"th"},module:"HTML"},{concept:{attributes:[{name:"scope",value:"col"}],name:"th"},module:"HTML"},{concept:{attributes:[{name:"scope",value:"colgroup"}],name:"th"},module:"HTML"}],requireContextRole:["row"],requiredContextRole:["row"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","cell"],["roletype","structure","section","cell","gridcell"],["roletype","widget","gridcell"],["roletype","structure","sectionhead"]]},_default2=columnheaderRole;exports.default=_default2;}});var require_comboboxRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/comboboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var comboboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-autocomplete":null,"aria-errormessage":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null,"aria-expanded":"false","aria-haspopup":"listbox"},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"email"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"search"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"tel"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"text"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"url"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"list"},{name:"type",value:"url"}],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"multiple"},{constraints:["undefined"],name:"size"}],constraints:["the multiple attribute is not set and the size attribute does not have a value greater than 1"],name:"select"},module:"HTML"},{concept:{name:"select"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-controls":null,"aria-expanded":"false"},superClass:[["roletype","widget","input"]]},_default2=comboboxRole;exports.default=_default2;}});var require_complementaryRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/complementaryRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var complementaryRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"aside"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"aria-label"}],constraints:["scoped to a sectioning content element","scoped to a sectioning root element other than body"],name:"aside"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"aria-labelledby"}],constraints:["scoped to a sectioning content element","scoped to a sectioning root element other than body"],name:"aside"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=complementaryRole;exports.default=_default2;}});var require_contentinfoRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/contentinfoRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var contentinfoRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{constraints:["scoped to the body element"],name:"footer"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=contentinfoRole;exports.default=_default2;}});var require_definitionRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/definitionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var definitionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"dd"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=definitionRole;exports.default=_default2;}});var require_deletionRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/deletionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var deletionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"del"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=deletionRole;exports.default=_default2;}});var require_dialogRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/dialogRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var dialogRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"dialog"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","window"]]},_default2=dialogRole;exports.default=_default2;}});var require_directoryRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/directoryRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var directoryRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{module:"DAISY Guide"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","list"]]},_default2=directoryRole;exports.default=_default2;}});var require_documentRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/documentRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var documentRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"Device Independence Delivery Unit"}},{concept:{name:"html"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]},_default2=documentRole;exports.default=_default2;}});var require_emphasisRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/emphasisRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var emphasisRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"em"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=emphasisRole;exports.default=_default2;}});var require_feedRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/feedRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var feedRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["article"]],requiredProps:{},superClass:[["roletype","structure","section","list"]]},_default2=feedRole;exports.default=_default2;}});var require_figureRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/figureRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var figureRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"figure"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=figureRole;exports.default=_default2;}});var require_formRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/formRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var formRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"aria-label"}],name:"form"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"aria-labelledby"}],name:"form"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"name"}],name:"form"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=formRole;exports.default=_default2;}});var require_genericRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/genericRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var genericRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"a"},module:"HTML"},{concept:{name:"area"},module:"HTML"},{concept:{name:"aside"},module:"HTML"},{concept:{name:"b"},module:"HTML"},{concept:{name:"bdo"},module:"HTML"},{concept:{name:"body"},module:"HTML"},{concept:{name:"data"},module:"HTML"},{concept:{name:"div"},module:"HTML"},{concept:{constraints:["scoped to the main element","scoped to a sectioning content element","scoped to a sectioning root element other than body"],name:"footer"},module:"HTML"},{concept:{constraints:["scoped to the main element","scoped to a sectioning content element","scoped to a sectioning root element other than body"],name:"header"},module:"HTML"},{concept:{name:"hgroup"},module:"HTML"},{concept:{name:"i"},module:"HTML"},{concept:{name:"pre"},module:"HTML"},{concept:{name:"q"},module:"HTML"},{concept:{name:"samp"},module:"HTML"},{concept:{name:"section"},module:"HTML"},{concept:{name:"small"},module:"HTML"},{concept:{name:"span"},module:"HTML"},{concept:{name:"u"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]},_default2=genericRole;exports.default=_default2;}});var require_gridRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/gridRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var gridRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-multiselectable":null,"aria-readonly":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["row"],["row","rowgroup"]],requiredProps:{},superClass:[["roletype","widget","composite"],["roletype","structure","section","table"]]},_default2=gridRole;exports.default=_default2;}});var require_gridcellRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/gridcellRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var gridcellRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null,"aria-selected":null},relatedConcepts:[{concept:{constraints:["ancestor table element has grid role","ancestor table element has treegrid role"],name:"td"},module:"HTML"}],requireContextRole:["row"],requiredContextRole:["row"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","cell"],["roletype","widget"]]},_default2=gridcellRole;exports.default=_default2;}});var require_groupRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/groupRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var groupRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-disabled":null},relatedConcepts:[{concept:{name:"details"},module:"HTML"},{concept:{name:"fieldset"},module:"HTML"},{concept:{name:"optgroup"},module:"HTML"},{concept:{name:"address"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=groupRole;exports.default=_default2;}});var require_headingRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/headingRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var headingRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-level":"2"},relatedConcepts:[{concept:{name:"h1"},module:"HTML"},{concept:{name:"h2"},module:"HTML"},{concept:{name:"h3"},module:"HTML"},{concept:{name:"h4"},module:"HTML"},{concept:{name:"h5"},module:"HTML"},{concept:{name:"h6"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-level":"2"},superClass:[["roletype","structure","sectionhead"]]},_default2=headingRole;exports.default=_default2;}});var require_imgRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/imgRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var imgRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"alt"}],name:"img"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"alt"}],name:"img"},module:"HTML"},{concept:{name:"imggroup"},module:"DTB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=imgRole;exports.default=_default2;}});var require_insertionRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/insertionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var insertionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"ins"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=insertionRole;exports.default=_default2;}});var require_linkRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/linkRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var linkRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-expanded":null,"aria-haspopup":null},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"href"}],name:"a"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"href"}],name:"area"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command"]]},_default2=linkRole;exports.default=_default2;}});var require_listRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/listRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var listRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"menu"},module:"HTML"},{concept:{name:"ol"},module:"HTML"},{concept:{name:"ul"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["listitem"]],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=listRole;exports.default=_default2;}});var require_listboxRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/listboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var listboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-expanded":null,"aria-invalid":null,"aria-multiselectable":null,"aria-readonly":null,"aria-required":null,"aria-orientation":"vertical"},relatedConcepts:[{concept:{attributes:[{constraints:[">1"],name:"size"}],constraints:["the size attribute value is greater than 1"],name:"select"},module:"HTML"},{concept:{attributes:[{name:"multiple"}],name:"select"},module:"HTML"},{concept:{name:"datalist"},module:"HTML"},{concept:{name:"list"},module:"ARIA"},{concept:{name:"select"},module:"XForms"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["option","group"],["option"]],requiredProps:{},superClass:[["roletype","widget","composite","select"],["roletype","structure","section","group","select"]]},_default2=listboxRole;exports.default=_default2;}});var require_listitemRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/listitemRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var listitemRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-level":null,"aria-posinset":null,"aria-setsize":null},relatedConcepts:[{concept:{constraints:["direct descendant of ol","direct descendant of ul","direct descendant of menu"],name:"li"},module:"HTML"},{concept:{name:"item"},module:"XForms"}],requireContextRole:["directory","list"],requiredContextRole:["directory","list"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=listitemRole;exports.default=_default2;}});var require_logRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/logRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var logRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-live":"polite"},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=logRole;exports.default=_default2;}});var require_mainRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/mainRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var mainRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"main"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=mainRole;exports.default=_default2;}});var require_markRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/markRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var markRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:[],props:{"aria-braillelabel":null,"aria-brailleroledescription":null,"aria-description":null},relatedConcepts:[{concept:{name:"mark"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=markRole;exports.default=_default2;}});var require_marqueeRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/marqueeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var marqueeRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=marqueeRole;exports.default=_default2;}});var require_mathRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/mathRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var mathRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"math"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=mathRole;exports.default=_default2;}});var require_menuRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/menuRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menuRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-orientation":"vertical"},relatedConcepts:[{concept:{name:"MENU"},module:"JAPI"},{concept:{name:"list"},module:"ARIA"},{concept:{name:"select"},module:"XForms"},{concept:{name:"sidebar"},module:"DTB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["menuitem","group"],["menuitemradio","group"],["menuitemcheckbox","group"],["menuitem"],["menuitemcheckbox"],["menuitemradio"]],requiredProps:{},superClass:[["roletype","widget","composite","select"],["roletype","structure","section","group","select"]]},_default2=menuRole;exports.default=_default2;}});var require_menubarRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/menubarRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menubarRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-orientation":"horizontal"},relatedConcepts:[{concept:{name:"toolbar"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["menuitem","group"],["menuitemradio","group"],["menuitemcheckbox","group"],["menuitem"],["menuitemcheckbox"],["menuitemradio"]],requiredProps:{},superClass:[["roletype","widget","composite","select","menu"],["roletype","structure","section","group","select","menu"]]},_default2=menubarRole;exports.default=_default2;}});var require_menuitemRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/menuitemRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menuitemRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-expanded":null,"aria-haspopup":null,"aria-posinset":null,"aria-setsize":null},relatedConcepts:[{concept:{name:"MENU_ITEM"},module:"JAPI"},{concept:{name:"listitem"},module:"ARIA"},{concept:{name:"option"},module:"ARIA"}],requireContextRole:["group","menu","menubar"],requiredContextRole:["group","menu","menubar"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command"]]},_default2=menuitemRole;exports.default=_default2;}});var require_menuitemcheckboxRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/menuitemcheckboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menuitemcheckboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"menuitem"},module:"ARIA"}],requireContextRole:["group","menu","menubar"],requiredContextRole:["group","menu","menubar"],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input","checkbox"],["roletype","widget","command","menuitem"]]},_default2=menuitemcheckboxRole;exports.default=_default2;}});var require_menuitemradioRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/menuitemradioRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var menuitemradioRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"menuitem"},module:"ARIA"}],requireContextRole:["group","menu","menubar"],requiredContextRole:["group","menu","menubar"],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input","checkbox","menuitemcheckbox"],["roletype","widget","command","menuitem","menuitemcheckbox"],["roletype","widget","input","radio"]]},_default2=menuitemradioRole;exports.default=_default2;}});var require_meterRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/meterRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var meterRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-valuetext":null,"aria-valuemax":"100","aria-valuemin":"0"},relatedConcepts:[{concept:{name:"meter"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-valuenow":null},superClass:[["roletype","structure","range"]]},_default2=meterRole;exports.default=_default2;}});var require_navigationRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/navigationRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var navigationRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"nav"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=navigationRole;exports.default=_default2;}});var require_noneRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/noneRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var noneRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:[],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[]},_default2=noneRole;exports.default=_default2;}});var require_noteRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/noteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var noteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=noteRole;exports.default=_default2;}});var require_optionRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/optionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var optionRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-checked":null,"aria-posinset":null,"aria-setsize":null,"aria-selected":"false"},relatedConcepts:[{concept:{name:"item"},module:"XForms"},{concept:{name:"listitem"},module:"ARIA"},{concept:{name:"option"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-selected":"false"},superClass:[["roletype","widget","input"]]},_default2=optionRole;exports.default=_default2;}});var require_paragraphRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/paragraphRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var paragraphRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"p"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=paragraphRole;exports.default=_default2;}});var require_presentationRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/presentationRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var presentationRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{attributes:[{name:"alt",value:""}],name:"img"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]},_default2=presentationRole;exports.default=_default2;}});var require_progressbarRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/progressbarRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var progressbarRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-valuetext":null},relatedConcepts:[{concept:{name:"progress"},module:"HTML"},{concept:{name:"status"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","range"],["roletype","widget"]]},_default2=progressbarRole;exports.default=_default2;}});var require_radioRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/radioRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var radioRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-checked":null,"aria-posinset":null,"aria-setsize":null},relatedConcepts:[{concept:{attributes:[{name:"type",value:"radio"}],name:"input"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input"]]},_default2=radioRole;exports.default=_default2;}});var require_radiogroupRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/radiogroupRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var radiogroupRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null},relatedConcepts:[{concept:{name:"list"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["radio"]],requiredProps:{},superClass:[["roletype","widget","composite","select"],["roletype","structure","section","group","select"]]},_default2=radiogroupRole;exports.default=_default2;}});var require_regionRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/regionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var regionRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{attributes:[{constraints:["set"],name:"aria-label"}],name:"section"},module:"HTML"},{concept:{attributes:[{constraints:["set"],name:"aria-labelledby"}],name:"section"},module:"HTML"},{concept:{name:"Device Independence Glossart perceivable unit"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=regionRole;exports.default=_default2;}});var require_rowRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/rowRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var rowRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-colindex":null,"aria-expanded":null,"aria-level":null,"aria-posinset":null,"aria-rowindex":null,"aria-selected":null,"aria-setsize":null},relatedConcepts:[{concept:{name:"tr"},module:"HTML"}],requireContextRole:["grid","rowgroup","table","treegrid"],requiredContextRole:["grid","rowgroup","table","treegrid"],requiredOwnedElements:[["cell"],["columnheader"],["gridcell"],["rowheader"]],requiredProps:{},superClass:[["roletype","structure","section","group"],["roletype","widget"]]},_default2=rowRole;exports.default=_default2;}});var require_rowgroupRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/rowgroupRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var rowgroupRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"tbody"},module:"HTML"},{concept:{name:"tfoot"},module:"HTML"},{concept:{name:"thead"},module:"HTML"}],requireContextRole:["grid","table","treegrid"],requiredContextRole:["grid","table","treegrid"],requiredOwnedElements:[["row"]],requiredProps:{},superClass:[["roletype","structure"]]},_default2=rowgroupRole;exports.default=_default2;}});var require_rowheaderRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/rowheaderRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var rowheaderRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-sort":null},relatedConcepts:[{concept:{attributes:[{name:"scope",value:"row"}],name:"th"},module:"HTML"},{concept:{attributes:[{name:"scope",value:"rowgroup"}],name:"th"},module:"HTML"}],requireContextRole:["row","rowgroup"],requiredContextRole:["row","rowgroup"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","cell"],["roletype","structure","section","cell","gridcell"],["roletype","widget","gridcell"],["roletype","structure","sectionhead"]]},_default2=rowheaderRole;exports.default=_default2;}});var require_scrollbarRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/scrollbarRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var scrollbarRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-valuetext":null,"aria-orientation":"vertical","aria-valuemax":"100","aria-valuemin":"0"},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-controls":null,"aria-valuenow":null},superClass:[["roletype","structure","range"],["roletype","widget"]]},_default2=scrollbarRole;exports.default=_default2;}});var require_searchRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/searchRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var searchRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=searchRole;exports.default=_default2;}});var require_searchboxRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/searchboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var searchboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"search"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","input","textbox"]]},_default2=searchboxRole;exports.default=_default2;}});var require_separatorRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/separatorRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var separatorRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-orientation":"horizontal","aria-valuemax":"100","aria-valuemin":"0","aria-valuenow":null,"aria-valuetext":null},relatedConcepts:[{concept:{name:"hr"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure"]]},_default2=separatorRole;exports.default=_default2;}});var require_sliderRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/sliderRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var sliderRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-haspopup":null,"aria-invalid":null,"aria-readonly":null,"aria-valuetext":null,"aria-orientation":"horizontal","aria-valuemax":"100","aria-valuemin":"0"},relatedConcepts:[{concept:{attributes:[{name:"type",value:"range"}],name:"input"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-valuenow":null},superClass:[["roletype","widget","input"],["roletype","structure","range"]]},_default2=sliderRole;exports.default=_default2;}});var require_spinbuttonRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/spinbuttonRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var spinbuttonRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null,"aria-readonly":null,"aria-required":null,"aria-valuetext":null,"aria-valuenow":"0"},relatedConcepts:[{concept:{attributes:[{name:"type",value:"number"}],name:"input"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","composite"],["roletype","widget","input"],["roletype","structure","range"]]},_default2=spinbuttonRole;exports.default=_default2;}});var require_statusRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/statusRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var statusRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-atomic":"true","aria-live":"polite"},relatedConcepts:[{concept:{name:"output"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=statusRole;exports.default=_default2;}});var require_strongRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/strongRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var strongRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"strong"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=strongRole;exports.default=_default2;}});var require_subscriptRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/subscriptRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var subscriptRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"sub"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=subscriptRole;exports.default=_default2;}});var require_superscriptRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/superscriptRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var superscriptRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["prohibited"],prohibitedProps:["aria-label","aria-labelledby"],props:{},relatedConcepts:[{concept:{name:"sup"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=superscriptRole;exports.default=_default2;}});var require_switchRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/switchRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var switchRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"button"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{"aria-checked":null},superClass:[["roletype","widget","input","checkbox"]]},_default2=switchRole;exports.default=_default2;}});var require_tabRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/tabRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tabRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!0,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-disabled":null,"aria-expanded":null,"aria-haspopup":null,"aria-posinset":null,"aria-setsize":null,"aria-selected":"false"},relatedConcepts:[],requireContextRole:["tablist"],requiredContextRole:["tablist"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","sectionhead"],["roletype","widget"]]},_default2=tabRole;exports.default=_default2;}});var require_tableRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/tableRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tableRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-colcount":null,"aria-rowcount":null},relatedConcepts:[{concept:{name:"table"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["row"],["row","rowgroup"]],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=tableRole;exports.default=_default2;}});var require_tablistRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/tablistRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tablistRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-level":null,"aria-multiselectable":null,"aria-orientation":"horizontal"},relatedConcepts:[{module:"DAISY",concept:{name:"guide"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["tab"]],requiredProps:{},superClass:[["roletype","widget","composite"]]},_default2=tablistRole;exports.default=_default2;}});var require_tabpanelRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/tabpanelRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tabpanelRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=tabpanelRole;exports.default=_default2;}});var require_termRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/termRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var termRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"dfn"},module:"HTML"},{concept:{name:"dt"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=termRole;exports.default=_default2;}});var require_textboxRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/textboxRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var textboxRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-activedescendant":null,"aria-autocomplete":null,"aria-errormessage":null,"aria-haspopup":null,"aria-invalid":null,"aria-multiline":null,"aria-placeholder":null,"aria-readonly":null,"aria-required":null},relatedConcepts:[{concept:{attributes:[{constraints:["undefined"],name:"type"},{constraints:["undefined"],name:"list"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"email"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"tel"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"text"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{attributes:[{constraints:["undefined"],name:"list"},{name:"type",value:"url"}],constraints:["the list attribute is not set"],name:"input"},module:"HTML"},{concept:{name:"input"},module:"XForms"},{concept:{name:"textarea"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","input"]]},_default2=textboxRole;exports.default=_default2;}});var require_timeRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/timeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var timeRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"time"},module:"HTML"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=timeRole;exports.default=_default2;}});var require_timerRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/timerRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var timerRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","status"]]},_default2=timerRole;exports.default=_default2;}});var require_toolbarRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/toolbarRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var toolbarRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-orientation":"horizontal"},relatedConcepts:[{concept:{name:"menubar"},module:"ARIA"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","group"]]},_default2=toolbarRole;exports.default=_default2;}});var require_tooltipRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/tooltipRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var tooltipRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=tooltipRole;exports.default=_default2;}});var require_treeRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/treeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var treeRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null,"aria-multiselectable":null,"aria-required":null,"aria-orientation":"vertical"},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["treeitem","group"],["treeitem"]],requiredProps:{},superClass:[["roletype","widget","composite","select"],["roletype","structure","section","group","select"]]},_default2=treeRole;exports.default=_default2;}});var require_treegridRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/treegridRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var treegridRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["row"],["row","rowgroup"]],requiredProps:{},superClass:[["roletype","widget","composite","grid"],["roletype","structure","section","table","grid"],["roletype","widget","composite","select","tree"],["roletype","structure","section","group","select","tree"]]},_default2=treegridRole;exports.default=_default2;}});var require_treeitemRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/literal/treeitemRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var treeitemRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-expanded":null,"aria-haspopup":null},relatedConcepts:[],requireContextRole:["group","tree"],requiredContextRole:["group","tree"],requiredOwnedElements:[],requiredProps:{"aria-selected":null},superClass:[["roletype","structure","section","listitem"],["roletype","widget","input","option"]]},_default2=treeitemRole;exports.default=_default2;}});var require_ariaLiteralRoles2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/ariaLiteralRoles.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _alertRole=_interopRequireDefault(require_alertRole2()),_alertdialogRole=_interopRequireDefault(require_alertdialogRole2()),_applicationRole=_interopRequireDefault(require_applicationRole2()),_articleRole=_interopRequireDefault(require_articleRole2()),_bannerRole=_interopRequireDefault(require_bannerRole2()),_blockquoteRole=_interopRequireDefault(require_blockquoteRole2()),_buttonRole=_interopRequireDefault(require_buttonRole2()),_captionRole=_interopRequireDefault(require_captionRole2()),_cellRole=_interopRequireDefault(require_cellRole2()),_checkboxRole=_interopRequireDefault(require_checkboxRole2()),_codeRole=_interopRequireDefault(require_codeRole2()),_columnheaderRole=_interopRequireDefault(require_columnheaderRole2()),_comboboxRole=_interopRequireDefault(require_comboboxRole2()),_complementaryRole=_interopRequireDefault(require_complementaryRole2()),_contentinfoRole=_interopRequireDefault(require_contentinfoRole2()),_definitionRole=_interopRequireDefault(require_definitionRole2()),_deletionRole=_interopRequireDefault(require_deletionRole2()),_dialogRole=_interopRequireDefault(require_dialogRole2()),_directoryRole=_interopRequireDefault(require_directoryRole2()),_documentRole=_interopRequireDefault(require_documentRole2()),_emphasisRole=_interopRequireDefault(require_emphasisRole2()),_feedRole=_interopRequireDefault(require_feedRole2()),_figureRole=_interopRequireDefault(require_figureRole2()),_formRole=_interopRequireDefault(require_formRole2()),_genericRole=_interopRequireDefault(require_genericRole2()),_gridRole=_interopRequireDefault(require_gridRole2()),_gridcellRole=_interopRequireDefault(require_gridcellRole2()),_groupRole=_interopRequireDefault(require_groupRole2()),_headingRole=_interopRequireDefault(require_headingRole2()),_imgRole=_interopRequireDefault(require_imgRole2()),_insertionRole=_interopRequireDefault(require_insertionRole2()),_linkRole=_interopRequireDefault(require_linkRole2()),_listRole=_interopRequireDefault(require_listRole2()),_listboxRole=_interopRequireDefault(require_listboxRole2()),_listitemRole=_interopRequireDefault(require_listitemRole2()),_logRole=_interopRequireDefault(require_logRole2()),_mainRole=_interopRequireDefault(require_mainRole2()),_markRole=_interopRequireDefault(require_markRole2()),_marqueeRole=_interopRequireDefault(require_marqueeRole2()),_mathRole=_interopRequireDefault(require_mathRole2()),_menuRole=_interopRequireDefault(require_menuRole2()),_menubarRole=_interopRequireDefault(require_menubarRole2()),_menuitemRole=_interopRequireDefault(require_menuitemRole2()),_menuitemcheckboxRole=_interopRequireDefault(require_menuitemcheckboxRole2()),_menuitemradioRole=_interopRequireDefault(require_menuitemradioRole2()),_meterRole=_interopRequireDefault(require_meterRole2()),_navigationRole=_interopRequireDefault(require_navigationRole2()),_noneRole=_interopRequireDefault(require_noneRole2()),_noteRole=_interopRequireDefault(require_noteRole2()),_optionRole=_interopRequireDefault(require_optionRole2()),_paragraphRole=_interopRequireDefault(require_paragraphRole2()),_presentationRole=_interopRequireDefault(require_presentationRole2()),_progressbarRole=_interopRequireDefault(require_progressbarRole2()),_radioRole=_interopRequireDefault(require_radioRole2()),_radiogroupRole=_interopRequireDefault(require_radiogroupRole2()),_regionRole=_interopRequireDefault(require_regionRole2()),_rowRole=_interopRequireDefault(require_rowRole2()),_rowgroupRole=_interopRequireDefault(require_rowgroupRole2()),_rowheaderRole=_interopRequireDefault(require_rowheaderRole2()),_scrollbarRole=_interopRequireDefault(require_scrollbarRole2()),_searchRole=_interopRequireDefault(require_searchRole2()),_searchboxRole=_interopRequireDefault(require_searchboxRole2()),_separatorRole=_interopRequireDefault(require_separatorRole2()),_sliderRole=_interopRequireDefault(require_sliderRole2()),_spinbuttonRole=_interopRequireDefault(require_spinbuttonRole2()),_statusRole=_interopRequireDefault(require_statusRole2()),_strongRole=_interopRequireDefault(require_strongRole2()),_subscriptRole=_interopRequireDefault(require_subscriptRole2()),_superscriptRole=_interopRequireDefault(require_superscriptRole2()),_switchRole=_interopRequireDefault(require_switchRole2()),_tabRole=_interopRequireDefault(require_tabRole2()),_tableRole=_interopRequireDefault(require_tableRole2()),_tablistRole=_interopRequireDefault(require_tablistRole2()),_tabpanelRole=_interopRequireDefault(require_tabpanelRole2()),_termRole=_interopRequireDefault(require_termRole2()),_textboxRole=_interopRequireDefault(require_textboxRole2()),_timeRole=_interopRequireDefault(require_timeRole2()),_timerRole=_interopRequireDefault(require_timerRole2()),_toolbarRole=_interopRequireDefault(require_toolbarRole2()),_tooltipRole=_interopRequireDefault(require_tooltipRole2()),_treeRole=_interopRequireDefault(require_treeRole2()),_treegridRole=_interopRequireDefault(require_treegridRole2()),_treeitemRole=_interopRequireDefault(require_treeitemRole2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ariaLiteralRoles=[["alert",_alertRole.default],["alertdialog",_alertdialogRole.default],["application",_applicationRole.default],["article",_articleRole.default],["banner",_bannerRole.default],["blockquote",_blockquoteRole.default],["button",_buttonRole.default],["caption",_captionRole.default],["cell",_cellRole.default],["checkbox",_checkboxRole.default],["code",_codeRole.default],["columnheader",_columnheaderRole.default],["combobox",_comboboxRole.default],["complementary",_complementaryRole.default],["contentinfo",_contentinfoRole.default],["definition",_definitionRole.default],["deletion",_deletionRole.default],["dialog",_dialogRole.default],["directory",_directoryRole.default],["document",_documentRole.default],["emphasis",_emphasisRole.default],["feed",_feedRole.default],["figure",_figureRole.default],["form",_formRole.default],["generic",_genericRole.default],["grid",_gridRole.default],["gridcell",_gridcellRole.default],["group",_groupRole.default],["heading",_headingRole.default],["img",_imgRole.default],["insertion",_insertionRole.default],["link",_linkRole.default],["list",_listRole.default],["listbox",_listboxRole.default],["listitem",_listitemRole.default],["log",_logRole.default],["main",_mainRole.default],["mark",_markRole.default],["marquee",_marqueeRole.default],["math",_mathRole.default],["menu",_menuRole.default],["menubar",_menubarRole.default],["menuitem",_menuitemRole.default],["menuitemcheckbox",_menuitemcheckboxRole.default],["menuitemradio",_menuitemradioRole.default],["meter",_meterRole.default],["navigation",_navigationRole.default],["none",_noneRole.default],["note",_noteRole.default],["option",_optionRole.default],["paragraph",_paragraphRole.default],["presentation",_presentationRole.default],["progressbar",_progressbarRole.default],["radio",_radioRole.default],["radiogroup",_radiogroupRole.default],["region",_regionRole.default],["row",_rowRole.default],["rowgroup",_rowgroupRole.default],["rowheader",_rowheaderRole.default],["scrollbar",_scrollbarRole.default],["search",_searchRole.default],["searchbox",_searchboxRole.default],["separator",_separatorRole.default],["slider",_sliderRole.default],["spinbutton",_spinbuttonRole.default],["status",_statusRole.default],["strong",_strongRole.default],["subscript",_subscriptRole.default],["superscript",_superscriptRole.default],["switch",_switchRole.default],["tab",_tabRole.default],["table",_tableRole.default],["tablist",_tablistRole.default],["tabpanel",_tabpanelRole.default],["term",_termRole.default],["textbox",_textboxRole.default],["time",_timeRole.default],["timer",_timerRole.default],["toolbar",_toolbarRole.default],["tooltip",_tooltipRole.default],["tree",_treeRole.default],["treegrid",_treegridRole.default],["treeitem",_treeitemRole.default]],_default2=ariaLiteralRoles;exports.default=_default2;}});var require_docAbstractRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docAbstractRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docAbstractRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"abstract [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=docAbstractRole;exports.default=_default2;}});var require_docAcknowledgmentsRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docAcknowledgmentsRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docAcknowledgmentsRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"acknowledgments [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docAcknowledgmentsRole;exports.default=_default2;}});var require_docAfterwordRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docAfterwordRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docAfterwordRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"afterword [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docAfterwordRole;exports.default=_default2;}});var require_docAppendixRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docAppendixRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docAppendixRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"appendix [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docAppendixRole;exports.default=_default2;}});var require_docBacklinkRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docBacklinkRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docBacklinkRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"referrer [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command","link"]]},_default2=docBacklinkRole;exports.default=_default2;}});var require_docBiblioentryRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docBiblioentryRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docBiblioentryRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"EPUB biblioentry [EPUB-SSV]"},module:"EPUB"}],requireContextRole:["doc-bibliography"],requiredContextRole:["doc-bibliography"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","listitem"]]},_default2=docBiblioentryRole;exports.default=_default2;}});var require_docBibliographyRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docBibliographyRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docBibliographyRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"bibliography [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["doc-biblioentry"]],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docBibliographyRole;exports.default=_default2;}});var require_docBibliorefRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docBibliorefRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docBibliorefRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"biblioref [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command","link"]]},_default2=docBibliorefRole;exports.default=_default2;}});var require_docChapterRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docChapterRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docChapterRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"chapter [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docChapterRole;exports.default=_default2;}});var require_docColophonRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docColophonRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docColophonRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"colophon [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=docColophonRole;exports.default=_default2;}});var require_docConclusionRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docConclusionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docConclusionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"conclusion [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docConclusionRole;exports.default=_default2;}});var require_docCoverRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docCoverRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docCoverRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"cover [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","img"]]},_default2=docCoverRole;exports.default=_default2;}});var require_docCreditRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docCreditRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docCreditRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"credit [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=docCreditRole;exports.default=_default2;}});var require_docCreditsRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docCreditsRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docCreditsRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"credits [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docCreditsRole;exports.default=_default2;}});var require_docDedicationRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docDedicationRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docDedicationRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"dedication [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=docDedicationRole;exports.default=_default2;}});var require_docEndnoteRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docEndnoteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docEndnoteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"rearnote [EPUB-SSV]"},module:"EPUB"}],requireContextRole:["doc-endnotes"],requiredContextRole:["doc-endnotes"],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","listitem"]]},_default2=docEndnoteRole;exports.default=_default2;}});var require_docEndnotesRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docEndnotesRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docEndnotesRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"rearnotes [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["doc-endnote"]],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docEndnotesRole;exports.default=_default2;}});var require_docEpigraphRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docEpigraphRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docEpigraphRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"epigraph [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=docEpigraphRole;exports.default=_default2;}});var require_docEpilogueRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docEpilogueRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docEpilogueRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"epilogue [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docEpilogueRole;exports.default=_default2;}});var require_docErrataRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docErrataRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docErrataRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"errata [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docErrataRole;exports.default=_default2;}});var require_docExampleRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docExampleRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docExampleRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=docExampleRole;exports.default=_default2;}});var require_docFootnoteRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docFootnoteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docFootnoteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"footnote [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=docFootnoteRole;exports.default=_default2;}});var require_docForewordRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docForewordRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docForewordRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"foreword [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docForewordRole;exports.default=_default2;}});var require_docGlossaryRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docGlossaryRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docGlossaryRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"glossary [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[["definition"],["term"]],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docGlossaryRole;exports.default=_default2;}});var require_docGlossrefRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docGlossrefRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docGlossrefRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"glossref [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command","link"]]},_default2=docGlossrefRole;exports.default=_default2;}});var require_docIndexRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docIndexRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docIndexRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"index [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark","navigation"]]},_default2=docIndexRole;exports.default=_default2;}});var require_docIntroductionRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docIntroductionRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docIntroductionRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"introduction [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docIntroductionRole;exports.default=_default2;}});var require_docNoterefRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docNoterefRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docNoterefRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"noteref [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","widget","command","link"]]},_default2=docNoterefRole;exports.default=_default2;}});var require_docNoticeRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docNoticeRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docNoticeRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"notice [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","note"]]},_default2=docNoticeRole;exports.default=_default2;}});var require_docPagebreakRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docPagebreakRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPagebreakRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"pagebreak [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","separator"]]},_default2=docPagebreakRole;exports.default=_default2;}});var require_docPagelistRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docPagelistRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPagelistRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"page-list [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark","navigation"]]},_default2=docPagelistRole;exports.default=_default2;}});var require_docPartRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docPartRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPartRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"part [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docPartRole;exports.default=_default2;}});var require_docPrefaceRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docPrefaceRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPrefaceRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"preface [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docPrefaceRole;exports.default=_default2;}});var require_docPrologueRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docPrologueRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPrologueRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"prologue [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark"]]},_default2=docPrologueRole;exports.default=_default2;}});var require_docPullquoteRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docPullquoteRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docPullquoteRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{},relatedConcepts:[{concept:{name:"pullquote [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["none"]]},_default2=docPullquoteRole;exports.default=_default2;}});var require_docQnaRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docQnaRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docQnaRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"qna [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section"]]},_default2=docQnaRole;exports.default=_default2;}});var require_docSubtitleRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docSubtitleRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docSubtitleRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"subtitle [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","sectionhead"]]},_default2=docSubtitleRole;exports.default=_default2;}});var require_docTipRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docTipRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docTipRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"help [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","note"]]},_default2=docTipRole;exports.default=_default2;}});var require_docTocRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/dpub/docTocRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var docTocRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{concept:{name:"toc [EPUB-SSV]"},module:"EPUB"}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","landmark","navigation"]]},_default2=docTocRole;exports.default=_default2;}});var require_ariaDpubRoles2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/ariaDpubRoles.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _docAbstractRole=_interopRequireDefault(require_docAbstractRole2()),_docAcknowledgmentsRole=_interopRequireDefault(require_docAcknowledgmentsRole2()),_docAfterwordRole=_interopRequireDefault(require_docAfterwordRole2()),_docAppendixRole=_interopRequireDefault(require_docAppendixRole2()),_docBacklinkRole=_interopRequireDefault(require_docBacklinkRole2()),_docBiblioentryRole=_interopRequireDefault(require_docBiblioentryRole2()),_docBibliographyRole=_interopRequireDefault(require_docBibliographyRole2()),_docBibliorefRole=_interopRequireDefault(require_docBibliorefRole2()),_docChapterRole=_interopRequireDefault(require_docChapterRole2()),_docColophonRole=_interopRequireDefault(require_docColophonRole2()),_docConclusionRole=_interopRequireDefault(require_docConclusionRole2()),_docCoverRole=_interopRequireDefault(require_docCoverRole2()),_docCreditRole=_interopRequireDefault(require_docCreditRole2()),_docCreditsRole=_interopRequireDefault(require_docCreditsRole2()),_docDedicationRole=_interopRequireDefault(require_docDedicationRole2()),_docEndnoteRole=_interopRequireDefault(require_docEndnoteRole2()),_docEndnotesRole=_interopRequireDefault(require_docEndnotesRole2()),_docEpigraphRole=_interopRequireDefault(require_docEpigraphRole2()),_docEpilogueRole=_interopRequireDefault(require_docEpilogueRole2()),_docErrataRole=_interopRequireDefault(require_docErrataRole2()),_docExampleRole=_interopRequireDefault(require_docExampleRole2()),_docFootnoteRole=_interopRequireDefault(require_docFootnoteRole2()),_docForewordRole=_interopRequireDefault(require_docForewordRole2()),_docGlossaryRole=_interopRequireDefault(require_docGlossaryRole2()),_docGlossrefRole=_interopRequireDefault(require_docGlossrefRole2()),_docIndexRole=_interopRequireDefault(require_docIndexRole2()),_docIntroductionRole=_interopRequireDefault(require_docIntroductionRole2()),_docNoterefRole=_interopRequireDefault(require_docNoterefRole2()),_docNoticeRole=_interopRequireDefault(require_docNoticeRole2()),_docPagebreakRole=_interopRequireDefault(require_docPagebreakRole2()),_docPagelistRole=_interopRequireDefault(require_docPagelistRole2()),_docPartRole=_interopRequireDefault(require_docPartRole2()),_docPrefaceRole=_interopRequireDefault(require_docPrefaceRole2()),_docPrologueRole=_interopRequireDefault(require_docPrologueRole2()),_docPullquoteRole=_interopRequireDefault(require_docPullquoteRole2()),_docQnaRole=_interopRequireDefault(require_docQnaRole2()),_docSubtitleRole=_interopRequireDefault(require_docSubtitleRole2()),_docTipRole=_interopRequireDefault(require_docTipRole2()),_docTocRole=_interopRequireDefault(require_docTocRole2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ariaDpubRoles=[["doc-abstract",_docAbstractRole.default],["doc-acknowledgments",_docAcknowledgmentsRole.default],["doc-afterword",_docAfterwordRole.default],["doc-appendix",_docAppendixRole.default],["doc-backlink",_docBacklinkRole.default],["doc-biblioentry",_docBiblioentryRole.default],["doc-bibliography",_docBibliographyRole.default],["doc-biblioref",_docBibliorefRole.default],["doc-chapter",_docChapterRole.default],["doc-colophon",_docColophonRole.default],["doc-conclusion",_docConclusionRole.default],["doc-cover",_docCoverRole.default],["doc-credit",_docCreditRole.default],["doc-credits",_docCreditsRole.default],["doc-dedication",_docDedicationRole.default],["doc-endnote",_docEndnoteRole.default],["doc-endnotes",_docEndnotesRole.default],["doc-epigraph",_docEpigraphRole.default],["doc-epilogue",_docEpilogueRole.default],["doc-errata",_docErrataRole.default],["doc-example",_docExampleRole.default],["doc-footnote",_docFootnoteRole.default],["doc-foreword",_docForewordRole.default],["doc-glossary",_docGlossaryRole.default],["doc-glossref",_docGlossrefRole.default],["doc-index",_docIndexRole.default],["doc-introduction",_docIntroductionRole.default],["doc-noteref",_docNoterefRole.default],["doc-notice",_docNoticeRole.default],["doc-pagebreak",_docPagebreakRole.default],["doc-pagelist",_docPagelistRole.default],["doc-part",_docPartRole.default],["doc-preface",_docPrefaceRole.default],["doc-prologue",_docPrologueRole.default],["doc-pullquote",_docPullquoteRole.default],["doc-qna",_docQnaRole.default],["doc-subtitle",_docSubtitleRole.default],["doc-tip",_docTipRole.default],["doc-toc",_docTocRole.default]],_default2=ariaDpubRoles;exports.default=_default2;}});var require_graphicsDocumentRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/graphics/graphicsDocumentRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var graphicsDocumentRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!1,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{module:"GRAPHICS",concept:{name:"graphics-object"}},{module:"ARIA",concept:{name:"img"}},{module:"ARIA",concept:{name:"article"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","document"]]},_default2=graphicsDocumentRole;exports.default=_default2;}});var require_graphicsObjectRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/graphics/graphicsObjectRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var graphicsObjectRole={abstract:!1,accessibleNameRequired:!1,baseConcepts:[],childrenPresentational:!1,nameFrom:["author","contents"],prohibitedProps:[],props:{"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[{module:"GRAPHICS",concept:{name:"graphics-document"}},{module:"ARIA",concept:{name:"group"}},{module:"ARIA",concept:{name:"img"}},{module:"GRAPHICS",concept:{name:"graphics-symbol"}}],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","group"]]},_default2=graphicsObjectRole;exports.default=_default2;}});var require_graphicsSymbolRole2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/graphics/graphicsSymbolRole.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var graphicsSymbolRole={abstract:!1,accessibleNameRequired:!0,baseConcepts:[],childrenPresentational:!0,nameFrom:["author"],prohibitedProps:[],props:{"aria-disabled":null,"aria-errormessage":null,"aria-expanded":null,"aria-haspopup":null,"aria-invalid":null},relatedConcepts:[],requireContextRole:[],requiredContextRole:[],requiredOwnedElements:[],requiredProps:{},superClass:[["roletype","structure","section","img"]]},_default2=graphicsSymbolRole;exports.default=_default2;}});var require_ariaGraphicsRoles2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/etc/roles/ariaGraphicsRoles.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _graphicsDocumentRole=_interopRequireDefault(require_graphicsDocumentRole2()),_graphicsObjectRole=_interopRequireDefault(require_graphicsObjectRole2()),_graphicsSymbolRole=_interopRequireDefault(require_graphicsSymbolRole2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ariaGraphicsRoles=[["graphics-document",_graphicsDocumentRole.default],["graphics-object",_graphicsObjectRole.default],["graphics-symbol",_graphicsSymbolRole.default]],_default2=ariaGraphicsRoles;exports.default=_default2;}});var require_rolesMap2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/rolesMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _ariaAbstractRoles=_interopRequireDefault(require_ariaAbstractRoles2()),_ariaLiteralRoles=_interopRequireDefault(require_ariaLiteralRoles2()),_ariaDpubRoles=_interopRequireDefault(require_ariaDpubRoles2()),_ariaGraphicsRoles=_interopRequireDefault(require_ariaGraphicsRoles2()),_iterationDecorator=_interopRequireDefault(require_iterationDecorator2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty5(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol<"u"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length=="number"){it&&(o=it);var i=0,F=function(){};return {s:F,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e2){throw _e2},f:F}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var normalCompletion=!0,didErr=!1,err;return {s:function(){it=it.call(o);},n:function(){var step=it.next();return normalCompletion=step.done,step},e:function(_e3){didErr=!0,err=_e3;},f:function(){try{!normalCompletion&&it.return!=null&&it.return();}finally{if(didErr)throw err}}}}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _unsupportedIterableToArray(o,minLen){if(o){if(typeof o=="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor&&(n=o.constructor.name),n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){(len==null||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol<"u"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i!=null){var _arr=[],_n=!0,_d=!1,_s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err;}finally{try{!_n&&_i.return!=null&&_i.return();}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}var roles3=[].concat(_ariaAbstractRoles.default,_ariaLiteralRoles.default,_ariaDpubRoles.default,_ariaGraphicsRoles.default);roles3.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),roleDefinition=_ref2[1],_iterator=_createForOfIteratorHelper(roleDefinition.superClass),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var superClassIter=_step.value,_iterator2=_createForOfIteratorHelper(superClassIter),_step2;try{var _loop=function(){var superClassName=_step2.value,superClassRoleTuple=roles3.find(function(_ref3){var _ref4=_slicedToArray(_ref3,1),name=_ref4[0];return name===superClassName});if(superClassRoleTuple)for(var superClassDefinition=superClassRoleTuple[1],_i2=0,_Object$keys=Object.keys(superClassDefinition.props);_i2<_Object$keys.length;_i2++){var prop=_Object$keys[_i2];Object.prototype.hasOwnProperty.call(roleDefinition.props,prop)||Object.assign(roleDefinition.props,_defineProperty5({},prop,superClassDefinition.props[prop]));}};for(_iterator2.s();!(_step2=_iterator2.n()).done;)_loop();}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}});var rolesMap={entries:function(){return roles3},forEach:function(fn3){var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_iterator3=_createForOfIteratorHelper(roles3),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var _step3$value=_slicedToArray(_step3.value,2),key=_step3$value[0],values=_step3$value[1];fn3.call(thisArg,values,key,roles3);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}},get:function(key){var item=roles3.find(function(tuple){return tuple[0]===key});return item&&item[1]},has:function(key){return !!rolesMap.get(key)},keys:function(){return roles3.map(function(_ref5){var _ref6=_slicedToArray(_ref5,1),key=_ref6[0];return key})},values:function(){return roles3.map(function(_ref7){var _ref8=_slicedToArray(_ref7,2),values2=_ref8[1];return values2})}},_default2=(0, _iterationDecorator.default)(rolesMap,rolesMap.entries());exports.default=_default2;}});var require_lite=__commonJS({"../../node_modules/dequal/lite/index.js"(exports){var has=Object.prototype.hasOwnProperty;function dequal(foo,bar){var ctor,len;if(foo===bar)return !0;if(foo&&bar&&(ctor=foo.constructor)===bar.constructor){if(ctor===Date)return foo.getTime()===bar.getTime();if(ctor===RegExp)return foo.toString()===bar.toString();if(ctor===Array){if((len=foo.length)===bar.length)for(;len--&&dequal(foo[len],bar[len]););return len===-1}if(!ctor||typeof foo=="object"){len=0;for(ctor in foo)if(has.call(foo,ctor)&&++len&&!has.call(bar,ctor)||!(ctor in bar)||!dequal(foo[ctor],bar[ctor]))return !1;return Object.keys(bar).length===len}}return foo!==foo&&bar!==bar}exports.dequal=dequal;}});var require_elementRoleMap2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/elementRoleMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _lite=require_lite(),_iterationDecorator=_interopRequireDefault(require_iterationDecorator2()),_rolesMap=_interopRequireDefault(require_rolesMap2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i2){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i2)||_unsupportedIterableToArray(arr,i2)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _iterableToArrayLimit(arr,i2){var _i=arr==null?null:typeof Symbol<"u"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i!=null){var _arr=[],_n=!0,_d=!1,_s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i2&&_arr.length===i2));_n=!0);}catch(err){_d=!0,_e=err;}finally{try{!_n&&_i.return!=null&&_i.return();}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol<"u"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length=="number"){it&&(o=it);var i2=0,F=function(){};return {s:F,n:function(){return i2>=o.length?{done:!0}:{done:!1,value:o[i2++]}},e:function(_e2){throw _e2},f:F}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var normalCompletion=!0,didErr=!1,err;return {s:function(){it=it.call(o);},n:function(){var step=it.next();return normalCompletion=step.done,step},e:function(_e3){didErr=!0,err=_e3;},f:function(){try{!normalCompletion&&it.return!=null&&it.return();}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(o){if(typeof o=="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor&&(n=o.constructor.name),n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){(len==null||len>arr.length)&&(len=arr.length);for(var i2=0,arr2=new Array(len);i2<len;i2++)arr2[i2]=arr[i2];return arr2}var elementRoles3=[],keys2=_rolesMap.default.keys();for(i=0;i<keys2.length;i++)if(key=keys2[i],role=_rolesMap.default.get(key),role)for(concepts=[].concat(role.baseConcepts,role.relatedConcepts),k2=0;k2<concepts.length;k2++)relation=concepts[k2],relation.module==="HTML"&&function(){var concept=relation.concept;if(concept){var elementRoleRelation=elementRoles3.find(function(relation2){return (0, _lite.dequal)(relation2,concept)}),roles3;elementRoleRelation?roles3=elementRoleRelation[1]:roles3=[];for(var isUnique=!0,_i=0;_i<roles3.length;_i++)if(roles3[_i]===key){isUnique=!1;break}isUnique&&roles3.push(key),elementRoles3.push([concept,roles3]);}}();var key,role,concepts,relation,k2,i,elementRoleMap={entries:function(){return elementRoles3},forEach:function(fn3){var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_iterator=_createForOfIteratorHelper(elementRoles3),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),_key=_step$value[0],values=_step$value[1];fn3.call(thisArg,values,_key,elementRoles3);}}catch(err){_iterator.e(err);}finally{_iterator.f();}},get:function(key2){var item=elementRoles3.find(function(tuple){return key2.name===tuple[0].name&&(0, _lite.dequal)(key2.attributes,tuple[0].attributes)});return item&&item[1]},has:function(key2){return !!elementRoleMap.get(key2)},keys:function(){return elementRoles3.map(function(_ref){var _ref2=_slicedToArray(_ref,1),key2=_ref2[0];return key2})},values:function(){return elementRoles3.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),values2=_ref4[1];return values2})}},_default2=(0, _iterationDecorator.default)(elementRoleMap,elementRoleMap.entries());exports.default=_default2;}});var require_roleElementMap2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/roleElementMap.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _iterationDecorator=_interopRequireDefault(require_iterationDecorator2()),_rolesMap=_interopRequireDefault(require_rolesMap2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _slicedToArray(arr,i2){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i2)||_unsupportedIterableToArray(arr,i2)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function _iterableToArrayLimit(arr,i2){var _i=arr==null?null:typeof Symbol<"u"&&arr[Symbol.iterator]||arr["@@iterator"];if(_i!=null){var _arr=[],_n=!0,_d=!1,_s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i2&&_arr.length===i2));_n=!0);}catch(err){_d=!0,_e=err;}finally{try{!_n&&_i.return!=null&&_i.return();}finally{if(_d)throw _e}}return _arr}}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol<"u"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length=="number"){it&&(o=it);var i2=0,F=function(){};return {s:F,n:function(){return i2>=o.length?{done:!0}:{done:!1,value:o[i2++]}},e:function(_e2){throw _e2},f:F}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var normalCompletion=!0,didErr=!1,err;return {s:function(){it=it.call(o);},n:function(){var step=it.next();return normalCompletion=step.done,step},e:function(_e3){didErr=!0,err=_e3;},f:function(){try{!normalCompletion&&it.return!=null&&it.return();}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(o){if(typeof o=="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor&&(n=o.constructor.name),n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}}function _arrayLikeToArray(arr,len){(len==null||len>arr.length)&&(len=arr.length);for(var i2=0,arr2=new Array(len);i2<len;i2++)arr2[i2]=arr[i2];return arr2}var roleElement=[],keys2=_rolesMap.default.keys();for(i=0;i<keys2.length;i++)if(key=keys2[i],role=_rolesMap.default.get(key),relationConcepts=[],role){for(concepts=[].concat(role.baseConcepts,role.relatedConcepts),k2=0;k2<concepts.length;k2++)relation=concepts[k2],relation.module==="HTML"&&(concept=relation.concept,concept!=null&&relationConcepts.push(concept));relationConcepts.length>0&&roleElement.push([key,relationConcepts]);}var key,role,relationConcepts,concepts,relation,concept,k2,i,roleElementMap={entries:function(){return roleElement},forEach:function(fn3){var thisArg=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,_iterator=_createForOfIteratorHelper(roleElement),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),_key=_step$value[0],values=_step$value[1];fn3.call(thisArg,values,_key,roleElement);}}catch(err){_iterator.e(err);}finally{_iterator.f();}},get:function(key2){var item=roleElement.find(function(tuple){return tuple[0]===key2});return item&&item[1]},has:function(key2){return !!roleElementMap.get(key2)},keys:function(){return roleElement.map(function(_ref){var _ref2=_slicedToArray(_ref,1),key2=_ref2[0];return key2})},values:function(){return roleElement.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),values2=_ref4[1];return values2})}},_default2=(0, _iterationDecorator.default)(roleElementMap,roleElementMap.entries());exports.default=_default2;}});var require_lib2=__commonJS({"../../node_modules/@testing-library/dom/node_modules/aria-query/lib/index.js"(exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.roles=exports.roleElements=exports.elementRoles=exports.dom=exports.aria=void 0;var _ariaPropsMap=_interopRequireDefault(require_ariaPropsMap2()),_domMap=_interopRequireDefault(require_domMap2()),_rolesMap=_interopRequireDefault(require_rolesMap2()),_elementRoleMap=_interopRequireDefault(require_elementRoleMap2()),_roleElementMap=_interopRequireDefault(require_roleElementMap2());function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var aria=_ariaPropsMap.default;exports.aria=aria;var dom=_domMap.default;exports.dom=dom;var roles3=_rolesMap.default;exports.roles=roles3;var elementRoles3=_elementRoleMap.default;exports.elementRoles=elementRoles3;var roleElements2=_roleElementMap.default;exports.roleElements=roleElements2;}});var require_lz_string=__commonJS({"../../node_modules/lz-string/libs/lz-string.js"(exports,module2){var LZString=function(){var f4=String.fromCharCode,keyStrBase64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",keyStrUriSafe="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",baseReverseDic={};function getBaseValue(alphabet,character){if(!baseReverseDic[alphabet]){baseReverseDic[alphabet]={};for(var i=0;i<alphabet.length;i++)baseReverseDic[alphabet][alphabet.charAt(i)]=i;}return baseReverseDic[alphabet][character]}var LZString2={compressToBase64:function(input2){if(input2==null)return "";var res=LZString2._compress(input2,6,function(a2){return keyStrBase64.charAt(a2)});switch(res.length%4){default:case 0:return res;case 1:return res+"===";case 2:return res+"==";case 3:return res+"="}},decompressFromBase64:function(input2){return input2==null?"":input2==""?null:LZString2._decompress(input2.length,32,function(index){return getBaseValue(keyStrBase64,input2.charAt(index))})},compressToUTF16:function(input2){return input2==null?"":LZString2._compress(input2,15,function(a2){return f4(a2+32)})+" "},decompressFromUTF16:function(compressed){return compressed==null?"":compressed==""?null:LZString2._decompress(compressed.length,16384,function(index){return compressed.charCodeAt(index)-32})},compressToUint8Array:function(uncompressed){for(var compressed=LZString2.compress(uncompressed),buf=new Uint8Array(compressed.length*2),i=0,TotalLen=compressed.length;i<TotalLen;i++){var current_value=compressed.charCodeAt(i);buf[i*2]=current_value>>>8,buf[i*2+1]=current_value%256;}return buf},decompressFromUint8Array:function(compressed){if(compressed==null)return LZString2.decompress(compressed);for(var buf=new Array(compressed.length/2),i=0,TotalLen=buf.length;i<TotalLen;i++)buf[i]=compressed[i*2]*256+compressed[i*2+1];var result=[];return buf.forEach(function(c){result.push(f4(c));}),LZString2.decompress(result.join(""))},compressToEncodedURIComponent:function(input2){return input2==null?"":LZString2._compress(input2,6,function(a2){return keyStrUriSafe.charAt(a2)})},decompressFromEncodedURIComponent:function(input2){return input2==null?"":input2==""?null:(input2=input2.replace(/ /g,"+"),LZString2._decompress(input2.length,32,function(index){return getBaseValue(keyStrUriSafe,input2.charAt(index))}))},compress:function(uncompressed){return LZString2._compress(uncompressed,16,function(a2){return f4(a2)})},_compress:function(uncompressed,bitsPerChar,getCharFromInt){if(uncompressed==null)return "";var i,value,context_dictionary={},context_dictionaryToCreate={},context_c="",context_wc="",context_w="",context_enlargeIn=2,context_dictSize=3,context_numBits=2,context_data=[],context_data_val=0,context_data_position=0,ii;for(ii=0;ii<uncompressed.length;ii+=1)if(context_c=uncompressed.charAt(ii),Object.prototype.hasOwnProperty.call(context_dictionary,context_c)||(context_dictionary[context_c]=context_dictSize++,context_dictionaryToCreate[context_c]=!0),context_wc=context_w+context_c,Object.prototype.hasOwnProperty.call(context_dictionary,context_wc))context_w=context_wc;else {if(Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)){if(context_w.charCodeAt(0)<256){for(i=0;i<context_numBits;i++)context_data_val=context_data_val<<1,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++;for(value=context_w.charCodeAt(0),i=0;i<8;i++)context_data_val=context_data_val<<1|value&1,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++,value=value>>1;}else {for(value=1,i=0;i<context_numBits;i++)context_data_val=context_data_val<<1|value,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++,value=0;for(value=context_w.charCodeAt(0),i=0;i<16;i++)context_data_val=context_data_val<<1|value&1,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++,value=value>>1;}context_enlargeIn--,context_enlargeIn==0&&(context_enlargeIn=Math.pow(2,context_numBits),context_numBits++),delete context_dictionaryToCreate[context_w];}else for(value=context_dictionary[context_w],i=0;i<context_numBits;i++)context_data_val=context_data_val<<1|value&1,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++,value=value>>1;context_enlargeIn--,context_enlargeIn==0&&(context_enlargeIn=Math.pow(2,context_numBits),context_numBits++),context_dictionary[context_wc]=context_dictSize++,context_w=String(context_c);}if(context_w!==""){if(Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)){if(context_w.charCodeAt(0)<256){for(i=0;i<context_numBits;i++)context_data_val=context_data_val<<1,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++;for(value=context_w.charCodeAt(0),i=0;i<8;i++)context_data_val=context_data_val<<1|value&1,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++,value=value>>1;}else {for(value=1,i=0;i<context_numBits;i++)context_data_val=context_data_val<<1|value,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++,value=0;for(value=context_w.charCodeAt(0),i=0;i<16;i++)context_data_val=context_data_val<<1|value&1,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++,value=value>>1;}context_enlargeIn--,context_enlargeIn==0&&(context_enlargeIn=Math.pow(2,context_numBits),context_numBits++),delete context_dictionaryToCreate[context_w];}else for(value=context_dictionary[context_w],i=0;i<context_numBits;i++)context_data_val=context_data_val<<1|value&1,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++,value=value>>1;context_enlargeIn--,context_enlargeIn==0&&(context_enlargeIn=Math.pow(2,context_numBits),context_numBits++);}for(value=2,i=0;i<context_numBits;i++)context_data_val=context_data_val<<1|value&1,context_data_position==bitsPerChar-1?(context_data_position=0,context_data.push(getCharFromInt(context_data_val)),context_data_val=0):context_data_position++,value=value>>1;for(;;)if(context_data_val=context_data_val<<1,context_data_position==bitsPerChar-1){context_data.push(getCharFromInt(context_data_val));break}else context_data_position++;return context_data.join("")},decompress:function(compressed){return compressed==null?"":compressed==""?null:LZString2._decompress(compressed.length,32768,function(index){return compressed.charCodeAt(index)})},_decompress:function(length,resetValue,getNextValue){var dictionary=[],enlargeIn=4,dictSize=4,numBits=3,entry="",result=[],i,w2,bits,resb,maxpower,power,c,data={val:getNextValue(0),position:resetValue,index:1};for(i=0;i<3;i+=1)dictionary[i]=i;for(bits=0,maxpower=Math.pow(2,2),power=1;power!=maxpower;)resb=data.val&data.position,data.position>>=1,data.position==0&&(data.position=resetValue,data.val=getNextValue(data.index++)),bits|=(resb>0?1:0)*power,power<<=1;switch(bits){case 0:for(bits=0,maxpower=Math.pow(2,8),power=1;power!=maxpower;)resb=data.val&data.position,data.position>>=1,data.position==0&&(data.position=resetValue,data.val=getNextValue(data.index++)),bits|=(resb>0?1:0)*power,power<<=1;c=f4(bits);break;case 1:for(bits=0,maxpower=Math.pow(2,16),power=1;power!=maxpower;)resb=data.val&data.position,data.position>>=1,data.position==0&&(data.position=resetValue,data.val=getNextValue(data.index++)),bits|=(resb>0?1:0)*power,power<<=1;c=f4(bits);break;case 2:return ""}for(dictionary[3]=c,w2=c,result.push(c);;){if(data.index>length)return "";for(bits=0,maxpower=Math.pow(2,numBits),power=1;power!=maxpower;)resb=data.val&data.position,data.position>>=1,data.position==0&&(data.position=resetValue,data.val=getNextValue(data.index++)),bits|=(resb>0?1:0)*power,power<<=1;switch(c=bits){case 0:for(bits=0,maxpower=Math.pow(2,8),power=1;power!=maxpower;)resb=data.val&data.position,data.position>>=1,data.position==0&&(data.position=resetValue,data.val=getNextValue(data.index++)),bits|=(resb>0?1:0)*power,power<<=1;dictionary[dictSize++]=f4(bits),c=dictSize-1,enlargeIn--;break;case 1:for(bits=0,maxpower=Math.pow(2,16),power=1;power!=maxpower;)resb=data.val&data.position,data.position>>=1,data.position==0&&(data.position=resetValue,data.val=getNextValue(data.index++)),bits|=(resb>0?1:0)*power,power<<=1;dictionary[dictSize++]=f4(bits),c=dictSize-1,enlargeIn--;break;case 2:return result.join("")}if(enlargeIn==0&&(enlargeIn=Math.pow(2,numBits),numBits++),dictionary[c])entry=dictionary[c];else if(c===dictSize)entry=w2+w2.charAt(0);else return null;result.push(entry),dictionary[dictSize++]=w2+entry.charAt(0),enlargeIn--,w2=entry,enlargeIn==0&&(enlargeIn=Math.pow(2,numBits),numBits++);}}};return LZString2}();typeof define=="function"&&__webpack_require__.amdO?define(function(){return LZString}):typeof module2<"u"&&module2!=null?module2.exports=LZString:typeof angular<"u"&&angular!=null&&angular.module("LZString",[]).factory("LZString",function(){return LZString});}});var __defProp2=Object.defineProperty,__getOwnPropNames2=Object.getOwnPropertyNames,__name=(target,value)=>__defProp2(target,"name",{value,configurable:!0}),__commonJS2=(cb,mod)=>function(){return mod||(0, cb[__getOwnPropNames2(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports},__export2=(target,all)=>{for(var name in all)__defProp2(target,name,{get:all[name],enumerable:!0});},require_util=__commonJS2({"(disabled):util"(){}}),utils_exports={};__export2(utils_exports,{addChainableMethod:()=>addChainableMethod,addLengthGuard:()=>addLengthGuard,addMethod:()=>addMethod,addProperty:()=>addProperty,checkError:()=>check_error_exports,compareByInspect:()=>compareByInspect,eql:()=>deep_eql_default,expectTypes:()=>expectTypes,flag:()=>flag,getActual:()=>getActual,getMessage:()=>getMessage2,getName:()=>getName,getOperator:()=>getOperator,getOwnEnumerableProperties:()=>getOwnEnumerableProperties,getOwnEnumerablePropertySymbols:()=>getOwnEnumerablePropertySymbols,getPathInfo:()=>getPathInfo,hasProperty:()=>hasProperty,inspect:()=>inspect2,isNaN:()=>isNaN22,isNumeric:()=>isNumeric,isProxyEnabled:()=>isProxyEnabled,isRegExp:()=>isRegExp2,objDisplay:()=>objDisplay,overwriteChainableMethod:()=>overwriteChainableMethod,overwriteMethod:()=>overwriteMethod,overwriteProperty:()=>overwriteProperty,proxify:()=>proxify,test:()=>test,transferFlags:()=>transferFlags,type:()=>type});var check_error_exports={};__export2(check_error_exports,{compatibleConstructor:()=>compatibleConstructor,compatibleInstance:()=>compatibleInstance,compatibleMessage:()=>compatibleMessage,getConstructorName:()=>getConstructorName,getMessage:()=>getMessage});function isErrorInstance(obj){return obj instanceof Error||Object.prototype.toString.call(obj)==="[object Error]"}__name(isErrorInstance,"isErrorInstance");function isRegExp(obj){return Object.prototype.toString.call(obj)==="[object RegExp]"}__name(isRegExp,"isRegExp");function compatibleInstance(thrown,errorLike){return isErrorInstance(errorLike)&&thrown===errorLike}__name(compatibleInstance,"compatibleInstance");function compatibleConstructor(thrown,errorLike){return isErrorInstance(errorLike)?thrown.constructor===errorLike.constructor||thrown instanceof errorLike.constructor:(typeof errorLike=="object"||typeof errorLike=="function")&&errorLike.prototype?thrown.constructor===errorLike||thrown instanceof errorLike:!1}__name(compatibleConstructor,"compatibleConstructor");function compatibleMessage(thrown,errMatcher){let comparisonString=typeof thrown=="string"?thrown:thrown.message;return isRegExp(errMatcher)?errMatcher.test(comparisonString):typeof errMatcher=="string"?comparisonString.indexOf(errMatcher)!==-1:!1}__name(compatibleMessage,"compatibleMessage");function getConstructorName(errorLike){let constructorName=errorLike;return isErrorInstance(errorLike)?constructorName=errorLike.constructor.name:typeof errorLike=="function"&&(constructorName=errorLike.name,constructorName===""&&(constructorName=new errorLike().name||constructorName)),constructorName}__name(getConstructorName,"getConstructorName");function getMessage(errorLike){let msg="";return errorLike&&errorLike.message?msg=errorLike.message:typeof errorLike=="string"&&(msg=errorLike),msg}__name(getMessage,"getMessage");function flag(obj,key,value){var flags=obj.__flags||(obj.__flags=Object.create(null));if(arguments.length===3)flags[key]=value;else return flags[key]}__name(flag,"flag");function test(obj,args){var negate=flag(obj,"negate"),expr=args[0];return negate?!expr:expr}__name(test,"test");function type(obj){if(typeof obj>"u")return "undefined";if(obj===null)return "null";let stringTag=obj[Symbol.toStringTag];return typeof stringTag=="string"?stringTag:Object.prototype.toString.call(obj).slice(8,-1)}__name(type,"type");var canElideFrames="captureStackTrace"in Error,_a,AssertionError=(_a=class extends Error{message;get name(){return "AssertionError"}get ok(){return !1}constructor(message="Unspecified AssertionError",props,ssf){super(message),this.message=message,canElideFrames&&Error.captureStackTrace(this,ssf||_a);for(let key in props)key in this||(this[key]=props[key]);}toJSON(stack){return {...this,name:this.name,message:this.message,ok:!1,stack:stack!==!1?this.stack:void 0}}},__name(_a,"AssertionError"),_a);function expectTypes(obj,types){var flagMsg=flag(obj,"message"),ssfi=flag(obj,"ssfi");flagMsg=flagMsg?flagMsg+": ":"",obj=flag(obj,"object"),types=types.map(function(t){return t.toLowerCase()}),types.sort();var str=types.map(function(t,index){var art=~["a","e","i","o","u"].indexOf(t.charAt(0))?"an":"a",or=types.length>1&&index===types.length-1?"or ":"";return or+art+" "+t}).join(", "),objType=type(obj).toLowerCase();if(!types.some(function(expected){return objType===expected}))throw new AssertionError(flagMsg+"object tested must be "+str+", but "+objType+" given",void 0,ssfi)}__name(expectTypes,"expectTypes");function getActual(obj,args){return args.length>4?args[4]:obj._obj}__name(getActual,"getActual");var ansiColors={bold:["1","22"],dim:["2","22"],italic:["3","23"],underline:["4","24"],inverse:["7","27"],hidden:["8","28"],strike:["9","29"],black:["30","39"],red:["31","39"],green:["32","39"],yellow:["33","39"],blue:["34","39"],magenta:["35","39"],cyan:["36","39"],white:["37","39"],brightblack:["30;1","39"],brightred:["31;1","39"],brightgreen:["32;1","39"],brightyellow:["33;1","39"],brightblue:["34;1","39"],brightmagenta:["35;1","39"],brightcyan:["36;1","39"],brightwhite:["37;1","39"],grey:["90","39"]},styles={special:"cyan",number:"yellow",bigint:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",symbol:"green",date:"magenta",regexp:"red"},truncator="\\u2026";function colorise(value,styleType){let color=ansiColors[styles[styleType]]||ansiColors[styleType]||"";return color?`\\x1B[${color[0]}m${String(value)}\\x1B[${color[1]}m`:String(value)}__name(colorise,"colorise");function normaliseOptions({showHidden=!1,depth=2,colors=!1,customInspect=!0,showProxy=!1,maxArrayLength=1/0,breakLength=1/0,seen=[],truncate:truncate22=1/0,stylize=String}={},inspect32){let options={showHidden:!!showHidden,depth:Number(depth),colors:!!colors,customInspect:!!customInspect,showProxy:!!showProxy,maxArrayLength:Number(maxArrayLength),breakLength:Number(breakLength),truncate:Number(truncate22),seen,inspect:inspect32,stylize};return options.colors&&(options.stylize=colorise),options}__name(normaliseOptions,"normaliseOptions");function isHighSurrogate(char){return char>="\\uD800"&&char<="\\uDBFF"}__name(isHighSurrogate,"isHighSurrogate");function truncate(string,length,tail=truncator){string=String(string);let tailLength=tail.length,stringLength=string.length;if(tailLength>length&&stringLength>tailLength)return tail;if(stringLength>length&&stringLength>tailLength){let end=length-tailLength;return end>0&&isHighSurrogate(string[end-1])&&(end=end-1),`${string.slice(0,end)}${tail}`}return string}__name(truncate,"truncate");function inspectList(list,options,inspectItem,separator=", "){inspectItem=inspectItem||options.inspect;let size=list.length;if(size===0)return "";let originalLength=options.truncate,output="",peek="",truncated="";for(let i=0;i<size;i+=1){let last=i+1===list.length,secondToLast=i+2===list.length;truncated=`${truncator}(${list.length-i})`;let value=list[i];options.truncate=originalLength-output.length-(last?0:separator.length);let string=peek||inspectItem(value,options)+(last?"":separator),nextLength=output.length+string.length,truncatedLength=nextLength+truncated.length;if(last&&nextLength>originalLength&&output.length+truncated.length<=originalLength||!last&&!secondToLast&&truncatedLength>originalLength||(peek=last?"":inspectItem(list[i+1],options)+(secondToLast?"":separator),!last&&secondToLast&&truncatedLength>originalLength&&nextLength+peek.length>originalLength))break;if(output+=string,!last&&!secondToLast&&nextLength+peek.length>=originalLength){truncated=`${truncator}(${list.length-i-1})`;break}truncated="";}return `${output}${truncated}`}__name(inspectList,"inspectList");function quoteComplexKey(key){return key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)?key:JSON.stringify(key).replace(/\'/g,"\\\\\'").replace(/\\\\"/g,\'"\').replace(/(^"|"$)/g,"\'")}__name(quoteComplexKey,"quoteComplexKey");function inspectProperty([key,value],options){return options.truncate-=2,typeof key=="string"?key=quoteComplexKey(key):typeof key!="number"&&(key=`[${options.inspect(key,options)}]`),options.truncate-=key.length,value=options.inspect(value,options),`${key}: ${value}`}__name(inspectProperty,"inspectProperty");function inspectArray(array,options){let nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return "[]";options.truncate-=4;let listContents=inspectList(array,options);options.truncate-=listContents.length;let propertyContents="";return nonIndexProperties.length&&(propertyContents=inspectList(nonIndexProperties.map(key=>[key,array[key]]),options,inspectProperty)),`[ ${listContents}${propertyContents?`, ${propertyContents}`:""} ]`}__name(inspectArray,"inspectArray");var getArrayName=__name(array=>typeof Buffer=="function"&&array instanceof Buffer?"Buffer":array[Symbol.toStringTag]?array[Symbol.toStringTag]:array.constructor.name,"getArrayName");function inspectTypedArray(array,options){let name=getArrayName(array);options.truncate-=name.length+4;let nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return `${name}[]`;let output="";for(let i=0;i<array.length;i++){let string=`${options.stylize(truncate(array[i],options.truncate),"number")}${i===array.length-1?"":", "}`;if(options.truncate-=string.length,array[i]!==array.length&&options.truncate<=3){output+=`${truncator}(${array.length-array[i]+1})`;break}output+=string;}let propertyContents="";return nonIndexProperties.length&&(propertyContents=inspectList(nonIndexProperties.map(key=>[key,array[key]]),options,inspectProperty)),`${name}[ ${output}${propertyContents?`, ${propertyContents}`:""} ]`}__name(inspectTypedArray,"inspectTypedArray");function inspectDate(dateObject,options){let stringRepresentation=dateObject.toJSON();if(stringRepresentation===null)return "Invalid Date";let split=stringRepresentation.split("T"),date=split[0];return options.stylize(`${date}T${truncate(split[1],options.truncate-date.length-1)}`,"date")}__name(inspectDate,"inspectDate");function inspectFunction(func,options){let functionType=func[Symbol.toStringTag]||"Function",name=func.name;return name?options.stylize(`[${functionType} ${truncate(name,options.truncate-11)}]`,"special"):options.stylize(`[${functionType}]`,"special")}__name(inspectFunction,"inspectFunction");function inspectMapEntry([key,value],options){return options.truncate-=4,key=options.inspect(key,options),options.truncate-=key.length,value=options.inspect(value,options),`${key} => ${value}`}__name(inspectMapEntry,"inspectMapEntry");function mapToEntries(map){let entries=[];return map.forEach((value,key)=>{entries.push([key,value]);}),entries}__name(mapToEntries,"mapToEntries");function inspectMap(map,options){return map.size-1<=0?"Map{}":(options.truncate-=7,`Map{ ${inspectList(mapToEntries(map),options,inspectMapEntry)} }`)}__name(inspectMap,"inspectMap");var isNaN2=Number.isNaN||(i=>i!==i);function inspectNumber(number,options){return isNaN2(number)?options.stylize("NaN","number"):number===1/0?options.stylize("Infinity","number"):number===-1/0?options.stylize("-Infinity","number"):number===0?options.stylize(1/number===1/0?"+0":"-0","number"):options.stylize(truncate(String(number),options.truncate),"number")}__name(inspectNumber,"inspectNumber");function inspectBigInt(number,options){let nums=truncate(number.toString(),options.truncate-1);return nums!==truncator&&(nums+="n"),options.stylize(nums,"bigint")}__name(inspectBigInt,"inspectBigInt");function inspectRegExp(value,options){let flags=value.toString().split("/")[2],sourceLength=options.truncate-(2+flags.length),source=value.source;return options.stylize(`/${truncate(source,sourceLength)}/${flags}`,"regexp")}__name(inspectRegExp,"inspectRegExp");function arrayFromSet(set2){let values=[];return set2.forEach(value=>{values.push(value);}),values}__name(arrayFromSet,"arrayFromSet");function inspectSet(set2,options){return set2.size===0?"Set{}":(options.truncate-=7,`Set{ ${inspectList(arrayFromSet(set2),options)} }`)}__name(inspectSet,"inspectSet");var stringEscapeChars=new RegExp("[\'\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]","g"),escapeCharacters={"\\b":"\\\\b","\t":"\\\\t","\\n":"\\\\n","\\f":"\\\\f","\\r":"\\\\r","\'":"\\\\\'","\\\\":"\\\\\\\\"},hex=16,unicodeLength=4;function escape(char){return escapeCharacters[char]||`\\\\u${`0000${char.charCodeAt(0).toString(hex)}`.slice(-unicodeLength)}`}__name(escape,"escape");function inspectString(string,options){return stringEscapeChars.test(string)&&(string=string.replace(stringEscapeChars,escape)),options.stylize(`\'${truncate(string,options.truncate-2)}\'`,"string")}__name(inspectString,"inspectString");function inspectSymbol(value){return "description"in Symbol.prototype?value.description?`Symbol(${value.description})`:"Symbol()":value.toString()}__name(inspectSymbol,"inspectSymbol");var getPromiseValue=__name(()=>"Promise{\\u2026}","getPromiseValue");try{let{getPromiseDetails,kPending,kRejected}=process.binding("util");Array.isArray(getPromiseDetails(Promise.resolve()))&&(getPromiseValue=__name((value,options)=>{let[state,innerValue]=getPromiseDetails(value);return state===kPending?"Promise{<pending>}":`Promise${state===kRejected?"!":""}{${options.inspect(innerValue,options)}}`},"getPromiseValue"));}catch{}var promise_default=getPromiseValue;function inspectObject(object,options){let properties=Object.getOwnPropertyNames(object),symbols=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(object):[];if(properties.length===0&&symbols.length===0)return "{}";if(options.truncate-=4,options.seen=options.seen||[],options.seen.includes(object))return "[Circular]";options.seen.push(object);let propertyContents=inspectList(properties.map(key=>[key,object[key]]),options,inspectProperty),symbolContents=inspectList(symbols.map(key=>[key,object[key]]),options,inspectProperty);options.seen.pop();let sep="";return propertyContents&&symbolContents&&(sep=", "),`{ ${propertyContents}${sep}${symbolContents} }`}__name(inspectObject,"inspectObject");var toStringTag=typeof Symbol<"u"&&Symbol.toStringTag?Symbol.toStringTag:!1;function inspectClass(value,options){let name="";return toStringTag&&toStringTag in value&&(name=value[toStringTag]),name=name||value.constructor.name,(!name||name==="_class")&&(name="<Anonymous Class>"),options.truncate-=name.length,`${name}${inspectObject(value,options)}`}__name(inspectClass,"inspectClass");function inspectArguments(args,options){return args.length===0?"Arguments[]":(options.truncate-=13,`Arguments[ ${inspectList(args,options)} ]`)}__name(inspectArguments,"inspectArguments");var errorKeys=["stack","line","column","name","message","fileName","lineNumber","columnNumber","number","description","cause"];function inspectObject2(error,options){let properties=Object.getOwnPropertyNames(error).filter(key=>errorKeys.indexOf(key)===-1),name=error.name;options.truncate-=name.length;let message="";if(typeof error.message=="string"?message=truncate(error.message,options.truncate):properties.unshift("message"),message=message?`: ${message}`:"",options.truncate-=message.length+5,options.seen=options.seen||[],options.seen.includes(error))return "[Circular]";options.seen.push(error);let propertyContents=inspectList(properties.map(key=>[key,error[key]]),options,inspectProperty);return `${name}${message}${propertyContents?` { ${propertyContents} }`:""}`}__name(inspectObject2,"inspectObject");function inspectAttribute([key,value],options){return options.truncate-=3,value?`${options.stylize(String(key),"yellow")}=${options.stylize(`"${value}"`,"string")}`:`${options.stylize(String(key),"yellow")}`}__name(inspectAttribute,"inspectAttribute");function inspectHTMLCollection(collection,options){return inspectList(collection,options,inspectHTML,`\n`)}__name(inspectHTMLCollection,"inspectHTMLCollection");function inspectHTML(element,options){let properties=element.getAttributeNames(),name=element.tagName.toLowerCase(),head=options.stylize(`<${name}`,"special"),headClose=options.stylize(">","special"),tail=options.stylize(`</${name}>`,"special");options.truncate-=name.length*2+5;let propertyContents="";properties.length>0&&(propertyContents+=" ",propertyContents+=inspectList(properties.map(key=>[key,element.getAttribute(key)]),options,inspectAttribute," ")),options.truncate-=propertyContents.length;let truncate22=options.truncate,children=inspectHTMLCollection(element.children,options);return children&&children.length>truncate22&&(children=`${truncator}(${element.children.length})`),`${head}${propertyContents}${headClose}${children}${tail}`}__name(inspectHTML,"inspectHTML");var symbolsSupported=typeof Symbol=="function"&&typeof Symbol.for=="function",chaiInspect=symbolsSupported?Symbol.for("chai/inspect"):"@@chai/inspect",nodeInspect=!1;try{let nodeUtil=require_util();nodeInspect=nodeUtil.inspect?nodeUtil.inspect.custom:!1;}catch{nodeInspect=!1;}var constructorMap=new WeakMap,stringTagMap={},baseTypesMap={undefined:(value,options)=>options.stylize("undefined","undefined"),null:(value,options)=>options.stylize("null","null"),boolean:(value,options)=>options.stylize(String(value),"boolean"),Boolean:(value,options)=>options.stylize(String(value),"boolean"),number:inspectNumber,Number:inspectNumber,bigint:inspectBigInt,BigInt:inspectBigInt,string:inspectString,String:inspectString,function:inspectFunction,Function:inspectFunction,symbol:inspectSymbol,Symbol:inspectSymbol,Array:inspectArray,Date:inspectDate,Map:inspectMap,Set:inspectSet,RegExp:inspectRegExp,Promise:promise_default,WeakSet:(value,options)=>options.stylize("WeakSet{\\u2026}","special"),WeakMap:(value,options)=>options.stylize("WeakMap{\\u2026}","special"),Arguments:inspectArguments,Int8Array:inspectTypedArray,Uint8Array:inspectTypedArray,Uint8ClampedArray:inspectTypedArray,Int16Array:inspectTypedArray,Uint16Array:inspectTypedArray,Int32Array:inspectTypedArray,Uint32Array:inspectTypedArray,Float32Array:inspectTypedArray,Float64Array:inspectTypedArray,Generator:()=>"",DataView:()=>"",ArrayBuffer:()=>"",Error:inspectObject2,HTMLCollection:inspectHTMLCollection,NodeList:inspectHTMLCollection},inspectCustom=__name((value,options,type32)=>chaiInspect in value&&typeof value[chaiInspect]=="function"?value[chaiInspect](options):nodeInspect&&nodeInspect in value&&typeof value[nodeInspect]=="function"?value[nodeInspect](options.depth,options):"inspect"in value&&typeof value.inspect=="function"?value.inspect(options.depth,options):"constructor"in value&&constructorMap.has(value.constructor)?constructorMap.get(value.constructor)(value,options):stringTagMap[type32]?stringTagMap[type32](value,options):"","inspectCustom"),toString=Object.prototype.toString;function inspect(value,opts={}){let options=normaliseOptions(opts,inspect),{customInspect}=options,type32=value===null?"null":typeof value;if(type32==="object"&&(type32=toString.call(value).slice(8,-1)),type32 in baseTypesMap)return baseTypesMap[type32](value,options);if(customInspect&&value){let output=inspectCustom(value,options,type32);if(output)return typeof output=="string"?output:inspect(output,options)}let proto=value?Object.getPrototypeOf(value):!1;return proto===Object.prototype||proto===null?inspectObject(value,options):value&&typeof HTMLElement=="function"&&value instanceof HTMLElement?inspectHTML(value,options):"constructor"in value?value.constructor!==Object?inspectClass(value,options):inspectObject(value,options):value===Object(value)?inspectObject(value,options):options.stylize(String(value),type32)}__name(inspect,"inspect");var config={includeStack:!1,showDiff:!0,truncateThreshold:40,useProxy:!0,proxyExcludedKeys:["then","catch","inspect","toJSON"],deepEqual:null};function inspect2(obj,showHidden,depth,colors){var options={colors,depth:typeof depth>"u"?2:depth,showHidden,truncate:config.truncateThreshold?config.truncateThreshold:1/0};return inspect(obj,options)}__name(inspect2,"inspect");function objDisplay(obj){var str=inspect2(obj),type32=Object.prototype.toString.call(obj);if(config.truncateThreshold&&str.length>=config.truncateThreshold){if(type32==="[object Function]")return !obj.name||obj.name===""?"[Function]":"[Function: "+obj.name+"]";if(type32==="[object Array]")return "[ Array("+obj.length+") ]";if(type32==="[object Object]"){var keys2=Object.keys(obj),kstr=keys2.length>2?keys2.splice(0,2).join(", ")+", ...":keys2.join(", ");return "{ Object ("+kstr+") }"}else return str}else return str}__name(objDisplay,"objDisplay");function getMessage2(obj,args){var negate=flag(obj,"negate"),val=flag(obj,"object"),expected=args[3],actual=getActual(obj,args),msg=negate?args[2]:args[1],flagMsg=flag(obj,"message");return typeof msg=="function"&&(msg=msg()),msg=msg||"",msg=msg.replace(/#\\{this\\}/g,function(){return objDisplay(val)}).replace(/#\\{act\\}/g,function(){return objDisplay(actual)}).replace(/#\\{exp\\}/g,function(){return objDisplay(expected)}),flagMsg?flagMsg+": "+msg:msg}__name(getMessage2,"getMessage");function transferFlags(assertion,object,includeAll){var flags=assertion.__flags||(assertion.__flags=Object.create(null));object.__flags||(object.__flags=Object.create(null)),includeAll=arguments.length===3?includeAll:!0;for(var flag3 in flags)(includeAll||flag3!=="object"&&flag3!=="ssfi"&&flag3!=="lockSsfi"&&flag3!="message")&&(object.__flags[flag3]=flags[flag3]);}__name(transferFlags,"transferFlags");function type2(obj){if(typeof obj>"u")return "undefined";if(obj===null)return "null";let stringTag=obj[Symbol.toStringTag];return typeof stringTag=="string"?stringTag:Object.prototype.toString.call(obj).slice(8,-1)}__name(type2,"type");function FakeMap(){this._key="chai/deep-eql__"+Math.random()+Date.now();}__name(FakeMap,"FakeMap");FakeMap.prototype={get:__name(function(key){return key[this._key]},"get"),set:__name(function(key,value){Object.isExtensible(key)&&Object.defineProperty(key,this._key,{value,configurable:!0});},"set")};var MemoizeMap=typeof WeakMap=="function"?WeakMap:FakeMap;function memoizeCompare(leftHandOperand,rightHandOperand,memoizeMap){if(!memoizeMap||isPrimitive(leftHandOperand)||isPrimitive(rightHandOperand))return null;var leftHandMap=memoizeMap.get(leftHandOperand);if(leftHandMap){var result=leftHandMap.get(rightHandOperand);if(typeof result=="boolean")return result}return null}__name(memoizeCompare,"memoizeCompare");function memoizeSet(leftHandOperand,rightHandOperand,memoizeMap,result){if(!(!memoizeMap||isPrimitive(leftHandOperand)||isPrimitive(rightHandOperand))){var leftHandMap=memoizeMap.get(leftHandOperand);leftHandMap?leftHandMap.set(rightHandOperand,result):(leftHandMap=new MemoizeMap,leftHandMap.set(rightHandOperand,result),memoizeMap.set(leftHandOperand,leftHandMap));}}__name(memoizeSet,"memoizeSet");var deep_eql_default=deepEqual;function deepEqual(leftHandOperand,rightHandOperand,options){if(options&&options.comparator)return extensiveDeepEqual(leftHandOperand,rightHandOperand,options);var simpleResult=simpleEqual(leftHandOperand,rightHandOperand);return simpleResult!==null?simpleResult:extensiveDeepEqual(leftHandOperand,rightHandOperand,options)}__name(deepEqual,"deepEqual");function simpleEqual(leftHandOperand,rightHandOperand){return leftHandOperand===rightHandOperand?leftHandOperand!==0||1/leftHandOperand===1/rightHandOperand:leftHandOperand!==leftHandOperand&&rightHandOperand!==rightHandOperand?!0:isPrimitive(leftHandOperand)||isPrimitive(rightHandOperand)?!1:null}__name(simpleEqual,"simpleEqual");function extensiveDeepEqual(leftHandOperand,rightHandOperand,options){options=options||{},options.memoize=options.memoize===!1?!1:options.memoize||new MemoizeMap;var comparator=options&&options.comparator,memoizeResultLeft=memoizeCompare(leftHandOperand,rightHandOperand,options.memoize);if(memoizeResultLeft!==null)return memoizeResultLeft;var memoizeResultRight=memoizeCompare(rightHandOperand,leftHandOperand,options.memoize);if(memoizeResultRight!==null)return memoizeResultRight;if(comparator){var comparatorResult=comparator(leftHandOperand,rightHandOperand);if(comparatorResult===!1||comparatorResult===!0)return memoizeSet(leftHandOperand,rightHandOperand,options.memoize,comparatorResult),comparatorResult;var simpleResult=simpleEqual(leftHandOperand,rightHandOperand);if(simpleResult!==null)return simpleResult}var leftHandType=type2(leftHandOperand);if(leftHandType!==type2(rightHandOperand))return memoizeSet(leftHandOperand,rightHandOperand,options.memoize,!1),!1;memoizeSet(leftHandOperand,rightHandOperand,options.memoize,!0);var result=extensiveDeepEqualByType(leftHandOperand,rightHandOperand,leftHandType,options);return memoizeSet(leftHandOperand,rightHandOperand,options.memoize,result),result}__name(extensiveDeepEqual,"extensiveDeepEqual");function extensiveDeepEqualByType(leftHandOperand,rightHandOperand,leftHandType,options){switch(leftHandType){case"String":case"Number":case"Boolean":case"Date":return deepEqual(leftHandOperand.valueOf(),rightHandOperand.valueOf());case"Promise":case"Symbol":case"function":case"WeakMap":case"WeakSet":return leftHandOperand===rightHandOperand;case"Error":return keysEqual(leftHandOperand,rightHandOperand,["name","message","code"],options);case"Arguments":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"Array":return iterableEqual(leftHandOperand,rightHandOperand,options);case"RegExp":return regexpEqual(leftHandOperand,rightHandOperand);case"Generator":return generatorEqual(leftHandOperand,rightHandOperand,options);case"DataView":return iterableEqual(new Uint8Array(leftHandOperand.buffer),new Uint8Array(rightHandOperand.buffer),options);case"ArrayBuffer":return iterableEqual(new Uint8Array(leftHandOperand),new Uint8Array(rightHandOperand),options);case"Set":return entriesEqual(leftHandOperand,rightHandOperand,options);case"Map":return entriesEqual(leftHandOperand,rightHandOperand,options);case"Temporal.PlainDate":case"Temporal.PlainTime":case"Temporal.PlainDateTime":case"Temporal.Instant":case"Temporal.ZonedDateTime":case"Temporal.PlainYearMonth":case"Temporal.PlainMonthDay":return leftHandOperand.equals(rightHandOperand);case"Temporal.Duration":return leftHandOperand.total("nanoseconds")===rightHandOperand.total("nanoseconds");case"Temporal.TimeZone":case"Temporal.Calendar":return leftHandOperand.toString()===rightHandOperand.toString();default:return objectEqual(leftHandOperand,rightHandOperand,options)}}__name(extensiveDeepEqualByType,"extensiveDeepEqualByType");function regexpEqual(leftHandOperand,rightHandOperand){return leftHandOperand.toString()===rightHandOperand.toString()}__name(regexpEqual,"regexpEqual");function entriesEqual(leftHandOperand,rightHandOperand,options){try{if(leftHandOperand.size!==rightHandOperand.size)return !1;if(leftHandOperand.size===0)return !0}catch{return !1}var leftHandItems=[],rightHandItems=[];return leftHandOperand.forEach(__name(function(key,value){leftHandItems.push([key,value]);},"gatherEntries")),rightHandOperand.forEach(__name(function(key,value){rightHandItems.push([key,value]);},"gatherEntries")),iterableEqual(leftHandItems.sort(),rightHandItems.sort(),options)}__name(entriesEqual,"entriesEqual");function iterableEqual(leftHandOperand,rightHandOperand,options){var length=leftHandOperand.length;if(length!==rightHandOperand.length)return !1;if(length===0)return !0;for(var index=-1;++index<length;)if(deepEqual(leftHandOperand[index],rightHandOperand[index],options)===!1)return !1;return !0}__name(iterableEqual,"iterableEqual");function generatorEqual(leftHandOperand,rightHandOperand,options){return iterableEqual(getGeneratorEntries(leftHandOperand),getGeneratorEntries(rightHandOperand),options)}__name(generatorEqual,"generatorEqual");function hasIteratorFunction(target){return typeof Symbol<"u"&&typeof target=="object"&&typeof Symbol.iterator<"u"&&typeof target[Symbol.iterator]=="function"}__name(hasIteratorFunction,"hasIteratorFunction");function getIteratorEntries(target){if(hasIteratorFunction(target))try{return getGeneratorEntries(target[Symbol.iterator]())}catch{return []}return []}__name(getIteratorEntries,"getIteratorEntries");function getGeneratorEntries(generator){for(var generatorResult=generator.next(),accumulator=[generatorResult.value];generatorResult.done===!1;)generatorResult=generator.next(),accumulator.push(generatorResult.value);return accumulator}__name(getGeneratorEntries,"getGeneratorEntries");function getEnumerableKeys(target){var keys2=[];for(var key in target)keys2.push(key);return keys2}__name(getEnumerableKeys,"getEnumerableKeys");function getEnumerableSymbols(target){for(var keys2=[],allKeys=Object.getOwnPropertySymbols(target),i=0;i<allKeys.length;i+=1){var key=allKeys[i];Object.getOwnPropertyDescriptor(target,key).enumerable&&keys2.push(key);}return keys2}__name(getEnumerableSymbols,"getEnumerableSymbols");function keysEqual(leftHandOperand,rightHandOperand,keys2,options){var length=keys2.length;if(length===0)return !0;for(var i=0;i<length;i+=1)if(deepEqual(leftHandOperand[keys2[i]],rightHandOperand[keys2[i]],options)===!1)return !1;return !0}__name(keysEqual,"keysEqual");function objectEqual(leftHandOperand,rightHandOperand,options){var leftHandKeys=getEnumerableKeys(leftHandOperand),rightHandKeys=getEnumerableKeys(rightHandOperand),leftHandSymbols=getEnumerableSymbols(leftHandOperand),rightHandSymbols=getEnumerableSymbols(rightHandOperand);if(leftHandKeys=leftHandKeys.concat(leftHandSymbols),rightHandKeys=rightHandKeys.concat(rightHandSymbols),leftHandKeys.length&&leftHandKeys.length===rightHandKeys.length)return iterableEqual(mapSymbols(leftHandKeys).sort(),mapSymbols(rightHandKeys).sort())===!1?!1:keysEqual(leftHandOperand,rightHandOperand,leftHandKeys,options);var leftHandEntries=getIteratorEntries(leftHandOperand),rightHandEntries=getIteratorEntries(rightHandOperand);return leftHandEntries.length&&leftHandEntries.length===rightHandEntries.length?(leftHandEntries.sort(),rightHandEntries.sort(),iterableEqual(leftHandEntries,rightHandEntries,options)):leftHandKeys.length===0&&leftHandEntries.length===0&&rightHandKeys.length===0&&rightHandEntries.length===0}__name(objectEqual,"objectEqual");function isPrimitive(value){return value===null||typeof value!="object"}__name(isPrimitive,"isPrimitive");function mapSymbols(arr){return arr.map(__name(function(entry){return typeof entry=="symbol"?entry.toString():entry},"mapSymbol"))}__name(mapSymbols,"mapSymbols");function hasProperty(obj,name){return typeof obj>"u"||obj===null?!1:name in Object(obj)}__name(hasProperty,"hasProperty");function parsePath(path){return path.replace(/([^\\\\])\\[/g,"$1.[").match(/(\\\\\\.|[^.]+?)+/g).map(value=>{if(value==="constructor"||value==="__proto__"||value==="prototype")return {};let mArr=/^\\[(\\d+)\\]$/.exec(value),parsed=null;return mArr?parsed={i:parseFloat(mArr[1])}:parsed={p:value.replace(/\\\\([.[\\]])/g,"$1")},parsed})}__name(parsePath,"parsePath");function internalGetPathValue(obj,parsed,pathDepth){let temporaryValue=obj,res=null;pathDepth=typeof pathDepth>"u"?parsed.length:pathDepth;for(let i=0;i<pathDepth;i++){let part=parsed[i];temporaryValue&&(typeof part.p>"u"?temporaryValue=temporaryValue[part.i]:temporaryValue=temporaryValue[part.p],i===pathDepth-1&&(res=temporaryValue));}return res}__name(internalGetPathValue,"internalGetPathValue");function getPathInfo(obj,path){let parsed=parsePath(path),last=parsed[parsed.length-1],info={parent:parsed.length>1?internalGetPathValue(obj,parsed,parsed.length-1):obj,name:last.p||last.i,value:internalGetPathValue(obj,parsed)};return info.exists=hasProperty(info.parent,info.name),info}__name(getPathInfo,"getPathInfo");function Assertion(obj,msg,ssfi,lockSsfi){return flag(this,"ssfi",ssfi||Assertion),flag(this,"lockSsfi",lockSsfi),flag(this,"object",obj),flag(this,"message",msg),flag(this,"eql",config.deepEqual||deep_eql_default),proxify(this)}__name(Assertion,"Assertion");Object.defineProperty(Assertion,"includeStack",{get:function(){return console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),config.includeStack},set:function(value){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),config.includeStack=value;}});Object.defineProperty(Assertion,"showDiff",{get:function(){return console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),config.showDiff},set:function(value){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),config.showDiff=value;}});Assertion.addProperty=function(name,fn3){addProperty(this.prototype,name,fn3);};Assertion.addMethod=function(name,fn3){addMethod(this.prototype,name,fn3);};Assertion.addChainableMethod=function(name,fn3,chainingBehavior){addChainableMethod(this.prototype,name,fn3,chainingBehavior);};Assertion.overwriteProperty=function(name,fn3){overwriteProperty(this.prototype,name,fn3);};Assertion.overwriteMethod=function(name,fn3){overwriteMethod(this.prototype,name,fn3);};Assertion.overwriteChainableMethod=function(name,fn3,chainingBehavior){overwriteChainableMethod(this.prototype,name,fn3,chainingBehavior);};Assertion.prototype.assert=function(expr,msg,negateMsg,expected,_actual,showDiff){var ok=test(this,arguments);if(showDiff!==!1&&(showDiff=!0),expected===void 0&&_actual===void 0&&(showDiff=!1),config.showDiff!==!0&&(showDiff=!1),!ok){msg=getMessage2(this,arguments);var actual=getActual(this,arguments),assertionErrorObjectProperties={actual,expected,showDiff},operator=getOperator(this,arguments);throw operator&&(assertionErrorObjectProperties.operator=operator),new AssertionError(msg,assertionErrorObjectProperties,config.includeStack?this.assert:flag(this,"ssfi"))}};Object.defineProperty(Assertion.prototype,"_obj",{get:function(){return flag(this,"object")},set:function(val){flag(this,"object",val);}});function isProxyEnabled(){return config.useProxy&&typeof Proxy<"u"&&typeof Reflect<"u"}__name(isProxyEnabled,"isProxyEnabled");function addProperty(ctx,name,getter){getter=getter===void 0?function(){}:getter,Object.defineProperty(ctx,name,{get:__name(function propertyGetter(){!isProxyEnabled()&&!flag(this,"lockSsfi")&&flag(this,"ssfi",propertyGetter);var result=getter.call(this);if(result!==void 0)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion},"propertyGetter"),configurable:!0});}__name(addProperty,"addProperty");var fnLengthDesc=Object.getOwnPropertyDescriptor(function(){},"length");function addLengthGuard(fn3,assertionName,isChainable){return fnLengthDesc.configurable&&Object.defineProperty(fn3,"length",{get:function(){throw Error(isChainable?"Invalid Chai property: "+assertionName+\'.length. Due to a compatibility issue, "length" cannot directly follow "\'+assertionName+\'". Use "\'+assertionName+\'.lengthOf" instead.\':"Invalid Chai property: "+assertionName+\'.length. See docs for proper usage of "\'+assertionName+\'".\')}}),fn3}__name(addLengthGuard,"addLengthGuard");function getProperties(object){var result=Object.getOwnPropertyNames(object);function addProperty2(property){result.indexOf(property)===-1&&result.push(property);}__name(addProperty2,"addProperty");for(var proto=Object.getPrototypeOf(object);proto!==null;)Object.getOwnPropertyNames(proto).forEach(addProperty2),proto=Object.getPrototypeOf(proto);return result}__name(getProperties,"getProperties");var builtins=["__flags","__methods","_obj","assert"];function proxify(obj,nonChainableMethodName){return isProxyEnabled()?new Proxy(obj,{get:__name(function proxyGetter(target,property){if(typeof property=="string"&&config.proxyExcludedKeys.indexOf(property)===-1&&!Reflect.has(target,property)){if(nonChainableMethodName)throw Error("Invalid Chai property: "+nonChainableMethodName+"."+property+\'. See docs for proper usage of "\'+nonChainableMethodName+\'".\');var suggestion=null,suggestionDistance=4;throw getProperties(target).forEach(function(prop){if(!Object.prototype.hasOwnProperty(prop)&&builtins.indexOf(prop)===-1){var dist=stringDistanceCapped(property,prop,suggestionDistance);dist<suggestionDistance&&(suggestion=prop,suggestionDistance=dist);}}),Error(suggestion!==null?"Invalid Chai property: "+property+\'. Did you mean "\'+suggestion+\'"?\':"Invalid Chai property: "+property)}return builtins.indexOf(property)===-1&&!flag(target,"lockSsfi")&&flag(target,"ssfi",proxyGetter),Reflect.get(target,property)},"proxyGetter")}):obj}__name(proxify,"proxify");function stringDistanceCapped(strA,strB,cap){if(Math.abs(strA.length-strB.length)>=cap)return cap;var memo=[];for(let i=0;i<=strA.length;i++)memo[i]=Array(strB.length+1).fill(0),memo[i][0]=i;for(let j=0;j<strB.length;j++)memo[0][j]=j;for(let i=1;i<=strA.length;i++){var ch=strA.charCodeAt(i-1);for(let j=1;j<=strB.length;j++){if(Math.abs(i-j)>=cap){memo[i][j]=cap;continue}memo[i][j]=Math.min(memo[i-1][j]+1,memo[i][j-1]+1,memo[i-1][j-1]+(ch===strB.charCodeAt(j-1)?0:1));}}return memo[strA.length][strB.length]}__name(stringDistanceCapped,"stringDistanceCapped");function addMethod(ctx,name,method){var methodWrapper=__name(function(){flag(this,"lockSsfi")||flag(this,"ssfi",methodWrapper);var result=method.apply(this,arguments);if(result!==void 0)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion},"methodWrapper");addLengthGuard(methodWrapper,name,!1),ctx[name]=proxify(methodWrapper,name);}__name(addMethod,"addMethod");function overwriteProperty(ctx,name,getter){var _get=Object.getOwnPropertyDescriptor(ctx,name),_super=__name(function(){},"_super");_get&&typeof _get.get=="function"&&(_super=_get.get),Object.defineProperty(ctx,name,{get:__name(function overwritingPropertyGetter(){!isProxyEnabled()&&!flag(this,"lockSsfi")&&flag(this,"ssfi",overwritingPropertyGetter);var origLockSsfi=flag(this,"lockSsfi");flag(this,"lockSsfi",!0);var result=getter(_super).call(this);if(flag(this,"lockSsfi",origLockSsfi),result!==void 0)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion},"overwritingPropertyGetter"),configurable:!0});}__name(overwriteProperty,"overwriteProperty");function overwriteMethod(ctx,name,method){var _method=ctx[name],_super=__name(function(){throw new Error(name+" is not a function")},"_super");_method&&typeof _method=="function"&&(_super=_method);var overwritingMethodWrapper=__name(function(){flag(this,"lockSsfi")||flag(this,"ssfi",overwritingMethodWrapper);var origLockSsfi=flag(this,"lockSsfi");flag(this,"lockSsfi",!0);var result=method(_super).apply(this,arguments);if(flag(this,"lockSsfi",origLockSsfi),result!==void 0)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion},"overwritingMethodWrapper");addLengthGuard(overwritingMethodWrapper,name,!1),ctx[name]=proxify(overwritingMethodWrapper,name);}__name(overwriteMethod,"overwriteMethod");var canSetPrototype=typeof Object.setPrototypeOf=="function",testFn=__name(function(){},"testFn"),excludeNames=Object.getOwnPropertyNames(testFn).filter(function(name){var propDesc=Object.getOwnPropertyDescriptor(testFn,name);return typeof propDesc!="object"?!0:!propDesc.configurable}),call=Function.prototype.call,apply=Function.prototype.apply;function addChainableMethod(ctx,name,method,chainingBehavior){typeof chainingBehavior!="function"&&(chainingBehavior=__name(function(){},"chainingBehavior"));var chainableBehavior={method,chainingBehavior};ctx.__methods||(ctx.__methods={}),ctx.__methods[name]=chainableBehavior,Object.defineProperty(ctx,name,{get:__name(function(){chainableBehavior.chainingBehavior.call(this);var chainableMethodWrapper=__name(function(){flag(this,"lockSsfi")||flag(this,"ssfi",chainableMethodWrapper);var result=chainableBehavior.method.apply(this,arguments);if(result!==void 0)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion},"chainableMethodWrapper");if(addLengthGuard(chainableMethodWrapper,name,!0),canSetPrototype){var prototype=Object.create(this);prototype.call=call,prototype.apply=apply,Object.setPrototypeOf(chainableMethodWrapper,prototype);}else {var asserterNames=Object.getOwnPropertyNames(ctx);asserterNames.forEach(function(asserterName){if(excludeNames.indexOf(asserterName)===-1){var pd=Object.getOwnPropertyDescriptor(ctx,asserterName);Object.defineProperty(chainableMethodWrapper,asserterName,pd);}});}return transferFlags(this,chainableMethodWrapper),proxify(chainableMethodWrapper)},"chainableMethodGetter"),configurable:!0});}__name(addChainableMethod,"addChainableMethod");function overwriteChainableMethod(ctx,name,method,chainingBehavior){var chainableBehavior=ctx.__methods[name],_chainingBehavior=chainableBehavior.chainingBehavior;chainableBehavior.chainingBehavior=__name(function(){var result=chainingBehavior(_chainingBehavior).call(this);if(result!==void 0)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion},"overwritingChainableMethodGetter");var _method=chainableBehavior.method;chainableBehavior.method=__name(function(){var result=method(_method).apply(this,arguments);if(result!==void 0)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion},"overwritingChainableMethodWrapper");}__name(overwriteChainableMethod,"overwriteChainableMethod");function compareByInspect(a2,b){return inspect2(a2)<inspect2(b)?-1:1}__name(compareByInspect,"compareByInspect");function getOwnEnumerablePropertySymbols(obj){return typeof Object.getOwnPropertySymbols!="function"?[]:Object.getOwnPropertySymbols(obj).filter(function(sym){return Object.getOwnPropertyDescriptor(obj,sym).enumerable})}__name(getOwnEnumerablePropertySymbols,"getOwnEnumerablePropertySymbols");function getOwnEnumerableProperties(obj){return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj))}__name(getOwnEnumerableProperties,"getOwnEnumerableProperties");var isNaN22=Number.isNaN;function isObjectType(obj){var objectType=type(obj),objectTypes=["Array","Object","Function"];return objectTypes.indexOf(objectType)!==-1}__name(isObjectType,"isObjectType");function getOperator(obj,args){var operator=flag(obj,"operator"),negate=flag(obj,"negate"),expected=args[3],msg=negate?args[2]:args[1];if(operator)return operator;if(typeof msg=="function"&&(msg=msg()),msg=msg||"",!!msg&&!/\\shave\\s/.test(msg)){var isObject2=isObjectType(expected);return /\\snot\\s/.test(msg)?isObject2?"notDeepStrictEqual":"notStrictEqual":isObject2?"deepStrictEqual":"strictEqual"}}__name(getOperator,"getOperator");function getName(fn3){return fn3.name}__name(getName,"getName");function isRegExp2(obj){return Object.prototype.toString.call(obj)==="[object RegExp]"}__name(isRegExp2,"isRegExp");function isNumeric(obj){return ["Number","BigInt"].includes(type(obj))}__name(isNumeric,"isNumeric");var{flag:flag2}=utils_exports;["to","be","been","is","and","has","have","with","that","which","at","of","same","but","does","still","also"].forEach(function(chain){Assertion.addProperty(chain);});Assertion.addProperty("not",function(){flag2(this,"negate",!0);});Assertion.addProperty("deep",function(){flag2(this,"deep",!0);});Assertion.addProperty("nested",function(){flag2(this,"nested",!0);});Assertion.addProperty("own",function(){flag2(this,"own",!0);});Assertion.addProperty("ordered",function(){flag2(this,"ordered",!0);});Assertion.addProperty("any",function(){flag2(this,"any",!0),flag2(this,"all",!1);});Assertion.addProperty("all",function(){flag2(this,"all",!0),flag2(this,"any",!1);});var functionTypes={function:["function","asyncfunction","generatorfunction","asyncgeneratorfunction"],asyncfunction:["asyncfunction","asyncgeneratorfunction"],generatorfunction:["generatorfunction","asyncgeneratorfunction"],asyncgeneratorfunction:["asyncgeneratorfunction"]};function an(type32,msg){msg&&flag2(this,"message",msg),type32=type32.toLowerCase();var obj=flag2(this,"object"),article=~["a","e","i","o","u"].indexOf(type32.charAt(0))?"an ":"a ";let detectedType=type(obj).toLowerCase();functionTypes.function.includes(type32)?this.assert(functionTypes[type32].includes(detectedType),"expected #{this} to be "+article+type32,"expected #{this} not to be "+article+type32):this.assert(type32===detectedType,"expected #{this} to be "+article+type32,"expected #{this} not to be "+article+type32);}__name(an,"an");Assertion.addChainableMethod("an",an);Assertion.addChainableMethod("a",an);function SameValueZero(a2,b){return isNaN22(a2)&&isNaN22(b)||a2===b}__name(SameValueZero,"SameValueZero");function includeChainingBehavior(){flag2(this,"contains",!0);}__name(includeChainingBehavior,"includeChainingBehavior");function include(val,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),objType=type(obj).toLowerCase(),flagMsg=flag2(this,"message"),negate=flag2(this,"negate"),ssfi=flag2(this,"ssfi"),isDeep=flag2(this,"deep"),descriptor=isDeep?"deep ":"",isEql=isDeep?flag2(this,"eql"):SameValueZero;flagMsg=flagMsg?flagMsg+": ":"";var included=!1;switch(objType){case"string":included=obj.indexOf(val)!==-1;break;case"weakset":if(isDeep)throw new AssertionError(flagMsg+"unable to use .deep.include with WeakSet",void 0,ssfi);included=obj.has(val);break;case"map":obj.forEach(function(item){included=included||isEql(item,val);});break;case"set":isDeep?obj.forEach(function(item){included=included||isEql(item,val);}):included=obj.has(val);break;case"array":isDeep?included=obj.some(function(item){return isEql(item,val)}):included=obj.indexOf(val)!==-1;break;default:if(val!==Object(val))throw new AssertionError(flagMsg+"the given combination of arguments ("+objType+" and "+type(val).toLowerCase()+") is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a "+type(val).toLowerCase(),void 0,ssfi);var props=Object.keys(val),firstErr=null,numErrs=0;if(props.forEach(function(prop){var propAssertion=new Assertion(obj);if(transferFlags(this,propAssertion,!0),flag2(propAssertion,"lockSsfi",!0),!negate||props.length===1){propAssertion.property(prop,val[prop]);return}try{propAssertion.property(prop,val[prop]);}catch(err){if(!check_error_exports.compatibleConstructor(err,AssertionError))throw err;firstErr===null&&(firstErr=err),numErrs++;}},this),negate&&props.length>1&&numErrs===props.length)throw firstErr;return}this.assert(included,"expected #{this} to "+descriptor+"include "+inspect2(val),"expected #{this} to not "+descriptor+"include "+inspect2(val));}__name(include,"include");Assertion.addChainableMethod("include",include,includeChainingBehavior);Assertion.addChainableMethod("contain",include,includeChainingBehavior);Assertion.addChainableMethod("contains",include,includeChainingBehavior);Assertion.addChainableMethod("includes",include,includeChainingBehavior);Assertion.addProperty("ok",function(){this.assert(flag2(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy");});Assertion.addProperty("true",function(){this.assert(flag2(this,"object")===!0,"expected #{this} to be true","expected #{this} to be false",!flag2(this,"negate"));});Assertion.addProperty("numeric",function(){let object=flag2(this,"object");this.assert(["Number","BigInt"].includes(type(object)),"expected #{this} to be numeric","expected #{this} to not be numeric",!flag2(this,"negate"));});Assertion.addProperty("callable",function(){let val=flag2(this,"object"),ssfi=flag2(this,"ssfi"),message=flag2(this,"message"),msg=message?`${message}: `:"",negate=flag2(this,"negate"),assertionMessage=negate?`${msg}expected ${inspect2(val)} not to be a callable function`:`${msg}expected ${inspect2(val)} to be a callable function`,isCallable3=["Function","AsyncFunction","GeneratorFunction","AsyncGeneratorFunction"].includes(type(val));if(isCallable3&&negate||!isCallable3&&!negate)throw new AssertionError(assertionMessage,void 0,ssfi)});Assertion.addProperty("false",function(){this.assert(flag2(this,"object")===!1,"expected #{this} to be false","expected #{this} to be true",!!flag2(this,"negate"));});Assertion.addProperty("null",function(){this.assert(flag2(this,"object")===null,"expected #{this} to be null","expected #{this} not to be null");});Assertion.addProperty("undefined",function(){this.assert(flag2(this,"object")===void 0,"expected #{this} to be undefined","expected #{this} not to be undefined");});Assertion.addProperty("NaN",function(){this.assert(isNaN22(flag2(this,"object")),"expected #{this} to be NaN","expected #{this} not to be NaN");});function assertExist(){var val=flag2(this,"object");this.assert(val!=null,"expected #{this} to exist","expected #{this} to not exist");}__name(assertExist,"assertExist");Assertion.addProperty("exist",assertExist);Assertion.addProperty("exists",assertExist);Assertion.addProperty("empty",function(){var val=flag2(this,"object"),ssfi=flag2(this,"ssfi"),flagMsg=flag2(this,"message"),itemsCount;switch(flagMsg=flagMsg?flagMsg+": ":"",type(val).toLowerCase()){case"array":case"string":itemsCount=val.length;break;case"map":case"set":itemsCount=val.size;break;case"weakmap":case"weakset":throw new AssertionError(flagMsg+".empty was passed a weak collection",void 0,ssfi);case"function":var msg=flagMsg+".empty was passed a function "+getName(val);throw new AssertionError(msg.trim(),void 0,ssfi);default:if(val!==Object(val))throw new AssertionError(flagMsg+".empty was passed non-string primitive "+inspect2(val),void 0,ssfi);itemsCount=Object.keys(val).length;}this.assert(itemsCount===0,"expected #{this} to be empty","expected #{this} not to be empty");});function checkArguments(){var obj=flag2(this,"object"),type32=type(obj);this.assert(type32==="Arguments","expected #{this} to be arguments but got "+type32,"expected #{this} to not be arguments");}__name(checkArguments,"checkArguments");Assertion.addProperty("arguments",checkArguments);Assertion.addProperty("Arguments",checkArguments);function assertEqual(val,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object");if(flag2(this,"deep")){var prevLockSsfi=flag2(this,"lockSsfi");flag2(this,"lockSsfi",!0),this.eql(val),flag2(this,"lockSsfi",prevLockSsfi);}else this.assert(val===obj,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",val,this._obj,!0);}__name(assertEqual,"assertEqual");Assertion.addMethod("equal",assertEqual);Assertion.addMethod("equals",assertEqual);Assertion.addMethod("eq",assertEqual);function assertEql(obj,msg){msg&&flag2(this,"message",msg);var eql=flag2(this,"eql");this.assert(eql(obj,flag2(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",obj,this._obj,!0);}__name(assertEql,"assertEql");Assertion.addMethod("eql",assertEql);Assertion.addMethod("eqls",assertEql);function assertAbove(n,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),nType=type(n).toLowerCase();if(doLength&&objType!=="map"&&objType!=="set"&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),!doLength&&objType==="date"&&nType!=="date")throw new AssertionError(msgPrefix+"the argument to above must be a date",void 0,ssfi);if(!isNumeric(n)&&(doLength||isNumeric(obj)))throw new AssertionError(msgPrefix+"the argument to above must be a number",void 0,ssfi);if(!doLength&&objType!=="date"&&!isNumeric(obj)){var printObj=objType==="string"?"\'"+obj+"\'":obj;throw new AssertionError(msgPrefix+"expected "+printObj+" to be a number or a date",void 0,ssfi)}if(doLength){var descriptor="length",itemsCount;objType==="map"||objType==="set"?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount>n,"expected #{this} to have a "+descriptor+" above #{exp} but got #{act}","expected #{this} to not have a "+descriptor+" above #{exp}",n,itemsCount);}else this.assert(obj>n,"expected #{this} to be above #{exp}","expected #{this} to be at most #{exp}",n);}__name(assertAbove,"assertAbove");Assertion.addMethod("above",assertAbove);Assertion.addMethod("gt",assertAbove);Assertion.addMethod("greaterThan",assertAbove);function assertLeast(n,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),nType=type(n).toLowerCase(),errorMessage,shouldThrow=!0;if(doLength&&objType!=="map"&&objType!=="set"&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),!doLength&&objType==="date"&&nType!=="date")errorMessage=msgPrefix+"the argument to least must be a date";else if(!isNumeric(n)&&(doLength||isNumeric(obj)))errorMessage=msgPrefix+"the argument to least must be a number";else if(!doLength&&objType!=="date"&&!isNumeric(obj)){var printObj=objType==="string"?"\'"+obj+"\'":obj;errorMessage=msgPrefix+"expected "+printObj+" to be a number or a date";}else shouldThrow=!1;if(shouldThrow)throw new AssertionError(errorMessage,void 0,ssfi);if(doLength){var descriptor="length",itemsCount;objType==="map"||objType==="set"?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount>=n,"expected #{this} to have a "+descriptor+" at least #{exp} but got #{act}","expected #{this} to have a "+descriptor+" below #{exp}",n,itemsCount);}else this.assert(obj>=n,"expected #{this} to be at least #{exp}","expected #{this} to be below #{exp}",n);}__name(assertLeast,"assertLeast");Assertion.addMethod("least",assertLeast);Assertion.addMethod("gte",assertLeast);Assertion.addMethod("greaterThanOrEqual",assertLeast);function assertBelow(n,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),nType=type(n).toLowerCase(),errorMessage,shouldThrow=!0;if(doLength&&objType!=="map"&&objType!=="set"&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),!doLength&&objType==="date"&&nType!=="date")errorMessage=msgPrefix+"the argument to below must be a date";else if(!isNumeric(n)&&(doLength||isNumeric(obj)))errorMessage=msgPrefix+"the argument to below must be a number";else if(!doLength&&objType!=="date"&&!isNumeric(obj)){var printObj=objType==="string"?"\'"+obj+"\'":obj;errorMessage=msgPrefix+"expected "+printObj+" to be a number or a date";}else shouldThrow=!1;if(shouldThrow)throw new AssertionError(errorMessage,void 0,ssfi);if(doLength){var descriptor="length",itemsCount;objType==="map"||objType==="set"?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount<n,"expected #{this} to have a "+descriptor+" below #{exp} but got #{act}","expected #{this} to not have a "+descriptor+" below #{exp}",n,itemsCount);}else this.assert(obj<n,"expected #{this} to be below #{exp}","expected #{this} to be at least #{exp}",n);}__name(assertBelow,"assertBelow");Assertion.addMethod("below",assertBelow);Assertion.addMethod("lt",assertBelow);Assertion.addMethod("lessThan",assertBelow);function assertMost(n,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),nType=type(n).toLowerCase(),errorMessage,shouldThrow=!0;if(doLength&&objType!=="map"&&objType!=="set"&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),!doLength&&objType==="date"&&nType!=="date")errorMessage=msgPrefix+"the argument to most must be a date";else if(!isNumeric(n)&&(doLength||isNumeric(obj)))errorMessage=msgPrefix+"the argument to most must be a number";else if(!doLength&&objType!=="date"&&!isNumeric(obj)){var printObj=objType==="string"?"\'"+obj+"\'":obj;errorMessage=msgPrefix+"expected "+printObj+" to be a number or a date";}else shouldThrow=!1;if(shouldThrow)throw new AssertionError(errorMessage,void 0,ssfi);if(doLength){var descriptor="length",itemsCount;objType==="map"||objType==="set"?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount<=n,"expected #{this} to have a "+descriptor+" at most #{exp} but got #{act}","expected #{this} to have a "+descriptor+" above #{exp}",n,itemsCount);}else this.assert(obj<=n,"expected #{this} to be at most #{exp}","expected #{this} to be above #{exp}",n);}__name(assertMost,"assertMost");Assertion.addMethod("most",assertMost);Assertion.addMethod("lte",assertMost);Assertion.addMethod("lessThanOrEqual",assertMost);Assertion.addMethod("within",function(start,finish,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),startType=type(start).toLowerCase(),finishType=type(finish).toLowerCase(),errorMessage,shouldThrow=!0,range=startType==="date"&&finishType==="date"?start.toISOString()+".."+finish.toISOString():start+".."+finish;if(doLength&&objType!=="map"&&objType!=="set"&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),!doLength&&objType==="date"&&(startType!=="date"||finishType!=="date"))errorMessage=msgPrefix+"the arguments to within must be dates";else if((!isNumeric(start)||!isNumeric(finish))&&(doLength||isNumeric(obj)))errorMessage=msgPrefix+"the arguments to within must be numbers";else if(!doLength&&objType!=="date"&&!isNumeric(obj)){var printObj=objType==="string"?"\'"+obj+"\'":obj;errorMessage=msgPrefix+"expected "+printObj+" to be a number or a date";}else shouldThrow=!1;if(shouldThrow)throw new AssertionError(errorMessage,void 0,ssfi);if(doLength){var descriptor="length",itemsCount;objType==="map"||objType==="set"?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount>=start&&itemsCount<=finish,"expected #{this} to have a "+descriptor+" within "+range,"expected #{this} to not have a "+descriptor+" within "+range);}else this.assert(obj>=start&&obj<=finish,"expected #{this} to be within "+range,"expected #{this} to not be within "+range);});function assertInstanceOf(constructor,msg){msg&&flag2(this,"message",msg);var target=flag2(this,"object"),ssfi=flag2(this,"ssfi"),flagMsg=flag2(this,"message");try{var isInstanceOf=target instanceof constructor;}catch(err){throw err instanceof TypeError?(flagMsg=flagMsg?flagMsg+": ":"",new AssertionError(flagMsg+"The instanceof assertion needs a constructor but "+type(constructor)+" was given.",void 0,ssfi)):err}var name=getName(constructor);name==null&&(name="an unnamed constructor"),this.assert(isInstanceOf,"expected #{this} to be an instance of "+name,"expected #{this} to not be an instance of "+name);}__name(assertInstanceOf,"assertInstanceOf");Assertion.addMethod("instanceof",assertInstanceOf);Assertion.addMethod("instanceOf",assertInstanceOf);function assertProperty(name,val,msg){msg&&flag2(this,"message",msg);var isNested=flag2(this,"nested"),isOwn=flag2(this,"own"),flagMsg=flag2(this,"message"),obj=flag2(this,"object"),ssfi=flag2(this,"ssfi"),nameType=typeof name;if(flagMsg=flagMsg?flagMsg+": ":"",isNested){if(nameType!=="string")throw new AssertionError(flagMsg+"the argument to property must be a string when using nested syntax",void 0,ssfi)}else if(nameType!=="string"&&nameType!=="number"&&nameType!=="symbol")throw new AssertionError(flagMsg+"the argument to property must be a string, number, or symbol",void 0,ssfi);if(isNested&&isOwn)throw new AssertionError(flagMsg+\'The "nested" and "own" flags cannot be combined.\',void 0,ssfi);if(obj==null)throw new AssertionError(flagMsg+"Target cannot be null or undefined.",void 0,ssfi);var isDeep=flag2(this,"deep"),negate=flag2(this,"negate"),pathInfo=isNested?getPathInfo(obj,name):null,value=isNested?pathInfo.value:obj[name],isEql=isDeep?flag2(this,"eql"):(val1,val2)=>val1===val2,descriptor="";isDeep&&(descriptor+="deep "),isOwn&&(descriptor+="own "),isNested&&(descriptor+="nested "),descriptor+="property ";var hasProperty2;isOwn?hasProperty2=Object.prototype.hasOwnProperty.call(obj,name):isNested?hasProperty2=pathInfo.exists:hasProperty2=hasProperty(obj,name),(!negate||arguments.length===1)&&this.assert(hasProperty2,"expected #{this} to have "+descriptor+inspect2(name),"expected #{this} to not have "+descriptor+inspect2(name)),arguments.length>1&&this.assert(hasProperty2&&isEql(val,value),"expected #{this} to have "+descriptor+inspect2(name)+" of #{exp}, but got #{act}","expected #{this} to not have "+descriptor+inspect2(name)+" of #{act}",val,value),flag2(this,"object",value);}__name(assertProperty,"assertProperty");Assertion.addMethod("property",assertProperty);function assertOwnProperty(_name,_value,_msg){flag2(this,"own",!0),assertProperty.apply(this,arguments);}__name(assertOwnProperty,"assertOwnProperty");Assertion.addMethod("ownProperty",assertOwnProperty);Assertion.addMethod("haveOwnProperty",assertOwnProperty);function assertOwnPropertyDescriptor(name,descriptor,msg){typeof descriptor=="string"&&(msg=descriptor,descriptor=null),msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),actualDescriptor=Object.getOwnPropertyDescriptor(Object(obj),name),eql=flag2(this,"eql");actualDescriptor&&descriptor?this.assert(eql(descriptor,actualDescriptor),"expected the own property descriptor for "+inspect2(name)+" on #{this} to match "+inspect2(descriptor)+", got "+inspect2(actualDescriptor),"expected the own property descriptor for "+inspect2(name)+" on #{this} to not match "+inspect2(descriptor),descriptor,actualDescriptor,!0):this.assert(actualDescriptor,"expected #{this} to have an own property descriptor for "+inspect2(name),"expected #{this} to not have an own property descriptor for "+inspect2(name)),flag2(this,"object",actualDescriptor);}__name(assertOwnPropertyDescriptor,"assertOwnPropertyDescriptor");Assertion.addMethod("ownPropertyDescriptor",assertOwnPropertyDescriptor);Assertion.addMethod("haveOwnPropertyDescriptor",assertOwnPropertyDescriptor);function assertLengthChain(){flag2(this,"doLength",!0);}__name(assertLengthChain,"assertLengthChain");function assertLength(n,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),objType=type(obj).toLowerCase(),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi"),descriptor="length",itemsCount;switch(objType){case"map":case"set":descriptor="size",itemsCount=obj.size;break;default:new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),itemsCount=obj.length;}this.assert(itemsCount==n,"expected #{this} to have a "+descriptor+" of #{exp} but got #{act}","expected #{this} to not have a "+descriptor+" of #{act}",n,itemsCount);}__name(assertLength,"assertLength");Assertion.addChainableMethod("length",assertLength,assertLengthChain);Assertion.addChainableMethod("lengthOf",assertLength,assertLengthChain);function assertMatch(re,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object");this.assert(re.exec(obj),"expected #{this} to match "+re,"expected #{this} not to match "+re);}__name(assertMatch,"assertMatch");Assertion.addMethod("match",assertMatch);Assertion.addMethod("matches",assertMatch);Assertion.addMethod("string",function(str,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(obj,flagMsg,ssfi,!0).is.a("string"),this.assert(~obj.indexOf(str),"expected #{this} to contain "+inspect2(str),"expected #{this} to not contain "+inspect2(str));});function assertKeys(keys2){var obj=flag2(this,"object"),objType=type(obj),keysType=type(keys2),ssfi=flag2(this,"ssfi"),isDeep=flag2(this,"deep"),str,deepStr="",actual,ok=!0,flagMsg=flag2(this,"message");flagMsg=flagMsg?flagMsg+": ":"";var mixedArgsMsg=flagMsg+"when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments";if(objType==="Map"||objType==="Set")deepStr=isDeep?"deeply ":"",actual=[],obj.forEach(function(val,key){actual.push(key);}),keysType!=="Array"&&(keys2=Array.prototype.slice.call(arguments));else {switch(actual=getOwnEnumerableProperties(obj),keysType){case"Array":if(arguments.length>1)throw new AssertionError(mixedArgsMsg,void 0,ssfi);break;case"Object":if(arguments.length>1)throw new AssertionError(mixedArgsMsg,void 0,ssfi);keys2=Object.keys(keys2);break;default:keys2=Array.prototype.slice.call(arguments);}keys2=keys2.map(function(val){return typeof val=="symbol"?val:String(val)});}if(!keys2.length)throw new AssertionError(flagMsg+"keys required",void 0,ssfi);var len=keys2.length,any=flag2(this,"any"),all=flag2(this,"all"),expected=keys2,isEql=isDeep?flag2(this,"eql"):(val1,val2)=>val1===val2;if(!any&&!all&&(all=!0),any&&(ok=expected.some(function(expectedKey){return actual.some(function(actualKey){return isEql(expectedKey,actualKey)})})),all&&(ok=expected.every(function(expectedKey){return actual.some(function(actualKey){return isEql(expectedKey,actualKey)})}),flag2(this,"contains")||(ok=ok&&keys2.length==actual.length)),len>1){keys2=keys2.map(function(key){return inspect2(key)});var last=keys2.pop();all&&(str=keys2.join(", ")+", and "+last),any&&(str=keys2.join(", ")+", or "+last);}else str=inspect2(keys2[0]);str=(len>1?"keys ":"key ")+str,str=(flag2(this,"contains")?"contain ":"have ")+str,this.assert(ok,"expected #{this} to "+deepStr+str,"expected #{this} to not "+deepStr+str,expected.slice(0).sort(compareByInspect),actual.sort(compareByInspect),!0);}__name(assertKeys,"assertKeys");Assertion.addMethod("keys",assertKeys);Assertion.addMethod("key",assertKeys);function assertThrows(errorLike,errMsgMatcher,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),ssfi=flag2(this,"ssfi"),flagMsg=flag2(this,"message"),negate=flag2(this,"negate")||!1;new Assertion(obj,flagMsg,ssfi,!0).is.a("function"),(isRegExp2(errorLike)||typeof errorLike=="string")&&(errMsgMatcher=errorLike,errorLike=null);let caughtErr,errorWasThrown=!1;try{obj();}catch(err){errorWasThrown=!0,caughtErr=err;}var everyArgIsUndefined=errorLike===void 0&&errMsgMatcher===void 0,everyArgIsDefined=!!(errorLike&&errMsgMatcher),errorLikeFail=!1,errMsgMatcherFail=!1;if(everyArgIsUndefined||!everyArgIsUndefined&&!negate){var errorLikeString="an error";errorLike instanceof Error?errorLikeString="#{exp}":errorLike&&(errorLikeString=check_error_exports.getConstructorName(errorLike));let actual=caughtErr;if(caughtErr instanceof Error)actual=caughtErr.toString();else if(typeof caughtErr=="string")actual=caughtErr;else if(caughtErr&&(typeof caughtErr=="object"||typeof caughtErr=="function"))try{actual=check_error_exports.getConstructorName(caughtErr);}catch{}this.assert(errorWasThrown,"expected #{this} to throw "+errorLikeString,"expected #{this} to not throw an error but #{act} was thrown",errorLike&&errorLike.toString(),actual);}if(errorLike&&caughtErr){if(errorLike instanceof Error){var isCompatibleInstance=check_error_exports.compatibleInstance(caughtErr,errorLike);isCompatibleInstance===negate&&(everyArgIsDefined&&negate?errorLikeFail=!0:this.assert(negate,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(caughtErr&&!negate?" but #{act} was thrown":""),errorLike.toString(),caughtErr.toString()));}var isCompatibleConstructor=check_error_exports.compatibleConstructor(caughtErr,errorLike);isCompatibleConstructor===negate&&(everyArgIsDefined&&negate?errorLikeFail=!0:this.assert(negate,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(caughtErr?" but #{act} was thrown":""),errorLike instanceof Error?errorLike.toString():errorLike&&check_error_exports.getConstructorName(errorLike),caughtErr instanceof Error?caughtErr.toString():caughtErr&&check_error_exports.getConstructorName(caughtErr)));}if(caughtErr&&errMsgMatcher!==void 0&&errMsgMatcher!==null){var placeholder="including";isRegExp2(errMsgMatcher)&&(placeholder="matching");var isCompatibleMessage=check_error_exports.compatibleMessage(caughtErr,errMsgMatcher);isCompatibleMessage===negate&&(everyArgIsDefined&&negate?errMsgMatcherFail=!0:this.assert(negate,"expected #{this} to throw error "+placeholder+" #{exp} but got #{act}","expected #{this} to throw error not "+placeholder+" #{exp}",errMsgMatcher,check_error_exports.getMessage(caughtErr)));}errorLikeFail&&errMsgMatcherFail&&this.assert(negate,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(caughtErr?" but #{act} was thrown":""),errorLike instanceof Error?errorLike.toString():errorLike&&check_error_exports.getConstructorName(errorLike),caughtErr instanceof Error?caughtErr.toString():caughtErr&&check_error_exports.getConstructorName(caughtErr)),flag2(this,"object",caughtErr);}__name(assertThrows,"assertThrows");Assertion.addMethod("throw",assertThrows);Assertion.addMethod("throws",assertThrows);Assertion.addMethod("Throw",assertThrows);function respondTo(method,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),itself=flag2(this,"itself"),context=typeof obj=="function"&&!itself?obj.prototype[method]:obj[method];this.assert(typeof context=="function","expected #{this} to respond to "+inspect2(method),"expected #{this} to not respond to "+inspect2(method));}__name(respondTo,"respondTo");Assertion.addMethod("respondTo",respondTo);Assertion.addMethod("respondsTo",respondTo);Assertion.addProperty("itself",function(){flag2(this,"itself",!0);});function satisfy(matcher,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),result=matcher(obj);this.assert(result,"expected #{this} to satisfy "+objDisplay(matcher),"expected #{this} to not satisfy"+objDisplay(matcher),!flag2(this,"negate"),result);}__name(satisfy,"satisfy");Assertion.addMethod("satisfy",satisfy);Assertion.addMethod("satisfies",satisfy);function closeTo(expected,delta,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(obj,flagMsg,ssfi,!0).is.numeric;let message="A `delta` value is required for `closeTo`";if(delta==null)throw new AssertionError(flagMsg?`${flagMsg}: ${message}`:message,void 0,ssfi);if(new Assertion(delta,flagMsg,ssfi,!0).is.numeric,message="A `expected` value is required for `closeTo`",expected==null)throw new AssertionError(flagMsg?`${flagMsg}: ${message}`:message,void 0,ssfi);new Assertion(expected,flagMsg,ssfi,!0).is.numeric;let abs=__name(x2=>x2<0n?-x2:x2,"abs"),strip=__name(number=>parseFloat(parseFloat(number).toPrecision(12)),"strip");this.assert(strip(abs(obj-expected))<=delta,"expected #{this} to be close to "+expected+" +/- "+delta,"expected #{this} not to be close to "+expected+" +/- "+delta);}__name(closeTo,"closeTo");Assertion.addMethod("closeTo",closeTo);Assertion.addMethod("approximately",closeTo);function isSubsetOf(_subset,_superset,cmp,contains,ordered){let superset=Array.from(_superset),subset=Array.from(_subset);if(!contains){if(subset.length!==superset.length)return !1;superset=superset.slice();}return subset.every(function(elem,idx){if(ordered)return cmp?cmp(elem,superset[idx]):elem===superset[idx];if(!cmp){var matchIdx=superset.indexOf(elem);return matchIdx===-1?!1:(contains||superset.splice(matchIdx,1),!0)}return superset.some(function(elem2,matchIdx2){return cmp(elem,elem2)?(contains||superset.splice(matchIdx2,1),!0):!1})})}__name(isSubsetOf,"isSubsetOf");Assertion.addMethod("members",function(subset,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(obj,flagMsg,ssfi,!0).to.be.iterable,new Assertion(subset,flagMsg,ssfi,!0).to.be.iterable;var contains=flag2(this,"contains"),ordered=flag2(this,"ordered"),subject,failMsg,failNegateMsg;contains?(subject=ordered?"an ordered superset":"a superset",failMsg="expected #{this} to be "+subject+" of #{exp}",failNegateMsg="expected #{this} to not be "+subject+" of #{exp}"):(subject=ordered?"ordered members":"members",failMsg="expected #{this} to have the same "+subject+" as #{exp}",failNegateMsg="expected #{this} to not have the same "+subject+" as #{exp}");var cmp=flag2(this,"deep")?flag2(this,"eql"):void 0;this.assert(isSubsetOf(subset,obj,cmp,contains,ordered),failMsg,failNegateMsg,subset,obj,!0);});Assertion.addProperty("iterable",function(msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object");this.assert(obj!=null&&obj[Symbol.iterator],"expected #{this} to be an iterable","expected #{this} to not be an iterable",obj);});function oneOf(list,msg){msg&&flag2(this,"message",msg);var expected=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi"),contains=flag2(this,"contains"),isDeep=flag2(this,"deep"),eql=flag2(this,"eql");new Assertion(list,flagMsg,ssfi,!0).to.be.an("array"),contains?this.assert(list.some(function(possibility){return expected.indexOf(possibility)>-1}),"expected #{this} to contain one of #{exp}","expected #{this} to not contain one of #{exp}",list,expected):isDeep?this.assert(list.some(function(possibility){return eql(expected,possibility)}),"expected #{this} to deeply equal one of #{exp}","expected #{this} to deeply equal one of #{exp}",list,expected):this.assert(list.indexOf(expected)>-1,"expected #{this} to be one of #{exp}","expected #{this} to not be one of #{exp}",list,expected);}__name(oneOf,"oneOf");Assertion.addMethod("oneOf",oneOf);function assertChanges(subject,prop,msg){msg&&flag2(this,"message",msg);var fn3=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(fn3,flagMsg,ssfi,!0).is.a("function");var initial;prop?(new Assertion(subject,flagMsg,ssfi,!0).to.have.property(prop),initial=subject[prop]):(new Assertion(subject,flagMsg,ssfi,!0).is.a("function"),initial=subject()),fn3();var final=prop==null?subject():subject[prop],msgObj=prop==null?initial:"."+prop;flag2(this,"deltaMsgObj",msgObj),flag2(this,"initialDeltaValue",initial),flag2(this,"finalDeltaValue",final),flag2(this,"deltaBehavior","change"),flag2(this,"realDelta",final!==initial),this.assert(initial!==final,"expected "+msgObj+" to change","expected "+msgObj+" to not change");}__name(assertChanges,"assertChanges");Assertion.addMethod("change",assertChanges);Assertion.addMethod("changes",assertChanges);function assertIncreases(subject,prop,msg){msg&&flag2(this,"message",msg);var fn3=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(fn3,flagMsg,ssfi,!0).is.a("function");var initial;prop?(new Assertion(subject,flagMsg,ssfi,!0).to.have.property(prop),initial=subject[prop]):(new Assertion(subject,flagMsg,ssfi,!0).is.a("function"),initial=subject()),new Assertion(initial,flagMsg,ssfi,!0).is.a("number"),fn3();var final=prop==null?subject():subject[prop],msgObj=prop==null?initial:"."+prop;flag2(this,"deltaMsgObj",msgObj),flag2(this,"initialDeltaValue",initial),flag2(this,"finalDeltaValue",final),flag2(this,"deltaBehavior","increase"),flag2(this,"realDelta",final-initial),this.assert(final-initial>0,"expected "+msgObj+" to increase","expected "+msgObj+" to not increase");}__name(assertIncreases,"assertIncreases");Assertion.addMethod("increase",assertIncreases);Assertion.addMethod("increases",assertIncreases);function assertDecreases(subject,prop,msg){msg&&flag2(this,"message",msg);var fn3=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(fn3,flagMsg,ssfi,!0).is.a("function");var initial;prop?(new Assertion(subject,flagMsg,ssfi,!0).to.have.property(prop),initial=subject[prop]):(new Assertion(subject,flagMsg,ssfi,!0).is.a("function"),initial=subject()),new Assertion(initial,flagMsg,ssfi,!0).is.a("number"),fn3();var final=prop==null?subject():subject[prop],msgObj=prop==null?initial:"."+prop;flag2(this,"deltaMsgObj",msgObj),flag2(this,"initialDeltaValue",initial),flag2(this,"finalDeltaValue",final),flag2(this,"deltaBehavior","decrease"),flag2(this,"realDelta",initial-final),this.assert(final-initial<0,"expected "+msgObj+" to decrease","expected "+msgObj+" to not decrease");}__name(assertDecreases,"assertDecreases");Assertion.addMethod("decrease",assertDecreases);Assertion.addMethod("decreases",assertDecreases);function assertDelta(delta,msg){msg&&flag2(this,"message",msg);var msgObj=flag2(this,"deltaMsgObj"),initial=flag2(this,"initialDeltaValue"),final=flag2(this,"finalDeltaValue"),behavior2=flag2(this,"deltaBehavior"),realDelta=flag2(this,"realDelta"),expression;behavior2==="change"?expression=Math.abs(final-initial)===Math.abs(delta):expression=realDelta===Math.abs(delta),this.assert(expression,"expected "+msgObj+" to "+behavior2+" by "+delta,"expected "+msgObj+" to not "+behavior2+" by "+delta);}__name(assertDelta,"assertDelta");Assertion.addMethod("by",assertDelta);Assertion.addProperty("extensible",function(){var obj=flag2(this,"object"),isExtensible=obj===Object(obj)&&Object.isExtensible(obj);this.assert(isExtensible,"expected #{this} to be extensible","expected #{this} to not be extensible");});Assertion.addProperty("sealed",function(){var obj=flag2(this,"object"),isSealed=obj===Object(obj)?Object.isSealed(obj):!0;this.assert(isSealed,"expected #{this} to be sealed","expected #{this} to not be sealed");});Assertion.addProperty("frozen",function(){var obj=flag2(this,"object"),isFrozen=obj===Object(obj)?Object.isFrozen(obj):!0;this.assert(isFrozen,"expected #{this} to be frozen","expected #{this} to not be frozen");});Assertion.addProperty("finite",function(_msg){var obj=flag2(this,"object");this.assert(typeof obj=="number"&&isFinite(obj),"expected #{this} to be a finite number","expected #{this} to not be a finite number");});function compareSubset(expected,actual){return expected===actual?!0:typeof actual!=typeof expected?!1:typeof expected!="object"||expected===null?expected===actual:actual?Array.isArray(expected)?Array.isArray(actual)?expected.every(function(exp){return actual.some(function(act){return compareSubset(exp,act)})}):!1:expected instanceof Date?actual instanceof Date?expected.getTime()===actual.getTime():!1:Object.keys(expected).every(function(key){var expectedValue=expected[key],actualValue=actual[key];return typeof expectedValue=="object"&&expectedValue!==null&&actualValue!==null?compareSubset(expectedValue,actualValue):typeof expectedValue=="function"?expectedValue(actualValue):actualValue===expectedValue}):!1}__name(compareSubset,"compareSubset");Assertion.addMethod("containSubset",function(expected){let actual=flag(this,"object"),showDiff=config.showDiff;this.assert(compareSubset(expected,actual),"expected #{act} to contain subset #{exp}","expected #{act} to not contain subset #{exp}",expected,actual,showDiff);});function expect(val,message){return new Assertion(val,message)}__name(expect,"expect");expect.fail=function(actual,expected,message,operator){throw arguments.length<2&&(message=actual,actual=void 0),message=message||"expect.fail()",new AssertionError(message,{actual,expected,operator},expect.fail)};var should_exports={};__export2(should_exports,{Should:()=>Should,should:()=>should});function loadShould(){function shouldGetter(){return this instanceof String||this instanceof Number||this instanceof Boolean||typeof Symbol=="function"&&this instanceof Symbol||typeof BigInt=="function"&&this instanceof BigInt?new Assertion(this.valueOf(),null,shouldGetter):new Assertion(this,null,shouldGetter)}__name(shouldGetter,"shouldGetter");function shouldSetter(value){Object.defineProperty(this,"should",{value,enumerable:!0,configurable:!0,writable:!0});}__name(shouldSetter,"shouldSetter"),Object.defineProperty(Object.prototype,"should",{set:shouldSetter,get:shouldGetter,configurable:!0});var should2={};return should2.fail=function(actual,expected,message,operator){throw arguments.length<2&&(message=actual,actual=void 0),message=message||"should.fail()",new AssertionError(message,{actual,expected,operator},should2.fail)},should2.equal=function(actual,expected,message){new Assertion(actual,message).to.equal(expected);},should2.Throw=function(fn3,errt,errs,msg){new Assertion(fn3,msg).to.Throw(errt,errs);},should2.exist=function(val,msg){new Assertion(val,msg).to.exist;},should2.not={},should2.not.equal=function(actual,expected,msg){new Assertion(actual,msg).to.not.equal(expected);},should2.not.Throw=function(fn3,errt,errs,msg){new Assertion(fn3,msg).to.not.Throw(errt,errs);},should2.not.exist=function(val,msg){new Assertion(val,msg).to.not.exist;},should2.throw=should2.Throw,should2.not.throw=should2.not.Throw,should2}__name(loadShould,"loadShould");var should=loadShould,Should=loadShould;function assert(express,errmsg){var test22=new Assertion(null,null,assert,!0);test22.assert(express,errmsg,"[ negation message unavailable ]");}__name(assert,"assert");assert.fail=function(actual,expected,message,operator){throw arguments.length<2&&(message=actual,actual=void 0),message=message||"assert.fail()",new AssertionError(message,{actual,expected,operator},assert.fail)};assert.isOk=function(val,msg){new Assertion(val,msg,assert.isOk,!0).is.ok;};assert.isNotOk=function(val,msg){new Assertion(val,msg,assert.isNotOk,!0).is.not.ok;};assert.equal=function(act,exp,msg){var test22=new Assertion(act,msg,assert.equal,!0);test22.assert(exp==flag(test22,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",exp,act,!0);};assert.notEqual=function(act,exp,msg){var test22=new Assertion(act,msg,assert.notEqual,!0);test22.assert(exp!=flag(test22,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",exp,act,!0);};assert.strictEqual=function(act,exp,msg){new Assertion(act,msg,assert.strictEqual,!0).to.equal(exp);};assert.notStrictEqual=function(act,exp,msg){new Assertion(act,msg,assert.notStrictEqual,!0).to.not.equal(exp);};assert.deepEqual=assert.deepStrictEqual=function(act,exp,msg){new Assertion(act,msg,assert.deepEqual,!0).to.eql(exp);};assert.notDeepEqual=function(act,exp,msg){new Assertion(act,msg,assert.notDeepEqual,!0).to.not.eql(exp);};assert.isAbove=function(val,abv,msg){new Assertion(val,msg,assert.isAbove,!0).to.be.above(abv);};assert.isAtLeast=function(val,atlst,msg){new Assertion(val,msg,assert.isAtLeast,!0).to.be.least(atlst);};assert.isBelow=function(val,blw,msg){new Assertion(val,msg,assert.isBelow,!0).to.be.below(blw);};assert.isAtMost=function(val,atmst,msg){new Assertion(val,msg,assert.isAtMost,!0).to.be.most(atmst);};assert.isTrue=function(val,msg){new Assertion(val,msg,assert.isTrue,!0).is.true;};assert.isNotTrue=function(val,msg){new Assertion(val,msg,assert.isNotTrue,!0).to.not.equal(!0);};assert.isFalse=function(val,msg){new Assertion(val,msg,assert.isFalse,!0).is.false;};assert.isNotFalse=function(val,msg){new Assertion(val,msg,assert.isNotFalse,!0).to.not.equal(!1);};assert.isNull=function(val,msg){new Assertion(val,msg,assert.isNull,!0).to.equal(null);};assert.isNotNull=function(val,msg){new Assertion(val,msg,assert.isNotNull,!0).to.not.equal(null);};assert.isNaN=function(val,msg){new Assertion(val,msg,assert.isNaN,!0).to.be.NaN;};assert.isNotNaN=function(value,message){new Assertion(value,message,assert.isNotNaN,!0).not.to.be.NaN;};assert.exists=function(val,msg){new Assertion(val,msg,assert.exists,!0).to.exist;};assert.notExists=function(val,msg){new Assertion(val,msg,assert.notExists,!0).to.not.exist;};assert.isUndefined=function(val,msg){new Assertion(val,msg,assert.isUndefined,!0).to.equal(void 0);};assert.isDefined=function(val,msg){new Assertion(val,msg,assert.isDefined,!0).to.not.equal(void 0);};assert.isCallable=function(value,message){new Assertion(value,message,assert.isCallable,!0).is.callable;};assert.isNotCallable=function(value,message){new Assertion(value,message,assert.isNotCallable,!0).is.not.callable;};assert.isObject=function(val,msg){new Assertion(val,msg,assert.isObject,!0).to.be.a("object");};assert.isNotObject=function(val,msg){new Assertion(val,msg,assert.isNotObject,!0).to.not.be.a("object");};assert.isArray=function(val,msg){new Assertion(val,msg,assert.isArray,!0).to.be.an("array");};assert.isNotArray=function(val,msg){new Assertion(val,msg,assert.isNotArray,!0).to.not.be.an("array");};assert.isString=function(val,msg){new Assertion(val,msg,assert.isString,!0).to.be.a("string");};assert.isNotString=function(val,msg){new Assertion(val,msg,assert.isNotString,!0).to.not.be.a("string");};assert.isNumber=function(val,msg){new Assertion(val,msg,assert.isNumber,!0).to.be.a("number");};assert.isNotNumber=function(val,msg){new Assertion(val,msg,assert.isNotNumber,!0).to.not.be.a("number");};assert.isNumeric=function(val,msg){new Assertion(val,msg,assert.isNumeric,!0).is.numeric;};assert.isNotNumeric=function(val,msg){new Assertion(val,msg,assert.isNotNumeric,!0).is.not.numeric;};assert.isFinite=function(val,msg){new Assertion(val,msg,assert.isFinite,!0).to.be.finite;};assert.isBoolean=function(val,msg){new Assertion(val,msg,assert.isBoolean,!0).to.be.a("boolean");};assert.isNotBoolean=function(val,msg){new Assertion(val,msg,assert.isNotBoolean,!0).to.not.be.a("boolean");};assert.typeOf=function(val,type32,msg){new Assertion(val,msg,assert.typeOf,!0).to.be.a(type32);};assert.notTypeOf=function(value,type32,message){new Assertion(value,message,assert.notTypeOf,!0).to.not.be.a(type32);};assert.instanceOf=function(val,type32,msg){new Assertion(val,msg,assert.instanceOf,!0).to.be.instanceOf(type32);};assert.notInstanceOf=function(val,type32,msg){new Assertion(val,msg,assert.notInstanceOf,!0).to.not.be.instanceOf(type32);};assert.include=function(exp,inc,msg){new Assertion(exp,msg,assert.include,!0).include(inc);};assert.notInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notInclude,!0).not.include(inc);};assert.deepInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.deepInclude,!0).deep.include(inc);};assert.notDeepInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notDeepInclude,!0).not.deep.include(inc);};assert.nestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.nestedInclude,!0).nested.include(inc);};assert.notNestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notNestedInclude,!0).not.nested.include(inc);};assert.deepNestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.deepNestedInclude,!0).deep.nested.include(inc);};assert.notDeepNestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notDeepNestedInclude,!0).not.deep.nested.include(inc);};assert.ownInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.ownInclude,!0).own.include(inc);};assert.notOwnInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notOwnInclude,!0).not.own.include(inc);};assert.deepOwnInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.deepOwnInclude,!0).deep.own.include(inc);};assert.notDeepOwnInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notDeepOwnInclude,!0).not.deep.own.include(inc);};assert.match=function(exp,re,msg){new Assertion(exp,msg,assert.match,!0).to.match(re);};assert.notMatch=function(exp,re,msg){new Assertion(exp,msg,assert.notMatch,!0).to.not.match(re);};assert.property=function(obj,prop,msg){new Assertion(obj,msg,assert.property,!0).to.have.property(prop);};assert.notProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.notProperty,!0).to.not.have.property(prop);};assert.propertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.propertyVal,!0).to.have.property(prop,val);};assert.notPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notPropertyVal,!0).to.not.have.property(prop,val);};assert.deepPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.deepPropertyVal,!0).to.have.deep.property(prop,val);};assert.notDeepPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notDeepPropertyVal,!0).to.not.have.deep.property(prop,val);};assert.ownProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.ownProperty,!0).to.have.own.property(prop);};assert.notOwnProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.notOwnProperty,!0).to.not.have.own.property(prop);};assert.ownPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.ownPropertyVal,!0).to.have.own.property(prop,value);};assert.notOwnPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.notOwnPropertyVal,!0).to.not.have.own.property(prop,value);};assert.deepOwnPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.deepOwnPropertyVal,!0).to.have.deep.own.property(prop,value);};assert.notDeepOwnPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.notDeepOwnPropertyVal,!0).to.not.have.deep.own.property(prop,value);};assert.nestedProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.nestedProperty,!0).to.have.nested.property(prop);};assert.notNestedProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.notNestedProperty,!0).to.not.have.nested.property(prop);};assert.nestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.nestedPropertyVal,!0).to.have.nested.property(prop,val);};assert.notNestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notNestedPropertyVal,!0).to.not.have.nested.property(prop,val);};assert.deepNestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.deepNestedPropertyVal,!0).to.have.deep.nested.property(prop,val);};assert.notDeepNestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notDeepNestedPropertyVal,!0).to.not.have.deep.nested.property(prop,val);};assert.lengthOf=function(exp,len,msg){new Assertion(exp,msg,assert.lengthOf,!0).to.have.lengthOf(len);};assert.hasAnyKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.hasAnyKeys,!0).to.have.any.keys(keys2);};assert.hasAllKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.hasAllKeys,!0).to.have.all.keys(keys2);};assert.containsAllKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.containsAllKeys,!0).to.contain.all.keys(keys2);};assert.doesNotHaveAnyKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.doesNotHaveAnyKeys,!0).to.not.have.any.keys(keys2);};assert.doesNotHaveAllKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.doesNotHaveAllKeys,!0).to.not.have.all.keys(keys2);};assert.hasAnyDeepKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.hasAnyDeepKeys,!0).to.have.any.deep.keys(keys2);};assert.hasAllDeepKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.hasAllDeepKeys,!0).to.have.all.deep.keys(keys2);};assert.containsAllDeepKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.containsAllDeepKeys,!0).to.contain.all.deep.keys(keys2);};assert.doesNotHaveAnyDeepKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.doesNotHaveAnyDeepKeys,!0).to.not.have.any.deep.keys(keys2);};assert.doesNotHaveAllDeepKeys=function(obj,keys2,msg){new Assertion(obj,msg,assert.doesNotHaveAllDeepKeys,!0).to.not.have.all.deep.keys(keys2);};assert.throws=function(fn3,errorLike,errMsgMatcher,msg){(typeof errorLike=="string"||errorLike instanceof RegExp)&&(errMsgMatcher=errorLike,errorLike=null);var assertErr=new Assertion(fn3,msg,assert.throws,!0).to.throw(errorLike,errMsgMatcher);return flag(assertErr,"object")};assert.doesNotThrow=function(fn3,errorLike,errMsgMatcher,message){(typeof errorLike=="string"||errorLike instanceof RegExp)&&(errMsgMatcher=errorLike,errorLike=null),new Assertion(fn3,message,assert.doesNotThrow,!0).to.not.throw(errorLike,errMsgMatcher);};assert.operator=function(val,operator,val2,msg){var ok;switch(operator){case"==":ok=val==val2;break;case"===":ok=val===val2;break;case">":ok=val>val2;break;case">=":ok=val>=val2;break;case"<":ok=val<val2;break;case"<=":ok=val<=val2;break;case"!=":ok=val!=val2;break;case"!==":ok=val!==val2;break;default:throw msg=msg&&msg+": ",new AssertionError(msg+\'Invalid operator "\'+operator+\'"\',void 0,assert.operator)}var test22=new Assertion(ok,msg,assert.operator,!0);test22.assert(flag(test22,"object")===!0,"expected "+inspect2(val)+" to be "+operator+" "+inspect2(val2),"expected "+inspect2(val)+" to not be "+operator+" "+inspect2(val2));};assert.closeTo=function(act,exp,delta,msg){new Assertion(act,msg,assert.closeTo,!0).to.be.closeTo(exp,delta);};assert.approximately=function(act,exp,delta,msg){new Assertion(act,msg,assert.approximately,!0).to.be.approximately(exp,delta);};assert.sameMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameMembers,!0).to.have.same.members(set2);};assert.notSameMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameMembers,!0).to.not.have.same.members(set2);};assert.sameDeepMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameDeepMembers,!0).to.have.same.deep.members(set2);};assert.notSameDeepMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameDeepMembers,!0).to.not.have.same.deep.members(set2);};assert.sameOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameOrderedMembers,!0).to.have.same.ordered.members(set2);};assert.notSameOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameOrderedMembers,!0).to.not.have.same.ordered.members(set2);};assert.sameDeepOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameDeepOrderedMembers,!0).to.have.same.deep.ordered.members(set2);};assert.notSameDeepOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameDeepOrderedMembers,!0).to.not.have.same.deep.ordered.members(set2);};assert.includeMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeMembers,!0).to.include.members(subset);};assert.notIncludeMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeMembers,!0).to.not.include.members(subset);};assert.includeDeepMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeDeepMembers,!0).to.include.deep.members(subset);};assert.notIncludeDeepMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeDeepMembers,!0).to.not.include.deep.members(subset);};assert.includeOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeOrderedMembers,!0).to.include.ordered.members(subset);};assert.notIncludeOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeOrderedMembers,!0).to.not.include.ordered.members(subset);};assert.includeDeepOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeDeepOrderedMembers,!0).to.include.deep.ordered.members(subset);};assert.notIncludeDeepOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeDeepOrderedMembers,!0).to.not.include.deep.ordered.members(subset);};assert.oneOf=function(inList,list,msg){new Assertion(inList,msg,assert.oneOf,!0).to.be.oneOf(list);};assert.isIterable=function(obj,msg){if(obj==null||!obj[Symbol.iterator])throw msg=msg?`${msg} expected ${inspect2(obj)} to be an iterable`:`expected ${inspect2(obj)} to be an iterable`,new AssertionError(msg,void 0,assert.isIterable)};assert.changes=function(fn3,obj,prop,msg){arguments.length===3&&typeof obj=="function"&&(msg=prop,prop=null),new Assertion(fn3,msg,assert.changes,!0).to.change(obj,prop);};assert.changesBy=function(fn3,obj,prop,delta,msg){if(arguments.length===4&&typeof obj=="function"){var tmpMsg=delta;delta=prop,msg=tmpMsg;}else arguments.length===3&&(delta=prop,prop=null);new Assertion(fn3,msg,assert.changesBy,!0).to.change(obj,prop).by(delta);};assert.doesNotChange=function(fn3,obj,prop,msg){return arguments.length===3&&typeof obj=="function"&&(msg=prop,prop=null),new Assertion(fn3,msg,assert.doesNotChange,!0).to.not.change(obj,prop)};assert.changesButNotBy=function(fn3,obj,prop,delta,msg){if(arguments.length===4&&typeof obj=="function"){var tmpMsg=delta;delta=prop,msg=tmpMsg;}else arguments.length===3&&(delta=prop,prop=null);new Assertion(fn3,msg,assert.changesButNotBy,!0).to.change(obj,prop).but.not.by(delta);};assert.increases=function(fn3,obj,prop,msg){return arguments.length===3&&typeof obj=="function"&&(msg=prop,prop=null),new Assertion(fn3,msg,assert.increases,!0).to.increase(obj,prop)};assert.increasesBy=function(fn3,obj,prop,delta,msg){if(arguments.length===4&&typeof obj=="function"){var tmpMsg=delta;delta=prop,msg=tmpMsg;}else arguments.length===3&&(delta=prop,prop=null);new Assertion(fn3,msg,assert.increasesBy,!0).to.increase(obj,prop).by(delta);};assert.doesNotIncrease=function(fn3,obj,prop,msg){return arguments.length===3&&typeof obj=="function"&&(msg=prop,prop=null),new Assertion(fn3,msg,assert.doesNotIncrease,!0).to.not.increase(obj,prop)};assert.increasesButNotBy=function(fn3,obj,prop,delta,msg){if(arguments.length===4&&typeof obj=="function"){var tmpMsg=delta;delta=prop,msg=tmpMsg;}else arguments.length===3&&(delta=prop,prop=null);new Assertion(fn3,msg,assert.increasesButNotBy,!0).to.increase(obj,prop).but.not.by(delta);};assert.decreases=function(fn3,obj,prop,msg){return arguments.length===3&&typeof obj=="function"&&(msg=prop,prop=null),new Assertion(fn3,msg,assert.decreases,!0).to.decrease(obj,prop)};assert.decreasesBy=function(fn3,obj,prop,delta,msg){if(arguments.length===4&&typeof obj=="function"){var tmpMsg=delta;delta=prop,msg=tmpMsg;}else arguments.length===3&&(delta=prop,prop=null);new Assertion(fn3,msg,assert.decreasesBy,!0).to.decrease(obj,prop).by(delta);};assert.doesNotDecrease=function(fn3,obj,prop,msg){return arguments.length===3&&typeof obj=="function"&&(msg=prop,prop=null),new Assertion(fn3,msg,assert.doesNotDecrease,!0).to.not.decrease(obj,prop)};assert.doesNotDecreaseBy=function(fn3,obj,prop,delta,msg){if(arguments.length===4&&typeof obj=="function"){var tmpMsg=delta;delta=prop,msg=tmpMsg;}else arguments.length===3&&(delta=prop,prop=null);return new Assertion(fn3,msg,assert.doesNotDecreaseBy,!0).to.not.decrease(obj,prop).by(delta)};assert.decreasesButNotBy=function(fn3,obj,prop,delta,msg){if(arguments.length===4&&typeof obj=="function"){var tmpMsg=delta;delta=prop,msg=tmpMsg;}else arguments.length===3&&(delta=prop,prop=null);new Assertion(fn3,msg,assert.decreasesButNotBy,!0).to.decrease(obj,prop).but.not.by(delta);};assert.ifError=function(val){if(val)throw val};assert.isExtensible=function(obj,msg){new Assertion(obj,msg,assert.isExtensible,!0).to.be.extensible;};assert.isNotExtensible=function(obj,msg){new Assertion(obj,msg,assert.isNotExtensible,!0).to.not.be.extensible;};assert.isSealed=function(obj,msg){new Assertion(obj,msg,assert.isSealed,!0).to.be.sealed;};assert.isNotSealed=function(obj,msg){new Assertion(obj,msg,assert.isNotSealed,!0).to.not.be.sealed;};assert.isFrozen=function(obj,msg){new Assertion(obj,msg,assert.isFrozen,!0).to.be.frozen;};assert.isNotFrozen=function(obj,msg){new Assertion(obj,msg,assert.isNotFrozen,!0).to.not.be.frozen;};assert.isEmpty=function(val,msg){new Assertion(val,msg,assert.isEmpty,!0).to.be.empty;};assert.isNotEmpty=function(val,msg){new Assertion(val,msg,assert.isNotEmpty,!0).to.not.be.empty;};assert.containsSubset=function(val,exp,msg){new Assertion(val,msg).to.containSubset(exp);};assert.doesNotContainSubset=function(val,exp,msg){new Assertion(val,msg).to.not.containSubset(exp);};var aliases=[["isOk","ok"],["isNotOk","notOk"],["throws","throw"],["throws","Throw"],["isExtensible","extensible"],["isNotExtensible","notExtensible"],["isSealed","sealed"],["isNotSealed","notSealed"],["isFrozen","frozen"],["isNotFrozen","notFrozen"],["isEmpty","empty"],["isNotEmpty","notEmpty"],["isCallable","isFunction"],["isNotCallable","isNotFunction"],["containsSubset","containSubset"]];for(let[name,as]of aliases)assert[as]=assert[name];var used=[];function use(fn3){let exports={use,AssertionError,util:utils_exports,config,expect,assert,Assertion,...should_exports};return ~used.indexOf(fn3)||(fn3(exports,utils_exports),used.push(fn3)),exports}__name(use,"use");var matchers_exports={};__export(matchers_exports,{toBeChecked:()=>toBeChecked,toBeDisabled:()=>toBeDisabled,toBeEmpty:()=>toBeEmpty,toBeEmptyDOMElement:()=>toBeEmptyDOMElement,toBeEnabled:()=>toBeEnabled,toBeInTheDOM:()=>toBeInTheDOM,toBeInTheDocument:()=>toBeInTheDocument,toBeInvalid:()=>toBeInvalid,toBePartiallyChecked:()=>toBePartiallyChecked,toBeRequired:()=>toBeRequired,toBeValid:()=>toBeValid,toBeVisible:()=>toBeVisible,toContainElement:()=>toContainElement,toContainHTML:()=>toContainHTML,toHaveAccessibleDescription:()=>toHaveAccessibleDescription,toHaveAccessibleErrorMessage:()=>toHaveAccessibleErrorMessage,toHaveAccessibleName:()=>toHaveAccessibleName,toHaveAttribute:()=>toHaveAttribute,toHaveClass:()=>toHaveClass,toHaveDescription:()=>toHaveDescription,toHaveDisplayValue:()=>toHaveDisplayValue,toHaveErrorMessage:()=>toHaveErrorMessage,toHaveFocus:()=>toHaveFocus,toHaveFormValues:()=>toHaveFormValues,toHaveRole:()=>toHaveRole,toHaveStyle:()=>toHaveStyle,toHaveTextContent:()=>toHaveTextContent,toHaveValue:()=>toHaveValue});var import_redent=__toESM(require_redent(),1);function $parcel$defineInteropFlag(a2){Object.defineProperty(a2,"__esModule",{value:!0,configurable:!0});}function $parcel$export(e,n,v,s){Object.defineProperty(e,n,{get:v,set:s,enumerable:!0,configurable:!0});}var $009ddb00d3ec72b8$exports={};$parcel$defineInteropFlag($009ddb00d3ec72b8$exports);$parcel$export($009ddb00d3ec72b8$exports,"default",()=>$009ddb00d3ec72b8$export$2e2bcd8739ae039);var $009ddb00d3ec72b8$export$2e2bcd8739ae039=class extends Error{constructor(filename,msg,lineno,column,css){super(filename+":"+lineno+":"+column+": "+msg),this.reason=msg,this.filename=filename,this.line=lineno,this.column=column,this.source=css;}},$0865a9fb4cc365fe$exports={};$parcel$defineInteropFlag($0865a9fb4cc365fe$exports);$parcel$export($0865a9fb4cc365fe$exports,"default",()=>$0865a9fb4cc365fe$export$2e2bcd8739ae039);var $0865a9fb4cc365fe$export$2e2bcd8739ae039=class{constructor(start,end,source){this.start=start,this.end=end,this.source=source;}},$b2e137848b48cf4f$exports={};$parcel$export($b2e137848b48cf4f$exports,"CssTypes",()=>$b2e137848b48cf4f$export$9be5dd6e61d5d73a);var $b2e137848b48cf4f$export$9be5dd6e61d5d73a;(function(CssTypes){CssTypes.stylesheet="stylesheet",CssTypes.rule="rule",CssTypes.declaration="declaration",CssTypes.comment="comment",CssTypes.container="container",CssTypes.charset="charset",CssTypes.document="document",CssTypes.customMedia="custom-media",CssTypes.fontFace="font-face",CssTypes.host="host",CssTypes.import="import",CssTypes.keyframes="keyframes",CssTypes.keyframe="keyframe",CssTypes.layer="layer",CssTypes.media="media",CssTypes.namespace="namespace",CssTypes.page="page",CssTypes.startingStyle="starting-style",CssTypes.supports="supports";})($b2e137848b48cf4f$export$9be5dd6e61d5d73a||($b2e137848b48cf4f$export$9be5dd6e61d5d73a={}));var $d708735ed1303b43$var$commentre=/\\/\\*[^]*?(?:\\*\\/|$)/g,$d708735ed1303b43$export$98e6a39c04603d36=(css,options)=>{options=options||{};let lineno=1,column=1;function updatePosition(str){let lines=str.match(/\\n/g);lines&&(lineno+=lines.length);let i=str.lastIndexOf(`\n`);column=~i?str.length-i:column+str.length;}function position(){let start={line:lineno,column};return function(node){return node.position=new $0865a9fb4cc365fe$export$2e2bcd8739ae039(start,{line:lineno,column},options?.source||""),whitespace(),node}}let errorsList=[];function error(msg){let err=new $009ddb00d3ec72b8$export$2e2bcd8739ae039(options?.source||"",msg,lineno,column,css);if(options?.silent)errorsList.push(err);else throw err}function stylesheet(){let rulesList=rules();return {type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.stylesheet,stylesheet:{source:options?.source,rules:rulesList,parsingErrors:errorsList}}}function open(){return match(/^{\\s*/)}function close(){return match(/^}/)}function rules(){let node,rules2=[];for(whitespace(),comments(rules2);css.length&&css.charAt(0)!=="}"&&(node=atrule()||rule());)node&&(rules2.push(node),comments(rules2));return rules2}function match(re){let m3=re.exec(css);if(!m3)return;let str=m3[0];return updatePosition(str),css=css.slice(str.length),m3}function whitespace(){match(/^\\s*/);}function comments(rules2){let c;for(rules2=rules2||[];c=comment();)c&&rules2.push(c);return rules2}function comment(){let pos=position();if(css.charAt(0)!=="/"||css.charAt(1)!=="*")return;let m3=match(/^\\/\\*[^]*?\\*\\//);return m3?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.comment,comment:m3[0].slice(2,-2)}):error("End of comment missing")}function findClosingParenthese(str,start,depth){let ptr=start+1,found=!1,closeParentheses=str.indexOf(")",ptr);for(;!found&&closeParentheses!==-1;){let nextParentheses=str.indexOf("(",ptr);nextParentheses!==-1&&nextParentheses<closeParentheses?(ptr=findClosingParenthese(str,nextParentheses+1)+1,closeParentheses=str.indexOf(")",ptr)):found=!0;}return found&&closeParentheses!==-1?closeParentheses:-1}function selector(){let m3=match(/^([^{]+)/);if(!m3)return;let res=$d708735ed1303b43$var$trim(m3[0]).replace($d708735ed1303b43$var$commentre,"");if(res.indexOf(",")===-1)return [res];let ptr=0,startParentheses=res.indexOf("(",ptr);for(;startParentheses!==-1;){let closeParentheses=findClosingParenthese(res,startParentheses);if(closeParentheses===-1)break;ptr=closeParentheses+1,res=res.substring(0,startParentheses)+res.substring(startParentheses,closeParentheses).replace(/,/g,"\\u200C")+res.substring(closeParentheses),startParentheses=res.indexOf("(",ptr);}return res=res.replace(/("|\')(?:\\\\\\1|.)*?\\1/g,m4=>m4.replace(/,/g,"\\u200C")),res.split(",").map(s=>$d708735ed1303b43$var$trim(s.replace(/\\u200C/g,",")))}function declaration(){let pos=position(),propMatch=match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);if(!propMatch)return;let propValue=$d708735ed1303b43$var$trim(propMatch[0]);if(!match(/^:\\s*/))return error("property missing \':\'");let val=match(/^((?:\'(?:\\\\\'|.)*?\'|"(?:\\\\"|.)*?"|\\([^)]*?\\)|[^};])+)/),ret=pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.declaration,property:propValue.replace($d708735ed1303b43$var$commentre,""),value:val?$d708735ed1303b43$var$trim(val[0]).replace($d708735ed1303b43$var$commentre,""):""});return match(/^[;\\s]*/),ret}function declarations(){let decls=[];if(!open())return error("missing \'{\'");comments(decls);let decl;for(;decl=declaration();)decl&&(decls.push(decl),comments(decls));return close()?decls:error("missing \'}\'")}function keyframe(){let m3,vals=[],pos=position();for(;m3=match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/);)vals.push(m3[1]),match(/^,\\s*/);if(vals.length)return pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.keyframe,values:vals,declarations:declarations()||[]})}function atkeyframes(){let pos=position(),m1=match(/^@([-\\w]+)?keyframes\\s*/);if(!m1)return;let vendor=m1[1],m22=match(/^([-\\w]+)\\s*/);if(!m22)return error("@keyframes missing name");let name=m22[1];if(!open())return error("@keyframes missing \'{\'");let frame,frames=comments();for(;frame=keyframe();)frames.push(frame),frames=frames.concat(comments());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.keyframes,name,vendor,keyframes:frames}):error("@keyframes missing \'}\'")}function atsupports(){let pos=position(),m3=match(/^@supports *([^{]+)/);if(!m3)return;let supports=$d708735ed1303b43$var$trim(m3[1]);if(!open())return error("@supports missing \'{\'");let style=comments().concat(rules());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.supports,supports,rules:style}):error("@supports missing \'}\'")}function athost(){let pos=position();if(!match(/^@host\\s*/))return;if(!open())return error("@host missing \'{\'");let style=comments().concat(rules());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.host,rules:style}):error("@host missing \'}\'")}function atcontainer(){let pos=position(),m3=match(/^@container *([^{]+)/);if(!m3)return;let container=$d708735ed1303b43$var$trim(m3[1]);if(!open())return error("@container missing \'{\'");let style=comments().concat(rules());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.container,container,rules:style}):error("@container missing \'}\'")}function atlayer(){let pos=position(),m3=match(/^@layer *([^{;@]+)/);if(!m3)return;let layer=$d708735ed1303b43$var$trim(m3[1]);if(!open())return match(/^[;\\s]*/),pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.layer,layer});let style=comments().concat(rules());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.layer,layer,rules:style}):error("@layer missing \'}\'")}function atmedia(){let pos=position(),m3=match(/^@media *([^{]+)/);if(!m3)return;let media=$d708735ed1303b43$var$trim(m3[1]);if(!open())return error("@media missing \'{\'");let style=comments().concat(rules());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.media,media,rules:style}):error("@media missing \'}\'")}function atcustommedia(){let pos=position(),m3=match(/^@custom-media\\s+(--\\S+)\\s*([^{;\\s][^{;]*);/);if(m3)return pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.customMedia,name:$d708735ed1303b43$var$trim(m3[1]),media:$d708735ed1303b43$var$trim(m3[2])})}function atpage(){let pos=position();if(!match(/^@page */))return;let sel=selector()||[];if(!open())return error("@page missing \'{\'");let decls=comments(),decl;for(;decl=declaration();)decls.push(decl),decls=decls.concat(comments());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.page,selectors:sel,declarations:decls}):error("@page missing \'}\'")}function atdocument(){let pos=position(),m3=match(/^@([-\\w]+)?document *([^{]+)/);if(!m3)return;let vendor=$d708735ed1303b43$var$trim(m3[1]),doc=$d708735ed1303b43$var$trim(m3[2]);if(!open())return error("@document missing \'{\'");let style=comments().concat(rules());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.document,document:doc,vendor,rules:style}):error("@document missing \'}\'")}function atfontface(){let pos=position();if(!match(/^@font-face\\s*/))return;if(!open())return error("@font-face missing \'{\'");let decls=comments(),decl;for(;decl=declaration();)decls.push(decl),decls=decls.concat(comments());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.fontFace,declarations:decls}):error("@font-face missing \'}\'")}function atstartingstyle(){let pos=position();if(!match(/^@starting-style\\s*/))return;if(!open())return error("@starting-style missing \'{\'");let style=comments().concat(rules());return close()?pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.startingStyle,rules:style}):error("@starting-style missing \'}\'")}let atimport=_compileAtrule("import"),atcharset=_compileAtrule("charset"),atnamespace=_compileAtrule("namespace");function _compileAtrule(name){let re=new RegExp("^@"+name+`\\\\s*((?::?[^;\'"]|"(?:\\\\\\\\"|[^"])*?"|\'(?:\\\\\\\\\'|[^\'])*?\')+)(?:;|$)`);return function(){let pos=position(),m3=match(re);if(!m3)return;let ret={type:name};return ret[name]=m3[1].trim(),pos(ret)}}function atrule(){if(css[0]==="@")return atkeyframes()||atmedia()||atcustommedia()||atsupports()||atimport()||atcharset()||atnamespace()||atdocument()||atpage()||athost()||atfontface()||atcontainer()||atstartingstyle()||atlayer()}function rule(){let pos=position(),sel=selector();return sel?(comments(),pos({type:$b2e137848b48cf4f$export$9be5dd6e61d5d73a.rule,selectors:sel,declarations:declarations()||[]})):error("selector missing")}return $d708735ed1303b43$var$addParent(stylesheet())};function $d708735ed1303b43$var$trim(str){return str?str.trim():""}function $d708735ed1303b43$var$addParent(obj,parent){let isNode=obj&&typeof obj.type=="string",childParent=isNode?obj:parent;for(let k2 in obj){let value=obj[k2];Array.isArray(value)?value.forEach(v=>{$d708735ed1303b43$var$addParent(v,childParent);}):value&&typeof value=="object"&&$d708735ed1303b43$var$addParent(value,childParent);}return isNode&&Object.defineProperty(obj,"parent",{configurable:!0,writable:!0,enumerable:!1,value:parent||null}),obj}var $d708735ed1303b43$export$2e2bcd8739ae039=$d708735ed1303b43$export$98e6a39c04603d36;var $149c1bd638913645$export$98e6a39c04603d36=$d708735ed1303b43$export$2e2bcd8739ae039;var toStr=Object.prototype.toString;function isCallable(fn3){return typeof fn3=="function"||toStr.call(fn3)==="[object Function]"}function toInteger(value){var number=Number(value);return isNaN(number)?0:number===0||!isFinite(number)?number:(number>0?1:-1)*Math.floor(Math.abs(number))}var maxSafeInteger=Math.pow(2,53)-1;function toLength(value){var len=toInteger(value);return Math.min(Math.max(len,0),maxSafeInteger)}function arrayFrom(arrayLike,mapFn){var C3=Array,items=Object(arrayLike);if(arrayLike==null)throw new TypeError("Array.from requires an array-like object - not null or undefined");if(typeof mapFn<"u"&&!isCallable(mapFn))throw new TypeError("Array.from: when provided, the second argument must be a function");for(var len=toLength(items.length),A=isCallable(C3)?Object(new C3(len)):new Array(len),k2=0,kValue;k2<len;)kValue=items[k2],mapFn?A[k2]=mapFn(kValue,k2):A[k2]=kValue,k2+=1;return A.length=len,A}function _typeof(o){"@babel/helpers - typeof";return _typeof=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(o2){return typeof o2}:function(o2){return o2&&typeof Symbol=="function"&&o2.constructor===Symbol&&o2!==Symbol.prototype?"symbol":typeof o2},_typeof(o)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,_toPropertyKey(descriptor.key),descriptor);}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}function _defineProperty(obj,key,value){return key=_toPropertyKey(key),key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey(arg){var key=_toPrimitive(arg,"string");return _typeof(key)==="symbol"?key:String(key)}function _toPrimitive(input2,hint){if(_typeof(input2)!=="object"||input2===null)return input2;var prim=input2[Symbol.toPrimitive];if(prim!==void 0){var res=prim.call(input2,hint||"default");if(_typeof(res)!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return (hint==="string"?String:Number)(input2)}var SetLike=function(){function SetLike3(){var items=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[];_classCallCheck(this,SetLike3),_defineProperty(this,"items",void 0),this.items=items;}return _createClass(SetLike3,[{key:"add",value:function(value){return this.has(value)===!1&&this.items.push(value),this}},{key:"clear",value:function(){this.items=[];}},{key:"delete",value:function(value){var previousLength=this.items.length;return this.items=this.items.filter(function(item){return item!==value}),previousLength!==this.items.length}},{key:"forEach",value:function(callbackfn){var _this=this;this.items.forEach(function(item){callbackfn(item,item,_this);});}},{key:"has",value:function(value){return this.items.indexOf(value)!==-1}},{key:"size",get:function(){return this.items.length}}]),SetLike3}(),SetLike_default=typeof Set>"u"?Set:SetLike;function getLocalName(element){var _element$localName;return (_element$localName=element.localName)!==null&&_element$localName!==void 0?_element$localName:element.tagName.toLowerCase()}var localNameToRoleMappings={article:"article",aside:"complementary",button:"button",datalist:"listbox",dd:"definition",details:"group",dialog:"dialog",dt:"term",fieldset:"group",figure:"figure",form:"form",footer:"contentinfo",h1:"heading",h2:"heading",h3:"heading",h4:"heading",h5:"heading",h6:"heading",header:"banner",hr:"separator",html:"document",legend:"legend",li:"listitem",math:"math",main:"main",menu:"list",nav:"navigation",ol:"list",optgroup:"group",option:"option",output:"status",progress:"progressbar",section:"region",summary:"button",table:"table",tbody:"rowgroup",textarea:"textbox",tfoot:"rowgroup",td:"cell",th:"columnheader",thead:"rowgroup",tr:"row",ul:"list"},prohibitedAttributes={caption:new Set(["aria-label","aria-labelledby"]),code:new Set(["aria-label","aria-labelledby"]),deletion:new Set(["aria-label","aria-labelledby"]),emphasis:new Set(["aria-label","aria-labelledby"]),generic:new Set(["aria-label","aria-labelledby","aria-roledescription"]),insertion:new Set(["aria-label","aria-labelledby"]),none:new Set(["aria-label","aria-labelledby"]),paragraph:new Set(["aria-label","aria-labelledby"]),presentation:new Set(["aria-label","aria-labelledby"]),strong:new Set(["aria-label","aria-labelledby"]),subscript:new Set(["aria-label","aria-labelledby"]),superscript:new Set(["aria-label","aria-labelledby"])};function hasGlobalAriaAttributes(element,role){return ["aria-atomic","aria-busy","aria-controls","aria-current","aria-description","aria-describedby","aria-details","aria-dropeffect","aria-flowto","aria-grabbed","aria-hidden","aria-keyshortcuts","aria-label","aria-labelledby","aria-live","aria-owns","aria-relevant","aria-roledescription"].some(function(attributeName){var _prohibitedAttributes;return element.hasAttribute(attributeName)&&!((_prohibitedAttributes=prohibitedAttributes[role])!==null&&_prohibitedAttributes!==void 0&&_prohibitedAttributes.has(attributeName))})}function ignorePresentationalRole(element,implicitRole){return hasGlobalAriaAttributes(element,implicitRole)}function getRole(element){var explicitRole=getExplicitRole(element);if(explicitRole===null||presentationRoles.indexOf(explicitRole)!==-1){var implicitRole=getImplicitRole(element);if(presentationRoles.indexOf(explicitRole||"")===-1||ignorePresentationalRole(element,implicitRole||""))return implicitRole}return explicitRole}function getImplicitRole(element){var mappedByTag=localNameToRoleMappings[getLocalName(element)];if(mappedByTag!==void 0)return mappedByTag;switch(getLocalName(element)){case"a":case"area":case"link":if(element.hasAttribute("href"))return "link";break;case"img":return element.getAttribute("alt")===""&&!ignorePresentationalRole(element,"img")?"presentation":"img";case"input":{var _ref=element,type5=_ref.type;switch(type5){case"button":case"image":case"reset":case"submit":return "button";case"checkbox":case"radio":return type5;case"range":return "slider";case"email":case"tel":case"text":case"url":return element.hasAttribute("list")?"combobox":"textbox";case"search":return element.hasAttribute("list")?"combobox":"searchbox";case"number":return "spinbutton";default:return null}}case"select":return element.hasAttribute("multiple")||element.size>1?"listbox":"combobox"}return null}function getExplicitRole(element){var role=element.getAttribute("role");if(role!==null){var explicitRole=role.trim().split(" ")[0];if(explicitRole.length>0)return explicitRole}return null}var presentationRoles=["presentation","none"];function isElement(node){return node!==null&&node.nodeType===node.ELEMENT_NODE}function isHTMLTableCaptionElement(node){return isElement(node)&&getLocalName(node)==="caption"}function isHTMLInputElement(node){return isElement(node)&&getLocalName(node)==="input"}function isHTMLOptGroupElement(node){return isElement(node)&&getLocalName(node)==="optgroup"}function isHTMLSelectElement(node){return isElement(node)&&getLocalName(node)==="select"}function isHTMLTableElement(node){return isElement(node)&&getLocalName(node)==="table"}function isHTMLTextAreaElement(node){return isElement(node)&&getLocalName(node)==="textarea"}function safeWindow(node){var _ref=node.ownerDocument===null?node:node.ownerDocument,defaultView=_ref.defaultView;if(defaultView===null)throw new TypeError("no window available");return defaultView}function isHTMLFieldSetElement(node){return isElement(node)&&getLocalName(node)==="fieldset"}function isHTMLLegendElement(node){return isElement(node)&&getLocalName(node)==="legend"}function isHTMLSlotElement(node){return isElement(node)&&getLocalName(node)==="slot"}function isSVGElement(node){return isElement(node)&&node.ownerSVGElement!==void 0}function isSVGSVGElement(node){return isElement(node)&&getLocalName(node)==="svg"}function isSVGTitleElement(node){return isSVGElement(node)&&getLocalName(node)==="title"}function queryIdRefs(node,attributeName){if(isElement(node)&&node.hasAttribute(attributeName)){var ids=node.getAttribute(attributeName).split(" "),root=node.getRootNode?node.getRootNode():node.ownerDocument;return ids.map(function(id){return root.getElementById(id)}).filter(function(element){return element!==null})}return []}function hasAnyConcreteRoles(node,roles3){return isElement(node)?roles3.indexOf(getRole(node))!==-1:!1}function asFlatString(s){return s.trim().replace(/\\s\\s+/g," ")}function isHidden(node,getComputedStyleImplementation){if(!isElement(node))return !1;if(node.hasAttribute("hidden")||node.getAttribute("aria-hidden")==="true")return !0;var style=getComputedStyleImplementation(node);return style.getPropertyValue("display")==="none"||style.getPropertyValue("visibility")==="hidden"}function isControl(node){return hasAnyConcreteRoles(node,["button","combobox","listbox","textbox"])||hasAbstractRole(node,"range")}function hasAbstractRole(node,role){if(!isElement(node))return !1;switch(role){case"range":return hasAnyConcreteRoles(node,["meter","progressbar","scrollbar","slider","spinbutton"]);default:throw new TypeError("No knowledge about abstract role \'".concat(role,"\'. This is likely a bug :("))}}function querySelectorAllSubtree(element,selectors){var elements=arrayFrom(element.querySelectorAll(selectors));return queryIdRefs(element,"aria-owns").forEach(function(root){elements.push.apply(elements,arrayFrom(root.querySelectorAll(selectors)));}),elements}function querySelectedOptions(listbox){return isHTMLSelectElement(listbox)?listbox.selectedOptions||querySelectorAllSubtree(listbox,"[selected]"):querySelectorAllSubtree(listbox,\'[aria-selected="true"]\')}function isMarkedPresentational(node){return hasAnyConcreteRoles(node,presentationRoles)}function isNativeHostLanguageTextAlternativeElement(node){return isHTMLTableCaptionElement(node)}function allowsNameFromContent(node){return hasAnyConcreteRoles(node,["button","cell","checkbox","columnheader","gridcell","heading","label","legend","link","menuitem","menuitemcheckbox","menuitemradio","option","radio","row","rowheader","switch","tab","tooltip","treeitem"])}function isDescendantOfNativeHostLanguageTextAlternativeElement(node){return !1}function getValueOfTextbox(element){return isHTMLInputElement(element)||isHTMLTextAreaElement(element)?element.value:element.textContent||""}function getTextualContent(declaration){var content=declaration.getPropertyValue("content");return /^["\'].*["\']$/.test(content)?content.slice(1,-1):""}function isLabelableElement(element){var localName=getLocalName(element);return localName==="button"||localName==="input"&&element.getAttribute("type")!=="hidden"||localName==="meter"||localName==="output"||localName==="progress"||localName==="select"||localName==="textarea"}function findLabelableElement(element){if(isLabelableElement(element))return element;var labelableElement=null;return element.childNodes.forEach(function(childNode){if(labelableElement===null&&isElement(childNode)){var descendantLabelableElement=findLabelableElement(childNode);descendantLabelableElement!==null&&(labelableElement=descendantLabelableElement);}}),labelableElement}function getControlOfLabel(label){if(label.control!==void 0)return label.control;var htmlFor=label.getAttribute("for");return htmlFor!==null?label.ownerDocument.getElementById(htmlFor):findLabelableElement(label)}function getLabels(element){var labelsProperty=element.labels;if(labelsProperty===null)return labelsProperty;if(labelsProperty!==void 0)return arrayFrom(labelsProperty);if(!isLabelableElement(element))return null;var document2=element.ownerDocument;return arrayFrom(document2.querySelectorAll("label")).filter(function(label){return getControlOfLabel(label)===element})}function getSlotContents(slot){var assignedNodes=slot.assignedNodes();return assignedNodes.length===0?arrayFrom(slot.childNodes):assignedNodes}function computeTextAlternative(root){var options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},consultedNodes=new SetLike_default,window2=safeWindow(root),_options$compute=options.compute,compute=_options$compute===void 0?"name":_options$compute,_options$computedStyl=options.computedStyleSupportsPseudoElements,computedStyleSupportsPseudoElements=_options$computedStyl===void 0?options.getComputedStyle!==void 0:_options$computedStyl,_options$getComputedS=options.getComputedStyle,getComputedStyle=_options$getComputedS===void 0?window2.getComputedStyle.bind(window2):_options$getComputedS,_options$hidden=options.hidden,hidden=_options$hidden===void 0?!1:_options$hidden;function computeMiscTextAlternative(node,context){var accumulatedText="";if(isElement(node)&&computedStyleSupportsPseudoElements){var pseudoBefore=getComputedStyle(node,"::before"),beforeContent=getTextualContent(pseudoBefore);accumulatedText="".concat(beforeContent," ").concat(accumulatedText);}var childNodes=isHTMLSlotElement(node)?getSlotContents(node):arrayFrom(node.childNodes).concat(queryIdRefs(node,"aria-owns"));if(childNodes.forEach(function(child){var result=computeTextAlternative3(child,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!1,recursion:!0}),display2=isElement(child)?getComputedStyle(child).getPropertyValue("display"):"inline",separator=display2!=="inline"?" ":"";accumulatedText+="".concat(separator).concat(result).concat(separator);}),isElement(node)&&computedStyleSupportsPseudoElements){var pseudoAfter=getComputedStyle(node,"::after"),afterContent=getTextualContent(pseudoAfter);accumulatedText="".concat(accumulatedText," ").concat(afterContent);}return accumulatedText.trim()}function useAttribute(element,attributeName){var attribute=element.getAttributeNode(attributeName);return attribute!==null&&!consultedNodes.has(attribute)&&attribute.value.trim()!==""?(consultedNodes.add(attribute),attribute.value):null}function computeTooltipAttributeValue(node){return isElement(node)?useAttribute(node,"title"):null}function computeElementTextAlternative(node){if(!isElement(node))return null;if(isHTMLFieldSetElement(node)){consultedNodes.add(node);for(var children=arrayFrom(node.childNodes),i=0;i<children.length;i+=1){var child=children[i];if(isHTMLLegendElement(child))return computeTextAlternative3(child,{isEmbeddedInLabel:!1,isReferenced:!1,recursion:!1})}}else if(isHTMLTableElement(node)){consultedNodes.add(node);for(var _children=arrayFrom(node.childNodes),_i=0;_i<_children.length;_i+=1){var _child=_children[_i];if(isHTMLTableCaptionElement(_child))return computeTextAlternative3(_child,{isEmbeddedInLabel:!1,isReferenced:!1,recursion:!1})}}else if(isSVGSVGElement(node)){consultedNodes.add(node);for(var _children2=arrayFrom(node.childNodes),_i2=0;_i2<_children2.length;_i2+=1){var _child2=_children2[_i2];if(isSVGTitleElement(_child2))return _child2.textContent}return null}else if(getLocalName(node)==="img"||getLocalName(node)==="area"){var nameFromAlt=useAttribute(node,"alt");if(nameFromAlt!==null)return nameFromAlt}else if(isHTMLOptGroupElement(node)){var nameFromLabel=useAttribute(node,"label");if(nameFromLabel!==null)return nameFromLabel}if(isHTMLInputElement(node)&&(node.type==="button"||node.type==="submit"||node.type==="reset")){var nameFromValue=useAttribute(node,"value");if(nameFromValue!==null)return nameFromValue;if(node.type==="submit")return "Submit";if(node.type==="reset")return "Reset"}var labels=getLabels(node);if(labels!==null&&labels.length!==0)return consultedNodes.add(node),arrayFrom(labels).map(function(element){return computeTextAlternative3(element,{isEmbeddedInLabel:!0,isReferenced:!1,recursion:!0})}).filter(function(label){return label.length>0}).join(" ");if(isHTMLInputElement(node)&&node.type==="image"){var _nameFromAlt=useAttribute(node,"alt");if(_nameFromAlt!==null)return _nameFromAlt;var nameFromTitle=useAttribute(node,"title");return nameFromTitle!==null?nameFromTitle:"Submit Query"}if(hasAnyConcreteRoles(node,["button"])){var nameFromSubTree=computeMiscTextAlternative(node,{isEmbeddedInLabel:!1,isReferenced:!1});if(nameFromSubTree!=="")return nameFromSubTree}return null}function computeTextAlternative3(current,context){if(consultedNodes.has(current))return "";if(!hidden&&isHidden(current,getComputedStyle)&&!context.isReferenced)return consultedNodes.add(current),"";var labelAttributeNode=isElement(current)?current.getAttributeNode("aria-labelledby"):null,labelElements=labelAttributeNode!==null&&!consultedNodes.has(labelAttributeNode)?queryIdRefs(current,"aria-labelledby"):[];if(compute==="name"&&!context.isReferenced&&labelElements.length>0)return consultedNodes.add(labelAttributeNode),labelElements.map(function(element){return computeTextAlternative3(element,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!0,recursion:!1})}).join(" ");var skipToStep2E=context.recursion&&isControl(current)&&compute==="name";if(!skipToStep2E){var ariaLabel=(isElement(current)&&current.getAttribute("aria-label")||"").trim();if(ariaLabel!==""&&compute==="name")return consultedNodes.add(current),ariaLabel;if(!isMarkedPresentational(current)){var elementTextAlternative=computeElementTextAlternative(current);if(elementTextAlternative!==null)return consultedNodes.add(current),elementTextAlternative}}if(hasAnyConcreteRoles(current,["menu"]))return consultedNodes.add(current),"";if(skipToStep2E||context.isEmbeddedInLabel||context.isReferenced){if(hasAnyConcreteRoles(current,["combobox","listbox"])){consultedNodes.add(current);var selectedOptions=querySelectedOptions(current);return selectedOptions.length===0?isHTMLInputElement(current)?current.value:"":arrayFrom(selectedOptions).map(function(selectedOption){return computeTextAlternative3(selectedOption,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!1,recursion:!0})}).join(" ")}if(hasAbstractRole(current,"range"))return consultedNodes.add(current),current.hasAttribute("aria-valuetext")?current.getAttribute("aria-valuetext"):current.hasAttribute("aria-valuenow")?current.getAttribute("aria-valuenow"):current.getAttribute("value")||"";if(hasAnyConcreteRoles(current,["textbox"]))return consultedNodes.add(current),getValueOfTextbox(current)}if(allowsNameFromContent(current)||isElement(current)&&context.isReferenced||isNativeHostLanguageTextAlternativeElement(current)||isDescendantOfNativeHostLanguageTextAlternativeElement()){var accumulatedText2F=computeMiscTextAlternative(current,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!1});if(accumulatedText2F!=="")return consultedNodes.add(current),accumulatedText2F}if(current.nodeType===current.TEXT_NODE)return consultedNodes.add(current),current.textContent||"";if(context.recursion)return consultedNodes.add(current),computeMiscTextAlternative(current,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!1});var tooltipAttributeValue=computeTooltipAttributeValue(current);return tooltipAttributeValue!==null?(consultedNodes.add(current),tooltipAttributeValue):(consultedNodes.add(current),"")}return asFlatString(computeTextAlternative3(root,{isEmbeddedInLabel:!1,isReferenced:compute==="description",recursion:!1}))}function _typeof2(o){"@babel/helpers - typeof";return _typeof2=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(o2){return typeof o2}:function(o2){return o2&&typeof Symbol=="function"&&o2.constructor===Symbol&&o2!==Symbol.prototype?"symbol":typeof o2},_typeof2(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r2){return Object.getOwnPropertyDescriptor(e,r2).enumerable})),t.push.apply(t,o);}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=arguments[r]!=null?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r2){_defineProperty2(e,r2,t[r2]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r2){Object.defineProperty(e,r2,Object.getOwnPropertyDescriptor(t,r2));});}return e}function _defineProperty2(obj,key,value){return key=_toPropertyKey2(key),key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey2(arg){var key=_toPrimitive2(arg,"string");return _typeof2(key)==="symbol"?key:String(key)}function _toPrimitive2(input2,hint){if(_typeof2(input2)!=="object"||input2===null)return input2;var prim=input2[Symbol.toPrimitive];if(prim!==void 0){var res=prim.call(input2,hint||"default");if(_typeof2(res)!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return (hint==="string"?String:Number)(input2)}function computeAccessibleDescription(root){var options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},description=queryIdRefs(root,"aria-describedby").map(function(element){return computeTextAlternative(element,_objectSpread(_objectSpread({},options),{},{compute:"description"}))}).join(" ");if(description===""){var ariaDescription=root.getAttribute("aria-description");description=ariaDescription===null?"":ariaDescription;}if(description===""){var title=root.getAttribute("title");description=title===null?"":title;}return description}function prohibitsNaming(node){return hasAnyConcreteRoles(node,["caption","code","deletion","emphasis","generic","insertion","none","paragraph","presentation","strong","subscript","superscript"])}function computeAccessibleName(root){var options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return prohibitsNaming(root)?"":computeTextAlternative(root,options)}var import_aria_query=__toESM(require_lib(),1),import_chalk=__toESM(require_source(),1),import_isEqualWith=__toESM(require_isEqualWith(),1),import_css=__toESM(require_css_escape(),1),GenericTypeError=class extends Error{constructor(expectedString,received,matcherFn,context){super(),Error.captureStackTrace&&Error.captureStackTrace(this,matcherFn);let withType="";try{withType=context.utils.printWithType("Received",received,context.utils.printReceived);}catch{}this.message=[context.utils.matcherHint(`${context.isNot?".not":""}.${matcherFn.name}`,"received",""),"",`${context.utils.RECEIVED_COLOR("received")} value must ${expectedString}.`,withType].join(`\n`);}},HtmlElementTypeError=class extends GenericTypeError{constructor(...args){super("be an HTMLElement or an SVGElement",...args);}},NodeTypeError=class extends GenericTypeError{constructor(...args){super("be a Node",...args);}};function checkHasWindow(htmlElement,ErrorClass,...args){if(!htmlElement||!htmlElement.ownerDocument||!htmlElement.ownerDocument.defaultView)throw new ErrorClass(htmlElement,...args)}function checkNode(node,...args){checkHasWindow(node,NodeTypeError,...args);let window2=node.ownerDocument.defaultView;if(!(node instanceof window2.Node))throw new NodeTypeError(node,...args)}function checkHtmlElement(htmlElement,...args){checkHasWindow(htmlElement,HtmlElementTypeError,...args);let window2=htmlElement.ownerDocument.defaultView;if(!(htmlElement instanceof window2.HTMLElement)&&!(htmlElement instanceof window2.SVGElement))throw new HtmlElementTypeError(htmlElement,...args)}var InvalidCSSError=class extends Error{constructor(received,matcherFn,context){super(),Error.captureStackTrace&&Error.captureStackTrace(this,matcherFn),this.message=[received.message,"",context.utils.RECEIVED_COLOR("Failing css:"),context.utils.RECEIVED_COLOR(`${received.css}`)].join(`\n`);}};function parseCSS(css,...args){let ast=$149c1bd638913645$export$98e6a39c04603d36(`selector { ${css} }`,{silent:!0}).stylesheet;if(ast.parsingErrors&&ast.parsingErrors.length>0){let{reason,line}=ast.parsingErrors[0];throw new InvalidCSSError({css,message:`Syntax error parsing expected css: ${reason} on line: ${line}`},...args)}return ast.rules[0].declarations.filter(d2=>d2.type==="declaration").reduce((obj,{property,value})=>Object.assign(obj,{[property]:value}),{})}function display(context,value){return typeof value=="string"?value:context.utils.stringify(value)}function getMessage3(context,matcher,expectedLabel,expectedValue,receivedLabel,receivedValue){return [`${matcher}\n`,`${expectedLabel}:\n${context.utils.EXPECTED_COLOR((0, import_redent.default)(display(context,expectedValue),2))}`,`${receivedLabel}:\n${context.utils.RECEIVED_COLOR((0, import_redent.default)(display(context,receivedValue),2))}`].join(`\n`)}function matches(textToMatch,matcher){return matcher instanceof RegExp?matcher.test(textToMatch):textToMatch.includes(String(matcher))}function deprecate(name,replacementText){console.warn(`Warning: ${name} has been deprecated and will be removed in future updates.`,replacementText);}function normalize(text){return text.replace(/\\s+/g," ").trim()}function getTag(element){return element.tagName&&element.tagName.toLowerCase()}function getSelectValue({multiple,options}){let selectedOptions=[...options].filter(option=>option.selected);if(multiple)return [...selectedOptions].map(opt=>opt.value);if(selectedOptions.length!==0)return selectedOptions[0].value}function getInputValue(inputElement){switch(inputElement.type){case"number":return inputElement.value===""?null:Number(inputElement.value);case"checkbox":return inputElement.checked;default:return inputElement.value}}var rolesSupportingValues=["meter","progressbar","slider","spinbutton"];function getAccessibleValue(element){if(rolesSupportingValues.includes(element.getAttribute("role")))return Number(element.getAttribute("aria-valuenow"))}function getSingleElementValue(element){if(element)switch(element.tagName.toLowerCase()){case"input":return getInputValue(element);case"select":return getSelectValue(element);default:return element.value??getAccessibleValue(element)}}function toSentence(array,{wordConnector=", ",lastWordConnector=" and "}={}){return [array.slice(0,-1).join(wordConnector),array[array.length-1]].join(array.length>1?lastWordConnector:"")}function compareArraysAsSet(arr1,arr2){if(Array.isArray(arr1)&&Array.isArray(arr2))return [...new Set(arr1)].every(v=>new Set(arr2).has(v))}function toBeInTheDOM(element,container){return deprecate("toBeInTheDOM","Please use toBeInTheDocument for searching the entire document and toContainElement for searching a specific container."),element&&checkHtmlElement(element,toBeInTheDOM,this),container&&checkHtmlElement(container,toBeInTheDOM,this),{pass:container?container.contains(element):!!element,message:()=>[this.utils.matcherHint(`${this.isNot?".not":""}.toBeInTheDOM`,"element",""),"","Received:",`  ${this.utils.printReceived(element&&element.cloneNode(!1))}`].join(`\n`)}}function toBeInTheDocument(element){(element!==null||!this.isNot)&&checkHtmlElement(element,toBeInTheDocument,this);let pass=element===null?!1:element.ownerDocument===element.getRootNode({composed:!0}),errorFound=()=>`expected document not to contain element, found ${this.utils.stringify(element.cloneNode(!0))} instead`,errorNotFound=()=>"element could not be found in the document";return {pass,message:()=>[this.utils.matcherHint(`${this.isNot?".not":""}.toBeInTheDocument`,"element",""),"",this.utils.RECEIVED_COLOR(this.isNot?errorFound():errorNotFound())].join(`\n`)}}function toBeEmpty(element){return deprecate("toBeEmpty","Please use instead toBeEmptyDOMElement for finding empty nodes in the DOM."),checkHtmlElement(element,toBeEmpty,this),{pass:element.innerHTML==="",message:()=>[this.utils.matcherHint(`${this.isNot?".not":""}.toBeEmpty`,"element",""),"","Received:",`  ${this.utils.printReceived(element.innerHTML)}`].join(`\n`)}}function toBeEmptyDOMElement(element){return checkHtmlElement(element,toBeEmptyDOMElement,this),{pass:isEmptyElement(element),message:()=>[this.utils.matcherHint(`${this.isNot?".not":""}.toBeEmptyDOMElement`,"element",""),"","Received:",`  ${this.utils.printReceived(element.innerHTML)}`].join(`\n`)}}function isEmptyElement(element){return [...element.childNodes].filter(node=>node.nodeType!==8).length===0}function toContainElement(container,element){return checkHtmlElement(container,toContainElement,this),element!==null&&checkHtmlElement(element,toContainElement,this),{pass:container.contains(element),message:()=>[this.utils.matcherHint(`${this.isNot?".not":""}.toContainElement`,"element","element"),"",this.utils.RECEIVED_COLOR(`${this.utils.stringify(container.cloneNode(!1))} ${this.isNot?"contains:":"does not contain:"} ${this.utils.stringify(element&&element.cloneNode(!1))}\n        `)].join(`\n`)}}function getNormalizedHtml(container,htmlText){let div=container.ownerDocument.createElement("div");return div.innerHTML=htmlText,div.innerHTML}function toContainHTML(container,htmlText){if(checkHtmlElement(container,toContainHTML,this),typeof htmlText!="string")throw new Error(`.toContainHTML() expects a string value, got ${htmlText}`);return {pass:container.outerHTML.includes(getNormalizedHtml(container,htmlText)),message:()=>[this.utils.matcherHint(`${this.isNot?".not":""}.toContainHTML`,"element",""),"Expected:",`  ${this.utils.EXPECTED_COLOR(htmlText)}`,"Received:",`  ${this.utils.printReceived(container.cloneNode(!0))}`].join(`\n`)}}function toHaveTextContent(node,checkWith,options={normalizeWhitespace:!0}){checkNode(node,toHaveTextContent,this);let textContent=options.normalizeWhitespace?normalize(node.textContent):node.textContent.replace(/\\u00a0/g," "),checkingWithEmptyString=textContent!==""&&checkWith==="";return {pass:!checkingWithEmptyString&&matches(textContent,checkWith),message:()=>{let to=this.isNot?"not to":"to";return getMessage3(this,this.utils.matcherHint(`${this.isNot?".not":""}.toHaveTextContent`,"element",""),checkingWithEmptyString?"Checking with empty string will always match, use .toBeEmptyDOMElement() instead":`Expected element ${to} have text content`,checkWith,"Received",textContent)}}}function toHaveAccessibleDescription(htmlElement,expectedAccessibleDescription){checkHtmlElement(htmlElement,toHaveAccessibleDescription,this);let actualAccessibleDescription=computeAccessibleDescription(htmlElement),missingExpectedValue=arguments.length===1,pass=!1;return missingExpectedValue?pass=actualAccessibleDescription!=="":pass=expectedAccessibleDescription instanceof RegExp?expectedAccessibleDescription.test(actualAccessibleDescription):this.equals(actualAccessibleDescription,expectedAccessibleDescription),{pass,message:()=>{let to=this.isNot?"not to":"to";return getMessage3(this,this.utils.matcherHint(`${this.isNot?".not":""}.${toHaveAccessibleDescription.name}`,"element",""),`Expected element ${to} have accessible description`,expectedAccessibleDescription,"Received",actualAccessibleDescription)}}}var ariaInvalidName="aria-invalid",validStates=["false"];function toHaveAccessibleErrorMessage(htmlElement,expectedAccessibleErrorMessage){checkHtmlElement(htmlElement,toHaveAccessibleErrorMessage,this);let to=this.isNot?"not to":"to",method=this.isNot?".not.toHaveAccessibleErrorMessage":".toHaveAccessibleErrorMessage",errormessageId=htmlElement.getAttribute("aria-errormessage");if(!!errormessageId&&/\\s+/.test(errormessageId))return {pass:!1,message:()=>getMessage3(this,this.utils.matcherHint(method,"element"),"Expected element\'s `aria-errormessage` attribute to be empty or a single, valid ID","","Received",`aria-errormessage="${errormessageId}"`)};let ariaInvalidVal=htmlElement.getAttribute(ariaInvalidName);if(!htmlElement.hasAttribute(ariaInvalidName)||validStates.includes(ariaInvalidVal))return {pass:!1,message:()=>getMessage3(this,this.utils.matcherHint(method,"element"),"Expected element to be marked as invalid with attribute",`${ariaInvalidName}="${String(!0)}"`,"Received",htmlElement.hasAttribute("aria-invalid")?`${ariaInvalidName}="${htmlElement.getAttribute(ariaInvalidName)}`:null)};let error=normalize(htmlElement.ownerDocument.getElementById(errormessageId)?.textContent??"");return {pass:expectedAccessibleErrorMessage===void 0?!!error:expectedAccessibleErrorMessage instanceof RegExp?expectedAccessibleErrorMessage.test(error):this.equals(error,expectedAccessibleErrorMessage),message:()=>getMessage3(this,this.utils.matcherHint(method,"element"),`Expected element ${to} have accessible error message`,expectedAccessibleErrorMessage??"","Received",error)}}var elementRoleList=buildElementRoleList(import_aria_query.elementRoles);function toHaveRole(htmlElement,expectedRole){checkHtmlElement(htmlElement,toHaveRole,this);let actualRoles=getExplicitOrImplicitRoles(htmlElement);return {pass:actualRoles.some(el=>el===expectedRole),message:()=>{let to=this.isNot?"not to":"to";return getMessage3(this,this.utils.matcherHint(`${this.isNot?".not":""}.${toHaveRole.name}`,"element",""),`Expected element ${to} have role`,expectedRole,"Received",actualRoles.join(", "))}}}function getExplicitOrImplicitRoles(htmlElement){return htmlElement.hasAttribute("role")?htmlElement.getAttribute("role").split(" ").filter(Boolean):getImplicitAriaRoles(htmlElement)}function getImplicitAriaRoles(currentNode){for(let{match,roles:roles3}of elementRoleList)if(match(currentNode))return [...roles3];return []}function buildElementRoleList(elementRolesMap){function makeElementSelector({name,attributes}){return `${name}${attributes.map(({name:attributeName,value,constraints=[]})=>constraints.indexOf("undefined")!==-1?`:not([${attributeName}])`:value?`[${attributeName}="${value}"]`:`[${attributeName}]`).join("")}`}function getSelectorSpecificity({attributes=[]}){return attributes.length}function bySelectorSpecificity({specificity:leftSpecificity},{specificity:rightSpecificity}){return rightSpecificity-leftSpecificity}function match(element){let{attributes=[]}=element,typeTextIndex=attributes.findIndex(attribute=>attribute.value&&attribute.name==="type"&&attribute.value==="text");typeTextIndex>=0&&(attributes=[...attributes.slice(0,typeTextIndex),...attributes.slice(typeTextIndex+1)]);let selector=makeElementSelector({...element,attributes});return node=>typeTextIndex>=0&&node.type!=="text"?!1:node.matches(selector)}let result=[];for(let[element,roles3]of elementRolesMap.entries())result=[...result,{match:match(element),roles:Array.from(roles3),specificity:getSelectorSpecificity(element)}];return result.sort(bySelectorSpecificity)}function toHaveAccessibleName(htmlElement,expectedAccessibleName){checkHtmlElement(htmlElement,toHaveAccessibleName,this);let actualAccessibleName=computeAccessibleName(htmlElement),missingExpectedValue=arguments.length===1,pass=!1;return missingExpectedValue?pass=actualAccessibleName!=="":pass=expectedAccessibleName instanceof RegExp?expectedAccessibleName.test(actualAccessibleName):this.equals(actualAccessibleName,expectedAccessibleName),{pass,message:()=>{let to=this.isNot?"not to":"to";return getMessage3(this,this.utils.matcherHint(`${this.isNot?".not":""}.${toHaveAccessibleName.name}`,"element",""),`Expected element ${to} have accessible name`,expectedAccessibleName,"Received",actualAccessibleName)}}}function printAttribute(stringify2,name,value){return value===void 0?name:`${name}=${stringify2(value)}`}function getAttributeComment(stringify2,name,value){return value===void 0?`element.hasAttribute(${stringify2(name)})`:`element.getAttribute(${stringify2(name)}) === ${stringify2(value)}`}function toHaveAttribute(htmlElement,name,expectedValue){checkHtmlElement(htmlElement,toHaveAttribute,this);let isExpectedValuePresent=expectedValue!==void 0,hasAttribute=htmlElement.hasAttribute(name),receivedValue=htmlElement.getAttribute(name);return {pass:isExpectedValuePresent?hasAttribute&&this.equals(receivedValue,expectedValue):hasAttribute,message:()=>{let to=this.isNot?"not to":"to",receivedAttribute=hasAttribute?printAttribute(this.utils.stringify,name,receivedValue):null,matcher=this.utils.matcherHint(`${this.isNot?".not":""}.toHaveAttribute`,"element",this.utils.printExpected(name),{secondArgument:isExpectedValuePresent?this.utils.printExpected(expectedValue):void 0,comment:getAttributeComment(this.utils.stringify,name,expectedValue)});return getMessage3(this,matcher,`Expected the element ${to} have attribute`,printAttribute(this.utils.stringify,name,expectedValue),"Received",receivedAttribute)}}}function getExpectedClassNamesAndOptions(params){let lastParam=params.pop(),expectedClassNames,options;return typeof lastParam=="object"&&!(lastParam instanceof RegExp)?(expectedClassNames=params,options=lastParam):(expectedClassNames=params.concat(lastParam),options={exact:!1}),{expectedClassNames,options}}function splitClassNames(str){return str?str.split(/\\s+/).filter(s=>s.length>0):[]}function isSubset$1(subset,superset){return subset.every(strOrRegexp=>typeof strOrRegexp=="string"?superset.includes(strOrRegexp):superset.some(className=>strOrRegexp.test(className)))}function toHaveClass(htmlElement,...params){checkHtmlElement(htmlElement,toHaveClass,this);let{expectedClassNames,options}=getExpectedClassNamesAndOptions(params),received=splitClassNames(htmlElement.getAttribute("class")),expected=expectedClassNames.reduce((acc,className)=>acc.concat(typeof className=="string"||!className?splitClassNames(className):className),[]),hasRegExp=expected.some(className=>className instanceof RegExp);if(options.exact&&hasRegExp)throw new Error("Exact option does not support RegExp expected class names");return options.exact?{pass:isSubset$1(expected,received)&&expected.length===received.length,message:()=>{let to=this.isNot?"not to":"to";return getMessage3(this,this.utils.matcherHint(`${this.isNot?".not":""}.toHaveClass`,"element",this.utils.printExpected(expected.join(" "))),`Expected the element ${to} have EXACTLY defined classes`,expected.join(" "),"Received",received.join(" "))}}:expected.length>0?{pass:isSubset$1(expected,received),message:()=>{let to=this.isNot?"not to":"to";return getMessage3(this,this.utils.matcherHint(`${this.isNot?".not":""}.toHaveClass`,"element",this.utils.printExpected(expected.join(" "))),`Expected the element ${to} have class`,expected.join(" "),"Received",received.join(" "))}}:{pass:this.isNot?received.length>0:!1,message:()=>this.isNot?getMessage3(this,this.utils.matcherHint(".not.toHaveClass","element",""),"Expected the element to have classes","(none)","Received",received.join(" ")):[this.utils.matcherHint(".toHaveClass","element"),"At least one expected class must be provided."].join(`\n`)}}function getStyleDeclaration(document2,css){let styles3={},copy3=document2.createElement("div");return Object.keys(css).forEach(property=>{copy3.style[property]=css[property],styles3[property]=copy3.style[property];}),styles3}function isSubset(styles3,computedStyle){return !!Object.keys(styles3).length&&Object.entries(styles3).every(([prop,value])=>{let isCustomProperty=prop.startsWith("--"),spellingVariants=[prop];return isCustomProperty||spellingVariants.push(prop.toLowerCase()),spellingVariants.some(name=>computedStyle[name]===value||computedStyle.getPropertyValue(name)===value)})}function printoutStyles(styles3){return Object.keys(styles3).sort().map(prop=>`${prop}: ${styles3[prop]};`).join(`\n`)}function expectedDiff(diffFn,expected,computedStyles){let received=Array.from(computedStyles).filter(prop=>expected[prop]!==void 0).reduce((obj,prop)=>Object.assign(obj,{[prop]:computedStyles.getPropertyValue(prop)}),{});return diffFn(printoutStyles(expected),printoutStyles(received)).replace(`${import_chalk.default.red("+ Received")}\n`,"")}function toHaveStyle(htmlElement,css){checkHtmlElement(htmlElement,toHaveStyle,this);let parsedCSS=typeof css=="object"?css:parseCSS(css,toHaveStyle,this),{getComputedStyle}=htmlElement.ownerDocument.defaultView,expected=getStyleDeclaration(htmlElement.ownerDocument,parsedCSS),received=getComputedStyle(htmlElement);return {pass:isSubset(expected,received),message:()=>{let matcher=`${this.isNot?".not":""}.toHaveStyle`;return [this.utils.matcherHint(matcher,"element",""),expectedDiff(this.utils.diff,expected,received)].join(`\n\n`)}}}function toHaveFocus(element){return checkHtmlElement(element,toHaveFocus,this),{pass:element.ownerDocument.activeElement===element,message:()=>[this.utils.matcherHint(`${this.isNot?".not":""}.toHaveFocus`,"element",""),"",...this.isNot?["Received element is focused:",`  ${this.utils.printReceived(element)}`]:["Expected element with focus:",`  ${this.utils.printExpected(element)}`,"Received element with focus:",`  ${this.utils.printReceived(element.ownerDocument.activeElement)}`]].join(`\n`)}}function getMultiElementValue(elements){let types=[...new Set(elements.map(element=>element.type))];if(types.length!==1)throw new Error("Multiple form elements with the same name must be of the same type");switch(types[0]){case"radio":{let theChosenOne=elements.find(radio=>radio.checked);return theChosenOne?theChosenOne.value:void 0}case"checkbox":return elements.filter(checkbox=>checkbox.checked).map(checkbox=>checkbox.value);default:return elements.map(element=>element.value)}}function getFormValue(container,name){let elements=[...container.querySelectorAll(`[name="${(0, import_css.default)(name)}"]`)];if(elements.length!==0)switch(elements.length){case 1:return getSingleElementValue(elements[0]);default:return getMultiElementValue(elements)}}function getPureName(name){return /\\[\\]$/.test(name)?name.slice(0,-2):name}function getAllFormValues(container){return Array.from(container.elements).map(element=>element.name).reduce((obj,name)=>({...obj,[getPureName(name)]:getFormValue(container,name)}),{})}function toHaveFormValues(formElement,expectedValues){if(checkHtmlElement(formElement,toHaveFormValues,this),!formElement.elements)throw new Error("toHaveFormValues must be called on a form or a fieldset");let formValues=getAllFormValues(formElement);return {pass:Object.entries(expectedValues).every(([name,expectedValue])=>(0, import_isEqualWith.default)(formValues[name],expectedValue,compareArraysAsSet)),message:()=>{let to=this.isNot?"not to":"to",matcher=`${this.isNot?".not":""}.toHaveFormValues`,commonKeyValues=Object.keys(formValues).filter(key=>expectedValues.hasOwnProperty(key)).reduce((obj,key)=>({...obj,[key]:formValues[key]}),{});return [this.utils.matcherHint(matcher,"element",""),`Expected the element ${to} have form values`,this.utils.diff(expectedValues,commonKeyValues)].join(`\n\n`)}}}function isStyleVisible(element){let{getComputedStyle}=element.ownerDocument.defaultView,{display:display2,visibility,opacity}=getComputedStyle(element);return display2!=="none"&&visibility!=="hidden"&&visibility!=="collapse"&&opacity!=="0"&&opacity!==0}function isAttributeVisible(element,previousElement){let detailsVisibility;return previousElement?detailsVisibility=element.nodeName==="DETAILS"&&previousElement.nodeName!=="SUMMARY"?element.hasAttribute("open"):!0:detailsVisibility=element.nodeName==="DETAILS"?element.hasAttribute("open"):!0,!element.hasAttribute("hidden")&&detailsVisibility}function isElementVisible(element,previousElement){return isStyleVisible(element)&&isAttributeVisible(element,previousElement)&&(!element.parentElement||isElementVisible(element.parentElement,element))}function toBeVisible(element){checkHtmlElement(element,toBeVisible,this);let isInDocument=element.ownerDocument===element.getRootNode({composed:!0}),isVisible2=isInDocument&&isElementVisible(element);return {pass:isVisible2,message:()=>{let is=isVisible2?"is":"is not";return [this.utils.matcherHint(`${this.isNot?".not":""}.toBeVisible`,"element",""),"",`Received element ${is} visible${isInDocument?"":" (element is not in the document)"}:`,`  ${this.utils.printReceived(element.cloneNode(!1))}`].join(`\n`)}}}var FORM_TAGS$2=["fieldset","input","select","optgroup","option","button","textarea"];function isFirstLegendChildOfFieldset(element,parent){return getTag(element)==="legend"&&getTag(parent)==="fieldset"&&element.isSameNode(Array.from(parent.children).find(child=>getTag(child)==="legend"))}function isElementDisabledByParent(element,parent){return isElementDisabled(parent)&&!isFirstLegendChildOfFieldset(element,parent)}function isCustomElement(tag){return tag.includes("-")}function canElementBeDisabled(element){let tag=getTag(element);return FORM_TAGS$2.includes(tag)||isCustomElement(tag)}function isElementDisabled(element){return canElementBeDisabled(element)&&element.hasAttribute("disabled")}function isAncestorDisabled(element){let parent=element.parentElement;return !!parent&&(isElementDisabledByParent(element,parent)||isAncestorDisabled(parent))}function isElementOrAncestorDisabled(element){return canElementBeDisabled(element)&&(isElementDisabled(element)||isAncestorDisabled(element))}function toBeDisabled(element){checkHtmlElement(element,toBeDisabled,this);let isDisabled3=isElementOrAncestorDisabled(element);return {pass:isDisabled3,message:()=>{let is=isDisabled3?"is":"is not";return [this.utils.matcherHint(`${this.isNot?".not":""}.toBeDisabled`,"element",""),"",`Received element ${is} disabled:`,`  ${this.utils.printReceived(element.cloneNode(!1))}`].join(`\n`)}}}function toBeEnabled(element){checkHtmlElement(element,toBeEnabled,this);let isEnabled=!isElementOrAncestorDisabled(element);return {pass:isEnabled,message:()=>{let is=isEnabled?"is":"is not";return [this.utils.matcherHint(`${this.isNot?".not":""}.toBeEnabled`,"element",""),"",`Received element ${is} enabled:`,`  ${this.utils.printReceived(element.cloneNode(!1))}`].join(`\n`)}}}var FORM_TAGS$1=["select","textarea"],ARIA_FORM_TAGS=["input","select","textarea"],UNSUPPORTED_INPUT_TYPES=["color","hidden","range","submit","image","reset"],SUPPORTED_ARIA_ROLES=["checkbox","combobox","gridcell","listbox","radiogroup","spinbutton","textbox","tree"];function isRequiredOnFormTagsExceptInput(element){return FORM_TAGS$1.includes(getTag(element))&&element.hasAttribute("required")}function isRequiredOnSupportedInput(element){return getTag(element)==="input"&&element.hasAttribute("required")&&(element.hasAttribute("type")&&!UNSUPPORTED_INPUT_TYPES.includes(element.getAttribute("type"))||!element.hasAttribute("type"))}function isElementRequiredByARIA(element){return element.hasAttribute("aria-required")&&element.getAttribute("aria-required")==="true"&&(ARIA_FORM_TAGS.includes(getTag(element))||element.hasAttribute("role")&&SUPPORTED_ARIA_ROLES.includes(element.getAttribute("role")))}function toBeRequired(element){checkHtmlElement(element,toBeRequired,this);let isRequired=isRequiredOnFormTagsExceptInput(element)||isRequiredOnSupportedInput(element)||isElementRequiredByARIA(element);return {pass:isRequired,message:()=>{let is=isRequired?"is":"is not";return [this.utils.matcherHint(`${this.isNot?".not":""}.toBeRequired`,"element",""),"",`Received element ${is} required:`,`  ${this.utils.printReceived(element.cloneNode(!1))}`].join(`\n`)}}}var FORM_TAGS=["form","input","select","textarea"];function isElementHavingAriaInvalid(element){return element.hasAttribute("aria-invalid")&&element.getAttribute("aria-invalid")!=="false"}function isSupportsValidityMethod(element){return FORM_TAGS.includes(getTag(element))}function isElementInvalid(element){let isHaveAriaInvalid=isElementHavingAriaInvalid(element);return isSupportsValidityMethod(element)?isHaveAriaInvalid||!element.checkValidity():isHaveAriaInvalid}function toBeInvalid(element){checkHtmlElement(element,toBeInvalid,this);let isInvalid=isElementInvalid(element);return {pass:isInvalid,message:()=>{let is=isInvalid?"is":"is not";return [this.utils.matcherHint(`${this.isNot?".not":""}.toBeInvalid`,"element",""),"",`Received element ${is} currently invalid:`,`  ${this.utils.printReceived(element.cloneNode(!1))}`].join(`\n`)}}}function toBeValid(element){checkHtmlElement(element,toBeValid,this);let isValid=!isElementInvalid(element);return {pass:isValid,message:()=>{let is=isValid?"is":"is not";return [this.utils.matcherHint(`${this.isNot?".not":""}.toBeValid`,"element",""),"",`Received element ${is} currently valid:`,`  ${this.utils.printReceived(element.cloneNode(!1))}`].join(`\n`)}}}function toHaveValue(htmlElement,expectedValue){if(checkHtmlElement(htmlElement,toHaveValue,this),htmlElement.tagName.toLowerCase()==="input"&&["checkbox","radio"].includes(htmlElement.type))throw new Error("input with type=checkbox or type=radio cannot be used with .toHaveValue(). Use .toBeChecked() for type=checkbox or .toHaveFormValues() instead");let receivedValue=getSingleElementValue(htmlElement),expectsValue=expectedValue!==void 0,expectedTypedValue=expectedValue,receivedTypedValue=receivedValue;return expectedValue==receivedValue&&expectedValue!==receivedValue&&(expectedTypedValue=`${expectedValue} (${typeof expectedValue})`,receivedTypedValue=`${receivedValue} (${typeof receivedValue})`),{pass:expectsValue?(0, import_isEqualWith.default)(receivedValue,expectedValue,compareArraysAsSet):!!receivedValue,message:()=>{let to=this.isNot?"not to":"to",matcher=this.utils.matcherHint(`${this.isNot?".not":""}.toHaveValue`,"element",expectedValue);return getMessage3(this,matcher,`Expected the element ${to} have value`,expectsValue?expectedTypedValue:"(any)","Received",receivedTypedValue)}}}function toHaveDisplayValue(htmlElement,expectedValue){checkHtmlElement(htmlElement,toHaveDisplayValue,this);let tagName=htmlElement.tagName.toLowerCase();if(!["select","input","textarea"].includes(tagName))throw new Error(".toHaveDisplayValue() currently supports only input, textarea or select elements, try with another matcher instead.");if(tagName==="input"&&["radio","checkbox"].includes(htmlElement.type))throw new Error(`.toHaveDisplayValue() currently does not support input[type="${htmlElement.type}"], try with another matcher instead.`);let values=getValues(tagName,htmlElement),expectedValues=getExpectedValues(expectedValue),numberOfMatchesWithValues=expectedValues.filter(expected=>values.some(value=>expected instanceof RegExp?expected.test(value):this.equals(value,String(expected)))).length,matchedWithAllValues=numberOfMatchesWithValues===values.length,matchedWithAllExpectedValues=numberOfMatchesWithValues===expectedValues.length;return {pass:matchedWithAllValues&&matchedWithAllExpectedValues,message:()=>getMessage3(this,this.utils.matcherHint(`${this.isNot?".not":""}.toHaveDisplayValue`,"element",""),`Expected element ${this.isNot?"not ":""}to have display value`,expectedValue,"Received",values)}}function getValues(tagName,htmlElement){return tagName==="select"?Array.from(htmlElement).filter(option=>option.selected).map(option=>option.textContent):[htmlElement.value]}function getExpectedValues(expectedValue){return expectedValue instanceof Array?expectedValue:[expectedValue]}function toBeChecked(element){checkHtmlElement(element,toBeChecked,this);let isValidInput=()=>element.tagName.toLowerCase()==="input"&&["checkbox","radio"].includes(element.type),isValidAriaElement=()=>roleSupportsChecked(element.getAttribute("role"))&&["true","false"].includes(element.getAttribute("aria-checked"));if(!isValidInput()&&!isValidAriaElement())return {pass:!1,message:()=>`only inputs with type="checkbox" or type="radio" or elements with ${supportedRolesSentence()} and a valid aria-checked attribute can be used with .toBeChecked(). Use .toHaveValue() instead`};let isChecked=()=>isValidInput()?element.checked:element.getAttribute("aria-checked")==="true";return {pass:isChecked(),message:()=>{let is=isChecked()?"is":"is not";return [this.utils.matcherHint(`${this.isNot?".not":""}.toBeChecked`,"element",""),"",`Received element ${is} checked:`,`  ${this.utils.printReceived(element.cloneNode(!1))}`].join(`\n`)}}}function supportedRolesSentence(){return toSentence(supportedRoles().map(role=>`role="${role}"`),{lastWordConnector:" or "})}function supportedRoles(){return import_aria_query.roles.keys().filter(roleSupportsChecked)}function roleSupportsChecked(role){return import_aria_query.roles.get(role)?.props["aria-checked"]!==void 0}function toBePartiallyChecked(element){checkHtmlElement(element,toBePartiallyChecked,this);let isValidInput=()=>element.tagName.toLowerCase()==="input"&&element.type==="checkbox",isValidAriaElement=()=>element.getAttribute("role")==="checkbox";if(!isValidInput()&&!isValidAriaElement())return {pass:!1,message:()=>\'only inputs with type="checkbox" or elements with role="checkbox" and a valid aria-checked attribute can be used with .toBePartiallyChecked(). Use .toHaveValue() instead\'};let isPartiallyChecked=()=>{let isAriaMixed=element.getAttribute("aria-checked")==="mixed";return isValidInput()&&element.indeterminate||isAriaMixed};return {pass:isPartiallyChecked(),message:()=>{let is=isPartiallyChecked()?"is":"is not";return [this.utils.matcherHint(`${this.isNot?".not":""}.toBePartiallyChecked`,"element",""),"",`Received element ${is} partially checked:`,`  ${this.utils.printReceived(element.cloneNode(!1))}`].join(`\n`)}}}function toHaveDescription(htmlElement,checkWith){deprecate("toHaveDescription","Please use toHaveAccessibleDescription."),checkHtmlElement(htmlElement,toHaveDescription,this);let expectsDescription=checkWith!==void 0,descriptionIDs=(htmlElement.getAttribute("aria-describedby")||"").split(/\\s+/).filter(Boolean),description="";if(descriptionIDs.length>0){let document2=htmlElement.ownerDocument,descriptionEls=descriptionIDs.map(descriptionID=>document2.getElementById(descriptionID)).filter(Boolean);description=normalize(descriptionEls.map(el=>el.textContent).join(" "));}return {pass:expectsDescription?checkWith instanceof RegExp?checkWith.test(description):this.equals(description,checkWith):!!description,message:()=>{let to=this.isNot?"not to":"to";return getMessage3(this,this.utils.matcherHint(`${this.isNot?".not":""}.toHaveDescription`,"element",""),`Expected the element ${to} have description`,this.utils.printExpected(checkWith),"Received",this.utils.printReceived(description))}}}function toHaveErrorMessage(htmlElement,checkWith){if(deprecate("toHaveErrorMessage","Please use toHaveAccessibleErrorMessage."),checkHtmlElement(htmlElement,toHaveErrorMessage,this),!htmlElement.hasAttribute("aria-invalid")||htmlElement.getAttribute("aria-invalid")==="false"){let not=this.isNot?".not":"";return {pass:!1,message:()=>getMessage3(this,this.utils.matcherHint(`${not}.toHaveErrorMessage`,"element",""),"Expected the element to have invalid state indicated by",\'aria-invalid="true"\',"Received",htmlElement.hasAttribute("aria-invalid")?`aria-invalid="${htmlElement.getAttribute("aria-invalid")}"`:this.utils.printReceived(""))}}let expectsErrorMessage=checkWith!==void 0,errormessageIDs=(htmlElement.getAttribute("aria-errormessage")||"").split(/\\s+/).filter(Boolean),errormessage="";if(errormessageIDs.length>0){let document2=htmlElement.ownerDocument,errormessageEls=errormessageIDs.map(errormessageID=>document2.getElementById(errormessageID)).filter(Boolean);errormessage=normalize(errormessageEls.map(el=>el.textContent).join(" "));}return {pass:expectsErrorMessage?checkWith instanceof RegExp?checkWith.test(errormessage):this.equals(errormessage,checkWith):!!errormessage,message:()=>{let to=this.isNot?"not to":"to";return getMessage3(this,this.utils.matcherHint(`${this.isNot?".not":""}.toHaveErrorMessage`,"element",""),`Expected the element ${to} have error message`,this.utils.printExpected(checkWith),"Received",this.utils.printReceived(errormessage))}}}__toESM(require_redent(),1);__toESM(require_lib(),1);__toESM(require_source(),1);__toESM(require_isEqualWith(),1);__toESM(require_css_escape(),1);function assertTypes(value,name,types){let receivedType=typeof value;if(!types.includes(receivedType))throw new TypeError(`${name} value must be ${types.join(" or ")}, received "${receivedType}"`)}function isObject(item){return item!=null&&typeof item=="object"&&!Array.isArray(item)}function isFinalObj(obj){return obj===Object.prototype||obj===Function.prototype||obj===RegExp.prototype}function getType(value){return Object.prototype.toString.apply(value).slice(8,-1)}function collectOwnProperties(obj,collector){let collect=typeof collector=="function"?collector:key=>collector.add(key);Object.getOwnPropertyNames(obj).forEach(collect),Object.getOwnPropertySymbols(obj).forEach(collect);}function getOwnProperties(obj){let ownProps=new Set;return isFinalObj(obj)?[]:(collectOwnProperties(obj,ownProps),Array.from(ownProps))}var defaultCloneOptions={forceWritable:!1};function deepClone(val,options=defaultCloneOptions){return clone(val,new WeakMap,options)}function clone(val,seen,options=defaultCloneOptions){let k2,out;if(seen.has(val))return seen.get(val);if(Array.isArray(val)){for(out=Array(k2=val.length),seen.set(val,out);k2--;)out[k2]=clone(val[k2],seen,options);return out}if(Object.prototype.toString.call(val)==="[object Object]"){out=Object.create(Object.getPrototypeOf(val)),seen.set(val,out);let props=getOwnProperties(val);for(let k22 of props){let descriptor=Object.getOwnPropertyDescriptor(val,k22);if(!descriptor)continue;let cloned=clone(val[k22],seen,options);options.forceWritable?Object.defineProperty(out,k22,{enumerable:descriptor.enumerable,configurable:!0,writable:!0,value:cloned}):"get"in descriptor?Object.defineProperty(out,k22,{...descriptor,get(){return cloned}}):Object.defineProperty(out,k22,{...descriptor,value:cloned});}return out}return val}var ansiColors2={bold:["1","22"],dim:["2","22"],italic:["3","23"],underline:["4","24"],inverse:["7","27"],hidden:["8","28"],strike:["9","29"],black:["30","39"],red:["31","39"],green:["32","39"],yellow:["33","39"],blue:["34","39"],magenta:["35","39"],cyan:["36","39"],white:["37","39"],brightblack:["30;1","39"],brightred:["31;1","39"],brightgreen:["32;1","39"],brightyellow:["33;1","39"],brightblue:["34;1","39"],brightmagenta:["35;1","39"],brightcyan:["36;1","39"],brightwhite:["37;1","39"],grey:["90","39"]},styles2={special:"cyan",number:"yellow",bigint:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",symbol:"green",date:"magenta",regexp:"red"},truncator2="\\u2026";function colorise2(value,styleType){let color=ansiColors2[styles2[styleType]]||ansiColors2[styleType]||"";return color?`\\x1B[${color[0]}m${String(value)}\\x1B[${color[1]}m`:String(value)}function normaliseOptions2({showHidden=!1,depth=2,colors=!1,customInspect=!0,showProxy=!1,maxArrayLength=1/0,breakLength=1/0,seen=[],truncate:truncate3=1/0,stylize=String}={},inspect5){let options={showHidden:!!showHidden,depth:Number(depth),colors:!!colors,customInspect:!!customInspect,showProxy:!!showProxy,maxArrayLength:Number(maxArrayLength),breakLength:Number(breakLength),truncate:Number(truncate3),seen,inspect:inspect5,stylize};return options.colors&&(options.stylize=colorise2),options}function isHighSurrogate2(char){return char>="\\uD800"&&char<="\\uDBFF"}function truncate2(string,length,tail=truncator2){string=String(string);let tailLength=tail.length,stringLength=string.length;if(tailLength>length&&stringLength>tailLength)return tail;if(stringLength>length&&stringLength>tailLength){let end=length-tailLength;return end>0&&isHighSurrogate2(string[end-1])&&(end=end-1),`${string.slice(0,end)}${tail}`}return string}function inspectList2(list,options,inspectItem,separator=", "){inspectItem=inspectItem||options.inspect;let size=list.length;if(size===0)return "";let originalLength=options.truncate,output="",peek="",truncated="";for(let i=0;i<size;i+=1){let last=i+1===list.length,secondToLast=i+2===list.length;truncated=`${truncator2}(${list.length-i})`;let value=list[i];options.truncate=originalLength-output.length-(last?0:separator.length);let string=peek||inspectItem(value,options)+(last?"":separator),nextLength=output.length+string.length,truncatedLength=nextLength+truncated.length;if(last&&nextLength>originalLength&&output.length+truncated.length<=originalLength||!last&&!secondToLast&&truncatedLength>originalLength||(peek=last?"":inspectItem(list[i+1],options)+(secondToLast?"":separator),!last&&secondToLast&&truncatedLength>originalLength&&nextLength+peek.length>originalLength))break;if(output+=string,!last&&!secondToLast&&nextLength+peek.length>=originalLength){truncated=`${truncator2}(${list.length-i-1})`;break}truncated="";}return `${output}${truncated}`}function quoteComplexKey2(key){return key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)?key:JSON.stringify(key).replace(/\'/g,"\\\\\'").replace(/\\\\"/g,\'"\').replace(/(^"|"$)/g,"\'")}function inspectProperty2([key,value],options){return options.truncate-=2,typeof key=="string"?key=quoteComplexKey2(key):typeof key!="number"&&(key=`[${options.inspect(key,options)}]`),options.truncate-=key.length,value=options.inspect(value,options),`${key}: ${value}`}function inspectArray2(array,options){let nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return "[]";options.truncate-=4;let listContents=inspectList2(array,options);options.truncate-=listContents.length;let propertyContents="";return nonIndexProperties.length&&(propertyContents=inspectList2(nonIndexProperties.map(key=>[key,array[key]]),options,inspectProperty2)),`[ ${listContents}${propertyContents?`, ${propertyContents}`:""} ]`}var getArrayName2=array=>typeof Buffer=="function"&&array instanceof Buffer?"Buffer":array[Symbol.toStringTag]?array[Symbol.toStringTag]:array.constructor.name;function inspectTypedArray2(array,options){let name=getArrayName2(array);options.truncate-=name.length+4;let nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return `${name}[]`;let output="";for(let i=0;i<array.length;i++){let string=`${options.stylize(truncate2(array[i],options.truncate),"number")}${i===array.length-1?"":", "}`;if(options.truncate-=string.length,array[i]!==array.length&&options.truncate<=3){output+=`${truncator2}(${array.length-array[i]+1})`;break}output+=string;}let propertyContents="";return nonIndexProperties.length&&(propertyContents=inspectList2(nonIndexProperties.map(key=>[key,array[key]]),options,inspectProperty2)),`${name}[ ${output}${propertyContents?`, ${propertyContents}`:""} ]`}function inspectDate2(dateObject,options){let stringRepresentation=dateObject.toJSON();if(stringRepresentation===null)return "Invalid Date";let split=stringRepresentation.split("T"),date=split[0];return options.stylize(`${date}T${truncate2(split[1],options.truncate-date.length-1)}`,"date")}function inspectFunction2(func,options){let functionType=func[Symbol.toStringTag]||"Function",name=func.name;return name?options.stylize(`[${functionType} ${truncate2(name,options.truncate-11)}]`,"special"):options.stylize(`[${functionType}]`,"special")}function inspectMapEntry2([key,value],options){return options.truncate-=4,key=options.inspect(key,options),options.truncate-=key.length,value=options.inspect(value,options),`${key} => ${value}`}function mapToEntries2(map){let entries=[];return map.forEach((value,key)=>{entries.push([key,value]);}),entries}function inspectMap2(map,options){return map.size-1<=0?"Map{}":(options.truncate-=7,`Map{ ${inspectList2(mapToEntries2(map),options,inspectMapEntry2)} }`)}var isNaN3=Number.isNaN||(i=>i!==i);function inspectNumber2(number,options){return isNaN3(number)?options.stylize("NaN","number"):number===1/0?options.stylize("Infinity","number"):number===-1/0?options.stylize("-Infinity","number"):number===0?options.stylize(1/number===1/0?"+0":"-0","number"):options.stylize(truncate2(String(number),options.truncate),"number")}function inspectBigInt2(number,options){let nums=truncate2(number.toString(),options.truncate-1);return nums!==truncator2&&(nums+="n"),options.stylize(nums,"bigint")}function inspectRegExp2(value,options){let flags=value.toString().split("/")[2],sourceLength=options.truncate-(2+flags.length),source=value.source;return options.stylize(`/${truncate2(source,sourceLength)}/${flags}`,"regexp")}function arrayFromSet2(set2){let values=[];return set2.forEach(value=>{values.push(value);}),values}function inspectSet2(set2,options){return set2.size===0?"Set{}":(options.truncate-=7,`Set{ ${inspectList2(arrayFromSet2(set2),options)} }`)}var stringEscapeChars2=new RegExp("[\'\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]","g"),escapeCharacters2={"\\b":"\\\\b","\t":"\\\\t","\\n":"\\\\n","\\f":"\\\\f","\\r":"\\\\r","\'":"\\\\\'","\\\\":"\\\\\\\\"},hex2=16,unicodeLength2=4;function escape3(char){return escapeCharacters2[char]||`\\\\u${`0000${char.charCodeAt(0).toString(hex2)}`.slice(-unicodeLength2)}`}function inspectString2(string,options){return stringEscapeChars2.test(string)&&(string=string.replace(stringEscapeChars2,escape3)),options.stylize(`\'${truncate2(string,options.truncate-2)}\'`,"string")}function inspectSymbol2(value){return "description"in Symbol.prototype?value.description?`Symbol(${value.description})`:"Symbol()":value.toString()}var getPromiseValue2=()=>"Promise{\\u2026}";try{let{getPromiseDetails,kPending,kRejected}=process.binding("util");Array.isArray(getPromiseDetails(Promise.resolve()))&&(getPromiseValue2=(value,options)=>{let[state,innerValue]=getPromiseDetails(value);return state===kPending?"Promise{<pending>}":`Promise${state===kRejected?"!":""}{${options.inspect(innerValue,options)}}`});}catch{}var promise_default2=getPromiseValue2;function inspectObject3(object,options){let properties=Object.getOwnPropertyNames(object),symbols=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(object):[];if(properties.length===0&&symbols.length===0)return "{}";if(options.truncate-=4,options.seen=options.seen||[],options.seen.includes(object))return "[Circular]";options.seen.push(object);let propertyContents=inspectList2(properties.map(key=>[key,object[key]]),options,inspectProperty2),symbolContents=inspectList2(symbols.map(key=>[key,object[key]]),options,inspectProperty2);options.seen.pop();let sep="";return propertyContents&&symbolContents&&(sep=", "),`{ ${propertyContents}${sep}${symbolContents} }`}var toStringTag2=typeof Symbol<"u"&&Symbol.toStringTag?Symbol.toStringTag:!1;function inspectClass2(value,options){let name="";return toStringTag2&&toStringTag2 in value&&(name=value[toStringTag2]),name=name||value.constructor.name,(!name||name==="_class")&&(name="<Anonymous Class>"),options.truncate-=name.length,`${name}${inspectObject3(value,options)}`}function inspectArguments2(args,options){return args.length===0?"Arguments[]":(options.truncate-=13,`Arguments[ ${inspectList2(args,options)} ]`)}var errorKeys2=["stack","line","column","name","message","fileName","lineNumber","columnNumber","number","description","cause"];function inspectObject4(error,options){let properties=Object.getOwnPropertyNames(error).filter(key=>errorKeys2.indexOf(key)===-1),name=error.name;options.truncate-=name.length;let message="";if(typeof error.message=="string"?message=truncate2(error.message,options.truncate):properties.unshift("message"),message=message?`: ${message}`:"",options.truncate-=message.length+5,options.seen=options.seen||[],options.seen.includes(error))return "[Circular]";options.seen.push(error);let propertyContents=inspectList2(properties.map(key=>[key,error[key]]),options,inspectProperty2);return `${name}${message}${propertyContents?` { ${propertyContents} }`:""}`}function inspectAttribute2([key,value],options){return options.truncate-=3,value?`${options.stylize(String(key),"yellow")}=${options.stylize(`"${value}"`,"string")}`:`${options.stylize(String(key),"yellow")}`}function inspectHTMLCollection2(collection,options){return inspectList2(collection,options,inspectHTML2,`\n`)}function inspectHTML2(element,options){let properties=element.getAttributeNames(),name=element.tagName.toLowerCase(),head=options.stylize(`<${name}`,"special"),headClose=options.stylize(">","special"),tail=options.stylize(`</${name}>`,"special");options.truncate-=name.length*2+5;let propertyContents="";properties.length>0&&(propertyContents+=" ",propertyContents+=inspectList2(properties.map(key=>[key,element.getAttribute(key)]),options,inspectAttribute2," ")),options.truncate-=propertyContents.length;let truncate3=options.truncate,children=inspectHTMLCollection2(element.children,options);return children&&children.length>truncate3&&(children=`${truncator2}(${element.children.length})`),`${head}${propertyContents}${headClose}${children}${tail}`}var symbolsSupported2=typeof Symbol=="function"&&typeof Symbol.for=="function",chaiInspect2=symbolsSupported2?Symbol.for("chai/inspect"):"@@chai/inspect",nodeInspect2=!1;try{let nodeUtil=__require("util");nodeInspect2=nodeUtil.inspect?nodeUtil.inspect.custom:!1;}catch{nodeInspect2=!1;}var constructorMap2=new WeakMap,stringTagMap2={},baseTypesMap2={undefined:(value,options)=>options.stylize("undefined","undefined"),null:(value,options)=>options.stylize("null","null"),boolean:(value,options)=>options.stylize(String(value),"boolean"),Boolean:(value,options)=>options.stylize(String(value),"boolean"),number:inspectNumber2,Number:inspectNumber2,bigint:inspectBigInt2,BigInt:inspectBigInt2,string:inspectString2,String:inspectString2,function:inspectFunction2,Function:inspectFunction2,symbol:inspectSymbol2,Symbol:inspectSymbol2,Array:inspectArray2,Date:inspectDate2,Map:inspectMap2,Set:inspectSet2,RegExp:inspectRegExp2,Promise:promise_default2,WeakSet:(value,options)=>options.stylize("WeakSet{\\u2026}","special"),WeakMap:(value,options)=>options.stylize("WeakMap{\\u2026}","special"),Arguments:inspectArguments2,Int8Array:inspectTypedArray2,Uint8Array:inspectTypedArray2,Uint8ClampedArray:inspectTypedArray2,Int16Array:inspectTypedArray2,Uint16Array:inspectTypedArray2,Int32Array:inspectTypedArray2,Uint32Array:inspectTypedArray2,Float32Array:inspectTypedArray2,Float64Array:inspectTypedArray2,Generator:()=>"",DataView:()=>"",ArrayBuffer:()=>"",Error:inspectObject4,HTMLCollection:inspectHTMLCollection2,NodeList:inspectHTMLCollection2},inspectCustom2=(value,options,type5)=>chaiInspect2 in value&&typeof value[chaiInspect2]=="function"?value[chaiInspect2](options):nodeInspect2&&nodeInspect2 in value&&typeof value[nodeInspect2]=="function"?value[nodeInspect2](options.depth,options):"inspect"in value&&typeof value.inspect=="function"?value.inspect(options.depth,options):"constructor"in value&&constructorMap2.has(value.constructor)?constructorMap2.get(value.constructor)(value,options):stringTagMap2[type5]?stringTagMap2[type5](value,options):"",toString2=Object.prototype.toString;function inspect3(value,opts={}){let options=normaliseOptions2(opts,inspect3),{customInspect}=options,type5=value===null?"null":typeof value;if(type5==="object"&&(type5=toString2.call(value).slice(8,-1)),type5 in baseTypesMap2)return baseTypesMap2[type5](value,options);if(customInspect&&value){let output=inspectCustom2(value,options,type5);if(output)return typeof output=="string"?output:inspect3(output,options)}let proto=value?Object.getPrototypeOf(value):!1;return proto===Object.prototype||proto===null?inspectObject3(value,options):value&&typeof HTMLElement=="function"&&value instanceof HTMLElement?inspectHTML2(value,options):"constructor"in value?value.constructor!==Object?inspectClass2(value,options):inspectObject3(value,options):value===Object(value)?inspectObject3(value,options):options.stylize(String(value),type5)}var f={reset:[0,0],bold:[1,22,"\\x1B[22m\\x1B[1m"],dim:[2,22,"\\x1B[22m\\x1B[2m"],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]},h=Object.entries(f);function a(n){return String(n)}a.open="";a.close="";function C(n=!1){let e=typeof process<"u"?process:void 0,i=e?.env||{},g2=e?.argv||[];return !("NO_COLOR"in i||g2.includes("--no-color"))&&("FORCE_COLOR"in i||g2.includes("--color")||e?.platform==="win32"||n&&i.TERM!=="dumb"||"CI"in i)||typeof window<"u"&&!!window.chrome}function p(n=!1){let e=C(n),i=(r,t,c,o)=>{let l2="",s=0;do l2+=r.substring(s,o)+c,s=o+t.length,o=r.indexOf(t,s);while(~o);return l2+r.substring(s)},g2=(r,t,c=r)=>{let o=l2=>{let s=String(l2),b=s.indexOf(t,r.length);return ~b?r+i(s,t,c,b)+t:r+s+t};return o.open=r,o.close=t,o},u2={isColorSupported:e},d2=r=>`\\x1B[${r}m`;for(let[r,t]of h)u2[r]=e?g2(d2(t[0]),d2(t[1]),t[2]):a;return u2}var f2=p(!1);function getKeysOfEnumerableProperties(object,compareKeys){let rawKeys=Object.keys(object),keys2=compareKeys===null?rawKeys:rawKeys.sort(compareKeys);if(Object.getOwnPropertySymbols)for(let symbol of Object.getOwnPropertySymbols(object))Object.getOwnPropertyDescriptor(object,symbol).enumerable&&keys2.push(symbol);return keys2}function printIteratorEntries(iterator,config3,indentation,depth,refs,printer2,separator=": "){let result="",width=0,current=iterator.next();if(!current.done){result+=config3.spacingOuter;let indentationNext=indentation+config3.indent;for(;!current.done;){if(result+=indentationNext,width++===config3.maxWidth){result+="\\u2026";break}let name=printer2(current.value[0],config3,indentationNext,depth,refs),value=printer2(current.value[1],config3,indentationNext,depth,refs);result+=name+separator+value,current=iterator.next(),current.done?config3.min||(result+=","):result+=`,${config3.spacingInner}`;}result+=config3.spacingOuter+indentation;}return result}function printIteratorValues(iterator,config3,indentation,depth,refs,printer2){let result="",width=0,current=iterator.next();if(!current.done){result+=config3.spacingOuter;let indentationNext=indentation+config3.indent;for(;!current.done;){if(result+=indentationNext,width++===config3.maxWidth){result+="\\u2026";break}result+=printer2(current.value,config3,indentationNext,depth,refs),current=iterator.next(),current.done?config3.min||(result+=","):result+=`,${config3.spacingInner}`;}result+=config3.spacingOuter+indentation;}return result}function printListItems(list,config3,indentation,depth,refs,printer2){let result="";list=list instanceof ArrayBuffer?new DataView(list):list;let isDataView=l2=>l2 instanceof DataView,length=isDataView(list)?list.byteLength:list.length;if(length>0){result+=config3.spacingOuter;let indentationNext=indentation+config3.indent;for(let i=0;i<length;i++){if(result+=indentationNext,i===config3.maxWidth){result+="\\u2026";break}(isDataView(list)||i in list)&&(result+=printer2(isDataView(list)?list.getInt8(i):list[i],config3,indentationNext,depth,refs)),i<length-1?result+=`,${config3.spacingInner}`:config3.min||(result+=",");}result+=config3.spacingOuter+indentation;}return result}function printObjectProperties(val,config3,indentation,depth,refs,printer2){let result="",keys2=getKeysOfEnumerableProperties(val,config3.compareKeys);if(keys2.length>0){result+=config3.spacingOuter;let indentationNext=indentation+config3.indent;for(let i=0;i<keys2.length;i++){let key=keys2[i],name=printer2(key,config3,indentationNext,depth,refs),value=printer2(val[key],config3,indentationNext,depth,refs);result+=`${indentationNext+name}: ${value}`,i<keys2.length-1?result+=`,${config3.spacingInner}`:config3.min||(result+=",");}result+=config3.spacingOuter+indentation;}return result}var asymmetricMatcher=typeof Symbol=="function"&&Symbol.for?Symbol.for("jest.asymmetricMatcher"):1267621,SPACE$2=" ",serialize$5=(val,config3,indentation,depth,refs,printer2)=>{let stringedValue=val.toString();if(stringedValue==="ArrayContaining"||stringedValue==="ArrayNotContaining")return ++depth>config3.maxDepth?`[${stringedValue}]`:`${stringedValue+SPACE$2}[${printListItems(val.sample,config3,indentation,depth,refs,printer2)}]`;if(stringedValue==="ObjectContaining"||stringedValue==="ObjectNotContaining")return ++depth>config3.maxDepth?`[${stringedValue}]`:`${stringedValue+SPACE$2}{${printObjectProperties(val.sample,config3,indentation,depth,refs,printer2)}}`;if(stringedValue==="StringMatching"||stringedValue==="StringNotMatching"||stringedValue==="StringContaining"||stringedValue==="StringNotContaining")return stringedValue+SPACE$2+printer2(val.sample,config3,indentation,depth,refs);if(typeof val.toAsymmetricMatcher!="function")throw new TypeError(`Asymmetric matcher ${val.constructor.name} does not implement toAsymmetricMatcher()`);return val.toAsymmetricMatcher()},test$5=val=>val&&val.$$typeof===asymmetricMatcher,plugin$5={serialize:serialize$5,test:test$5},SPACE$1=" ",OBJECT_NAMES=new Set(["DOMStringMap","NamedNodeMap"]),ARRAY_REGEXP=/^(?:HTML\\w*Collection|NodeList)$/;function testName(name){return OBJECT_NAMES.has(name)||ARRAY_REGEXP.test(name)}var test$4=val=>val&&val.constructor&&!!val.constructor.name&&testName(val.constructor.name);function isNamedNodeMap(collection){return collection.constructor.name==="NamedNodeMap"}var serialize$4=(collection,config3,indentation,depth,refs,printer2)=>{let name=collection.constructor.name;return ++depth>config3.maxDepth?`[${name}]`:(config3.min?"":name+SPACE$1)+(OBJECT_NAMES.has(name)?`{${printObjectProperties(isNamedNodeMap(collection)?[...collection].reduce((props,attribute)=>(props[attribute.name]=attribute.value,props),{}):{...collection},config3,indentation,depth,refs,printer2)}}`:`[${printListItems([...collection],config3,indentation,depth,refs,printer2)}]`)},plugin$4={serialize:serialize$4,test:test$4};function escapeHTML(str){return str.replaceAll("<","&lt;").replaceAll(">","&gt;")}function printProps(keys2,props,config3,indentation,depth,refs,printer2){let indentationNext=indentation+config3.indent,colors=config3.colors;return keys2.map(key=>{let value=props[key],printed=printer2(value,config3,indentationNext,depth,refs);return typeof value!="string"&&(printed.includes(`\n`)&&(printed=config3.spacingOuter+indentationNext+printed+config3.spacingOuter+indentation),printed=`{${printed}}`),`${config3.spacingInner+indentation+colors.prop.open+key+colors.prop.close}=${colors.value.open}${printed}${colors.value.close}`}).join("")}function printChildren(children,config3,indentation,depth,refs,printer2){return children.map(child=>config3.spacingOuter+indentation+(typeof child=="string"?printText(child,config3):printer2(child,config3,indentation,depth,refs))).join("")}function printText(text,config3){let contentColor=config3.colors.content;return contentColor.open+escapeHTML(text)+contentColor.close}function printComment(comment,config3){let commentColor=config3.colors.comment;return `${commentColor.open}\x3c!--${escapeHTML(comment)}--\x3e${commentColor.close}`}function printElement(type5,printedProps,printedChildren,config3,indentation){let tagColor=config3.colors.tag;return `${tagColor.open}<${type5}${printedProps&&tagColor.close+printedProps+config3.spacingOuter+indentation+tagColor.open}${printedChildren?`>${tagColor.close}${printedChildren}${config3.spacingOuter}${indentation}${tagColor.open}</${type5}`:`${printedProps&&!config3.min?"":" "}/`}>${tagColor.close}`}function printElementAsLeaf(type5,config3){let tagColor=config3.colors.tag;return `${tagColor.open}<${type5}${tagColor.close} \\u2026${tagColor.open} />${tagColor.close}`}var ELEMENT_NODE=1,TEXT_NODE=3,COMMENT_NODE=8,FRAGMENT_NODE=11,ELEMENT_REGEXP=/^(?:(?:HTML|SVG)\\w*)?Element$/;function testHasAttribute(val){try{return typeof val.hasAttribute=="function"&&val.hasAttribute("is")}catch{return !1}}function testNode(val){let constructorName=val.constructor.name,{nodeType,tagName}=val,isCustomElement3=typeof tagName=="string"&&tagName.includes("-")||testHasAttribute(val);return nodeType===ELEMENT_NODE&&(ELEMENT_REGEXP.test(constructorName)||isCustomElement3)||nodeType===TEXT_NODE&&constructorName==="Text"||nodeType===COMMENT_NODE&&constructorName==="Comment"||nodeType===FRAGMENT_NODE&&constructorName==="DocumentFragment"}var test$3=val=>{var _a2;return ((_a2=val?.constructor)==null?void 0:_a2.name)&&testNode(val)};function nodeIsText(node){return node.nodeType===TEXT_NODE}function nodeIsComment(node){return node.nodeType===COMMENT_NODE}function nodeIsFragment(node){return node.nodeType===FRAGMENT_NODE}var serialize$3=(node,config3,indentation,depth,refs,printer2)=>{if(nodeIsText(node))return printText(node.data,config3);if(nodeIsComment(node))return printComment(node.data,config3);let type5=nodeIsFragment(node)?"DocumentFragment":node.tagName.toLowerCase();return ++depth>config3.maxDepth?printElementAsLeaf(type5,config3):printElement(type5,printProps(nodeIsFragment(node)?[]:Array.from(node.attributes,attr=>attr.name).sort(),nodeIsFragment(node)?{}:[...node.attributes].reduce((props,attribute)=>(props[attribute.name]=attribute.value,props),{}),config3,indentation+config3.indent,depth,refs,printer2),printChildren(Array.prototype.slice.call(node.childNodes||node.children),config3,indentation+config3.indent,depth,refs,printer2),config3,indentation)},plugin$3={serialize:serialize$3,test:test$3},IS_ITERABLE_SENTINEL="@@__IMMUTABLE_ITERABLE__@@",IS_LIST_SENTINEL="@@__IMMUTABLE_LIST__@@",IS_KEYED_SENTINEL="@@__IMMUTABLE_KEYED__@@",IS_MAP_SENTINEL="@@__IMMUTABLE_MAP__@@",IS_ORDERED_SENTINEL="@@__IMMUTABLE_ORDERED__@@",IS_RECORD_SENTINEL="@@__IMMUTABLE_RECORD__@@",IS_SEQ_SENTINEL="@@__IMMUTABLE_SEQ__@@",IS_SET_SENTINEL="@@__IMMUTABLE_SET__@@",IS_STACK_SENTINEL="@@__IMMUTABLE_STACK__@@",getImmutableName=name=>`Immutable.${name}`,printAsLeaf=name=>`[${name}]`,SPACE=" ",LAZY="\\u2026";function printImmutableEntries(val,config3,indentation,depth,refs,printer2,type5){return ++depth>config3.maxDepth?printAsLeaf(getImmutableName(type5)):`${getImmutableName(type5)+SPACE}{${printIteratorEntries(val.entries(),config3,indentation,depth,refs,printer2)}}`}function getRecordEntries(val){let i=0;return {next(){if(i<val._keys.length){let key=val._keys[i++];return {done:!1,value:[key,val.get(key)]}}return {done:!0,value:void 0}}}}function printImmutableRecord(val,config3,indentation,depth,refs,printer2){let name=getImmutableName(val._name||"Record");return ++depth>config3.maxDepth?printAsLeaf(name):`${name+SPACE}{${printIteratorEntries(getRecordEntries(val),config3,indentation,depth,refs,printer2)}}`}function printImmutableSeq(val,config3,indentation,depth,refs,printer2){let name=getImmutableName("Seq");return ++depth>config3.maxDepth?printAsLeaf(name):val[IS_KEYED_SENTINEL]?`${name+SPACE}{${val._iter||val._object?printIteratorEntries(val.entries(),config3,indentation,depth,refs,printer2):LAZY}}`:`${name+SPACE}[${val._iter||val._array||val._collection||val._iterable?printIteratorValues(val.values(),config3,indentation,depth,refs,printer2):LAZY}]`}function printImmutableValues(val,config3,indentation,depth,refs,printer2,type5){return ++depth>config3.maxDepth?printAsLeaf(getImmutableName(type5)):`${getImmutableName(type5)+SPACE}[${printIteratorValues(val.values(),config3,indentation,depth,refs,printer2)}]`}var serialize$2=(val,config3,indentation,depth,refs,printer2)=>val[IS_MAP_SENTINEL]?printImmutableEntries(val,config3,indentation,depth,refs,printer2,val[IS_ORDERED_SENTINEL]?"OrderedMap":"Map"):val[IS_LIST_SENTINEL]?printImmutableValues(val,config3,indentation,depth,refs,printer2,"List"):val[IS_SET_SENTINEL]?printImmutableValues(val,config3,indentation,depth,refs,printer2,val[IS_ORDERED_SENTINEL]?"OrderedSet":"Set"):val[IS_STACK_SENTINEL]?printImmutableValues(val,config3,indentation,depth,refs,printer2,"Stack"):val[IS_SEQ_SENTINEL]?printImmutableSeq(val,config3,indentation,depth,refs,printer2):printImmutableRecord(val,config3,indentation,depth,refs,printer2),test$2=val=>val&&(val[IS_ITERABLE_SENTINEL]===!0||val[IS_RECORD_SENTINEL]===!0),plugin$2={serialize:serialize$2,test:test$2},reactIs={exports:{}},reactIs_production_min={};var hasRequiredReactIs_production_min;function requireReactIs_production_min(){if(hasRequiredReactIs_production_min)return reactIs_production_min;hasRequiredReactIs_production_min=1;var b=Symbol.for("react.element"),c=Symbol.for("react.portal"),d2=Symbol.for("react.fragment"),e=Symbol.for("react.strict_mode"),f4=Symbol.for("react.profiler"),g2=Symbol.for("react.provider"),h2=Symbol.for("react.context"),k2=Symbol.for("react.server_context"),l2=Symbol.for("react.forward_ref"),m3=Symbol.for("react.suspense"),n=Symbol.for("react.suspense_list"),p2=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),t=Symbol.for("react.offscreen"),u2;u2=Symbol.for("react.module.reference");function v(a2){if(typeof a2=="object"&&a2!==null){var r=a2.$$typeof;switch(r){case b:switch(a2=a2.type,a2){case d2:case f4:case e:case m3:case n:return a2;default:switch(a2=a2&&a2.$$typeof,a2){case k2:case h2:case l2:case q:case p2:case g2:return a2;default:return r}}case c:return r}}}return reactIs_production_min.ContextConsumer=h2,reactIs_production_min.ContextProvider=g2,reactIs_production_min.Element=b,reactIs_production_min.ForwardRef=l2,reactIs_production_min.Fragment=d2,reactIs_production_min.Lazy=q,reactIs_production_min.Memo=p2,reactIs_production_min.Portal=c,reactIs_production_min.Profiler=f4,reactIs_production_min.StrictMode=e,reactIs_production_min.Suspense=m3,reactIs_production_min.SuspenseList=n,reactIs_production_min.isAsyncMode=function(){return !1},reactIs_production_min.isConcurrentMode=function(){return !1},reactIs_production_min.isContextConsumer=function(a2){return v(a2)===h2},reactIs_production_min.isContextProvider=function(a2){return v(a2)===g2},reactIs_production_min.isElement=function(a2){return typeof a2=="object"&&a2!==null&&a2.$$typeof===b},reactIs_production_min.isForwardRef=function(a2){return v(a2)===l2},reactIs_production_min.isFragment=function(a2){return v(a2)===d2},reactIs_production_min.isLazy=function(a2){return v(a2)===q},reactIs_production_min.isMemo=function(a2){return v(a2)===p2},reactIs_production_min.isPortal=function(a2){return v(a2)===c},reactIs_production_min.isProfiler=function(a2){return v(a2)===f4},reactIs_production_min.isStrictMode=function(a2){return v(a2)===e},reactIs_production_min.isSuspense=function(a2){return v(a2)===m3},reactIs_production_min.isSuspenseList=function(a2){return v(a2)===n},reactIs_production_min.isValidElementType=function(a2){return typeof a2=="string"||typeof a2=="function"||a2===d2||a2===f4||a2===e||a2===m3||a2===n||a2===t||typeof a2=="object"&&a2!==null&&(a2.$$typeof===q||a2.$$typeof===p2||a2.$$typeof===g2||a2.$$typeof===h2||a2.$$typeof===l2||a2.$$typeof===u2||a2.getModuleId!==void 0)},reactIs_production_min.typeOf=v,reactIs_production_min}var reactIs_development={};var hasRequiredReactIs_development;function requireReactIs_development(){return hasRequiredReactIs_development||(hasRequiredReactIs_development=1, false&&0),reactIs_development} true?reactIs.exports=requireReactIs_production_min():0;var reactIsExports=reactIs.exports;function getChildren(arg,children=[]){if(Array.isArray(arg))for(let item of arg)getChildren(item,children);else arg!=null&&arg!==!1&&arg!==""&&children.push(arg);return children}function getType2(element){let type5=element.type;if(typeof type5=="string")return type5;if(typeof type5=="function")return type5.displayName||type5.name||"Unknown";if(reactIsExports.isFragment(element))return "React.Fragment";if(reactIsExports.isSuspense(element))return "React.Suspense";if(typeof type5=="object"&&type5!==null){if(reactIsExports.isContextProvider(element))return "Context.Provider";if(reactIsExports.isContextConsumer(element))return "Context.Consumer";if(reactIsExports.isForwardRef(element)){if(type5.displayName)return type5.displayName;let functionName=type5.render.displayName||type5.render.name||"";return functionName===""?"ForwardRef":`ForwardRef(${functionName})`}if(reactIsExports.isMemo(element)){let functionName=type5.displayName||type5.type.displayName||type5.type.name||"";return functionName===""?"Memo":`Memo(${functionName})`}}return "UNDEFINED"}function getPropKeys$1(element){let{props}=element;return Object.keys(props).filter(key=>key!=="children"&&props[key]!==void 0).sort()}var serialize$1=(element,config3,indentation,depth,refs,printer2)=>++depth>config3.maxDepth?printElementAsLeaf(getType2(element),config3):printElement(getType2(element),printProps(getPropKeys$1(element),element.props,config3,indentation+config3.indent,depth,refs,printer2),printChildren(getChildren(element.props.children),config3,indentation+config3.indent,depth,refs,printer2),config3,indentation),test$1=val=>val!=null&&reactIsExports.isElement(val),plugin$1={serialize:serialize$1,test:test$1},testSymbol=typeof Symbol=="function"&&Symbol.for?Symbol.for("react.test.json"):245830487;function getPropKeys(object){let{props}=object;return props?Object.keys(props).filter(key=>props[key]!==void 0).sort():[]}var serialize=(object,config3,indentation,depth,refs,printer2)=>++depth>config3.maxDepth?printElementAsLeaf(object.type,config3):printElement(object.type,object.props?printProps(getPropKeys(object),object.props,config3,indentation+config3.indent,depth,refs,printer2):"",object.children?printChildren(object.children,config3,indentation+config3.indent,depth,refs,printer2):"",config3,indentation),test2=val=>val&&val.$$typeof===testSymbol,plugin={serialize,test:test2},toString3=Object.prototype.toString,toISOString=Date.prototype.toISOString,errorToString=Error.prototype.toString,regExpToString=RegExp.prototype.toString;function getConstructorName2(val){return typeof val.constructor=="function"&&val.constructor.name||"Object"}function isWindow(val){return typeof window<"u"&&val===window}var SYMBOL_REGEXP=/^Symbol\\((.*)\\)(.*)$/,NEWLINE_REGEXP=/\\n/g,PrettyFormatPluginError=class extends Error{constructor(message,stack){super(message),this.stack=stack,this.name=this.constructor.name;}};function isToStringedArrayType(toStringed){return toStringed==="[object Array]"||toStringed==="[object ArrayBuffer]"||toStringed==="[object DataView]"||toStringed==="[object Float32Array]"||toStringed==="[object Float64Array]"||toStringed==="[object Int8Array]"||toStringed==="[object Int16Array]"||toStringed==="[object Int32Array]"||toStringed==="[object Uint8Array]"||toStringed==="[object Uint8ClampedArray]"||toStringed==="[object Uint16Array]"||toStringed==="[object Uint32Array]"}function printNumber(val){return Object.is(val,-0)?"-0":String(val)}function printBigInt(val){return `${val}n`}function printFunction(val,printFunctionName){return printFunctionName?`[Function ${val.name||"anonymous"}]`:"[Function]"}function printSymbol(val){return String(val).replace(SYMBOL_REGEXP,"Symbol($1)")}function printError(val){return `[${errorToString.call(val)}]`}function printBasicValue(val,printFunctionName,escapeRegex,escapeString){if(val===!0||val===!1)return `${val}`;if(val===void 0)return "undefined";if(val===null)return "null";let typeOf=typeof val;if(typeOf==="number")return printNumber(val);if(typeOf==="bigint")return printBigInt(val);if(typeOf==="string")return escapeString?`"${val.replaceAll(/"|\\\\/g,"\\\\$&")}"`:`"${val}"`;if(typeOf==="function")return printFunction(val,printFunctionName);if(typeOf==="symbol")return printSymbol(val);let toStringed=toString3.call(val);return toStringed==="[object WeakMap]"?"WeakMap {}":toStringed==="[object WeakSet]"?"WeakSet {}":toStringed==="[object Function]"||toStringed==="[object GeneratorFunction]"?printFunction(val,printFunctionName):toStringed==="[object Symbol]"?printSymbol(val):toStringed==="[object Date]"?Number.isNaN(+val)?"Date { NaN }":toISOString.call(val):toStringed==="[object Error]"?printError(val):toStringed==="[object RegExp]"?escapeRegex?regExpToString.call(val).replaceAll(/[$()*+.?[\\\\\\]^{|}]/g,"\\\\$&"):regExpToString.call(val):val instanceof Error?printError(val):null}function printComplexValue(val,config3,indentation,depth,refs,hasCalledToJSON){if(refs.includes(val))return "[Circular]";refs=[...refs],refs.push(val);let hitMaxDepth=++depth>config3.maxDepth,min=config3.min;if(config3.callToJSON&&!hitMaxDepth&&val.toJSON&&typeof val.toJSON=="function"&&!hasCalledToJSON)return printer(val.toJSON(),config3,indentation,depth,refs,!0);let toStringed=toString3.call(val);return toStringed==="[object Arguments]"?hitMaxDepth?"[Arguments]":`${min?"":"Arguments "}[${printListItems(val,config3,indentation,depth,refs,printer)}]`:isToStringedArrayType(toStringed)?hitMaxDepth?`[${val.constructor.name}]`:`${min||!config3.printBasicPrototype&&val.constructor.name==="Array"?"":`${val.constructor.name} `}[${printListItems(val,config3,indentation,depth,refs,printer)}]`:toStringed==="[object Map]"?hitMaxDepth?"[Map]":`Map {${printIteratorEntries(val.entries(),config3,indentation,depth,refs,printer," => ")}}`:toStringed==="[object Set]"?hitMaxDepth?"[Set]":`Set {${printIteratorValues(val.values(),config3,indentation,depth,refs,printer)}}`:hitMaxDepth||isWindow(val)?`[${getConstructorName2(val)}]`:`${min||!config3.printBasicPrototype&&getConstructorName2(val)==="Object"?"":`${getConstructorName2(val)} `}{${printObjectProperties(val,config3,indentation,depth,refs,printer)}}`}function isNewPlugin(plugin2){return plugin2.serialize!=null}function printPlugin(plugin2,val,config3,indentation,depth,refs){let printed;try{printed=isNewPlugin(plugin2)?plugin2.serialize(val,config3,indentation,depth,refs,printer):plugin2.print(val,valChild=>printer(valChild,config3,indentation,depth,refs),str=>{let indentationNext=indentation+config3.indent;return indentationNext+str.replaceAll(NEWLINE_REGEXP,`\n${indentationNext}`)},{edgeSpacing:config3.spacingOuter,min:config3.min,spacing:config3.spacingInner},config3.colors);}catch(error){throw new PrettyFormatPluginError(error.message,error.stack)}if(typeof printed!="string")throw new TypeError(`pretty-format: Plugin must return type "string" but instead returned "${typeof printed}".`);return printed}function findPlugin(plugins22,val){for(let plugin2 of plugins22)try{if(plugin2.test(val))return plugin2}catch(error){throw new PrettyFormatPluginError(error.message,error.stack)}return null}function printer(val,config3,indentation,depth,refs,hasCalledToJSON){let plugin2=findPlugin(config3.plugins,val);if(plugin2!==null)return printPlugin(plugin2,val,config3,indentation,depth,refs);let basicResult=printBasicValue(val,config3.printFunctionName,config3.escapeRegex,config3.escapeString);return basicResult!==null?basicResult:printComplexValue(val,config3,indentation,depth,refs,hasCalledToJSON)}var DEFAULT_THEME={comment:"gray",content:"reset",prop:"yellow",tag:"cyan",value:"green"},DEFAULT_THEME_KEYS=Object.keys(DEFAULT_THEME),DEFAULT_OPTIONS={callToJSON:!0,compareKeys:void 0,escapeRegex:!1,escapeString:!0,highlight:!1,indent:2,maxDepth:Number.POSITIVE_INFINITY,maxWidth:Number.POSITIVE_INFINITY,min:!1,plugins:[],printBasicPrototype:!0,printFunctionName:!0,theme:DEFAULT_THEME};function validateOptions(options){for(let key of Object.keys(options))if(!Object.prototype.hasOwnProperty.call(DEFAULT_OPTIONS,key))throw new Error(`pretty-format: Unknown option "${key}".`);if(options.min&&options.indent!==void 0&&options.indent!==0)throw new Error(\'pretty-format: Options "min" and "indent" cannot be used together.\')}function getColorsHighlight(){return DEFAULT_THEME_KEYS.reduce((colors,key)=>{let value=DEFAULT_THEME[key],color=value&&f2[value];if(color&&typeof color.close=="string"&&typeof color.open=="string")colors[key]=color;else throw new Error(`pretty-format: Option "theme" has a key "${key}" whose value "${value}" is undefined in ansi-styles.`);return colors},Object.create(null))}function getColorsEmpty(){return DEFAULT_THEME_KEYS.reduce((colors,key)=>(colors[key]={close:"",open:""},colors),Object.create(null))}function getPrintFunctionName(options){return options?.printFunctionName??DEFAULT_OPTIONS.printFunctionName}function getEscapeRegex(options){return options?.escapeRegex??DEFAULT_OPTIONS.escapeRegex}function getEscapeString(options){return options?.escapeString??DEFAULT_OPTIONS.escapeString}function getConfig(options){return {callToJSON:options?.callToJSON??DEFAULT_OPTIONS.callToJSON,colors:options?.highlight?getColorsHighlight():getColorsEmpty(),compareKeys:typeof options?.compareKeys=="function"||options?.compareKeys===null?options.compareKeys:DEFAULT_OPTIONS.compareKeys,escapeRegex:getEscapeRegex(options),escapeString:getEscapeString(options),indent:options?.min?"":createIndent(options?.indent??DEFAULT_OPTIONS.indent),maxDepth:options?.maxDepth??DEFAULT_OPTIONS.maxDepth,maxWidth:options?.maxWidth??DEFAULT_OPTIONS.maxWidth,min:options?.min??DEFAULT_OPTIONS.min,plugins:options?.plugins??DEFAULT_OPTIONS.plugins,printBasicPrototype:options?.printBasicPrototype??!0,printFunctionName:getPrintFunctionName(options),spacingInner:options?.min?" ":`\n`,spacingOuter:options?.min?"":`\n`}}function createIndent(indent){return Array.from({length:indent+1}).join(" ")}function format(val,options){if(options&&(validateOptions(options),options.plugins)){let plugin2=findPlugin(options.plugins,val);if(plugin2!==null)return printPlugin(plugin2,val,getConfig(options),"",0,[])}let basicResult=printBasicValue(val,getPrintFunctionName(options),getEscapeRegex(options),getEscapeString(options));return basicResult!==null?basicResult:printComplexValue(val,getConfig(options),"",0,[])}var plugins={AsymmetricMatcher:plugin$5,DOMCollection:plugin$4,DOMElement:plugin$3,Immutable:plugin$2,ReactElement:plugin$1,ReactTestComponent:plugin};var{AsymmetricMatcher,DOMCollection,DOMElement,Immutable,ReactElement,ReactTestComponent}=plugins,PLUGINS=[ReactTestComponent,ReactElement,DOMElement,DOMCollection,Immutable,AsymmetricMatcher];function stringify(object,maxDepth=10,{maxLength,...options}={}){let MAX_LENGTH=maxLength??1e4,result;try{result=format(object,{maxDepth,escapeString:!1,plugins:PLUGINS,...options});}catch{result=format(object,{callToJSON:!1,maxDepth,escapeString:!1,plugins:PLUGINS,...options});}return result.length>=MAX_LENGTH&&maxDepth>1?stringify(object,Math.floor(maxDepth/2)):result}var formatRegExp=/%[sdjifoOc%]/g;function format2(...args){if(typeof args[0]!="string"){let objects=[];for(let i2=0;i2<args.length;i2++)objects.push(inspect4(args[i2],{depth:0,colors:!1}));return objects.join(" ")}let len=args.length,i=1,template=args[0],str=String(template).replace(formatRegExp,x2=>{if(x2==="%%")return "%";if(i>=len)return x2;switch(x2){case"%s":{let value=args[i++];return typeof value=="bigint"?`${value.toString()}n`:typeof value=="number"&&value===0&&1/value<0?"-0":typeof value=="object"&&value!==null?inspect4(value,{depth:0,colors:!1}):String(value)}case"%d":{let value=args[i++];return typeof value=="bigint"?`${value.toString()}n`:Number(value).toString()}case"%i":{let value=args[i++];return typeof value=="bigint"?`${value.toString()}n`:Number.parseInt(String(value)).toString()}case"%f":return Number.parseFloat(String(args[i++])).toString();case"%o":return inspect4(args[i++],{showHidden:!0,showProxy:!0});case"%O":return inspect4(args[i++]);case"%c":return i++,"";case"%j":try{return JSON.stringify(args[i++])}catch(err){let m3=err.message;if(m3.includes("circular structure")||m3.includes("cyclic structures")||m3.includes("cyclic object"))return "[Circular]";throw err}default:return x2}});for(let x2=args[i];i<len;x2=args[++i])x2===null||typeof x2!="object"?str+=` ${x2}`:str+=` ${inspect4(x2)}`;return str}function inspect4(obj,options={}){return options.truncate===0&&(options.truncate=Number.POSITIVE_INFINITY),inspect3(obj,options)}var LineTerminatorSequence;LineTerminatorSequence=/\\r?\\n|[\\r\\u2028\\u2029]/y;RegExp(LineTerminatorSequence.source);var reservedWords={keyword:["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"],strict:["implements","interface","let","package","private","protected","public","static","yield"]};new Set(reservedWords.keyword);new Set(reservedWords.strict);function getType3(value){if(value===void 0)return "undefined";if(value===null)return "null";if(Array.isArray(value))return "array";if(typeof value=="boolean")return "boolean";if(typeof value=="function")return "function";if(typeof value=="number")return "number";if(typeof value=="string")return "string";if(typeof value=="bigint")return "bigint";if(typeof value=="object"){if(value!=null){if(value.constructor===RegExp)return "regexp";if(value.constructor===Map)return "map";if(value.constructor===Set)return "set";if(value.constructor===Date)return "date"}return "object"}else if(typeof value=="symbol")return "symbol";throw new Error(`value of unknown type: ${value}`)}var DIFF_DELETE=-1,DIFF_INSERT=1,DIFF_EQUAL=0,Diff=class{0;1;constructor(op,text){this[0]=op,this[1]=text;}},diff_commonPrefix=function(text1,text2){if(!text1||!text2||text1.charAt(0)!==text2.charAt(0))return 0;let pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerstart=0;for(;pointermin<pointermid;)text1.substring(pointerstart,pointermid)===text2.substring(pointerstart,pointermid)?(pointermin=pointermid,pointerstart=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},diff_commonSuffix=function(text1,text2){if(!text1||!text2||text1.charAt(text1.length-1)!==text2.charAt(text2.length-1))return 0;let pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerend=0;for(;pointermin<pointermid;)text1.substring(text1.length-pointermid,text1.length-pointerend)===text2.substring(text2.length-pointermid,text2.length-pointerend)?(pointermin=pointermid,pointerend=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid},diff_commonOverlap_=function(text1,text2){let text1_length=text1.length,text2_length=text2.length;if(text1_length===0||text2_length===0)return 0;text1_length>text2_length?text1=text1.substring(text1_length-text2_length):text1_length<text2_length&&(text2=text2.substring(0,text1_length));let text_length=Math.min(text1_length,text2_length);if(text1===text2)return text_length;let best=0,length=1;for(;;){let pattern=text1.substring(text_length-length),found=text2.indexOf(pattern);if(found===-1)return best;length+=found,(found===0||text1.substring(text_length-length)===text2.substring(0,length))&&(best=length,length++);}},diff_cleanupSemantic=function(diffs){let changes=!1,equalities=[],equalitiesLength=0,lastEquality=null,pointer3=0,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0;for(;pointer3<diffs.length;)diffs[pointer3][0]===DIFF_EQUAL?(equalities[equalitiesLength++]=pointer3,length_insertions1=length_insertions2,length_deletions1=length_deletions2,length_insertions2=0,length_deletions2=0,lastEquality=diffs[pointer3][1]):(diffs[pointer3][0]===DIFF_INSERT?length_insertions2+=diffs[pointer3][1].length:length_deletions2+=diffs[pointer3][1].length,lastEquality&&lastEquality.length<=Math.max(length_insertions1,length_deletions1)&&lastEquality.length<=Math.max(length_insertions2,length_deletions2)&&(diffs.splice(equalities[equalitiesLength-1],0,new Diff(DIFF_DELETE,lastEquality)),diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT,equalitiesLength--,equalitiesLength--,pointer3=equalitiesLength>0?equalities[equalitiesLength-1]:-1,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0,lastEquality=null,changes=!0)),pointer3++;for(changes&&diff_cleanupMerge(diffs),diff_cleanupSemanticLossless(diffs),pointer3=1;pointer3<diffs.length;){if(diffs[pointer3-1][0]===DIFF_DELETE&&diffs[pointer3][0]===DIFF_INSERT){let deletion=diffs[pointer3-1][1],insertion=diffs[pointer3][1],overlap_length1=diff_commonOverlap_(deletion,insertion),overlap_length2=diff_commonOverlap_(insertion,deletion);overlap_length1>=overlap_length2?(overlap_length1>=deletion.length/2||overlap_length1>=insertion.length/2)&&(diffs.splice(pointer3,0,new Diff(DIFF_EQUAL,insertion.substring(0,overlap_length1))),diffs[pointer3-1][1]=deletion.substring(0,deletion.length-overlap_length1),diffs[pointer3+1][1]=insertion.substring(overlap_length1),pointer3++):(overlap_length2>=deletion.length/2||overlap_length2>=insertion.length/2)&&(diffs.splice(pointer3,0,new Diff(DIFF_EQUAL,deletion.substring(0,overlap_length2))),diffs[pointer3-1][0]=DIFF_INSERT,diffs[pointer3-1][1]=insertion.substring(0,insertion.length-overlap_length2),diffs[pointer3+1][0]=DIFF_DELETE,diffs[pointer3+1][1]=deletion.substring(overlap_length2),pointer3++),pointer3++;}pointer3++;}},nonAlphaNumericRegex_=/[^a-z0-9]/i,whitespaceRegex_=/\\s/,linebreakRegex_=/[\\r\\n]/,blanklineEndRegex_=/\\n\\r?\\n$/,blanklineStartRegex_=/^\\r?\\n\\r?\\n/;function diff_cleanupSemanticLossless(diffs){function diff_cleanupSemanticScore_(one,two){if(!one||!two)return 6;let char1=one.charAt(one.length-1),char2=two.charAt(0),nonAlphaNumeric1=char1.match(nonAlphaNumericRegex_),nonAlphaNumeric2=char2.match(nonAlphaNumericRegex_),whitespace1=nonAlphaNumeric1&&char1.match(whitespaceRegex_),whitespace2=nonAlphaNumeric2&&char2.match(whitespaceRegex_),lineBreak1=whitespace1&&char1.match(linebreakRegex_),lineBreak2=whitespace2&&char2.match(linebreakRegex_),blankLine1=lineBreak1&&one.match(blanklineEndRegex_),blankLine2=lineBreak2&&two.match(blanklineStartRegex_);return blankLine1||blankLine2?5:lineBreak1||lineBreak2?4:nonAlphaNumeric1&&!whitespace1&&whitespace2?3:whitespace1||whitespace2?2:nonAlphaNumeric1||nonAlphaNumeric2?1:0}let pointer3=1;for(;pointer3<diffs.length-1;){if(diffs[pointer3-1][0]===DIFF_EQUAL&&diffs[pointer3+1][0]===DIFF_EQUAL){let equality1=diffs[pointer3-1][1],edit=diffs[pointer3][1],equality2=diffs[pointer3+1][1],commonOffset=diff_commonSuffix(equality1,edit);if(commonOffset){let commonString=edit.substring(edit.length-commonOffset);equality1=equality1.substring(0,equality1.length-commonOffset),edit=commonString+edit.substring(0,edit.length-commonOffset),equality2=commonString+equality2;}let bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2,bestScore=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);for(;edit.charAt(0)===equality2.charAt(0);){equality1+=edit.charAt(0),edit=edit.substring(1)+equality2.charAt(0),equality2=equality2.substring(1);let score=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);score>=bestScore&&(bestScore=score,bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2);}diffs[pointer3-1][1]!==bestEquality1&&(bestEquality1?diffs[pointer3-1][1]=bestEquality1:(diffs.splice(pointer3-1,1),pointer3--),diffs[pointer3][1]=bestEdit,bestEquality2?diffs[pointer3+1][1]=bestEquality2:(diffs.splice(pointer3+1,1),pointer3--));}pointer3++;}}function diff_cleanupMerge(diffs){diffs.push(new Diff(DIFF_EQUAL,""));let pointer3=0,count_delete=0,count_insert=0,text_delete="",text_insert="",commonlength;for(;pointer3<diffs.length;)switch(diffs[pointer3][0]){case DIFF_INSERT:count_insert++,text_insert+=diffs[pointer3][1],pointer3++;break;case DIFF_DELETE:count_delete++,text_delete+=diffs[pointer3][1],pointer3++;break;case DIFF_EQUAL:count_delete+count_insert>1?(count_delete!==0&&count_insert!==0&&(commonlength=diff_commonPrefix(text_insert,text_delete),commonlength!==0&&(pointer3-count_delete-count_insert>0&&diffs[pointer3-count_delete-count_insert-1][0]===DIFF_EQUAL?diffs[pointer3-count_delete-count_insert-1][1]+=text_insert.substring(0,commonlength):(diffs.splice(0,0,new Diff(DIFF_EQUAL,text_insert.substring(0,commonlength))),pointer3++),text_insert=text_insert.substring(commonlength),text_delete=text_delete.substring(commonlength)),commonlength=diff_commonSuffix(text_insert,text_delete),commonlength!==0&&(diffs[pointer3][1]=text_insert.substring(text_insert.length-commonlength)+diffs[pointer3][1],text_insert=text_insert.substring(0,text_insert.length-commonlength),text_delete=text_delete.substring(0,text_delete.length-commonlength))),pointer3-=count_delete+count_insert,diffs.splice(pointer3,count_delete+count_insert),text_delete.length&&(diffs.splice(pointer3,0,new Diff(DIFF_DELETE,text_delete)),pointer3++),text_insert.length&&(diffs.splice(pointer3,0,new Diff(DIFF_INSERT,text_insert)),pointer3++),pointer3++):pointer3!==0&&diffs[pointer3-1][0]===DIFF_EQUAL?(diffs[pointer3-1][1]+=diffs[pointer3][1],diffs.splice(pointer3,1)):pointer3++,count_insert=0,count_delete=0,text_delete="",text_insert="";break}diffs[diffs.length-1][1]===""&&diffs.pop();let changes=!1;for(pointer3=1;pointer3<diffs.length-1;)diffs[pointer3-1][0]===DIFF_EQUAL&&diffs[pointer3+1][0]===DIFF_EQUAL&&(diffs[pointer3][1].substring(diffs[pointer3][1].length-diffs[pointer3-1][1].length)===diffs[pointer3-1][1]?(diffs[pointer3][1]=diffs[pointer3-1][1]+diffs[pointer3][1].substring(0,diffs[pointer3][1].length-diffs[pointer3-1][1].length),diffs[pointer3+1][1]=diffs[pointer3-1][1]+diffs[pointer3+1][1],diffs.splice(pointer3-1,1),changes=!0):diffs[pointer3][1].substring(0,diffs[pointer3+1][1].length)===diffs[pointer3+1][1]&&(diffs[pointer3-1][1]+=diffs[pointer3+1][1],diffs[pointer3][1]=diffs[pointer3][1].substring(diffs[pointer3+1][1].length)+diffs[pointer3+1][1],diffs.splice(pointer3+1,1),changes=!0)),pointer3++;changes&&diff_cleanupMerge(diffs);}var NO_DIFF_MESSAGE="Compared values have no visual difference.",SIMILAR_MESSAGE="Compared values serialize to the same structure.\\nPrinting internal object structure without calling `toJSON` instead.",build={};Object.defineProperty(build,"__esModule",{value:!0});var _default=build.default=diffSequence,pkg="diff-sequences",NOT_YET_SET=0,countCommonItemsF=(aIndex,aEnd,bIndex,bEnd,isCommon)=>{let nCommon=0;for(;aIndex<aEnd&&bIndex<bEnd&&isCommon(aIndex,bIndex);)aIndex+=1,bIndex+=1,nCommon+=1;return nCommon},countCommonItemsR=(aStart,aIndex,bStart,bIndex,isCommon)=>{let nCommon=0;for(;aStart<=aIndex&&bStart<=bIndex&&isCommon(aIndex,bIndex);)aIndex-=1,bIndex-=1,nCommon+=1;return nCommon},extendPathsF=(d2,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF)=>{let iF=0,kF=-d2,aFirst=aIndexesF[iF],aIndexPrev1=aFirst;aIndexesF[iF]+=countCommonItemsF(aFirst+1,aEnd,bF+aFirst-kF+1,bEnd,isCommon);let nF=d2<iMaxF?d2:iMaxF;for(iF+=1,kF+=2;iF<=nF;iF+=1,kF+=2){if(iF!==d2&&aIndexPrev1<aIndexesF[iF])aFirst=aIndexesF[iF];else if(aFirst=aIndexPrev1+1,aEnd<=aFirst)return iF-1;aIndexPrev1=aIndexesF[iF],aIndexesF[iF]=aFirst+countCommonItemsF(aFirst+1,aEnd,bF+aFirst-kF+1,bEnd,isCommon);}return iMaxF},extendPathsR=(d2,aStart,bStart,bR,isCommon,aIndexesR,iMaxR)=>{let iR=0,kR=d2,aFirst=aIndexesR[iR],aIndexPrev1=aFirst;aIndexesR[iR]-=countCommonItemsR(aStart,aFirst-1,bStart,bR+aFirst-kR-1,isCommon);let nR=d2<iMaxR?d2:iMaxR;for(iR+=1,kR-=2;iR<=nR;iR+=1,kR-=2){if(iR!==d2&&aIndexesR[iR]<aIndexPrev1)aFirst=aIndexesR[iR];else if(aFirst=aIndexPrev1-1,aFirst<aStart)return iR-1;aIndexPrev1=aIndexesR[iR],aIndexesR[iR]=aFirst-countCommonItemsR(aStart,aFirst-1,bStart,bR+aFirst-kR-1,isCommon);}return iMaxR},extendOverlappablePathsF=(d2,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division)=>{let bF=bStart-aStart,aLength=aEnd-aStart,baDeltaLength=bEnd-bStart-aLength,kMinOverlapF=-baDeltaLength-(d2-1),kMaxOverlapF=-baDeltaLength+(d2-1),aIndexPrev1=NOT_YET_SET,nF=d2<iMaxF?d2:iMaxF;for(let iF=0,kF=-d2;iF<=nF;iF+=1,kF+=2){let insert=iF===0||iF!==d2&&aIndexPrev1<aIndexesF[iF],aLastPrev=insert?aIndexesF[iF]:aIndexPrev1,aFirst=insert?aLastPrev:aLastPrev+1,bFirst=bF+aFirst-kF,nCommonF=countCommonItemsF(aFirst+1,aEnd,bFirst+1,bEnd,isCommon),aLast=aFirst+nCommonF;if(aIndexPrev1=aIndexesF[iF],aIndexesF[iF]=aLast,kMinOverlapF<=kF&&kF<=kMaxOverlapF){let iR=(d2-1-(kF+baDeltaLength))/2;if(iR<=iMaxR&&aIndexesR[iR]-1<=aLast){let bLastPrev=bF+aLastPrev-(insert?kF+1:kF-1),nCommonR=countCommonItemsR(aStart,aLastPrev,bStart,bLastPrev,isCommon),aIndexPrevFirst=aLastPrev-nCommonR,bIndexPrevFirst=bLastPrev-nCommonR,aEndPreceding=aIndexPrevFirst+1,bEndPreceding=bIndexPrevFirst+1;division.nChangePreceding=d2-1,d2-1===aEndPreceding+bEndPreceding-aStart-bStart?(division.aEndPreceding=aStart,division.bEndPreceding=bStart):(division.aEndPreceding=aEndPreceding,division.bEndPreceding=bEndPreceding),division.nCommonPreceding=nCommonR,nCommonR!==0&&(division.aCommonPreceding=aEndPreceding,division.bCommonPreceding=bEndPreceding),division.nCommonFollowing=nCommonF,nCommonF!==0&&(division.aCommonFollowing=aFirst+1,division.bCommonFollowing=bFirst+1);let aStartFollowing=aLast+1,bStartFollowing=bFirst+nCommonF+1;return division.nChangeFollowing=d2-1,d2-1===aEnd+bEnd-aStartFollowing-bStartFollowing?(division.aStartFollowing=aEnd,division.bStartFollowing=bEnd):(division.aStartFollowing=aStartFollowing,division.bStartFollowing=bStartFollowing),!0}}}return !1},extendOverlappablePathsR=(d2,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division)=>{let bR=bEnd-aEnd,aLength=aEnd-aStart,baDeltaLength=bEnd-bStart-aLength,kMinOverlapR=baDeltaLength-d2,kMaxOverlapR=baDeltaLength+d2,aIndexPrev1=NOT_YET_SET,nR=d2<iMaxR?d2:iMaxR;for(let iR=0,kR=d2;iR<=nR;iR+=1,kR-=2){let insert=iR===0||iR!==d2&&aIndexesR[iR]<aIndexPrev1,aLastPrev=insert?aIndexesR[iR]:aIndexPrev1,aFirst=insert?aLastPrev:aLastPrev-1,bFirst=bR+aFirst-kR,nCommonR=countCommonItemsR(aStart,aFirst-1,bStart,bFirst-1,isCommon),aLast=aFirst-nCommonR;if(aIndexPrev1=aIndexesR[iR],aIndexesR[iR]=aLast,kMinOverlapR<=kR&&kR<=kMaxOverlapR){let iF=(d2+(kR-baDeltaLength))/2;if(iF<=iMaxF&&aLast-1<=aIndexesF[iF]){let bLast=bFirst-nCommonR;if(division.nChangePreceding=d2,d2===aLast+bLast-aStart-bStart?(division.aEndPreceding=aStart,division.bEndPreceding=bStart):(division.aEndPreceding=aLast,division.bEndPreceding=bLast),division.nCommonPreceding=nCommonR,nCommonR!==0&&(division.aCommonPreceding=aLast,division.bCommonPreceding=bLast),division.nChangeFollowing=d2-1,d2===1)division.nCommonFollowing=0,division.aStartFollowing=aEnd,division.bStartFollowing=bEnd;else {let bLastPrev=bR+aLastPrev-(insert?kR-1:kR+1),nCommonF=countCommonItemsF(aLastPrev,aEnd,bLastPrev,bEnd,isCommon);division.nCommonFollowing=nCommonF,nCommonF!==0&&(division.aCommonFollowing=aLastPrev,division.bCommonFollowing=bLastPrev);let aStartFollowing=aLastPrev+nCommonF,bStartFollowing=bLastPrev+nCommonF;d2-1===aEnd+bEnd-aStartFollowing-bStartFollowing?(division.aStartFollowing=aEnd,division.bStartFollowing=bEnd):(division.aStartFollowing=aStartFollowing,division.bStartFollowing=bStartFollowing);}return !0}}}return !1},divide=(nChange,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,aIndexesR,division)=>{let bF=bStart-aStart,bR=bEnd-aEnd,aLength=aEnd-aStart,bLength=bEnd-bStart,baDeltaLength=bLength-aLength,iMaxF=aLength,iMaxR=aLength;if(aIndexesF[0]=aStart-1,aIndexesR[0]=aEnd,baDeltaLength%2===0){let dMin=(nChange||baDeltaLength)/2,dMax=(aLength+bLength)/2;for(let d2=1;d2<=dMax;d2+=1)if(iMaxF=extendPathsF(d2,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF),d2<dMin)iMaxR=extendPathsR(d2,aStart,bStart,bR,isCommon,aIndexesR,iMaxR);else if(extendOverlappablePathsR(d2,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division))return}else {let dMin=((nChange||baDeltaLength)+1)/2,dMax=(aLength+bLength+1)/2,d2=1;for(iMaxF=extendPathsF(d2,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF),d2+=1;d2<=dMax;d2+=1)if(iMaxR=extendPathsR(d2-1,aStart,bStart,bR,isCommon,aIndexesR,iMaxR),d2<dMin)iMaxF=extendPathsF(d2,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF);else if(extendOverlappablePathsF(d2,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division))return}throw new Error(`${pkg}: no overlap aStart=${aStart} aEnd=${aEnd} bStart=${bStart} bEnd=${bEnd}`)},findSubsequences=(nChange,aStart,aEnd,bStart,bEnd,transposed,callbacks,aIndexesF,aIndexesR,division)=>{if(bEnd-bStart<aEnd-aStart){if(transposed=!transposed,transposed&&callbacks.length===1){let{foundSubsequence:foundSubsequence2,isCommon:isCommon2}=callbacks[0];callbacks[1]={foundSubsequence:(nCommon,bCommon,aCommon)=>{foundSubsequence2(nCommon,aCommon,bCommon);},isCommon:(bIndex,aIndex)=>isCommon2(aIndex,bIndex)};}let tStart=aStart,tEnd=aEnd;aStart=bStart,aEnd=bEnd,bStart=tStart,bEnd=tEnd;}let{foundSubsequence,isCommon}=callbacks[transposed?1:0];divide(nChange,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,aIndexesR,division);let{nChangePreceding,aEndPreceding,bEndPreceding,nCommonPreceding,aCommonPreceding,bCommonPreceding,nCommonFollowing,aCommonFollowing,bCommonFollowing,nChangeFollowing,aStartFollowing,bStartFollowing}=division;aStart<aEndPreceding&&bStart<bEndPreceding&&findSubsequences(nChangePreceding,aStart,aEndPreceding,bStart,bEndPreceding,transposed,callbacks,aIndexesF,aIndexesR,division),nCommonPreceding!==0&&foundSubsequence(nCommonPreceding,aCommonPreceding,bCommonPreceding),nCommonFollowing!==0&&foundSubsequence(nCommonFollowing,aCommonFollowing,bCommonFollowing),aStartFollowing<aEnd&&bStartFollowing<bEnd&&findSubsequences(nChangeFollowing,aStartFollowing,aEnd,bStartFollowing,bEnd,transposed,callbacks,aIndexesF,aIndexesR,division);},validateLength=(name,arg)=>{if(typeof arg!="number")throw new TypeError(`${pkg}: ${name} typeof ${typeof arg} is not a number`);if(!Number.isSafeInteger(arg))throw new RangeError(`${pkg}: ${name} value ${arg} is not a safe integer`);if(arg<0)throw new RangeError(`${pkg}: ${name} value ${arg} is a negative integer`)},validateCallback=(name,arg)=>{let type5=typeof arg;if(type5!=="function")throw new TypeError(`${pkg}: ${name} typeof ${type5} is not a function`)};function diffSequence(aLength,bLength,isCommon,foundSubsequence){validateLength("aLength",aLength),validateLength("bLength",bLength),validateCallback("isCommon",isCommon),validateCallback("foundSubsequence",foundSubsequence);let nCommonF=countCommonItemsF(0,aLength,0,bLength,isCommon);if(nCommonF!==0&&foundSubsequence(nCommonF,0,0),aLength!==nCommonF||bLength!==nCommonF){let aStart=nCommonF,bStart=nCommonF,nCommonR=countCommonItemsR(aStart,aLength-1,bStart,bLength-1,isCommon),aEnd=aLength-nCommonR,bEnd=bLength-nCommonR,nCommonFR=nCommonF+nCommonR;aLength!==nCommonFR&&bLength!==nCommonFR&&findSubsequences(0,aStart,aEnd,bStart,bEnd,!1,[{foundSubsequence,isCommon}],[NOT_YET_SET],[NOT_YET_SET],{aCommonFollowing:NOT_YET_SET,aCommonPreceding:NOT_YET_SET,aEndPreceding:NOT_YET_SET,aStartFollowing:NOT_YET_SET,bCommonFollowing:NOT_YET_SET,bCommonPreceding:NOT_YET_SET,bEndPreceding:NOT_YET_SET,bStartFollowing:NOT_YET_SET,nChangeFollowing:NOT_YET_SET,nChangePreceding:NOT_YET_SET,nCommonFollowing:NOT_YET_SET,nCommonPreceding:NOT_YET_SET}),nCommonR!==0&&foundSubsequence(nCommonR,aEnd,bEnd);}}function formatTrailingSpaces(line,trailingSpaceFormatter){return line.replace(/\\s+$/,match=>trailingSpaceFormatter(match))}function printDiffLine(line,isFirstOrLast,color,indicator,trailingSpaceFormatter,emptyFirstOrLastLinePlaceholder){return line.length!==0?color(`${indicator} ${formatTrailingSpaces(line,trailingSpaceFormatter)}`):indicator!==" "?color(indicator):isFirstOrLast&&emptyFirstOrLastLinePlaceholder.length!==0?color(`${indicator} ${emptyFirstOrLastLinePlaceholder}`):""}function printDeleteLine(line,isFirstOrLast,{aColor,aIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder}){return printDiffLine(line,isFirstOrLast,aColor,aIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder)}function printInsertLine(line,isFirstOrLast,{bColor,bIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder}){return printDiffLine(line,isFirstOrLast,bColor,bIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder)}function printCommonLine(line,isFirstOrLast,{commonColor,commonIndicator,commonLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder}){return printDiffLine(line,isFirstOrLast,commonColor,commonIndicator,commonLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder)}function createPatchMark(aStart,aEnd,bStart,bEnd,{patchColor}){return patchColor(`@@ -${aStart+1},${aEnd-aStart} +${bStart+1},${bEnd-bStart} @@`)}function joinAlignedDiffsNoExpand(diffs,options){let iLength=diffs.length,nContextLines=options.contextLines,nContextLines2=nContextLines+nContextLines,jLength=iLength,hasExcessAtStartOrEnd=!1,nExcessesBetweenChanges=0,i=0;for(;i!==iLength;){let iStart=i;for(;i!==iLength&&diffs[i][0]===DIFF_EQUAL;)i+=1;if(iStart!==i)if(iStart===0)i>nContextLines&&(jLength-=i-nContextLines,hasExcessAtStartOrEnd=!0);else if(i===iLength){let n=i-iStart;n>nContextLines&&(jLength-=n-nContextLines,hasExcessAtStartOrEnd=!0);}else {let n=i-iStart;n>nContextLines2&&(jLength-=n-nContextLines2,nExcessesBetweenChanges+=1);}for(;i!==iLength&&diffs[i][0]!==DIFF_EQUAL;)i+=1;}let hasPatch=nExcessesBetweenChanges!==0||hasExcessAtStartOrEnd;nExcessesBetweenChanges!==0?jLength+=nExcessesBetweenChanges+1:hasExcessAtStartOrEnd&&(jLength+=1);let jLast=jLength-1,lines=[],jPatchMark=0;hasPatch&&lines.push("");let aStart=0,bStart=0,aEnd=0,bEnd=0,pushCommonLine=line=>{let j=lines.length;lines.push(printCommonLine(line,j===0||j===jLast,options)),aEnd+=1,bEnd+=1;},pushDeleteLine=line=>{let j=lines.length;lines.push(printDeleteLine(line,j===0||j===jLast,options)),aEnd+=1;},pushInsertLine=line=>{let j=lines.length;lines.push(printInsertLine(line,j===0||j===jLast,options)),bEnd+=1;};for(i=0;i!==iLength;){let iStart=i;for(;i!==iLength&&diffs[i][0]===DIFF_EQUAL;)i+=1;if(iStart!==i)if(iStart===0){i>nContextLines&&(iStart=i-nContextLines,aStart=iStart,bStart=iStart,aEnd=aStart,bEnd=bStart);for(let iCommon=iStart;iCommon!==i;iCommon+=1)pushCommonLine(diffs[iCommon][1]);}else if(i===iLength){let iEnd=i-iStart>nContextLines?iStart+nContextLines:i;for(let iCommon=iStart;iCommon!==iEnd;iCommon+=1)pushCommonLine(diffs[iCommon][1]);}else {let nCommon=i-iStart;if(nCommon>nContextLines2){let iEnd=iStart+nContextLines;for(let iCommon=iStart;iCommon!==iEnd;iCommon+=1)pushCommonLine(diffs[iCommon][1]);lines[jPatchMark]=createPatchMark(aStart,aEnd,bStart,bEnd,options),jPatchMark=lines.length,lines.push("");let nOmit=nCommon-nContextLines2;aStart=aEnd+nOmit,bStart=bEnd+nOmit,aEnd=aStart,bEnd=bStart;for(let iCommon=i-nContextLines;iCommon!==i;iCommon+=1)pushCommonLine(diffs[iCommon][1]);}else for(let iCommon=iStart;iCommon!==i;iCommon+=1)pushCommonLine(diffs[iCommon][1]);}for(;i!==iLength&&diffs[i][0]===DIFF_DELETE;)pushDeleteLine(diffs[i][1]),i+=1;for(;i!==iLength&&diffs[i][0]===DIFF_INSERT;)pushInsertLine(diffs[i][1]),i+=1;}return hasPatch&&(lines[jPatchMark]=createPatchMark(aStart,aEnd,bStart,bEnd,options)),lines.join(`\n`)}function joinAlignedDiffsExpand(diffs,options){return diffs.map((diff2,i,diffs2)=>{let line=diff2[1],isFirstOrLast=i===0||i===diffs2.length-1;switch(diff2[0]){case DIFF_DELETE:return printDeleteLine(line,isFirstOrLast,options);case DIFF_INSERT:return printInsertLine(line,isFirstOrLast,options);default:return printCommonLine(line,isFirstOrLast,options)}}).join(`\n`)}var noColor=string=>string,DIFF_CONTEXT_DEFAULT=5,DIFF_TRUNCATE_THRESHOLD_DEFAULT=0;function getDefaultOptions(){return {aAnnotation:"Expected",aColor:f2.green,aIndicator:"-",bAnnotation:"Received",bColor:f2.red,bIndicator:"+",changeColor:f2.inverse,changeLineTrailingSpaceColor:noColor,commonColor:f2.dim,commonIndicator:" ",commonLineTrailingSpaceColor:noColor,compareKeys:void 0,contextLines:DIFF_CONTEXT_DEFAULT,emptyFirstOrLastLinePlaceholder:"",expand:!0,includeChangeCounts:!1,omitAnnotationLines:!1,patchColor:f2.yellow,truncateThreshold:DIFF_TRUNCATE_THRESHOLD_DEFAULT,truncateAnnotation:"... Diff result is truncated",truncateAnnotationColor:noColor}}function getCompareKeys(compareKeys){return compareKeys&&typeof compareKeys=="function"?compareKeys:void 0}function getContextLines(contextLines){return typeof contextLines=="number"&&Number.isSafeInteger(contextLines)&&contextLines>=0?contextLines:DIFF_CONTEXT_DEFAULT}function normalizeDiffOptions(options={}){return {...getDefaultOptions(),...options,compareKeys:getCompareKeys(options.compareKeys),contextLines:getContextLines(options.contextLines)}}function isEmptyString(lines){return lines.length===1&&lines[0].length===0}function countChanges(diffs){let a2=0,b=0;return diffs.forEach(diff2=>{switch(diff2[0]){case DIFF_DELETE:a2+=1;break;case DIFF_INSERT:b+=1;break}}),{a:a2,b}}function printAnnotation({aAnnotation,aColor,aIndicator,bAnnotation,bColor,bIndicator,includeChangeCounts,omitAnnotationLines},changeCounts){if(omitAnnotationLines)return "";let aRest="",bRest="";if(includeChangeCounts){let aCount=String(changeCounts.a),bCount=String(changeCounts.b),baAnnotationLengthDiff=bAnnotation.length-aAnnotation.length,aAnnotationPadding=" ".repeat(Math.max(0,baAnnotationLengthDiff)),bAnnotationPadding=" ".repeat(Math.max(0,-baAnnotationLengthDiff)),baCountLengthDiff=bCount.length-aCount.length,aCountPadding=" ".repeat(Math.max(0,baCountLengthDiff)),bCountPadding=" ".repeat(Math.max(0,-baCountLengthDiff));aRest=`${aAnnotationPadding}  ${aIndicator} ${aCountPadding}${aCount}`,bRest=`${bAnnotationPadding}  ${bIndicator} ${bCountPadding}${bCount}`;}let a2=`${aIndicator} ${aAnnotation}${aRest}`,b=`${bIndicator} ${bAnnotation}${bRest}`;return `${aColor(a2)}\n${bColor(b)}\n\n`}function printDiffLines(diffs,truncated,options){return printAnnotation(options,countChanges(diffs))+(options.expand?joinAlignedDiffsExpand(diffs,options):joinAlignedDiffsNoExpand(diffs,options))+(truncated?options.truncateAnnotationColor(`\n${options.truncateAnnotation}`):"")}function diffLinesUnified(aLines,bLines,options){let normalizedOptions=normalizeDiffOptions(options),[diffs,truncated]=diffLinesRaw(isEmptyString(aLines)?[]:aLines,isEmptyString(bLines)?[]:bLines,normalizedOptions);return printDiffLines(diffs,truncated,normalizedOptions)}function diffLinesUnified2(aLinesDisplay,bLinesDisplay,aLinesCompare,bLinesCompare,options){if(isEmptyString(aLinesDisplay)&&isEmptyString(aLinesCompare)&&(aLinesDisplay=[],aLinesCompare=[]),isEmptyString(bLinesDisplay)&&isEmptyString(bLinesCompare)&&(bLinesDisplay=[],bLinesCompare=[]),aLinesDisplay.length!==aLinesCompare.length||bLinesDisplay.length!==bLinesCompare.length)return diffLinesUnified(aLinesDisplay,bLinesDisplay,options);let[diffs,truncated]=diffLinesRaw(aLinesCompare,bLinesCompare,options),aIndex=0,bIndex=0;return diffs.forEach(diff2=>{switch(diff2[0]){case DIFF_DELETE:diff2[1]=aLinesDisplay[aIndex],aIndex+=1;break;case DIFF_INSERT:diff2[1]=bLinesDisplay[bIndex],bIndex+=1;break;default:diff2[1]=bLinesDisplay[bIndex],aIndex+=1,bIndex+=1;}}),printDiffLines(diffs,truncated,normalizeDiffOptions(options))}function diffLinesRaw(aLines,bLines,options){let truncate3=options?.truncateThreshold??!1,truncateThreshold=Math.max(Math.floor(options?.truncateThreshold??0),0),aLength=truncate3?Math.min(aLines.length,truncateThreshold):aLines.length,bLength=truncate3?Math.min(bLines.length,truncateThreshold):bLines.length,truncated=aLength!==aLines.length||bLength!==bLines.length,isCommon=(aIndex2,bIndex2)=>aLines[aIndex2]===bLines[bIndex2],diffs=[],aIndex=0,bIndex=0;for(_default(aLength,bLength,isCommon,(nCommon,aCommon,bCommon)=>{for(;aIndex!==aCommon;aIndex+=1)diffs.push(new Diff(DIFF_DELETE,aLines[aIndex]));for(;bIndex!==bCommon;bIndex+=1)diffs.push(new Diff(DIFF_INSERT,bLines[bIndex]));for(;nCommon!==0;nCommon-=1,aIndex+=1,bIndex+=1)diffs.push(new Diff(DIFF_EQUAL,bLines[bIndex]));});aIndex!==aLength;aIndex+=1)diffs.push(new Diff(DIFF_DELETE,aLines[aIndex]));for(;bIndex!==bLength;bIndex+=1)diffs.push(new Diff(DIFF_INSERT,bLines[bIndex]));return [diffs,truncated]}function getNewLineSymbol(string){return string.includes(`\\r\n`)?`\\r\n`:`\n`}function diffStrings(a2,b,options){let truncate3=options?.truncateThreshold??!1,truncateThreshold=Math.max(Math.floor(options?.truncateThreshold??0),0),aLength=a2.length,bLength=b.length;if(truncate3){let aMultipleLines=a2.includes(`\n`),bMultipleLines=b.includes(`\n`),aNewLineSymbol=getNewLineSymbol(a2),bNewLineSymbol=getNewLineSymbol(b),_a2=aMultipleLines?`${a2.split(aNewLineSymbol,truncateThreshold).join(aNewLineSymbol)}\n`:a2,_b=bMultipleLines?`${b.split(bNewLineSymbol,truncateThreshold).join(bNewLineSymbol)}\n`:b;aLength=_a2.length,bLength=_b.length;}let truncated=aLength!==a2.length||bLength!==b.length,isCommon=(aIndex2,bIndex2)=>a2[aIndex2]===b[bIndex2],aIndex=0,bIndex=0,diffs=[];return _default(aLength,bLength,isCommon,(nCommon,aCommon,bCommon)=>{aIndex!==aCommon&&diffs.push(new Diff(DIFF_DELETE,a2.slice(aIndex,aCommon))),bIndex!==bCommon&&diffs.push(new Diff(DIFF_INSERT,b.slice(bIndex,bCommon))),aIndex=aCommon+nCommon,bIndex=bCommon+nCommon,diffs.push(new Diff(DIFF_EQUAL,b.slice(bCommon,bIndex)));}),aIndex!==aLength&&diffs.push(new Diff(DIFF_DELETE,a2.slice(aIndex))),bIndex!==bLength&&diffs.push(new Diff(DIFF_INSERT,b.slice(bIndex))),[diffs,truncated]}function concatenateRelevantDiffs(op,diffs,changeColor){return diffs.reduce((reduced,diff2)=>reduced+(diff2[0]===DIFF_EQUAL?diff2[1]:diff2[0]===op&&diff2[1].length!==0?changeColor(diff2[1]):""),"")}var ChangeBuffer=class{op;line;lines;changeColor;constructor(op,changeColor){this.op=op,this.line=[],this.lines=[],this.changeColor=changeColor;}pushSubstring(substring){this.pushDiff(new Diff(this.op,substring));}pushLine(){this.lines.push(this.line.length!==1?new Diff(this.op,concatenateRelevantDiffs(this.op,this.line,this.changeColor)):this.line[0][0]===this.op?this.line[0]:new Diff(this.op,this.line[0][1])),this.line.length=0;}isLineEmpty(){return this.line.length===0}pushDiff(diff2){this.line.push(diff2);}align(diff2){let string=diff2[1];if(string.includes(`\n`)){let substrings=string.split(`\n`),iLast=substrings.length-1;substrings.forEach((substring,i)=>{i<iLast?(this.pushSubstring(substring),this.pushLine()):substring.length!==0&&this.pushSubstring(substring);});}else this.pushDiff(diff2);}moveLinesTo(lines){this.isLineEmpty()||this.pushLine(),lines.push(...this.lines),this.lines.length=0;}},CommonBuffer=class{deleteBuffer;insertBuffer;lines;constructor(deleteBuffer,insertBuffer){this.deleteBuffer=deleteBuffer,this.insertBuffer=insertBuffer,this.lines=[];}pushDiffCommonLine(diff2){this.lines.push(diff2);}pushDiffChangeLines(diff2){let isDiffEmpty=diff2[1].length===0;(!isDiffEmpty||this.deleteBuffer.isLineEmpty())&&this.deleteBuffer.pushDiff(diff2),(!isDiffEmpty||this.insertBuffer.isLineEmpty())&&this.insertBuffer.pushDiff(diff2);}flushChangeLines(){this.deleteBuffer.moveLinesTo(this.lines),this.insertBuffer.moveLinesTo(this.lines);}align(diff2){let op=diff2[0],string=diff2[1];if(string.includes(`\n`)){let substrings=string.split(`\n`),iLast=substrings.length-1;substrings.forEach((substring,i)=>{if(i===0){let subdiff=new Diff(op,substring);this.deleteBuffer.isLineEmpty()&&this.insertBuffer.isLineEmpty()?(this.flushChangeLines(),this.pushDiffCommonLine(subdiff)):(this.pushDiffChangeLines(subdiff),this.flushChangeLines());}else i<iLast?this.pushDiffCommonLine(new Diff(op,substring)):substring.length!==0&&this.pushDiffChangeLines(new Diff(op,substring));});}else this.pushDiffChangeLines(diff2);}getLines(){return this.flushChangeLines(),this.lines}};function getAlignedDiffs(diffs,changeColor){let deleteBuffer=new ChangeBuffer(DIFF_DELETE,changeColor),insertBuffer=new ChangeBuffer(DIFF_INSERT,changeColor),commonBuffer=new CommonBuffer(deleteBuffer,insertBuffer);return diffs.forEach(diff2=>{switch(diff2[0]){case DIFF_DELETE:deleteBuffer.align(diff2);break;case DIFF_INSERT:insertBuffer.align(diff2);break;default:commonBuffer.align(diff2);}}),commonBuffer.getLines()}function hasCommonDiff(diffs,isMultiline){if(isMultiline){let iLast=diffs.length-1;return diffs.some((diff2,i)=>diff2[0]===DIFF_EQUAL&&(i!==iLast||diff2[1]!==`\n`))}return diffs.some(diff2=>diff2[0]===DIFF_EQUAL)}function diffStringsUnified(a2,b,options){if(a2!==b&&a2.length!==0&&b.length!==0){let isMultiline=a2.includes(`\n`)||b.includes(`\n`),[diffs,truncated]=diffStringsRaw(isMultiline?`${a2}\n`:a2,isMultiline?`${b}\n`:b,!0,options);if(hasCommonDiff(diffs,isMultiline)){let optionsNormalized=normalizeDiffOptions(options),lines=getAlignedDiffs(diffs,optionsNormalized.changeColor);return printDiffLines(lines,truncated,optionsNormalized)}}return diffLinesUnified(a2.split(`\n`),b.split(`\n`),options)}function diffStringsRaw(a2,b,cleanup,options){let[diffs,truncated]=diffStrings(a2,b,options);return cleanup&&diff_cleanupSemantic(diffs),[diffs,truncated]}function getCommonMessage(message,options){let{commonColor}=normalizeDiffOptions(options);return commonColor(message)}var{AsymmetricMatcher:AsymmetricMatcher2,DOMCollection:DOMCollection2,DOMElement:DOMElement2,Immutable:Immutable2,ReactElement:ReactElement2,ReactTestComponent:ReactTestComponent2}=plugins,PLUGINS2=[ReactTestComponent2,ReactElement2,DOMElement2,DOMCollection2,Immutable2,AsymmetricMatcher2],FORMAT_OPTIONS={plugins:PLUGINS2},FALLBACK_FORMAT_OPTIONS={callToJSON:!1,maxDepth:10,plugins:PLUGINS2};function diff(a2,b,options){if(Object.is(a2,b))return "";let aType=getType3(a2),expectedType=aType,omitDifference=!1;if(aType==="object"&&typeof a2.asymmetricMatch=="function"){if(a2.$$typeof!==Symbol.for("jest.asymmetricMatcher")||typeof a2.getExpectedType!="function")return;expectedType=a2.getExpectedType(),omitDifference=expectedType==="string";}if(expectedType!==getType3(b)){let{aAnnotation,aColor,aIndicator,bAnnotation,bColor,bIndicator}=normalizeDiffOptions(options),formatOptions=getFormatOptions(FALLBACK_FORMAT_OPTIONS,options),aDisplay=format(a2,formatOptions),bDisplay=format(b,formatOptions),aDiff=`${aColor(`${aIndicator} ${aAnnotation}:`)} \n${aDisplay}`,bDiff=`${bColor(`${bIndicator} ${bAnnotation}:`)} \n${bDisplay}`;return `${aDiff}\n\n${bDiff}`}if(!omitDifference)switch(aType){case"string":return diffLinesUnified(a2.split(`\n`),b.split(`\n`),options);case"boolean":case"number":return comparePrimitive(a2,b,options);case"map":return compareObjects(sortMap(a2),sortMap(b),options);case"set":return compareObjects(sortSet(a2),sortSet(b),options);default:return compareObjects(a2,b,options)}}function comparePrimitive(a2,b,options){let aFormat=format(a2,FORMAT_OPTIONS),bFormat=format(b,FORMAT_OPTIONS);return aFormat===bFormat?"":diffLinesUnified(aFormat.split(`\n`),bFormat.split(`\n`),options)}function sortMap(map){return new Map(Array.from(map.entries()).sort())}function sortSet(set2){return new Set(Array.from(set2.values()).sort())}function compareObjects(a2,b,options){let difference,hasThrown=!1;try{let formatOptions=getFormatOptions(FORMAT_OPTIONS,options);difference=getObjectsDifference(a2,b,formatOptions,options);}catch{hasThrown=!0;}let noDiffMessage=getCommonMessage(NO_DIFF_MESSAGE,options);if(difference===void 0||difference===noDiffMessage){let formatOptions=getFormatOptions(FALLBACK_FORMAT_OPTIONS,options);difference=getObjectsDifference(a2,b,formatOptions,options),difference!==noDiffMessage&&!hasThrown&&(difference=`${getCommonMessage(SIMILAR_MESSAGE,options)}\n\n${difference}`);}return difference}function getFormatOptions(formatOptions,options){let{compareKeys}=normalizeDiffOptions(options);return {...formatOptions,compareKeys}}function getObjectsDifference(a2,b,formatOptions,options){let formatOptionsZeroIndent={...formatOptions,indent:0},aCompare=format(a2,formatOptionsZeroIndent),bCompare=format(b,formatOptionsZeroIndent);if(aCompare===bCompare)return getCommonMessage(NO_DIFF_MESSAGE,options);{let aDisplay=format(a2,formatOptions),bDisplay=format(b,formatOptions);return diffLinesUnified2(aDisplay.split(`\n`),bDisplay.split(`\n`),aCompare.split(`\n`),bCompare.split(`\n`),options)}}var MAX_DIFF_STRING_LENGTH=2e4;function isAsymmetricMatcher(data){return getType(data)==="Object"&&typeof data.asymmetricMatch=="function"}function isReplaceable(obj1,obj2){let obj1Type=getType(obj1),obj2Type=getType(obj2);return obj1Type===obj2Type&&(obj1Type==="Object"||obj1Type==="Array")}function printDiffOrStringify(expected,received,options){let{aAnnotation,bAnnotation}=normalizeDiffOptions(options);if(typeof expected=="string"&&typeof received=="string"&&expected.length>0&&received.length>0&&expected.length<=MAX_DIFF_STRING_LENGTH&&received.length<=MAX_DIFF_STRING_LENGTH&&expected!==received){if(expected.includes(`\n`)||received.includes(`\n`))return diffStringsUnified(received,expected,options);let[diffs]=diffStringsRaw(received,expected,!0),hasCommonDiff2=diffs.some(diff2=>diff2[0]===DIFF_EQUAL),printLabel=getLabelPrinter(aAnnotation,bAnnotation),expectedLine=printLabel(aAnnotation)+printExpected(getCommonAndChangedSubstrings(diffs,DIFF_DELETE,hasCommonDiff2)),receivedLine=printLabel(bAnnotation)+printReceived(getCommonAndChangedSubstrings(diffs,DIFF_INSERT,hasCommonDiff2));return `${expectedLine}\n${receivedLine}`}let clonedExpected=deepClone(expected,{forceWritable:!0}),clonedReceived=deepClone(received,{forceWritable:!0}),{replacedExpected,replacedActual}=replaceAsymmetricMatcher(clonedExpected,clonedReceived);return diff(replacedExpected,replacedActual,options)}function replaceAsymmetricMatcher(actual,expected,actualReplaced=new WeakSet,expectedReplaced=new WeakSet){return isReplaceable(actual,expected)?actualReplaced.has(actual)||expectedReplaced.has(expected)?{replacedActual:actual,replacedExpected:expected}:(actualReplaced.add(actual),expectedReplaced.add(expected),getOwnProperties(expected).forEach(key=>{let expectedValue=expected[key],actualValue=actual[key];if(isAsymmetricMatcher(expectedValue))expectedValue.asymmetricMatch(actualValue)&&(actual[key]=expectedValue);else if(isAsymmetricMatcher(actualValue))actualValue.asymmetricMatch(expectedValue)&&(expected[key]=actualValue);else if(isReplaceable(actualValue,expectedValue)){let replaced=replaceAsymmetricMatcher(actualValue,expectedValue,actualReplaced,expectedReplaced);actual[key]=replaced.replacedActual,expected[key]=replaced.replacedExpected;}}),{replacedActual:actual,replacedExpected:expected}):{replacedActual:actual,replacedExpected:expected}}function getLabelPrinter(...strings){let maxLength=strings.reduce((max,string)=>string.length>max?string.length:max,0);return string=>`${string}: ${" ".repeat(maxLength-string.length)}`}var SPACE_SYMBOL="\\xB7";function replaceTrailingSpaces(text){return text.replace(/\\s+$/gm,spaces=>SPACE_SYMBOL.repeat(spaces.length))}function printReceived(object){return f2.red(replaceTrailingSpaces(stringify(object)))}function printExpected(value){return f2.green(replaceTrailingSpaces(stringify(value)))}function getCommonAndChangedSubstrings(diffs,op,hasCommonDiff2){return diffs.reduce((reduced,diff2)=>reduced+(diff2[0]===DIFF_EQUAL?diff2[1]:diff2[0]===op?hasCommonDiff2?f2.inverse(diff2[1]):diff2[1]:""),"")}function d(e,t){if(!e)throw new Error(t)}function y(e,t){return typeof t===e}function w(e){return e instanceof Promise}function f3(e,t,n){Object.defineProperty(e,t,n);}function l(e,t,n){Object.defineProperty(e,t,{value:n});}var u=Symbol.for("tinyspy:spy"),x=new Set,P=e=>{e.called=!1,e.callCount=0,e.calls=[],e.results=[],e.resolves=[],e.next=[];},K=e=>(f3(e,u,{value:{reset:()=>P(e[u])}}),e[u]),T=e=>e[u]||K(e);function m2(e){d(y("function",e)||y("undefined",e),"cannot spy on a non-function value");let t=function(...s){let r=T(t);r.called=!0,r.callCount++,r.calls.push(s);let S=r.next.shift();if(S){r.results.push(S);let[o,g2]=S;if(o==="ok")return g2;throw g2}let p2,c="ok",a2=r.results.length;if(r.impl)try{new.target?p2=Reflect.construct(r.impl,s,new.target):p2=r.impl.apply(this,s),c="ok";}catch(o){throw p2=o,c="error",r.results.push([c,o]),o}let R=[c,p2];return w(p2)&&p2.then(o=>r.resolves[a2]=["ok",o],o=>r.resolves[a2]=["error",o]),r.results.push(R),p2};l(t,"_isMockFunction",!0),l(t,"length",e?e.length:0),l(t,"name",e&&e.name||"spy");let n=T(t);return n.reset(),n.impl=e,t}var k=(e,t)=>Object.getOwnPropertyDescriptor(e,t),O=(e,t)=>{t!=null&&typeof t=="function"&&t.prototype!=null&&Object.setPrototypeOf(e.prototype,t.prototype);};function C2(e,t,n){d(!y("undefined",e),"spyOn could not find an object to spy upon"),d(y("object",e)||y("function",e),"cannot spyOn on a primitive value");let[s,r]=(()=>{if(!y("object",t))return [t,"value"];if("getter"in t&&"setter"in t)throw new Error("cannot spy on both getter and setter");if("getter"in t)return [t.getter,"get"];if("setter"in t)return [t.setter,"set"];throw new Error("specify getter or setter to spy on")})(),S=k(e,s),p2=Object.getPrototypeOf(e),c=p2&&k(p2,s),a2=S||c;d(a2||s in e,`${String(s)} does not exist`);let R=!1;r==="value"&&a2&&!a2.value&&a2.get&&(r="get",R=!0,n=a2.get());let o;a2?o=a2[r]:r!=="value"?o=()=>e[s]:o=e[s];let g2=v=>{let{value:M,...h2}=a2||{configurable:!0,writable:!0};r!=="value"&&delete h2.writable,h2[r]=v,f3(e,s,h2);},b=()=>a2?f3(e,s,a2):g2(o);n||(n=o);let i=m2(n);r==="value"&&O(i,o);let I=i[u];return l(I,"restore",b),l(I,"getOriginal",()=>R?o():o),l(I,"willCall",v=>(I.impl=v,i)),g2(R?()=>(O(i,n),i):i),x.add(i),i}var mocks=new Set;function isMockFunction(fn22){return typeof fn22=="function"&&"_isMockFunction"in fn22&&fn22._isMockFunction}function spyOn(obj,method,accessType){let objMethod=accessType?{[{get:"getter",set:"setter"}[accessType]]:method}:method,stub=C2(obj,objMethod);return enhanceSpy(stub)}var callOrder=0;function enhanceSpy(spy){let stub=spy,implementation,instances=[],contexts=[],invocations=[],state=T(spy),mockContext={get calls(){return state.calls},get contexts(){return contexts},get instances(){return instances},get invocationCallOrder(){return invocations},get results(){return state.results.map(([callType,value])=>({type:callType==="error"?"throw":"return",value}))},get settledResults(){return state.resolves.map(([callType,value])=>({type:callType==="error"?"rejected":"fulfilled",value}))},get lastCall(){return state.calls[state.calls.length-1]}},onceImplementations=[],implementationChangedTemporarily=!1;function mockCall(...args){return instances.push(this),contexts.push(this),invocations.push(++callOrder),(implementationChangedTemporarily?implementation:onceImplementations.shift()||implementation||state.getOriginal()||(()=>{})).apply(this,args)}let name=stub.name;stub.getMockName=()=>name||"vi.fn()",stub.mockName=n=>(name=n,stub),stub.mockClear=()=>(state.reset(),instances=[],contexts=[],invocations=[],stub),stub.mockReset=()=>(stub.mockClear(),implementation=()=>{},onceImplementations=[],stub),stub.mockRestore=()=>(stub.mockReset(),state.restore(),implementation=void 0,stub),stub.getMockImplementation=()=>implementation,stub.mockImplementation=fn22=>(implementation=fn22,state.willCall(mockCall),stub),stub.mockImplementationOnce=fn22=>(onceImplementations.push(fn22),stub);function withImplementation(fn22,cb){let originalImplementation=implementation;implementation=fn22,state.willCall(mockCall),implementationChangedTemporarily=!0;let reset=()=>{implementation=originalImplementation,implementationChangedTemporarily=!1;},result=cb();return result instanceof Promise?result.then(()=>(reset(),stub)):(reset(),stub)}return stub.withImplementation=withImplementation,stub.mockReturnThis=()=>stub.mockImplementation(function(){return this}),stub.mockReturnValue=val=>stub.mockImplementation(()=>val),stub.mockReturnValueOnce=val=>stub.mockImplementationOnce(()=>val),stub.mockResolvedValue=val=>stub.mockImplementation(()=>Promise.resolve(val)),stub.mockResolvedValueOnce=val=>stub.mockImplementationOnce(()=>Promise.resolve(val)),stub.mockRejectedValue=val=>stub.mockImplementation(()=>Promise.reject(val)),stub.mockRejectedValueOnce=val=>stub.mockImplementationOnce(()=>Promise.reject(val)),Object.defineProperty(stub,"mock",{get:()=>mockContext}),state.willCall(mockCall),mocks.add(stub),stub}function fn(implementation){let enhancedSpy=enhanceSpy(C2({spy:implementation||function(){}},"spy"));return implementation&&enhancedSpy.mockImplementation(implementation),enhancedSpy}var IS_RECORD_SYMBOL="@@__IMMUTABLE_RECORD__@@",IS_COLLECTION_SYMBOL="@@__IMMUTABLE_ITERABLE__@@";function isImmutable(v){return v&&(v[IS_COLLECTION_SYMBOL]||v[IS_RECORD_SYMBOL])}var OBJECT_PROTO=Object.getPrototypeOf({});function getUnserializableMessage(err){return err instanceof Error?`<unserializable>: ${err.message}`:typeof err=="string"?`<unserializable>: ${err}`:"<unserializable>"}function serializeValue(val,seen=new WeakMap){if(!val||typeof val=="string")return val;if(typeof val=="function")return `Function<${val.name||"anonymous"}>`;if(typeof val=="symbol")return val.toString();if(typeof val!="object")return val;if(isImmutable(val))return serializeValue(val.toJSON(),seen);if(val instanceof Promise||val.constructor&&val.constructor.prototype==="AsyncFunction")return "Promise";if(typeof Element<"u"&&val instanceof Element)return val.tagName;if(typeof val.asymmetricMatch=="function")return `${val.toString()} ${format2(val.sample)}`;if(typeof val.toJSON=="function")return serializeValue(val.toJSON(),seen);if(seen.has(val))return seen.get(val);if(Array.isArray(val)){let clone2=new Array(val.length);return seen.set(val,clone2),val.forEach((e,i)=>{try{clone2[i]=serializeValue(e,seen);}catch(err){clone2[i]=getUnserializableMessage(err);}}),clone2}else {let clone2=Object.create(null);seen.set(val,clone2);let obj=val;for(;obj&&obj!==OBJECT_PROTO;)Object.getOwnPropertyNames(obj).forEach(key=>{if(!(key in clone2))try{clone2[key]=serializeValue(val[key],seen);}catch(err){delete clone2[key],clone2[key]=getUnserializableMessage(err);}}),obj=Object.getPrototypeOf(obj);return clone2}}function normalizeErrorMessage(message){return message.replace(/__(vite_ssr_import|vi_import)_\\d+__\\./g,"")}function processError(_err,diffOptions,seen=new WeakSet){if(!_err||typeof _err!="object")return {message:String(_err)};let err=_err;err.stack&&(err.stackStr=String(err.stack)),err.name&&(err.nameStr=String(err.name)),(err.showDiff||err.showDiff===void 0&&err.expected!==void 0&&err.actual!==void 0)&&(err.diff=printDiffOrStringify(err.actual,err.expected,{...diffOptions,...err.diffOptions})),typeof err.expected!="string"&&(err.expected=stringify(err.expected,10)),typeof err.actual!="string"&&(err.actual=stringify(err.actual,10));try{typeof err.message=="string"&&(err.message=normalizeErrorMessage(err.message));}catch{}try{!seen.has(err)&&typeof err.cause=="object"&&(seen.add(err),err.cause=processError(err.cause,diffOptions,seen));}catch{}try{return serializeValue(err)}catch(e){return serializeValue(new Error(`Failed to fully serialize error: ${e?.message}\nInner error message: ${err?.message}`))}}var MATCHERS_OBJECT=Symbol.for("matchers-object"),JEST_MATCHERS_OBJECT=Symbol.for("$$jest-matchers-object-storybook"),GLOBAL_EXPECT=Symbol.for("expect-global"),ASYMMETRIC_MATCHERS_OBJECT=Symbol.for("asymmetric-matchers-object");if(!Object.prototype.hasOwnProperty.call(globalThis,MATCHERS_OBJECT)){let globalState=new WeakMap;Object.defineProperty(globalThis,MATCHERS_OBJECT,{get:()=>globalState});}if(!Object.prototype.hasOwnProperty.call(globalThis,JEST_MATCHERS_OBJECT)){let matchers=Object.create(null),customEqualityTesters=[];Object.defineProperty(globalThis,JEST_MATCHERS_OBJECT,{configurable:!0,get:()=>({state:globalThis[MATCHERS_OBJECT].get(globalThis[GLOBAL_EXPECT]),matchers,customEqualityTesters})});}if(!Object.prototype.hasOwnProperty.call(globalThis,ASYMMETRIC_MATCHERS_OBJECT)){let assymetricMatchers=Object.create(null);Object.defineProperty(globalThis,ASYMMETRIC_MATCHERS_OBJECT,{get:()=>assymetricMatchers});}function getState(expect4){return globalThis[MATCHERS_OBJECT].get(expect4)}function setState(state,expect4){let map=globalThis[MATCHERS_OBJECT],current=map.get(expect4)||{};Object.assign(current,state),map.set(expect4,current);}var EXPECTED_COLOR=f2.green,RECEIVED_COLOR=f2.red,INVERTED_COLOR=f2.inverse,BOLD_WEIGHT=f2.bold,DIM_COLOR=f2.dim;function matcherHint(matcherName,received="received",expected="expected",options={}){let{comment="",isDirectExpectCall=!1,isNot=!1,promise="",secondArgument="",expectedColor=EXPECTED_COLOR,receivedColor=RECEIVED_COLOR,secondArgumentColor=EXPECTED_COLOR}=options,hint="",dimString="expect";return !isDirectExpectCall&&received!==""&&(hint+=DIM_COLOR(`${dimString}(`)+receivedColor(received),dimString=")"),promise!==""&&(hint+=DIM_COLOR(`${dimString}.`)+promise,dimString=""),isNot&&(hint+=`${DIM_COLOR(`${dimString}.`)}not`,dimString=""),matcherName.includes(".")?dimString+=matcherName:(hint+=DIM_COLOR(`${dimString}.`)+matcherName,dimString=""),expected===""?dimString+="()":(hint+=DIM_COLOR(`${dimString}(`)+expectedColor(expected),secondArgument&&(hint+=DIM_COLOR(", ")+secondArgumentColor(secondArgument)),dimString=")"),comment!==""&&(dimString+=` // ${comment}`),dimString!==""&&(hint+=DIM_COLOR(dimString)),hint}var SPACE_SYMBOL2="\\xB7";function replaceTrailingSpaces2(text){return text.replace(/\\s+$/gm,spaces=>SPACE_SYMBOL2.repeat(spaces.length))}function printReceived2(object){return RECEIVED_COLOR(replaceTrailingSpaces2(stringify(object)))}function printExpected2(value){return EXPECTED_COLOR(replaceTrailingSpaces2(stringify(value)))}function getMatcherUtils(){return {EXPECTED_COLOR,RECEIVED_COLOR,INVERTED_COLOR,BOLD_WEIGHT,DIM_COLOR,diff,matcherHint,printReceived:printReceived2,printExpected:printExpected2,printDiffOrStringify}}function getCustomEqualityTesters(){return globalThis[JEST_MATCHERS_OBJECT].customEqualityTesters}function equals(a2,b,customTesters,strictCheck){return customTesters=customTesters||[],eq(a2,b,[],[],customTesters,strictCheck?hasKey:hasDefinedKey)}function isAsymmetric(obj){return !!obj&&typeof obj=="object"&&"asymmetricMatch"in obj&&isA("Function",obj.asymmetricMatch)}function asymmetricMatch(a2,b){let asymmetricA=isAsymmetric(a2),asymmetricB=isAsymmetric(b);if(!(asymmetricA&&asymmetricB)){if(asymmetricA)return a2.asymmetricMatch(b);if(asymmetricB)return b.asymmetricMatch(a2)}}function eq(a2,b,aStack,bStack,customTesters,hasKey2){let result=!0,asymmetricResult=asymmetricMatch(a2,b);if(asymmetricResult!==void 0)return asymmetricResult;let testerContext={equals};for(let i=0;i<customTesters.length;i++){let customTesterResult=customTesters[i].call(testerContext,a2,b,customTesters);if(customTesterResult!==void 0)return customTesterResult}if(a2 instanceof Error&&b instanceof Error)return a2.message===b.message;if(typeof URL=="function"&&a2 instanceof URL&&b instanceof URL)return a2.href===b.href;if(Object.is(a2,b))return !0;if(a2===null||b===null)return a2===b;let className=Object.prototype.toString.call(a2);if(className!==Object.prototype.toString.call(b))return !1;switch(className){case"[object Boolean]":case"[object String]":case"[object Number]":return typeof a2!=typeof b?!1:typeof a2!="object"&&typeof b!="object"?Object.is(a2,b):Object.is(a2.valueOf(),b.valueOf());case"[object Date]":{let numA=+a2,numB=+b;return numA===numB||Number.isNaN(numA)&&Number.isNaN(numB)}case"[object RegExp]":return a2.source===b.source&&a2.flags===b.flags}if(typeof a2!="object"||typeof b!="object")return !1;if(isDomNode(a2)&&isDomNode(b))return a2.isEqualNode(b);let length=aStack.length;for(;length--;){if(aStack[length]===a2)return bStack[length]===b;if(bStack[length]===b)return !1}if(aStack.push(a2),bStack.push(b),className==="[object Array]"&&a2.length!==b.length)return !1;let aKeys=keys(a2,hasKey2),key,size=aKeys.length;if(keys(b,hasKey2).length!==size)return !1;for(;size--;)if(key=aKeys[size],result=hasKey2(b,key)&&eq(a2[key],b[key],aStack,bStack,customTesters,hasKey2),!result)return !1;return aStack.pop(),bStack.pop(),result}function keys(obj,hasKey2){let keys2=[];for(let key in obj)hasKey2(obj,key)&&keys2.push(key);return keys2.concat(Object.getOwnPropertySymbols(obj).filter(symbol=>Object.getOwnPropertyDescriptor(obj,symbol).enumerable))}function hasDefinedKey(obj,key){return hasKey(obj,key)&&obj[key]!==void 0}function hasKey(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)}function isA(typeName,value){return Object.prototype.toString.apply(value)===`[object ${typeName}]`}function isDomNode(obj){return obj!==null&&typeof obj=="object"&&"nodeType"in obj&&typeof obj.nodeType=="number"&&"nodeName"in obj&&typeof obj.nodeName=="string"&&"isEqualNode"in obj&&typeof obj.isEqualNode=="function"}var IS_KEYED_SENTINEL2="@@__IMMUTABLE_KEYED__@@",IS_SET_SENTINEL2="@@__IMMUTABLE_SET__@@",IS_LIST_SENTINEL2="@@__IMMUTABLE_LIST__@@",IS_ORDERED_SENTINEL2="@@__IMMUTABLE_ORDERED__@@",IS_RECORD_SYMBOL2="@@__IMMUTABLE_RECORD__@@";function isImmutableUnorderedKeyed(maybeKeyed){return !!(maybeKeyed&&maybeKeyed[IS_KEYED_SENTINEL2]&&!maybeKeyed[IS_ORDERED_SENTINEL2])}function isImmutableUnorderedSet(maybeSet){return !!(maybeSet&&maybeSet[IS_SET_SENTINEL2]&&!maybeSet[IS_ORDERED_SENTINEL2])}function isObjectLiteral(source){return source!=null&&typeof source=="object"&&!Array.isArray(source)}function isImmutableList(source){return !!(source&&isObjectLiteral(source)&&source[IS_LIST_SENTINEL2])}function isImmutableOrderedKeyed(source){return !!(source&&isObjectLiteral(source)&&source[IS_KEYED_SENTINEL2]&&source[IS_ORDERED_SENTINEL2])}function isImmutableOrderedSet(source){return !!(source&&isObjectLiteral(source)&&source[IS_SET_SENTINEL2]&&source[IS_ORDERED_SENTINEL2])}function isImmutableRecord(source){return !!(source&&isObjectLiteral(source)&&source[IS_RECORD_SYMBOL2])}var IteratorSymbol=Symbol.iterator;function hasIterator(object){return !!(object!=null&&object[IteratorSymbol])}function iterableEquality(a2,b,customTesters=[],aStack=[],bStack=[]){if(typeof a2!="object"||typeof b!="object"||Array.isArray(a2)||Array.isArray(b)||!hasIterator(a2)||!hasIterator(b))return;if(a2.constructor!==b.constructor)return !1;let length=aStack.length;for(;length--;)if(aStack[length]===a2)return bStack[length]===b;aStack.push(a2),bStack.push(b);let filteredCustomTesters=[...customTesters.filter(t=>t!==iterableEquality),iterableEqualityWithStack];function iterableEqualityWithStack(a22,b2){return iterableEquality(a22,b2,[...customTesters],[...aStack],[...bStack])}if(a2.size!==void 0){if(a2.size!==b.size)return !1;if(isA("Set",a2)||isImmutableUnorderedSet(a2)){let allFound=!0;for(let aValue of a2)if(!b.has(aValue)){let has=!1;for(let bValue of b)equals(aValue,bValue,filteredCustomTesters)===!0&&(has=!0);if(has===!1){allFound=!1;break}}return aStack.pop(),bStack.pop(),allFound}else if(isA("Map",a2)||isImmutableUnorderedKeyed(a2)){let allFound=!0;for(let aEntry of a2)if(!b.has(aEntry[0])||!equals(aEntry[1],b.get(aEntry[0]),filteredCustomTesters)){let has=!1;for(let bEntry of b){let matchedKey=equals(aEntry[0],bEntry[0],filteredCustomTesters),matchedValue=!1;matchedKey===!0&&(matchedValue=equals(aEntry[1],bEntry[1],filteredCustomTesters)),matchedValue===!0&&(has=!0);}if(has===!1){allFound=!1;break}}return aStack.pop(),bStack.pop(),allFound}}let bIterator=b[IteratorSymbol]();for(let aValue of a2){let nextB=bIterator.next();if(nextB.done||!equals(aValue,nextB.value,filteredCustomTesters))return !1}if(!bIterator.next().done)return !1;if(!isImmutableList(a2)&&!isImmutableOrderedKeyed(a2)&&!isImmutableOrderedSet(a2)&&!isImmutableRecord(a2)){let aEntries=Object.entries(a2),bEntries=Object.entries(b);if(!equals(aEntries,bEntries))return !1}return aStack.pop(),bStack.pop(),!0}function hasPropertyInObject(object,key){return !object||typeof object!="object"||object===Object.prototype?!1:Object.prototype.hasOwnProperty.call(object,key)||hasPropertyInObject(Object.getPrototypeOf(object),key)}function isObjectWithKeys(a2){return isObject(a2)&&!(a2 instanceof Error)&&!Array.isArray(a2)&&!(a2 instanceof Date)}function subsetEquality(object,subset,customTesters=[]){let filteredCustomTesters=customTesters.filter(t=>t!==subsetEquality),subsetEqualityWithContext=(seenReferences=new WeakMap)=>(object2,subset2)=>{if(isObjectWithKeys(subset2))return Object.keys(subset2).every(key=>{if(subset2[key]!=null&&typeof subset2[key]=="object"){if(seenReferences.has(subset2[key]))return equals(object2[key],subset2[key],filteredCustomTesters);seenReferences.set(subset2[key],!0);}let result=object2!=null&&hasPropertyInObject(object2,key)&&equals(object2[key],subset2[key],[...filteredCustomTesters,subsetEqualityWithContext(seenReferences)]);return seenReferences.delete(subset2[key]),result})};return subsetEqualityWithContext()(object,subset)}function typeEquality(a2,b){if(!(a2==null||b==null||a2.constructor===b.constructor))return !1}function arrayBufferEquality(a2,b){let dataViewA=a2,dataViewB=b;if(!(a2 instanceof DataView&&b instanceof DataView)){if(!(a2 instanceof ArrayBuffer)||!(b instanceof ArrayBuffer))return;try{dataViewA=new DataView(a2),dataViewB=new DataView(b);}catch{return}}if(dataViewA.byteLength!==dataViewB.byteLength)return !1;for(let i=0;i<dataViewA.byteLength;i++)if(dataViewA.getUint8(i)!==dataViewB.getUint8(i))return !1;return !0}function sparseArrayEquality(a2,b,customTesters=[]){if(!Array.isArray(a2)||!Array.isArray(b))return;let aKeys=Object.keys(a2),bKeys=Object.keys(b),filteredCustomTesters=customTesters.filter(t=>t!==sparseArrayEquality);return equals(a2,b,filteredCustomTesters,!0)&&equals(aKeys,bKeys)}function generateToBeMessage(deepEqualityName,expected="#{this}",actual="#{exp}"){let toBeMessage=`expected ${expected} to be ${actual} // Object.is equality`;return ["toStrictEqual","toEqual"].includes(deepEqualityName)?`${toBeMessage}\n\nIf it should pass with deep equality, replace "toBe" with "${deepEqualityName}"\n\nExpected: ${expected}\nReceived: serializes to the same string\n`:toBeMessage}function pluralize(word,count){return `${count} ${word}${count===1?"":"s"}`}function getObjectKeys(object){return [...Object.keys(object),...Object.getOwnPropertySymbols(object).filter(s=>{var _a2;return (_a2=Object.getOwnPropertyDescriptor(object,s))==null?void 0:_a2.enumerable})]}function getObjectSubset(object,subset,customTesters=[]){let stripped=0,getObjectSubsetWithContext=(seenReferences=new WeakMap)=>(object2,subset2)=>{if(Array.isArray(object2)){if(Array.isArray(subset2)&&subset2.length===object2.length)return subset2.map((sub,i)=>getObjectSubsetWithContext(seenReferences)(object2[i],sub))}else {if(object2 instanceof Date)return object2;if(isObject(object2)&&isObject(subset2)){if(equals(object2,subset2,[...customTesters,iterableEquality,subsetEquality]))return subset2;let trimmed={};seenReferences.set(object2,trimmed);for(let key of getObjectKeys(object2))hasPropertyInObject(subset2,key)?trimmed[key]=seenReferences.has(object2[key])?seenReferences.get(object2[key]):getObjectSubsetWithContext(seenReferences)(object2[key],subset2[key]):seenReferences.has(object2[key])||(stripped+=1,isObject(object2[key])&&(stripped+=getObjectKeys(object2[key]).length),getObjectSubsetWithContext(seenReferences)(object2[key],subset2[key]));if(getObjectKeys(trimmed).length>0)return trimmed}}return object2};return {subset:getObjectSubsetWithContext()(object,subset),stripped}}var AsymmetricMatcher3=class{constructor(sample,inverse=!1){this.sample=sample,this.inverse=inverse;}$$typeof=Symbol.for("jest.asymmetricMatcher");getMatcherContext(expect4){return {...getState(expect4||globalThis[GLOBAL_EXPECT]),equals,isNot:this.inverse,customTesters:getCustomEqualityTesters(),utils:{...getMatcherUtils(),diff,stringify,iterableEquality,subsetEquality}}}[Symbol.for("chai/inspect")](options){let result=stringify(this,options.depth,{min:!0});return result.length<=options.truncate?result:`${this.toString()}{\\u2026}`}},StringContaining=class extends AsymmetricMatcher3{constructor(sample,inverse=!1){if(!isA("String",sample))throw new Error("Expected is not a string");super(sample,inverse);}asymmetricMatch(other){let result=isA("String",other)&&other.includes(this.sample);return this.inverse?!result:result}toString(){return `String${this.inverse?"Not":""}Containing`}getExpectedType(){return "string"}},Anything=class extends AsymmetricMatcher3{asymmetricMatch(other){return other!=null}toString(){return "Anything"}toAsymmetricMatcher(){return "Anything"}},ObjectContaining=class extends AsymmetricMatcher3{constructor(sample,inverse=!1){super(sample,inverse);}getPrototype(obj){return Object.getPrototypeOf?Object.getPrototypeOf(obj):obj.constructor.prototype===obj?null:obj.constructor.prototype}hasProperty(obj,property){return obj?Object.prototype.hasOwnProperty.call(obj,property)?!0:this.hasProperty(this.getPrototype(obj),property):!1}asymmetricMatch(other){if(typeof this.sample!="object")throw new TypeError(`You must provide an object to ${this.toString()}, not \'${typeof this.sample}\'.`);let result=!0,matcherContext=this.getMatcherContext();for(let property in this.sample)if(!this.hasProperty(other,property)||!equals(this.sample[property],other[property],matcherContext.customTesters)){result=!1;break}return this.inverse?!result:result}toString(){return `Object${this.inverse?"Not":""}Containing`}getExpectedType(){return "object"}},ArrayContaining=class extends AsymmetricMatcher3{constructor(sample,inverse=!1){super(sample,inverse);}asymmetricMatch(other){if(!Array.isArray(this.sample))throw new TypeError(`You must provide an array to ${this.toString()}, not \'${typeof this.sample}\'.`);let matcherContext=this.getMatcherContext(),result=this.sample.length===0||Array.isArray(other)&&this.sample.every(item=>other.some(another=>equals(item,another,matcherContext.customTesters)));return this.inverse?!result:result}toString(){return `Array${this.inverse?"Not":""}Containing`}getExpectedType(){return "array"}},Any=class extends AsymmetricMatcher3{constructor(sample){if(typeof sample>"u")throw new TypeError("any() expects to be passed a constructor function. Please pass one or use anything() to match any object.");super(sample);}fnNameFor(func){if(func.name)return func.name;let matches3=Function.prototype.toString.call(func).match(/^(?:async)?\\s*function\\s*(?:\\*\\s*)?([\\w$]+)\\s*\\(/);return matches3?matches3[1]:"<anonymous>"}asymmetricMatch(other){return this.sample===String?typeof other=="string"||other instanceof String:this.sample===Number?typeof other=="number"||other instanceof Number:this.sample===Function?typeof other=="function"||other instanceof Function:this.sample===Boolean?typeof other=="boolean"||other instanceof Boolean:this.sample===BigInt?typeof other=="bigint"||other instanceof BigInt:this.sample===Symbol?typeof other=="symbol"||other instanceof Symbol:this.sample===Object?typeof other=="object":other instanceof this.sample}toString(){return "Any"}getExpectedType(){return this.sample===String?"string":this.sample===Number?"number":this.sample===Function?"function":this.sample===Object?"object":this.sample===Boolean?"boolean":this.fnNameFor(this.sample)}toAsymmetricMatcher(){return `Any<${this.fnNameFor(this.sample)}>`}},StringMatching=class extends AsymmetricMatcher3{constructor(sample,inverse=!1){if(!isA("String",sample)&&!isA("RegExp",sample))throw new Error("Expected is not a String or a RegExp");super(new RegExp(sample),inverse);}asymmetricMatch(other){let result=isA("String",other)&&this.sample.test(other);return this.inverse?!result:result}toString(){return `String${this.inverse?"Not":""}Matching`}getExpectedType(){return "string"}},CloseTo=class extends AsymmetricMatcher3{precision;constructor(sample,precision=2,inverse=!1){if(!isA("Number",sample))throw new Error("Expected is not a Number");if(!isA("Number",precision))throw new Error("Precision is not a Number");super(sample),this.inverse=inverse,this.precision=precision;}asymmetricMatch(other){if(!isA("Number",other))return !1;let result=!1;return other===Number.POSITIVE_INFINITY&&this.sample===Number.POSITIVE_INFINITY||other===Number.NEGATIVE_INFINITY&&this.sample===Number.NEGATIVE_INFINITY?result=!0:result=Math.abs(this.sample-other)<10**-this.precision/2,this.inverse?!result:result}toString(){return `Number${this.inverse?"Not":""}CloseTo`}getExpectedType(){return "number"}toAsymmetricMatcher(){return [this.toString(),this.sample,`(${pluralize("digit",this.precision)})`].join(" ")}},JestAsymmetricMatchers=(chai,utils)=>{utils.addMethod(chai.expect,"anything",()=>new Anything),utils.addMethod(chai.expect,"any",expected=>new Any(expected)),utils.addMethod(chai.expect,"stringContaining",expected=>new StringContaining(expected)),utils.addMethod(chai.expect,"objectContaining",expected=>new ObjectContaining(expected)),utils.addMethod(chai.expect,"arrayContaining",expected=>new ArrayContaining(expected)),utils.addMethod(chai.expect,"stringMatching",expected=>new StringMatching(expected)),utils.addMethod(chai.expect,"closeTo",(expected,precision)=>new CloseTo(expected,precision)),chai.expect.not={stringContaining:expected=>new StringContaining(expected,!0),objectContaining:expected=>new ObjectContaining(expected,!0),arrayContaining:expected=>new ArrayContaining(expected,!0),stringMatching:expected=>new StringMatching(expected,!0),closeTo:(expected,precision)=>new CloseTo(expected,precision,!0)};};function recordAsyncExpect(test3,promise){return test3&&promise instanceof Promise&&(promise=promise.finally(()=>{let index=test3.promises.indexOf(promise);index!==-1&&test3.promises.splice(index,1);}),test3.promises||(test3.promises=[]),test3.promises.push(promise)),promise}function wrapSoft(utils,fn3){return function(...args){var _a2;if(!utils.flag(this,"soft"))return fn3.apply(this,args);let test3=utils.flag(this,"vitest-test");if(!test3)throw new Error("expect.soft() can only be used inside a test");try{return fn3.apply(this,args)}catch(err){test3.result||(test3.result={state:"fail"}),test3.result.state="fail",(_a2=test3.result).errors||(_a2.errors=[]),test3.result.errors.push(processError(err));}}}var JestChaiExpect=(chai,utils)=>{let{AssertionError:AssertionError2}=chai,customTesters=getCustomEqualityTesters();function def(name,fn3){let addMethod2=n=>{let softWrapper=wrapSoft(utils,fn3);utils.addMethod(chai.Assertion.prototype,n,softWrapper),utils.addMethod(globalThis[JEST_MATCHERS_OBJECT].matchers,n,softWrapper);};Array.isArray(name)?name.forEach(n=>addMethod2(n)):addMethod2(name);}["throw","throws","Throw"].forEach(m3=>{utils.overwriteMethod(chai.Assertion.prototype,m3,_super=>function(...args){let promise=utils.flag(this,"promise"),object=utils.flag(this,"object"),isNot=utils.flag(this,"negate");if(promise==="rejects")utils.flag(this,"object",()=>{throw object});else if(promise==="resolves"&&typeof object!="function"){if(isNot)return;{let message=utils.flag(this,"message")||"expected promise to throw an error, but it didn\'t",error={showDiff:!1};throw new AssertionError2(message,error,utils.flag(this,"ssfi"))}}_super.apply(this,args);});}),def("withTest",function(test3){return utils.flag(this,"vitest-test",test3),this}),def("toEqual",function(expected){let actual=utils.flag(this,"object"),equal=equals(actual,expected,[...customTesters,iterableEquality]);return this.assert(equal,"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",expected,actual)}),def("toStrictEqual",function(expected){let obj=utils.flag(this,"object"),equal=equals(obj,expected,[...customTesters,iterableEquality,typeEquality,sparseArrayEquality,arrayBufferEquality],!0);return this.assert(equal,"expected #{this} to strictly equal #{exp}","expected #{this} to not strictly equal #{exp}",expected,obj)}),def("toBe",function(expected){let actual=this._obj,pass=Object.is(actual,expected),deepEqualityName="";return pass||(equals(actual,expected,[...customTesters,iterableEquality,typeEquality,sparseArrayEquality,arrayBufferEquality],!0)?deepEqualityName="toStrictEqual":equals(actual,expected,[...customTesters,iterableEquality])&&(deepEqualityName="toEqual")),this.assert(pass,generateToBeMessage(deepEqualityName),"expected #{this} not to be #{exp} // Object.is equality",expected,actual)}),def("toMatchObject",function(expected){let actual=this._obj,pass=equals(actual,expected,[...customTesters,iterableEquality,subsetEquality]),isNot=utils.flag(this,"negate"),{subset:actualSubset,stripped}=getObjectSubset(actual,expected);if(pass&&isNot||!pass&&!isNot){let msg=utils.getMessage(this,[pass,"expected #{this} to match object #{exp}","expected #{this} to not match object #{exp}",expected,actualSubset,!1]),message=stripped===0?msg:`${msg}\n(${stripped} matching ${stripped===1?"property":"properties"} omitted from actual)`;throw new AssertionError2(message,{showDiff:!0,expected,actual:actualSubset})}}),def("toMatch",function(expected){let actual=this._obj;if(typeof actual!="string")throw new TypeError(`.toMatch() expects to receive a string, but got ${typeof actual}`);return this.assert(typeof expected=="string"?actual.includes(expected):actual.match(expected),"expected #{this} to match #{exp}","expected #{this} not to match #{exp}",expected,actual)}),def("toContain",function(item){let actual=this._obj;if(typeof Node<"u"&&actual instanceof Node){if(!(item instanceof Node))throw new TypeError(`toContain() expected a DOM node as the argument, but got ${typeof item}`);return this.assert(actual.contains(item),"expected #{this} to contain element #{exp}","expected #{this} not to contain element #{exp}",item,actual)}if(typeof DOMTokenList<"u"&&actual instanceof DOMTokenList){assertTypes(item,"class name",["string"]);let expectedClassList=utils.flag(this,"negate")?actual.value.replace(item,"").trim():`${actual.value} ${item}`;return this.assert(actual.contains(item),`expected "${actual.value}" to contain "${item}"`,`expected "${actual.value}" not to contain "${item}"`,expectedClassList,actual.value)}return typeof actual=="string"&&typeof item=="string"?this.assert(actual.includes(item),"expected #{this} to contain #{exp}","expected #{this} not to contain #{exp}",item,actual):(actual!=null&&typeof actual!="string"&&utils.flag(this,"object",Array.from(actual)),this.contain(item))}),def("toContainEqual",function(expected){let obj=utils.flag(this,"object"),index=Array.from(obj).findIndex(item=>equals(item,expected,customTesters));this.assert(index!==-1,"expected #{this} to deep equally contain #{exp}","expected #{this} to not deep equally contain #{exp}",expected);}),def("toBeTruthy",function(){let obj=utils.flag(this,"object");this.assert(!!obj,"expected #{this} to be truthy","expected #{this} to not be truthy",obj,!1);}),def("toBeFalsy",function(){let obj=utils.flag(this,"object");this.assert(!obj,"expected #{this} to be falsy","expected #{this} to not be falsy",obj,!1);}),def("toBeGreaterThan",function(expected){let actual=this._obj;return assertTypes(actual,"actual",["number","bigint"]),assertTypes(expected,"expected",["number","bigint"]),this.assert(actual>expected,`expected ${actual} to be greater than ${expected}`,`expected ${actual} to be not greater than ${expected}`,actual,expected,!1)}),def("toBeGreaterThanOrEqual",function(expected){let actual=this._obj;return assertTypes(actual,"actual",["number","bigint"]),assertTypes(expected,"expected",["number","bigint"]),this.assert(actual>=expected,`expected ${actual} to be greater than or equal to ${expected}`,`expected ${actual} to be not greater than or equal to ${expected}`,actual,expected,!1)}),def("toBeLessThan",function(expected){let actual=this._obj;return assertTypes(actual,"actual",["number","bigint"]),assertTypes(expected,"expected",["number","bigint"]),this.assert(actual<expected,`expected ${actual} to be less than ${expected}`,`expected ${actual} to be not less than ${expected}`,actual,expected,!1)}),def("toBeLessThanOrEqual",function(expected){let actual=this._obj;return assertTypes(actual,"actual",["number","bigint"]),assertTypes(expected,"expected",["number","bigint"]),this.assert(actual<=expected,`expected ${actual} to be less than or equal to ${expected}`,`expected ${actual} to be not less than or equal to ${expected}`,actual,expected,!1)}),def("toBeNaN",function(){return this.be.NaN}),def("toBeUndefined",function(){return this.be.undefined}),def("toBeNull",function(){return this.be.null}),def("toBeDefined",function(){let negate=utils.flag(this,"negate");return utils.flag(this,"negate",!1),negate?this.be.undefined:this.not.be.undefined}),def("toBeTypeOf",function(expected){let actual=typeof this._obj,equal=expected===actual;return this.assert(equal,"expected #{this} to be type of #{exp}","expected #{this} not to be type of #{exp}",expected,actual)}),def("toBeInstanceOf",function(obj){return this.instanceOf(obj)}),def("toHaveLength",function(length){return this.have.length(length)}),def("toHaveProperty",function(...args){Array.isArray(args[0])&&(args[0]=args[0].map(key=>String(key).replace(/([.[\\]])/g,"\\\\$1")).join("."));let actual=this._obj,[propertyName,expected]=args,getValue=()=>Object.prototype.hasOwnProperty.call(actual,propertyName)?{value:actual[propertyName],exists:!0}:utils.getPathInfo(actual,propertyName),{value,exists}=getValue(),pass=exists&&(args.length===1||equals(expected,value,customTesters)),valueString=args.length===1?"":` with value ${utils.objDisplay(expected)}`;return this.assert(pass,`expected #{this} to have property "${propertyName}"${valueString}`,`expected #{this} to not have property "${propertyName}"${valueString}`,expected,exists?value:void 0)}),def("toBeCloseTo",function(received,precision=2){let expected=this._obj,pass=!1,expectedDiff2=0,receivedDiff=0;return received===Number.POSITIVE_INFINITY&&expected===Number.POSITIVE_INFINITY||received===Number.NEGATIVE_INFINITY&&expected===Number.NEGATIVE_INFINITY?pass=!0:(expectedDiff2=10**-precision/2,receivedDiff=Math.abs(expected-received),pass=receivedDiff<expectedDiff2),this.assert(pass,`expected #{this} to be close to #{exp}, received difference is ${receivedDiff}, but expected ${expectedDiff2}`,`expected #{this} to not be close to #{exp}, received difference is ${receivedDiff}, but expected ${expectedDiff2}`,received,expected,!1)});let assertIsMock=assertion=>{if(!isMockFunction(assertion._obj))throw new TypeError(`${utils.inspect(assertion._obj)} is not a spy or a call to a spy!`)},getSpy=assertion=>(assertIsMock(assertion),assertion._obj),ordinalOf=i=>{let j=i%10,k2=i%100;return j===1&&k2!==11?`${i}st`:j===2&&k2!==12?`${i}nd`:j===3&&k2!==13?`${i}rd`:`${i}th`},formatCalls=(spy,msg,showActualCall)=>(spy.mock.calls&&(msg+=f2.gray(`\n\nReceived: \n\n${spy.mock.calls.map((callArg,i)=>{let methodCall=f2.bold(`  ${ordinalOf(i+1)} ${spy.getMockName()} call:\n\n`);return showActualCall?methodCall+=diff(showActualCall,callArg,{omitAnnotationLines:!0}):methodCall+=stringify(callArg).split(`\n`).map(line=>`    ${line}`).join(`\n`),methodCall+=`\n`,methodCall}).join(`\n`)}`)),msg+=f2.gray(`\n\nNumber of calls: ${f2.bold(spy.mock.calls.length)}\n`),msg),formatReturns=(spy,results,msg,showActualReturn)=>(msg+=f2.gray(`\n\nReceived: \n\n${results.map((callReturn,i)=>{let methodCall=f2.bold(`  ${ordinalOf(i+1)} ${spy.getMockName()} call return:\n\n`);return showActualReturn?methodCall+=diff(showActualReturn,callReturn.value,{omitAnnotationLines:!0}):methodCall+=stringify(callReturn).split(`\n`).map(line=>`    ${line}`).join(`\n`),methodCall+=`\n`,methodCall}).join(`\n`)}`),msg+=f2.gray(`\n\nNumber of calls: ${f2.bold(spy.mock.calls.length)}\n`),msg);def(["toHaveBeenCalledTimes","toBeCalledTimes"],function(number){let spy=getSpy(this),spyName=spy.getMockName(),callCount=spy.mock.calls.length;return this.assert(callCount===number,`expected "${spyName}" to be called #{exp} times, but got ${callCount} times`,`expected "${spyName}" to not be called #{exp} times`,number,callCount,!1)}),def("toHaveBeenCalledOnce",function(){let spy=getSpy(this),spyName=spy.getMockName(),callCount=spy.mock.calls.length;return this.assert(callCount===1,`expected "${spyName}" to be called once, but got ${callCount} times`,`expected "${spyName}" to not be called once`,1,callCount,!1)}),def(["toHaveBeenCalled","toBeCalled"],function(){let spy=getSpy(this),spyName=spy.getMockName(),callCount=spy.mock.calls.length,called=callCount>0,isNot=utils.flag(this,"negate"),msg=utils.getMessage(this,[called,`expected "${spyName}" to be called at least once`,`expected "${spyName}" to not be called at all, but actually been called ${callCount} times`,!0,called]);if(called&&isNot&&(msg=formatCalls(spy,msg)),called&&isNot||!called&&!isNot)throw new AssertionError2(msg)}),def(["toHaveBeenCalledWith","toBeCalledWith"],function(...args){let spy=getSpy(this),spyName=spy.getMockName(),pass=spy.mock.calls.some(callArg=>equals(callArg,args,[...customTesters,iterableEquality])),isNot=utils.flag(this,"negate"),msg=utils.getMessage(this,[pass,`expected "${spyName}" to be called with arguments: #{exp}`,`expected "${spyName}" to not be called with arguments: #{exp}`,args]);if(pass&&isNot||!pass&&!isNot)throw new AssertionError2(formatCalls(spy,msg,args))}),def(["toHaveBeenNthCalledWith","nthCalledWith"],function(times,...args){let spy=getSpy(this),spyName=spy.getMockName(),nthCall=spy.mock.calls[times-1],callCount=spy.mock.calls.length,isCalled=times<=callCount;this.assert(equals(nthCall,args,[...customTesters,iterableEquality]),`expected ${ordinalOf(times)} "${spyName}" call to have been called with #{exp}${isCalled?"":`, but called only ${callCount} times`}`,`expected ${ordinalOf(times)} "${spyName}" call to not have been called with #{exp}`,args,nthCall,isCalled);}),def(["toHaveBeenLastCalledWith","lastCalledWith"],function(...args){let spy=getSpy(this),spyName=spy.getMockName(),lastCall=spy.mock.calls[spy.mock.calls.length-1];this.assert(equals(lastCall,args,[...customTesters,iterableEquality]),`expected last "${spyName}" call to have been called with #{exp}`,`expected last "${spyName}" call to not have been called with #{exp}`,args,lastCall);}),def(["toThrow","toThrowError"],function(expected){if(typeof expected=="string"||typeof expected>"u"||expected instanceof RegExp)return this.throws(expected);let obj=this._obj,promise=utils.flag(this,"promise"),isNot=utils.flag(this,"negate"),thrown=null;if(promise==="rejects")thrown=obj;else if(promise==="resolves"&&typeof obj!="function"){if(isNot)return;{let message=utils.flag(this,"message")||"expected promise to throw an error, but it didn\'t",error={showDiff:!1};throw new AssertionError2(message,error,utils.flag(this,"ssfi"))}}else {let isThrow=!1;try{obj();}catch(err){isThrow=!0,thrown=err;}if(!isThrow&&!isNot){let message=utils.flag(this,"message")||"expected function to throw an error, but it didn\'t",error={showDiff:!1};throw new AssertionError2(message,error,utils.flag(this,"ssfi"))}}if(typeof expected=="function"){let name=expected.name||expected.prototype.constructor.name;return this.assert(thrown&&thrown instanceof expected,`expected error to be instance of ${name}`,`expected error not to be instance of ${name}`,expected,thrown)}if(expected instanceof Error)return this.assert(thrown&&expected.message===thrown.message,`expected error to have message: ${expected.message}`,`expected error not to have message: ${expected.message}`,expected.message,thrown&&thrown.message);if(typeof expected=="object"&&"asymmetricMatch"in expected&&typeof expected.asymmetricMatch=="function"){let matcher=expected;return this.assert(thrown&&matcher.asymmetricMatch(thrown),"expected error to match asymmetric matcher","expected error not to match asymmetric matcher",matcher,thrown)}throw new Error(`"toThrow" expects string, RegExp, function, Error instance or asymmetric matcher, got "${typeof expected}"`)}),[{name:"toHaveResolved",condition:spy=>spy.mock.settledResults.length>0&&spy.mock.settledResults.some(({type:type5})=>type5==="fulfilled"),action:"resolved"},{name:["toHaveReturned","toReturn"],condition:spy=>spy.mock.calls.length>0&&spy.mock.results.some(({type:type5})=>type5!=="throw"),action:"called"}].forEach(({name,condition,action})=>{def(name,function(){let spy=getSpy(this),spyName=spy.getMockName(),pass=condition(spy);this.assert(pass,`expected "${spyName}" to be successfully ${action} at least once`,`expected "${spyName}" to not be successfully ${action}`,pass,!pass,!1);});}),[{name:"toHaveResolvedTimes",condition:(spy,times)=>spy.mock.settledResults.reduce((s,{type:type5})=>type5==="fulfilled"?++s:s,0)===times,action:"resolved"},{name:["toHaveReturnedTimes","toReturnTimes"],condition:(spy,times)=>spy.mock.results.reduce((s,{type:type5})=>type5==="throw"?s:++s,0)===times,action:"called"}].forEach(({name,condition,action})=>{def(name,function(times){let spy=getSpy(this),spyName=spy.getMockName(),pass=condition(spy,times);this.assert(pass,`expected "${spyName}" to be successfully ${action} ${times} times`,`expected "${spyName}" to not be successfully ${action} ${times} times`,`expected resolved times: ${times}`,`received resolved times: ${pass}`,!1);});}),[{name:"toHaveResolvedWith",condition:(spy,value)=>spy.mock.settledResults.some(({type:type5,value:result})=>type5==="fulfilled"&&equals(value,result)),action:"resolve"},{name:["toHaveReturnedWith","toReturnWith"],condition:(spy,value)=>spy.mock.results.some(({type:type5,value:result})=>type5==="return"&&equals(value,result)),action:"return"}].forEach(({name,condition,action})=>{def(name,function(value){let spy=getSpy(this),pass=condition(spy,value),isNot=utils.flag(this,"negate");if(pass&&isNot||!pass&&!isNot){let spyName=spy.getMockName(),msg=utils.getMessage(this,[pass,`expected "${spyName}" to ${action} with: #{exp} at least once`,`expected "${spyName}" to not ${action} with: #{exp}`,value]),results=action==="return"?spy.mock.results:spy.mock.settledResults;throw new AssertionError2(formatReturns(spy,results,msg,value))}});}),[{name:"toHaveLastResolvedWith",condition:(spy,value)=>{let result=spy.mock.settledResults[spy.mock.settledResults.length-1];return result&&result.type==="fulfilled"&&equals(result.value,value)},action:"resolve"},{name:["toHaveLastReturnedWith","lastReturnedWith"],condition:(spy,value)=>{let result=spy.mock.results[spy.mock.results.length-1];return result&&result.type==="return"&&equals(result.value,value)},action:"return"}].forEach(({name,condition,action})=>{def(name,function(value){let spy=getSpy(this),results=action==="return"?spy.mock.results:spy.mock.settledResults,result=results[results.length-1],spyName=spy.getMockName();this.assert(condition(spy,value),`expected last "${spyName}" call to ${action} #{exp}`,`expected last "${spyName}" call to not ${action} #{exp}`,value,result?.value);});}),[{name:"toHaveNthResolvedWith",condition:(spy,index,value)=>{let result=spy.mock.settledResults[index-1];return result&&result.type==="fulfilled"&&equals(result.value,value)},action:"resolve"},{name:["toHaveNthReturnedWith","nthReturnedWith"],condition:(spy,index,value)=>{let result=spy.mock.results[index-1];return result&&result.type==="return"&&equals(result.value,value)},action:"return"}].forEach(({name,condition,action})=>{def(name,function(nthCall,value){let spy=getSpy(this),spyName=spy.getMockName(),result=(action==="return"?spy.mock.results:spy.mock.settledResults)[nthCall-1],ordinalCall=`${ordinalOf(nthCall)} call`;this.assert(condition(spy,nthCall,value),`expected ${ordinalCall} "${spyName}" call to ${action} #{exp}`,`expected ${ordinalCall} "${spyName}" call to not ${action} #{exp}`,value,result?.value);});}),def("toSatisfy",function(matcher,message){return this.be.satisfy(matcher,message)}),def("withContext",function(context){for(let key in context)utils.flag(this,key,context[key]);return this}),utils.addProperty(chai.Assertion.prototype,"resolves",function(){let error=new Error("resolves");utils.flag(this,"promise","resolves"),utils.flag(this,"error",error);let test3=utils.flag(this,"vitest-test"),obj=utils.flag(this,"object");if(utils.flag(this,"poll"))throw new SyntaxError("expect.poll() is not supported in combination with .resolves");if(typeof obj?.then!="function")throw new TypeError(`You must provide a Promise to expect() when using .resolves, not \'${typeof obj}\'.`);let proxy=new Proxy(this,{get:(target,key,receiver)=>{let result=Reflect.get(target,key,receiver);return typeof result!="function"?result instanceof chai.Assertion?proxy:result:async(...args)=>{let promise=obj.then(value=>(utils.flag(this,"object",value),result.call(this,...args)),err=>{let _error=new AssertionError2(`promise rejected "${utils.inspect(err)}" instead of resolving`,{showDiff:!1});throw _error.cause=err,_error.stack=error.stack.replace(error.message,_error.message),_error});return recordAsyncExpect(test3,promise)}}});return proxy}),utils.addProperty(chai.Assertion.prototype,"rejects",function(){let error=new Error("rejects");utils.flag(this,"promise","rejects"),utils.flag(this,"error",error);let test3=utils.flag(this,"vitest-test"),obj=utils.flag(this,"object"),wrapper=typeof obj=="function"?obj():obj;if(utils.flag(this,"poll"))throw new SyntaxError("expect.poll() is not supported in combination with .rejects");if(typeof wrapper?.then!="function")throw new TypeError(`You must provide a Promise to expect() when using .rejects, not \'${typeof wrapper}\'.`);let proxy=new Proxy(this,{get:(target,key,receiver)=>{let result=Reflect.get(target,key,receiver);return typeof result!="function"?result instanceof chai.Assertion?proxy:result:async(...args)=>{let promise=wrapper.then(value=>{let _error=new AssertionError2(`promise resolved "${utils.inspect(value)}" instead of rejecting`,{showDiff:!0,expected:new Error("rejected promise"),actual:value});throw _error.stack=error.stack.replace(error.message,_error.message),_error},err=>(utils.flag(this,"object",err),result.call(this,...args)));return recordAsyncExpect(test3,promise)}}});return proxy});};function getMatcherState(assertion,expect4){let obj=assertion._obj,isNot=utils_exports.flag(assertion,"negate"),promise=utils_exports.flag(assertion,"promise")||"",jestUtils={...getMatcherUtils(),diff,stringify,iterableEquality,subsetEquality};return {state:{...getState(expect4),customTesters:getCustomEqualityTesters(),isNot,utils:jestUtils,promise,equals,suppressedErrors:[],soft:utils_exports.flag(assertion,"soft"),poll:utils_exports.flag(assertion,"poll")},isNot,obj}}var JestExtendError=class extends Error{constructor(message,actual,expected){super(message),this.actual=actual,this.expected=expected;}};function JestExtendPlugin(c,expect4,matchers){return (_,utils)=>{Object.entries(matchers).forEach(([expectAssertionName,expectAssertion])=>{function expectWrapper(...args){let{state,isNot,obj}=getMatcherState(this,expect4),result=expectAssertion.call(state,obj,...args);if(result&&typeof result=="object"&&result instanceof Promise)return result.then(({pass:pass2,message:message2,actual:actual2,expected:expected2})=>{if(pass2&&isNot||!pass2&&!isNot)throw new JestExtendError(message2(),actual2,expected2)});let{pass,message,actual,expected}=result;if(pass&&isNot||!pass&&!isNot)throw new JestExtendError(message(),actual,expected)}let softWrapper=wrapSoft(utils,expectWrapper);utils.addMethod(globalThis[JEST_MATCHERS_OBJECT].matchers,expectAssertionName,softWrapper),utils.addMethod(c.Assertion.prototype,expectAssertionName,softWrapper);class CustomMatcher extends AsymmetricMatcher3{constructor(inverse=!1,...sample){super(sample,inverse);}asymmetricMatch(other){let{pass}=expectAssertion.call(this.getMatcherContext(expect4),other,...this.sample);return this.inverse?!pass:pass}toString(){return `${this.inverse?"not.":""}${expectAssertionName}`}getExpectedType(){return "any"}toAsymmetricMatcher(){return `${this.toString()}<${this.sample.map(String).join(", ")}>`}}let customMatcher=(...sample)=>new CustomMatcher(!1,...sample);Object.defineProperty(expect4,expectAssertionName,{configurable:!0,enumerable:!0,value:customMatcher,writable:!0}),Object.defineProperty(expect4.not,expectAssertionName,{configurable:!0,enumerable:!0,value:(...sample)=>new CustomMatcher(!0,...sample),writable:!0}),Object.defineProperty(globalThis[ASYMMETRIC_MATCHERS_OBJECT],expectAssertionName,{configurable:!0,enumerable:!0,value:customMatcher,writable:!0});});}}var JestExtend=(chai,utils)=>{utils.addMethod(chai.expect,"extend",(expect4,expects)=>{use(JestExtendPlugin(chai,expect4,expects));});};function createExpect(){use(JestExtend),use(JestChaiExpect),use(JestAsymmetricMatchers);let expect4=(value,message)=>{let{assertionCalls}=getState(expect4);return setState({assertionCalls:assertionCalls+1,soft:!1},expect4),expect(value,message)};Object.assign(expect4,expect),expect4.getState=()=>getState(expect4),expect4.setState=state=>setState(state,expect4),expect4.extend=expects=>expect.extend(expect4,expects),expect4.soft=(...args)=>{let assert2=expect4(...args);return expect4.setState({soft:!0}),assert2},expect4.unreachable=message=>{assert.fail(`expected${message?` "${message}" `:" "}not to be reached`);};function assertions(expected){let errorGen=()=>new Error(`expected number of assertions to be ${expected}, but got ${expect4.getState().assertionCalls}`);"captureStackTrace"in Error&&typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(errorGen(),assertions),expect4.setState({expectedAssertionsNumber:expected,expectedAssertionsNumberErrorGen:errorGen});}function hasAssertions(){let error=new Error("expected any number of assertion, but got none");"captureStackTrace"in Error&&typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(error,hasAssertions),expect4.setState({isExpectingAssertions:!0,isExpectingAssertionsError:error});}return setState({assertionCalls:0,isExpectingAssertions:!1,isExpectingAssertionsError:null,expectedAssertionsNumber:null,expectedAssertionsNumberErrorGen:null},expect4),utils_exports.addMethod(expect4,"assertions",assertions),utils_exports.addMethod(expect4,"hasAssertions",hasAssertions),expect4.extend(matchers_exports),expect4}var expect2=createExpect();Object.defineProperty(globalThis,GLOBAL_EXPECT,{value:expect2,writable:!0,configurable:!0});var listeners=new Set;function onMockCall(callback){return listeners.add(callback),()=>void listeners.delete(callback)}var spyOn2=(...args)=>{let mock=spyOn(...args);return reactiveMock(mock)};function fn2(implementation){let mock=implementation?fn(implementation):fn();return reactiveMock(mock)}function reactiveMock(mock){let reactive=listenWhenCalled(mock),originalMockImplementation=reactive.mockImplementation.bind(null);return reactive.mockImplementation=fn3=>listenWhenCalled(originalMockImplementation(fn3)),reactive}function listenWhenCalled(mock){let state=T(mock),impl=state.impl;return state.willCall(function(...args){return listeners.forEach(listener=>listener(mock,args)),impl?.apply(this,args)}),mock}function clearAllMocks(){mocks.forEach(spy=>spy.mockClear());}function resetAllMocks(){mocks.forEach(spy=>spy.mockReset());}function restoreAllMocks(){mocks.forEach(spy=>spy.mockRestore());}function mocked(item,_options={}){return item}var dom_esm_exports={};__export(dom_esm_exports,{buildQueries:()=>buildQueries,configure:()=>configure,createEvent:()=>createEvent,findAllByAltText:()=>findAllByAltText,findAllByDisplayValue:()=>findAllByDisplayValue,findAllByLabelText:()=>findAllByLabelText,findAllByPlaceholderText:()=>findAllByPlaceholderText,findAllByRole:()=>findAllByRole,findAllByTestId:()=>findAllByTestId,findAllByText:()=>findAllByText,findAllByTitle:()=>findAllByTitle,findByAltText:()=>findByAltText,findByDisplayValue:()=>findByDisplayValue,findByLabelText:()=>findByLabelText,findByPlaceholderText:()=>findByPlaceholderText,findByRole:()=>findByRole,findByTestId:()=>findByTestId,findByText:()=>findByText,findByTitle:()=>findByTitle,fireEvent:()=>fireEvent,getAllByAltText:()=>getAllByAltText,getAllByDisplayValue:()=>getAllByDisplayValue,getAllByLabelText:()=>getAllByLabelTextWithSuggestions,getAllByPlaceholderText:()=>getAllByPlaceholderText,getAllByRole:()=>getAllByRole,getAllByTestId:()=>getAllByTestId,getAllByText:()=>getAllByText,getAllByTitle:()=>getAllByTitle,getByAltText:()=>getByAltText,getByDisplayValue:()=>getByDisplayValue,getByLabelText:()=>getByLabelTextWithSuggestions,getByPlaceholderText:()=>getByPlaceholderText,getByRole:()=>getByRole,getByTestId:()=>getByTestId,getByText:()=>getByText,getByTitle:()=>getByTitle,getConfig:()=>getConfig2,getDefaultNormalizer:()=>getDefaultNormalizer,getElementError:()=>getElementError,getMultipleElementsFoundError:()=>getMultipleElementsFoundError,getNodeText:()=>getNodeText,getQueriesForElement:()=>getQueriesForElement,getRoles:()=>getRoles,getSuggestedQuery:()=>getSuggestedQuery,isInaccessible:()=>isInaccessible,logDOM:()=>logDOM,logRoles:()=>logRoles,makeFindQuery:()=>makeFindQuery,makeGetAllQuery:()=>makeGetAllQuery,makeSingleQuery:()=>makeSingleQuery,prettyDOM:()=>prettyDOM,prettyFormat:()=>prettyFormat,queries:()=>queries,queryAllByAltText:()=>queryAllByAltTextWithSuggestions,queryAllByAttribute:()=>queryAllByAttribute,queryAllByDisplayValue:()=>queryAllByDisplayValueWithSuggestions,queryAllByLabelText:()=>queryAllByLabelTextWithSuggestions,queryAllByPlaceholderText:()=>queryAllByPlaceholderTextWithSuggestions,queryAllByRole:()=>queryAllByRoleWithSuggestions,queryAllByTestId:()=>queryAllByTestIdWithSuggestions,queryAllByText:()=>queryAllByTextWithSuggestions,queryAllByTitle:()=>queryAllByTitleWithSuggestions,queryByAltText:()=>queryByAltText,queryByAttribute:()=>queryByAttribute,queryByDisplayValue:()=>queryByDisplayValue,queryByLabelText:()=>queryByLabelText,queryByPlaceholderText:()=>queryByPlaceholderText,queryByRole:()=>queryByRole,queryByTestId:()=>queryByTestId,queryByText:()=>queryByText,queryByTitle:()=>queryByTitle,queryHelpers:()=>queryHelpers,screen:()=>screen,waitFor:()=>waitForWrapper,waitForElementToBeRemoved:()=>waitForElementToBeRemoved,within:()=>getQueriesForElement,wrapAllByQueryWithSuggestion:()=>wrapAllByQueryWithSuggestion,wrapSingleQueryWithSuggestion:()=>wrapSingleQueryWithSuggestion});var prettyFormat=__toESM(require_build());var toStr2=Object.prototype.toString;function isCallable2(fn3){return typeof fn3=="function"||toStr2.call(fn3)==="[object Function]"}function toInteger2(value){var number=Number(value);return isNaN(number)?0:number===0||!isFinite(number)?number:(number>0?1:-1)*Math.floor(Math.abs(number))}var maxSafeInteger2=Math.pow(2,53)-1;function toLength2(value){var len=toInteger2(value);return Math.min(Math.max(len,0),maxSafeInteger2)}function arrayFrom2(arrayLike,mapFn){var C3=Array,items=Object(arrayLike);if(arrayLike==null)throw new TypeError("Array.from requires an array-like object - not null or undefined");if(typeof mapFn<"u"&&!isCallable2(mapFn))throw new TypeError("Array.from: when provided, the second argument must be a function");for(var len=toLength2(items.length),A=isCallable2(C3)?Object(new C3(len)):new Array(len),k2=0,kValue;k2<len;)kValue=items[k2],mapFn?A[k2]=mapFn(kValue,k2):A[k2]=kValue,k2+=1;return A.length=len,A}function _typeof3(obj){"@babel/helpers - typeof";return _typeof3=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(obj2){return typeof obj2}:function(obj2){return obj2&&typeof Symbol=="function"&&obj2.constructor===Symbol&&obj2!==Symbol.prototype?"symbol":typeof obj2},_typeof3(obj)}function _classCallCheck2(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties2(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,_toPropertyKey3(descriptor.key),descriptor);}}function _createClass2(Constructor,protoProps,staticProps){return protoProps&&_defineProperties2(Constructor.prototype,protoProps),staticProps&&_defineProperties2(Constructor,staticProps),Object.defineProperty(Constructor,"prototype",{writable:!1}),Constructor}function _defineProperty3(obj,key,value){return key=_toPropertyKey3(key),key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey3(arg){var key=_toPrimitive3(arg,"string");return _typeof3(key)==="symbol"?key:String(key)}function _toPrimitive3(input2,hint){if(_typeof3(input2)!=="object"||input2===null)return input2;var prim=input2[Symbol.toPrimitive];if(prim!==void 0){var res=prim.call(input2,hint||"default");if(_typeof3(res)!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return (hint==="string"?String:Number)(input2)}var SetLike2=function(){function SetLike3(){var items=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[];_classCallCheck2(this,SetLike3),_defineProperty3(this,"items",void 0),this.items=items;}return _createClass2(SetLike3,[{key:"add",value:function(value){return this.has(value)===!1&&this.items.push(value),this}},{key:"clear",value:function(){this.items=[];}},{key:"delete",value:function(value){var previousLength=this.items.length;return this.items=this.items.filter(function(item){return item!==value}),previousLength!==this.items.length}},{key:"forEach",value:function(callbackfn){var _this=this;this.items.forEach(function(item){callbackfn(item,item,_this);});}},{key:"has",value:function(value){return this.items.indexOf(value)!==-1}},{key:"size",get:function(){return this.items.length}}]),SetLike3}(),SetLike_default2=typeof Set>"u"?Set:SetLike2;function getLocalName2(element){var _element$localName;return (_element$localName=element.localName)!==null&&_element$localName!==void 0?_element$localName:element.tagName.toLowerCase()}var localNameToRoleMappings2={article:"article",aside:"complementary",button:"button",datalist:"listbox",dd:"definition",details:"group",dialog:"dialog",dt:"term",fieldset:"group",figure:"figure",form:"form",footer:"contentinfo",h1:"heading",h2:"heading",h3:"heading",h4:"heading",h5:"heading",h6:"heading",header:"banner",hr:"separator",html:"document",legend:"legend",li:"listitem",math:"math",main:"main",menu:"list",nav:"navigation",ol:"list",optgroup:"group",option:"option",output:"status",progress:"progressbar",section:"region",summary:"button",table:"table",tbody:"rowgroup",textarea:"textbox",tfoot:"rowgroup",td:"cell",th:"columnheader",thead:"rowgroup",tr:"row",ul:"list"},prohibitedAttributes2={caption:new Set(["aria-label","aria-labelledby"]),code:new Set(["aria-label","aria-labelledby"]),deletion:new Set(["aria-label","aria-labelledby"]),emphasis:new Set(["aria-label","aria-labelledby"]),generic:new Set(["aria-label","aria-labelledby","aria-roledescription"]),insertion:new Set(["aria-label","aria-labelledby"]),paragraph:new Set(["aria-label","aria-labelledby"]),presentation:new Set(["aria-label","aria-labelledby"]),strong:new Set(["aria-label","aria-labelledby"]),subscript:new Set(["aria-label","aria-labelledby"]),superscript:new Set(["aria-label","aria-labelledby"])};function hasGlobalAriaAttributes2(element,role){return ["aria-atomic","aria-busy","aria-controls","aria-current","aria-describedby","aria-details","aria-dropeffect","aria-flowto","aria-grabbed","aria-hidden","aria-keyshortcuts","aria-label","aria-labelledby","aria-live","aria-owns","aria-relevant","aria-roledescription"].some(function(attributeName){var _prohibitedAttributes;return element.hasAttribute(attributeName)&&!((_prohibitedAttributes=prohibitedAttributes2[role])!==null&&_prohibitedAttributes!==void 0&&_prohibitedAttributes.has(attributeName))})}function ignorePresentationalRole2(element,implicitRole){return hasGlobalAriaAttributes2(element,implicitRole)}function getRole2(element){var explicitRole=getExplicitRole2(element);if(explicitRole===null||explicitRole==="presentation"){var implicitRole=getImplicitRole2(element);if(explicitRole!=="presentation"||ignorePresentationalRole2(element,implicitRole||""))return implicitRole}return explicitRole}function getImplicitRole2(element){var mappedByTag=localNameToRoleMappings2[getLocalName2(element)];if(mappedByTag!==void 0)return mappedByTag;switch(getLocalName2(element)){case"a":case"area":case"link":if(element.hasAttribute("href"))return "link";break;case"img":return element.getAttribute("alt")===""&&!ignorePresentationalRole2(element,"img")?"presentation":"img";case"input":{var _ref=element,type5=_ref.type;switch(type5){case"button":case"image":case"reset":case"submit":return "button";case"checkbox":case"radio":return type5;case"range":return "slider";case"email":case"tel":case"text":case"url":return element.hasAttribute("list")?"combobox":"textbox";case"search":return element.hasAttribute("list")?"combobox":"searchbox";case"number":return "spinbutton";default:return null}}case"select":return element.hasAttribute("multiple")||element.size>1?"listbox":"combobox"}return null}function getExplicitRole2(element){var role=element.getAttribute("role");if(role!==null){var explicitRole=role.trim().split(" ")[0];if(explicitRole.length>0)return explicitRole}return null}function isElement2(node){return node!==null&&node.nodeType===node.ELEMENT_NODE}function isHTMLTableCaptionElement2(node){return isElement2(node)&&getLocalName2(node)==="caption"}function isHTMLInputElement2(node){return isElement2(node)&&getLocalName2(node)==="input"}function isHTMLOptGroupElement2(node){return isElement2(node)&&getLocalName2(node)==="optgroup"}function isHTMLSelectElement2(node){return isElement2(node)&&getLocalName2(node)==="select"}function isHTMLTableElement2(node){return isElement2(node)&&getLocalName2(node)==="table"}function isHTMLTextAreaElement2(node){return isElement2(node)&&getLocalName2(node)==="textarea"}function safeWindow2(node){var _ref=node.ownerDocument===null?node:node.ownerDocument,defaultView=_ref.defaultView;if(defaultView===null)throw new TypeError("no window available");return defaultView}function isHTMLFieldSetElement2(node){return isElement2(node)&&getLocalName2(node)==="fieldset"}function isHTMLLegendElement2(node){return isElement2(node)&&getLocalName2(node)==="legend"}function isHTMLSlotElement2(node){return isElement2(node)&&getLocalName2(node)==="slot"}function isSVGElement2(node){return isElement2(node)&&node.ownerSVGElement!==void 0}function isSVGSVGElement2(node){return isElement2(node)&&getLocalName2(node)==="svg"}function isSVGTitleElement2(node){return isSVGElement2(node)&&getLocalName2(node)==="title"}function queryIdRefs2(node,attributeName){if(isElement2(node)&&node.hasAttribute(attributeName)){var ids=node.getAttribute(attributeName).split(" "),root=node.getRootNode?node.getRootNode():node.ownerDocument;return ids.map(function(id){return root.getElementById(id)}).filter(function(element){return element!==null})}return []}function hasAnyConcreteRoles2(node,roles3){return isElement2(node)?roles3.indexOf(getRole2(node))!==-1:!1}function asFlatString2(s){return s.trim().replace(/\\s\\s+/g," ")}function isHidden2(node,getComputedStyleImplementation){if(!isElement2(node))return !1;if(node.hasAttribute("hidden")||node.getAttribute("aria-hidden")==="true")return !0;var style=getComputedStyleImplementation(node);return style.getPropertyValue("display")==="none"||style.getPropertyValue("visibility")==="hidden"}function isControl2(node){return hasAnyConcreteRoles2(node,["button","combobox","listbox","textbox"])||hasAbstractRole2(node,"range")}function hasAbstractRole2(node,role){if(!isElement2(node))return !1;switch(role){case"range":return hasAnyConcreteRoles2(node,["meter","progressbar","scrollbar","slider","spinbutton"]);default:throw new TypeError("No knowledge about abstract role \'".concat(role,"\'. This is likely a bug :("))}}function querySelectorAllSubtree2(element,selectors){var elements=arrayFrom2(element.querySelectorAll(selectors));return queryIdRefs2(element,"aria-owns").forEach(function(root){elements.push.apply(elements,arrayFrom2(root.querySelectorAll(selectors)));}),elements}function querySelectedOptions2(listbox){return isHTMLSelectElement2(listbox)?listbox.selectedOptions||querySelectorAllSubtree2(listbox,"[selected]"):querySelectorAllSubtree2(listbox,\'[aria-selected="true"]\')}function isMarkedPresentational2(node){return hasAnyConcreteRoles2(node,["none","presentation"])}function isNativeHostLanguageTextAlternativeElement2(node){return isHTMLTableCaptionElement2(node)}function allowsNameFromContent2(node){return hasAnyConcreteRoles2(node,["button","cell","checkbox","columnheader","gridcell","heading","label","legend","link","menuitem","menuitemcheckbox","menuitemradio","option","radio","row","rowheader","switch","tab","tooltip","treeitem"])}function isDescendantOfNativeHostLanguageTextAlternativeElement2(node){return !1}function getValueOfTextbox2(element){return isHTMLInputElement2(element)||isHTMLTextAreaElement2(element)?element.value:element.textContent||""}function getTextualContent2(declaration){var content=declaration.getPropertyValue("content");return /^["\'].*["\']$/.test(content)?content.slice(1,-1):""}function isLabelableElement2(element){var localName=getLocalName2(element);return localName==="button"||localName==="input"&&element.getAttribute("type")!=="hidden"||localName==="meter"||localName==="output"||localName==="progress"||localName==="select"||localName==="textarea"}function findLabelableElement2(element){if(isLabelableElement2(element))return element;var labelableElement=null;return element.childNodes.forEach(function(childNode){if(labelableElement===null&&isElement2(childNode)){var descendantLabelableElement=findLabelableElement2(childNode);descendantLabelableElement!==null&&(labelableElement=descendantLabelableElement);}}),labelableElement}function getControlOfLabel2(label){if(label.control!==void 0)return label.control;var htmlFor=label.getAttribute("for");return htmlFor!==null?label.ownerDocument.getElementById(htmlFor):findLabelableElement2(label)}function getLabels2(element){var labelsProperty=element.labels;if(labelsProperty===null)return labelsProperty;if(labelsProperty!==void 0)return arrayFrom2(labelsProperty);if(!isLabelableElement2(element))return null;var document2=element.ownerDocument;return arrayFrom2(document2.querySelectorAll("label")).filter(function(label){return getControlOfLabel2(label)===element})}function getSlotContents2(slot){var assignedNodes=slot.assignedNodes();return assignedNodes.length===0?arrayFrom2(slot.childNodes):assignedNodes}function computeTextAlternative2(root){var options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},consultedNodes=new SetLike_default2,window2=safeWindow2(root),_options$compute=options.compute,compute=_options$compute===void 0?"name":_options$compute,_options$computedStyl=options.computedStyleSupportsPseudoElements,computedStyleSupportsPseudoElements=_options$computedStyl===void 0?options.getComputedStyle!==void 0:_options$computedStyl,_options$getComputedS=options.getComputedStyle,getComputedStyle=_options$getComputedS===void 0?window2.getComputedStyle.bind(window2):_options$getComputedS,_options$hidden=options.hidden,hidden=_options$hidden===void 0?!1:_options$hidden;function computeMiscTextAlternative(node,context){var accumulatedText="";if(isElement2(node)&&computedStyleSupportsPseudoElements){var pseudoBefore=getComputedStyle(node,"::before"),beforeContent=getTextualContent2(pseudoBefore);accumulatedText="".concat(beforeContent," ").concat(accumulatedText);}var childNodes=isHTMLSlotElement2(node)?getSlotContents2(node):arrayFrom2(node.childNodes).concat(queryIdRefs2(node,"aria-owns"));if(childNodes.forEach(function(child){var result=computeTextAlternative3(child,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!1,recursion:!0}),display2=isElement2(child)?getComputedStyle(child).getPropertyValue("display"):"inline",separator=display2!=="inline"?" ":"";accumulatedText+="".concat(separator).concat(result).concat(separator);}),isElement2(node)&&computedStyleSupportsPseudoElements){var pseudoAfter=getComputedStyle(node,"::after"),afterContent=getTextualContent2(pseudoAfter);accumulatedText="".concat(accumulatedText," ").concat(afterContent);}return accumulatedText.trim()}function useAttribute(element,attributeName){var attribute=element.getAttributeNode(attributeName);return attribute!==null&&!consultedNodes.has(attribute)&&attribute.value.trim()!==""?(consultedNodes.add(attribute),attribute.value):null}function computeTooltipAttributeValue(node){return isElement2(node)?useAttribute(node,"title"):null}function computeElementTextAlternative(node){if(!isElement2(node))return null;if(isHTMLFieldSetElement2(node)){consultedNodes.add(node);for(var children=arrayFrom2(node.childNodes),i=0;i<children.length;i+=1){var child=children[i];if(isHTMLLegendElement2(child))return computeTextAlternative3(child,{isEmbeddedInLabel:!1,isReferenced:!1,recursion:!1})}}else if(isHTMLTableElement2(node)){consultedNodes.add(node);for(var _children=arrayFrom2(node.childNodes),_i=0;_i<_children.length;_i+=1){var _child=_children[_i];if(isHTMLTableCaptionElement2(_child))return computeTextAlternative3(_child,{isEmbeddedInLabel:!1,isReferenced:!1,recursion:!1})}}else if(isSVGSVGElement2(node)){consultedNodes.add(node);for(var _children2=arrayFrom2(node.childNodes),_i2=0;_i2<_children2.length;_i2+=1){var _child2=_children2[_i2];if(isSVGTitleElement2(_child2))return _child2.textContent}return null}else if(getLocalName2(node)==="img"||getLocalName2(node)==="area"){var nameFromAlt=useAttribute(node,"alt");if(nameFromAlt!==null)return nameFromAlt}else if(isHTMLOptGroupElement2(node)){var nameFromLabel=useAttribute(node,"label");if(nameFromLabel!==null)return nameFromLabel}if(isHTMLInputElement2(node)&&(node.type==="button"||node.type==="submit"||node.type==="reset")){var nameFromValue=useAttribute(node,"value");if(nameFromValue!==null)return nameFromValue;if(node.type==="submit")return "Submit";if(node.type==="reset")return "Reset"}var labels=getLabels2(node);if(labels!==null&&labels.length!==0)return consultedNodes.add(node),arrayFrom2(labels).map(function(element){return computeTextAlternative3(element,{isEmbeddedInLabel:!0,isReferenced:!1,recursion:!0})}).filter(function(label){return label.length>0}).join(" ");if(isHTMLInputElement2(node)&&node.type==="image"){var _nameFromAlt=useAttribute(node,"alt");if(_nameFromAlt!==null)return _nameFromAlt;var nameFromTitle=useAttribute(node,"title");return nameFromTitle!==null?nameFromTitle:"Submit Query"}if(hasAnyConcreteRoles2(node,["button"])){var nameFromSubTree=computeMiscTextAlternative(node,{isEmbeddedInLabel:!1,isReferenced:!1});if(nameFromSubTree!=="")return nameFromSubTree}return null}function computeTextAlternative3(current,context){if(consultedNodes.has(current))return "";if(!hidden&&isHidden2(current,getComputedStyle)&&!context.isReferenced)return consultedNodes.add(current),"";var labelAttributeNode=isElement2(current)?current.getAttributeNode("aria-labelledby"):null,labelElements=labelAttributeNode!==null&&!consultedNodes.has(labelAttributeNode)?queryIdRefs2(current,"aria-labelledby"):[];if(compute==="name"&&!context.isReferenced&&labelElements.length>0)return consultedNodes.add(labelAttributeNode),labelElements.map(function(element){return computeTextAlternative3(element,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!0,recursion:!1})}).join(" ");var skipToStep2E=context.recursion&&isControl2(current)&&compute==="name";if(!skipToStep2E){var ariaLabel=(isElement2(current)&&current.getAttribute("aria-label")||"").trim();if(ariaLabel!==""&&compute==="name")return consultedNodes.add(current),ariaLabel;if(!isMarkedPresentational2(current)){var elementTextAlternative=computeElementTextAlternative(current);if(elementTextAlternative!==null)return consultedNodes.add(current),elementTextAlternative}}if(hasAnyConcreteRoles2(current,["menu"]))return consultedNodes.add(current),"";if(skipToStep2E||context.isEmbeddedInLabel||context.isReferenced){if(hasAnyConcreteRoles2(current,["combobox","listbox"])){consultedNodes.add(current);var selectedOptions=querySelectedOptions2(current);return selectedOptions.length===0?isHTMLInputElement2(current)?current.value:"":arrayFrom2(selectedOptions).map(function(selectedOption){return computeTextAlternative3(selectedOption,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!1,recursion:!0})}).join(" ")}if(hasAbstractRole2(current,"range"))return consultedNodes.add(current),current.hasAttribute("aria-valuetext")?current.getAttribute("aria-valuetext"):current.hasAttribute("aria-valuenow")?current.getAttribute("aria-valuenow"):current.getAttribute("value")||"";if(hasAnyConcreteRoles2(current,["textbox"]))return consultedNodes.add(current),getValueOfTextbox2(current)}if(allowsNameFromContent2(current)||isElement2(current)&&context.isReferenced||isNativeHostLanguageTextAlternativeElement2(current)||isDescendantOfNativeHostLanguageTextAlternativeElement2()){var accumulatedText2F=computeMiscTextAlternative(current,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!1});if(accumulatedText2F!=="")return consultedNodes.add(current),accumulatedText2F}if(current.nodeType===current.TEXT_NODE)return consultedNodes.add(current),current.textContent||"";if(context.recursion)return consultedNodes.add(current),computeMiscTextAlternative(current,{isEmbeddedInLabel:context.isEmbeddedInLabel,isReferenced:!1});var tooltipAttributeValue=computeTooltipAttributeValue(current);return tooltipAttributeValue!==null?(consultedNodes.add(current),tooltipAttributeValue):(consultedNodes.add(current),"")}return asFlatString2(computeTextAlternative3(root,{isEmbeddedInLabel:!1,isReferenced:compute==="description",recursion:!1}))}function _typeof4(obj){"@babel/helpers - typeof";return _typeof4=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(obj2){return typeof obj2}:function(obj2){return obj2&&typeof Symbol=="function"&&obj2.constructor===Symbol&&obj2!==Symbol.prototype?"symbol":typeof obj2},_typeof4(obj)}function ownKeys2(object,enumerableOnly){var keys2=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys2.push.apply(keys2,symbols);}return keys2}function _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};i%2?ownKeys2(Object(source),!0).forEach(function(key){_defineProperty4(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys2(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target}function _defineProperty4(obj,key,value){return key=_toPropertyKey4(key),key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey4(arg){var key=_toPrimitive4(arg,"string");return _typeof4(key)==="symbol"?key:String(key)}function _toPrimitive4(input2,hint){if(_typeof4(input2)!=="object"||input2===null)return input2;var prim=input2[Symbol.toPrimitive];if(prim!==void 0){var res=prim.call(input2,hint||"default");if(_typeof4(res)!=="object")return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return (hint==="string"?String:Number)(input2)}function computeAccessibleDescription2(root){var options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},description=queryIdRefs2(root,"aria-describedby").map(function(element){return computeTextAlternative2(element,_objectSpread2(_objectSpread2({},options),{},{compute:"description"}))}).join(" ");if(description===""){var title=root.getAttribute("title");description=title===null?"":title;}return description}function prohibitsNaming2(node){return hasAnyConcreteRoles2(node,["caption","code","deletion","emphasis","generic","insertion","paragraph","presentation","strong","subscript","superscript"])}function computeAccessibleName2(root){var options=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};return prohibitsNaming2(root)?"":computeTextAlternative2(root,options)}var import_aria_query3=__toESM(require_lib2()),import_lz_string=__toESM(require_lz_string());function escapeHTML2(str){return str.replace(/</g,"&lt;").replace(/>/g,"&gt;")}var printProps2=(keys2,props,config3,indentation,depth,refs,printer2)=>{let indentationNext=indentation+config3.indent,colors=config3.colors;return keys2.map(key=>{let value=props[key],printed=printer2(value,config3,indentationNext,depth,refs);return typeof value!="string"&&(printed.indexOf(`\n`)!==-1&&(printed=config3.spacingOuter+indentationNext+printed+config3.spacingOuter+indentation),printed="{"+printed+"}"),config3.spacingInner+indentation+colors.prop.open+key+colors.prop.close+"="+colors.value.open+printed+colors.value.close}).join("")},NodeTypeTextNode=3,printChildren2=(children,config3,indentation,depth,refs,printer2)=>children.map(child=>{let printedChild=typeof child=="string"?printText2(child,config3):printer2(child,config3,indentation,depth,refs);return printedChild===""&&typeof child=="object"&&child!==null&&child.nodeType!==NodeTypeTextNode?"":config3.spacingOuter+indentation+printedChild}).join(""),printText2=(text,config3)=>{let contentColor=config3.colors.content;return contentColor.open+escapeHTML2(text)+contentColor.close},printComment2=(comment,config3)=>{let commentColor=config3.colors.comment;return commentColor.open+"\x3c!--"+escapeHTML2(comment)+"--\x3e"+commentColor.close},printElement2=(type5,printedProps,printedChildren,config3,indentation)=>{let tagColor=config3.colors.tag;return tagColor.open+"<"+type5+(printedProps&&tagColor.close+printedProps+config3.spacingOuter+indentation+tagColor.open)+(printedChildren?">"+tagColor.close+printedChildren+config3.spacingOuter+indentation+tagColor.open+"</"+type5:(printedProps&&!config3.min?"":" ")+"/")+">"+tagColor.close},printElementAsLeaf2=(type5,config3)=>{let tagColor=config3.colors.tag;return tagColor.open+"<"+type5+tagColor.close+" \\u2026"+tagColor.open+" />"+tagColor.close},ELEMENT_NODE$1=1,TEXT_NODE$1=3,COMMENT_NODE$1=8,FRAGMENT_NODE2=11,ELEMENT_REGEXP2=/^((HTML|SVG)\\w*)?Element$/,isCustomElement2=val=>{let{tagName}=val;return !!(typeof tagName=="string"&&tagName.includes("-")||typeof val.hasAttribute=="function"&&val.hasAttribute("is"))},testNode2=val=>{let constructorName=val.constructor.name,{nodeType}=val;return nodeType===ELEMENT_NODE$1&&(ELEMENT_REGEXP2.test(constructorName)||isCustomElement2(val))||nodeType===TEXT_NODE$1&&constructorName==="Text"||nodeType===COMMENT_NODE$1&&constructorName==="Comment"||nodeType===FRAGMENT_NODE2&&constructorName==="DocumentFragment"};function nodeIsText2(node){return node.nodeType===TEXT_NODE$1}function nodeIsComment2(node){return node.nodeType===COMMENT_NODE$1}function nodeIsFragment2(node){return node.nodeType===FRAGMENT_NODE2}function createDOMElementFilter(filterNode){return {test:val=>{var _val$constructor2;return ((val==null||(_val$constructor2=val.constructor)==null?void 0:_val$constructor2.name)||isCustomElement2(val))&&testNode2(val)},serialize:(node,config3,indentation,depth,refs,printer2)=>{if(nodeIsText2(node))return printText2(node.data,config3);if(nodeIsComment2(node))return printComment2(node.data,config3);let type5=nodeIsFragment2(node)?"DocumentFragment":node.tagName.toLowerCase();return ++depth>config3.maxDepth?printElementAsLeaf2(type5,config3):printElement2(type5,printProps2(nodeIsFragment2(node)?[]:Array.from(node.attributes).map(attr=>attr.name).sort(),nodeIsFragment2(node)?{}:Array.from(node.attributes).reduce((props,attribute)=>(props[attribute.name]=attribute.value,props),{}),config3,indentation+config3.indent,depth,refs,printer2),printChildren2(Array.prototype.slice.call(node.childNodes||node.children).filter(filterNode),config3,indentation+config3.indent,depth,refs,printer2),config3,indentation)}}}var chalk2=null,readFileSync=null,codeFrameColumns=null;try{let nodeRequire=module&&module.require;readFileSync=nodeRequire.call(module,"fs").readFileSync,codeFrameColumns=nodeRequire.call(module,"@babel/code-frame").codeFrameColumns,chalk2=nodeRequire.call(module,"chalk");}catch{}function getCodeFrame(frame){let locationStart=frame.indexOf("(")+1,locationEnd=frame.indexOf(")"),frameLocation=frame.slice(locationStart,locationEnd),frameLocationElements=frameLocation.split(":"),[filename,line,column]=[frameLocationElements[0],parseInt(frameLocationElements[1],10),parseInt(frameLocationElements[2],10)],rawFileContents="";try{rawFileContents=readFileSync(filename,"utf-8");}catch{return ""}let codeFrame=codeFrameColumns(rawFileContents,{start:{line,column}},{highlightCode:!0,linesBelow:0});return chalk2.dim(frameLocation)+`\n`+codeFrame+`\n`}function getUserCodeFrame(){if(!readFileSync||!codeFrameColumns)return "";let firstClientCodeFrame=new Error().stack.split(`\n`).slice(1).find(frame=>!frame.includes("node_modules/"));return getCodeFrame(firstClientCodeFrame)}var TEXT_NODE2=3;function jestFakeTimersAreEnabled(){return typeof jest<"u"&&jest!==null?setTimeout._isMockFunction===!0||Object.prototype.hasOwnProperty.call(setTimeout,"clock"):!1}function getDocument(){if(typeof window>"u")throw new Error("Could not find default container");return window.document}function getWindowFromNode(node){if(node.defaultView)return node.defaultView;if(node.ownerDocument&&node.ownerDocument.defaultView)return node.ownerDocument.defaultView;if(node.window)return node.window;throw node.ownerDocument&&node.ownerDocument.defaultView===null?new Error("It looks like the window object is not available for the provided node."):node.then instanceof Function?new Error("It looks like you passed a Promise object instead of a DOM node. Did you do something like `fireEvent.click(screen.findBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`, or await the findBy query `fireEvent.click(await screen.findBy...`?"):Array.isArray(node)?new Error("It looks like you passed an Array instead of a DOM node. Did you do something like `fireEvent.click(screen.getAllBy...` when you meant to use a `getBy` query `fireEvent.click(screen.getBy...`?"):typeof node.debug=="function"&&typeof node.logTestingPlaygroundURL=="function"?new Error("It looks like you passed a `screen` object. Did you do something like `fireEvent.click(screen, ...` when you meant to use a query, e.g. `fireEvent.click(screen.getBy..., `?"):new Error("The given node is not an Element, the node type is: "+typeof node+".")}function checkContainerType(container){if(!container||typeof container.querySelector!="function"||typeof container.querySelectorAll!="function")throw new TypeError("Expected container to be an Element, a Document or a DocumentFragment but got "+getTypeName(container)+".");function getTypeName(object){return typeof object=="object"?object===null?"null":object.constructor.name:typeof object}}var shouldHighlight=()=>{if(typeof process>"u")return !1;let colors;try{var _process$env;let colorsJSON=(_process$env=process.env)==null?void 0:_process$env.COLORS;colorsJSON&&(colors=JSON.parse(colorsJSON));}catch{}return typeof colors=="boolean"?colors:process.versions!==void 0&&process.versions.node!==void 0},{DOMCollection:DOMCollection3}=prettyFormat.plugins,ELEMENT_NODE2=1,COMMENT_NODE2=8;function filterCommentsAndDefaultIgnoreTagsTags(value){return value.nodeType!==COMMENT_NODE2&&(value.nodeType!==ELEMENT_NODE2||!value.matches(getConfig2().defaultIgnore))}function prettyDOM(dom,maxLength,options){if(options===void 0&&(options={}),dom||(dom=getDocument().body),typeof maxLength!="number"&&(maxLength=typeof process<"u"&&typeof process.env<"u"&&process.env.DEBUG_PRINT_LIMIT||7e3),maxLength===0)return "";dom.documentElement&&(dom=dom.documentElement);let domTypeName=typeof dom;if(domTypeName==="object"?domTypeName=dom.constructor.name:dom={},!("outerHTML"in dom))throw new TypeError("Expected an element or document but got "+domTypeName);let{filterNode=filterCommentsAndDefaultIgnoreTagsTags,...prettyFormatOptions}=options,debugContent=prettyFormat.format(dom,{plugins:[createDOMElementFilter(filterNode),DOMCollection3],printFunctionName:!1,highlight:shouldHighlight(),...prettyFormatOptions});return maxLength!==void 0&&dom.outerHTML.length>maxLength?debugContent.slice(0,maxLength)+"...":debugContent}var logDOM=function(){let userCodeFrame=getUserCodeFrame();console.log(userCodeFrame?prettyDOM(...arguments)+`\n\n`+userCodeFrame:prettyDOM(...arguments));},config2={testIdAttribute:"data-testid",asyncUtilTimeout:1e3,asyncWrapper:cb=>cb(),unstable_advanceTimersWrapper:cb=>cb(),eventWrapper:cb=>cb(),defaultHidden:!1,defaultIgnore:"script, style",showOriginalStackTrace:!1,throwSuggestions:!1,getElementError(message,container){let prettifiedDOM=prettyDOM(container),error=new Error([message,"Ignored nodes: comments, "+config2.defaultIgnore+`\n`+prettifiedDOM].filter(Boolean).join(`\n\n`));return error.name="TestingLibraryElementError",error},_disableExpensiveErrorDiagnostics:!1,computedStyleSupportsPseudoElements:!1};function runWithExpensiveErrorDiagnosticsDisabled(callback){try{return config2._disableExpensiveErrorDiagnostics=!0,callback()}finally{config2._disableExpensiveErrorDiagnostics=!1;}}function configure(newConfig){typeof newConfig=="function"&&(newConfig=newConfig(config2)),config2={...config2,...newConfig};}function getConfig2(){return config2}var labelledNodeNames=["button","meter","output","progress","select","textarea","input"];function getTextContent(node){return labelledNodeNames.includes(node.nodeName.toLowerCase())?"":node.nodeType===TEXT_NODE2?node.textContent:Array.from(node.childNodes).map(childNode=>getTextContent(childNode)).join("")}function getLabelContent(element){let textContent;return element.tagName.toLowerCase()==="label"?textContent=getTextContent(element):textContent=element.value||element.textContent,textContent}function getRealLabels(element){if(element.labels!==void 0){var _labels;return (_labels=element.labels)!=null?_labels:[]}if(!isLabelable(element))return [];let labels=element.ownerDocument.querySelectorAll("label");return Array.from(labels).filter(label=>label.control===element)}function isLabelable(element){return /BUTTON|METER|OUTPUT|PROGRESS|SELECT|TEXTAREA/.test(element.tagName)||element.tagName==="INPUT"&&element.getAttribute("type")!=="hidden"}function getLabels3(container,element,_temp){let{selector="*"}=_temp===void 0?{}:_temp,ariaLabelledBy=element.getAttribute("aria-labelledby"),labelsId=ariaLabelledBy?ariaLabelledBy.split(" "):[];return labelsId.length?labelsId.map(labelId=>{let labellingElement=container.querySelector(\'[id="\'+labelId+\'"]\');return labellingElement?{content:getLabelContent(labellingElement),formControl:null}:{content:"",formControl:null}}):Array.from(getRealLabels(element)).map(label=>{let textToMatch=getLabelContent(label),labelledFormControl=Array.from(label.querySelectorAll("button, input, meter, output, progress, select, textarea")).filter(formControlElement=>formControlElement.matches(selector))[0];return {content:textToMatch,formControl:labelledFormControl}})}function assertNotNullOrUndefined(matcher){if(matcher==null)throw new Error("It looks like "+matcher+" was passed instead of a matcher. Did you do something like getByText("+matcher+")?")}function fuzzyMatches(textToMatch,node,matcher,normalizer){if(typeof textToMatch!="string")return !1;assertNotNullOrUndefined(matcher);let normalizedText=normalizer(textToMatch);return typeof matcher=="string"||typeof matcher=="number"?normalizedText.toLowerCase().includes(matcher.toString().toLowerCase()):typeof matcher=="function"?matcher(normalizedText,node):matchRegExp(matcher,normalizedText)}function matches2(textToMatch,node,matcher,normalizer){if(typeof textToMatch!="string")return !1;assertNotNullOrUndefined(matcher);let normalizedText=normalizer(textToMatch);return matcher instanceof Function?matcher(normalizedText,node):matcher instanceof RegExp?matchRegExp(matcher,normalizedText):normalizedText===String(matcher)}function getDefaultNormalizer(_temp){let{trim=!0,collapseWhitespace=!0}=_temp===void 0?{}:_temp;return text=>{let normalizedText=text;return normalizedText=trim?normalizedText.trim():normalizedText,normalizedText=collapseWhitespace?normalizedText.replace(/\\s+/g," "):normalizedText,normalizedText}}function makeNormalizer(_ref){let{trim,collapseWhitespace,normalizer}=_ref;if(!normalizer)return getDefaultNormalizer({trim,collapseWhitespace});if(typeof trim<"u"||typeof collapseWhitespace<"u")throw new Error(\'trim and collapseWhitespace are not supported with a normalizer. If you want to use the default trim and collapseWhitespace logic in your normalizer, use "getDefaultNormalizer({trim, collapseWhitespace})" and compose that into your normalizer\');return normalizer}function matchRegExp(matcher,text){let match=matcher.test(text);return matcher.global&&matcher.lastIndex!==0&&(console.warn("To match all elements we had to reset the lastIndex of the RegExp because the global flag is enabled. We encourage to remove the global flag from the RegExp."),matcher.lastIndex=0),match}function getNodeText(node){return node.matches("input[type=submit], input[type=button], input[type=reset]")?node.value:Array.from(node.childNodes).filter(child=>child.nodeType===TEXT_NODE2&&!!child.textContent).map(c=>c.textContent).join("")}var elementRoleList2=buildElementRoleList2(import_aria_query3.elementRoles);function isSubtreeInaccessible(element){return element.hidden===!0||element.getAttribute("aria-hidden")==="true"||element.ownerDocument.defaultView.getComputedStyle(element).display==="none"}function isInaccessible(element,options){options===void 0&&(options={});let{isSubtreeInaccessible:isSubtreeInaccessibleImpl=isSubtreeInaccessible}=options;if(element.ownerDocument.defaultView.getComputedStyle(element).visibility==="hidden")return !0;let currentElement=element;for(;currentElement;){if(isSubtreeInaccessibleImpl(currentElement))return !0;currentElement=currentElement.parentElement;}return !1}function getImplicitAriaRoles2(currentNode){for(let{match,roles:roles3}of elementRoleList2)if(match(currentNode))return [...roles3];return []}function buildElementRoleList2(elementRolesMap){function makeElementSelector(_ref){let{name,attributes}=_ref;return ""+name+attributes.map(_ref2=>{let{name:attributeName,value,constraints=[]}=_ref2,shouldNotExist=constraints.indexOf("undefined")!==-1,shouldBeNonEmpty=constraints.indexOf("set")!==-1;return typeof value<"u"?"["+attributeName+\'="\'+value+\'"]\':shouldNotExist?":not(["+attributeName+"])":shouldBeNonEmpty?"["+attributeName+"]:not(["+attributeName+\'=""])\':"["+attributeName+"]"}).join("")}function getSelectorSpecificity(_ref3){let{attributes=[]}=_ref3;return attributes.length}function bySelectorSpecificity(_ref4,_ref5){let{specificity:leftSpecificity}=_ref4,{specificity:rightSpecificity}=_ref5;return rightSpecificity-leftSpecificity}function match(element){let{attributes=[]}=element,typeTextIndex=attributes.findIndex(attribute=>attribute.value&&attribute.name==="type"&&attribute.value==="text");typeTextIndex>=0&&(attributes=[...attributes.slice(0,typeTextIndex),...attributes.slice(typeTextIndex+1)]);let selector=makeElementSelector({...element,attributes});return node=>typeTextIndex>=0&&node.type!=="text"?!1:node.matches(selector)}let result=[];for(let[element,roles3]of elementRolesMap.entries())result=[...result,{match:match(element),roles:Array.from(roles3),specificity:getSelectorSpecificity(element)}];return result.sort(bySelectorSpecificity)}function getRoles(container,_temp){let{hidden=!1}=_temp===void 0?{}:_temp;function flattenDOM(node){return [node,...Array.from(node.children).reduce((acc,child)=>[...acc,...flattenDOM(child)],[])]}return flattenDOM(container).filter(element=>hidden===!1?isInaccessible(element)===!1:!0).reduce((acc,node)=>{let roles3=[];return node.hasAttribute("role")?roles3=node.getAttribute("role").split(" ").slice(0,1):roles3=getImplicitAriaRoles2(node),roles3.reduce((rolesAcc,role)=>Array.isArray(rolesAcc[role])?{...rolesAcc,[role]:[...rolesAcc[role],node]}:{...rolesAcc,[role]:[node]},acc)},{})}function prettyRoles(dom,_ref6){let{hidden,includeDescription}=_ref6,roles3=getRoles(dom,{hidden});return Object.entries(roles3).filter(_ref7=>{let[role]=_ref7;return role!=="generic"}).map(_ref8=>{let[role,elements]=_ref8,delimiterBar="-".repeat(50),elementsString=elements.map(el=>{let nameString=\'Name "\'+computeAccessibleName2(el,{computedStyleSupportsPseudoElements:getConfig2().computedStyleSupportsPseudoElements})+`":\n`,domString=prettyDOM(el.cloneNode(!1));if(includeDescription){let descriptionString=\'Description "\'+computeAccessibleDescription2(el,{computedStyleSupportsPseudoElements:getConfig2().computedStyleSupportsPseudoElements})+`":\n`;return ""+nameString+descriptionString+domString}return ""+nameString+domString}).join(`\n\n`);return role+`:\n\n`+elementsString+`\n\n`+delimiterBar}).join(`\n`)}var logRoles=function(dom,_temp2){let{hidden=!1}=_temp2===void 0?{}:_temp2;return console.log(prettyRoles(dom,{hidden}))};function computeAriaSelected(element){return element.tagName==="OPTION"?element.selected:checkBooleanAttribute(element,"aria-selected")}function computeAriaBusy(element){return element.getAttribute("aria-busy")==="true"}function computeAriaChecked(element){if(!("indeterminate"in element&&element.indeterminate))return "checked"in element?element.checked:checkBooleanAttribute(element,"aria-checked")}function computeAriaPressed(element){return checkBooleanAttribute(element,"aria-pressed")}function computeAriaCurrent(element){var _ref9,_checkBooleanAttribut;return (_ref9=(_checkBooleanAttribut=checkBooleanAttribute(element,"aria-current"))!=null?_checkBooleanAttribut:element.getAttribute("aria-current"))!=null?_ref9:!1}function computeAriaExpanded(element){return checkBooleanAttribute(element,"aria-expanded")}function checkBooleanAttribute(element,attribute){let attributeValue=element.getAttribute(attribute);if(attributeValue==="true")return !0;if(attributeValue==="false")return !1}function computeHeadingLevel(element){let implicitHeadingLevels={H1:1,H2:2,H3:3,H4:4,H5:5,H6:6};return element.getAttribute("aria-level")&&Number(element.getAttribute("aria-level"))||implicitHeadingLevels[element.tagName]}function computeAriaValueNow(element){let valueNow=element.getAttribute("aria-valuenow");return valueNow===null?void 0:+valueNow}function computeAriaValueMax(element){let valueMax=element.getAttribute("aria-valuemax");return valueMax===null?void 0:+valueMax}function computeAriaValueMin(element){let valueMin=element.getAttribute("aria-valuemin");return valueMin===null?void 0:+valueMin}function computeAriaValueText(element){let valueText=element.getAttribute("aria-valuetext");return valueText===null?void 0:valueText}var normalize2=getDefaultNormalizer();function escapeRegExp(string){return string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g,"\\\\$&")}function getRegExpMatcher(string){return new RegExp(escapeRegExp(string.toLowerCase()),"i")}function makeSuggestion(queryName,element,content,_ref){let{variant,name}=_ref,warning="",queryOptions={},queryArgs=[["Role","TestId"].includes(queryName)?content:getRegExpMatcher(content)];name&&(queryOptions.name=getRegExpMatcher(name)),queryName==="Role"&&isInaccessible(element)&&(queryOptions.hidden=!0,warning=`Element is inaccessible. This means that the element and all its children are invisible to screen readers.\n    If you are using the aria-hidden prop, make sure this is the right choice for your case.\n    `),Object.keys(queryOptions).length>0&&queryArgs.push(queryOptions);let queryMethod=variant+"By"+queryName;return {queryName,queryMethod,queryArgs,variant,warning,toString(){warning&&console.warn(warning);let[text,options]=queryArgs;return text=typeof text=="string"?"\'"+text+"\'":text,options=options?", { "+Object.entries(options).map(_ref2=>{let[k2,v]=_ref2;return k2+": "+v}).join(", ")+" }":"",queryMethod+"("+text+options+")"}}}function canSuggest(currentMethod,requestedMethod,data){return data&&(!requestedMethod||requestedMethod.toLowerCase()===currentMethod.toLowerCase())}function getSuggestedQuery(element,variant,method){var _element$getAttribute,_getImplicitAriaRoles;if(variant===void 0&&(variant="get"),element.matches(getConfig2().defaultIgnore))return;let role=(_element$getAttribute=element.getAttribute("role"))!=null?_element$getAttribute:(_getImplicitAriaRoles=getImplicitAriaRoles2(element))==null?void 0:_getImplicitAriaRoles[0];if(role!=="generic"&&canSuggest("Role",method,role))return makeSuggestion("Role",element,role,{variant,name:computeAccessibleName2(element,{computedStyleSupportsPseudoElements:getConfig2().computedStyleSupportsPseudoElements})});let labelText=getLabels3(document,element).map(label=>label.content).join(" ");if(canSuggest("LabelText",method,labelText))return makeSuggestion("LabelText",element,labelText,{variant});let placeholderText=element.getAttribute("placeholder");if(canSuggest("PlaceholderText",method,placeholderText))return makeSuggestion("PlaceholderText",element,placeholderText,{variant});let textContent=normalize2(getNodeText(element));if(canSuggest("Text",method,textContent))return makeSuggestion("Text",element,textContent,{variant});if(canSuggest("DisplayValue",method,element.value))return makeSuggestion("DisplayValue",element,normalize2(element.value),{variant});let alt=element.getAttribute("alt");if(canSuggest("AltText",method,alt))return makeSuggestion("AltText",element,alt,{variant});let title=element.getAttribute("title");if(canSuggest("Title",method,title))return makeSuggestion("Title",element,title,{variant});let testId=element.getAttribute(getConfig2().testIdAttribute);if(canSuggest("TestId",method,testId))return makeSuggestion("TestId",element,testId,{variant})}function copyStackTrace(target,source){target.stack=source.stack.replace(source.message,target.message);}function waitFor(callback,_ref){let{container=getDocument(),timeout=getConfig2().asyncUtilTimeout,showOriginalStackTrace=getConfig2().showOriginalStackTrace,stackTraceError,interval=50,onTimeout=error=>(Object.defineProperty(error,"message",{value:getConfig2().getElementError(error.message,container).message}),error),mutationObserverOptions={subtree:!0,childList:!0,attributes:!0,characterData:!0}}=_ref;if(typeof callback!="function")throw new TypeError("Received `callback` arg must be a function");return new Promise(async(resolve,reject)=>{let lastError,intervalId,observer,finished=!1,promiseStatus="idle",overallTimeoutTimer=setTimeout(handleTimeout,timeout),usingJestFakeTimers=jestFakeTimersAreEnabled();if(usingJestFakeTimers){let{unstable_advanceTimersWrapper:advanceTimersWrapper}=getConfig2();for(checkCallback();!finished;){if(!jestFakeTimersAreEnabled()){let error=new Error("Changed from using fake timers to real timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you\'re awaiting all async things your test is doing before changing to real timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830");showOriginalStackTrace||copyStackTrace(error,stackTraceError),reject(error);return}if(await advanceTimersWrapper(async()=>{jest.advanceTimersByTime(interval);}),finished)break;checkCallback();}}else {try{checkContainerType(container);}catch(e){reject(e);return}intervalId=setInterval(checkRealTimersCallback,interval);let{MutationObserver}=getWindowFromNode(container);observer=new MutationObserver(checkRealTimersCallback),observer.observe(container,mutationObserverOptions),checkCallback();}function onDone(error,result){finished=!0,clearTimeout(overallTimeoutTimer),usingJestFakeTimers||(clearInterval(intervalId),observer.disconnect()),error?reject(error):resolve(result);}function checkRealTimersCallback(){if(jestFakeTimersAreEnabled()){let error=new Error("Changed from using real timers to fake timers while using waitFor. This is not allowed and will result in very strange behavior. Please ensure you\'re awaiting all async things your test is doing before changing to fake timers. For more info, please go to https://github.com/testing-library/dom-testing-library/issues/830");return showOriginalStackTrace||copyStackTrace(error,stackTraceError),reject(error)}else return checkCallback()}function checkCallback(){if(promiseStatus!=="pending")try{let result=runWithExpensiveErrorDiagnosticsDisabled(callback);typeof result?.then=="function"?(promiseStatus="pending",result.then(resolvedValue=>{promiseStatus="resolved",onDone(null,resolvedValue);},rejectedValue=>{promiseStatus="rejected",lastError=rejectedValue;})):onDone(null,result);}catch(error){lastError=error;}}function handleTimeout(){let error;lastError?(error=lastError,!showOriginalStackTrace&&error.name==="TestingLibraryElementError"&&copyStackTrace(error,stackTraceError)):(error=new Error("Timed out in waitFor."),showOriginalStackTrace||copyStackTrace(error,stackTraceError)),onDone(onTimeout(error),null);}})}function waitForWrapper(callback,options){let stackTraceError=new Error("STACK_TRACE_MESSAGE");return getConfig2().asyncWrapper(()=>waitFor(callback,{stackTraceError,...options}))}function getElementError(message,container){return getConfig2().getElementError(message,container)}function getMultipleElementsFoundError(message,container){return getElementError(message+"\\n\\n(If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).",container)}function queryAllByAttribute(attribute,container,text,_temp){let{exact=!0,collapseWhitespace,trim,normalizer}=_temp===void 0?{}:_temp,matcher=exact?matches2:fuzzyMatches,matchNormalizer=makeNormalizer({collapseWhitespace,trim,normalizer});return Array.from(container.querySelectorAll("["+attribute+"]")).filter(node=>matcher(node.getAttribute(attribute),node,text,matchNormalizer))}function queryByAttribute(attribute,container,text,options){let els=queryAllByAttribute(attribute,container,text,options);if(els.length>1)throw getMultipleElementsFoundError("Found multiple elements by ["+attribute+"="+text+"]",container);return els[0]||null}function makeSingleQuery(allQuery,getMultipleError2){return function(container){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];let els=allQuery(container,...args);if(els.length>1){let elementStrings=els.map(element=>getElementError(null,element).message).join(`\n\n`);throw getMultipleElementsFoundError(getMultipleError2(container,...args)+`\n\nHere are the matching elements:\n\n`+elementStrings,container)}return els[0]||null}}function getSuggestionError(suggestion,container){return getConfig2().getElementError(`A better query is available, try this:\n`+suggestion.toString()+`\n`,container)}function makeGetAllQuery(allQuery,getMissingError2){return function(container){for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++)args[_key2-1]=arguments[_key2];let els=allQuery(container,...args);if(!els.length)throw getConfig2().getElementError(getMissingError2(container,...args),container);return els}}function makeFindQuery(getter){return (container,text,options,waitForOptions)=>waitForWrapper(()=>getter(container,text,options),{container,...waitForOptions})}var wrapSingleQueryWithSuggestion=(query,queryAllByName,variant)=>function(container){for(var _len3=arguments.length,args=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++)args[_key3-1]=arguments[_key3];let element=query(container,...args),[{suggest=getConfig2().throwSuggestions}={}]=args.slice(-1);if(element&&suggest){let suggestion=getSuggestedQuery(element,variant);if(suggestion&&!queryAllByName.endsWith(suggestion.queryName))throw getSuggestionError(suggestion.toString(),container)}return element},wrapAllByQueryWithSuggestion=(query,queryAllByName,variant)=>function(container){for(var _len4=arguments.length,args=new Array(_len4>1?_len4-1:0),_key4=1;_key4<_len4;_key4++)args[_key4-1]=arguments[_key4];let els=query(container,...args),[{suggest=getConfig2().throwSuggestions}={}]=args.slice(-1);if(els.length&&suggest){let uniqueSuggestionMessages=[...new Set(els.map(element=>{var _getSuggestedQuery;return (_getSuggestedQuery=getSuggestedQuery(element,variant))==null?void 0:_getSuggestedQuery.toString()}))];if(uniqueSuggestionMessages.length===1&&!queryAllByName.endsWith(getSuggestedQuery(els[0],variant).queryName))throw getSuggestionError(uniqueSuggestionMessages[0],container)}return els};function buildQueries(queryAllBy,getMultipleError2,getMissingError2){let queryBy=wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllBy,getMultipleError2),queryAllBy.name,"query"),getAllBy=makeGetAllQuery(queryAllBy,getMissingError2),getBy=makeSingleQuery(getAllBy,getMultipleError2),getByWithSuggestions=wrapSingleQueryWithSuggestion(getBy,queryAllBy.name,"get"),getAllWithSuggestions=wrapAllByQueryWithSuggestion(getAllBy,queryAllBy.name.replace("query","get"),"getAll"),findAllBy=makeFindQuery(wrapAllByQueryWithSuggestion(getAllBy,queryAllBy.name,"findAll")),findBy=makeFindQuery(wrapSingleQueryWithSuggestion(getBy,queryAllBy.name,"find"));return [queryBy,getAllWithSuggestions,getByWithSuggestions,findAllBy,findBy]}var queryHelpers=Object.freeze({__proto__:null,getElementError,wrapAllByQueryWithSuggestion,wrapSingleQueryWithSuggestion,getMultipleElementsFoundError,queryAllByAttribute,queryByAttribute,makeSingleQuery,makeGetAllQuery,makeFindQuery,buildQueries});function queryAllLabels(container){return Array.from(container.querySelectorAll("label,input")).map(node=>({node,textToMatch:getLabelContent(node)})).filter(_ref=>{let{textToMatch}=_ref;return textToMatch!==null})}var queryAllLabelsByText=function(container,text,_temp){let{exact=!0,trim,collapseWhitespace,normalizer}=_temp===void 0?{}:_temp,matcher=exact?matches2:fuzzyMatches,matchNormalizer=makeNormalizer({collapseWhitespace,trim,normalizer});return queryAllLabels(container).filter(_ref2=>{let{node,textToMatch}=_ref2;return matcher(textToMatch,node,text,matchNormalizer)}).map(_ref3=>{let{node}=_ref3;return node})},queryAllByLabelText=function(container,text,_temp2){let{selector="*",exact=!0,collapseWhitespace,trim,normalizer}=_temp2===void 0?{}:_temp2;checkContainerType(container);let matcher=exact?matches2:fuzzyMatches,matchNormalizer=makeNormalizer({collapseWhitespace,trim,normalizer}),matchingLabelledElements=Array.from(container.querySelectorAll("*")).filter(element=>getRealLabels(element).length||element.hasAttribute("aria-labelledby")).reduce((labelledElements,labelledElement)=>{let labelList=getLabels3(container,labelledElement,{selector});labelList.filter(label=>!!label.formControl).forEach(label=>{matcher(label.content,label.formControl,text,matchNormalizer)&&label.formControl&&labelledElements.push(label.formControl);});let labelsValue=labelList.filter(label=>!!label.content).map(label=>label.content);return matcher(labelsValue.join(" "),labelledElement,text,matchNormalizer)&&labelledElements.push(labelledElement),labelsValue.length>1&&labelsValue.forEach((labelValue,index)=>{matcher(labelValue,labelledElement,text,matchNormalizer)&&labelledElements.push(labelledElement);let labelsFiltered=[...labelsValue];labelsFiltered.splice(index,1),labelsFiltered.length>1&&matcher(labelsFiltered.join(" "),labelledElement,text,matchNormalizer)&&labelledElements.push(labelledElement);}),labelledElements},[]).concat(queryAllByAttribute("aria-label",container,text,{exact,normalizer:matchNormalizer}));return Array.from(new Set(matchingLabelledElements)).filter(element=>element.matches(selector))},getAllByLabelText=function(container,text){for(var _len=arguments.length,rest=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++)rest[_key-2]=arguments[_key];let els=queryAllByLabelText(container,text,...rest);if(!els.length){let labels=queryAllLabelsByText(container,text,...rest);if(labels.length){let tagNames=labels.map(label=>getTagNameOfElementAssociatedWithLabelViaFor(container,label)).filter(tagName=>!!tagName);throw tagNames.length?getConfig2().getElementError(tagNames.map(tagName=>"Found a label with the text of: "+text+", however the element associated with this label (<"+tagName+" />) is non-labellable [https://html.spec.whatwg.org/multipage/forms.html#category-label]. If you really need to label a <"+tagName+" />, you can use aria-label or aria-labelledby instead.").join(`\n\n`),container):getConfig2().getElementError("Found a label with the text of: "+text+`, however no form control was found associated to that label. Make sure you\'re using the "for" attribute or "aria-labelledby" attribute correctly.`,container)}else throw getConfig2().getElementError("Unable to find a label with the text of: "+text,container)}return els};function getTagNameOfElementAssociatedWithLabelViaFor(container,label){let htmlFor=label.getAttribute("for");if(!htmlFor)return null;let element=container.querySelector(\'[id="\'+htmlFor+\'"]\');return element?element.tagName.toLowerCase():null}var getMultipleError$7=(c,text)=>"Found multiple elements with the text of: "+text,queryByLabelText=wrapSingleQueryWithSuggestion(makeSingleQuery(queryAllByLabelText,getMultipleError$7),queryAllByLabelText.name,"query"),getByLabelText=makeSingleQuery(getAllByLabelText,getMultipleError$7),findAllByLabelText=makeFindQuery(wrapAllByQueryWithSuggestion(getAllByLabelText,getAllByLabelText.name,"findAll")),findByLabelText=makeFindQuery(wrapSingleQueryWithSuggestion(getByLabelText,getAllByLabelText.name,"find")),getAllByLabelTextWithSuggestions=wrapAllByQueryWithSuggestion(getAllByLabelText,getAllByLabelText.name,"getAll"),getByLabelTextWithSuggestions=wrapSingleQueryWithSuggestion(getByLabelText,getAllByLabelText.name,"get"),queryAllByLabelTextWithSuggestions=wrapAllByQueryWithSuggestion(queryAllByLabelText,queryAllByLabelText.name,"queryAll"),queryAllByPlaceholderText=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return checkContainerType(args[0]),queryAllByAttribute("placeholder",...args)},getMultipleError$6=(c,text)=>"Found multiple elements with the placeholder text of: "+text,getMissingError$6=(c,text)=>"Unable to find an element with the placeholder text of: "+text,queryAllByPlaceholderTextWithSuggestions=wrapAllByQueryWithSuggestion(queryAllByPlaceholderText,queryAllByPlaceholderText.name,"queryAll"),[queryByPlaceholderText,getAllByPlaceholderText,getByPlaceholderText,findAllByPlaceholderText,findByPlaceholderText]=buildQueries(queryAllByPlaceholderText,getMultipleError$6,getMissingError$6),queryAllByText=function(container,text,_temp){let{selector="*",exact=!0,collapseWhitespace,trim,ignore=getConfig2().defaultIgnore,normalizer}=_temp===void 0?{}:_temp;checkContainerType(container);let matcher=exact?matches2:fuzzyMatches,matchNormalizer=makeNormalizer({collapseWhitespace,trim,normalizer}),baseArray=[];return typeof container.matches=="function"&&container.matches(selector)&&(baseArray=[container]),[...baseArray,...Array.from(container.querySelectorAll(selector))].filter(node=>!ignore||!node.matches(ignore)).filter(node=>matcher(getNodeText(node),node,text,matchNormalizer))},getMultipleError$5=(c,text)=>"Found multiple elements with the text: "+text,getMissingError$5=function(c,text,options){options===void 0&&(options={});let{collapseWhitespace,trim,normalizer,selector}=options,normalizedText=makeNormalizer({collapseWhitespace,trim,normalizer})(text.toString()),isNormalizedDifferent=normalizedText!==text.toString(),isCustomSelector=(selector??"*")!=="*";return "Unable to find an element with the text: "+(isNormalizedDifferent?normalizedText+" (normalized from \'"+text+"\')":text)+(isCustomSelector?", which matches selector \'"+selector+"\'":"")+". This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible."},queryAllByTextWithSuggestions=wrapAllByQueryWithSuggestion(queryAllByText,queryAllByText.name,"queryAll"),[queryByText,getAllByText,getByText,findAllByText,findByText]=buildQueries(queryAllByText,getMultipleError$5,getMissingError$5),queryAllByDisplayValue=function(container,value,_temp){let{exact=!0,collapseWhitespace,trim,normalizer}=_temp===void 0?{}:_temp;checkContainerType(container);let matcher=exact?matches2:fuzzyMatches,matchNormalizer=makeNormalizer({collapseWhitespace,trim,normalizer});return Array.from(container.querySelectorAll("input,textarea,select")).filter(node=>node.tagName==="SELECT"?Array.from(node.options).filter(option=>option.selected).some(optionNode=>matcher(getNodeText(optionNode),optionNode,value,matchNormalizer)):matcher(node.value,node,value,matchNormalizer))},getMultipleError$4=(c,value)=>"Found multiple elements with the display value: "+value+".",getMissingError$4=(c,value)=>"Unable to find an element with the display value: "+value+".",queryAllByDisplayValueWithSuggestions=wrapAllByQueryWithSuggestion(queryAllByDisplayValue,queryAllByDisplayValue.name,"queryAll"),[queryByDisplayValue,getAllByDisplayValue,getByDisplayValue,findAllByDisplayValue,findByDisplayValue]=buildQueries(queryAllByDisplayValue,getMultipleError$4,getMissingError$4),VALID_TAG_REGEXP=/^(img|input|area|.+-.+)$/i,queryAllByAltText=function(container,alt,options){return options===void 0&&(options={}),checkContainerType(container),queryAllByAttribute("alt",container,alt,options).filter(node=>VALID_TAG_REGEXP.test(node.tagName))},getMultipleError$3=(c,alt)=>"Found multiple elements with the alt text: "+alt,getMissingError$3=(c,alt)=>"Unable to find an element with the alt text: "+alt,queryAllByAltTextWithSuggestions=wrapAllByQueryWithSuggestion(queryAllByAltText,queryAllByAltText.name,"queryAll"),[queryByAltText,getAllByAltText,getByAltText,findAllByAltText,findByAltText]=buildQueries(queryAllByAltText,getMultipleError$3,getMissingError$3),isSvgTitle=node=>{var _node$parentElement;return node.tagName.toLowerCase()==="title"&&((_node$parentElement=node.parentElement)==null?void 0:_node$parentElement.tagName.toLowerCase())==="svg"},queryAllByTitle=function(container,text,_temp){let{exact=!0,collapseWhitespace,trim,normalizer}=_temp===void 0?{}:_temp;checkContainerType(container);let matcher=exact?matches2:fuzzyMatches,matchNormalizer=makeNormalizer({collapseWhitespace,trim,normalizer});return Array.from(container.querySelectorAll("[title], svg > title")).filter(node=>matcher(node.getAttribute("title"),node,text,matchNormalizer)||isSvgTitle(node)&&matcher(getNodeText(node),node,text,matchNormalizer))},getMultipleError$2=(c,title)=>"Found multiple elements with the title: "+title+".",getMissingError$2=(c,title)=>"Unable to find an element with the title: "+title+".",queryAllByTitleWithSuggestions=wrapAllByQueryWithSuggestion(queryAllByTitle,queryAllByTitle.name,"queryAll"),[queryByTitle,getAllByTitle,getByTitle,findAllByTitle,findByTitle]=buildQueries(queryAllByTitle,getMultipleError$2,getMissingError$2),queryAllByRole=function(container,role,_temp){let{hidden=getConfig2().defaultHidden,name,description,queryFallbacks=!1,selected,busy,checked,pressed,current,level,expanded,value:{now:valueNow,min:valueMin,max:valueMax,text:valueText}={}}=_temp===void 0?{}:_temp;if(checkContainerType(container),selected!==void 0){var _allRoles$get;if(((_allRoles$get=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get.props["aria-selected"])===void 0)throw new Error(\'"aria-selected" is not supported on role "\'+role+\'".\')}if(busy!==void 0){var _allRoles$get2;if(((_allRoles$get2=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get2.props["aria-busy"])===void 0)throw new Error(\'"aria-busy" is not supported on role "\'+role+\'".\')}if(checked!==void 0){var _allRoles$get3;if(((_allRoles$get3=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get3.props["aria-checked"])===void 0)throw new Error(\'"aria-checked" is not supported on role "\'+role+\'".\')}if(pressed!==void 0){var _allRoles$get4;if(((_allRoles$get4=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get4.props["aria-pressed"])===void 0)throw new Error(\'"aria-pressed" is not supported on role "\'+role+\'".\')}if(current!==void 0){var _allRoles$get5;if(((_allRoles$get5=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get5.props["aria-current"])===void 0)throw new Error(\'"aria-current" is not supported on role "\'+role+\'".\')}if(level!==void 0&&role!=="heading")throw new Error(\'Role "\'+role+\'" cannot have "level" property.\');if(valueNow!==void 0){var _allRoles$get6;if(((_allRoles$get6=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get6.props["aria-valuenow"])===void 0)throw new Error(\'"aria-valuenow" is not supported on role "\'+role+\'".\')}if(valueMax!==void 0){var _allRoles$get7;if(((_allRoles$get7=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get7.props["aria-valuemax"])===void 0)throw new Error(\'"aria-valuemax" is not supported on role "\'+role+\'".\')}if(valueMin!==void 0){var _allRoles$get8;if(((_allRoles$get8=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get8.props["aria-valuemin"])===void 0)throw new Error(\'"aria-valuemin" is not supported on role "\'+role+\'".\')}if(valueText!==void 0){var _allRoles$get9;if(((_allRoles$get9=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get9.props["aria-valuetext"])===void 0)throw new Error(\'"aria-valuetext" is not supported on role "\'+role+\'".\')}if(expanded!==void 0){var _allRoles$get10;if(((_allRoles$get10=import_aria_query3.roles.get(role))==null?void 0:_allRoles$get10.props["aria-expanded"])===void 0)throw new Error(\'"aria-expanded" is not supported on role "\'+role+\'".\')}let subtreeIsInaccessibleCache=new WeakMap;function cachedIsSubtreeInaccessible(element){return subtreeIsInaccessibleCache.has(element)||subtreeIsInaccessibleCache.set(element,isSubtreeInaccessible(element)),subtreeIsInaccessibleCache.get(element)}return Array.from(container.querySelectorAll(makeRoleSelector(role))).filter(node=>{if(node.hasAttribute("role")){let roleValue=node.getAttribute("role");if(queryFallbacks)return roleValue.split(" ").filter(Boolean).some(roleAttributeToken=>roleAttributeToken===role);let[firstRoleAttributeToken]=roleValue.split(" ");return firstRoleAttributeToken===role}return getImplicitAriaRoles2(node).some(implicitRole=>implicitRole===role)}).filter(element=>{if(selected!==void 0)return selected===computeAriaSelected(element);if(busy!==void 0)return busy===computeAriaBusy(element);if(checked!==void 0)return checked===computeAriaChecked(element);if(pressed!==void 0)return pressed===computeAriaPressed(element);if(current!==void 0)return current===computeAriaCurrent(element);if(expanded!==void 0)return expanded===computeAriaExpanded(element);if(level!==void 0)return level===computeHeadingLevel(element);if(valueNow!==void 0||valueMax!==void 0||valueMin!==void 0||valueText!==void 0){let valueMatches=!0;if(valueNow!==void 0&&valueMatches&&(valueMatches=valueNow===computeAriaValueNow(element)),valueMax!==void 0&&valueMatches&&(valueMatches=valueMax===computeAriaValueMax(element)),valueMin!==void 0&&valueMatches&&(valueMatches=valueMin===computeAriaValueMin(element)),valueText!==void 0){var _computeAriaValueText;valueMatches&&(valueMatches=matches2((_computeAriaValueText=computeAriaValueText(element))!=null?_computeAriaValueText:null,element,valueText,text=>text));}return valueMatches}return !0}).filter(element=>name===void 0?!0:matches2(computeAccessibleName2(element,{computedStyleSupportsPseudoElements:getConfig2().computedStyleSupportsPseudoElements}),element,name,text=>text)).filter(element=>description===void 0?!0:matches2(computeAccessibleDescription2(element,{computedStyleSupportsPseudoElements:getConfig2().computedStyleSupportsPseudoElements}),element,description,text=>text)).filter(element=>hidden===!1?isInaccessible(element,{isSubtreeInaccessible:cachedIsSubtreeInaccessible})===!1:!0)};function makeRoleSelector(role){var _roleElements$get;let explicitRoleSelector=\'*[role~="\'+role+\'"]\',roleRelations=(_roleElements$get=import_aria_query3.roleElements.get(role))!=null?_roleElements$get:new Set,implicitRoleSelectors=new Set(Array.from(roleRelations).map(_ref=>{let{name}=_ref;return name}));return [explicitRoleSelector].concat(Array.from(implicitRoleSelectors)).join(",")}var getNameHint=name=>{let nameHint="";return name===void 0?nameHint="":typeof name=="string"?nameHint=\' and name "\'+name+\'"\':nameHint=" and name `"+name+"`",nameHint},getMultipleError$1=function(c,role,_temp2){let{name}=_temp2===void 0?{}:_temp2;return \'Found multiple elements with the role "\'+role+\'"\'+getNameHint(name)},getMissingError$1=function(container,role,_temp3){let{hidden=getConfig2().defaultHidden,name,description}=_temp3===void 0?{}:_temp3;if(getConfig2()._disableExpensiveErrorDiagnostics)return \'Unable to find role="\'+role+\'"\'+getNameHint(name);let roles3="";Array.from(container.children).forEach(childElement=>{roles3+=prettyRoles(childElement,{hidden,includeDescription:description!==void 0});});let roleMessage;roles3.length===0?hidden===!1?roleMessage="There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole":roleMessage="There are no available roles.":roleMessage=(`\nHere are the `+(hidden===!1?"accessible":"available")+` roles:\n\n  `+roles3.replace(/\\n/g,`\n  `).replace(/\\n\\s\\s\\n/g,`\n\n`)+`\n`).trim();let nameHint="";name===void 0?nameHint="":typeof name=="string"?nameHint=\' and name "\'+name+\'"\':nameHint=" and name `"+name+"`";let descriptionHint="";return description===void 0?descriptionHint="":typeof description=="string"?descriptionHint=\' and description "\'+description+\'"\':descriptionHint=" and description `"+description+"`",(`\nUnable to find an `+(hidden===!1?"accessible ":"")+\'element with the role "\'+role+\'"\'+nameHint+descriptionHint+`\n\n`+roleMessage).trim()},queryAllByRoleWithSuggestions=wrapAllByQueryWithSuggestion(queryAllByRole,queryAllByRole.name,"queryAll"),[queryByRole,getAllByRole,getByRole,findAllByRole,findByRole]=buildQueries(queryAllByRole,getMultipleError$1,getMissingError$1),getTestIdAttribute=()=>getConfig2().testIdAttribute,queryAllByTestId=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return checkContainerType(args[0]),queryAllByAttribute(getTestIdAttribute(),...args)},getMultipleError=(c,id)=>"Found multiple elements by: ["+getTestIdAttribute()+\'="\'+id+\'"]\',getMissingError=(c,id)=>"Unable to find an element by: ["+getTestIdAttribute()+\'="\'+id+\'"]\',queryAllByTestIdWithSuggestions=wrapAllByQueryWithSuggestion(queryAllByTestId,queryAllByTestId.name,"queryAll"),[queryByTestId,getAllByTestId,getByTestId,findAllByTestId,findByTestId]=buildQueries(queryAllByTestId,getMultipleError,getMissingError),queries=Object.freeze({__proto__:null,queryAllByLabelText:queryAllByLabelTextWithSuggestions,queryByLabelText,getAllByLabelText:getAllByLabelTextWithSuggestions,getByLabelText:getByLabelTextWithSuggestions,findAllByLabelText,findByLabelText,queryByPlaceholderText,queryAllByPlaceholderText:queryAllByPlaceholderTextWithSuggestions,getByPlaceholderText,getAllByPlaceholderText,findAllByPlaceholderText,findByPlaceholderText,queryByText,queryAllByText:queryAllByTextWithSuggestions,getByText,getAllByText,findAllByText,findByText,queryByDisplayValue,queryAllByDisplayValue:queryAllByDisplayValueWithSuggestions,getByDisplayValue,getAllByDisplayValue,findAllByDisplayValue,findByDisplayValue,queryByAltText,queryAllByAltText:queryAllByAltTextWithSuggestions,getByAltText,getAllByAltText,findAllByAltText,findByAltText,queryByTitle,queryAllByTitle:queryAllByTitleWithSuggestions,getByTitle,getAllByTitle,findAllByTitle,findByTitle,queryByRole,queryAllByRole:queryAllByRoleWithSuggestions,getAllByRole,getByRole,findAllByRole,findByRole,queryByTestId,queryAllByTestId:queryAllByTestIdWithSuggestions,getByTestId,getAllByTestId,findAllByTestId,findByTestId});function getQueriesForElement(element,queries$1,initialValue2){return queries$1===void 0&&(queries$1=queries),initialValue2===void 0&&(initialValue2={}),Object.keys(queries$1).reduce((helpers,key)=>{let fn3=queries$1[key];return helpers[key]=fn3.bind(null,element),helpers},initialValue2)}var isRemoved=result=>!result||Array.isArray(result)&&!result.length;function initialCheck(elements){if(isRemoved(elements))throw new Error("The element(s) given to waitForElementToBeRemoved are already removed. waitForElementToBeRemoved requires that the element(s) exist(s) before waiting for removal.")}async function waitForElementToBeRemoved(callback,options){let timeoutError=new Error("Timed out in waitForElementToBeRemoved.");if(typeof callback!="function"){initialCheck(callback);let getRemainingElements=(Array.isArray(callback)?callback:[callback]).map(element=>{let parent=element.parentElement;if(parent===null)return ()=>null;for(;parent.parentElement;)parent=parent.parentElement;return ()=>parent.contains(element)?element:null});callback=()=>getRemainingElements.map(c=>c()).filter(Boolean);}return initialCheck(callback()),waitForWrapper(()=>{let result;try{result=callback();}catch(error){if(error.name==="TestingLibraryElementError")return;throw error}if(!isRemoved(result))throw timeoutError},options)}var eventMap={copy:{EventType:"ClipboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},cut:{EventType:"ClipboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},paste:{EventType:"ClipboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},compositionEnd:{EventType:"CompositionEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},compositionStart:{EventType:"CompositionEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},compositionUpdate:{EventType:"CompositionEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},keyDown:{EventType:"KeyboardEvent",defaultInit:{bubbles:!0,cancelable:!0,charCode:0,composed:!0}},keyPress:{EventType:"KeyboardEvent",defaultInit:{bubbles:!0,cancelable:!0,charCode:0,composed:!0}},keyUp:{EventType:"KeyboardEvent",defaultInit:{bubbles:!0,cancelable:!0,charCode:0,composed:!0}},focus:{EventType:"FocusEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},blur:{EventType:"FocusEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},focusIn:{EventType:"FocusEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},focusOut:{EventType:"FocusEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},change:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!1}},input:{EventType:"InputEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},invalid:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!0}},submit:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!0}},reset:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!0}},click:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,button:0,composed:!0}},contextMenu:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},dblClick:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},drag:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},dragEnd:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},dragEnter:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},dragExit:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},dragLeave:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},dragOver:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},dragStart:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},drop:{EventType:"DragEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseDown:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseEnter:{EventType:"MouseEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},mouseLeave:{EventType:"MouseEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},mouseMove:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseOut:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseOver:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseUp:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},select:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!1}},touchCancel:{EventType:"TouchEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},touchEnd:{EventType:"TouchEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},touchMove:{EventType:"TouchEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},touchStart:{EventType:"TouchEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},resize:{EventType:"UIEvent",defaultInit:{bubbles:!1,cancelable:!1}},scroll:{EventType:"UIEvent",defaultInit:{bubbles:!1,cancelable:!1}},wheel:{EventType:"WheelEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},abort:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},canPlay:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},canPlayThrough:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},durationChange:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},emptied:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},encrypted:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},ended:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},loadedData:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},loadedMetadata:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},loadStart:{EventType:"ProgressEvent",defaultInit:{bubbles:!1,cancelable:!1}},pause:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},play:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},playing:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},progress:{EventType:"ProgressEvent",defaultInit:{bubbles:!1,cancelable:!1}},rateChange:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},seeked:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},seeking:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},stalled:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},suspend:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},timeUpdate:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},volumeChange:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},waiting:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},load:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},error:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},animationStart:{EventType:"AnimationEvent",defaultInit:{bubbles:!0,cancelable:!1}},animationEnd:{EventType:"AnimationEvent",defaultInit:{bubbles:!0,cancelable:!1}},animationIteration:{EventType:"AnimationEvent",defaultInit:{bubbles:!0,cancelable:!1}},transitionCancel:{EventType:"TransitionEvent",defaultInit:{bubbles:!0,cancelable:!1}},transitionEnd:{EventType:"TransitionEvent",defaultInit:{bubbles:!0,cancelable:!0}},transitionRun:{EventType:"TransitionEvent",defaultInit:{bubbles:!0,cancelable:!1}},transitionStart:{EventType:"TransitionEvent",defaultInit:{bubbles:!0,cancelable:!1}},pointerOver:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerEnter:{EventType:"PointerEvent",defaultInit:{bubbles:!1,cancelable:!1}},pointerDown:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerMove:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerUp:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerCancel:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},pointerOut:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerLeave:{EventType:"PointerEvent",defaultInit:{bubbles:!1,cancelable:!1}},gotPointerCapture:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},lostPointerCapture:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},popState:{EventType:"PopStateEvent",defaultInit:{bubbles:!0,cancelable:!1}},offline:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},online:{EventType:"Event",defaultInit:{bubbles:!1,cancelable:!1}},pageHide:{EventType:"PageTransitionEvent",defaultInit:{bubbles:!0,cancelable:!0}},pageShow:{EventType:"PageTransitionEvent",defaultInit:{bubbles:!0,cancelable:!0}}},eventAliasMap={doubleClick:"dblClick"};function fireEvent(element,event){return getConfig2().eventWrapper(()=>{if(!event)throw new Error("Unable to fire an event - please provide an event object.");if(!element)throw new Error(\'Unable to fire a "\'+event.type+\'" event - please provide a DOM element.\');return element.dispatchEvent(event)})}function createEvent(eventName,node,init,_temp){let{EventType="Event",defaultInit={}}=_temp===void 0?{}:_temp;if(!node)throw new Error(\'Unable to fire a "\'+eventName+\'" event - please provide a DOM element.\');let eventInit={...defaultInit,...init},{target:{value,files,...targetProperties}={}}=eventInit;value!==void 0&&setNativeValue(node,value),files!==void 0&&Object.defineProperty(node,"files",{configurable:!0,enumerable:!0,writable:!0,value:files}),Object.assign(node,targetProperties);let window2=getWindowFromNode(node),EventConstructor=window2[EventType]||window2.Event,event;if(typeof EventConstructor=="function")event=new EventConstructor(eventName,eventInit);else {event=window2.document.createEvent(EventType);let{bubbles,cancelable,detail,...otherInit}=eventInit;event.initEvent(eventName,bubbles,cancelable,detail),Object.keys(otherInit).forEach(eventKey=>{event[eventKey]=otherInit[eventKey];});}return ["dataTransfer","clipboardData"].forEach(dataTransferKey=>{let dataTransferValue=eventInit[dataTransferKey];typeof dataTransferValue=="object"&&(typeof window2.DataTransfer=="function"?Object.defineProperty(event,dataTransferKey,{value:Object.getOwnPropertyNames(dataTransferValue).reduce((acc,propName)=>(Object.defineProperty(acc,propName,{value:dataTransferValue[propName]}),acc),new window2.DataTransfer)}):Object.defineProperty(event,dataTransferKey,{value:dataTransferValue}));}),event}Object.keys(eventMap).forEach(key=>{let{EventType,defaultInit}=eventMap[key],eventName=key.toLowerCase();createEvent[key]=(node,init)=>createEvent(eventName,node,init,{EventType,defaultInit}),fireEvent[key]=(node,init)=>fireEvent(node,createEvent[key](node,init));});function setNativeValue(element,value){let{set:valueSetter}=Object.getOwnPropertyDescriptor(element,"value")||{},prototype=Object.getPrototypeOf(element),{set:prototypeValueSetter}=Object.getOwnPropertyDescriptor(prototype,"value")||{};if(prototypeValueSetter&&valueSetter!==prototypeValueSetter)prototypeValueSetter.call(element,value);else if(valueSetter)valueSetter.call(element,value);else throw new Error("The given element does not have a value setter")}Object.keys(eventAliasMap).forEach(aliasKey=>{let key=eventAliasMap[aliasKey];fireEvent[aliasKey]=function(){return fireEvent[key](...arguments)};});function unindent(string){return string.replace(/[ \\t]*[\\n][ \\t]*/g,`\n`)}function encode(value){return import_lz_string.default.compressToEncodedURIComponent(unindent(value))}function getPlaygroundUrl(markup){return "https://testing-playground.com/#markup="+encode(markup)}var debug=(element,maxLength,options)=>Array.isArray(element)?element.forEach(el=>logDOM(el,maxLength,options)):logDOM(element,maxLength,options),logTestingPlaygroundURL=function(element){if(element===void 0&&(element=getDocument().body),!element||!("innerHTML"in element)){console.log("The element you\'re providing isn\'t a valid DOM element.");return}if(!element.innerHTML){console.log("The provided element doesn\'t have any children.");return}let playgroundUrl=getPlaygroundUrl(element.innerHTML);return console.log(`Open this URL in your browser\n\n`+playgroundUrl),playgroundUrl},initialValue={debug,logTestingPlaygroundURL},screen=typeof document<"u"&&document.body?getQueriesForElement(document.body,queries,initialValue):Object.keys(queries).reduce((helpers,key)=>(helpers[key]=()=>{throw new TypeError("For queries bound to document.body a global document has to be available... Learn more: https://testing-library.com/s/screen-global-error")},helpers),initialValue);function isElementType(element,tag,props){return element.namespaceURI&&element.namespaceURI!=="http://www.w3.org/1999/xhtml"||(tag=Array.isArray(tag)?tag:[tag],!tag.includes(element.tagName.toLowerCase()))?!1:props?Object.entries(props).every(([k2,v])=>element[k2]===v):!0}var clickableInputTypes;(function(clickableInputTypes2){clickableInputTypes2.button="button",clickableInputTypes2.color="color",clickableInputTypes2.file="file",clickableInputTypes2.image="image",clickableInputTypes2.reset="reset",clickableInputTypes2.submit="submit",clickableInputTypes2.checkbox="checkbox",clickableInputTypes2.radio="radio";})(clickableInputTypes||(clickableInputTypes={}));function isClickableInput(element){return isElementType(element,"button")||isElementType(element,"input")&&element.type in clickableInputTypes}function getWindow(node){var _node_ownerDocument;if(isDocument(node)&&node.defaultView)return node.defaultView;if(!((_node_ownerDocument=node.ownerDocument)===null||_node_ownerDocument===void 0)&&_node_ownerDocument.defaultView)return node.ownerDocument.defaultView;throw new Error(`Could not determine window of node. Node was ${describe(node)}`)}function isDocument(node){return node.nodeType===9}function describe(val){return typeof val=="function"?`function ${val.name}`:val===null?"null":String(val)}function readBlobText(blob,FileReader){return new Promise((res,rej)=>{let fr=new FileReader;fr.onerror=rej,fr.onabort=rej,fr.onload=()=>{res(String(fr.result));},fr.readAsText(blob);})}function createFileList(window2,files){let list={...files,length:files.length,item:index=>list[index],[Symbol.iterator]:function*(){for(let i=0;i<list.length;i++)yield list[i];}};return list.constructor=window2.FileList,window2.FileList&&Object.setPrototypeOf(list,window2.FileList.prototype),Object.freeze(list),list}function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var DataTransferItemStub=class{getAsFile(){return this.file}getAsString(callback){typeof this.data=="string"&&callback(this.data);}webkitGetAsEntry(){throw new Error("not implemented")}constructor(dataOrFile,type5){_define_property(this,"kind",void 0),_define_property(this,"type",void 0),_define_property(this,"file",null),_define_property(this,"data",void 0),typeof dataOrFile=="string"?(this.kind="string",this.type=String(type5),this.data=dataOrFile):(this.kind="file",this.type=dataOrFile.type,this.file=dataOrFile);}},DataTransferItemListStub=class extends Array{add(...args){let item=new DataTransferItemStub(args[0],args[1]);return this.push(item),item}clear(){this.splice(0,this.length);}remove(index){this.splice(index,1);}};function getTypeMatcher(type5,exact){let[group,sub]=type5.split("/"),isGroup=!sub||sub==="*";return item=>exact?item.type===(isGroup?group:type5):isGroup?item.type.startsWith(`${group}/`):item.type===group}function createDataTransferStub(window2){return new class{getData(format4){var _this_items_find;let match=(_this_items_find=this.items.find(getTypeMatcher(format4,!0)))!==null&&_this_items_find!==void 0?_this_items_find:this.items.find(getTypeMatcher(format4,!1)),text="";return match?.getAsString(t=>{text=t;}),text}setData(format4,data){let matchIndex=this.items.findIndex(getTypeMatcher(format4,!0)),item=new DataTransferItemStub(data,format4);matchIndex>=0?this.items.splice(matchIndex,1,item):this.items.push(item);}clearData(format4){if(format4){let matchIndex=this.items.findIndex(getTypeMatcher(format4,!0));matchIndex>=0&&this.items.remove(matchIndex);}else this.items.clear();}get types(){let t=[];return this.files.length&&t.push("Files"),this.items.forEach(i=>t.push(i.type)),Object.freeze(t),t}setDragImage(){}constructor(){_define_property(this,"dropEffect","none"),_define_property(this,"effectAllowed","uninitialized"),_define_property(this,"items",new DataTransferItemListStub),_define_property(this,"files",createFileList(window2,[]));}}}function createDataTransfer(window2,files=[]){let dt=typeof window2.DataTransfer>"u"?createDataTransferStub(window2):new window2.DataTransfer;return Object.defineProperty(dt,"files",{get:()=>createFileList(window2,files)}),dt}function getBlobFromDataTransferItem(window2,item){if(item.kind==="file")return item.getAsFile();let data="";return item.getAsString(s=>{data=s;}),new window2.Blob([data],{type:item.type})}function _define_property2(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function createClipboardItem(window2,...blobs){let dataMap=Object.fromEntries(blobs.map(b=>[typeof b=="string"?"text/plain":b.type,Promise.resolve(b)]));return typeof window2.ClipboardItem<"u"?new window2.ClipboardItem(dataMap):new class{get types(){return Array.from(Object.keys(this.data))}async getType(type5){let value=await this.data[type5];if(!value)throw new Error(`${type5} is not one of the available MIME types on this item.`);return value instanceof window2.Blob?value:new window2.Blob([value],{type:type5})}constructor(d2){_define_property2(this,"data",void 0),this.data=d2;}}(dataMap)}var ClipboardStubControl=Symbol("Manage ClipboardSub");function createClipboardStub(window2,control){return Object.assign(new class extends window2.EventTarget{async read(){return Array.from(this.items)}async readText(){let text="";for(let item of this.items){let type5=item.types.includes("text/plain")?"text/plain":item.types.find(t=>t.startsWith("text/"));type5&&(text+=await item.getType(type5).then(b=>readBlobText(b,window2.FileReader)));}return text}async write(data){this.items=data;}async writeText(text){this.items=[createClipboardItem(window2,text)];}constructor(...args){super(...args),_define_property2(this,"items",[]);}},{[ClipboardStubControl]:control})}function isClipboardStub(clipboard){return !!clipboard?.[ClipboardStubControl]}function attachClipboardStubToView(window2){if(isClipboardStub(window2.navigator.clipboard))return window2.navigator.clipboard[ClipboardStubControl];let realClipboard=Object.getOwnPropertyDescriptor(window2.navigator,"clipboard"),stub,control={resetClipboardStub:()=>{stub=createClipboardStub(window2,control);},detachClipboardStub:()=>{realClipboard?Object.defineProperty(window2.navigator,"clipboard",realClipboard):Object.defineProperty(window2.navigator,"clipboard",{value:void 0,configurable:!0});}};return stub=createClipboardStub(window2,control),Object.defineProperty(window2.navigator,"clipboard",{get:()=>stub,configurable:!0}),stub[ClipboardStubControl]}function resetClipboardStubOnView(window2){isClipboardStub(window2.navigator.clipboard)&&window2.navigator.clipboard[ClipboardStubControl].resetClipboardStub();}function detachClipboardStubFromView(window2){isClipboardStub(window2.navigator.clipboard)&&window2.navigator.clipboard[ClipboardStubControl].detachClipboardStub();}async function readDataTransferFromClipboard(document2){let window2=document2.defaultView,clipboard=window2?.navigator.clipboard,items=clipboard&&await clipboard.read();if(!items)throw new Error("The Clipboard API is unavailable.");let dt=createDataTransfer(window2);for(let item of items)for(let type5 of item.types)dt.setData(type5,await item.getType(type5).then(b=>readBlobText(b,window2.FileReader)));return dt}async function writeDataTransferToClipboard(document2,clipboardData){let window2=getWindow(document2),clipboard=window2.navigator.clipboard,items=[];for(let i=0;i<clipboardData.items.length;i++){let dtItem=clipboardData.items[i],blob=getBlobFromDataTransferItem(window2,dtItem);items.push(createClipboardItem(window2,blob));}if(!(clipboard&&await clipboard.write(items).then(()=>!0,()=>!1)))throw new Error("The Clipboard API is unavailable.")}var g=globalThis;typeof g.afterEach=="function"&&g.afterEach(()=>resetClipboardStubOnView(globalThis.window));typeof g.afterAll=="function"&&g.afterAll(()=>detachClipboardStubFromView(globalThis.window));function isContentEditable(element){return element.hasAttribute("contenteditable")&&(element.getAttribute("contenteditable")=="true"||element.getAttribute("contenteditable")=="")}function getContentEditable(node){let element=getElement(node);return element&&(element.closest(\'[contenteditable=""]\')||element.closest(\'[contenteditable="true"]\'))}function getElement(node){return node.nodeType===1?node:node.parentElement}function isEditable(element){return isEditableInputOrTextArea(element)&&!element.readOnly||isContentEditable(element)}var editableInputTypes;(function(editableInputTypes2){editableInputTypes2.text="text",editableInputTypes2.date="date",editableInputTypes2["datetime-local"]="datetime-local",editableInputTypes2.email="email",editableInputTypes2.month="month",editableInputTypes2.number="number",editableInputTypes2.password="password",editableInputTypes2.search="search",editableInputTypes2.tel="tel",editableInputTypes2.time="time",editableInputTypes2.url="url",editableInputTypes2.week="week";})(editableInputTypes||(editableInputTypes={}));function isEditableInputOrTextArea(element){return isElementType(element,"textarea")||isElementType(element,"input")&&element.type in editableInputTypes}var maxLengthSupportedTypes;(function(maxLengthSupportedTypes2){maxLengthSupportedTypes2.email="email",maxLengthSupportedTypes2.password="password",maxLengthSupportedTypes2.search="search",maxLengthSupportedTypes2.telephone="telephone",maxLengthSupportedTypes2.text="text",maxLengthSupportedTypes2.url="url";})(maxLengthSupportedTypes||(maxLengthSupportedTypes={}));function getMaxLength(element){var _element_getAttribute;let attr=(_element_getAttribute=element.getAttribute("maxlength"))!==null&&_element_getAttribute!==void 0?_element_getAttribute:"";return /^\\d+$/.test(attr)&&Number(attr)>=0?Number(attr):void 0}function supportsMaxLength(element){return isElementType(element,"textarea")||isElementType(element,"input")&&element.type in maxLengthSupportedTypes}var FOCUSABLE_SELECTOR=["input:not([type=hidden]):not([disabled])","button:not([disabled])","select:not([disabled])","textarea:not([disabled])",\'[contenteditable=""]\',\'[contenteditable="true"]\',"a[href]","[tabindex]:not([disabled])"].join(", ");function isFocusable(element){return element.matches(FOCUSABLE_SELECTOR)}var bracketDict;(function(bracketDict2){bracketDict2["{"]="}",bracketDict2["["]="]";})(bracketDict||(bracketDict={}));function readNextDescriptor(text,context){let pos=0,startBracket=text[pos]in bracketDict?text[pos]:"";pos+=startBracket.length;let type5=new RegExp(`^\\\\${startBracket}{2}`).test(text)?"":startBracket;return {type:type5,...type5===""?readPrintableChar(text,pos,context):readTag(text,pos,type5,context)}}function readPrintableChar(text,pos,context){let descriptor=text[pos];return assertDescriptor(descriptor,text,pos,context),pos+=descriptor.length,{consumedLength:pos,descriptor,releasePrevious:!1,releaseSelf:!0,repeat:1}}function readTag(text,pos,startBracket,context){var _text_slice_match,_text_slice_match1;let releasePreviousModifier=text[pos]==="/"?"/":"";pos+=releasePreviousModifier.length;let escapedDescriptor=startBracket==="{"&&text[pos]==="\\\\";pos+=Number(escapedDescriptor);let descriptor=escapedDescriptor?text[pos]:(_text_slice_match=text.slice(pos).match(startBracket==="{"?/^\\w+|^[^}>/]/:/^\\w+/))===null||_text_slice_match===void 0?void 0:_text_slice_match[0];assertDescriptor(descriptor,text,pos,context),pos+=descriptor.length;var _text_slice_match_;let repeatModifier=(_text_slice_match_=(_text_slice_match1=text.slice(pos).match(/^>\\d+/))===null||_text_slice_match1===void 0?void 0:_text_slice_match1[0])!==null&&_text_slice_match_!==void 0?_text_slice_match_:"";pos+=repeatModifier.length;let releaseSelfModifier=text[pos]==="/"||!repeatModifier&&text[pos]===">"?text[pos]:"";pos+=releaseSelfModifier.length;let expectedEndBracket=bracketDict[startBracket],endBracket=text[pos]===expectedEndBracket?expectedEndBracket:"";if(!endBracket)throw new Error(getErrorMessage([!repeatModifier&&"repeat modifier",!releaseSelfModifier&&"release modifier",`"${expectedEndBracket}"`].filter(Boolean).join(" or "),text[pos],text,context));return pos+=endBracket.length,{consumedLength:pos,descriptor,releasePrevious:!!releasePreviousModifier,repeat:repeatModifier?Math.max(Number(repeatModifier.substr(1)),1):1,releaseSelf:hasReleaseSelf(releaseSelfModifier,repeatModifier)}}function assertDescriptor(descriptor,text,pos,context){if(!descriptor)throw new Error(getErrorMessage("key descriptor",text[pos],text,context))}function hasReleaseSelf(releaseSelfModifier,repeatModifier){if(releaseSelfModifier)return releaseSelfModifier==="/";if(repeatModifier)return !1}function getErrorMessage(expected,found,text,context){return `Expected ${expected} but found "${found??""}" in "${text}"\n    See ${context==="pointer"?"https://testing-library.com/docs/user-event/pointer#pressing-a-button-or-touching-the-screen":"https://testing-library.com/docs/user-event/keyboard"}\n    for more information about how userEvent parses your input.`}function cloneEvent(event){return new event.constructor(event.type,event)}var ApiLevel;(function(ApiLevel2){ApiLevel2[ApiLevel2.Trigger=2]="Trigger",ApiLevel2[ApiLevel2.Call=1]="Call";})(ApiLevel||(ApiLevel={}));function setLevelRef(instance,level){instance.levelRefs[level]={};}function getLevelRef(instance,level){return instance.levelRefs[level]}var PointerEventsCheckLevel;(function(PointerEventsCheckLevel2){PointerEventsCheckLevel2[PointerEventsCheckLevel2.EachTrigger=4]="EachTrigger",PointerEventsCheckLevel2[PointerEventsCheckLevel2.EachApiCall=2]="EachApiCall",PointerEventsCheckLevel2[PointerEventsCheckLevel2.EachTarget=1]="EachTarget",PointerEventsCheckLevel2[PointerEventsCheckLevel2.Never=0]="Never";})(PointerEventsCheckLevel||(PointerEventsCheckLevel={}));function isDisabled2(element){for(let el=element;el;el=el.parentElement)if(isElementType(el,["button","input","select","textarea","optgroup","option"])){if(el.hasAttribute("disabled"))return !0}else if(isElementType(el,"fieldset")){var _el_querySelector;if(el.hasAttribute("disabled")&&!(!((_el_querySelector=el.querySelector(":scope > legend"))===null||_el_querySelector===void 0)&&_el_querySelector.contains(element)))return !0}else if(el.tagName.includes("-")&&el.constructor.formAssociated&&el.hasAttribute("disabled"))return !0;return !1}function getActiveElement(document2){let activeElement=document2.activeElement;return activeElement?.shadowRoot?getActiveElement(activeElement.shadowRoot):isDisabled2(activeElement)?document2.ownerDocument?document2.ownerDocument.body:document2.body:activeElement}function getActiveElementOrBody(document2){var _getActiveElement;return (_getActiveElement=getActiveElement(document2))!==null&&_getActiveElement!==void 0?_getActiveElement:document2.body}function findClosest(element,callback){let el=element;do{if(callback(el))return el;el=el.parentElement;}while(el&&el!==element.ownerDocument.body)}function hasOwnSelection(node){return isElement3(node)&&isEditableInputOrTextArea(node)}function hasNoSelection(node){return isElement3(node)&&isClickableInput(node)}function isElement3(node){return node.nodeType===1}function updateSelectionOnFocus(element){let selection=element.ownerDocument.getSelection();if(selection?.focusNode&&hasOwnSelection(element)){let contenteditable=getContentEditable(selection.focusNode);if(contenteditable){if(!selection.isCollapsed){var _contenteditable_firstChild;let focusNode=((_contenteditable_firstChild=contenteditable.firstChild)===null||_contenteditable_firstChild===void 0?void 0:_contenteditable_firstChild.nodeType)===3?contenteditable.firstChild:contenteditable;selection.setBaseAndExtent(focusNode,0,focusNode,0);}}else selection.setBaseAndExtent(element,0,element,0);}}function wrapEvent(cb,_element){return getConfig2().eventWrapper(cb)}function focusElement(element){let target=findClosest(element,isFocusable),activeElement=getActiveElement(element.ownerDocument);(target??element.ownerDocument.body)!==activeElement&&(target?wrapEvent(()=>target.focus()):wrapEvent(()=>activeElement?.blur()),updateSelectionOnFocus(target??element.ownerDocument.body));}function blurElement(element){!isFocusable(element)||!(getActiveElement(element.ownerDocument)===element)||wrapEvent(()=>element.blur());}var behavior={};behavior.click=(event,target,instance)=>{let context=target.closest("button,input,label,select,textarea"),control=context&&isElementType(context,"label")&&context.control;if(control)return ()=>{isFocusable(control)&&focusElement(control),instance.dispatchEvent(control,cloneEvent(event));};if(isElementType(target,"input",{type:"file"}))return ()=>{blurElement(target),target.dispatchEvent(new(getWindow(target)).Event("fileDialog")),focusElement(target);}};var UIValue=Symbol("Displayed value in UI"),UISelection=Symbol("Displayed selection in UI"),InitialValue=Symbol("Initial value to compare on blur");function isUIValue(value){return typeof value=="object"&&UIValue in value}function isUISelectionStart(start){return !!start&&typeof start=="object"&&UISelection in start}function setUIValue(element,value){element[InitialValue]===void 0&&(element[InitialValue]=element.value),element[UIValue]=value,element.value=Object.assign(new String(value),{[UIValue]:!0});}function getUIValue(element){return element[UIValue]===void 0?element.value:String(element[UIValue])}function setUIValueClean(element){element[UIValue]=void 0;}function clearInitialValue(element){element[InitialValue]=void 0;}function getInitialValue(element){return element[InitialValue]}function setUISelectionRaw(element,selection){element[UISelection]=selection;}function setUISelection(element,{focusOffset:focusOffsetParam,anchorOffset:anchorOffsetParam=focusOffsetParam},mode="replace"){let valueLength=getUIValue(element).length,sanitizeOffset=o=>Math.max(0,Math.min(valueLength,o)),anchorOffset=mode==="replace"||element[UISelection]===void 0?sanitizeOffset(anchorOffsetParam):element[UISelection].anchorOffset,focusOffset=sanitizeOffset(focusOffsetParam),startOffset=Math.min(anchorOffset,focusOffset),endOffset=Math.max(anchorOffset,focusOffset);if(element[UISelection]={anchorOffset,focusOffset},element.selectionStart===startOffset&&element.selectionEnd===endOffset)return;let startObj=Object.assign(new Number(startOffset),{[UISelection]:!0});try{element.setSelectionRange(startObj,endOffset);}catch{}}function getUISelection(element){var _element_selectionStart,_element_selectionEnd,_element_UISelection;let sel=(_element_UISelection=element[UISelection])!==null&&_element_UISelection!==void 0?_element_UISelection:{anchorOffset:(_element_selectionStart=element.selectionStart)!==null&&_element_selectionStart!==void 0?_element_selectionStart:0,focusOffset:(_element_selectionEnd=element.selectionEnd)!==null&&_element_selectionEnd!==void 0?_element_selectionEnd:0};return {...sel,startOffset:Math.min(sel.anchorOffset,sel.focusOffset),endOffset:Math.max(sel.anchorOffset,sel.focusOffset)}}function hasUISelection(element){return !!element[UISelection]}function setUISelectionClean(element){element[UISelection]=void 0;}var parseInt2=globalThis.parseInt;function buildTimeValue(value){let onlyDigitsValue=value.replace(/\\D/g,"");if(onlyDigitsValue.length<2)return value;let firstDigit=parseInt2(onlyDigitsValue[0],10),secondDigit=parseInt2(onlyDigitsValue[1],10);if(firstDigit>=3||firstDigit===2&&secondDigit>=4){let index;return firstDigit>=3?index=1:index=2,build2(onlyDigitsValue,index)}return value.length===2?value:build2(onlyDigitsValue,2)}function build2(onlyDigitsValue,index){let hours=onlyDigitsValue.slice(0,index),validHours=Math.min(parseInt2(hours,10),23),minuteCharacters=onlyDigitsValue.slice(index),parsedMinutes=parseInt2(minuteCharacters,10),validMinutes=Math.min(parsedMinutes,59);return `${validHours.toString().padStart(2,"0")}:${validMinutes.toString().padStart(2,"0")}`}function isValidDateOrTimeValue(element,value){let clone2=element.cloneNode();return clone2.value=value,clone2.value===value}function getNextCursorPosition(node,offset,direction,inputType){if(isTextNode(node)&&offset+direction>=0&&offset+direction<=node.nodeValue.length)return {node,offset:offset+direction};let nextNode=getNextCharacterContentNode(node,offset,direction);if(nextNode){if(isTextNode(nextNode))return {node:nextNode,offset:direction>0?Math.min(1,nextNode.nodeValue.length):Math.max(nextNode.nodeValue.length-1,0)};if(isElementType(nextNode,"br")){let nextPlusOne=getNextCharacterContentNode(nextNode,void 0,direction);return nextPlusOne?isTextNode(nextPlusOne)?{node:nextPlusOne,offset:direction>0?0:nextPlusOne.nodeValue.length}:direction<0&&isElementType(nextPlusOne,"br")?{node:nextNode.parentNode,offset:getOffset(nextNode)}:{node:nextPlusOne.parentNode,offset:getOffset(nextPlusOne)+(direction>0?0:1)}:direction<0&&inputType==="deleteContentBackward"?{node:nextNode.parentNode,offset:getOffset(nextNode)}:void 0}else return {node:nextNode.parentNode,offset:getOffset(nextNode)+(direction>0?1:0)}}}function getNextCharacterContentNode(node,offset,direction){let nextOffset=Number(offset)+(direction<0?-1:0);return offset!==void 0&&isElement4(node)&&nextOffset>=0&&nextOffset<node.children.length&&(node=node.children[nextOffset]),walkNodes(node,direction===1?"next":"previous",isTreatedAsCharacterContent)}function isTreatedAsCharacterContent(node){if(isTextNode(node))return !0;if(isElement4(node)){if(isElementType(node,["input","textarea"]))return node.type!=="hidden";if(isElementType(node,"br"))return !0}return !1}function getOffset(node){let i=0;for(;node.previousSibling;)i++,node=node.previousSibling;return i}function isElement4(node){return node.nodeType===1}function isTextNode(node){return node.nodeType===3}function walkNodes(node,direction,callback){for(;;){var _node_ownerDocument;let sibling=node[`${direction}Sibling`];if(sibling){if(node=getDescendant(sibling,direction==="next"?"first":"last"),callback(node))return node}else if(node.parentNode&&(!isElement4(node.parentNode)||!isContentEditable(node.parentNode)&&node.parentNode!==((_node_ownerDocument=node.ownerDocument)===null||_node_ownerDocument===void 0?void 0:_node_ownerDocument.body)))node=node.parentNode;else break}}function getDescendant(node,direction){for(;node.hasChildNodes();)node=node[`${direction}Child`];return node}var TrackChanges=Symbol("Track programmatic changes for React workaround");function isReact17Element(element){return Object.getOwnPropertyNames(element).some(k2=>k2.startsWith("__react"))&&getWindow(element).REACT_VERSION===17}function startTrackValue(element){isReact17Element(element)&&(element[TrackChanges]={previousValue:String(element.value),tracked:[]});}function trackOrSetValue(element,v){var _element_TrackChanges_tracked,_element_TrackChanges;(_element_TrackChanges=element[TrackChanges])===null||_element_TrackChanges===void 0||(_element_TrackChanges_tracked=_element_TrackChanges.tracked)===null||_element_TrackChanges_tracked===void 0||_element_TrackChanges_tracked.push(v),element[TrackChanges]||(setUIValueClean(element),setUISelection(element,{focusOffset:v.length}));}function commitValueAfterInput(element,cursorOffset){var _changes_tracked;let changes=element[TrackChanges];if(element[TrackChanges]=void 0,!(!(changes==null||(_changes_tracked=changes.tracked)===null||_changes_tracked===void 0)&&_changes_tracked.length))return;let isJustReactStateUpdate=changes.tracked.length===2&&changes.tracked[0]===changes.previousValue&&changes.tracked[1]===element.value;isJustReactStateUpdate||setUIValueClean(element),hasUISelection(element)&&setUISelection(element,{focusOffset:isJustReactStateUpdate?cursorOffset:element.value.length});}function getTargetTypeAndSelection(node){let element=getElement2(node);if(element&&hasOwnSelection(element))return {type:"input",selection:getUISelection(element)};let selection=element?.ownerDocument.getSelection();return {type:getContentEditable(node)&&selection?.anchorNode&&getContentEditable(selection.anchorNode)?"contenteditable":"default",selection}}function getElement2(node){return node.nodeType===1?node:node.parentElement}function getInputRange(focusNode){let typeAndSelection=getTargetTypeAndSelection(focusNode);if(typeAndSelection.type==="input")return typeAndSelection.selection;if(typeAndSelection.type==="contenteditable"){var _typeAndSelection_selection;return (_typeAndSelection_selection=typeAndSelection.selection)===null||_typeAndSelection_selection===void 0?void 0:_typeAndSelection_selection.getRangeAt(0)}}function setSelection({focusNode,focusOffset,anchorNode=focusNode,anchorOffset=focusOffset}){var _anchorNode_ownerDocument_getSelection,_anchorNode_ownerDocument;if(getTargetTypeAndSelection(focusNode).type==="input")return setUISelection(focusNode,{anchorOffset,focusOffset});(_anchorNode_ownerDocument=anchorNode.ownerDocument)===null||_anchorNode_ownerDocument===void 0||(_anchorNode_ownerDocument_getSelection=_anchorNode_ownerDocument.getSelection())===null||_anchorNode_ownerDocument_getSelection===void 0||_anchorNode_ownerDocument_getSelection.setBaseAndExtent(anchorNode,anchorOffset,focusNode,focusOffset);}function isDateOrTime(element){return isElementType(element,"input")&&["date","time"].includes(element.type)}function input(instance,element,data,inputType="insertText"){let inputRange=getInputRange(element);inputRange&&(!isDateOrTime(element)&&!instance.dispatchUIEvent(element,"beforeinput",{inputType,data})||("startContainer"in inputRange?editContenteditable(instance,element,inputRange,data,inputType):editInputElement(instance,element,inputRange,data,inputType)));}function editContenteditable(instance,element,inputRange,data,inputType){let del=!1;if(!inputRange.collapsed)del=!0,inputRange.deleteContents();else if(["deleteContentBackward","deleteContentForward"].includes(inputType)){let nextPosition=getNextCursorPosition(inputRange.startContainer,inputRange.startOffset,inputType==="deleteContentBackward"?-1:1,inputType);if(nextPosition){del=!0;let delRange=inputRange.cloneRange();delRange.comparePoint(nextPosition.node,nextPosition.offset)<0?delRange.setStart(nextPosition.node,nextPosition.offset):delRange.setEnd(nextPosition.node,nextPosition.offset),delRange.deleteContents();}}if(data)if(inputRange.endContainer.nodeType===3){let offset=inputRange.endOffset;inputRange.endContainer.insertData(offset,data),inputRange.setStart(inputRange.endContainer,offset+data.length),inputRange.setEnd(inputRange.endContainer,offset+data.length);}else {let text=element.ownerDocument.createTextNode(data);inputRange.insertNode(text),inputRange.setStart(text,data.length),inputRange.setEnd(text,data.length);}(del||data)&&instance.dispatchUIEvent(element,"input",{inputType});}function editInputElement(instance,element,inputRange,data,inputType){let dataToInsert=data;if(supportsMaxLength(element)){let maxLength=getMaxLength(element);if(maxLength!==void 0&&data.length>0){let spaceUntilMaxLength=maxLength-element.value.length;if(spaceUntilMaxLength>0)dataToInsert=data.substring(0,spaceUntilMaxLength);else return}}let{newValue,newOffset,oldValue}=calculateNewValue(dataToInsert,element,inputRange,inputType);newValue===oldValue&&newOffset===inputRange.startOffset&&newOffset===inputRange.endOffset||isElementType(element,"input",{type:"number"})&&!isValidNumberInput(newValue)||(setUIValue(element,newValue),setSelection({focusNode:element,anchorOffset:newOffset,focusOffset:newOffset}),isDateOrTime(element)?isValidDateOrTimeValue(element,newValue)&&(commitInput(instance,element,newOffset,{}),instance.dispatchUIEvent(element,"change"),clearInitialValue(element)):commitInput(instance,element,newOffset,{data,inputType}));}function calculateNewValue(inputData,node,{startOffset,endOffset},inputType){let value=getUIValue(node),prologEnd=Math.max(0,startOffset===endOffset&&inputType==="deleteContentBackward"?startOffset-1:startOffset),prolog=value.substring(0,prologEnd),epilogStart=Math.min(value.length,startOffset===endOffset&&inputType==="deleteContentForward"?startOffset+1:endOffset),epilog=value.substring(epilogStart,value.length),newValue=`${prolog}${inputData}${epilog}`,newOffset=prologEnd+inputData.length;if(isElementType(node,"input",{type:"time"})){let builtValue=buildTimeValue(newValue);builtValue!==""&&isValidDateOrTimeValue(node,builtValue)&&(newValue=builtValue,newOffset=builtValue.length);}return {oldValue:value,newValue,newOffset}}function commitInput(instance,element,newOffset,inputInit){instance.dispatchUIEvent(element,"input",inputInit),commitValueAfterInput(element,newOffset);}function isValidNumberInput(value){var _value_match,_value_match1;let valueParts=value.split("e",2);return !(/[^\\d.\\-e]/.test(value)||Number((_value_match=value.match(/-/g))===null||_value_match===void 0?void 0:_value_match.length)>2||Number((_value_match1=value.match(/\\./g))===null||_value_match1===void 0?void 0:_value_match1.length)>1||valueParts[1]&&!/^-?\\d*$/.test(valueParts[1]))}behavior.cut=(event,target,instance)=>()=>{isEditable(target)&&input(instance,target,"","deleteByCut");};function getValueOrTextContent(element){return element?isContentEditable(element)?element.textContent:getUIValue(element):null}function isVisible(element){let window2=getWindow(element);for(let el=element;el?.ownerDocument;el=el.parentElement){let{display:display2,visibility}=window2.getComputedStyle(el);if(display2==="none"||visibility==="hidden")return !1}return !0}function getTabDestination(activeElement,shift){let document2=activeElement.ownerDocument,focusableElements=document2.querySelectorAll(FOCUSABLE_SELECTOR),enabledElements=Array.from(focusableElements).filter(el=>el===activeElement||!(Number(el.getAttribute("tabindex"))<0||isDisabled2(el)));Number(activeElement.getAttribute("tabindex"))>=0&&enabledElements.sort((a2,b)=>{let i=Number(a2.getAttribute("tabindex")),j=Number(b.getAttribute("tabindex"));return i===j?0:i===0?1:j===0?-1:i-j});let checkedRadio={},prunedElements=[document2.body],activeRadioGroup=isElementType(activeElement,"input",{type:"radio"})?activeElement.name:void 0;enabledElements.forEach(currentElement=>{let el=currentElement;if(isElementType(el,"input",{type:"radio"})&&el.name){if(el===activeElement){prunedElements.push(el);return}else if(el.name===activeRadioGroup)return;if(el.checked){prunedElements=prunedElements.filter(e=>!isElementType(e,"input",{type:"radio",name:el.name})),prunedElements.push(el),checkedRadio[el.name]=el;return}if(typeof checkedRadio[el.name]<"u")return}prunedElements.push(el);});for(let index=prunedElements.findIndex(el=>el===activeElement);;)if(index+=shift?-1:1,index===prunedElements.length?index=0:index===-1&&(index=prunedElements.length-1),prunedElements[index]===activeElement||prunedElements[index]===document2.body||isVisible(prunedElements[index]))return prunedElements[index]}function moveSelection(node,direction){if(hasOwnSelection(node)){let selection=getUISelection(node);setSelection({focusNode:node,focusOffset:selection.startOffset===selection.endOffset?selection.focusOffset+direction:direction<0?selection.startOffset:selection.endOffset});}else {let selection=node.ownerDocument.getSelection();if(!selection?.focusNode)return;if(selection.isCollapsed){let nextPosition=getNextCursorPosition(selection.focusNode,selection.focusOffset,direction);nextPosition&&setSelection({focusNode:nextPosition.node,focusOffset:nextPosition.offset});}else selection[direction<0?"collapseToStart":"collapseToEnd"]();}}function selectAll(target){if(hasOwnSelection(target))return setSelection({focusNode:target,anchorOffset:0,focusOffset:getUIValue(target).length});var _getContentEditable;let focusNode=(_getContentEditable=getContentEditable(target))!==null&&_getContentEditable!==void 0?_getContentEditable:target.ownerDocument.body;setSelection({focusNode,anchorOffset:0,focusOffset:focusNode.childNodes.length});}function isAllSelected(target){if(hasOwnSelection(target))return getUISelection(target).startOffset===0&&getUISelection(target).endOffset===getUIValue(target).length;var _getContentEditable;let focusNode=(_getContentEditable=getContentEditable(target))!==null&&_getContentEditable!==void 0?_getContentEditable:target.ownerDocument.body,selection=target.ownerDocument.getSelection();return selection?.anchorNode===focusNode&&selection.focusNode===focusNode&&selection.anchorOffset===0&&selection.focusOffset===focusNode.childNodes.length}function setSelectionRange(element,anchorOffset,focusOffset){var _element_firstChild;if(hasOwnSelection(element))return setSelection({focusNode:element,anchorOffset,focusOffset});if(isContentEditable(element)&&((_element_firstChild=element.firstChild)===null||_element_firstChild===void 0?void 0:_element_firstChild.nodeType)===3)return setSelection({focusNode:element.firstChild,anchorOffset,focusOffset});throw new Error("Not implemented. The result of this interaction is unreliable.")}function walkRadio(instance,el,direction){let window2=getWindow(el),group=Array.from(el.ownerDocument.querySelectorAll(el.name?`input[type="radio"][name="${window2.CSS.escape(el.name)}"]`:\'input[type="radio"][name=""], input[type="radio"]:not([name])\'));for(let i=group.findIndex(e=>e===el)+direction;;i+=direction){if(group[i]||(i=direction>0?0:group.length-1),group[i]===el)return;isDisabled2(group[i])||(focusElement(group[i]),instance.dispatchUIEvent(group[i],"click"));}}behavior.keydown=(event,target,instance)=>{var _keydownBehavior_event_key,_keydownBehavior_event_key1;return (_keydownBehavior_event_key1=(_keydownBehavior_event_key=keydownBehavior[event.key])===null||_keydownBehavior_event_key===void 0?void 0:_keydownBehavior_event_key.call(keydownBehavior,event,target,instance))!==null&&_keydownBehavior_event_key1!==void 0?_keydownBehavior_event_key1:combinationBehavior(event,target,instance)};var keydownBehavior={ArrowDown:(event,target,instance)=>{if(isElementType(target,"input",{type:"radio"}))return ()=>walkRadio(instance,target,-1)},ArrowLeft:(event,target,instance)=>isElementType(target,"input",{type:"radio"})?()=>walkRadio(instance,target,-1):()=>moveSelection(target,-1),ArrowRight:(event,target,instance)=>isElementType(target,"input",{type:"radio"})?()=>walkRadio(instance,target,1):()=>moveSelection(target,1),ArrowUp:(event,target,instance)=>{if(isElementType(target,"input",{type:"radio"}))return ()=>walkRadio(instance,target,1)},Backspace:(event,target,instance)=>{if(isEditable(target))return ()=>{input(instance,target,"","deleteContentBackward");}},Delete:(event,target,instance)=>{if(isEditable(target))return ()=>{input(instance,target,"","deleteContentForward");}},End:(event,target)=>{if(isElementType(target,["input","textarea"])||isContentEditable(target))return ()=>{var _getValueOrTextContent,_getValueOrTextContent_length;let newPos=(_getValueOrTextContent_length=(_getValueOrTextContent=getValueOrTextContent(target))===null||_getValueOrTextContent===void 0?void 0:_getValueOrTextContent.length)!==null&&_getValueOrTextContent_length!==void 0?_getValueOrTextContent_length:0;setSelectionRange(target,newPos,newPos);}},Home:(event,target)=>{if(isElementType(target,["input","textarea"])||isContentEditable(target))return ()=>{setSelectionRange(target,0,0);}},PageDown:(event,target)=>{if(isElementType(target,["input"]))return ()=>{let newPos=getUIValue(target).length;setSelectionRange(target,newPos,newPos);}},PageUp:(event,target)=>{if(isElementType(target,["input"]))return ()=>{setSelectionRange(target,0,0);}},Tab:(event,target,instance)=>()=>{let dest=getTabDestination(target,instance.system.keyboard.modifiers.Shift);focusElement(dest),hasOwnSelection(dest)&&setUISelection(dest,{anchorOffset:0,focusOffset:dest.value.length});}},combinationBehavior=(event,target,instance)=>{if(event.code==="KeyA"&&instance.system.keyboard.modifiers.Control)return ()=>selectAll(target)};behavior.keypress=(event,target,instance)=>{if(event.key==="Enter"){if(isElementType(target,"button")||isElementType(target,"input")&&ClickInputOnEnter.includes(target.type)||isElementType(target,"a")&&target.href)return ()=>{instance.dispatchUIEvent(target,"click");};if(isElementType(target,"input")){let form=target.form,submit=form?.querySelector(\'input[type="submit"], button:not([type]), button[type="submit"]\');return submit?()=>instance.dispatchUIEvent(submit,"click"):form&&SubmitSingleInputOnEnter.includes(target.type)&&form.querySelectorAll("input").length===1?()=>instance.dispatchUIEvent(form,"submit"):void 0}}if(isEditable(target)){let inputType=event.key==="Enter"?isContentEditable(target)&&!instance.system.keyboard.modifiers.Shift?"insertParagraph":"insertLineBreak":"insertText",inputData=event.key==="Enter"?`\n`:event.key;return ()=>input(instance,target,inputData,inputType)}};var ClickInputOnEnter=["button","color","file","image","reset","submit"],SubmitSingleInputOnEnter=["email","month","password","search","tel","text","url","week"];behavior.keyup=(event,target,instance)=>{var _keyupBehavior_event_key;return (_keyupBehavior_event_key=keyupBehavior[event.key])===null||_keyupBehavior_event_key===void 0?void 0:_keyupBehavior_event_key.call(keyupBehavior,event,target,instance)};var keyupBehavior={" ":(event,target,instance)=>{if(isClickableInput(target))return ()=>instance.dispatchUIEvent(target,"click")}};behavior.paste=(event,target,instance)=>{if(isEditable(target))return ()=>{var _event_clipboardData;let insertData=(_event_clipboardData=event.clipboardData)===null||_event_clipboardData===void 0?void 0:_event_clipboardData.getData("text");insertData&&input(instance,target,insertData,"insertFromPaste");}};var eventMap2={auxclick:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},beforeinput:{EventType:"InputEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},click:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},contextmenu:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},copy:{EventType:"ClipboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},change:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!1}},cut:{EventType:"ClipboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},dblclick:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},keydown:{EventType:"KeyboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},keypress:{EventType:"KeyboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},keyup:{EventType:"KeyboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},paste:{EventType:"ClipboardEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},input:{EventType:"InputEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},mousedown:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseenter:{EventType:"MouseEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},mouseleave:{EventType:"MouseEvent",defaultInit:{bubbles:!1,cancelable:!1,composed:!0}},mousemove:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseout:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseover:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},mouseup:{EventType:"MouseEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerover:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerenter:{EventType:"PointerEvent",defaultInit:{bubbles:!1,cancelable:!1}},pointerdown:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointermove:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerup:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointercancel:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!1,composed:!0}},pointerout:{EventType:"PointerEvent",defaultInit:{bubbles:!0,cancelable:!0,composed:!0}},pointerleave:{EventType:"PointerEvent",defaultInit:{bubbles:!1,cancelable:!1}},submit:{EventType:"Event",defaultInit:{bubbles:!0,cancelable:!0}}};function getEventClass(type5){return eventMap2[type5].EventType}var mouseEvents=["MouseEvent","PointerEvent"];function isMouseEvent(type5){return mouseEvents.includes(getEventClass(type5))}function isKeyboardEvent(type5){return getEventClass(type5)==="KeyboardEvent"}var eventInitializer={ClipboardEvent:[initClipboardEvent],Event:[],InputEvent:[initUIEvent,initInputEvent],MouseEvent:[initUIEvent,initUIEventModififiers,initMouseEvent],PointerEvent:[initUIEvent,initUIEventModififiers,initMouseEvent,initPointerEvent],KeyboardEvent:[initUIEvent,initUIEventModififiers,initKeyboardEvent]};function createEvent2(type5,target,init){let window2=getWindow(target),{EventType,defaultInit}=eventMap2[type5],event=new(getEventConstructors(window2))[EventType](type5,defaultInit);return eventInitializer[EventType].forEach(f4=>f4(event,init??{})),event}function getEventConstructors(window2){var _window_Event;let Event=(_window_Event=window2.Event)!==null&&_window_Event!==void 0?_window_Event:class{};var _window_AnimationEvent;let AnimationEvent=(_window_AnimationEvent=window2.AnimationEvent)!==null&&_window_AnimationEvent!==void 0?_window_AnimationEvent:class extends Event{};var _window_ClipboardEvent;let ClipboardEvent=(_window_ClipboardEvent=window2.ClipboardEvent)!==null&&_window_ClipboardEvent!==void 0?_window_ClipboardEvent:class extends Event{};var _window_PopStateEvent;let PopStateEvent=(_window_PopStateEvent=window2.PopStateEvent)!==null&&_window_PopStateEvent!==void 0?_window_PopStateEvent:class extends Event{};var _window_ProgressEvent;let ProgressEvent=(_window_ProgressEvent=window2.ProgressEvent)!==null&&_window_ProgressEvent!==void 0?_window_ProgressEvent:class extends Event{};var _window_TransitionEvent;let TransitionEvent=(_window_TransitionEvent=window2.TransitionEvent)!==null&&_window_TransitionEvent!==void 0?_window_TransitionEvent:class extends Event{};var _window_UIEvent;let UIEvent=(_window_UIEvent=window2.UIEvent)!==null&&_window_UIEvent!==void 0?_window_UIEvent:class extends Event{};var _window_CompositionEvent;let CompositionEvent=(_window_CompositionEvent=window2.CompositionEvent)!==null&&_window_CompositionEvent!==void 0?_window_CompositionEvent:class extends UIEvent{};var _window_FocusEvent;let FocusEvent=(_window_FocusEvent=window2.FocusEvent)!==null&&_window_FocusEvent!==void 0?_window_FocusEvent:class extends UIEvent{};var _window_InputEvent;let InputEvent=(_window_InputEvent=window2.InputEvent)!==null&&_window_InputEvent!==void 0?_window_InputEvent:class extends UIEvent{};var _window_KeyboardEvent;let KeyboardEvent=(_window_KeyboardEvent=window2.KeyboardEvent)!==null&&_window_KeyboardEvent!==void 0?_window_KeyboardEvent:class extends UIEvent{};var _window_MouseEvent;let MouseEvent=(_window_MouseEvent=window2.MouseEvent)!==null&&_window_MouseEvent!==void 0?_window_MouseEvent:class extends UIEvent{};var _window_DragEvent;let DragEvent=(_window_DragEvent=window2.DragEvent)!==null&&_window_DragEvent!==void 0?_window_DragEvent:class extends MouseEvent{};var _window_PointerEvent;let PointerEvent=(_window_PointerEvent=window2.PointerEvent)!==null&&_window_PointerEvent!==void 0?_window_PointerEvent:class extends MouseEvent{};var _window_TouchEvent;let TouchEvent=(_window_TouchEvent=window2.TouchEvent)!==null&&_window_TouchEvent!==void 0?_window_TouchEvent:class extends UIEvent{};return {Event,AnimationEvent,ClipboardEvent,PopStateEvent,ProgressEvent,TransitionEvent,UIEvent,CompositionEvent,FocusEvent,InputEvent,KeyboardEvent,MouseEvent,DragEvent,PointerEvent,TouchEvent}}function assignProps(obj,props){for(let[key,value]of Object.entries(props))Object.defineProperty(obj,key,{get:()=>value??null});}function sanitizeNumber(n){return Number(n??0)}function initClipboardEvent(event,{clipboardData}){assignProps(event,{clipboardData});}function initInputEvent(event,{data,inputType,isComposing}){assignProps(event,{data,isComposing:!!isComposing,inputType:String(inputType)});}function initUIEvent(event,{view,detail}){assignProps(event,{view,detail:sanitizeNumber(detail??0)});}function initUIEventModififiers(event,{altKey,ctrlKey,metaKey,shiftKey,modifierAltGraph,modifierCapsLock,modifierFn,modifierFnLock,modifierNumLock,modifierScrollLock,modifierSymbol,modifierSymbolLock}){assignProps(event,{altKey:!!altKey,ctrlKey:!!ctrlKey,metaKey:!!metaKey,shiftKey:!!shiftKey,getModifierState(k2){return !!{Alt:altKey,AltGraph:modifierAltGraph,CapsLock:modifierCapsLock,Control:ctrlKey,Fn:modifierFn,FnLock:modifierFnLock,Meta:metaKey,NumLock:modifierNumLock,ScrollLock:modifierScrollLock,Shift:shiftKey,Symbol:modifierSymbol,SymbolLock:modifierSymbolLock}[k2]}});}function initKeyboardEvent(event,{key,code,location,repeat,isComposing,charCode}){assignProps(event,{key:String(key),code:String(code),location:sanitizeNumber(location),repeat:!!repeat,isComposing:!!isComposing,charCode});}function initMouseEvent(event,{x:x2,y:y2,screenX,screenY,clientX=x2,clientY=y2,button,buttons,relatedTarget}){assignProps(event,{screenX:sanitizeNumber(screenX),screenY:sanitizeNumber(screenY),clientX:sanitizeNumber(clientX),x:sanitizeNumber(clientX),clientY:sanitizeNumber(clientY),y:sanitizeNumber(clientY),button:sanitizeNumber(button),buttons:sanitizeNumber(buttons),relatedTarget});}function initPointerEvent(event,{pointerId,width,height,pressure,tangentialPressure,tiltX,tiltY,twist,pointerType,isPrimary}){assignProps(event,{pointerId:sanitizeNumber(pointerId),width:sanitizeNumber(width),height:sanitizeNumber(height),pressure:sanitizeNumber(pressure),tangentialPressure:sanitizeNumber(tangentialPressure),tiltX:sanitizeNumber(tiltX),tiltY:sanitizeNumber(tiltY),twist:sanitizeNumber(twist),pointerType:String(pointerType),isPrimary:!!isPrimary});}function dispatchUIEvent(target,type5,init,preventDefault=!1){(isMouseEvent(type5)||isKeyboardEvent(type5))&&(init={...init,...this.system.getUIEventModifiers()});let event=createEvent2(type5,target,init);return dispatchEvent.call(this,target,event,preventDefault)}function dispatchEvent(target,event,preventDefault=!1){var _behavior_type;let type5=event.type,behaviorImplementation=preventDefault?()=>{}:(_behavior_type=behavior[type5])===null||_behavior_type===void 0?void 0:_behavior_type.call(behavior,event,target,this);if(behaviorImplementation){event.preventDefault();let defaultPrevented=!1;return Object.defineProperty(event,"defaultPrevented",{get:()=>defaultPrevented}),Object.defineProperty(event,"preventDefault",{value:()=>{defaultPrevented=event.cancelable;}}),wrapEvent(()=>target.dispatchEvent(event)),defaultPrevented||behaviorImplementation(),!defaultPrevented}return wrapEvent(()=>target.dispatchEvent(event))}function dispatchDOMEvent(target,type5,init){let event=createEvent2(type5,target,init);wrapEvent(()=>target.dispatchEvent(event));}var Interceptor=Symbol("Interceptor for programmatical calls");function prepareInterceptor(element,propName,interceptorImpl){let prototypeDescriptor=Object.getOwnPropertyDescriptor(element.constructor.prototype,propName),objectDescriptor=Object.getOwnPropertyDescriptor(element,propName),target=prototypeDescriptor?.set?"set":"value";if(typeof prototypeDescriptor?.[target]!="function"||prototypeDescriptor[target][Interceptor])throw new Error(`Element ${element.tagName} does not implement "${String(propName)}".`);function intercept(...args){let{applyNative=!1,realArgs,then}=interceptorImpl.call(this,...args),realFunc=(!applyNative&&objectDescriptor||prototypeDescriptor)[target];target==="set"?realFunc.call(this,realArgs):realFunc.call(this,...realArgs),then?.();}intercept[Interceptor]=Interceptor,Object.defineProperty(element,propName,{...objectDescriptor??prototypeDescriptor,[target]:intercept});}function prepareValueInterceptor(element){prepareInterceptor(element,"value",function(v){let isUI=isUIValue(v);return isUI&&startTrackValue(this),{applyNative:!!isUI,realArgs:sanitizeValue(this,v),then:isUI?void 0:()=>trackOrSetValue(this,String(v))}});}function sanitizeValue(element,v){return isElementType(element,"input",{type:"number"})&&String(v)!==""&&!Number.isNaN(Number(v))?String(Number(v)):String(v)}function prepareSelectionInterceptor(element){prepareInterceptor(element,"setSelectionRange",function(start,...others){let isUI=isUISelectionStart(start);return {applyNative:!!isUI,realArgs:[Number(start),...others],then:()=>isUI?void 0:setUISelectionClean(element)}}),prepareInterceptor(element,"selectionStart",function(v){return {realArgs:v,then:()=>setUISelectionClean(element)}}),prepareInterceptor(element,"selectionEnd",function(v){return {realArgs:v,then:()=>setUISelectionClean(element)}}),prepareInterceptor(element,"select",function(){return {realArgs:[],then:()=>setUISelectionRaw(element,{anchorOffset:0,focusOffset:getUIValue(element).length})}});}function prepareRangeTextInterceptor(element){prepareInterceptor(element,"setRangeText",function(...realArgs){return {realArgs,then:()=>{setUIValueClean(element),setUISelectionClean(element);}}});}var isPrepared=Symbol("Node prepared with document state workarounds");function prepareDocument(document2){document2[isPrepared]||(document2.addEventListener("focus",e=>{let el=e.target;prepareElement(el);},{capture:!0,passive:!0}),document2.activeElement&&prepareElement(document2.activeElement),document2.addEventListener("blur",e=>{let el=e.target,initialValue2=getInitialValue(el);initialValue2!==void 0&&(el.value!==initialValue2&&dispatchDOMEvent(el,"change"),clearInitialValue(el));},{capture:!0,passive:!0}),document2[isPrepared]=isPrepared);}function prepareElement(el){el[isPrepared]||(isElementType(el,["input","textarea"])&&(prepareValueInterceptor(el),prepareSelectionInterceptor(el),prepareRangeTextInterceptor(el)),el[isPrepared]=isPrepared);}function getDocumentFromNode(el){return isDocument2(el)?el:el.ownerDocument}function isDocument2(node){return node.nodeType===9}function wait(config3){let delay=config3.delay;if(typeof delay=="number")return Promise.all([new Promise(resolve=>globalThis.setTimeout(()=>resolve(),delay)),config3.advanceTimers(delay)])}function _define_property3(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var DOM_KEY_LOCATION;(function(DOM_KEY_LOCATION2){DOM_KEY_LOCATION2[DOM_KEY_LOCATION2.STANDARD=0]="STANDARD",DOM_KEY_LOCATION2[DOM_KEY_LOCATION2.LEFT=1]="LEFT",DOM_KEY_LOCATION2[DOM_KEY_LOCATION2.RIGHT=2]="RIGHT",DOM_KEY_LOCATION2[DOM_KEY_LOCATION2.NUMPAD=3]="NUMPAD";})(DOM_KEY_LOCATION||(DOM_KEY_LOCATION={}));var modifierKeys=["Alt","AltGraph","Control","Fn","Meta","Shift","Symbol"];function isModifierKey(key){return modifierKeys.includes(key)}var modifierLocks=["CapsLock","FnLock","NumLock","ScrollLock","SymbolLock"];function isModifierLock(key){return modifierLocks.includes(key)}var KeyboardHost=class{isKeyPressed(keyDef){return !!this.pressed[String(keyDef.code)]}getPressedKeys(){return Object.values(this.pressed).map(p2=>p2.keyDef)}async keydown(instance,keyDef){var _this_pressed,_code,_this_pressed_code;let key=String(keyDef.key),code=String(keyDef.code),target=getActiveElementOrBody(instance.config.document);this.setKeydownTarget(target);var _;(_=(_this_pressed=this.pressed)[_code=code])!==null&&_!==void 0||(_this_pressed[_code]={keyDef,unpreventedDefault:!1}),isModifierKey(key)&&(this.modifiers[key]=!0);let unprevented=instance.dispatchUIEvent(target,"keydown",{key,code});isModifierLock(key)&&!this.modifiers[key]&&(this.modifiers[key]=!0,this.modifierLockStart[key]=!0),(_this_pressed_code=this.pressed[code]).unpreventedDefault||(_this_pressed_code.unpreventedDefault=unprevented),unprevented&&this.hasKeyPress(key)&&instance.dispatchUIEvent(getActiveElementOrBody(instance.config.document),"keypress",{key,code,charCode:keyDef.key==="Enter"?13:String(keyDef.key).charCodeAt(0)});}async keyup(instance,keyDef){let key=String(keyDef.key),code=String(keyDef.code),unprevented=this.pressed[code].unpreventedDefault;delete this.pressed[code],isModifierKey(key)&&!Object.values(this.pressed).find(p2=>p2.keyDef.key===key)&&(this.modifiers[key]=!1),instance.dispatchUIEvent(getActiveElementOrBody(instance.config.document),"keyup",{key,code},!unprevented),isModifierLock(key)&&this.modifiers[key]&&(this.modifierLockStart[key]?this.modifierLockStart[key]=!1:this.modifiers[key]=!1);}setKeydownTarget(target){target!==this.lastKeydownTarget&&(this.carryChar=""),this.lastKeydownTarget=target;}hasKeyPress(key){return (key.length===1||key==="Enter")&&!this.modifiers.Control&&!this.modifiers.Alt}constructor(system){_define_property3(this,"system",void 0),_define_property3(this,"modifiers",{Alt:!1,AltGraph:!1,CapsLock:!1,Control:!1,Fn:!1,FnLock:!1,Meta:!1,NumLock:!1,ScrollLock:!1,Shift:!1,Symbol:!1,SymbolLock:!1}),_define_property3(this,"pressed",{}),_define_property3(this,"carryChar",""),_define_property3(this,"lastKeydownTarget",void 0),_define_property3(this,"modifierLockStart",{}),this.system=system;}};var defaultKeyMap=[..."0123456789".split("").map(c=>({code:`Digit${c}`,key:c})),...")!@#$%^&*(".split("").map((c,i)=>({code:`Digit${i}`,key:c,shiftKey:!0})),..."abcdefghijklmnopqrstuvwxyz".split("").map(c=>({code:`Key${c.toUpperCase()}`,key:c})),..."ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("").map(c=>({code:`Key${c}`,key:c,shiftKey:!0})),{code:"Space",key:" "},{code:"AltLeft",key:"Alt",location:DOM_KEY_LOCATION.LEFT},{code:"AltRight",key:"Alt",location:DOM_KEY_LOCATION.RIGHT},{code:"ShiftLeft",key:"Shift",location:DOM_KEY_LOCATION.LEFT},{code:"ShiftRight",key:"Shift",location:DOM_KEY_LOCATION.RIGHT},{code:"ControlLeft",key:"Control",location:DOM_KEY_LOCATION.LEFT},{code:"ControlRight",key:"Control",location:DOM_KEY_LOCATION.RIGHT},{code:"MetaLeft",key:"Meta",location:DOM_KEY_LOCATION.LEFT},{code:"MetaRight",key:"Meta",location:DOM_KEY_LOCATION.RIGHT},{code:"OSLeft",key:"OS",location:DOM_KEY_LOCATION.LEFT},{code:"OSRight",key:"OS",location:DOM_KEY_LOCATION.RIGHT},{code:"Tab",key:"Tab"},{code:"CapsLock",key:"CapsLock"},{code:"Backspace",key:"Backspace"},{code:"Enter",key:"Enter"},{code:"Escape",key:"Escape"},{code:"ArrowUp",key:"ArrowUp"},{code:"ArrowDown",key:"ArrowDown"},{code:"ArrowLeft",key:"ArrowLeft"},{code:"ArrowRight",key:"ArrowRight"},{code:"Home",key:"Home"},{code:"End",key:"End"},{code:"Delete",key:"Delete"},{code:"PageUp",key:"PageUp"},{code:"PageDown",key:"PageDown"},{code:"Fn",key:"Fn"},{code:"Symbol",key:"Symbol"},{code:"AltRight",key:"AltGraph"}];var defaultKeyMap2=[{name:"MouseLeft",pointerType:"mouse",button:"primary"},{name:"MouseRight",pointerType:"mouse",button:"secondary"},{name:"MouseMiddle",pointerType:"mouse",button:"auxiliary"},{name:"TouchA",pointerType:"touch"},{name:"TouchB",pointerType:"touch"},{name:"TouchC",pointerType:"touch"}];function _define_property4(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var Buttons=class{getButtons(){let v=0;for(let button of Object.keys(this.pressed))v|=2**Number(button);return v}down(keyDef){let button=getMouseButtonId(keyDef.button);if(button in this.pressed){this.pressed[button].push(keyDef);return}return this.pressed[button]=[keyDef],button}up(keyDef){let button=getMouseButtonId(keyDef.button);if(button in this.pressed&&(this.pressed[button]=this.pressed[button].filter(k2=>k2.name!==keyDef.name),this.pressed[button].length===0))return delete this.pressed[button],button}constructor(){_define_property4(this,"pressed",{});}},MouseButton={primary:0,secondary:1,auxiliary:2,back:3,X1:3,forward:4,X2:4};function getMouseButtonId(button=0){return button in MouseButton?MouseButton[button]:Number(button)}var MouseButtonFlip={1:2,2:1};function getMouseEventButton(button){return button=getMouseButtonId(button),button in MouseButtonFlip?MouseButtonFlip[button]:button}function _define_property5(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var Device=class{get countPressed(){return this.pressedKeys.size}isPressed(keyDef){return this.pressedKeys.has(keyDef.name)}addPressed(keyDef){return this.pressedKeys.add(keyDef.name)}removePressed(keyDef){return this.pressedKeys.delete(keyDef.name)}constructor(){_define_property5(this,"pressedKeys",new Set);}};function getTreeDiff(a2,b){let treeA=[];for(let el=a2;el;el=el.parentElement)treeA.push(el);let treeB=[];for(let el=b;el;el=el.parentElement)treeB.push(el);let i=0;for(;!(i>=treeA.length||i>=treeB.length||treeA[treeA.length-1-i]!==treeB[treeB.length-1-i]);i++);return [treeA.slice(0,treeA.length-i),treeB.slice(0,treeB.length-i),treeB.slice(treeB.length-i)]}function resolveCaretPosition({target,node,offset}){return hasOwnSelection(target)?{node:target,offset:offset??getUIValue(target).length}:node?{node,offset:offset??(node.nodeType===3?node.nodeValue.length:node.childNodes.length)}:findNodeAtTextOffset(target,offset)}function findNodeAtTextOffset(node,offset,isRoot=!0){let i=offset===void 0?node.childNodes.length-1:0,step=offset===void 0?-1:1;for(;offset===void 0?i>=(isRoot?Math.max(node.childNodes.length-1,0):0):i<=node.childNodes.length;){if(offset&&i===node.childNodes.length)throw new Error("The given offset is out of bounds.");let c=node.childNodes.item(i),text=String(c.textContent);if(text.length)if(offset!==void 0&&text.length<offset)offset-=text.length;else {if(c.nodeType===1)return findNodeAtTextOffset(c,offset,!1);if(c.nodeType===3)return {node:c,offset:offset??c.nodeValue.length}}i+=step;}return {node,offset:node.childNodes.length}}function setSelectionPerMouseDown({document:document2,target,clickCount,node,offset}){if(hasNoSelection(target))return;let targetHasOwnSelection=hasOwnSelection(target),text=String(targetHasOwnSelection?getUIValue(target):target.textContent),[start,end]=node?[offset,offset]:getTextRange(text,offset,clickCount);if(targetHasOwnSelection)return setUISelection(target,{anchorOffset:start??text.length,focusOffset:end??text.length}),{node:target,start:start??0,end:end??text.length};{let{node:startNode,offset:startOffset}=resolveCaretPosition({target,node,offset:start}),{node:endNode,offset:endOffset}=resolveCaretPosition({target,node,offset:end}),range=target.ownerDocument.createRange();try{range.setStart(startNode,startOffset),range.setEnd(endNode,endOffset);}catch{throw new Error("The given offset is out of bounds.")}let selection=document2.getSelection();return selection?.removeAllRanges(),selection?.addRange(range.cloneRange()),range}}function getTextRange(text,pos,clickCount){if(clickCount%3===1||text.length===0)return [pos,pos];let textPos=pos??text.length;return clickCount%3===2?[textPos-text.substr(0,pos).match(/(\\w+|\\s+|\\W)?$/)[0].length,pos===void 0?pos:pos+text.substr(pos).match(/^(\\w+|\\s+|\\W)?/)[0].length]:[textPos-text.substr(0,pos).match(/[^\\r\\n]*$/)[0].length,pos===void 0?pos:pos+text.substr(pos).match(/^[^\\r\\n]*/)[0].length]}function modifySelectionPerMouseMove(selectionRange,{document:document2,target,node,offset}){let selectionFocus=resolveCaretPosition({target,node,offset});if("node"in selectionRange){if(selectionFocus.node===selectionRange.node){let anchorOffset=selectionFocus.offset<selectionRange.start?selectionRange.end:selectionRange.start,focusOffset=selectionFocus.offset>selectionRange.end||selectionFocus.offset<selectionRange.start?selectionFocus.offset:selectionRange.end;setUISelection(selectionRange.node,{anchorOffset,focusOffset});}}else {let range=selectionRange.cloneRange(),cmp=range.comparePoint(selectionFocus.node,selectionFocus.offset);cmp<0?range.setStart(selectionFocus.node,selectionFocus.offset):cmp>0&&range.setEnd(selectionFocus.node,selectionFocus.offset);let selection=document2.getSelection();selection?.removeAllRanges(),selection?.addRange(range.cloneRange());}}function isDifferentPointerPosition(positionA,positionB){var _positionA_coords,_positionB_coords,_positionA_coords1,_positionB_coords1,_positionA_caret,_positionB_caret,_positionA_caret1,_positionB_caret1;return positionA.target!==positionB.target||((_positionA_coords=positionA.coords)===null||_positionA_coords===void 0?void 0:_positionA_coords.x)!==((_positionB_coords=positionB.coords)===null||_positionB_coords===void 0?void 0:_positionB_coords.y)||((_positionA_coords1=positionA.coords)===null||_positionA_coords1===void 0?void 0:_positionA_coords1.y)!==((_positionB_coords1=positionB.coords)===null||_positionB_coords1===void 0?void 0:_positionB_coords1.y)||((_positionA_caret=positionA.caret)===null||_positionA_caret===void 0?void 0:_positionA_caret.node)!==((_positionB_caret=positionB.caret)===null||_positionB_caret===void 0?void 0:_positionB_caret.node)||((_positionA_caret1=positionA.caret)===null||_positionA_caret1===void 0?void 0:_positionA_caret1.offset)!==((_positionB_caret1=positionB.caret)===null||_positionB_caret1===void 0?void 0:_positionB_caret1.offset)}function _define_property6(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var Mouse=class{move(instance,position){let prevPosition=this.position,prevTarget=this.getTarget(instance);if(this.position=position,!isDifferentPointerPosition(prevPosition,position))return;let nextTarget=this.getTarget(instance),init=this.getEventInit("mousemove"),[leave,enter]=getTreeDiff(prevTarget,nextTarget);return {leave:()=>{prevTarget!==nextTarget&&(instance.dispatchUIEvent(prevTarget,"mouseout",init),leave.forEach(el=>instance.dispatchUIEvent(el,"mouseleave",init)));},enter:()=>{prevTarget!==nextTarget&&(instance.dispatchUIEvent(nextTarget,"mouseover",init),enter.forEach(el=>instance.dispatchUIEvent(el,"mouseenter",init)));},move:()=>{instance.dispatchUIEvent(nextTarget,"mousemove",init),this.modifySelecting(instance);}}}down(instance,keyDef,pointer3){let button=this.buttons.down(keyDef);if(button===void 0)return;let target=this.getTarget(instance);this.buttonDownTarget[button]=target;let disabled=isDisabled2(target),init=this.getEventInit("mousedown",keyDef.button);(disabled||instance.dispatchUIEvent(target,"mousedown",init))&&(this.startSelecting(instance,init.detail),focusElement(target)),!disabled&&getMouseEventButton(keyDef.button)===2&&instance.dispatchUIEvent(target,"contextmenu",this.getEventInit("contextmenu",keyDef.button,pointer3));}up(instance,keyDef,pointer3){let button=this.buttons.up(keyDef);if(button===void 0)return;let target=this.getTarget(instance);if(!isDisabled2(target)){instance.dispatchUIEvent(target,"mouseup",this.getEventInit("mouseup",keyDef.button)),this.endSelecting();let clickTarget=getTreeDiff(this.buttonDownTarget[button],target)[2][0];if(clickTarget){let init=this.getEventInit("click",keyDef.button,pointer3);init.detail&&(instance.dispatchUIEvent(clickTarget,init.button===0?"click":"auxclick",init),init.button===0&&init.detail===2&&instance.dispatchUIEvent(clickTarget,"dblclick",{...this.getEventInit("dblclick",keyDef.button),detail:init.detail}));}}}resetClickCount(){this.clickCount.reset();}getEventInit(type5,button,pointer3){let init={...this.position.coords};return pointer3&&(init.pointerId=pointer3.pointerId,init.pointerType=pointer3.pointerType,init.isPrimary=pointer3.isPrimary),init.button=getMouseEventButton(button),init.buttons=this.buttons.getButtons(),type5==="mousedown"?init.detail=this.clickCount.getOnDown(init.button):type5==="mouseup"?init.detail=this.clickCount.getOnUp(init.button):(type5==="click"||type5==="auxclick")&&(init.detail=this.clickCount.incOnClick(init.button)),init}getTarget(instance){var _this_position_target;return (_this_position_target=this.position.target)!==null&&_this_position_target!==void 0?_this_position_target:instance.config.document.body}startSelecting(instance,clickCount){var _this_position_caret,_this_position_caret1;this.selecting=setSelectionPerMouseDown({document:instance.config.document,target:this.getTarget(instance),node:(_this_position_caret=this.position.caret)===null||_this_position_caret===void 0?void 0:_this_position_caret.node,offset:(_this_position_caret1=this.position.caret)===null||_this_position_caret1===void 0?void 0:_this_position_caret1.offset,clickCount});}modifySelecting(instance){var _this_position_caret,_this_position_caret1;this.selecting&&modifySelectionPerMouseMove(this.selecting,{document:instance.config.document,target:this.getTarget(instance),node:(_this_position_caret=this.position.caret)===null||_this_position_caret===void 0?void 0:_this_position_caret.node,offset:(_this_position_caret1=this.position.caret)===null||_this_position_caret1===void 0?void 0:_this_position_caret1.offset});}endSelecting(){this.selecting=void 0;}constructor(){_define_property6(this,"position",{}),_define_property6(this,"buttons",new Buttons),_define_property6(this,"selecting",void 0),_define_property6(this,"buttonDownTarget",{}),_define_property6(this,"clickCount",new class{incOnClick(button){let current=this.down[button]===void 0?void 0:Number(this.down[button])+1;return this.count=this.count[button]===void 0?{}:{[button]:Number(this.count[button])+1},current}getOnDown(button){var _this_count_button;this.down={[button]:(_this_count_button=this.count[button])!==null&&_this_count_button!==void 0?_this_count_button:0};var _this_count_button1;return this.count={[button]:(_this_count_button1=this.count[button])!==null&&_this_count_button1!==void 0?_this_count_button1:0},Number(this.count[button])+1}getOnUp(button){return this.down[button]===void 0?void 0:Number(this.down[button])+1}reset(){this.count={};}constructor(){_define_property6(this,"down",{}),_define_property6(this,"count",{});}});}};function hasPointerEvents(instance,element){var _checkPointerEvents;return ((_checkPointerEvents=checkPointerEvents(instance,element))===null||_checkPointerEvents===void 0?void 0:_checkPointerEvents.pointerEvents)!=="none"}function closestPointerEventsDeclaration(element){let window2=getWindow(element);for(let el=element,tree=[];el?.ownerDocument;el=el.parentElement){tree.push(el);let pointerEvents=window2.getComputedStyle(el).pointerEvents;if(pointerEvents&&!["inherit","unset"].includes(pointerEvents))return {pointerEvents,tree}}}var PointerEventsCheck=Symbol("Last check for pointer-events");function checkPointerEvents(instance,element){let lastCheck=element[PointerEventsCheck];if(!(instance.config.pointerEventsCheck!==PointerEventsCheckLevel.Never&&(!lastCheck||hasBitFlag(instance.config.pointerEventsCheck,PointerEventsCheckLevel.EachApiCall)&&lastCheck[ApiLevel.Call]!==getLevelRef(instance,ApiLevel.Call)||hasBitFlag(instance.config.pointerEventsCheck,PointerEventsCheckLevel.EachTrigger)&&lastCheck[ApiLevel.Trigger]!==getLevelRef(instance,ApiLevel.Trigger))))return lastCheck?.result;let declaration=closestPointerEventsDeclaration(element);return element[PointerEventsCheck]={[ApiLevel.Call]:getLevelRef(instance,ApiLevel.Call),[ApiLevel.Trigger]:getLevelRef(instance,ApiLevel.Trigger),result:declaration},declaration}function assertPointerEvents(instance,element){let declaration=checkPointerEvents(instance,element);if(declaration?.pointerEvents==="none")throw new Error([`Unable to perform pointer interaction as the element ${declaration.tree.length>1?"inherits":"has"} \\`pointer-events: none\\`:`,"",printTree(declaration.tree)].join(`\n`))}function printTree(tree){return tree.reverse().map((el,i)=>["".padEnd(i),el.tagName,el.id&&`#${el.id}`,el.hasAttribute("data-testid")&&`(testId=${el.getAttribute("data-testid")})`,getLabelDescr(el),tree.length>1&&i===0&&"  <-- This element declared `pointer-events: none`",tree.length>1&&i===tree.length-1&&"  <-- Asserted pointer events here"].filter(Boolean).join("")).join(`\n`)}function getLabelDescr(element){var _element_labels;let label;if(element.hasAttribute("aria-label"))label=element.getAttribute("aria-label");else if(element.hasAttribute("aria-labelledby")){var _element_ownerDocument_getElementById_textContent,_element_ownerDocument_getElementById;label=(_element_ownerDocument_getElementById=element.ownerDocument.getElementById(element.getAttribute("aria-labelledby")))===null||_element_ownerDocument_getElementById===void 0||(_element_ownerDocument_getElementById_textContent=_element_ownerDocument_getElementById.textContent)===null||_element_ownerDocument_getElementById_textContent===void 0?void 0:_element_ownerDocument_getElementById_textContent.trim();}else if(isElementType(element,["button","input","meter","output","progress","select","textarea"])&&(!((_element_labels=element.labels)===null||_element_labels===void 0)&&_element_labels.length))label=Array.from(element.labels).map(el=>{var _el_textContent;return (_el_textContent=el.textContent)===null||_el_textContent===void 0?void 0:_el_textContent.trim()}).join("|");else if(isElementType(element,"button")){var _element_textContent;label=(_element_textContent=element.textContent)===null||_element_textContent===void 0?void 0:_element_textContent.trim();}return label=label?.replace(/\\n/g,"  "),Number(label?.length)>30&&(label=`${label?.substring(0,29)}\\u2026`),label?`(label=${label})`:""}function hasBitFlag(conf,flag3){return (conf&flag3)>0}function _define_property7(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var Pointer=class{init(instance,position){this.position=position;let target=this.getTarget(instance),[,enter]=getTreeDiff(null,target),init=this.getEventInit();return assertPointerEvents(instance,target),instance.dispatchUIEvent(target,"pointerover",init),enter.forEach(el=>instance.dispatchUIEvent(el,"pointerenter",init)),this}move(instance,position){let prevPosition=this.position,prevTarget=this.getTarget(instance);if(this.position=position,!isDifferentPointerPosition(prevPosition,position))return;let nextTarget=this.getTarget(instance),init=this.getEventInit(),[leave,enter]=getTreeDiff(prevTarget,nextTarget);return {leave:()=>{hasPointerEvents(instance,prevTarget)&&prevTarget!==nextTarget&&(instance.dispatchUIEvent(prevTarget,"pointerout",init),leave.forEach(el=>instance.dispatchUIEvent(el,"pointerleave",init)));},enter:()=>{assertPointerEvents(instance,nextTarget),prevTarget!==nextTarget&&(instance.dispatchUIEvent(nextTarget,"pointerover",init),enter.forEach(el=>instance.dispatchUIEvent(el,"pointerenter",init)));},move:()=>{instance.dispatchUIEvent(nextTarget,"pointermove",init);}}}down(instance,_keyDef){if(this.isDown)return;let target=this.getTarget(instance);assertPointerEvents(instance,target),this.isDown=!0,this.isPrevented=!instance.dispatchUIEvent(target,"pointerdown",this.getEventInit());}up(instance,_keyDef){if(!this.isDown)return;let target=this.getTarget(instance);assertPointerEvents(instance,target),this.isDown=!1,instance.dispatchUIEvent(target,"pointerup",this.getEventInit());}release(instance){let target=this.getTarget(instance),[leave]=getTreeDiff(target,null),init=this.getEventInit();hasPointerEvents(instance,target)&&(instance.dispatchUIEvent(target,"pointerout",init),leave.forEach(el=>instance.dispatchUIEvent(el,"pointerleave",init))),this.isCancelled=!0;}getTarget(instance){var _this_position_target;return (_this_position_target=this.position.target)!==null&&_this_position_target!==void 0?_this_position_target:instance.config.document.body}getEventInit(){return {...this.position.coords,pointerId:this.pointerId,pointerType:this.pointerType,isPrimary:this.isPrimary}}constructor({pointerId,pointerType,isPrimary}){_define_property7(this,"pointerId",void 0),_define_property7(this,"pointerType",void 0),_define_property7(this,"isPrimary",void 0),_define_property7(this,"isMultitouch",!1),_define_property7(this,"isCancelled",!1),_define_property7(this,"isDown",!1),_define_property7(this,"isPrevented",!1),_define_property7(this,"position",{}),this.pointerId=pointerId,this.pointerType=pointerType,this.isPrimary=isPrimary,this.isMultitouch=!isPrimary;}};function _define_property8(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var PointerHost=class{isKeyPressed(keyDef){return this.devices.get(keyDef.pointerType).isPressed(keyDef)}async press(instance,keyDef,position){let pointerName=this.getPointerName(keyDef),pointer3=keyDef.pointerType==="touch"?this.pointers.new(pointerName,keyDef).init(instance,position):this.pointers.get(pointerName);pointer3.position=position,pointer3.pointerType!=="touch"&&(this.mouse.position=position),this.devices.get(keyDef.pointerType).addPressed(keyDef),this.buttons.down(keyDef),pointer3.down(instance,keyDef),pointer3.pointerType!=="touch"&&!pointer3.isPrevented&&this.mouse.down(instance,keyDef,pointer3);}async move(instance,pointerName,position){let pointer3=this.pointers.get(pointerName),pointermove=pointer3.move(instance,position),mousemove=pointer3.pointerType==="touch"||pointer3.isPrevented&&pointer3.isDown?void 0:this.mouse.move(instance,position);pointermove?.leave(),mousemove?.leave(),pointermove?.enter(),mousemove?.enter(),pointermove?.move(),mousemove?.move();}async release(instance,keyDef,position){let device=this.devices.get(keyDef.pointerType);device.removePressed(keyDef),this.buttons.up(keyDef);let pointer3=this.pointers.get(this.getPointerName(keyDef));if(pointer3.position=position,pointer3.pointerType!=="touch"&&(this.mouse.position=position),device.countPressed===0&&pointer3.up(instance,keyDef),pointer3.pointerType==="touch"&&pointer3.release(instance),!pointer3.isPrevented){if(pointer3.pointerType==="touch"&&!pointer3.isMultitouch){let mousemove=this.mouse.move(instance,pointer3.position);mousemove?.leave(),mousemove?.enter(),mousemove?.move(),this.mouse.down(instance,keyDef,pointer3);}if(!pointer3.isMultitouch){let mousemove=this.mouse.move(instance,pointer3.position);mousemove?.leave(),mousemove?.enter(),mousemove?.move(),this.mouse.up(instance,keyDef,pointer3);}}}getPointerName(keyDef){return keyDef.pointerType==="touch"?keyDef.name:keyDef.pointerType}getPreviousPosition(pointerName){return this.pointers.has(pointerName)?this.pointers.get(pointerName).position:void 0}resetClickCount(){this.mouse.resetClickCount();}getMouseTarget(instance){var _this_mouse_position_target;return (_this_mouse_position_target=this.mouse.position.target)!==null&&_this_mouse_position_target!==void 0?_this_mouse_position_target:instance.config.document.body}setMousePosition(position){this.mouse.position=position,this.pointers.get("mouse").position=position;}constructor(system){_define_property8(this,"system",void 0),_define_property8(this,"mouse",void 0),_define_property8(this,"buttons",void 0),_define_property8(this,"devices",new class{get(k2){var _this_registry,_k,_;return (_=(_this_registry=this.registry)[_k=k2])!==null&&_!==void 0||(_this_registry[_k]=new Device),this.registry[k2]}constructor(){_define_property8(this,"registry",{});}}),_define_property8(this,"pointers",new class{new(pointerName,keyDef){let isPrimary=keyDef.pointerType!=="touch"||!Object.values(this.registry).some(p2=>p2.pointerType==="touch"&&!p2.isCancelled);return isPrimary||Object.values(this.registry).forEach(p2=>{p2.pointerType===keyDef.pointerType&&!p2.isCancelled&&(p2.isMultitouch=!0);}),this.registry[pointerName]=new Pointer({pointerId:this.nextId++,pointerType:keyDef.pointerType,isPrimary}),this.registry[pointerName]}get(pointerName){if(!this.has(pointerName))throw new Error(`Trying to access pointer "${pointerName}" which does not exist.`);return this.registry[pointerName]}has(pointerName){return pointerName in this.registry}constructor(){_define_property8(this,"registry",{mouse:new Pointer({pointerId:1,pointerType:"mouse",isPrimary:!0})}),_define_property8(this,"nextId",2);}}),this.system=system,this.buttons=new Buttons,this.mouse=new Mouse;}};function _define_property9(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var System=class{getUIEventModifiers(){return {altKey:this.keyboard.modifiers.Alt,ctrlKey:this.keyboard.modifiers.Control,metaKey:this.keyboard.modifiers.Meta,shiftKey:this.keyboard.modifiers.Shift,modifierAltGraph:this.keyboard.modifiers.AltGraph,modifierCapsLock:this.keyboard.modifiers.CapsLock,modifierFn:this.keyboard.modifiers.Fn,modifierFnLock:this.keyboard.modifiers.FnLock,modifierNumLock:this.keyboard.modifiers.NumLock,modifierScrollLock:this.keyboard.modifiers.ScrollLock,modifierSymbol:this.keyboard.modifiers.Symbol,modifierSymbolLock:this.keyboard.modifiers.SymbolLock}}constructor(){_define_property9(this,"keyboard",new KeyboardHost(this)),_define_property9(this,"pointer",new PointerHost(this));}};async function click(element){let pointerIn=[];return this.config.skipHover||pointerIn.push({target:element}),pointerIn.push({keys:"[MouseLeft]",target:element}),this.pointer(pointerIn)}async function dblClick(element){return this.pointer([{target:element},"[MouseLeft][MouseLeft]"])}async function tripleClick(element){return this.pointer([{target:element},"[MouseLeft][MouseLeft][MouseLeft]"])}async function hover(element){return this.pointer({target:element})}async function unhover(element){return assertPointerEvents(this,this.system.pointer.getMouseTarget(this)),this.pointer({target:element.ownerDocument.body})}async function tab({shift}={}){return this.keyboard(shift===!0?"{Shift>}{Tab}{/Shift}":shift===!1?"[/ShiftLeft][/ShiftRight]{Tab}":"{Tab}")}function parseKeyDef(keyboardMap,text){let defs=[];do{let{type:type5,descriptor,consumedLength,releasePrevious,releaseSelf=!0,repeat}=readNextDescriptor(text,"keyboard");var _keyboardMap_find;let keyDef=(_keyboardMap_find=keyboardMap.find(def=>{if(type5==="["){var _def_code;return ((_def_code=def.code)===null||_def_code===void 0?void 0:_def_code.toLowerCase())===descriptor.toLowerCase()}else if(type5==="{"){var _def_key;return ((_def_key=def.key)===null||_def_key===void 0?void 0:_def_key.toLowerCase())===descriptor.toLowerCase()}return def.key===descriptor}))!==null&&_keyboardMap_find!==void 0?_keyboardMap_find:{key:"Unknown",code:"Unknown",[type5==="["?"code":"key"]:descriptor};defs.push({keyDef,releasePrevious,releaseSelf,repeat}),text=text.slice(consumedLength);}while(text);return defs}async function keyboard(text){let actions=parseKeyDef(this.config.keyboardMap,text);for(let i=0;i<actions.length;i++)await wait(this.config),await keyboardAction(this,actions[i]);}async function keyboardAction(instance,{keyDef,releasePrevious,releaseSelf,repeat}){let{system}=instance;if(system.keyboard.isKeyPressed(keyDef)&&await system.keyboard.keyup(instance,keyDef),!releasePrevious){for(let i=1;i<=repeat;i++)await system.keyboard.keydown(instance,keyDef),i<repeat&&await wait(instance.config);releaseSelf&&await system.keyboard.keyup(instance,keyDef);}}async function releaseAllKeys(instance){for(let k2 of instance.system.keyboard.getPressedKeys())await instance.system.keyboard.keyup(instance,k2);}function copySelection(target){let data=hasOwnSelection(target)?{"text/plain":readSelectedValueFromInput(target)}:{"text/plain":String(target.ownerDocument.getSelection())},dt=createDataTransfer(getWindow(target));for(let type5 in data)data[type5]&&dt.setData(type5,data[type5]);return dt}function readSelectedValueFromInput(target){let sel=getUISelection(target);return getUIValue(target).substring(sel.startOffset,sel.endOffset)}async function copy(){let doc=this.config.document;var _doc_activeElement;let target=(_doc_activeElement=doc.activeElement)!==null&&_doc_activeElement!==void 0?_doc_activeElement:doc.body,clipboardData=copySelection(target);if(clipboardData.items.length!==0)return this.dispatchUIEvent(target,"copy",{clipboardData})&&this.config.writeToClipboard&&await writeDataTransferToClipboard(doc,clipboardData),clipboardData}async function cut(){let doc=this.config.document;var _doc_activeElement;let target=(_doc_activeElement=doc.activeElement)!==null&&_doc_activeElement!==void 0?_doc_activeElement:doc.body,clipboardData=copySelection(target);if(clipboardData.items.length!==0)return this.dispatchUIEvent(target,"cut",{clipboardData})&&this.config.writeToClipboard&&await writeDataTransferToClipboard(target.ownerDocument,clipboardData),clipboardData}async function paste(clipboardData){let doc=this.config.document;var _doc_activeElement;let target=(_doc_activeElement=doc.activeElement)!==null&&_doc_activeElement!==void 0?_doc_activeElement:doc.body;var _ref;let dataTransfer=(_ref=typeof clipboardData=="string"?getClipboardDataFromString(doc,clipboardData):clipboardData)!==null&&_ref!==void 0?_ref:await readDataTransferFromClipboard(doc).catch(()=>{throw new Error("`userEvent.paste()` without `clipboardData` requires the `ClipboardAPI` to be available.")});this.dispatchUIEvent(target,"paste",{clipboardData:dataTransfer});}function getClipboardDataFromString(doc,text){let dt=createDataTransfer(getWindow(doc));return dt.setData("text",text),dt}function parseKeyDef2(pointerMap,keys2){let defs=[];do{let{descriptor,consumedLength,releasePrevious,releaseSelf=!0}=readNextDescriptor(keys2,"pointer"),keyDef=pointerMap.find(p2=>p2.name===descriptor);keyDef&&defs.push({keyDef,releasePrevious,releaseSelf}),keys2=keys2.slice(consumedLength);}while(keys2);return defs}async function pointer(input2){let{pointerMap}=this.config,actions=[];(Array.isArray(input2)?input2:[input2]).forEach(actionInput=>{typeof actionInput=="string"?actions.push(...parseKeyDef2(pointerMap,actionInput)):"keys"in actionInput?actions.push(...parseKeyDef2(pointerMap,actionInput.keys).map(i=>({...actionInput,...i}))):actions.push(actionInput);});for(let i=0;i<actions.length;i++)await wait(this.config),await pointerAction(this,actions[i]);this.system.pointer.resetClickCount();}async function pointerAction(instance,action){var _previousPosition_caret,_previousPosition_caret1;let pointerName="pointerName"in action&&action.pointerName?action.pointerName:"keyDef"in action?instance.system.pointer.getPointerName(action.keyDef):"mouse",previousPosition=instance.system.pointer.getPreviousPosition(pointerName);var _action_target,_action_coords,_action_node,_action_offset;let position={target:(_action_target=action.target)!==null&&_action_target!==void 0?_action_target:getPrevTarget(instance,previousPosition),coords:(_action_coords=action.coords)!==null&&_action_coords!==void 0?_action_coords:previousPosition?.coords,caret:{node:(_action_node=action.node)!==null&&_action_node!==void 0?_action_node:hasCaretPosition(action)||previousPosition==null||(_previousPosition_caret=previousPosition.caret)===null||_previousPosition_caret===void 0?void 0:_previousPosition_caret.node,offset:(_action_offset=action.offset)!==null&&_action_offset!==void 0?_action_offset:hasCaretPosition(action)||previousPosition==null||(_previousPosition_caret1=previousPosition.caret)===null||_previousPosition_caret1===void 0?void 0:_previousPosition_caret1.offset}};"keyDef"in action?(instance.system.pointer.isKeyPressed(action.keyDef)&&(setLevelRef(instance,ApiLevel.Trigger),await instance.system.pointer.release(instance,action.keyDef,position)),action.releasePrevious||(setLevelRef(instance,ApiLevel.Trigger),await instance.system.pointer.press(instance,action.keyDef,position),action.releaseSelf&&(setLevelRef(instance,ApiLevel.Trigger),await instance.system.pointer.release(instance,action.keyDef,position)))):(setLevelRef(instance,ApiLevel.Trigger),await instance.system.pointer.move(instance,pointerName,position));}function hasCaretPosition(action){var _action_target,_ref;return !!((_ref=(_action_target=action.target)!==null&&_action_target!==void 0?_action_target:action.node)!==null&&_ref!==void 0?_ref:action.offset!==void 0)}function getPrevTarget(instance,position){if(!position)throw new Error("This pointer has no previous position. Provide a target property!");var _position_target;return (_position_target=position.target)!==null&&_position_target!==void 0?_position_target:instance.config.document.body}async function clear(element){if(!isEditable(element)||isDisabled2(element))throw new Error("clear()` is only supported on editable elements.");if(focusElement(element),element.ownerDocument.activeElement!==element)throw new Error("The element to be cleared could not be focused.");if(selectAll(element),!isAllSelected(element))throw new Error("The element content to be cleared could not be selected.");input(this,element,"","deleteContentBackward");}async function selectOptions(select,values){return selectOptionsBase.call(this,!0,select,values)}async function deselectOptions(select,values){return selectOptionsBase.call(this,!1,select,values)}async function selectOptionsBase(newValue,select,values){if(!newValue&&!select.multiple)throw getConfig2().getElementError("Unable to deselect an option in a non-multiple select. Use selectOptions to change the selection instead.",select);let valArray=Array.isArray(values)?values:[values],allOptions=Array.from(select.querySelectorAll(\'option, [role="option"]\')),selectedOptions=valArray.map(val=>{if(typeof val!="string"&&allOptions.includes(val))return val;{let matchingOption=allOptions.find(o=>o.value===val||o.innerHTML===val);if(matchingOption)return matchingOption;throw getConfig2().getElementError(`Value "${String(val)}" not found in options`,select)}}).filter(option=>!isDisabled2(option));if(isDisabled2(select)||!selectedOptions.length)return;let selectOption=option=>{option.selected=newValue,this.dispatchUIEvent(select,"input",{bubbles:!0,cancelable:!1,composed:!0}),this.dispatchUIEvent(select,"change");};if(isElementType(select,"select"))if(select.multiple)for(let option of selectedOptions){let withPointerEvents=this.config.pointerEventsCheck===0?!0:hasPointerEvents(this,option);withPointerEvents&&(this.dispatchUIEvent(option,"pointerover"),this.dispatchUIEvent(select,"pointerenter"),this.dispatchUIEvent(option,"mouseover"),this.dispatchUIEvent(select,"mouseenter"),this.dispatchUIEvent(option,"pointermove"),this.dispatchUIEvent(option,"mousemove"),this.dispatchUIEvent(option,"pointerdown"),this.dispatchUIEvent(option,"mousedown")),focusElement(select),withPointerEvents&&(this.dispatchUIEvent(option,"pointerup"),this.dispatchUIEvent(option,"mouseup")),selectOption(option),withPointerEvents&&this.dispatchUIEvent(option,"click"),await wait(this.config);}else if(selectedOptions.length===1){let withPointerEvents=this.config.pointerEventsCheck===0?!0:hasPointerEvents(this,select);withPointerEvents?await this.click(select):focusElement(select),selectOption(selectedOptions[0]),withPointerEvents&&(this.dispatchUIEvent(select,"pointerover"),this.dispatchUIEvent(select,"pointerenter"),this.dispatchUIEvent(select,"mouseover"),this.dispatchUIEvent(select,"mouseenter"),this.dispatchUIEvent(select,"pointerup"),this.dispatchUIEvent(select,"mouseup"),this.dispatchUIEvent(select,"click")),await wait(this.config);}else throw getConfig2().getElementError("Cannot select multiple options on a non-multiple select",select);else if(select.getAttribute("role")==="listbox")for(let option of selectedOptions)await this.click(option),await this.unhover(option);else throw getConfig2().getElementError("Cannot select options on elements that are neither select nor listbox elements",select)}async function type3(element,text,{skipClick=this.config.skipClick,skipAutoClose=this.config.skipAutoClose,initialSelectionStart,initialSelectionEnd}={}){element.disabled||(skipClick||await this.click(element),initialSelectionStart!==void 0&&setSelectionRange(element,initialSelectionStart,initialSelectionEnd??initialSelectionStart),await this.keyboard(text),skipAutoClose||await releaseAllKeys(this));}var fakeFiles=Symbol("files and value properties are mocked");function restoreProperty(obj,prop,descriptor){descriptor?Object.defineProperty(obj,prop,descriptor):delete obj[prop];}function setFiles(el,files){var _el_fakeFiles;(_el_fakeFiles=el[fakeFiles])===null||_el_fakeFiles===void 0||_el_fakeFiles.restore();let typeDescr=Object.getOwnPropertyDescriptor(el,"type"),valueDescr=Object.getOwnPropertyDescriptor(el,"value"),filesDescr=Object.getOwnPropertyDescriptor(el,"files");function restore(){restoreProperty(el,"type",typeDescr),restoreProperty(el,"value",valueDescr),restoreProperty(el,"files",filesDescr);}el[fakeFiles]={restore},Object.defineProperties(el,{files:{configurable:!0,get:()=>files},value:{configurable:!0,get:()=>files.length?`C:\\\\fakepath\\\\${files[0].name}`:"",set(v){if(v==="")restore();else {var _valueDescr_set;valueDescr==null||(_valueDescr_set=valueDescr.set)===null||_valueDescr_set===void 0||_valueDescr_set.call(el,v);}}},type:{configurable:!0,get:()=>"file",set(v){v!=="file"&&(restore(),el.type=v);}}});}async function upload(element,fileOrFiles){let input2=isElementType(element,"label")?element.control:element;if(!input2||!isElementType(input2,"input",{type:"file"}))throw new TypeError(`The ${input2===element?"given":"associated"} ${input2?.tagName} element does not accept file uploads`);if(isDisabled2(element))return;let files=(Array.isArray(fileOrFiles)?fileOrFiles:[fileOrFiles]).filter(file=>!this.config.applyAccept||isAcceptableFile(file,input2.accept)).slice(0,input2.multiple?void 0:1),fileDialog=()=>{var _input_files;files.length===((_input_files=input2.files)===null||_input_files===void 0?void 0:_input_files.length)&&files.every((f4,i)=>{var _input_files2;return f4===((_input_files2=input2.files)===null||_input_files2===void 0?void 0:_input_files2.item(i))})||(setFiles(input2,createFileList(getWindow(element),files)),this.dispatchUIEvent(input2,"input"),this.dispatchUIEvent(input2,"change"));};input2.addEventListener("fileDialog",fileDialog),await this.click(element),input2.removeEventListener("fileDialog",fileDialog);}function isAcceptableFile(file,accept){if(!accept)return !0;let wildcards=["audio/*","image/*","video/*"];return accept.split(",").some(acceptToken=>acceptToken.startsWith(".")?file.name.endsWith(acceptToken):wildcards.includes(acceptToken)?file.type.startsWith(acceptToken.substr(0,acceptToken.length-1)):file.type===acceptToken)}var userEventApi={click,dblClick,tripleClick,hover,unhover,tab,keyboard,copy,cut,paste,pointer,clear,deselectOptions,selectOptions,type:type3,upload};function wrapAsync(implementation){return getConfig2().asyncWrapper(implementation)}var defaultOptionsDirect={applyAccept:!0,autoModify:!0,delay:0,document:globalThis.document,keyboardMap:defaultKeyMap,pointerMap:defaultKeyMap2,pointerEventsCheck:PointerEventsCheckLevel.EachApiCall,skipAutoClose:!1,skipClick:!1,skipHover:!1,writeToClipboard:!1,advanceTimers:()=>Promise.resolve()},defaultOptionsSetup={...defaultOptionsDirect,writeToClipboard:!0};function createConfig(options={},defaults=defaultOptionsSetup,node){let document2=getDocument2(options,node,defaults);return {...defaults,...options,document:document2}}function setupMain(options={}){let config3=createConfig(options);prepareDocument(config3.document);var _config_document_defaultView;let view=(_config_document_defaultView=config3.document.defaultView)!==null&&_config_document_defaultView!==void 0?_config_document_defaultView:globalThis.window;return attachClipboardStubToView(view),createInstance(config3).api}function setupDirect({keyboardState,pointerState,...options}={},node){let config3=createConfig(options,defaultOptionsDirect,node);prepareDocument(config3.document);var _ref;let system=(_ref=pointerState??keyboardState)!==null&&_ref!==void 0?_ref:new System;return {api:createInstance(config3,system).api,system}}function setupSub(options){return createInstance({...this.config,...options},this.system).api}function wrapAndBindImpl(instance,impl){function method(...args){return setLevelRef(instance,ApiLevel.Call),wrapAsync(()=>impl.apply(instance,args).then(async ret=>(await wait(instance.config),ret)))}return Object.defineProperty(method,"name",{get:()=>impl.name}),method}function createInstance(config3,system=new System){let instance={};return Object.assign(instance,{config:config3,dispatchEvent:dispatchEvent.bind(instance),dispatchUIEvent:dispatchUIEvent.bind(instance),system,levelRefs:{},...userEventApi}),{instance,api:{...Object.fromEntries(Object.entries(userEventApi).map(([name,api])=>[name,wrapAndBindImpl(instance,api)])),setup:setupSub.bind(instance)}}}function getDocument2(options,node,defaults){var _options_document,_ref;return (_ref=(_options_document=options.document)!==null&&_options_document!==void 0?_options_document:node&&getDocumentFromNode(node))!==null&&_ref!==void 0?_ref:defaults.document}var directApi_exports={};__export(directApi_exports,{clear:()=>clear2,click:()=>click2,copy:()=>copy2,cut:()=>cut2,dblClick:()=>dblClick2,deselectOptions:()=>deselectOptions2,hover:()=>hover2,keyboard:()=>keyboard2,paste:()=>paste2,pointer:()=>pointer2,selectOptions:()=>selectOptions2,tab:()=>tab2,tripleClick:()=>tripleClick2,type:()=>type4,unhover:()=>unhover2,upload:()=>upload2});function clear2(element){return setupDirect().api.clear(element)}function click2(element,options={}){return setupDirect(options,element).api.click(element)}function copy2(options={}){return setupDirect(options).api.copy()}function cut2(options={}){return setupDirect(options).api.cut()}function dblClick2(element,options={}){return setupDirect(options).api.dblClick(element)}function deselectOptions2(select,values,options={}){return setupDirect(options).api.deselectOptions(select,values)}function hover2(element,options={}){return setupDirect(options).api.hover(element)}async function keyboard2(text,options={}){let{api,system}=setupDirect(options);return api.keyboard(text).then(()=>system)}async function pointer2(input2,options={}){let{api,system}=setupDirect(options);return api.pointer(input2).then(()=>system)}function paste2(clipboardData,options){return setupDirect(options).api.paste(clipboardData)}function selectOptions2(select,values,options={}){return setupDirect(options).api.selectOptions(select,values)}function tripleClick2(element,options={}){return setupDirect(options).api.tripleClick(element)}function type4(element,text,options={}){return setupDirect(options,element).api.type(element,text,options)}function unhover2(element,options={}){let{api,system}=setupDirect(options);return system.pointer.setMousePosition({target:element}),api.unhover(element)}function upload2(element,fileOrFiles,options={}){return setupDirect(options).api.upload(element,fileOrFiles)}function tab2(options={}){return setupDirect().api.tab(options)}var userEvent={...directApi_exports,setup:setupMain};function dedent(templ){for(var values=[],_i=1;_i<arguments.length;_i++)values[_i-1]=arguments[_i];var strings=Array.from(typeof templ=="string"?[templ]:templ);strings[strings.length-1]=strings[strings.length-1].replace(/\\r?\\n([\\t ]*)$/,"");var indentLengths=strings.reduce(function(arr,str){var matches3=str.match(/\\n([\\t ]+|(?!\\s).)/g);return matches3?arr.concat(matches3.map(function(match){var _a2,_b;return (_b=(_a2=match.match(/[\\t ]/g))===null||_a2===void 0?void 0:_a2.length)!==null&&_b!==void 0?_b:0})):arr},[]);if(indentLengths.length){var pattern_1=new RegExp(`\n[\t ]{`+Math.min.apply(Math,indentLengths)+"}","g");strings=strings.map(function(str){return str.replace(pattern_1,`\n`)});}strings[0]=strings[0].replace(/^\\r?\\n/,"");var string=strings[0];return values.forEach(function(value,i){var endentations=string.match(/(?:^|\\n)( *)$/),endentation=endentations?endentations[1]:"",indentedValue=value;typeof value=="string"&&value.includes(`\n`)&&(indentedValue=String(value).split(`\n`).map(function(str,i2){return i2===0?str:""+endentation+str}).join(`\n`)),string+=indentedValue+strings[i+1];}),string}var esm_default=dedent;var testingLibrary=(0,_storybook_instrumenter__WEBPACK_IMPORTED_MODULE_2__/* .instrument */ .wV)({...dom_esm_exports},{intercept:(method,path)=>path[0]==="fireEvent"||method.startsWith("find")||method.startsWith("waitFor")});testingLibrary.screen=new Proxy(testingLibrary.screen,{get(target,prop,receiver){return storybook_internal_client_logger__WEBPACK_IMPORTED_MODULE_1__.once.warn(esm_default`\n          You are using Testing Library\'s \\`screen\\` object. Use \\`within(canvasElement)\\` instead.\n          More info: https://storybook.js.org/docs/essentials/interactions\n        `),Reflect.get(target,prop,receiver)}});var {buildQueries:buildQueries2,configure:configure2,createEvent:createEvent3,fireEvent:fireEvent2,findAllByAltText:findAllByAltText2,findAllByDisplayValue:findAllByDisplayValue2,findAllByLabelText:findAllByLabelText2,findAllByPlaceholderText:findAllByPlaceholderText2,findAllByRole:findAllByRole2,findAllByTestId:findAllByTestId2,findAllByText:findAllByText2,findAllByTitle:findAllByTitle2,findByAltText:findByAltText2,findByDisplayValue:findByDisplayValue2,findByLabelText:findByLabelText2,findByPlaceholderText:findByPlaceholderText2,findByRole:findByRole2,findByTestId:findByTestId2,findByText:findByText2,findByTitle:findByTitle2,getAllByAltText:getAllByAltText2,getAllByDisplayValue:getAllByDisplayValue2,getAllByLabelText:getAllByLabelText2,getAllByPlaceholderText:getAllByPlaceholderText2,getAllByRole:getAllByRole2,getAllByTestId:getAllByTestId2,getAllByText:getAllByText2,getAllByTitle:getAllByTitle2,getByAltText:getByAltText2,getByDisplayValue:getByDisplayValue2,getByLabelText:getByLabelText2,getByPlaceholderText:getByPlaceholderText2,getByRole:getByRole2,getByTestId:getByTestId2,getByText:getByText2,getByTitle:getByTitle2,getConfig:getConfig3,getDefaultNormalizer:getDefaultNormalizer2,getElementError:getElementError2,getNodeText:getNodeText2,getQueriesForElement:getQueriesForElement2,getRoles:getRoles2,getSuggestedQuery:getSuggestedQuery2,isInaccessible:isInaccessible2,logDOM:logDOM2,logRoles:logRoles2,prettyDOM:prettyDOM2,queries:queries2,queryAllByAltText:queryAllByAltText2,queryAllByAttribute:queryAllByAttribute2,queryAllByDisplayValue:queryAllByDisplayValue2,queryAllByLabelText:queryAllByLabelText2,queryAllByPlaceholderText:queryAllByPlaceholderText2,queryAllByRole:queryAllByRole2,queryAllByTestId:queryAllByTestId2,queryAllByText:queryAllByText2,queryAllByTitle:queryAllByTitle2,queryByAltText:queryByAltText2,queryByAttribute:queryByAttribute2,queryByDisplayValue:queryByDisplayValue2,queryByLabelText:queryByLabelText2,queryByPlaceholderText:queryByPlaceholderText2,queryByRole:queryByRole2,queryByTestId:queryByTestId2,queryByText:queryByText2,queryByTitle:queryByTitle2,queryHelpers:queryHelpers2,screen:screen2,waitFor:waitFor2,waitForElementToBeRemoved:waitForElementToBeRemoved2,within,prettyFormat:prettyFormat2}=testingLibrary,{userEvent:userEvent2}=(0,_storybook_instrumenter__WEBPACK_IMPORTED_MODULE_2__/* .instrument */ .wV)({userEvent},{intercept:!0});var {expect:expect3}=(0,_storybook_instrumenter__WEBPACK_IMPORTED_MODULE_2__/* .instrument */ .wV)({expect:expect2},{getKeys:(obj,depth)=>{let privateApi=["assert","__methods","__flags","_obj"];if(obj.constructor===Assertion){let keys2=Object.keys(Object.getPrototypeOf(obj)).filter(it=>!privateApi.includes(it));return depth>2?keys2:[...keys2,"not"]}return Object.keys(obj)},intercept:method=>method!=="expect"}),resetAllMocksLoader=({parameters})=>{parameters?.test?.mockReset===!0?resetAllMocks():parameters?.test?.clearMocks===!0?clearAllMocks():parameters?.test?.restoreMocks!==!1&&restoreAllMocks();},traverseArgs=(value,depth=0,key)=>{if(depth>5||value==null)return value;if(isMockFunction(value))return key&&value.mockName(key),value;if(typeof value=="function"&&"isAction"in value&&value.isAction&&!("implicit"in value&&value.implicit)){let mock=fn2(value);return key&&mock.mockName(key),mock}if(Array.isArray(value))return depth++,value.map(item=>traverseArgs(item,depth));if(typeof value=="object"&&value.constructor===Object){depth++;for(let[k2,v]of Object.entries(value))Object.getOwnPropertyDescriptor(value,k2)?.writable&&(value[k2]=traverseArgs(v,depth,k2));return value}return value},nameSpiesAndWrapActionsInSpies=({initialArgs})=>{traverseArgs(initialArgs);},enhanceContext=context=>{globalThis.HTMLElement&&context.canvasElement instanceof globalThis.HTMLElement&&(context.canvas=within(context.canvasElement));};_storybook_global__WEBPACK_IMPORTED_MODULE_0__.global.__STORYBOOK_TEST_LOADERS__=[resetAllMocksLoader,nameSpiesAndWrapActionsInSpies,enhanceContext];_storybook_global__WEBPACK_IMPORTED_MODULE_0__.global.__STORYBOOK_TEST_ON_MOCK_CALL__=onMockCall;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/test/dist/index.mjs\n')},"../../node_modules/.pnpm/jsdoc-type-pratt-parser@4.1.0/node_modules/jsdoc-type-pratt-parser/dist/index.js":function(__unused_webpack_module,exports){eval("(function (global, factory) {\n     true ? factory(exports) :\n    0;\n})(this, (function (exports) { 'use strict';\n\n    function tokenToString(token) {\n        if (token.text !== undefined && token.text !== '') {\n            return `'${token.type}' with value '${token.text}'`;\n        }\n        else {\n            return `'${token.type}'`;\n        }\n    }\n    class NoParsletFoundError extends Error {\n        constructor(token) {\n            super(`No parslet found for token: ${tokenToString(token)}`);\n            this.token = token;\n            Object.setPrototypeOf(this, NoParsletFoundError.prototype);\n        }\n        getToken() {\n            return this.token;\n        }\n    }\n    class EarlyEndOfParseError extends Error {\n        constructor(token) {\n            super(`The parsing ended early. The next token was: ${tokenToString(token)}`);\n            this.token = token;\n            Object.setPrototypeOf(this, EarlyEndOfParseError.prototype);\n        }\n        getToken() {\n            return this.token;\n        }\n    }\n    class UnexpectedTypeError extends Error {\n        constructor(result, message) {\n            let error = `Unexpected type: '${result.type}'.`;\n            if (message !== undefined) {\n                error += ` Message: ${message}`;\n            }\n            super(error);\n            Object.setPrototypeOf(this, UnexpectedTypeError.prototype);\n        }\n    }\n    // export class UnexpectedTokenError extends Error {\n    //   private expected: Token\n    //   private found: Token\n    //\n    //   constructor (expected: Token, found: Token) {\n    //     super(`The parsing ended early. The next token was: ${tokenToString(token)}`)\n    //\n    //     this.token = token\n    //\n    //     Object.setPrototypeOf(this, EarlyEndOfParseError.prototype)\n    //   }\n    //\n    //   getToken() {\n    //     return this.token\n    //   }\n    // }\n\n    function makePunctuationRule(type) {\n        return text => {\n            if (text.startsWith(type)) {\n                return { type, text: type };\n            }\n            else {\n                return null;\n            }\n        };\n    }\n    function getQuoted(text) {\n        let position = 0;\n        let char;\n        const mark = text[0];\n        let escaped = false;\n        if (mark !== '\\'' && mark !== '\"') {\n            return null;\n        }\n        while (position < text.length) {\n            position++;\n            char = text[position];\n            if (!escaped && char === mark) {\n                position++;\n                break;\n            }\n            escaped = !escaped && char === '\\\\';\n        }\n        if (char !== mark) {\n            throw new Error('Unterminated String');\n        }\n        return text.slice(0, position);\n    }\n    const identifierStartRegex = /[$_\\p{ID_Start}]|\\\\u\\p{Hex_Digit}{4}|\\\\u\\{0*(?:\\p{Hex_Digit}{1,5}|10\\p{Hex_Digit}{4})\\}/u;\n    // A hyphen is not technically allowed, but to keep it liberal for now,\n    //  adding it here\n    const identifierContinueRegex = /[$\\-\\p{ID_Continue}\\u200C\\u200D]|\\\\u\\p{Hex_Digit}{4}|\\\\u\\{0*(?:\\p{Hex_Digit}{1,5}|10\\p{Hex_Digit}{4})\\}/u;\n    function getIdentifier(text) {\n        let char = text[0];\n        if (!identifierStartRegex.test(char)) {\n            return null;\n        }\n        let position = 1;\n        do {\n            char = text[position];\n            if (!identifierContinueRegex.test(char)) {\n                break;\n            }\n            position++;\n        } while (position < text.length);\n        return text.slice(0, position);\n    }\n    // we are a bit more liberal than TypeScript here and allow `NaN`, `Infinity` and `-Infinity`\n    const numberRegex = /^(NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity))/;\n    function getNumber(text) {\n        var _a, _b;\n        return (_b = (_a = numberRegex.exec(text)) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : null;\n    }\n    const identifierRule = text => {\n        const value = getIdentifier(text);\n        if (value == null) {\n            return null;\n        }\n        return {\n            type: 'Identifier',\n            text: value\n        };\n    };\n    function makeKeyWordRule(type) {\n        return text => {\n            if (!text.startsWith(type)) {\n                return null;\n            }\n            const prepends = text[type.length];\n            if (prepends !== undefined && identifierContinueRegex.test(prepends)) {\n                return null;\n            }\n            return {\n                type,\n                text: type\n            };\n        };\n    }\n    const stringValueRule = text => {\n        const value = getQuoted(text);\n        if (value == null) {\n            return null;\n        }\n        return {\n            type: 'StringValue',\n            text: value\n        };\n    };\n    const eofRule = text => {\n        if (text.length > 0) {\n            return null;\n        }\n        return {\n            type: 'EOF',\n            text: ''\n        };\n    };\n    const numberRule = text => {\n        const value = getNumber(text);\n        if (value === null) {\n            return null;\n        }\n        return {\n            type: 'Number',\n            text: value\n        };\n    };\n    const rules = [\n        eofRule,\n        makePunctuationRule('=>'),\n        makePunctuationRule('('),\n        makePunctuationRule(')'),\n        makePunctuationRule('{'),\n        makePunctuationRule('}'),\n        makePunctuationRule('['),\n        makePunctuationRule(']'),\n        makePunctuationRule('|'),\n        makePunctuationRule('&'),\n        makePunctuationRule('<'),\n        makePunctuationRule('>'),\n        makePunctuationRule(','),\n        makePunctuationRule(';'),\n        makePunctuationRule('*'),\n        makePunctuationRule('?'),\n        makePunctuationRule('!'),\n        makePunctuationRule('='),\n        makePunctuationRule(':'),\n        makePunctuationRule('...'),\n        makePunctuationRule('.'),\n        makePunctuationRule('#'),\n        makePunctuationRule('~'),\n        makePunctuationRule('/'),\n        makePunctuationRule('@'),\n        makeKeyWordRule('undefined'),\n        makeKeyWordRule('null'),\n        makeKeyWordRule('function'),\n        makeKeyWordRule('this'),\n        makeKeyWordRule('new'),\n        makeKeyWordRule('module'),\n        makeKeyWordRule('event'),\n        makeKeyWordRule('external'),\n        makeKeyWordRule('typeof'),\n        makeKeyWordRule('keyof'),\n        makeKeyWordRule('readonly'),\n        makeKeyWordRule('import'),\n        makeKeyWordRule('is'),\n        makeKeyWordRule('in'),\n        makeKeyWordRule('asserts'),\n        numberRule,\n        identifierRule,\n        stringValueRule\n    ];\n    const breakingWhitespaceRegex = /^\\s*\\n\\s*/;\n    class Lexer {\n        static create(text) {\n            const current = this.read(text);\n            text = current.text;\n            const next = this.read(text);\n            text = next.text;\n            return new Lexer(text, undefined, current.token, next.token);\n        }\n        constructor(text, previous, current, next) {\n            this.text = '';\n            this.text = text;\n            this.previous = previous;\n            this.current = current;\n            this.next = next;\n        }\n        static read(text, startOfLine = false) {\n            startOfLine = startOfLine || breakingWhitespaceRegex.test(text);\n            text = text.trim();\n            for (const rule of rules) {\n                const partial = rule(text);\n                if (partial !== null) {\n                    const token = Object.assign(Object.assign({}, partial), { startOfLine });\n                    text = text.slice(token.text.length);\n                    return { text, token };\n                }\n            }\n            throw new Error('Unexpected Token ' + text);\n        }\n        advance() {\n            const next = Lexer.read(this.text);\n            return new Lexer(next.text, this.current, this.next, next.token);\n        }\n    }\n\n    /**\n     * Throws an error if the provided result is not a {@link RootResult}\n     */\n    function assertRootResult(result) {\n        if (result === undefined) {\n            throw new Error('Unexpected undefined');\n        }\n        if (result.type === 'JsdocTypeKeyValue' || result.type === 'JsdocTypeParameterList' ||\n            result.type === 'JsdocTypeProperty' || result.type === 'JsdocTypeReadonlyProperty' ||\n            result.type === 'JsdocTypeObjectField' || result.type === 'JsdocTypeJsdocObjectField' ||\n            result.type === 'JsdocTypeIndexSignature' || result.type === 'JsdocTypeMappedType') {\n            throw new UnexpectedTypeError(result);\n        }\n        return result;\n    }\n    function assertPlainKeyValueOrRootResult(result) {\n        if (result.type === 'JsdocTypeKeyValue') {\n            return assertPlainKeyValueResult(result);\n        }\n        return assertRootResult(result);\n    }\n    function assertPlainKeyValueOrNameResult(result) {\n        if (result.type === 'JsdocTypeName') {\n            return result;\n        }\n        return assertPlainKeyValueResult(result);\n    }\n    function assertPlainKeyValueResult(result) {\n        if (result.type !== 'JsdocTypeKeyValue') {\n            throw new UnexpectedTypeError(result);\n        }\n        return result;\n    }\n    function assertNumberOrVariadicNameResult(result) {\n        var _a;\n        if (result.type === 'JsdocTypeVariadic') {\n            if (((_a = result.element) === null || _a === void 0 ? void 0 : _a.type) === 'JsdocTypeName') {\n                return result;\n            }\n            throw new UnexpectedTypeError(result);\n        }\n        if (result.type !== 'JsdocTypeNumber' && result.type !== 'JsdocTypeName') {\n            throw new UnexpectedTypeError(result);\n        }\n        return result;\n    }\n    function isSquaredProperty(result) {\n        return result.type === 'JsdocTypeIndexSignature' || result.type === 'JsdocTypeMappedType';\n    }\n\n    // higher precedence = higher importance\n    var Precedence;\n    (function (Precedence) {\n        Precedence[Precedence[\"ALL\"] = 0] = \"ALL\";\n        Precedence[Precedence[\"PARAMETER_LIST\"] = 1] = \"PARAMETER_LIST\";\n        Precedence[Precedence[\"OBJECT\"] = 2] = \"OBJECT\";\n        Precedence[Precedence[\"KEY_VALUE\"] = 3] = \"KEY_VALUE\";\n        Precedence[Precedence[\"INDEX_BRACKETS\"] = 4] = \"INDEX_BRACKETS\";\n        Precedence[Precedence[\"UNION\"] = 5] = \"UNION\";\n        Precedence[Precedence[\"INTERSECTION\"] = 6] = \"INTERSECTION\";\n        Precedence[Precedence[\"PREFIX\"] = 7] = \"PREFIX\";\n        Precedence[Precedence[\"INFIX\"] = 8] = \"INFIX\";\n        Precedence[Precedence[\"TUPLE\"] = 9] = \"TUPLE\";\n        Precedence[Precedence[\"SYMBOL\"] = 10] = \"SYMBOL\";\n        Precedence[Precedence[\"OPTIONAL\"] = 11] = \"OPTIONAL\";\n        Precedence[Precedence[\"NULLABLE\"] = 12] = \"NULLABLE\";\n        Precedence[Precedence[\"KEY_OF_TYPE_OF\"] = 13] = \"KEY_OF_TYPE_OF\";\n        Precedence[Precedence[\"FUNCTION\"] = 14] = \"FUNCTION\";\n        Precedence[Precedence[\"ARROW\"] = 15] = \"ARROW\";\n        Precedence[Precedence[\"ARRAY_BRACKETS\"] = 16] = \"ARRAY_BRACKETS\";\n        Precedence[Precedence[\"GENERIC\"] = 17] = \"GENERIC\";\n        Precedence[Precedence[\"NAME_PATH\"] = 18] = \"NAME_PATH\";\n        Precedence[Precedence[\"PARENTHESIS\"] = 19] = \"PARENTHESIS\";\n        Precedence[Precedence[\"SPECIAL_TYPES\"] = 20] = \"SPECIAL_TYPES\";\n    })(Precedence || (Precedence = {}));\n\n    class Parser {\n        constructor(grammar, textOrLexer, baseParser) {\n            this.grammar = grammar;\n            if (typeof textOrLexer === 'string') {\n                this._lexer = Lexer.create(textOrLexer);\n            }\n            else {\n                this._lexer = textOrLexer;\n            }\n            this.baseParser = baseParser;\n        }\n        get lexer() {\n            return this._lexer;\n        }\n        /**\n         * Parses a given string and throws an error if the parse ended before the end of the string.\n         */\n        parse() {\n            const result = this.parseType(Precedence.ALL);\n            if (this.lexer.current.type !== 'EOF') {\n                throw new EarlyEndOfParseError(this.lexer.current);\n            }\n            return result;\n        }\n        /**\n         * Parses with the current lexer and asserts that the result is a {@link RootResult}.\n         */\n        parseType(precedence) {\n            return assertRootResult(this.parseIntermediateType(precedence));\n        }\n        /**\n         * The main parsing function. First it tries to parse the current state in the prefix step, and then it continues\n         * to parse the state in the infix step.\n         */\n        parseIntermediateType(precedence) {\n            const result = this.tryParslets(null, precedence);\n            if (result === null) {\n                throw new NoParsletFoundError(this.lexer.current);\n            }\n            return this.parseInfixIntermediateType(result, precedence);\n        }\n        /**\n         * In the infix parsing step the parser continues to parse the current state with all parslets until none returns\n         * a result.\n         */\n        parseInfixIntermediateType(left, precedence) {\n            let result = this.tryParslets(left, precedence);\n            while (result !== null) {\n                left = result;\n                result = this.tryParslets(left, precedence);\n            }\n            return left;\n        }\n        /**\n         * Tries to parse the current state with all parslets in the grammar and returns the first non null result.\n         */\n        tryParslets(left, precedence) {\n            for (const parslet of this.grammar) {\n                const result = parslet(this, precedence, left);\n                if (result !== null) {\n                    return result;\n                }\n            }\n            return null;\n        }\n        /**\n         * If the given type equals the current type of the {@link Lexer} advance the lexer. Return true if the lexer was\n         * advanced.\n         */\n        consume(types) {\n            if (!Array.isArray(types)) {\n                types = [types];\n            }\n            if (types.includes(this.lexer.current.type)) {\n                this._lexer = this.lexer.advance();\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        acceptLexerState(parser) {\n            this._lexer = parser.lexer;\n        }\n    }\n\n    function isQuestionMarkUnknownType(next) {\n        return next === 'EOF' || next === '|' || next === ',' || next === ')' || next === '>';\n    }\n\n    const nullableParslet = (parser, precedence, left) => {\n        const type = parser.lexer.current.type;\n        const next = parser.lexer.next.type;\n        const accept = ((left == null) && type === '?' && !isQuestionMarkUnknownType(next)) ||\n            ((left != null) && type === '?');\n        if (!accept) {\n            return null;\n        }\n        parser.consume('?');\n        if (left == null) {\n            return {\n                type: 'JsdocTypeNullable',\n                element: parser.parseType(Precedence.NULLABLE),\n                meta: {\n                    position: 'prefix'\n                }\n            };\n        }\n        else {\n            return {\n                type: 'JsdocTypeNullable',\n                element: assertRootResult(left),\n                meta: {\n                    position: 'suffix'\n                }\n            };\n        }\n    };\n\n    function composeParslet(options) {\n        const parslet = (parser, curPrecedence, left) => {\n            const type = parser.lexer.current.type;\n            const next = parser.lexer.next.type;\n            if (left === null) {\n                if ('parsePrefix' in options) {\n                    if (options.accept(type, next)) {\n                        return options.parsePrefix(parser);\n                    }\n                }\n            }\n            else {\n                if ('parseInfix' in options) {\n                    if (options.precedence > curPrecedence && options.accept(type, next)) {\n                        return options.parseInfix(parser, left);\n                    }\n                }\n            }\n            return null;\n        };\n        // for debugging\n        Object.defineProperty(parslet, 'name', {\n            value: options.name\n        });\n        return parslet;\n    }\n\n    const optionalParslet = composeParslet({\n        name: 'optionalParslet',\n        accept: type => type === '=',\n        precedence: Precedence.OPTIONAL,\n        parsePrefix: parser => {\n            parser.consume('=');\n            return {\n                type: 'JsdocTypeOptional',\n                element: parser.parseType(Precedence.OPTIONAL),\n                meta: {\n                    position: 'prefix'\n                }\n            };\n        },\n        parseInfix: (parser, left) => {\n            parser.consume('=');\n            return {\n                type: 'JsdocTypeOptional',\n                element: assertRootResult(left),\n                meta: {\n                    position: 'suffix'\n                }\n            };\n        }\n    });\n\n    const numberParslet = composeParslet({\n        name: 'numberParslet',\n        accept: type => type === 'Number',\n        parsePrefix: parser => {\n            const value = parseFloat(parser.lexer.current.text);\n            parser.consume('Number');\n            return {\n                type: 'JsdocTypeNumber',\n                value\n            };\n        }\n    });\n\n    const parenthesisParslet = composeParslet({\n        name: 'parenthesisParslet',\n        accept: type => type === '(',\n        parsePrefix: parser => {\n            parser.consume('(');\n            if (parser.consume(')')) {\n                return {\n                    type: 'JsdocTypeParameterList',\n                    elements: []\n                };\n            }\n            const result = parser.parseIntermediateType(Precedence.ALL);\n            if (!parser.consume(')')) {\n                throw new Error('Unterminated parenthesis');\n            }\n            if (result.type === 'JsdocTypeParameterList') {\n                return result;\n            }\n            else if (result.type === 'JsdocTypeKeyValue') {\n                return {\n                    type: 'JsdocTypeParameterList',\n                    elements: [result]\n                };\n            }\n            return {\n                type: 'JsdocTypeParenthesis',\n                element: assertRootResult(result)\n            };\n        }\n    });\n\n    const specialTypesParslet = composeParslet({\n        name: 'specialTypesParslet',\n        accept: (type, next) => (type === '?' && isQuestionMarkUnknownType(next)) ||\n            type === 'null' || type === 'undefined' || type === '*',\n        parsePrefix: parser => {\n            if (parser.consume('null')) {\n                return {\n                    type: 'JsdocTypeNull'\n                };\n            }\n            if (parser.consume('undefined')) {\n                return {\n                    type: 'JsdocTypeUndefined'\n                };\n            }\n            if (parser.consume('*')) {\n                return {\n                    type: 'JsdocTypeAny'\n                };\n            }\n            if (parser.consume('?')) {\n                return {\n                    type: 'JsdocTypeUnknown'\n                };\n            }\n            throw new Error('Unacceptable token: ' + parser.lexer.current.text);\n        }\n    });\n\n    const notNullableParslet = composeParslet({\n        name: 'notNullableParslet',\n        accept: type => type === '!',\n        precedence: Precedence.NULLABLE,\n        parsePrefix: parser => {\n            parser.consume('!');\n            return {\n                type: 'JsdocTypeNotNullable',\n                element: parser.parseType(Precedence.NULLABLE),\n                meta: {\n                    position: 'prefix'\n                }\n            };\n        },\n        parseInfix: (parser, left) => {\n            parser.consume('!');\n            return {\n                type: 'JsdocTypeNotNullable',\n                element: assertRootResult(left),\n                meta: {\n                    position: 'suffix'\n                }\n            };\n        }\n    });\n\n    function createParameterListParslet({ allowTrailingComma }) {\n        return composeParslet({\n            name: 'parameterListParslet',\n            accept: type => type === ',',\n            precedence: Precedence.PARAMETER_LIST,\n            parseInfix: (parser, left) => {\n                const elements = [\n                    assertPlainKeyValueOrRootResult(left)\n                ];\n                parser.consume(',');\n                do {\n                    try {\n                        const next = parser.parseIntermediateType(Precedence.PARAMETER_LIST);\n                        elements.push(assertPlainKeyValueOrRootResult(next));\n                    }\n                    catch (e) {\n                        if (allowTrailingComma && e instanceof NoParsletFoundError) {\n                            break;\n                        }\n                        else {\n                            throw e;\n                        }\n                    }\n                } while (parser.consume(','));\n                if (elements.length > 0 && elements.slice(0, -1).some(e => e.type === 'JsdocTypeVariadic')) {\n                    throw new Error('Only the last parameter may be a rest parameter');\n                }\n                return {\n                    type: 'JsdocTypeParameterList',\n                    elements\n                };\n            }\n        });\n    }\n\n    const genericParslet = composeParslet({\n        name: 'genericParslet',\n        accept: (type, next) => type === '<' || (type === '.' && next === '<'),\n        precedence: Precedence.GENERIC,\n        parseInfix: (parser, left) => {\n            const dot = parser.consume('.');\n            parser.consume('<');\n            const objects = [];\n            do {\n                objects.push(parser.parseType(Precedence.PARAMETER_LIST));\n            } while (parser.consume(','));\n            if (!parser.consume('>')) {\n                throw new Error('Unterminated generic parameter list');\n            }\n            return {\n                type: 'JsdocTypeGeneric',\n                left: assertRootResult(left),\n                elements: objects,\n                meta: {\n                    brackets: 'angle',\n                    dot\n                }\n            };\n        }\n    });\n\n    const unionParslet = composeParslet({\n        name: 'unionParslet',\n        accept: type => type === '|',\n        precedence: Precedence.UNION,\n        parseInfix: (parser, left) => {\n            parser.consume('|');\n            const elements = [];\n            do {\n                elements.push(parser.parseType(Precedence.UNION));\n            } while (parser.consume('|'));\n            return {\n                type: 'JsdocTypeUnion',\n                elements: [assertRootResult(left), ...elements]\n            };\n        }\n    });\n\n    const baseGrammar = [\n        nullableParslet,\n        optionalParslet,\n        numberParslet,\n        parenthesisParslet,\n        specialTypesParslet,\n        notNullableParslet,\n        createParameterListParslet({\n            allowTrailingComma: true\n        }),\n        genericParslet,\n        unionParslet,\n        optionalParslet\n    ];\n\n    function createNamePathParslet({ allowSquareBracketsOnAnyType, allowJsdocNamePaths, pathGrammar }) {\n        return function namePathParslet(parser, precedence, left) {\n            if ((left == null) || precedence >= Precedence.NAME_PATH) {\n                return null;\n            }\n            const type = parser.lexer.current.type;\n            const next = parser.lexer.next.type;\n            const accept = (type === '.' && next !== '<') ||\n                (type === '[' && (allowSquareBracketsOnAnyType || left.type === 'JsdocTypeName')) ||\n                (allowJsdocNamePaths && (type === '~' || type === '#'));\n            if (!accept) {\n                return null;\n            }\n            let pathType;\n            let brackets = false;\n            if (parser.consume('.')) {\n                pathType = 'property';\n            }\n            else if (parser.consume('[')) {\n                pathType = 'property-brackets';\n                brackets = true;\n            }\n            else if (parser.consume('~')) {\n                pathType = 'inner';\n            }\n            else {\n                parser.consume('#');\n                pathType = 'instance';\n            }\n            const pathParser = pathGrammar !== null\n                ? new Parser(pathGrammar, parser.lexer, parser)\n                : parser;\n            const parsed = pathParser.parseIntermediateType(Precedence.NAME_PATH);\n            parser.acceptLexerState(pathParser);\n            let right;\n            switch (parsed.type) {\n                case 'JsdocTypeName':\n                    right = {\n                        type: 'JsdocTypeProperty',\n                        value: parsed.value,\n                        meta: {\n                            quote: undefined\n                        }\n                    };\n                    break;\n                case 'JsdocTypeNumber':\n                    right = {\n                        type: 'JsdocTypeProperty',\n                        value: parsed.value.toString(10),\n                        meta: {\n                            quote: undefined\n                        }\n                    };\n                    break;\n                case 'JsdocTypeStringValue':\n                    right = {\n                        type: 'JsdocTypeProperty',\n                        value: parsed.value,\n                        meta: {\n                            quote: parsed.meta.quote\n                        }\n                    };\n                    break;\n                case 'JsdocTypeSpecialNamePath':\n                    if (parsed.specialType === 'event') {\n                        right = parsed;\n                    }\n                    else {\n                        throw new UnexpectedTypeError(parsed, 'Type \\'JsdocTypeSpecialNamePath\\' is only allowed with specialType \\'event\\'');\n                    }\n                    break;\n                default:\n                    throw new UnexpectedTypeError(parsed, 'Expecting \\'JsdocTypeName\\', \\'JsdocTypeNumber\\', \\'JsdocStringValue\\' or \\'JsdocTypeSpecialNamePath\\'');\n            }\n            if (brackets && !parser.consume(']')) {\n                const token = parser.lexer.current;\n                throw new Error(`Unterminated square brackets. Next token is '${token.type}' ` +\n                    `with text '${token.text}'`);\n            }\n            return {\n                type: 'JsdocTypeNamePath',\n                left: assertRootResult(left),\n                right,\n                pathType\n            };\n        };\n    }\n\n    function createNameParslet({ allowedAdditionalTokens }) {\n        return composeParslet({\n            name: 'nameParslet',\n            accept: type => type === 'Identifier' || type === 'this' || type === 'new' || allowedAdditionalTokens.includes(type),\n            parsePrefix: parser => {\n                const { type, text } = parser.lexer.current;\n                parser.consume(type);\n                return {\n                    type: 'JsdocTypeName',\n                    value: text\n                };\n            }\n        });\n    }\n\n    const stringValueParslet = composeParslet({\n        name: 'stringValueParslet',\n        accept: type => type === 'StringValue',\n        parsePrefix: parser => {\n            const text = parser.lexer.current.text;\n            parser.consume('StringValue');\n            return {\n                type: 'JsdocTypeStringValue',\n                value: text.slice(1, -1),\n                meta: {\n                    quote: text[0] === '\\'' ? 'single' : 'double'\n                }\n            };\n        }\n    });\n\n    function createSpecialNamePathParslet({ pathGrammar, allowedTypes }) {\n        return composeParslet({\n            name: 'specialNamePathParslet',\n            accept: type => allowedTypes.includes(type),\n            parsePrefix: parser => {\n                const type = parser.lexer.current.type;\n                parser.consume(type);\n                if (!parser.consume(':')) {\n                    return {\n                        type: 'JsdocTypeName',\n                        value: type\n                    };\n                }\n                let result;\n                let token = parser.lexer.current;\n                if (parser.consume('StringValue')) {\n                    result = {\n                        type: 'JsdocTypeSpecialNamePath',\n                        value: token.text.slice(1, -1),\n                        specialType: type,\n                        meta: {\n                            quote: token.text[0] === '\\'' ? 'single' : 'double'\n                        }\n                    };\n                }\n                else {\n                    let value = '';\n                    const allowed = ['Identifier', '@', '/'];\n                    while (allowed.some(type => parser.consume(type))) {\n                        value += token.text;\n                        token = parser.lexer.current;\n                    }\n                    result = {\n                        type: 'JsdocTypeSpecialNamePath',\n                        value,\n                        specialType: type,\n                        meta: {\n                            quote: undefined\n                        }\n                    };\n                }\n                const moduleParser = new Parser(pathGrammar, parser.lexer, parser);\n                const moduleResult = moduleParser.parseInfixIntermediateType(result, Precedence.ALL);\n                parser.acceptLexerState(moduleParser);\n                return assertRootResult(moduleResult);\n            }\n        });\n    }\n\n    const basePathGrammar = [\n        createNameParslet({\n            allowedAdditionalTokens: ['external', 'module']\n        }),\n        stringValueParslet,\n        numberParslet,\n        createNamePathParslet({\n            allowSquareBracketsOnAnyType: false,\n            allowJsdocNamePaths: true,\n            pathGrammar: null\n        })\n    ];\n    const pathGrammar = [\n        ...basePathGrammar,\n        createSpecialNamePathParslet({\n            allowedTypes: ['event'],\n            pathGrammar: basePathGrammar\n        })\n    ];\n\n    function getParameters(value) {\n        let parameters;\n        if (value.type === 'JsdocTypeParameterList') {\n            parameters = value.elements;\n        }\n        else if (value.type === 'JsdocTypeParenthesis') {\n            parameters = [value.element];\n        }\n        else {\n            throw new UnexpectedTypeError(value);\n        }\n        return parameters.map(p => assertPlainKeyValueOrRootResult(p));\n    }\n    function getUnnamedParameters(value) {\n        const parameters = getParameters(value);\n        if (parameters.some(p => p.type === 'JsdocTypeKeyValue')) {\n            throw new Error('No parameter should be named');\n        }\n        return parameters;\n    }\n    function createFunctionParslet({ allowNamedParameters, allowNoReturnType, allowWithoutParenthesis, allowNewAsFunctionKeyword }) {\n        return composeParslet({\n            name: 'functionParslet',\n            accept: (type, next) => type === 'function' || (allowNewAsFunctionKeyword && type === 'new' && next === '('),\n            parsePrefix: parser => {\n                const newKeyword = parser.consume('new');\n                parser.consume('function');\n                const hasParenthesis = parser.lexer.current.type === '(';\n                if (!hasParenthesis) {\n                    if (!allowWithoutParenthesis) {\n                        throw new Error('function is missing parameter list');\n                    }\n                    return {\n                        type: 'JsdocTypeName',\n                        value: 'function'\n                    };\n                }\n                let result = {\n                    type: 'JsdocTypeFunction',\n                    parameters: [],\n                    arrow: false,\n                    constructor: newKeyword,\n                    parenthesis: hasParenthesis\n                };\n                const value = parser.parseIntermediateType(Precedence.FUNCTION);\n                if (allowNamedParameters === undefined) {\n                    result.parameters = getUnnamedParameters(value);\n                }\n                else if (newKeyword && value.type === 'JsdocTypeFunction' && value.arrow) {\n                    result = value;\n                    result.constructor = true;\n                    return result;\n                }\n                else {\n                    result.parameters = getParameters(value);\n                    for (const p of result.parameters) {\n                        if (p.type === 'JsdocTypeKeyValue' && (!allowNamedParameters.includes(p.key))) {\n                            throw new Error(`only allowed named parameters are ${allowNamedParameters.join(', ')} but got ${p.type}`);\n                        }\n                    }\n                }\n                if (parser.consume(':')) {\n                    result.returnType = parser.parseType(Precedence.PREFIX);\n                }\n                else {\n                    if (!allowNoReturnType) {\n                        throw new Error('function is missing return type');\n                    }\n                }\n                return result;\n            }\n        });\n    }\n\n    function createVariadicParslet({ allowPostfix, allowEnclosingBrackets }) {\n        return composeParslet({\n            name: 'variadicParslet',\n            accept: type => type === '...',\n            precedence: Precedence.PREFIX,\n            parsePrefix: parser => {\n                parser.consume('...');\n                const brackets = allowEnclosingBrackets && parser.consume('[');\n                try {\n                    const element = parser.parseType(Precedence.PREFIX);\n                    if (brackets && !parser.consume(']')) {\n                        throw new Error('Unterminated variadic type. Missing \\']\\'');\n                    }\n                    return {\n                        type: 'JsdocTypeVariadic',\n                        element: assertRootResult(element),\n                        meta: {\n                            position: 'prefix',\n                            squareBrackets: brackets\n                        }\n                    };\n                }\n                catch (e) {\n                    if (e instanceof NoParsletFoundError) {\n                        if (brackets) {\n                            throw new Error('Empty square brackets for variadic are not allowed.');\n                        }\n                        return {\n                            type: 'JsdocTypeVariadic',\n                            meta: {\n                                position: undefined,\n                                squareBrackets: false\n                            }\n                        };\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            },\n            parseInfix: allowPostfix\n                ? (parser, left) => {\n                    parser.consume('...');\n                    return {\n                        type: 'JsdocTypeVariadic',\n                        element: assertRootResult(left),\n                        meta: {\n                            position: 'suffix',\n                            squareBrackets: false\n                        }\n                    };\n                }\n                : undefined\n        });\n    }\n\n    const symbolParslet = composeParslet({\n        name: 'symbolParslet',\n        accept: type => type === '(',\n        precedence: Precedence.SYMBOL,\n        parseInfix: (parser, left) => {\n            if (left.type !== 'JsdocTypeName') {\n                throw new Error('Symbol expects a name on the left side. (Reacting on \\'(\\')');\n            }\n            parser.consume('(');\n            const result = {\n                type: 'JsdocTypeSymbol',\n                value: left.value\n            };\n            if (!parser.consume(')')) {\n                const next = parser.parseIntermediateType(Precedence.SYMBOL);\n                result.element = assertNumberOrVariadicNameResult(next);\n                if (!parser.consume(')')) {\n                    throw new Error('Symbol does not end after value');\n                }\n            }\n            return result;\n        }\n    });\n\n    const arrayBracketsParslet = composeParslet({\n        name: 'arrayBracketsParslet',\n        precedence: Precedence.ARRAY_BRACKETS,\n        accept: (type, next) => type === '[' && next === ']',\n        parseInfix: (parser, left) => {\n            parser.consume('[');\n            parser.consume(']');\n            return {\n                type: 'JsdocTypeGeneric',\n                left: {\n                    type: 'JsdocTypeName',\n                    value: 'Array'\n                },\n                elements: [\n                    assertRootResult(left)\n                ],\n                meta: {\n                    brackets: 'square',\n                    dot: false\n                }\n            };\n        }\n    });\n\n    function createObjectParslet({ objectFieldGrammar, allowKeyTypes }) {\n        return composeParslet({\n            name: 'objectParslet',\n            accept: type => type === '{',\n            parsePrefix: parser => {\n                parser.consume('{');\n                const result = {\n                    type: 'JsdocTypeObject',\n                    meta: {\n                        separator: 'comma'\n                    },\n                    elements: []\n                };\n                if (!parser.consume('}')) {\n                    let separator;\n                    const fieldParser = new Parser(objectFieldGrammar, parser.lexer, parser);\n                    while (true) {\n                        fieldParser.acceptLexerState(parser);\n                        let field = fieldParser.parseIntermediateType(Precedence.OBJECT);\n                        parser.acceptLexerState(fieldParser);\n                        if (field === undefined && allowKeyTypes) {\n                            field = parser.parseIntermediateType(Precedence.OBJECT);\n                        }\n                        let optional = false;\n                        if (field.type === 'JsdocTypeNullable') {\n                            optional = true;\n                            field = field.element;\n                        }\n                        if (field.type === 'JsdocTypeNumber' || field.type === 'JsdocTypeName' || field.type === 'JsdocTypeStringValue') {\n                            let quote;\n                            if (field.type === 'JsdocTypeStringValue') {\n                                quote = field.meta.quote;\n                            }\n                            result.elements.push({\n                                type: 'JsdocTypeObjectField',\n                                key: field.value.toString(),\n                                right: undefined,\n                                optional,\n                                readonly: false,\n                                meta: {\n                                    quote\n                                }\n                            });\n                        }\n                        else if (field.type === 'JsdocTypeObjectField' || field.type === 'JsdocTypeJsdocObjectField') {\n                            result.elements.push(field);\n                        }\n                        else {\n                            throw new UnexpectedTypeError(field);\n                        }\n                        if (parser.lexer.current.startOfLine) {\n                            separator = 'linebreak';\n                        }\n                        else if (parser.consume(',')) {\n                            separator = 'comma';\n                        }\n                        else if (parser.consume(';')) {\n                            separator = 'semicolon';\n                        }\n                        else {\n                            break;\n                        }\n                        const type = parser.lexer.current.type;\n                        if (type === '}') {\n                            break;\n                        }\n                    }\n                    result.meta.separator = separator !== null && separator !== void 0 ? separator : 'comma'; // TODO: use undefined here\n                    if (!parser.consume('}')) {\n                        throw new Error('Unterminated record type. Missing \\'}\\'');\n                    }\n                }\n                return result;\n            }\n        });\n    }\n\n    function createObjectFieldParslet({ allowSquaredProperties, allowKeyTypes, allowReadonly, allowOptional }) {\n        return composeParslet({\n            name: 'objectFieldParslet',\n            precedence: Precedence.KEY_VALUE,\n            accept: type => type === ':',\n            parseInfix: (parser, left) => {\n                var _a;\n                let optional = false;\n                let readonlyProperty = false;\n                if (allowOptional && left.type === 'JsdocTypeNullable') {\n                    optional = true;\n                    left = left.element;\n                }\n                if (allowReadonly && left.type === 'JsdocTypeReadonlyProperty') {\n                    readonlyProperty = true;\n                    left = left.element;\n                }\n                // object parslet uses a special grammar and for the value we want to switch back to the parent\n                const parentParser = (_a = parser.baseParser) !== null && _a !== void 0 ? _a : parser;\n                parentParser.acceptLexerState(parser);\n                if (left.type === 'JsdocTypeNumber' || left.type === 'JsdocTypeName' || left.type === 'JsdocTypeStringValue' ||\n                    isSquaredProperty(left)) {\n                    if (isSquaredProperty(left) && !allowSquaredProperties) {\n                        throw new UnexpectedTypeError(left);\n                    }\n                    parentParser.consume(':');\n                    let quote;\n                    if (left.type === 'JsdocTypeStringValue') {\n                        quote = left.meta.quote;\n                    }\n                    const right = parentParser.parseType(Precedence.KEY_VALUE);\n                    parser.acceptLexerState(parentParser);\n                    return {\n                        type: 'JsdocTypeObjectField',\n                        key: isSquaredProperty(left) ? left : left.value.toString(),\n                        right,\n                        optional,\n                        readonly: readonlyProperty,\n                        meta: {\n                            quote\n                        }\n                    };\n                }\n                else {\n                    if (!allowKeyTypes) {\n                        throw new UnexpectedTypeError(left);\n                    }\n                    parentParser.consume(':');\n                    const right = parentParser.parseType(Precedence.KEY_VALUE);\n                    parser.acceptLexerState(parentParser);\n                    return {\n                        type: 'JsdocTypeJsdocObjectField',\n                        left: assertRootResult(left),\n                        right\n                    };\n                }\n            }\n        });\n    }\n\n    function createKeyValueParslet({ allowOptional, allowVariadic }) {\n        return composeParslet({\n            name: 'keyValueParslet',\n            precedence: Precedence.KEY_VALUE,\n            accept: type => type === ':',\n            parseInfix: (parser, left) => {\n                let optional = false;\n                let variadic = false;\n                if (allowOptional && left.type === 'JsdocTypeNullable') {\n                    optional = true;\n                    left = left.element;\n                }\n                if (allowVariadic && left.type === 'JsdocTypeVariadic' && left.element !== undefined) {\n                    variadic = true;\n                    left = left.element;\n                }\n                if (left.type !== 'JsdocTypeName') {\n                    throw new UnexpectedTypeError(left);\n                }\n                parser.consume(':');\n                const right = parser.parseType(Precedence.KEY_VALUE);\n                return {\n                    type: 'JsdocTypeKeyValue',\n                    key: left.value,\n                    right,\n                    optional,\n                    variadic\n                };\n            }\n        });\n    }\n\n    const jsdocBaseGrammar = [\n        ...baseGrammar,\n        createFunctionParslet({\n            allowWithoutParenthesis: true,\n            allowNamedParameters: ['this', 'new'],\n            allowNoReturnType: true,\n            allowNewAsFunctionKeyword: false\n        }),\n        stringValueParslet,\n        createSpecialNamePathParslet({\n            allowedTypes: ['module', 'external', 'event'],\n            pathGrammar\n        }),\n        createVariadicParslet({\n            allowEnclosingBrackets: true,\n            allowPostfix: true\n        }),\n        createNameParslet({\n            allowedAdditionalTokens: ['keyof']\n        }),\n        symbolParslet,\n        arrayBracketsParslet,\n        createNamePathParslet({\n            allowSquareBracketsOnAnyType: false,\n            allowJsdocNamePaths: true,\n            pathGrammar\n        })\n    ];\n    const jsdocGrammar = [\n        ...jsdocBaseGrammar,\n        createObjectParslet({\n            // jsdoc syntax allows full types as keys, so we need to pull in the full grammar here\n            // we leave out the object type deliberately\n            objectFieldGrammar: [\n                createNameParslet({\n                    allowedAdditionalTokens: ['module', 'in']\n                }),\n                createObjectFieldParslet({\n                    allowSquaredProperties: false,\n                    allowKeyTypes: true,\n                    allowOptional: false,\n                    allowReadonly: false\n                }),\n                ...jsdocBaseGrammar\n            ],\n            allowKeyTypes: true\n        }),\n        createKeyValueParslet({\n            allowOptional: true,\n            allowVariadic: true\n        })\n    ];\n\n    const typeOfParslet = composeParslet({\n        name: 'typeOfParslet',\n        accept: type => type === 'typeof',\n        parsePrefix: parser => {\n            parser.consume('typeof');\n            return {\n                type: 'JsdocTypeTypeof',\n                element: assertRootResult(parser.parseType(Precedence.KEY_OF_TYPE_OF))\n            };\n        }\n    });\n\n    const objectFieldGrammar$1 = [\n        createNameParslet({\n            allowedAdditionalTokens: ['module', 'keyof', 'event', 'external', 'in']\n        }),\n        nullableParslet,\n        optionalParslet,\n        stringValueParslet,\n        numberParslet,\n        createObjectFieldParslet({\n            allowSquaredProperties: false,\n            allowKeyTypes: false,\n            allowOptional: false,\n            allowReadonly: false\n        })\n    ];\n    const closureGrammar = [\n        ...baseGrammar,\n        createObjectParslet({\n            allowKeyTypes: false,\n            objectFieldGrammar: objectFieldGrammar$1\n        }),\n        createNameParslet({\n            allowedAdditionalTokens: ['event', 'external', 'in']\n        }),\n        typeOfParslet,\n        createFunctionParslet({\n            allowWithoutParenthesis: false,\n            allowNamedParameters: ['this', 'new'],\n            allowNoReturnType: true,\n            allowNewAsFunctionKeyword: false\n        }),\n        createVariadicParslet({\n            allowEnclosingBrackets: false,\n            allowPostfix: false\n        }),\n        // additional name parslet is needed for some special cases\n        createNameParslet({\n            allowedAdditionalTokens: ['keyof']\n        }),\n        createSpecialNamePathParslet({\n            allowedTypes: ['module'],\n            pathGrammar\n        }),\n        createNamePathParslet({\n            allowSquareBracketsOnAnyType: false,\n            allowJsdocNamePaths: true,\n            pathGrammar\n        }),\n        createKeyValueParslet({\n            allowOptional: false,\n            allowVariadic: false\n        }),\n        symbolParslet\n    ];\n\n    const assertsParslet = composeParslet({\n        name: 'assertsParslet',\n        accept: type => type === 'asserts',\n        parsePrefix: (parser) => {\n            parser.consume('asserts');\n            const left = parser.parseIntermediateType(Precedence.SYMBOL);\n            if (left.type !== 'JsdocTypeName') {\n                throw new UnexpectedTypeError(left, 'A typescript asserts always has to have a name on the left side.');\n            }\n            parser.consume('is');\n            return {\n                type: 'JsdocTypeAsserts',\n                left,\n                right: assertRootResult(parser.parseIntermediateType(Precedence.INFIX))\n            };\n        }\n    });\n\n    function createTupleParslet({ allowQuestionMark }) {\n        return composeParslet({\n            name: 'tupleParslet',\n            accept: type => type === '[',\n            parsePrefix: parser => {\n                parser.consume('[');\n                const result = {\n                    type: 'JsdocTypeTuple',\n                    elements: []\n                };\n                if (parser.consume(']')) {\n                    return result;\n                }\n                const typeList = parser.parseIntermediateType(Precedence.ALL);\n                if (typeList.type === 'JsdocTypeParameterList') {\n                    if (typeList.elements[0].type === 'JsdocTypeKeyValue') {\n                        result.elements = typeList.elements.map(assertPlainKeyValueResult);\n                    }\n                    else {\n                        result.elements = typeList.elements.map(assertRootResult);\n                    }\n                }\n                else {\n                    if (typeList.type === 'JsdocTypeKeyValue') {\n                        result.elements = [assertPlainKeyValueResult(typeList)];\n                    }\n                    else {\n                        result.elements = [assertRootResult(typeList)];\n                    }\n                }\n                if (!parser.consume(']')) {\n                    throw new Error('Unterminated \\'[\\'');\n                }\n                if (!allowQuestionMark && result.elements.some((e) => e.type === 'JsdocTypeUnknown')) {\n                    throw new Error('Question mark in tuple not allowed');\n                }\n                return result;\n            }\n        });\n    }\n\n    const keyOfParslet = composeParslet({\n        name: 'keyOfParslet',\n        accept: type => type === 'keyof',\n        parsePrefix: parser => {\n            parser.consume('keyof');\n            return {\n                type: 'JsdocTypeKeyof',\n                element: assertRootResult(parser.parseType(Precedence.KEY_OF_TYPE_OF))\n            };\n        }\n    });\n\n    const importParslet = composeParslet({\n        name: 'importParslet',\n        accept: type => type === 'import',\n        parsePrefix: parser => {\n            parser.consume('import');\n            if (!parser.consume('(')) {\n                throw new Error('Missing parenthesis after import keyword');\n            }\n            const path = parser.parseType(Precedence.PREFIX);\n            if (path.type !== 'JsdocTypeStringValue') {\n                throw new Error('Only string values are allowed as paths for imports');\n            }\n            if (!parser.consume(')')) {\n                throw new Error('Missing closing parenthesis after import keyword');\n            }\n            return {\n                type: 'JsdocTypeImport',\n                element: path\n            };\n        }\n    });\n\n    const readonlyPropertyParslet = composeParslet({\n        name: 'readonlyPropertyParslet',\n        accept: type => type === 'readonly',\n        parsePrefix: parser => {\n            parser.consume('readonly');\n            return {\n                type: 'JsdocTypeReadonlyProperty',\n                element: parser.parseType(Precedence.KEY_VALUE)\n            };\n        }\n    });\n\n    const arrowFunctionParslet = composeParslet({\n        name: 'arrowFunctionParslet',\n        precedence: Precedence.ARROW,\n        accept: type => type === '=>',\n        parseInfix: (parser, left) => {\n            parser.consume('=>');\n            return {\n                type: 'JsdocTypeFunction',\n                parameters: getParameters(left).map(assertPlainKeyValueOrNameResult),\n                arrow: true,\n                constructor: false,\n                parenthesis: true,\n                returnType: parser.parseType(Precedence.OBJECT)\n            };\n        }\n    });\n\n    const intersectionParslet = composeParslet({\n        name: 'intersectionParslet',\n        accept: type => type === '&',\n        precedence: Precedence.INTERSECTION,\n        parseInfix: (parser, left) => {\n            parser.consume('&');\n            const elements = [];\n            do {\n                elements.push(parser.parseType(Precedence.INTERSECTION));\n            } while (parser.consume('&'));\n            return {\n                type: 'JsdocTypeIntersection',\n                elements: [assertRootResult(left), ...elements]\n            };\n        }\n    });\n\n    const predicateParslet = composeParslet({\n        name: 'predicateParslet',\n        precedence: Precedence.INFIX,\n        accept: type => type === 'is',\n        parseInfix: (parser, left) => {\n            if (left.type !== 'JsdocTypeName') {\n                throw new UnexpectedTypeError(left, 'A typescript predicate always has to have a name on the left side.');\n            }\n            parser.consume('is');\n            return {\n                type: 'JsdocTypePredicate',\n                left,\n                right: assertRootResult(parser.parseIntermediateType(Precedence.INFIX))\n            };\n        }\n    });\n\n    const objectSquaredPropertyParslet = composeParslet({\n        name: 'objectSquareBracketPropertyParslet',\n        accept: type => type === '[',\n        parsePrefix: parser => {\n            if (parser.baseParser === undefined) {\n                throw new Error('Only allowed inside object grammar');\n            }\n            parser.consume('[');\n            const key = parser.lexer.current.text;\n            parser.consume('Identifier');\n            let result;\n            if (parser.consume(':')) {\n                const parentParser = parser.baseParser;\n                parentParser.acceptLexerState(parser);\n                result = {\n                    type: 'JsdocTypeIndexSignature',\n                    key,\n                    right: parentParser.parseType(Precedence.INDEX_BRACKETS)\n                };\n                parser.acceptLexerState(parentParser);\n            }\n            else if (parser.consume('in')) {\n                const parentParser = parser.baseParser;\n                parentParser.acceptLexerState(parser);\n                result = {\n                    type: 'JsdocTypeMappedType',\n                    key,\n                    right: parentParser.parseType(Precedence.ARRAY_BRACKETS)\n                };\n                parser.acceptLexerState(parentParser);\n            }\n            else {\n                throw new Error('Missing \\':\\' or \\'in\\' inside square bracketed property.');\n            }\n            if (!parser.consume(']')) {\n                throw new Error('Unterminated square brackets');\n            }\n            return result;\n        }\n    });\n\n    const objectFieldGrammar = [\n        readonlyPropertyParslet,\n        createNameParslet({\n            allowedAdditionalTokens: ['module', 'event', 'keyof', 'event', 'external', 'in']\n        }),\n        nullableParslet,\n        optionalParslet,\n        stringValueParslet,\n        numberParslet,\n        createObjectFieldParslet({\n            allowSquaredProperties: true,\n            allowKeyTypes: false,\n            allowOptional: true,\n            allowReadonly: true\n        }),\n        objectSquaredPropertyParslet\n    ];\n    const typescriptGrammar = [\n        ...baseGrammar,\n        createObjectParslet({\n            allowKeyTypes: false,\n            objectFieldGrammar\n        }),\n        typeOfParslet,\n        keyOfParslet,\n        importParslet,\n        stringValueParslet,\n        createFunctionParslet({\n            allowWithoutParenthesis: true,\n            allowNoReturnType: false,\n            allowNamedParameters: ['this', 'new', 'args'],\n            allowNewAsFunctionKeyword: true\n        }),\n        createTupleParslet({\n            allowQuestionMark: false\n        }),\n        createVariadicParslet({\n            allowEnclosingBrackets: false,\n            allowPostfix: false\n        }),\n        assertsParslet,\n        createNameParslet({\n            allowedAdditionalTokens: ['event', 'external', 'in']\n        }),\n        createSpecialNamePathParslet({\n            allowedTypes: ['module'],\n            pathGrammar\n        }),\n        arrayBracketsParslet,\n        arrowFunctionParslet,\n        createNamePathParslet({\n            allowSquareBracketsOnAnyType: true,\n            allowJsdocNamePaths: false,\n            pathGrammar\n        }),\n        intersectionParslet,\n        predicateParslet,\n        createKeyValueParslet({\n            allowVariadic: true,\n            allowOptional: true\n        })\n    ];\n\n    /**\n     * This function parses the given expression in the given mode and produces a {@link RootResult}.\n     * @param expression\n     * @param mode\n     */\n    function parse(expression, mode) {\n        switch (mode) {\n            case 'closure':\n                return (new Parser(closureGrammar, expression)).parse();\n            case 'jsdoc':\n                return (new Parser(jsdocGrammar, expression)).parse();\n            case 'typescript':\n                return (new Parser(typescriptGrammar, expression)).parse();\n        }\n    }\n    /**\n     * This function tries to parse the given expression in multiple modes and returns the first successful\n     * {@link RootResult}. By default it tries `'typescript'`, `'closure'` and `'jsdoc'` in this order. If\n     * no mode was successful it throws the error that was produced by the last parsing attempt.\n     * @param expression\n     * @param modes\n     */\n    function tryParse(expression, modes = ['typescript', 'closure', 'jsdoc']) {\n        let error;\n        for (const mode of modes) {\n            try {\n                return parse(expression, mode);\n            }\n            catch (e) {\n                error = e;\n            }\n        }\n        throw error;\n    }\n\n    function transform(rules, parseResult) {\n        const rule = rules[parseResult.type];\n        if (rule === undefined) {\n            throw new Error(`In this set of transform rules exists no rule for type ${parseResult.type}.`);\n        }\n        return rule(parseResult, aParseResult => transform(rules, aParseResult));\n    }\n    function notAvailableTransform(parseResult) {\n        throw new Error('This transform is not available. Are you trying the correct parsing mode?');\n    }\n    function extractSpecialParams(source) {\n        const result = {\n            params: []\n        };\n        for (const param of source.parameters) {\n            if (param.type === 'JsdocTypeKeyValue') {\n                if (param.key === 'this') {\n                    result.this = param.right;\n                }\n                else if (param.key === 'new') {\n                    result.new = param.right;\n                }\n                else {\n                    result.params.push(param);\n                }\n            }\n            else {\n                result.params.push(param);\n            }\n        }\n        return result;\n    }\n\n    function applyPosition(position, target, value) {\n        return position === 'prefix' ? value + target : target + value;\n    }\n    function quote(value, quote) {\n        switch (quote) {\n            case 'double':\n                return `\"${value}\"`;\n            case 'single':\n                return `'${value}'`;\n            case undefined:\n                return value;\n        }\n    }\n    function stringifyRules() {\n        return {\n            JsdocTypeParenthesis: (result, transform) => `(${result.element !== undefined ? transform(result.element) : ''})`,\n            JsdocTypeKeyof: (result, transform) => `keyof ${transform(result.element)}`,\n            JsdocTypeFunction: (result, transform) => {\n                if (!result.arrow) {\n                    let stringified = result.constructor ? 'new' : 'function';\n                    if (!result.parenthesis) {\n                        return stringified;\n                    }\n                    stringified += `(${result.parameters.map(transform).join(', ')})`;\n                    if (result.returnType !== undefined) {\n                        stringified += `: ${transform(result.returnType)}`;\n                    }\n                    return stringified;\n                }\n                else {\n                    if (result.returnType === undefined) {\n                        throw new Error('Arrow function needs a return type.');\n                    }\n                    let stringified = `(${result.parameters.map(transform).join(', ')}) => ${transform(result.returnType)}`;\n                    if (result.constructor) {\n                        stringified = 'new ' + stringified;\n                    }\n                    return stringified;\n                }\n            },\n            JsdocTypeName: result => result.value,\n            JsdocTypeTuple: (result, transform) => `[${result.elements.map(transform).join(', ')}]`,\n            JsdocTypeVariadic: (result, transform) => result.meta.position === undefined\n                ? '...'\n                : applyPosition(result.meta.position, transform(result.element), '...'),\n            JsdocTypeNamePath: (result, transform) => {\n                const left = transform(result.left);\n                const right = transform(result.right);\n                switch (result.pathType) {\n                    case 'inner':\n                        return `${left}~${right}`;\n                    case 'instance':\n                        return `${left}#${right}`;\n                    case 'property':\n                        return `${left}.${right}`;\n                    case 'property-brackets':\n                        return `${left}[${right}]`;\n                }\n            },\n            JsdocTypeStringValue: result => quote(result.value, result.meta.quote),\n            JsdocTypeAny: () => '*',\n            JsdocTypeGeneric: (result, transform) => {\n                if (result.meta.brackets === 'square') {\n                    const element = result.elements[0];\n                    const transformed = transform(element);\n                    if (element.type === 'JsdocTypeUnion' || element.type === 'JsdocTypeIntersection') {\n                        return `(${transformed})[]`;\n                    }\n                    else {\n                        return `${transformed}[]`;\n                    }\n                }\n                else {\n                    return `${transform(result.left)}${result.meta.dot ? '.' : ''}<${result.elements.map(transform).join(', ')}>`;\n                }\n            },\n            JsdocTypeImport: (result, transform) => `import(${transform(result.element)})`,\n            JsdocTypeObjectField: (result, transform) => {\n                let text = '';\n                if (result.readonly) {\n                    text += 'readonly ';\n                }\n                if (typeof result.key === 'string') {\n                    text += quote(result.key, result.meta.quote);\n                }\n                else {\n                    text += transform(result.key);\n                }\n                if (result.optional) {\n                    text += '?';\n                }\n                if (result.right === undefined) {\n                    return text;\n                }\n                else {\n                    return text + `: ${transform(result.right)}`;\n                }\n            },\n            JsdocTypeJsdocObjectField: (result, transform) => {\n                return `${transform(result.left)}: ${transform(result.right)}`;\n            },\n            JsdocTypeKeyValue: (result, transform) => {\n                let text = result.key;\n                if (result.optional) {\n                    text += '?';\n                }\n                if (result.variadic) {\n                    text = '...' + text;\n                }\n                if (result.right === undefined) {\n                    return text;\n                }\n                else {\n                    return text + `: ${transform(result.right)}`;\n                }\n            },\n            JsdocTypeSpecialNamePath: result => `${result.specialType}:${quote(result.value, result.meta.quote)}`,\n            JsdocTypeNotNullable: (result, transform) => applyPosition(result.meta.position, transform(result.element), '!'),\n            JsdocTypeNull: () => 'null',\n            JsdocTypeNullable: (result, transform) => applyPosition(result.meta.position, transform(result.element), '?'),\n            JsdocTypeNumber: result => result.value.toString(),\n            JsdocTypeObject: (result, transform) => `{${result.elements.map(transform).join((result.meta.separator === 'comma' ? ',' : ';') + ' ')}}`,\n            JsdocTypeOptional: (result, transform) => applyPosition(result.meta.position, transform(result.element), '='),\n            JsdocTypeSymbol: (result, transform) => `${result.value}(${result.element !== undefined ? transform(result.element) : ''})`,\n            JsdocTypeTypeof: (result, transform) => `typeof ${transform(result.element)}`,\n            JsdocTypeUndefined: () => 'undefined',\n            JsdocTypeUnion: (result, transform) => result.elements.map(transform).join(' | '),\n            JsdocTypeUnknown: () => '?',\n            JsdocTypeIntersection: (result, transform) => result.elements.map(transform).join(' & '),\n            JsdocTypeProperty: result => quote(result.value, result.meta.quote),\n            JsdocTypePredicate: (result, transform) => `${transform(result.left)} is ${transform(result.right)}`,\n            JsdocTypeIndexSignature: (result, transform) => `[${result.key}: ${transform(result.right)}]`,\n            JsdocTypeMappedType: (result, transform) => `[${result.key} in ${transform(result.right)}]`,\n            JsdocTypeAsserts: (result, transform) => `asserts ${transform(result.left)} is ${transform(result.right)}`\n        };\n    }\n    const storedStringifyRules = stringifyRules();\n    function stringify(result) {\n        return transform(storedStringifyRules, result);\n    }\n\n    const reservedWords = [\n        'null',\n        'true',\n        'false',\n        'break',\n        'case',\n        'catch',\n        'class',\n        'const',\n        'continue',\n        'debugger',\n        'default',\n        'delete',\n        'do',\n        'else',\n        'export',\n        'extends',\n        'finally',\n        'for',\n        'function',\n        'if',\n        'import',\n        'in',\n        'instanceof',\n        'new',\n        'return',\n        'super',\n        'switch',\n        'this',\n        'throw',\n        'try',\n        'typeof',\n        'var',\n        'void',\n        'while',\n        'with',\n        'yield'\n    ];\n    function makeName(value) {\n        const result = {\n            type: 'NameExpression',\n            name: value\n        };\n        if (reservedWords.includes(value)) {\n            result.reservedWord = true;\n        }\n        return result;\n    }\n    const catharsisTransformRules = {\n        JsdocTypeOptional: (result, transform) => {\n            const transformed = transform(result.element);\n            transformed.optional = true;\n            return transformed;\n        },\n        JsdocTypeNullable: (result, transform) => {\n            const transformed = transform(result.element);\n            transformed.nullable = true;\n            return transformed;\n        },\n        JsdocTypeNotNullable: (result, transform) => {\n            const transformed = transform(result.element);\n            transformed.nullable = false;\n            return transformed;\n        },\n        JsdocTypeVariadic: (result, transform) => {\n            if (result.element === undefined) {\n                throw new Error('dots without value are not allowed in catharsis mode');\n            }\n            const transformed = transform(result.element);\n            transformed.repeatable = true;\n            return transformed;\n        },\n        JsdocTypeAny: () => ({\n            type: 'AllLiteral'\n        }),\n        JsdocTypeNull: () => ({\n            type: 'NullLiteral'\n        }),\n        JsdocTypeStringValue: result => makeName(quote(result.value, result.meta.quote)),\n        JsdocTypeUndefined: () => ({\n            type: 'UndefinedLiteral'\n        }),\n        JsdocTypeUnknown: () => ({\n            type: 'UnknownLiteral'\n        }),\n        JsdocTypeFunction: (result, transform) => {\n            const params = extractSpecialParams(result);\n            const transformed = {\n                type: 'FunctionType',\n                params: params.params.map(transform)\n            };\n            if (params.this !== undefined) {\n                transformed.this = transform(params.this);\n            }\n            if (params.new !== undefined) {\n                transformed.new = transform(params.new);\n            }\n            if (result.returnType !== undefined) {\n                transformed.result = transform(result.returnType);\n            }\n            return transformed;\n        },\n        JsdocTypeGeneric: (result, transform) => ({\n            type: 'TypeApplication',\n            applications: result.elements.map(o => transform(o)),\n            expression: transform(result.left)\n        }),\n        JsdocTypeSpecialNamePath: result => makeName(result.specialType + ':' + quote(result.value, result.meta.quote)),\n        JsdocTypeName: result => {\n            if (result.value !== 'function') {\n                return makeName(result.value);\n            }\n            else {\n                return {\n                    type: 'FunctionType',\n                    params: []\n                };\n            }\n        },\n        JsdocTypeNumber: result => makeName(result.value.toString()),\n        JsdocTypeObject: (result, transform) => {\n            const transformed = {\n                type: 'RecordType',\n                fields: []\n            };\n            for (const field of result.elements) {\n                if (field.type !== 'JsdocTypeObjectField' && field.type !== 'JsdocTypeJsdocObjectField') {\n                    transformed.fields.push({\n                        type: 'FieldType',\n                        key: transform(field),\n                        value: undefined\n                    });\n                }\n                else {\n                    transformed.fields.push(transform(field));\n                }\n            }\n            return transformed;\n        },\n        JsdocTypeObjectField: (result, transform) => {\n            if (typeof result.key !== 'string') {\n                throw new Error('Index signatures and mapped types are not supported');\n            }\n            return {\n                type: 'FieldType',\n                key: makeName(quote(result.key, result.meta.quote)),\n                value: result.right === undefined ? undefined : transform(result.right)\n            };\n        },\n        JsdocTypeJsdocObjectField: (result, transform) => ({\n            type: 'FieldType',\n            key: transform(result.left),\n            value: transform(result.right)\n        }),\n        JsdocTypeUnion: (result, transform) => ({\n            type: 'TypeUnion',\n            elements: result.elements.map(e => transform(e))\n        }),\n        JsdocTypeKeyValue: (result, transform) => {\n            return {\n                type: 'FieldType',\n                key: makeName(result.key),\n                value: result.right === undefined ? undefined : transform(result.right)\n            };\n        },\n        JsdocTypeNamePath: (result, transform) => {\n            const leftResult = transform(result.left);\n            let rightValue;\n            if (result.right.type === 'JsdocTypeSpecialNamePath') {\n                rightValue = transform(result.right).name;\n            }\n            else {\n                rightValue = quote(result.right.value, result.right.meta.quote);\n            }\n            const joiner = result.pathType === 'inner' ? '~' : result.pathType === 'instance' ? '#' : '.';\n            return makeName(`${leftResult.name}${joiner}${rightValue}`);\n        },\n        JsdocTypeSymbol: result => {\n            let value = '';\n            let element = result.element;\n            let trailingDots = false;\n            if ((element === null || element === void 0 ? void 0 : element.type) === 'JsdocTypeVariadic') {\n                if (element.meta.position === 'prefix') {\n                    value = '...';\n                }\n                else {\n                    trailingDots = true;\n                }\n                element = element.element;\n            }\n            if ((element === null || element === void 0 ? void 0 : element.type) === 'JsdocTypeName') {\n                value += element.value;\n            }\n            else if ((element === null || element === void 0 ? void 0 : element.type) === 'JsdocTypeNumber') {\n                value += element.value.toString();\n            }\n            if (trailingDots) {\n                value += '...';\n            }\n            return makeName(`${result.value}(${value})`);\n        },\n        JsdocTypeParenthesis: (result, transform) => transform(assertRootResult(result.element)),\n        JsdocTypeMappedType: notAvailableTransform,\n        JsdocTypeIndexSignature: notAvailableTransform,\n        JsdocTypeImport: notAvailableTransform,\n        JsdocTypeKeyof: notAvailableTransform,\n        JsdocTypeTuple: notAvailableTransform,\n        JsdocTypeTypeof: notAvailableTransform,\n        JsdocTypeIntersection: notAvailableTransform,\n        JsdocTypeProperty: notAvailableTransform,\n        JsdocTypePredicate: notAvailableTransform,\n        JsdocTypeAsserts: notAvailableTransform\n    };\n    function catharsisTransform(result) {\n        return transform(catharsisTransformRules, result);\n    }\n\n    function getQuoteStyle(quote) {\n        switch (quote) {\n            case undefined:\n                return 'none';\n            case 'single':\n                return 'single';\n            case 'double':\n                return 'double';\n        }\n    }\n    function getMemberType(type) {\n        switch (type) {\n            case 'inner':\n                return 'INNER_MEMBER';\n            case 'instance':\n                return 'INSTANCE_MEMBER';\n            case 'property':\n                return 'MEMBER';\n            case 'property-brackets':\n                return 'MEMBER';\n        }\n    }\n    function nestResults(type, results) {\n        if (results.length === 2) {\n            return {\n                type,\n                left: results[0],\n                right: results[1]\n            };\n        }\n        else {\n            return {\n                type,\n                left: results[0],\n                right: nestResults(type, results.slice(1))\n            };\n        }\n    }\n    const jtpRules = {\n        JsdocTypeOptional: (result, transform) => ({\n            type: 'OPTIONAL',\n            value: transform(result.element),\n            meta: {\n                syntax: result.meta.position === 'prefix' ? 'PREFIX_EQUAL_SIGN' : 'SUFFIX_EQUALS_SIGN'\n            }\n        }),\n        JsdocTypeNullable: (result, transform) => ({\n            type: 'NULLABLE',\n            value: transform(result.element),\n            meta: {\n                syntax: result.meta.position === 'prefix' ? 'PREFIX_QUESTION_MARK' : 'SUFFIX_QUESTION_MARK'\n            }\n        }),\n        JsdocTypeNotNullable: (result, transform) => ({\n            type: 'NOT_NULLABLE',\n            value: transform(result.element),\n            meta: {\n                syntax: result.meta.position === 'prefix' ? 'PREFIX_BANG' : 'SUFFIX_BANG'\n            }\n        }),\n        JsdocTypeVariadic: (result, transform) => {\n            const transformed = {\n                type: 'VARIADIC',\n                meta: {\n                    syntax: result.meta.position === 'prefix'\n                        ? 'PREFIX_DOTS'\n                        : result.meta.position === 'suffix' ? 'SUFFIX_DOTS' : 'ONLY_DOTS'\n                }\n            };\n            if (result.element !== undefined) {\n                transformed.value = transform(result.element);\n            }\n            return transformed;\n        },\n        JsdocTypeName: result => ({\n            type: 'NAME',\n            name: result.value\n        }),\n        JsdocTypeTypeof: (result, transform) => ({\n            type: 'TYPE_QUERY',\n            name: transform(result.element)\n        }),\n        JsdocTypeTuple: (result, transform) => ({\n            type: 'TUPLE',\n            entries: result.elements.map(transform)\n        }),\n        JsdocTypeKeyof: (result, transform) => ({\n            type: 'KEY_QUERY',\n            value: transform(result.element)\n        }),\n        JsdocTypeImport: result => ({\n            type: 'IMPORT',\n            path: {\n                type: 'STRING_VALUE',\n                quoteStyle: getQuoteStyle(result.element.meta.quote),\n                string: result.element.value\n            }\n        }),\n        JsdocTypeUndefined: () => ({\n            type: 'NAME',\n            name: 'undefined'\n        }),\n        JsdocTypeAny: () => ({\n            type: 'ANY'\n        }),\n        JsdocTypeFunction: (result, transform) => {\n            const specialParams = extractSpecialParams(result);\n            const transformed = {\n                type: result.arrow ? 'ARROW' : 'FUNCTION',\n                params: specialParams.params.map(param => {\n                    if (param.type === 'JsdocTypeKeyValue') {\n                        if (param.right === undefined) {\n                            throw new Error('Function parameter without \\':\\' is not expected to be \\'KEY_VALUE\\'');\n                        }\n                        return {\n                            type: 'NAMED_PARAMETER',\n                            name: param.key,\n                            typeName: transform(param.right)\n                        };\n                    }\n                    else {\n                        return transform(param);\n                    }\n                }),\n                new: null,\n                returns: null\n            };\n            if (specialParams.this !== undefined) {\n                transformed.this = transform(specialParams.this);\n            }\n            else if (!result.arrow) {\n                transformed.this = null;\n            }\n            if (specialParams.new !== undefined) {\n                transformed.new = transform(specialParams.new);\n            }\n            if (result.returnType !== undefined) {\n                transformed.returns = transform(result.returnType);\n            }\n            return transformed;\n        },\n        JsdocTypeGeneric: (result, transform) => {\n            const transformed = {\n                type: 'GENERIC',\n                subject: transform(result.left),\n                objects: result.elements.map(transform),\n                meta: {\n                    syntax: result.meta.brackets === 'square' ? 'SQUARE_BRACKET' : result.meta.dot ? 'ANGLE_BRACKET_WITH_DOT' : 'ANGLE_BRACKET'\n                }\n            };\n            if (result.meta.brackets === 'square' && result.elements[0].type === 'JsdocTypeFunction' && !result.elements[0].parenthesis) {\n                transformed.objects[0] = {\n                    type: 'NAME',\n                    name: 'function'\n                };\n            }\n            return transformed;\n        },\n        JsdocTypeObjectField: (result, transform) => {\n            if (typeof result.key !== 'string') {\n                throw new Error('Index signatures and mapped types are not supported');\n            }\n            if (result.right === undefined) {\n                return {\n                    type: 'RECORD_ENTRY',\n                    key: result.key,\n                    quoteStyle: getQuoteStyle(result.meta.quote),\n                    value: null,\n                    readonly: false\n                };\n            }\n            let right = transform(result.right);\n            if (result.optional) {\n                right = {\n                    type: 'OPTIONAL',\n                    value: right,\n                    meta: {\n                        syntax: 'SUFFIX_KEY_QUESTION_MARK'\n                    }\n                };\n            }\n            return {\n                type: 'RECORD_ENTRY',\n                key: result.key.toString(),\n                quoteStyle: getQuoteStyle(result.meta.quote),\n                value: right,\n                readonly: false\n            };\n        },\n        JsdocTypeJsdocObjectField: () => {\n            throw new Error('Keys may not be typed in jsdoctypeparser.');\n        },\n        JsdocTypeKeyValue: (result, transform) => {\n            if (result.right === undefined) {\n                return {\n                    type: 'RECORD_ENTRY',\n                    key: result.key,\n                    quoteStyle: 'none',\n                    value: null,\n                    readonly: false\n                };\n            }\n            let right = transform(result.right);\n            if (result.optional) {\n                right = {\n                    type: 'OPTIONAL',\n                    value: right,\n                    meta: {\n                        syntax: 'SUFFIX_KEY_QUESTION_MARK'\n                    }\n                };\n            }\n            return {\n                type: 'RECORD_ENTRY',\n                key: result.key,\n                quoteStyle: 'none',\n                value: right,\n                readonly: false\n            };\n        },\n        JsdocTypeObject: (result, transform) => {\n            const entries = [];\n            for (const field of result.elements) {\n                if (field.type === 'JsdocTypeObjectField' || field.type === 'JsdocTypeJsdocObjectField') {\n                    entries.push(transform(field));\n                }\n            }\n            return {\n                type: 'RECORD',\n                entries\n            };\n        },\n        JsdocTypeSpecialNamePath: result => {\n            if (result.specialType !== 'module') {\n                throw new Error(`jsdoctypeparser does not support type ${result.specialType} at this point.`);\n            }\n            return {\n                type: 'MODULE',\n                value: {\n                    type: 'FILE_PATH',\n                    quoteStyle: getQuoteStyle(result.meta.quote),\n                    path: result.value\n                }\n            };\n        },\n        JsdocTypeNamePath: (result, transform) => {\n            let hasEventPrefix = false;\n            let name;\n            let quoteStyle;\n            if (result.right.type === 'JsdocTypeSpecialNamePath' && result.right.specialType === 'event') {\n                hasEventPrefix = true;\n                name = result.right.value;\n                quoteStyle = getQuoteStyle(result.right.meta.quote);\n            }\n            else {\n                name = result.right.value;\n                quoteStyle = getQuoteStyle(result.right.meta.quote);\n            }\n            const transformed = {\n                type: getMemberType(result.pathType),\n                owner: transform(result.left),\n                name,\n                quoteStyle,\n                hasEventPrefix\n            };\n            if (transformed.owner.type === 'MODULE') {\n                const tModule = transformed.owner;\n                transformed.owner = transformed.owner.value;\n                tModule.value = transformed;\n                return tModule;\n            }\n            else {\n                return transformed;\n            }\n        },\n        JsdocTypeUnion: (result, transform) => nestResults('UNION', result.elements.map(transform)),\n        JsdocTypeParenthesis: (result, transform) => ({\n            type: 'PARENTHESIS',\n            value: transform(assertRootResult(result.element))\n        }),\n        JsdocTypeNull: () => ({\n            type: 'NAME',\n            name: 'null'\n        }),\n        JsdocTypeUnknown: () => ({\n            type: 'UNKNOWN'\n        }),\n        JsdocTypeStringValue: result => ({\n            type: 'STRING_VALUE',\n            quoteStyle: getQuoteStyle(result.meta.quote),\n            string: result.value\n        }),\n        JsdocTypeIntersection: (result, transform) => nestResults('INTERSECTION', result.elements.map(transform)),\n        JsdocTypeNumber: result => ({\n            type: 'NUMBER_VALUE',\n            number: result.value.toString()\n        }),\n        JsdocTypeSymbol: notAvailableTransform,\n        JsdocTypeProperty: notAvailableTransform,\n        JsdocTypePredicate: notAvailableTransform,\n        JsdocTypeMappedType: notAvailableTransform,\n        JsdocTypeIndexSignature: notAvailableTransform,\n        JsdocTypeAsserts: notAvailableTransform\n    };\n    function jtpTransform(result) {\n        return transform(jtpRules, result);\n    }\n\n    function identityTransformRules() {\n        return {\n            JsdocTypeIntersection: (result, transform) => ({\n                type: 'JsdocTypeIntersection',\n                elements: result.elements.map(transform)\n            }),\n            JsdocTypeGeneric: (result, transform) => ({\n                type: 'JsdocTypeGeneric',\n                left: transform(result.left),\n                elements: result.elements.map(transform),\n                meta: {\n                    dot: result.meta.dot,\n                    brackets: result.meta.brackets\n                }\n            }),\n            JsdocTypeNullable: result => result,\n            JsdocTypeUnion: (result, transform) => ({\n                type: 'JsdocTypeUnion',\n                elements: result.elements.map(transform)\n            }),\n            JsdocTypeUnknown: result => result,\n            JsdocTypeUndefined: result => result,\n            JsdocTypeTypeof: (result, transform) => ({\n                type: 'JsdocTypeTypeof',\n                element: transform(result.element)\n            }),\n            JsdocTypeSymbol: (result, transform) => {\n                const transformed = {\n                    type: 'JsdocTypeSymbol',\n                    value: result.value\n                };\n                if (result.element !== undefined) {\n                    transformed.element = transform(result.element);\n                }\n                return transformed;\n            },\n            JsdocTypeOptional: (result, transform) => ({\n                type: 'JsdocTypeOptional',\n                element: transform(result.element),\n                meta: {\n                    position: result.meta.position\n                }\n            }),\n            JsdocTypeObject: (result, transform) => ({\n                type: 'JsdocTypeObject',\n                meta: {\n                    separator: 'comma'\n                },\n                elements: result.elements.map(transform)\n            }),\n            JsdocTypeNumber: result => result,\n            JsdocTypeNull: result => result,\n            JsdocTypeNotNullable: (result, transform) => ({\n                type: 'JsdocTypeNotNullable',\n                element: transform(result.element),\n                meta: {\n                    position: result.meta.position\n                }\n            }),\n            JsdocTypeSpecialNamePath: result => result,\n            JsdocTypeObjectField: (result, transform) => ({\n                type: 'JsdocTypeObjectField',\n                key: result.key,\n                right: result.right === undefined ? undefined : transform(result.right),\n                optional: result.optional,\n                readonly: result.readonly,\n                meta: result.meta\n            }),\n            JsdocTypeJsdocObjectField: (result, transform) => ({\n                type: 'JsdocTypeJsdocObjectField',\n                left: transform(result.left),\n                right: transform(result.right)\n            }),\n            JsdocTypeKeyValue: (result, transform) => {\n                return {\n                    type: 'JsdocTypeKeyValue',\n                    key: result.key,\n                    right: result.right === undefined ? undefined : transform(result.right),\n                    optional: result.optional,\n                    variadic: result.variadic\n                };\n            },\n            JsdocTypeImport: (result, transform) => ({\n                type: 'JsdocTypeImport',\n                element: transform(result.element)\n            }),\n            JsdocTypeAny: result => result,\n            JsdocTypeStringValue: result => result,\n            JsdocTypeNamePath: result => result,\n            JsdocTypeVariadic: (result, transform) => {\n                const transformed = {\n                    type: 'JsdocTypeVariadic',\n                    meta: {\n                        position: result.meta.position,\n                        squareBrackets: result.meta.squareBrackets\n                    }\n                };\n                if (result.element !== undefined) {\n                    transformed.element = transform(result.element);\n                }\n                return transformed;\n            },\n            JsdocTypeTuple: (result, transform) => ({\n                type: 'JsdocTypeTuple',\n                elements: result.elements.map(transform)\n            }),\n            JsdocTypeName: result => result,\n            JsdocTypeFunction: (result, transform) => {\n                const transformed = {\n                    type: 'JsdocTypeFunction',\n                    arrow: result.arrow,\n                    parameters: result.parameters.map(transform),\n                    constructor: result.constructor,\n                    parenthesis: result.parenthesis\n                };\n                if (result.returnType !== undefined) {\n                    transformed.returnType = transform(result.returnType);\n                }\n                return transformed;\n            },\n            JsdocTypeKeyof: (result, transform) => ({\n                type: 'JsdocTypeKeyof',\n                element: transform(result.element)\n            }),\n            JsdocTypeParenthesis: (result, transform) => ({\n                type: 'JsdocTypeParenthesis',\n                element: transform(result.element)\n            }),\n            JsdocTypeProperty: result => result,\n            JsdocTypePredicate: (result, transform) => ({\n                type: 'JsdocTypePredicate',\n                left: transform(result.left),\n                right: transform(result.right)\n            }),\n            JsdocTypeIndexSignature: (result, transform) => ({\n                type: 'JsdocTypeIndexSignature',\n                key: result.key,\n                right: transform(result.right)\n            }),\n            JsdocTypeMappedType: (result, transform) => ({\n                type: 'JsdocTypeMappedType',\n                key: result.key,\n                right: transform(result.right)\n            }),\n            JsdocTypeAsserts: (result, transform) => ({\n                type: 'JsdocTypeAsserts',\n                left: transform(result.left),\n                right: transform(result.right)\n            })\n        };\n    }\n\n    const visitorKeys = {\n        JsdocTypeAny: [],\n        JsdocTypeFunction: ['parameters', 'returnType'],\n        JsdocTypeGeneric: ['left', 'elements'],\n        JsdocTypeImport: [],\n        JsdocTypeIndexSignature: ['right'],\n        JsdocTypeIntersection: ['elements'],\n        JsdocTypeKeyof: ['element'],\n        JsdocTypeKeyValue: ['right'],\n        JsdocTypeMappedType: ['right'],\n        JsdocTypeName: [],\n        JsdocTypeNamePath: ['left', 'right'],\n        JsdocTypeNotNullable: ['element'],\n        JsdocTypeNull: [],\n        JsdocTypeNullable: ['element'],\n        JsdocTypeNumber: [],\n        JsdocTypeObject: ['elements'],\n        JsdocTypeObjectField: ['right'],\n        JsdocTypeJsdocObjectField: ['left', 'right'],\n        JsdocTypeOptional: ['element'],\n        JsdocTypeParenthesis: ['element'],\n        JsdocTypeSpecialNamePath: [],\n        JsdocTypeStringValue: [],\n        JsdocTypeSymbol: ['element'],\n        JsdocTypeTuple: ['elements'],\n        JsdocTypeTypeof: ['element'],\n        JsdocTypeUndefined: [],\n        JsdocTypeUnion: ['elements'],\n        JsdocTypeUnknown: [],\n        JsdocTypeVariadic: ['element'],\n        JsdocTypeProperty: [],\n        JsdocTypePredicate: ['left', 'right'],\n        JsdocTypeAsserts: ['left', 'right']\n    };\n\n    function _traverse(node, parentNode, property, onEnter, onLeave) {\n        onEnter === null || onEnter === void 0 ? void 0 : onEnter(node, parentNode, property);\n        const keysToVisit = visitorKeys[node.type];\n        for (const key of keysToVisit) {\n            const value = node[key];\n            if (value !== undefined) {\n                if (Array.isArray(value)) {\n                    for (const element of value) {\n                        _traverse(element, node, key, onEnter, onLeave);\n                    }\n                }\n                else {\n                    _traverse(value, node, key, onEnter, onLeave);\n                }\n            }\n        }\n        onLeave === null || onLeave === void 0 ? void 0 : onLeave(node, parentNode, property);\n    }\n    /**\n     * A function to traverse an AST. It traverses it depth first.\n     * @param node the node to start traversing at.\n     * @param onEnter node visitor function that will be called on entering the node. This corresponds to preorder traversing.\n     * @param onLeave node visitor function that will be called on leaving the node. This corresponds to postorder traversing.\n     */\n    function traverse(node, onEnter, onLeave) {\n        _traverse(node, undefined, undefined, onEnter, onLeave);\n    }\n\n    exports.catharsisTransform = catharsisTransform;\n    exports.identityTransformRules = identityTransformRules;\n    exports.jtpTransform = jtpTransform;\n    exports.parse = parse;\n    exports.stringify = stringify;\n    exports.stringifyRules = stringifyRules;\n    exports.transform = transform;\n    exports.traverse = traverse;\n    exports.tryParse = tryParse;\n    exports.visitorKeys = visitorKeys;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/jsdoc-type-pratt-parser@4.1.0/node_modules/jsdoc-type-pratt-parser/dist/index.js\n")},"../../node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js":module=>{eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js\n")},"../../node_modules/.pnpm/react@19.1.0/node_modules/react/cjs/react.production.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";eval('/* provided dependency */ var process = __webpack_require__("../../node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js");\n/**\n * @license React\n * react.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),\n  REACT_PORTAL_TYPE = Symbol.for("react.portal"),\n  REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),\n  REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),\n  REACT_PROFILER_TYPE = Symbol.for("react.profiler"),\n  REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),\n  REACT_CONTEXT_TYPE = Symbol.for("react.context"),\n  REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),\n  REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),\n  REACT_MEMO_TYPE = Symbol.for("react.memo"),\n  REACT_LAZY_TYPE = Symbol.for("react.lazy"),\n  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nfunction getIteratorFn(maybeIterable) {\n  if (null === maybeIterable || "object" !== typeof maybeIterable) return null;\n  maybeIterable =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable["@@iterator"];\n  return "function" === typeof maybeIterable ? maybeIterable : null;\n}\nvar ReactNoopUpdateQueue = {\n    isMounted: function () {\n      return !1;\n    },\n    enqueueForceUpdate: function () {},\n    enqueueReplaceState: function () {},\n    enqueueSetState: function () {}\n  },\n  assign = Object.assign,\n  emptyObject = {};\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nComponent.prototype.isReactComponent = {};\nComponent.prototype.setState = function (partialState, callback) {\n  if (\n    "object" !== typeof partialState &&\n    "function" !== typeof partialState &&\n    null != partialState\n  )\n    throw Error(\n      "takes an object of state variables to update or a function which returns an object of state variables."\n    );\n  this.updater.enqueueSetState(this, partialState, callback, "setState");\n};\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, "forceUpdate");\n};\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\nvar pureComponentPrototype = (PureComponent.prototype = new ComponentDummy());\npureComponentPrototype.constructor = PureComponent;\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = !0;\nvar isArrayImpl = Array.isArray,\n  ReactSharedInternals = { H: null, A: null, T: null, S: null, V: null },\n  hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction ReactElement(type, key, self, source, owner, props) {\n  self = props.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== self ? self : null,\n    props: props\n  };\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  return ReactElement(\n    oldElement.type,\n    newKey,\n    void 0,\n    void 0,\n    void 0,\n    oldElement.props\n  );\n}\nfunction isValidElement(object) {\n  return (\n    "object" === typeof object &&\n    null !== object &&\n    object.$$typeof === REACT_ELEMENT_TYPE\n  );\n}\nfunction escape(key) {\n  var escaperLookup = { "=": "=0", ":": "=2" };\n  return (\n    "$" +\n    key.replace(/[=:]/g, function (match) {\n      return escaperLookup[match];\n    })\n  );\n}\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction getElementKey(element, index) {\n  return "object" === typeof element && null !== element && null != element.key\n    ? escape("" + element.key)\n    : index.toString(36);\n}\nfunction noop$1() {}\nfunction resolveThenable(thenable) {\n  switch (thenable.status) {\n    case "fulfilled":\n      return thenable.value;\n    case "rejected":\n      throw thenable.reason;\n    default:\n      switch (\n        ("string" === typeof thenable.status\n          ? thenable.then(noop$1, noop$1)\n          : ((thenable.status = "pending"),\n            thenable.then(\n              function (fulfilledValue) {\n                "pending" === thenable.status &&\n                  ((thenable.status = "fulfilled"),\n                  (thenable.value = fulfilledValue));\n              },\n              function (error) {\n                "pending" === thenable.status &&\n                  ((thenable.status = "rejected"), (thenable.reason = error));\n              }\n            )),\n        thenable.status)\n      ) {\n        case "fulfilled":\n          return thenable.value;\n        case "rejected":\n          throw thenable.reason;\n      }\n  }\n  throw thenable;\n}\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n  if ("undefined" === type || "boolean" === type) children = null;\n  var invokeCallback = !1;\n  if (null === children) invokeCallback = !0;\n  else\n    switch (type) {\n      case "bigint":\n      case "string":\n      case "number":\n        invokeCallback = !0;\n        break;\n      case "object":\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = !0;\n            break;\n          case REACT_LAZY_TYPE:\n            return (\n              (invokeCallback = children._init),\n              mapIntoArray(\n                invokeCallback(children._payload),\n                array,\n                escapedPrefix,\n                nameSoFar,\n                callback\n              )\n            );\n        }\n    }\n  if (invokeCallback)\n    return (\n      (callback = callback(children)),\n      (invokeCallback =\n        "" === nameSoFar ? "." + getElementKey(children, 0) : nameSoFar),\n      isArrayImpl(callback)\n        ? ((escapedPrefix = ""),\n          null != invokeCallback &&\n            (escapedPrefix =\n              invokeCallback.replace(userProvidedKeyEscapeRegex, "$&/") + "/"),\n          mapIntoArray(callback, array, escapedPrefix, "", function (c) {\n            return c;\n          }))\n        : null != callback &&\n          (isValidElement(callback) &&\n            (callback = cloneAndReplaceKey(\n              callback,\n              escapedPrefix +\n                (null == callback.key ||\n                (children && children.key === callback.key)\n                  ? ""\n                  : ("" + callback.key).replace(\n                      userProvidedKeyEscapeRegex,\n                      "$&/"\n                    ) + "/") +\n                invokeCallback\n            )),\n          array.push(callback)),\n      1\n    );\n  invokeCallback = 0;\n  var nextNamePrefix = "" === nameSoFar ? "." : nameSoFar + ":";\n  if (isArrayImpl(children))\n    for (var i = 0; i < children.length; i++)\n      (nameSoFar = children[i]),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if (((i = getIteratorFn(children)), "function" === typeof i))\n    for (\n      children = i.call(children), i = 0;\n      !(nameSoFar = children.next()).done;\n\n    )\n      (nameSoFar = nameSoFar.value),\n        (type = nextNamePrefix + getElementKey(nameSoFar, i++)),\n        (invokeCallback += mapIntoArray(\n          nameSoFar,\n          array,\n          escapedPrefix,\n          type,\n          callback\n        ));\n  else if ("object" === type) {\n    if ("function" === typeof children.then)\n      return mapIntoArray(\n        resolveThenable(children),\n        array,\n        escapedPrefix,\n        nameSoFar,\n        callback\n      );\n    array = String(children);\n    throw Error(\n      "Objects are not valid as a React child (found: " +\n        ("[object Object]" === array\n          ? "object with keys {" + Object.keys(children).join(", ") + "}"\n          : array) +\n        "). If you meant to render a collection of children, use an array instead."\n    );\n  }\n  return invokeCallback;\n}\nfunction mapChildren(children, func, context) {\n  if (null == children) return children;\n  var result = [],\n    count = 0;\n  mapIntoArray(children, result, "", "", function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\nfunction lazyInitializer(payload) {\n  if (-1 === payload._status) {\n    var ctor = payload._result;\n    ctor = ctor();\n    ctor.then(\n      function (moduleObject) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 1), (payload._result = moduleObject);\n      },\n      function (error) {\n        if (0 === payload._status || -1 === payload._status)\n          (payload._status = 2), (payload._result = error);\n      }\n    );\n    -1 === payload._status && ((payload._status = 0), (payload._result = ctor));\n  }\n  if (1 === payload._status) return payload._result.default;\n  throw payload._result;\n}\nvar reportGlobalError =\n  "function" === typeof reportError\n    ? reportError\n    : function (error) {\n        if (\n          "object" === typeof window &&\n          "function" === typeof window.ErrorEvent\n        ) {\n          var event = new window.ErrorEvent("error", {\n            bubbles: !0,\n            cancelable: !0,\n            message:\n              "object" === typeof error &&\n              null !== error &&\n              "string" === typeof error.message\n                ? String(error.message)\n                : String(error),\n            error: error\n          });\n          if (!window.dispatchEvent(event)) return;\n        } else if (\n          "object" === typeof process &&\n          "function" === typeof process.emit\n        ) {\n          process.emit("uncaughtException", error);\n          return;\n        }\n        console.error(error);\n      };\nfunction noop() {}\nexports.Children = {\n  map: mapChildren,\n  forEach: function (children, forEachFunc, forEachContext) {\n    mapChildren(\n      children,\n      function () {\n        forEachFunc.apply(this, arguments);\n      },\n      forEachContext\n    );\n  },\n  count: function (children) {\n    var n = 0;\n    mapChildren(children, function () {\n      n++;\n    });\n    return n;\n  },\n  toArray: function (children) {\n    return (\n      mapChildren(children, function (child) {\n        return child;\n      }) || []\n    );\n  },\n  only: function (children) {\n    if (!isValidElement(children))\n      throw Error(\n        "React.Children.only expected to receive a single React element child."\n      );\n    return children;\n  }\n};\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =\n  ReactSharedInternals;\nexports.__COMPILER_RUNTIME = {\n  __proto__: null,\n  c: function (size) {\n    return ReactSharedInternals.H.useMemoCache(size);\n  }\n};\nexports.cache = function (fn) {\n  return function () {\n    return fn.apply(null, arguments);\n  };\n};\nexports.cloneElement = function (element, config, children) {\n  if (null === element || void 0 === element)\n    throw Error(\n      "The argument must be a React element, but you passed " + element + "."\n    );\n  var props = assign({}, element.props),\n    key = element.key,\n    owner = void 0;\n  if (null != config)\n    for (propName in (void 0 !== config.ref && (owner = void 0),\n    void 0 !== config.key && (key = "" + config.key),\n    config))\n      !hasOwnProperty.call(config, propName) ||\n        "key" === propName ||\n        "__self" === propName ||\n        "__source" === propName ||\n        ("ref" === propName && void 0 === config.ref) ||\n        (props[propName] = config[propName]);\n  var propName = arguments.length - 2;\n  if (1 === propName) props.children = children;\n  else if (1 < propName) {\n    for (var childArray = Array(propName), i = 0; i < propName; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  return ReactElement(element.type, key, void 0, void 0, owner, props);\n};\nexports.createContext = function (defaultValue) {\n  defaultValue = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    _threadCount: 0,\n    Provider: null,\n    Consumer: null\n  };\n  defaultValue.Provider = defaultValue;\n  defaultValue.Consumer = {\n    $$typeof: REACT_CONSUMER_TYPE,\n    _context: defaultValue\n  };\n  return defaultValue;\n};\nexports.createElement = function (type, config, children) {\n  var propName,\n    props = {},\n    key = null;\n  if (null != config)\n    for (propName in (void 0 !== config.key && (key = "" + config.key), config))\n      hasOwnProperty.call(config, propName) &&\n        "key" !== propName &&\n        "__self" !== propName &&\n        "__source" !== propName &&\n        (props[propName] = config[propName]);\n  var childrenLength = arguments.length - 2;\n  if (1 === childrenLength) props.children = children;\n  else if (1 < childrenLength) {\n    for (var childArray = Array(childrenLength), i = 0; i < childrenLength; i++)\n      childArray[i] = arguments[i + 2];\n    props.children = childArray;\n  }\n  if (type && type.defaultProps)\n    for (propName in ((childrenLength = type.defaultProps), childrenLength))\n      void 0 === props[propName] &&\n        (props[propName] = childrenLength[propName]);\n  return ReactElement(type, key, void 0, void 0, null, props);\n};\nexports.createRef = function () {\n  return { current: null };\n};\nexports.forwardRef = function (render) {\n  return { $$typeof: REACT_FORWARD_REF_TYPE, render: render };\n};\nexports.isValidElement = isValidElement;\nexports.lazy = function (ctor) {\n  return {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: { _status: -1, _result: ctor },\n    _init: lazyInitializer\n  };\n};\nexports.memo = function (type, compare) {\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: void 0 === compare ? null : compare\n  };\n};\nexports.startTransition = function (scope) {\n  var prevTransition = ReactSharedInternals.T,\n    currentTransition = {};\n  ReactSharedInternals.T = currentTransition;\n  try {\n    var returnValue = scope(),\n      onStartTransitionFinish = ReactSharedInternals.S;\n    null !== onStartTransitionFinish &&\n      onStartTransitionFinish(currentTransition, returnValue);\n    "object" === typeof returnValue &&\n      null !== returnValue &&\n      "function" === typeof returnValue.then &&\n      returnValue.then(noop, reportGlobalError);\n  } catch (error) {\n    reportGlobalError(error);\n  } finally {\n    ReactSharedInternals.T = prevTransition;\n  }\n};\nexports.unstable_useCacheRefresh = function () {\n  return ReactSharedInternals.H.useCacheRefresh();\n};\nexports.use = function (usable) {\n  return ReactSharedInternals.H.use(usable);\n};\nexports.useActionState = function (action, initialState, permalink) {\n  return ReactSharedInternals.H.useActionState(action, initialState, permalink);\n};\nexports.useCallback = function (callback, deps) {\n  return ReactSharedInternals.H.useCallback(callback, deps);\n};\nexports.useContext = function (Context) {\n  return ReactSharedInternals.H.useContext(Context);\n};\nexports.useDebugValue = function () {};\nexports.useDeferredValue = function (value, initialValue) {\n  return ReactSharedInternals.H.useDeferredValue(value, initialValue);\n};\nexports.useEffect = function (create, createDeps, update) {\n  var dispatcher = ReactSharedInternals.H;\n  if ("function" === typeof update)\n    throw Error(\n      "useEffect CRUD overload is not enabled in this build of React."\n    );\n  return dispatcher.useEffect(create, createDeps);\n};\nexports.useId = function () {\n  return ReactSharedInternals.H.useId();\n};\nexports.useImperativeHandle = function (ref, create, deps) {\n  return ReactSharedInternals.H.useImperativeHandle(ref, create, deps);\n};\nexports.useInsertionEffect = function (create, deps) {\n  return ReactSharedInternals.H.useInsertionEffect(create, deps);\n};\nexports.useLayoutEffect = function (create, deps) {\n  return ReactSharedInternals.H.useLayoutEffect(create, deps);\n};\nexports.useMemo = function (create, deps) {\n  return ReactSharedInternals.H.useMemo(create, deps);\n};\nexports.useOptimistic = function (passthrough, reducer) {\n  return ReactSharedInternals.H.useOptimistic(passthrough, reducer);\n};\nexports.useReducer = function (reducer, initialArg, init) {\n  return ReactSharedInternals.H.useReducer(reducer, initialArg, init);\n};\nexports.useRef = function (initialValue) {\n  return ReactSharedInternals.H.useRef(initialValue);\n};\nexports.useState = function (initialState) {\n  return ReactSharedInternals.H.useState(initialState);\n};\nexports.useSyncExternalStore = function (\n  subscribe,\n  getSnapshot,\n  getServerSnapshot\n) {\n  return ReactSharedInternals.H.useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot\n  );\n};\nexports.useTransition = function () {\n  return ReactSharedInternals.H.useTransition();\n};\nexports.version = "19.1.0";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/react@19.1.0/node_modules/react/cjs/react.production.js\n')},"../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval('\n\nif (true) {\n  module.exports = __webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/cjs/react.production.js");\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxJQUFxQztBQUN6QyxFQUFFLHdIQUFxRDtBQUN2RCxFQUFFLEtBQUssRUFFTiIsInNvdXJjZXMiOlsid2VicGFjazovL0BtaXRvLWZvcm1zL2J1bG1hLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWFjdEAxOS4xLjAvbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzPzZmMzciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js\n')},"../../node_modules/.pnpm/ts-dedent@2.2.0/node_modules/ts-dedent/esm/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   T: () => (/* binding */ dedent)\n/* harmony export */ });\nfunction dedent(templ) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    var strings = Array.from(typeof templ === 'string' ? [templ] : templ);\n    strings[strings.length - 1] = strings[strings.length - 1].replace(/\\r?\\n([\\t ]*)$/, '');\n    var indentLengths = strings.reduce(function (arr, str) {\n        var matches = str.match(/\\n([\\t ]+|(?!\\s).)/g);\n        if (matches) {\n            return arr.concat(matches.map(function (match) { var _a, _b; return (_b = (_a = match.match(/[\\t ]/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0; }));\n        }\n        return arr;\n    }, []);\n    if (indentLengths.length) {\n        var pattern_1 = new RegExp(\"\\n[\\t ]{\" + Math.min.apply(Math, indentLengths) + \"}\", 'g');\n        strings = strings.map(function (str) { return str.replace(pattern_1, '\\n'); });\n    }\n    strings[0] = strings[0].replace(/^\\r?\\n/, '');\n    var string = strings[0];\n    values.forEach(function (value, i) {\n        var endentations = string.match(/(?:^|\\n)( *)$/);\n        var endentation = endentations ? endentations[1] : '';\n        var indentedValue = value;\n        if (typeof value === 'string' && value.includes('\\n')) {\n            indentedValue = String(value)\n                .split('\\n')\n                .map(function (str, i) {\n                return i === 0 ? str : \"\" + endentation + str;\n            })\n                .join('\\n');\n        }\n        string += indentedValue + strings[i + 1];\n    });\n    return string;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dedent);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3RzLWRlZGVudEAyLjIuMC9ub2RlX21vZHVsZXMvdHMtZGVkZW50L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBLHFCQUFxQix1QkFBdUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsWUFBWSwrSEFBK0g7QUFDeE07QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDRDQUE0Qyw0Q0FBNEM7QUFDeEYsK0NBQStDLHNDQUFzQztBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxpRUFBZSxNQUFNLEVBQUM7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbWl0by1mb3Jtcy9idWxtYS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vdHMtZGVkZW50QDIuMi4wL25vZGVfbW9kdWxlcy90cy1kZWRlbnQvZXNtL2luZGV4LmpzP2E0NDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGRlZGVudCh0ZW1wbCkge1xuICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YWx1ZXNbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgfVxuICAgIHZhciBzdHJpbmdzID0gQXJyYXkuZnJvbSh0eXBlb2YgdGVtcGwgPT09ICdzdHJpbmcnID8gW3RlbXBsXSA6IHRlbXBsKTtcbiAgICBzdHJpbmdzW3N0cmluZ3MubGVuZ3RoIC0gMV0gPSBzdHJpbmdzW3N0cmluZ3MubGVuZ3RoIC0gMV0ucmVwbGFjZSgvXFxyP1xcbihbXFx0IF0qKSQvLCAnJyk7XG4gICAgdmFyIGluZGVudExlbmd0aHMgPSBzdHJpbmdzLnJlZHVjZShmdW5jdGlvbiAoYXJyLCBzdHIpIHtcbiAgICAgICAgdmFyIG1hdGNoZXMgPSBzdHIubWF0Y2goL1xcbihbXFx0IF0rfCg/IVxccykuKS9nKTtcbiAgICAgICAgaWYgKG1hdGNoZXMpIHtcbiAgICAgICAgICAgIHJldHVybiBhcnIuY29uY2F0KG1hdGNoZXMubWFwKGZ1bmN0aW9uIChtYXRjaCkgeyB2YXIgX2EsIF9iOyByZXR1cm4gKF9iID0gKF9hID0gbWF0Y2gubWF0Y2goL1tcXHQgXS9nKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxlbmd0aCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogMDsgfSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhcnI7XG4gICAgfSwgW10pO1xuICAgIGlmIChpbmRlbnRMZW5ndGhzLmxlbmd0aCkge1xuICAgICAgICB2YXIgcGF0dGVybl8xID0gbmV3IFJlZ0V4cChcIlxcbltcXHQgXXtcIiArIE1hdGgubWluLmFwcGx5KE1hdGgsIGluZGVudExlbmd0aHMpICsgXCJ9XCIsICdnJyk7XG4gICAgICAgIHN0cmluZ3MgPSBzdHJpbmdzLm1hcChmdW5jdGlvbiAoc3RyKSB7IHJldHVybiBzdHIucmVwbGFjZShwYXR0ZXJuXzEsICdcXG4nKTsgfSk7XG4gICAgfVxuICAgIHN0cmluZ3NbMF0gPSBzdHJpbmdzWzBdLnJlcGxhY2UoL15cXHI/XFxuLywgJycpO1xuICAgIHZhciBzdHJpbmcgPSBzdHJpbmdzWzBdO1xuICAgIHZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwgaSkge1xuICAgICAgICB2YXIgZW5kZW50YXRpb25zID0gc3RyaW5nLm1hdGNoKC8oPzpefFxcbikoICopJC8pO1xuICAgICAgICB2YXIgZW5kZW50YXRpb24gPSBlbmRlbnRhdGlvbnMgPyBlbmRlbnRhdGlvbnNbMV0gOiAnJztcbiAgICAgICAgdmFyIGluZGVudGVkVmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUuaW5jbHVkZXMoJ1xcbicpKSB7XG4gICAgICAgICAgICBpbmRlbnRlZFZhbHVlID0gU3RyaW5nKHZhbHVlKVxuICAgICAgICAgICAgICAgIC5zcGxpdCgnXFxuJylcbiAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChzdHIsIGkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaSA9PT0gMCA/IHN0ciA6IFwiXCIgKyBlbmRlbnRhdGlvbiArIHN0cjtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmpvaW4oJ1xcbicpO1xuICAgICAgICB9XG4gICAgICAgIHN0cmluZyArPSBpbmRlbnRlZFZhbHVlICsgc3RyaW5nc1tpICsgMV07XG4gICAgfSk7XG4gICAgcmV0dXJuIHN0cmluZztcbn1cbmV4cG9ydCBkZWZhdWx0IGRlZGVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../node_modules/.pnpm/ts-dedent@2.2.0/node_modules/ts-dedent/esm/index.js\n")}}]);