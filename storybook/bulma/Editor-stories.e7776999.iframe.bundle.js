"use strict";(self.webpackChunk_mito_forms_bulma=self.webpackChunk_mito_forms_bulma||[]).push([[408],{"./src/Editor.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,ChartEditor:()=>ChartEditor,CollapsibleFieldsets:()=>CollapsibleFieldsets,ConditionalDisplay:()=>ConditionalDisplay,OnePageLayout:()=>OnePageLayout,SwitchComponent:()=>SwitchComponent,TabbedLayout:()=>TabbedLayout,ThrottleChange:()=>ThrottleChange,UnsupportedComponent:()=>UnsupportedComponent,ValuesFromJsonPath:()=>ValuesFromJsonPath,WithListEditor:()=>WithListEditor,WithReducer:()=>WithReducer,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Editor_stories});var dist=__webpack_require__("../../node_modules/.pnpm/@mito-forms+core@0.1.0-beta-2_typescript@5.8.3/node_modules/@mito-forms/core/dist/index.js");const mockInputObject_namespaceObject=JSON.parse('{"path":{"to":{"fieldsetData":{"label":"Label Text","value":"Value Text"}}},"other":{"numericValue1":10,"textValue":"textValue123"},"otherPath":{"to":{"values":{"numericValue":12,"textValue":"Text Value"}}},"someData":{"to":{"listOfOptions":[{"label":"Label Text 1","value":1},{"label":"Label Text 2","value":2},{"label":"Label Text 3","value":3}],"checkListOfOptions":[{"label":"Check Option one","value":1},{"label":"Check Option two","value":2},{"label":"Check Option three","value":3}],"switchListOfOptions":[{"label":"Switch Option one","value":1},{"label":"Switch Option two","value":2},{"label":"Switch Option three","value":3}]}}}'),basicEditor={activeForm:"form1",forms:[{id:"form1",title:"Basic Form",fieldSets:[{name:"fieldset1",fields:[{type:"text",name:"label",label:"Label",required:!0},{type:"select",name:"selector",label:"Select Option",default:1,options:[{label:"Option 1",value:1},{label:"Option 2",value:2}]}]}]}],reducersMap:{}},editorWithConditions={displayAs:"onePage",activeForm:"Form1",forms:[{id:"Form1",title:"Form with conditional input Fields and FieldSets",fieldSets:[{name:"fieldset2",title:"Fieldset With Title",showTitle:!0,fields:[{label:"Select value (Select 'option2' to show text field)",name:"selector",type:"select",default:"1",options:[{value:"1",label:"option 1"},{value:"2",label:"option 2"}]}]},{name:"fieldset1",title:"Other fieldset",showTitle:!0,fields:[{name:"textInput",type:"text",value:"initialValue",label:"Text input (shown only when 'option2' selected)",required:!0,showIf:{value:"$.Form1.fieldset2.data.selector",value2:"2",type:dist.bI.Equal}},{name:"switchInput",type:"switch",label:"Show yes/no",value:!0},{name:"oneMoreConditional",type:"text",label:"Test Label",showIf:{value:"$.Form1.fieldset1.data.switchInput",value2:!0,type:dist.bI.Equal}},{name:"showFieldset3",type:"switch",label:"Show/Hide FieldSet below",value:!1}]},{name:"fieldset3",title:"Fieldset Displayed when the Switch is on",showTitle:!0,showIf:{value:"$.Form1.fieldset1.data.showFieldset3",value2:!0,type:dist.bI.Equal},fields:[{label:"Option Selector",name:"selectorField",type:"select",default:"1",options:[{value:"1",label:"Choice One"},{value:"2",label:"Choice Two"}]}]}]}],reducersMap:{}},editorWithJsonPath={displayAs:"onePage",forms:[{id:"form",title:"Form using JSON Path to access values",showTitle:!0,fieldSets:[{title:"Path to fieldset data ($.path.to.fieldsetData)",name:"jsonPathFieldset",jsonPath:"$.path.to.fieldsetData",showTitle:!0,fields:[{type:"staticText",label:"Label",name:"label"},{type:"text",label:"Value",name:"value"}]},{title:"Access data per field",name:"jsonPathPerField",showTitle:!0,fields:[{type:"staticText",label:"Access numeric value",helpText:"$.other.numericValue1",name:"numericValue",value:"{$.other.numericValue1}"},{type:"text",label:"Text Value",helpText:"Json path $.other.textValue",name:"textValue",value:"{$.other.textValue}"},{type:"select",name:"selector",label:"Selector ",helpText:"Retrieves options from $.someData.to.listOfOptions",options:"{$.someData.to.listOfOptions}",value:1},{type:"checkbox",name:"checkboxList",label:"Check List",helpText:"Options loaded from $.someData.to.listOfOptions",options:"{$.someData.to.listOfOptions}",value:1},{type:"radio",name:"radioList",label:"Radio buttons",helpText:"Retrieves options from ($.someData.to.listOfOptions)",options:"{$.someData.to.listOfOptions}",value:1},{type:"switch",name:"switchList",label:"Switch List",helpText:"Retrieves options from ($.someData.to.switchListOfOptions)",options:"{$.someData.to.switchListOfOptions}",value:1}]}]}],reducersMap:{}};function _arity(n,fn){switch(n){case 0:return function(){return fn.apply(this,arguments)};case 1:return function(a0){return fn.apply(this,arguments)};case 2:return function(a0,a1){return fn.apply(this,arguments)};case 3:return function(a0,a1,a2){return fn.apply(this,arguments)};case 4:return function(a0,a1,a2,a3){return fn.apply(this,arguments)};case 5:return function(a0,a1,a2,a3,a4){return fn.apply(this,arguments)};case 6:return function(a0,a1,a2,a3,a4,a5){return fn.apply(this,arguments)};case 7:return function(a0,a1,a2,a3,a4,a5,a6){return fn.apply(this,arguments)};case 8:return function(a0,a1,a2,a3,a4,a5,a6,a7){return fn.apply(this,arguments)};case 9:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8){return fn.apply(this,arguments)};case 10:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9){return fn.apply(this,arguments)};default:throw new Error("First argument to _arity must be a non-negative integer no greater than ten")}}function _pipe(f,g){return function(){return g.call(this,f.apply(this,arguments))}}function _isPlaceholder(a){return null!=a&&"object"==typeof a&&!0===a["@@functional/placeholder"]}function _curry1(fn){return function f1(a){return 0===arguments.length||_isPlaceholder(a)?f1:fn.apply(this,arguments)}}function _curry2(fn){return function f2(a,b){switch(arguments.length){case 0:return f2;case 1:return _isPlaceholder(a)?f2:_curry1((function(_b){return fn(a,_b)}));default:return _isPlaceholder(a)&&_isPlaceholder(b)?f2:_isPlaceholder(a)?_curry1((function(_a){return fn(_a,b)})):_isPlaceholder(b)?_curry1((function(_b){return fn(a,_b)})):fn(a,b)}}}function _curry3(fn){return function f3(a,b,c){switch(arguments.length){case 0:return f3;case 1:return _isPlaceholder(a)?f3:_curry2((function(_b,_c){return fn(a,_b,_c)}));case 2:return _isPlaceholder(a)&&_isPlaceholder(b)?f3:_isPlaceholder(a)?_curry2((function(_a,_c){return fn(_a,b,_c)})):_isPlaceholder(b)?_curry2((function(_b,_c){return fn(a,_b,_c)})):_curry1((function(_c){return fn(a,b,_c)}));default:return _isPlaceholder(a)&&_isPlaceholder(b)&&_isPlaceholder(c)?f3:_isPlaceholder(a)&&_isPlaceholder(b)?_curry2((function(_a,_b){return fn(_a,_b,c)})):_isPlaceholder(a)&&_isPlaceholder(c)?_curry2((function(_a,_c){return fn(_a,b,_c)})):_isPlaceholder(b)&&_isPlaceholder(c)?_curry2((function(_b,_c){return fn(a,_b,_c)})):_isPlaceholder(a)?_curry1((function(_a){return fn(_a,b,c)})):_isPlaceholder(b)?_curry1((function(_b){return fn(a,_b,c)})):_isPlaceholder(c)?_curry1((function(_c){return fn(a,b,_c)})):fn(a,b,c)}}}const _isArray=Array.isArray||function _isArray(val){return null!=val&&val.length>=0&&"[object Array]"===Object.prototype.toString.call(val)};function _isString(x){return"[object String]"===Object.prototype.toString.call(x)}const internal_isArrayLike=_curry1((function isArrayLike(x){return!!_isArray(x)||!!x&&("object"==typeof x&&(!_isString(x)&&(0===x.length||x.length>0&&(x.hasOwnProperty(0)&&x.hasOwnProperty(x.length-1)))))}));var symIterator="undefined"!=typeof Symbol?Symbol.iterator:"@@iterator";function _createReduce(arrayReduce,methodReduce,iterableReduce){return function _reduce(xf,acc,list){if(internal_isArrayLike(list))return arrayReduce(xf,acc,list);if(null==list)return acc;if("function"==typeof list["fantasy-land/reduce"])return methodReduce(xf,acc,list,"fantasy-land/reduce");if(null!=list[symIterator])return iterableReduce(xf,acc,list[symIterator]());if("function"==typeof list.next)return iterableReduce(xf,acc,list);if("function"==typeof list.reduce)return methodReduce(xf,acc,list,"reduce");throw new TypeError("reduce: list must be array or iterable")}}function _xArrayReduce(xf,acc,list){for(var idx=0,len=list.length;idx<len;){if((acc=xf["@@transducer/step"](acc,list[idx]))&&acc["@@transducer/reduced"]){acc=acc["@@transducer/value"];break}idx+=1}return xf["@@transducer/result"](acc)}const es_bind=_curry2((function bind(fn,thisObj){return _arity(fn.length,(function(){return fn.apply(thisObj,arguments)}))}));function _xIterableReduce(xf,acc,iter){for(var step=iter.next();!step.done;){if((acc=xf["@@transducer/step"](acc,step.value))&&acc["@@transducer/reduced"]){acc=acc["@@transducer/value"];break}step=iter.next()}return xf["@@transducer/result"](acc)}function _xMethodReduce(xf,acc,obj,methodName){return xf["@@transducer/result"](obj[methodName](es_bind(xf["@@transducer/step"],xf),acc))}const internal_xReduce=_createReduce(_xArrayReduce,_xMethodReduce,_xIterableReduce);var XWrap=function(){function XWrap(fn){this.f=fn}return XWrap.prototype["@@transducer/init"]=function(){throw new Error("init not implemented on XWrap")},XWrap.prototype["@@transducer/result"]=function(acc){return acc},XWrap.prototype["@@transducer/step"]=function(acc,x){return this.f(acc,x)},XWrap}();const es_reduce=_curry3((function(xf,acc,list){return internal_xReduce("function"==typeof xf?function _xwrap(fn){return new XWrap(fn)}(xf):xf,acc,list)}));function _checkForMethod(methodname,fn){return function(){var length=arguments.length;if(0===length)return fn();var obj=arguments[length-1];return _isArray(obj)||"function"!=typeof obj[methodname]?fn.apply(this,arguments):obj[methodname].apply(obj,Array.prototype.slice.call(arguments,0,length-1))}}const es_tail=_curry1(_checkForMethod("tail",_curry3(_checkForMethod("slice",(function slice(fromIndex,toIndex,list){return Array.prototype.slice.call(list,fromIndex,toIndex)})))(1,1/0)));function pipe(){if(0===arguments.length)throw new Error("pipe requires at least one argument");return _arity(arguments[0].length,es_reduce(_pipe,arguments[0],es_tail(arguments)))}const es_reverse=_curry1((function reverse(list){return _isString(list)?list.split("").reverse().join(""):Array.prototype.slice.call(list,0).reverse()}));function compose(){if(0===arguments.length)throw new Error("compose requires at least one argument");return pipe.apply(this,es_reverse(arguments))}const staticTextEditor={activeForm:"widgetParams",forms:[{id:"widgetParams",title:"Static Text",fieldSets:[{name:"widgetParams",jsonPath:"widgetParams",fields:[{type:"text",name:"label",label:"Label"},{type:"text",name:"text",label:"Value"}]}]}],reducersMap:{widgetParams:{widgetParams:(editorData,fieldSetData)=>{return compose((label=fieldSetData.label,function(data){return{...data,widgetParams:{...data.widgetParams,label}}}),(text=fieldSetData.text,function(data){return{...data,widgetParams:{...data.widgetParams,text}}}))(editorData);var text,label}}}},tabbedLayout={displayAs:"tabSet",activeForm:"Form1",forms:[{id:"Form1",title:"First Form",fieldSets:[{name:"fieldset1",fields:[{name:"textInput",type:"text",value:"initialValue",label:"Text input",required:!0},{name:"switchInput",type:"switch",label:"Switch on/of",value:!0}]},{name:"fieldset2",title:"Fieldset With Title",showTitle:!0,fields:[{label:"Select value",name:"selector",type:"select",default:"1",options:[{value:"1",label:"option 1"},{value:"2",label:"option 2"}]}]}]},{id:"Form2",title:"Second Form",fieldSets:[{name:"fieldset3",fields:[{name:"radio",type:"radio",default:"1",options:[{value:"1",label:"option 1"},{value:"2",label:"option 2"}]}]}]}],reducersMap:{}};var src=__webpack_require__("./src/index.tsx");const Editor_stories={title:"Bulma Form Editor",component:dist.HA,decorators:[],parameters:{},args:{componentRegistry:src.S}},Basic={args:{editorMetadata:{...basicEditor,reducersMap:{}},initialData:{}}},ThrottleChange={args:{editorMetadata:{...basicEditor,reducersMap:{}},throttleChange:!0,initialData:{}}},TabbedLayout={args:{editorMetadata:tabbedLayout,initialData:{}}},OnePageLayout={args:{editorMetadata:{...tabbedLayout,forms:[{...tabbedLayout.forms[0],showTitle:!0},{...tabbedLayout.forms[1],showTitle:!0}],displayAs:"onePage"},initialData:{}}},ConditionalDisplay={args:{editorMetadata:editorWithConditions,initialData:{}}},WithReducer={args:{editorMetadata:staticTextEditor,initialData:{}}},CollapsibleFieldsets={args:{editorMetadata:{displayAs:"onePage",forms:[{id:"form",title:"Collapsible Fieldsets",showTitle:!0,fieldSets:[{name:"collapsibleFieldSet",collapsible:!0,collapsed:!0,title:"Fieldset collapsible",showTitle:!0,fields:[{type:"text",name:"textInput",label:"Text input"},{name:"checkboxInput",label:"Select some option",type:"checkbox",options:[{value:"Check1",label:"Checkbox Option One"},{value:"Check2",label:"Checkbox Option Two"}]}]},{name:"otherFieldSet",collapsible:!0,collapsed:!1,title:"Other Fieldset",showTitle:!0,fields:[{type:"select",name:"optionsSelector",value:"opt1",options:[{value:"opt1",label:"Selector Option One"},{value:"opt2",label:"Selector Option Two"}]}]}]}],reducersMap:{}},initialData:{}}},ValuesFromJsonPath={args:{editorMetadata:editorWithJsonPath,initialData:{...mockInputObject_namespaceObject}}},missingFieldRegistry={...src.S.inputFields,textbox:void 0},UnsupportedComponent={args:{editorMetadata:{activeForm:"test",forms:[{id:"test",title:"Test Form",fieldSets:[{name:"fieldset",fields:[{type:"textbox",name:"textBox",value:"test",label:"Unsupported field Type"},{type:"text",name:"textInput",value:"Some Value",label:"Some other field"}]}]}],reducersMap:{}},componentRegistry:{...src.S,inputFields:missingFieldRegistry},initialData:{...mockInputObject_namespaceObject}}},WithListEditor={args:{editorMetadata:{activeForm:"widgetParams",forms:[{id:"widgetParams",title:"Static Text",fieldSets:[{name:"widgetParams",fields:[{type:"text",name:"label",label:"Label"},{type:"text",name:"text",label:"Value"}]}]},{id:"listEditor",title:"List Editor",fieldSets:[{name:"list",jsonPath:"$.listOfData",type:"fieldSetList",canDeleteOrAddRows:!1,rowFieldset:{name:"testListEditor",fields:[{type:"staticText",name:"field",label:"Field Label"},{type:"select",name:"axisType",label:"Axis Types",options:[{label:"Quantitative",value:"quant"},{label:"Temporal",value:"temp"},{label:"Ordinal",value:"ordinal"}]}]}}]}],reducersMap:{widgetParams:{widgetParams:(editorData,fieldSetData)=>({...editorData,widgetParams:{...fieldSetData}})}},reducersMap:{widgetParams:{widgetParams:(editorData,newData)=>({...editorData,...newData})},listEditor:{list:(editorData,newData)=>({...editorData,listOfData:newData})}}},initialData:{label:"Label",text:"Text",listOfData:[{field:"FIELD1",axisType:"quant"},{field:"FIELD2",axisType:"temp"},{field:"FIELD3",axisType:"ordinal"}]}}},SwitchComponent={args:{editorMetadata:{displayAs:"tabSet",activeForm:"form",forms:[{id:"form",title:"Form Tab",showTitle:!0,fieldSets:[{title:"Some Fieldset Title",name:"fieldsetWithSwitchList",showTitle:!0,fieldsLayout:"twoColumn",fields:[{type:"switch",name:"switchList",label:"Switch List",options:[{label:"Switch One",value:"one"},{label:"Switch Two",value:"two"},{label:"Switch Three",value:"three"},{label:"Switch Four",value:"four"}],value:"{$.objectOfSomeKind.switchValues}"},{type:"checkbox",name:"checkList",label:"Check List",options:[{label:"Check One",value:1},{label:"Check Two",value:2},{label:"Check Three",value:3},{label:"Check Four",value:4}],value:"{$.objectOfSomeKind.checkValues}"}]}]}],reducersMap:{form:{fieldsetWithSwitchList:(editorData,newData)=>({...editorData,objectOfSomeKind:{...editorData.objectOfSomeKind,switchValues:newData.switchList,checkValues:newData.checkList}})}}},initialData:{objectOfSomeKind:{switchValues:["two","three"],checkValues:[2,4]}}}},ChartEditor={args:{editorMetadata:{displayAs:"onePage",forms:[{id:"chartForm",fieldSets:[{name:"chartType",type:"fieldSet",fields:[{name:"chartType",type:"select",label:"Chart Type",options:[{value:"bar",label:"Bar"},{value:"line",label:"Line"},{value:"point",label:"Point"},{value:"area",label:"Area"},{value:"circle",label:"Circle"},{value:"square",label:"Square"},{value:"tick",label:"Tick"},{value:"rect",label:"Rectangle"},{value:"rule",label:"Rule"},{value:"text",label:"Text"}]}]},{name:"xField",type:"fieldSet",fields:[{name:"xField",type:"text",label:"X Field"}]},{name:"xType",type:"fieldSet",fields:[{name:"xType",type:"select",label:"X Type",options:[{value:"quantitative",label:"Quantitative"},{value:"ordinal",label:"Ordinal"},{value:"nominal",label:"Nominal"},{value:"temporal",label:"Temporal"}]}]},{name:"yField",type:"fieldSet",fields:[{name:"yField",type:"text",label:"Y Field"}]},{name:"yType",type:"fieldSet",fields:[{name:"yType",type:"select",label:"Y Type",options:[{value:"quantitative",label:"Quantitative"},{value:"ordinal",label:"Ordinal"},{value:"nominal",label:"Nominal"},{value:"temporal",label:"Temporal"}]}]}]}],reducersMap:{}},initialData:{}}},__namedExportsOrder=["Basic","ThrottleChange","TabbedLayout","OnePageLayout","ConditionalDisplay","WithReducer","CollapsibleFieldsets","ValuesFromJsonPath","UnsupportedComponent","WithListEditor","SwitchComponent","ChartEditor"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: {\n      ...basicEditor,\n      reducersMap: {}\n    },\n    initialData: {}\n  }\n}",...Basic.parameters?.docs?.source}}},ThrottleChange.parameters={...ThrottleChange.parameters,docs:{...ThrottleChange.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: {\n      ...basicEditor,\n      reducersMap: {}\n    },\n    throttleChange: true,\n    initialData: {}\n  }\n}",...ThrottleChange.parameters?.docs?.source}}},TabbedLayout.parameters={...TabbedLayout.parameters,docs:{...TabbedLayout.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: tabbedLayout,\n    initialData: {}\n  }\n}",...TabbedLayout.parameters?.docs?.source}}},OnePageLayout.parameters={...OnePageLayout.parameters,docs:{...OnePageLayout.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: {\n      ...tabbedLayout,\n      forms: [{\n        ...tabbedLayout.forms[0],\n        showTitle: true\n      }, {\n        ...tabbedLayout.forms[1],\n        showTitle: true\n      }],\n      displayAs: 'onePage'\n    },\n    initialData: {}\n  }\n}",...OnePageLayout.parameters?.docs?.source}}},ConditionalDisplay.parameters={...ConditionalDisplay.parameters,docs:{...ConditionalDisplay.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: editorWithConditions,\n    initialData: {}\n  }\n}",...ConditionalDisplay.parameters?.docs?.source}}},WithReducer.parameters={...WithReducer.parameters,docs:{...WithReducer.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: staticTextEditor,\n    initialData: {}\n  }\n}",...WithReducer.parameters?.docs?.source}}},CollapsibleFieldsets.parameters={...CollapsibleFieldsets.parameters,docs:{...CollapsibleFieldsets.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: editorWithCollapsibleFieldsets,\n    initialData: {}\n  }\n}",...CollapsibleFieldsets.parameters?.docs?.source}}},ValuesFromJsonPath.parameters={...ValuesFromJsonPath.parameters,docs:{...ValuesFromJsonPath.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: editorWithJsonPath,\n    initialData: {\n      ...INPUT_DATA\n    }\n  }\n}",...ValuesFromJsonPath.parameters?.docs?.source}}},UnsupportedComponent.parameters={...UnsupportedComponent.parameters,docs:{...UnsupportedComponent.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: {\n      activeForm: 'test',\n      forms: [{\n        id: 'test',\n        title: 'Test Form',\n        fieldSets: [{\n          name: 'fieldset',\n          fields: [{\n            type: 'textbox',\n            name: 'textBox',\n            value: 'test',\n            label: 'Unsupported field Type'\n          }, {\n            type: 'text',\n            name: 'textInput',\n            value: 'Some Value',\n            label: 'Some other field'\n          }]\n        }]\n      }],\n      reducersMap: {}\n    },\n    componentRegistry: {\n      ...BULMA_REGISTRY,\n      inputFields: missingFieldRegistry as InputFieldRegistry\n    },\n    initialData: {\n      ...INPUT_DATA\n    }\n  }\n}",...UnsupportedComponent.parameters?.docs?.source}}},WithListEditor.parameters={...WithListEditor.parameters,docs:{...WithListEditor.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: {\n      ...withListEditor,\n      reducersMap: {\n        widgetParams: {\n          widgetParams: (editorData: object, newData: ParamsMap) => {\n            return {\n              ...editorData,\n              ...newData\n            };\n          }\n        },\n        listEditor: {\n          list: (editorData: object, newData: ParamsMap) => {\n            return {\n              ...editorData,\n              listOfData: newData\n            };\n          }\n        }\n      }\n    },\n    initialData: {\n      label: 'Label',\n      text: 'Text',\n      listOfData: [{\n        field: 'FIELD1',\n        axisType: 'quant'\n      }, {\n        field: 'FIELD2',\n        axisType: 'temp'\n      }, {\n        field: 'FIELD3',\n        axisType: 'ordinal'\n      }]\n    }\n  }\n}",...WithListEditor.parameters?.docs?.source}}},SwitchComponent.parameters={...SwitchComponent.parameters,docs:{...SwitchComponent.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: {\n      displayAs: 'tabSet',\n      activeForm: 'form',\n      forms: [{\n        id: 'form',\n        title: 'Form Tab',\n        showTitle: true,\n        fieldSets: [{\n          title: 'Some Fieldset Title',\n          name: 'fieldsetWithSwitchList',\n          showTitle: true,\n          fieldsLayout: 'twoColumn',\n          fields: [{\n            type: 'switch',\n            name: 'switchList',\n            label: 'Switch List',\n            options: [{\n              label: 'Switch One',\n              value: 'one'\n            }, {\n              label: 'Switch Two',\n              value: 'two'\n            }, {\n              label: 'Switch Three',\n              value: 'three'\n            }, {\n              label: 'Switch Four',\n              value: 'four'\n            }],\n            value: '{$.objectOfSomeKind.switchValues}'\n          }, {\n            type: 'checkbox',\n            name: 'checkList',\n            label: 'Check List',\n            options: [{\n              label: 'Check One',\n              value: 1\n            }, {\n              label: 'Check Two',\n              value: 2\n            }, {\n              label: 'Check Three',\n              value: 3\n            }, {\n              label: 'Check Four',\n              value: 4\n            }],\n            value: '{$.objectOfSomeKind.checkValues}'\n          }]\n        }]\n      }],\n      reducersMap: {\n        form: {\n          fieldsetWithSwitchList: (editorData: {\n            objectOfSomeKind: object;\n          }, newData: {\n            switchList: string[];\n            checkList: number[];\n          }) => {\n            return {\n              ...editorData,\n              objectOfSomeKind: {\n                ...editorData.objectOfSomeKind,\n                switchValues: newData.switchList,\n                checkValues: newData.checkList\n              }\n            };\n          }\n        }\n      }\n    },\n    initialData: {\n      objectOfSomeKind: {\n        switchValues: ['two', 'three'],\n        checkValues: [2, 4]\n      }\n    }\n  }\n}",...SwitchComponent.parameters?.docs?.source}}},ChartEditor.parameters={...ChartEditor.parameters,docs:{...ChartEditor.parameters?.docs,source:{originalSource:"{\n  args: {\n    editorMetadata: chartEditorMetadata,\n    initialData: {}\n  }\n}",...ChartEditor.parameters?.docs?.source}}}}}]);