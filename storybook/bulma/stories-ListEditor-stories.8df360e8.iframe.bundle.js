"use strict";(self.webpackChunk_mito_forms_bulma=self.webpackChunk_mito_forms_bulma||[]).push([[324],{"./src/stories/ListEditor.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Basic: () => (/* binding */ Basic),\n  WithBorder: () => (/* binding */ WithBorder),\n  WithHeaders: () => (/* binding */ WithHeaders),\n  __namedExportsOrder: () => (/* binding */ __namedExportsOrder),\n  "default": () => (/* binding */ ListEditor_stories)\n});\n\n// EXTERNAL MODULE: ../../node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/test/dist/index.mjs\nvar dist = __webpack_require__("../../node_modules/.pnpm/@storybook+test@8.6.12_storybook@8.6.12_prettier@3.5.3_/node_modules/@storybook/test/dist/index.mjs");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/jsx-runtime.js");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/@mito-forms+core@0.2.0-beta_typescript@5.8.3/node_modules/@mito-forms/core/dist/index.js + 36 modules\nvar core_dist = __webpack_require__("../../node_modules/.pnpm/@mito-forms+core@0.2.0-beta_typescript@5.8.3/node_modules/@mito-forms/core/dist/index.js");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js\nvar react = __webpack_require__("../../node_modules/.pnpm/react@19.1.0/node_modules/react/index.js");\n// EXTERNAL MODULE: ../../node_modules/.pnpm/react-intl@7.1.6_react@19.1.0_typescript@5.8.3/node_modules/react-intl/lib/src/components/provider.js + 29 modules\nvar provider = __webpack_require__("../../node_modules/.pnpm/react-intl@7.1.6_react@19.1.0_typescript@5.8.3/node_modules/react-intl/lib/src/components/provider.js");\n// EXTERNAL MODULE: ./src/index.tsx + 14 modules\nvar src = __webpack_require__("./src/index.tsx");\n;// ./src/__stories__/ListEditorWrapper.tsx\n\n\n\n\n\nconst ListEditorWrapper = (props)=>{\n    const contextVal = (0,react.useMemo)(()=>({\n            dataSources: {},\n            contextParams: {},\n            componentRegistry: src/* BULMA_REGISTRY */.S,\n            editorState: {\n                formStates: {},\n                editorResult: {}\n            }\n        }), []);\n    return /*#__PURE__*/ (0,jsx_runtime.jsx)(provider/* default */.A, {\n        locale: "en",\n        messages: {},\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(core_dist/* EditorContext */.pl.Provider, {\n            value: contextVal,\n            children: /*#__PURE__*/ (0,jsx_runtime.jsx)(core_dist/* ListEditor */.qQ, {\n                ...props\n            })\n        })\n    });\n};\nListEditorWrapper.displayName = \'ListEditorWrapper\';\nListEditorWrapper.__docgenInfo = {\n    "description": "",\n    "methods": [],\n    "displayName": "ListEditorWrapper",\n    "props": {\n        "rowFieldset": {\n            "required": true,\n            "tsType": {\n                "name": "signature",\n                "type": "object",\n                "raw": "{\\n  /**\\n   * Fieldset name is required for the fieldset. Reducer is mapped to the\\n   */\\n  name: string;\\n  /**\\n   * List of input fields\\n   */\\n  fields: (InputField | FormDividerConfig)[];\\n\\n  /**\\n   *  Configures field layout overrides layout on the level of fieldset\\n   */\\n  fieldsLayout?: FieldsLayout;\\n\\n  /**\\n   * Used for list editor component configures how the fieldset is displayed\\n   */\\n  arrangeFields?: \'column\' | \'row\' | \'tableRow\';\\n  /**\\n   * Field set title\\n   */\\n  title?: string;\\n  /**\\n   * Intended to be used for conditional display. For example if some field has certain value display this fieldset.\\n   */\\n  render?: boolean | string;\\n\\n  /**\\n   * TODO: not implemented yet need to implement it\\n   */\\n  disabled?: boolean | string;\\n  /**\\n   * allows collapse expand fieldset.\\n   */\\n  collapsible?: boolean;\\n  collapsed?: boolean;\\n  /**\\n   * Data object locator in the overall data that is being edited.\\n   */\\n  jsonPath?: string;\\n  /**\\n   * Allows to manage show/hide title\\n   */\\n  showTitle?: boolean;\\n  /**\\n   * Data source binding for the fieldset.\\n   */\\n  dataSource?: DataSourceBinding;\\n}",\n                "signature": {\n                    "properties": [\n                        {\n                            "key": "name",\n                            "value": {\n                                "name": "string",\n                                "required": true\n                            },\n                            "description": "Fieldset name is required for the fieldset. Reducer is mapped to the"\n                        },\n                        {\n                            "key": "fields",\n                            "value": {\n                                "name": "Array",\n                                "elements": [\n                                    {\n                                        "name": "unknown"\n                                    }\n                                ],\n                                "raw": "(InputField | FormDividerConfig)[]",\n                                "required": true\n                            },\n                            "description": "List of input fields"\n                        },\n                        {\n                            "key": "fieldsLayout",\n                            "value": {\n                                "name": "union",\n                                "raw": "\'twoColumn\' | \'compact\' | \'twoColumnJustified\'",\n                                "elements": [\n                                    {\n                                        "name": "literal",\n                                        "value": "\'twoColumn\'"\n                                    },\n                                    {\n                                        "name": "literal",\n                                        "value": "\'compact\'"\n                                    },\n                                    {\n                                        "name": "literal",\n                                        "value": "\'twoColumnJustified\'"\n                                    }\n                                ],\n                                "required": false\n                            },\n                            "description": "Configures field layout overrides layout on the level of fieldset"\n                        },\n                        {\n                            "key": "arrangeFields",\n                            "value": {\n                                "name": "union",\n                                "raw": "\'column\' | \'row\' | \'tableRow\'",\n                                "elements": [\n                                    {\n                                        "name": "literal",\n                                        "value": "\'column\'"\n                                    },\n                                    {\n                                        "name": "literal",\n                                        "value": "\'row\'"\n                                    },\n                                    {\n                                        "name": "literal",\n                                        "value": "\'tableRow\'"\n                                    }\n                                ],\n                                "required": false\n                            },\n                            "description": "Used for list editor component configures how the fieldset is displayed"\n                        },\n                        {\n                            "key": "title",\n                            "value": {\n                                "name": "string",\n                                "required": false\n                            },\n                            "description": "Field set title"\n                        },\n                        {\n                            "key": "render",\n                            "value": {\n                                "name": "union",\n                                "raw": "boolean | string",\n                                "elements": [\n                                    {\n                                        "name": "boolean"\n                                    },\n                                    {\n                                        "name": "string"\n                                    }\n                                ],\n                                "required": false\n                            },\n                            "description": "Intended to be used for conditional display. For example if some field has certain value display this fieldset."\n                        },\n                        {\n                            "key": "disabled",\n                            "value": {\n                                "name": "union",\n                                "raw": "boolean | string",\n                                "elements": [\n                                    {\n                                        "name": "boolean"\n                                    },\n                                    {\n                                        "name": "string"\n                                    }\n                                ],\n                                "required": false\n                            },\n                            "description": "TODO: not implemented yet need to implement it"\n                        },\n                        {\n                            "key": "collapsible",\n                            "value": {\n                                "name": "boolean",\n                                "required": false\n                            },\n                            "description": "allows collapse expand fieldset."\n                        },\n                        {\n                            "key": "collapsed",\n                            "value": {\n                                "name": "boolean",\n                                "required": false\n                            }\n                        },\n                        {\n                            "key": "jsonPath",\n                            "value": {\n                                "name": "string",\n                                "required": false\n                            },\n                            "description": "Data object locator in the overall data that is being edited."\n                        },\n                        {\n                            "key": "showTitle",\n                            "value": {\n                                "name": "boolean",\n                                "required": false\n                            },\n                            "description": "Allows to manage show/hide title"\n                        },\n                        {\n                            "key": "dataSource",\n                            "value": {\n                                "name": "intersection",\n                                "raw": "Omit<DataBinding, \'type\'> & {\\n  datasourceId: string;\\n}",\n                                "elements": [\n                                    {\n                                        "name": "Omit",\n                                        "elements": [\n                                            {\n                                                "name": "signature",\n                                                "type": "object",\n                                                "raw": "{\\n  widgetId?: string;\\n  datasourceId?: string;\\n  type: ComponentTypeEnum;\\n  /**\\n   * targetProperty specifies where data will be injected if targetProperty is \\"$data\\" it means that data\\n   * from Data Binding will be passed as the data to the component this is most useful for data visualization\\n   * components.\\n   */\\n  targetProperty?: string;\\n  staticValue?: object;\\n  changeMode?: DataChangeMode;\\n\\n  // If specified, uses this property field on reach record as the unique ID for the merge behavior.\\n  mergeOnField?: string;\\n\\n  jsonPath?: string;\\n  /**\\n   * Accessor Expression. Used to access values inside Object Hierarchies.\\n   * Useful when for example DataSource result is in the format where the\\n   * data produced by the data source requires child object. In case of\\n   * Widget binding accessor can be used to access child hierarchy of\\n   * the bound state.\\n   *\\n   *  Example 1: Data Source result is in format:\\n   *\\n   *    {\\n   *      fullComparison: {...},\\n   *      topRegressions: {...},\\n   *      topImprovements: {...}\\n   *    }\\n   *\\n   *  if Component requires only \'topRegressions\' object component can specify topRegressions as an accessor path.\\n   *\\n   *    {\\n   *        accessor: {\\n   *            type: AccessorType.FetchPropertyPath,\\n   *            attributePath: \'topRegressions\'\\n   *        }\\n   *    }\\n   *  Example 2: Data source result is an array of objects and we need to access only one property of the object or\\n   *  one or two elements of the object. [{id: \\"1\\", title: \\"Title1\\"}, {id: \\"2\\", title: \\"Title2\\"}, {id: \\"3\\", title: \\"Title3\\"}]\\n   *\\n   *    {\\n   *        type: AccessorType.RemapRecordsArray\\n   *        propertyMap: {\\n   *          id: \\"recordId\\"\\n   *          title: \\"titleString\\"\\n   *        }\\n   *    }\\n   *    produces result of:\\n   *      [\\n   *        {recordId: \\"1\\", titleString: \\"Title1\\"},\\n   *        {recordId: \\"2\\", titleString: \\"Title1\\"},\\n   *        {recordId: \\"3\\", titleString: \\"Title1\\"}\\n   *      ]\\n   */\\n  accessor?: DataAccessor;\\n  /**\\n   * If specified data is first retrieved and the transformed accordingly (Currently not used)\\n   */\\n  transformers?: DataTransformer[];\\n}",\n                                                "signature": {\n                                                    "properties": [\n                                                        {\n                                                            "key": "widgetId",\n                                                            "value": {\n                                                                "name": "string",\n                                                                "required": false\n                                                            }\n                                                        },\n                                                        {\n                                                            "key": "datasourceId",\n                                                            "value": {\n                                                                "name": "string",\n                                                                "required": false\n                                                            }\n                                                        },\n                                                        {\n                                                            "key": "type",\n                                                            "value": {\n                                                                "name": "ComponentTypeEnum",\n                                                                "required": true\n                                                            }\n                                                        },\n                                                        {\n                                                            "key": "targetProperty",\n                                                            "value": {\n                                                                "name": "string",\n                                                                "required": false\n                                                            },\n                                                            "description": "targetProperty specifies where data will be injected if targetProperty is \\"$data\\" it means that data\\nfrom Data Binding will be passed as the data to the component this is most useful for data visualization\\ncomponents."\n                                                        },\n                                                        {\n                                                            "key": "staticValue",\n                                                            "value": {\n                                                                "name": "object",\n                                                                "required": false\n                                                            }\n                                                        },\n                                                        {\n                                                            "key": "changeMode",\n                                                            "value": {\n                                                                "name": "union",\n                                                                "raw": "\'replace\' | \'merge\'",\n                                                                "elements": [\n                                                                    {\n                                                                        "name": "literal",\n                                                                        "value": "\'replace\'"\n                                                                    },\n                                                                    {\n                                                                        "name": "literal",\n                                                                        "value": "\'merge\'"\n                                                                    }\n                                                                ],\n                                                                "required": false\n                                                            }\n                                                        },\n                                                        {\n                                                            "key": "mergeOnField",\n                                                            "value": {\n                                                                "name": "string",\n                                                                "required": false\n                                                            }\n                                                        },\n                                                        {\n                                                            "key": "jsonPath",\n                                                            "value": {\n                                                                "name": "string",\n                                                                "required": false\n                                                            }\n                                                        },\n                                                        {\n                                                            "key": "accessor",\n                                                            "value": {\n                                                                "name": "signature",\n                                                                "type": "object",\n                                                                "raw": "{\\n  type: AccessorType;\\n  jsonPath?: string;\\n  property?: string;\\n}",\n                                                                "signature": {\n                                                                    "properties": [\n                                                                        {\n                                                                            "key": "type",\n                                                                            "value": {\n                                                                                "name": "AccessorType",\n                                                                                "required": true\n                                                                            }\n                                                                        },\n                                                                        {\n                                                                            "key": "jsonPath",\n                                                                            "value": {\n                                                                                "name": "string",\n                                                                                "required": false\n                                                                            }\n                                                                        },\n                                                                        {\n                                                                            "key": "property",\n                                                                            "value": {\n                                                                                "name": "string",\n                                                                                "required": false\n                                                                            }\n                                                                        }\n                                                                    ]\n                                                                },\n                                                                "required": false\n                                                            },\n                                                            "description": "Accessor Expression. Used to access values inside Object Hierarchies.\\nUseful when for example DataSource result is in the format where the\\ndata produced by the data source requires child object. In case of\\nWidget binding accessor can be used to access child hierarchy of\\nthe bound state.\\n\\n Example 1: Data Source result is in format:\\n\\n   {\\n     fullComparison: {...},\\n     topRegressions: {...},\\n     topImprovements: {...}\\n   }\\n\\n if Component requires only \'topRegressions\' object component can specify topRegressions as an accessor path.\\n\\n   {\\n       accessor: {\\n           type: AccessorType.FetchPropertyPath,\\n           attributePath: \'topRegressions\'\\n       }\\n   }\\n Example 2: Data source result is an array of objects and we need to access only one property of the object or\\n one or two elements of the object. [{id: \\"1\\", title: \\"Title1\\"}, {id: \\"2\\", title: \\"Title2\\"}, {id: \\"3\\", title: \\"Title3\\"}]\\n\\n   {\\n       type: AccessorType.RemapRecordsArray\\n       propertyMap: {\\n         id: \\"recordId\\"\\n         title: \\"titleString\\"\\n       }\\n   }\\n   produces result of:\\n     [\\n       {recordId: \\"1\\", titleString: \\"Title1\\"},\\n       {recordId: \\"2\\", titleString: \\"Title1\\"},\\n       {recordId: \\"3\\", titleString: \\"Title1\\"}\\n     ]"\n                                                        },\n                                                        {\n                                                            "key": "transformers",\n                                                            "value": {\n                                                                "name": "Array",\n                                                                "elements": [\n                                                                    {\n                                                                        "name": "signature",\n                                                                        "type": "object",\n                                                                        "raw": "{\\n  type: TransformType;\\n\\n  /**\\n   * if this property is specified the source object is retrieved from this path first\\n   */\\n  sourceJsonPath?: string;\\n  /**\\n   * source->target\\n   */\\n  propertyMap?: {\\n    [key: string]: string;\\n  };\\n\\n  /*\\n   * List of properties (keys).\\n   */\\n  propertyKvList?: [string, string | number][];\\n\\n  objectTemplate?: object;\\n\\n  sortBy?: string; // field Name\\n\\n  groupBy?: string; // group by field name\\n\\n  sortOrder?: \'asc\' | \'desc\';\\n\\n  targetColumn?: string;\\n\\n  precision?: number; //Number of fraction digits\\n\\n  delimiter?: string;\\n\\n  targetJsonPath?: string;\\n\\n  targetProperty?: string;\\n  sourceProperty?: string;\\n  caseSensitive?: boolean;\\n  datetimeFormat?: string;\\n  value?: DefaultDataTypes;\\n  valuesMap?: {\\n    accessor?: DataAccessor;\\n    data?: { [key: string]: DataCellValue };\\n  };\\n\\n  // Used by filtering transformers\\n  // If set to true, filter will include by condition\\n  // If set to failse, filter will exclude by condition\\n  include?: boolean;\\n  splitBy?: string;\\n}",\n                                                                        "signature": {\n                                                                            "properties": [\n                                                                                {\n                                                                                    "key": "type",\n                                                                                    "value": {\n                                                                                        "name": "TransformType",\n                                                                                        "required": true\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "sourceJsonPath",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    },\n                                                                                    "description": "if this property is specified the source object is retrieved from this path first"\n                                                                                },\n                                                                                {\n                                                                                    "key": "propertyMap",\n                                                                                    "value": {\n                                                                                        "name": "signature",\n                                                                                        "type": "object",\n                                                                                        "raw": "{\\n  [key: string]: string;\\n}",\n                                                                                        "signature": {\n                                                                                            "properties": [\n                                                                                                {\n                                                                                                    "key": {\n                                                                                                        "name": "string"\n                                                                                                    },\n                                                                                                    "value": {\n                                                                                                        "name": "string",\n                                                                                                        "required": true\n                                                                                                    }\n                                                                                                }\n                                                                                            ]\n                                                                                        },\n                                                                                        "required": false\n                                                                                    },\n                                                                                    "description": "source->target"\n                                                                                },\n                                                                                {\n                                                                                    "key": "propertyKvList",\n                                                                                    "value": {\n                                                                                        "name": "Array",\n                                                                                        "elements": [\n                                                                                            {\n                                                                                                "name": "tuple",\n                                                                                                "raw": "[string, string | number]",\n                                                                                                "elements": [\n                                                                                                    {\n                                                                                                        "name": "string"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "union",\n                                                                                                        "raw": "string | number",\n                                                                                                        "elements": [\n                                                                                                            {\n                                                                                                                "name": "string"\n                                                                                                            },\n                                                                                                            {\n                                                                                                                "name": "number"\n                                                                                                            }\n                                                                                                        ]\n                                                                                                    }\n                                                                                                ]\n                                                                                            }\n                                                                                        ],\n                                                                                        "raw": "[string, string | number][]",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "objectTemplate",\n                                                                                    "value": {\n                                                                                        "name": "object",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "sortBy",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "groupBy",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "sortOrder",\n                                                                                    "value": {\n                                                                                        "name": "union",\n                                                                                        "raw": "\'asc\' | \'desc\'",\n                                                                                        "elements": [\n                                                                                            {\n                                                                                                "name": "literal",\n                                                                                                "value": "\'asc\'"\n                                                                                            },\n                                                                                            {\n                                                                                                "name": "literal",\n                                                                                                "value": "\'desc\'"\n                                                                                            }\n                                                                                        ],\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "targetColumn",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "precision",\n                                                                                    "value": {\n                                                                                        "name": "number",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "delimiter",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "targetJsonPath",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "targetProperty",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "sourceProperty",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "caseSensitive",\n                                                                                    "value": {\n                                                                                        "name": "boolean",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "datetimeFormat",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "value",\n                                                                                    "value": {\n                                                                                        "name": "union",\n                                                                                        "raw": "| RecordsArray\\n| DataCellValue\\n| (string | object)[]\\n| { [key: string]: object | RecordsArray }\\n| undefined",\n                                                                                        "elements": [\n                                                                                            {\n                                                                                                "name": "Array",\n                                                                                                "elements": [\n                                                                                                    {\n                                                                                                        "name": "signature",\n                                                                                                        "type": "object",\n                                                                                                        "raw": "{ [key: string]: DataCellValue }",\n                                                                                                        "signature": {\n                                                                                                            "properties": [\n                                                                                                                {\n                                                                                                                    "key": {\n                                                                                                                        "name": "string"\n                                                                                                                    },\n                                                                                                                    "value": {\n                                                                                                                        "name": "union",\n                                                                                                                        "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                        "elements": [\n                                                                                                                            {\n                                                                                                                                "name": "string"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "number"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "boolean"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "object"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "Array",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "object"\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "raw": "object[]"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "null"\n                                                                                                                            }\n                                                                                                                        ],\n                                                                                                                        "required": true\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            ]\n                                                                                                        }\n                                                                                                    }\n                                                                                                ],\n                                                                                                "raw": "DataRecord[]"\n                                                                                            },\n                                                                                            {\n                                                                                                "name": "union",\n                                                                                                "raw": "string | number | boolean | object | object[] | null",\n                                                                                                "elements": [\n                                                                                                    {\n                                                                                                        "name": "string"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "number"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "boolean"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "object"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "Array",\n                                                                                                        "elements": [\n                                                                                                            {\n                                                                                                                "name": "object"\n                                                                                                            }\n                                                                                                        ],\n                                                                                                        "raw": "object[]"\n                                                                                                    },\n                                                                                                    {\n                                                                                                        "name": "null"\n                                                                                                    }\n                                                                                                ],\n                                                                                                "required": true\n                                                                                            },\n                                                                                            {\n                                                                                                "name": "Array",\n                                                                                                "elements": [\n                                                                                                    {\n                                                                                                        "name": "unknown"\n                                                                                                    }\n                                                                                                ],\n                                                                                                "raw": "(string | object)[]"\n                                                                                            },\n                                                                                            {\n                                                                                                "name": "signature",\n                                                                                                "type": "object",\n                                                                                                "raw": "{ [key: string]: object | RecordsArray }",\n                                                                                                "signature": {\n                                                                                                    "properties": [\n                                                                                                        {\n                                                                                                            "key": {\n                                                                                                                "name": "string"\n                                                                                                            },\n                                                                                                            "value": {\n                                                                                                                "name": "union",\n                                                                                                                "raw": "object | RecordsArray",\n                                                                                                                "elements": [\n                                                                                                                    {\n                                                                                                                        "name": "object"\n                                                                                                                    },\n                                                                                                                    {\n                                                                                                                        "name": "Array",\n                                                                                                                        "elements": [\n                                                                                                                            {\n                                                                                                                                "name": "signature",\n                                                                                                                                "type": "object",\n                                                                                                                                "raw": "{ [key: string]: DataCellValue }",\n                                                                                                                                "signature": {\n                                                                                                                                    "properties": [\n                                                                                                                                        {\n                                                                                                                                            "key": {\n                                                                                                                                                "name": "string"\n                                                                                                                                            },\n                                                                                                                                            "value": {\n                                                                                                                                                "name": "union",\n                                                                                                                                                "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                                                "elements": [\n                                                                                                                                                    {\n                                                                                                                                                        "name": "string"\n                                                                                                                                                    },\n                                                                                                                                                    {\n                                                                                                                                                        "name": "number"\n                                                                                                                                                    },\n                                                                                                                                                    {\n                                                                                                                                                        "name": "boolean"\n                                                                                                                                                    },\n                                                                                                                                                    {\n                                                                                                                                                        "name": "object"\n                                                                                                                                                    },\n                                                                                                                                                    {\n                                                                                                                                                        "name": "Array",\n                                                                                                                                                        "elements": [\n                                                                                                                                                            {\n                                                                                                                                                                "name": "object"\n                                                                                                                                                            }\n                                                                                                                                                        ],\n                                                                                                                                                        "raw": "object[]"\n                                                                                                                                                    },\n                                                                                                                                                    {\n                                                                                                                                                        "name": "null"\n                                                                                                                                                    }\n                                                                                                                                                ],\n                                                                                                                                                "required": true\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    ]\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        ],\n                                                                                                                        "raw": "DataRecord[]"\n                                                                                                                    }\n                                                                                                                ],\n                                                                                                                "required": true\n                                                                                                            }\n                                                                                                        }\n                                                                                                    ]\n                                                                                                }\n                                                                                            },\n                                                                                            {\n                                                                                                "name": "undefined"\n                                                                                            }\n                                                                                        ],\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "valuesMap",\n                                                                                    "value": {\n                                                                                        "name": "signature",\n                                                                                        "type": "object",\n                                                                                        "raw": "{\\n  accessor?: DataAccessor;\\n  data?: { [key: string]: DataCellValue };\\n}",\n                                                                                        "signature": {\n                                                                                            "properties": [\n                                                                                                {\n                                                                                                    "key": "accessor",\n                                                                                                    "value": {\n                                                                                                        "name": "signature",\n                                                                                                        "type": "object",\n                                                                                                        "raw": "{\\n  type: AccessorType;\\n  jsonPath?: string;\\n  property?: string;\\n}",\n                                                                                                        "signature": {\n                                                                                                            "properties": [\n                                                                                                                {\n                                                                                                                    "key": "type",\n                                                                                                                    "value": {\n                                                                                                                        "name": "AccessorType",\n                                                                                                                        "required": true\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "jsonPath",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                },\n                                                                                                                {\n                                                                                                                    "key": "property",\n                                                                                                                    "value": {\n                                                                                                                        "name": "string",\n                                                                                                                        "required": false\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            ]\n                                                                                                        },\n                                                                                                        "required": false\n                                                                                                    }\n                                                                                                },\n                                                                                                {\n                                                                                                    "key": "data",\n                                                                                                    "value": {\n                                                                                                        "name": "signature",\n                                                                                                        "type": "object",\n                                                                                                        "raw": "{ [key: string]: DataCellValue }",\n                                                                                                        "signature": {\n                                                                                                            "properties": [\n                                                                                                                {\n                                                                                                                    "key": {\n                                                                                                                        "name": "string"\n                                                                                                                    },\n                                                                                                                    "value": {\n                                                                                                                        "name": "union",\n                                                                                                                        "raw": "string | number | boolean | object | object[] | null",\n                                                                                                                        "elements": [\n                                                                                                                            {\n                                                                                                                                "name": "string"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "number"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "boolean"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "object"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "Array",\n                                                                                                                                "elements": [\n                                                                                                                                    {\n                                                                                                                                        "name": "object"\n                                                                                                                                    }\n                                                                                                                                ],\n                                                                                                                                "raw": "object[]"\n                                                                                                                            },\n                                                                                                                            {\n                                                                                                                                "name": "null"\n                                                                                                                            }\n                                                                                                                        ],\n                                                                                                                        "required": true\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            ]\n                                                                                                        },\n                                                                                                        "required": false\n                                                                                                    }\n                                                                                                }\n                                                                                            ]\n                                                                                        },\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "include",\n                                                                                    "value": {\n                                                                                        "name": "boolean",\n                                                                                        "required": false\n                                                                                    }\n                                                                                },\n                                                                                {\n                                                                                    "key": "splitBy",\n                                                                                    "value": {\n                                                                                        "name": "string",\n                                                                                        "required": false\n                                                                                    }\n                                                                                }\n                                                                            ]\n                                                                        }\n                                                                    }\n                                                                ],\n                                                                "raw": "DataTransformer[]",\n                                                                "required": false\n                                                            },\n                                                            "description": "If specified data is first retrieved and the transformed accordingly (Currently not used)"\n                                                        }\n                                                    ]\n                                                }\n                                            },\n                                            {\n                                                "name": "literal",\n                                                "value": "\'type\'"\n                                            }\n                                        ],\n                                        "raw": "Omit<DataBinding, \'type\'>"\n                                    },\n                                    {\n                                        "name": "signature",\n                                        "type": "object",\n                                        "raw": "{\\n  datasourceId: string;\\n}",\n                                        "signature": {\n                                            "properties": [\n                                                {\n                                                    "key": "datasourceId",\n                                                    "value": {\n                                                        "name": "string",\n                                                        "required": true\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ],\n                                "required": false\n                            },\n                            "description": "Data source binding for the fieldset."\n                        }\n                    ]\n                }\n            },\n            "description": ""\n        },\n        "data": {\n            "required": true,\n            "tsType": {\n                "name": "object"\n            },\n            "description": ""\n        },\n        "jsonPath": {\n            "required": false,\n            "tsType": {\n                "name": "string"\n            },\n            "description": ""\n        },\n        "showHeader": {\n            "required": false,\n            "tsType": {\n                "name": "boolean"\n            },\n            "description": ""\n        },\n        "canDeleteRows": {\n            "required": false,\n            "tsType": {\n                "name": "union",\n                "raw": "boolean | undefined",\n                "elements": [\n                    {\n                        "name": "boolean"\n                    },\n                    {\n                        "name": "undefined"\n                    }\n                ]\n            },\n            "description": ""\n        },\n        "showBorders": {\n            "required": false,\n            "tsType": {\n                "name": "boolean"\n            },\n            "description": ""\n        },\n        "onChange": {\n            "required": false,\n            "tsType": {\n                "name": "signature",\n                "type": "function",\n                "raw": "(data: RecordsArray, isValid: boolean) => void",\n                "signature": {\n                    "arguments": [\n                        {\n                            "type": {\n                                "name": "Array",\n                                "elements": [\n                                    {\n                                        "name": "signature",\n                                        "type": "object",\n                                        "raw": "{ [key: string]: DataCellValue }",\n                                        "signature": {\n                                            "properties": [\n                                                {\n                                                    "key": {\n                                                        "name": "string"\n                                                    },\n                                                    "value": {\n                                                        "name": "union",\n                                                        "raw": "string | number | boolean | object | object[] | null",\n                                                        "elements": [\n                                                            {\n                                                                "name": "string"\n                                                            },\n                                                            {\n                                                                "name": "number"\n                                                            },\n                                                            {\n                                                                "name": "boolean"\n                                                            },\n                                                            {\n                                                                "name": "object"\n                                                            },\n                                                            {\n                                                                "name": "Array",\n                                                                "elements": [\n                                                                    {\n                                                                        "name": "object"\n                                                                    }\n                                                                ],\n                                                                "raw": "object[]"\n                                                            },\n                                                            {\n                                                                "name": "null"\n                                                            }\n                                                        ],\n                                                        "required": true\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                ],\n                                "raw": "DataRecord[]"\n                            },\n                            "name": "data"\n                        },\n                        {\n                            "type": {\n                                "name": "boolean"\n                            },\n                            "name": "isValid"\n                        }\n                    ],\n                    "return": {\n                        "name": "void"\n                    }\n                }\n            },\n            "description": ""\n        },\n        "minItemsRequired": {\n            "required": false,\n            "tsType": {\n                "name": "number"\n            },\n            "description": ""\n        }\n    }\n};\n\n;// ./src/stories/ListEditor.stories.tsx\n\n\nconst meta = {\n  title: \'BULMA/List Editor\',\n  component: ListEditorWrapper,\n  decorators: [],\n  parameters: {}\n};\n/* harmony default export */ const ListEditor_stories = (meta);\nconst Basic = {\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = (0,dist/* within */.ux)(canvasElement);\n    const staticText = await canvas.findByText(\'Static Text Value 1\');\n    (0,dist/* expect */.E3)(staticText).toBeInTheDocument();\n    const textInput = await canvas.findByTestId(\'text-textValue-0\');\n    (0,dist/* expect */.E3)(textInput).toBeInTheDocument();\n    (0,dist/* expect */.E3)(textInput).toHaveAttribute(\'value\');\n    (0,dist/* expect */.E3)(textInput.getAttribute(\'value\')).toBe(\'Text Value 1\');\n  },\n  args: {\n    rowFieldset: {\n      name: \'testFieldSet\',\n      fieldLayout: \'compact\',\n      arrangeFields: \'row\',\n      fields: [{\n        label: \'Some Label\',\n        name: \'textValue\',\n        type: \'text\'\n      }, {\n        label: \'Another Label 123\',\n        name: \'selector\',\n        type: \'select\',\n        options: [\'Selector Value 1\', \'Value 2\']\n      }, {\n        label: \'\',\n        name: \'staticText\',\n        type: \'staticText\'\n      }, {\n        label: \'\',\n        name: \'tagKeyLabel\',\n        type: \'staticText\'\n      }, {\n        label: \'Tags Selector\',\n        name: \'tagsSelector\',\n        options: \'!{tagsSelector__options}\',\n        placeHolderText: \'Select Tag\',\n        type: \'select\'\n      }]\n    },\n    data: [{\n      staticText: \'Static Text Value 1\',\n      textValue: \'Text Value 1\',\n      selector: \'Selector Value 1\',\n      tagsSelector__options: [\'tag1\', \'tag2\'],\n      tagKeyLabel: \'TagKey1\',\n      tagsSelector: \'tag2\'\n    }, {\n      staticText: \'Static Text Value 2\',\n      textValue: \'Text Value 2\',\n      selector: \'Selector Value 2\',\n      tagsSelector__options: [\'tag aa\', \'tag bb\'],\n      tagKeyLabel: \'TagKey1\'\n    }]\n  }\n};\nconst WithBorder = {\n  args: {\n    showBorders: true,\n    rowFieldset: {\n      name: \'testFieldSet\',\n      fieldLayout: \'compact\',\n      arrangeFields: \'row\',\n      fields: [{\n        label: \'Some Label\',\n        name: \'staticText\',\n        type: \'text\'\n      }, {\n        label: \'Another Label 123\',\n        name: \'selector\',\n        type: \'staticText\'\n      }, {\n        label: \'\',\n        name: \'tagKeyLabel\',\n        type: \'staticText\'\n      }, {\n        label: \'Tags Selector\',\n        name: \'tagsSelector\',\n        options: \'!{tagsSelector__options}\',\n        placeHolderText: \'Select Tag\',\n        type: \'select\'\n      }]\n    },\n    data: [{\n      staticText: \'Static Text Value 1\',\n      selector: \'Selector Value 1\',\n      tagsSelector__options: [\'tag1\', \'tag2\'],\n      tagKeyLabel: \'TagKey1\',\n      tagsSelector: \'tag2\'\n    }, {\n      staticText: \'Static Text Value 2\',\n      selector: \'Selector Value 2\',\n      tagsSelector__options: [\'tag aa\', \'tag bb\'],\n      tagKeyLabel: \'TagKey1\'\n    }]\n  }\n};\nconst WithHeaders = {\n  args: {\n    showBorders: true,\n    canDeleteRows: true,\n    showHeader: true,\n    rowFieldset: {\n      name: \'testFieldSet\',\n      fieldLayout: \'compact\',\n      arrangeFields: \'row\',\n      fields: [{\n        label: \'Some Label\',\n        name: \'staticText\',\n        type: \'text\'\n      }, {\n        label: \'Another Label 123\',\n        name: \'selector\',\n        type: \'staticText\'\n      }, {\n        label: \'\',\n        name: \'tagKeyLabel\',\n        type: \'staticText\'\n      }, {\n        label: \'Tags Selector\',\n        name: \'tagsSelector\',\n        options: \'!{tagsSelector__options}\',\n        placeHolderText: \'Select Tag\',\n        type: \'select\'\n      }]\n    },\n    data: [{\n      staticText: \'Static Text Value 1\',\n      selector: \'Selector Value 1\',\n      tagsSelector__options: [\'tag1\', \'tag2\'],\n      tagKeyLabel: \'TagKey1\',\n      tagsSelector: \'tag2\'\n    }, {\n      staticText: \'Static Text Value 2\',\n      selector: \'Selector Value 2\',\n      tagsSelector__options: [\'tag aa\', \'tag bb\'],\n      tagKeyLabel: \'TagKey1\'\n    }]\n  }\n};\n;\nconst __namedExportsOrder = ["Basic", "WithBorder", "WithHeaders"];\nBasic.parameters = {\n  ...Basic.parameters,\n  docs: {\n    ...Basic.parameters?.docs,\n    source: {\n      originalSource: "{\\n  play: async ({\\n    canvasElement\\n  }) => {\\n    const canvas = within(canvasElement);\\n    const staticText = await canvas.findByText(\'Static Text Value 1\');\\n    expect(staticText).toBeInTheDocument();\\n    const textInput = await canvas.findByTestId(\'text-textValue-0\');\\n    expect(textInput).toBeInTheDocument();\\n    expect(textInput).toHaveAttribute(\'value\');\\n    expect(textInput.getAttribute(\'value\')).toBe(\'Text Value 1\');\\n  },\\n  args: {\\n    rowFieldset: {\\n      name: \'testFieldSet\',\\n      fieldLayout: \'compact\',\\n      arrangeFields: \'row\',\\n      fields: [{\\n        label: \'Some Label\',\\n        name: \'textValue\',\\n        type: \'text\'\\n      }, {\\n        label: \'Another Label 123\',\\n        name: \'selector\',\\n        type: \'select\',\\n        options: [\'Selector Value 1\', \'Value 2\']\\n      }, {\\n        label: \'\',\\n        name: \'staticText\',\\n        type: \'staticText\'\\n      }, {\\n        label: \'\',\\n        name: \'tagKeyLabel\',\\n        type: \'staticText\'\\n      }, {\\n        label: \'Tags Selector\',\\n        name: \'tagsSelector\',\\n        options: \'!{tagsSelector__options}\',\\n        placeHolderText: \'Select Tag\',\\n        type: \'select\'\\n      }]\\n    } as FieldSetMetadata,\\n    data: [{\\n      staticText: \'Static Text Value 1\',\\n      textValue: \'Text Value 1\',\\n      selector: \'Selector Value 1\',\\n      tagsSelector__options: [\'tag1\', \'tag2\'],\\n      tagKeyLabel: \'TagKey1\',\\n      tagsSelector: \'tag2\'\\n    }, {\\n      staticText: \'Static Text Value 2\',\\n      textValue: \'Text Value 2\',\\n      selector: \'Selector Value 2\',\\n      tagsSelector__options: [\'tag aa\', \'tag bb\'],\\n      tagKeyLabel: \'TagKey1\'\\n    }]\\n  }\\n}",\n      ...Basic.parameters?.docs?.source\n    }\n  }\n};\nWithBorder.parameters = {\n  ...WithBorder.parameters,\n  docs: {\n    ...WithBorder.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    showBorders: true,\\n    rowFieldset: {\\n      name: \'testFieldSet\',\\n      fieldLayout: \'compact\',\\n      arrangeFields: \'row\',\\n      fields: [{\\n        label: \'Some Label\',\\n        name: \'staticText\',\\n        type: \'text\'\\n      }, {\\n        label: \'Another Label 123\',\\n        name: \'selector\',\\n        type: \'staticText\'\\n      }, {\\n        label: \'\',\\n        name: \'tagKeyLabel\',\\n        type: \'staticText\'\\n      }, {\\n        label: \'Tags Selector\',\\n        name: \'tagsSelector\',\\n        options: \'!{tagsSelector__options}\',\\n        placeHolderText: \'Select Tag\',\\n        type: \'select\'\\n      }]\\n    } as FieldSetMetadata,\\n    data: [{\\n      staticText: \'Static Text Value 1\',\\n      selector: \'Selector Value 1\',\\n      tagsSelector__options: [\'tag1\', \'tag2\'],\\n      tagKeyLabel: \'TagKey1\',\\n      tagsSelector: \'tag2\'\\n    }, {\\n      staticText: \'Static Text Value 2\',\\n      selector: \'Selector Value 2\',\\n      tagsSelector__options: [\'tag aa\', \'tag bb\'],\\n      tagKeyLabel: \'TagKey1\'\\n    }]\\n  }\\n}",\n      ...WithBorder.parameters?.docs?.source\n    }\n  }\n};\nWithHeaders.parameters = {\n  ...WithHeaders.parameters,\n  docs: {\n    ...WithHeaders.parameters?.docs,\n    source: {\n      originalSource: "{\\n  args: {\\n    showBorders: true,\\n    canDeleteRows: true,\\n    showHeader: true,\\n    rowFieldset: {\\n      name: \'testFieldSet\',\\n      fieldLayout: \'compact\',\\n      arrangeFields: \'row\',\\n      fields: [{\\n        label: \'Some Label\',\\n        name: \'staticText\',\\n        type: \'text\'\\n      }, {\\n        label: \'Another Label 123\',\\n        name: \'selector\',\\n        type: \'staticText\'\\n      }, {\\n        label: \'\',\\n        name: \'tagKeyLabel\',\\n        type: \'staticText\'\\n      }, {\\n        label: \'Tags Selector\',\\n        name: \'tagsSelector\',\\n        options: \'!{tagsSelector__options}\',\\n        placeHolderText: \'Select Tag\',\\n        type: \'select\'\\n      }]\\n    } as FieldSetMetadata,\\n    data: [{\\n      staticText: \'Static Text Value 1\',\\n      selector: \'Selector Value 1\',\\n      tagsSelector__options: [\'tag1\', \'tag2\'],\\n      tagKeyLabel: \'TagKey1\',\\n      tagsSelector: \'tag2\'\\n    }, {\\n      staticText: \'Static Text Value 2\',\\n      selector: \'Selector Value 2\',\\n      tagsSelector__options: [\'tag aa\', \'tag bb\'],\\n      tagKeyLabel: \'TagKey1\'\\n    }]\\n  }\\n}",\n      ...WithHeaders.parameters?.docs?.source\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/stories/ListEditor.stories.tsx\n')}}]);